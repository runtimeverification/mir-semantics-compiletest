// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
<impl at ui/layout/big-type-no-err.rs:7:1: 7:31>::{constant#0}: usize = {
    let mut _0: usize;                   // return place in scope 0 at ui/layout/big-type-no-err.rs:7:20: 7:30

    bb0: {
        _0 = const _;                    // scope 0 at ui/layout/big-type-no-err.rs:7:20: 7:30
        return;                          // scope 0 at ui/layout/big-type-no-err.rs:7:20: 7:30
    }
}

fn main() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/layout/big-type-no-err.rs:11:11: 11:11
    let _1: std::option::Option<u32>;    // in scope 0 at ui/layout/big-type-no-err.rs:12:9: 12:11
    scope 1 {
        debug _a => _1;                  // in scope 1 at ui/layout/big-type-no-err.rs:12:9: 12:11
    }

    bb0: {
        _1 = Option::<u32>::None;        // scope 0 at ui/layout/big-type-no-err.rs:12:57: 12:61
        return;                          // scope 0 at ui/layout/big-type-no-err.rs:13:2: 13:2
    }
}

main::{constant#0}: usize = {
    let mut _0: usize;                   // return place in scope 0 at ui/layout/big-type-no-err.rs:12:27: 12:37

    bb0: {
        _0 = const _;                    // scope 0 at ui/layout/big-type-no-err.rs:12:27: 12:37
        return;                          // scope 0 at ui/layout/big-type-no-err.rs:12:27: 12:37
    }
}
