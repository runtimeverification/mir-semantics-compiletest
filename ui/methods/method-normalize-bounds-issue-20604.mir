// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
fn <impl at ui/methods/method-normalize-bounds-issue-20604.rs:31:1: 31:26>::finish(_1: &SipHasher) -> u64 {
    debug self => _1;                    // in scope 0 at ui/methods/method-normalize-bounds-issue-20604.rs:33:15: 33:20
    let mut _0: u64;                     // return place in scope 0 at ui/methods/method-normalize-bounds-issue-20604.rs:33:25: 33:28

    bb0: {
        _0 = const 4_u64;                // scope 0 at ui/methods/method-normalize-bounds-issue-20604.rs:33:31: 33:32
        return;                          // scope 0 at ui/methods/method-normalize-bounds-issue-20604.rs:33:34: 33:34
    }
}

fn <impl at ui/methods/method-normalize-bounds-issue-20604.rs:36:1: 36:31>::hash(_1: &isize, _2: &mut SipHasher) -> () {
    debug self => _1;                    // in scope 0 at ui/methods/method-normalize-bounds-issue-20604.rs:37:13: 37:18
    debug h => _2;                       // in scope 0 at ui/methods/method-normalize-bounds-issue-20604.rs:37:20: 37:21
    let mut _0: ();                      // return place in scope 0 at ui/methods/method-normalize-bounds-issue-20604.rs:37:39: 37:39

    bb0: {
        return;                          // scope 0 at ui/methods/method-normalize-bounds-issue-20604.rs:37:41: 37:41
    }
}

fn <impl at ui/methods/method-normalize-bounds-issue-20604.rs:41:1: 41:28>::hasher(_1: &SipState) -> SipHasher {
    debug self => _1;                    // in scope 0 at ui/methods/method-normalize-bounds-issue-20604.rs:43:15: 43:20
    let mut _0: SipHasher;               // return place in scope 0 at ui/methods/method-normalize-bounds-issue-20604.rs:43:25: 43:34

    bb0: {
        return;                          // scope 0 at ui/methods/method-normalize-bounds-issue-20604.rs:43:48: 43:48
    }
}

fn <impl at ui/methods/method-normalize-bounds-issue-20604.rs:50:1: 50:15>::foo(_1: &Map<S>, _2: K) -> () {
    debug self => _1;                    // in scope 0 at ui/methods/method-normalize-bounds-issue-20604.rs:54:15: 54:20
    debug k => _2;                       // in scope 0 at ui/methods/method-normalize-bounds-issue-20604.rs:54:22: 54:23
    let mut _0: ();                      // return place in scope 0 at ui/methods/method-normalize-bounds-issue-20604.rs:54:28: 54:28

    bb0: {
        drop(_2) -> bb1;                 // scope 0 at ui/methods/method-normalize-bounds-issue-20604.rs:54:67: 54:68
    }

    bb1: {
        return;                          // scope 0 at ui/methods/method-normalize-bounds-issue-20604.rs:54:68: 54:68
    }
}

fn foo(_1: &Map<SipState>) -> () {
    debug map => _1;                     // in scope 0 at ui/methods/method-normalize-bounds-issue-20604.rs:57:28: 57:31
    let mut _0: ();                      // return place in scope 0 at ui/methods/method-normalize-bounds-issue-20604.rs:57:49: 57:49
    let _2: ();                          // in scope 0 at ui/methods/method-normalize-bounds-issue-20604.rs:58:5: 58:16
    let mut _3: &Map<SipState>;          // in scope 0 at ui/methods/method-normalize-bounds-issue-20604.rs:58:5: 58:16

    bb0: {
        _3 = _1;                         // scope 0 at ui/methods/method-normalize-bounds-issue-20604.rs:58:5: 58:16
        _2 = Map::<SipState>::foo::<isize>(move _3, const 22_isize) -> bb1; // scope 0 at ui/methods/method-normalize-bounds-issue-20604.rs:58:5: 58:16
                                         // mir::Constant
                                         // + span: ui/methods/method-normalize-bounds-issue-20604.rs:58:9: 58:12
                                         // + literal: Const { ty: for<'a> fn(&'a Map<SipState>, isize) {Map::<SipState>::foo::<isize>}, val: Value(<ZST>) }
    }

    bb1: {
        return;                          // scope 0 at ui/methods/method-normalize-bounds-issue-20604.rs:59:2: 59:2
    }
}

fn main() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/methods/method-normalize-bounds-issue-20604.rs:61:11: 61:11

    bb0: {
        return;                          // scope 0 at ui/methods/method-normalize-bounds-issue-20604.rs:61:13: 61:13
    }
}
