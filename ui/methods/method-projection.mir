// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
fn <impl at ui/methods/method-projection.rs:9:1: 9:26>::make_string(_1: &isize) -> String {
    debug self => _1;                    // in scope 0 at ui/methods/method-projection.rs:10:20: 10:25
    let mut _0: std::string::String;     // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:13: 118:16
    let mut _2: std::fmt::Arguments<'_>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
    let mut _3: &[&str];                 // in scope 0 at ui/methods/method-projection.rs:11:17: 11:21
    let mut _4: &[&str; 1];              // in scope 0 at ui/methods/method-projection.rs:11:17: 11:21
    let _5: &[&str; 1];                  // in scope 0 at ui/methods/method-projection.rs:11:17: 11:21
    let mut _6: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
    let mut _7: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
    let _8: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
    let _9: [core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
    let mut _10: core::fmt::ArgumentV1<'_>; // in scope 0 at ui/methods/method-projection.rs:11:23: 11:28
    let mut _11: &isize;                 // in scope 0 at ui/methods/method-projection.rs:11:23: 11:28
    let _12: &isize;                     // in scope 0 at ui/methods/method-projection.rs:11:23: 11:28
    let mut _13: &[&str; 1];             // in scope 0 at ui/methods/method-projection.rs:11:17: 11:21
    scope 1 {
        debug res => _0;                 // in scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:13: 118:16
    }

    bb0: {
        _13 = const _;                   // scope 0 at ui/methods/method-projection.rs:11:17: 11:21
                                         // mir::Constant
                                         // + span: ui/methods/method-projection.rs:11:17: 11:21
                                         // + literal: Const { ty: &[&str; 1], val: Unevaluated(<isize as MakeString>::make_string, [], Some(promoted[0])) }
        _5 = _13;                        // scope 0 at ui/methods/method-projection.rs:11:17: 11:21
        _4 = _5;                         // scope 0 at ui/methods/method-projection.rs:11:17: 11:21
        _3 = move _4 as &[&str] (Pointer(Unsize)); // scope 0 at ui/methods/method-projection.rs:11:17: 11:21
        _12 = _1;                        // scope 0 at ui/methods/method-projection.rs:11:23: 11:28
        _11 = _12;                       // scope 0 at ui/methods/method-projection.rs:11:23: 11:28
        _10 = core::fmt::ArgumentV1::<'_>::new_display::<isize>(move _11) -> bb1; // scope 0 at ui/methods/method-projection.rs:11:23: 11:28
                                         // mir::Constant
                                         // + span: ui/methods/method-projection.rs:11:23: 11:28
                                         // + user_ty: UserType(1)
                                         // + literal: Const { ty: for<'b> fn(&'b isize) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_display::<isize>}, val: Value(<ZST>) }
    }

    bb1: {
        _9 = [move _10];                 // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
        _8 = &_9;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
        _7 = _8;                         // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
        _6 = move _7 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
        _2 = Arguments::<'_>::new_v1(move _3, move _6) -> bb2; // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb2: {
        _0 = format(move _2) -> bb3;     // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:19: 118:80
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:19: 118:38
                                         // + literal: Const { ty: for<'a> fn(Arguments<'a>) -> String {format}, val: Value(<ZST>) }
    }

    bb3: {
        return;                          // scope 0 at ui/methods/method-projection.rs:12:6: 12:6
    }
}

promoted[0] in <impl at ui/methods/method-projection.rs:9:1: 9:26>::make_string: &[&str; 1] = {
    let mut _0: &[&str; 1];              // return place in scope 0 at ui/methods/method-projection.rs:11:17: 11:21
    let mut _1: [&str; 1];               // in scope 0 at ui/methods/method-projection.rs:11:17: 11:21

    bb0: {
        _1 = [const ""];                 // scope 0 at ui/methods/method-projection.rs:11:17: 11:21
                                         // mir::Constant
                                         // + span: ui/methods/method-projection.rs:11:17: 11:21
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at ui/methods/method-projection.rs:11:17: 11:21
        return;                          // scope 0 at ui/methods/method-projection.rs:11:17: 11:21
    }
}

fn <impl at ui/methods/method-projection.rs:15:1: 15:26>::make_string(_1: &usize) -> String {
    debug self => _1;                    // in scope 0 at ui/methods/method-projection.rs:16:20: 16:25
    let mut _0: std::string::String;     // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:13: 118:16
    let mut _2: std::fmt::Arguments<'_>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
    let mut _3: &[&str];                 // in scope 0 at ui/methods/method-projection.rs:17:17: 17:21
    let mut _4: &[&str; 1];              // in scope 0 at ui/methods/method-projection.rs:17:17: 17:21
    let _5: &[&str; 1];                  // in scope 0 at ui/methods/method-projection.rs:17:17: 17:21
    let mut _6: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
    let mut _7: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
    let _8: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
    let _9: [core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
    let mut _10: core::fmt::ArgumentV1<'_>; // in scope 0 at ui/methods/method-projection.rs:17:23: 17:28
    let mut _11: &usize;                 // in scope 0 at ui/methods/method-projection.rs:17:23: 17:28
    let _12: &usize;                     // in scope 0 at ui/methods/method-projection.rs:17:23: 17:28
    let mut _13: &[&str; 1];             // in scope 0 at ui/methods/method-projection.rs:17:17: 17:21
    scope 1 {
        debug res => _0;                 // in scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:13: 118:16
    }

    bb0: {
        _13 = const _;                   // scope 0 at ui/methods/method-projection.rs:17:17: 17:21
                                         // mir::Constant
                                         // + span: ui/methods/method-projection.rs:17:17: 17:21
                                         // + literal: Const { ty: &[&str; 1], val: Unevaluated(<usize as MakeString>::make_string, [], Some(promoted[0])) }
        _5 = _13;                        // scope 0 at ui/methods/method-projection.rs:17:17: 17:21
        _4 = _5;                         // scope 0 at ui/methods/method-projection.rs:17:17: 17:21
        _3 = move _4 as &[&str] (Pointer(Unsize)); // scope 0 at ui/methods/method-projection.rs:17:17: 17:21
        _12 = _1;                        // scope 0 at ui/methods/method-projection.rs:17:23: 17:28
        _11 = _12;                       // scope 0 at ui/methods/method-projection.rs:17:23: 17:28
        _10 = core::fmt::ArgumentV1::<'_>::new_display::<usize>(move _11) -> bb1; // scope 0 at ui/methods/method-projection.rs:17:23: 17:28
                                         // mir::Constant
                                         // + span: ui/methods/method-projection.rs:17:23: 17:28
                                         // + user_ty: UserType(1)
                                         // + literal: Const { ty: for<'b> fn(&'b usize) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_display::<usize>}, val: Value(<ZST>) }
    }

    bb1: {
        _9 = [move _10];                 // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
        _8 = &_9;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
        _7 = _8;                         // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
        _6 = move _7 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
        _2 = Arguments::<'_>::new_v1(move _3, move _6) -> bb2; // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb2: {
        _0 = format(move _2) -> bb3;     // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:19: 118:80
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:19: 118:38
                                         // + literal: Const { ty: for<'a> fn(Arguments<'a>) -> String {format}, val: Value(<ZST>) }
    }

    bb3: {
        return;                          // scope 0 at ui/methods/method-projection.rs:18:6: 18:6
    }
}

promoted[0] in <impl at ui/methods/method-projection.rs:15:1: 15:26>::make_string: &[&str; 1] = {
    let mut _0: &[&str; 1];              // return place in scope 0 at ui/methods/method-projection.rs:17:17: 17:21
    let mut _1: [&str; 1];               // in scope 0 at ui/methods/method-projection.rs:17:17: 17:21

    bb0: {
        _1 = [const ""];                 // scope 0 at ui/methods/method-projection.rs:17:17: 17:21
                                         // mir::Constant
                                         // + span: ui/methods/method-projection.rs:17:17: 17:21
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at ui/methods/method-projection.rs:17:17: 17:21
        return;                          // scope 0 at ui/methods/method-projection.rs:17:17: 17:21
    }
}

fn foo(_1: &F) -> String {
    debug f => _1;                       // in scope 0 at ui/methods/method-projection.rs:27:15: 27:16
    let mut _0: std::string::String;     // return place in scope 0 at ui/methods/method-projection.rs:27:25: 27:31
    let mut _2: &<F as Foo>::F;          // in scope 0 at ui/methods/method-projection.rs:28:5: 28:26
    let _3: &<F as Foo>::F;              // in scope 0 at ui/methods/method-projection.rs:28:5: 28:12
    let mut _4: &F;                      // in scope 0 at ui/methods/method-projection.rs:28:5: 28:12

    bb0: {
        _4 = _1;                         // scope 0 at ui/methods/method-projection.rs:28:5: 28:12
        _3 = <F as Foo>::get(move _4) -> bb1; // scope 0 at ui/methods/method-projection.rs:28:5: 28:12
                                         // mir::Constant
                                         // + span: ui/methods/method-projection.rs:28:7: 28:10
                                         // + literal: Const { ty: for<'a> fn(&'a F) -> &'a <F as Foo>::F {<F as Foo>::get}, val: Value(<ZST>) }
    }

    bb1: {
        _2 = _3;                         // scope 0 at ui/methods/method-projection.rs:28:5: 28:26
        _0 = <<F as Foo>::F as MakeString>::make_string(move _2) -> bb2; // scope 0 at ui/methods/method-projection.rs:28:5: 28:26
                                         // mir::Constant
                                         // + span: ui/methods/method-projection.rs:28:13: 28:24
                                         // + literal: Const { ty: for<'a> fn(&'a <F as Foo>::F) -> String {<<F as Foo>::F as MakeString>::make_string}, val: Value(<ZST>) }
    }

    bb2: {
        return;                          // scope 0 at ui/methods/method-projection.rs:29:2: 29:2
    }
}

fn <impl at ui/methods/method-projection.rs:35:1: 35:24>::get(_1: &SomeStruct) -> &isize {
    debug self => _1;                    // in scope 0 at ui/methods/method-projection.rs:38:12: 38:17
    let mut _0: &isize;                  // return place in scope 0 at ui/methods/method-projection.rs:39:9: 39:20

    bb0: {
        _0 = &((*_1).0: isize);          // scope 0 at ui/methods/method-projection.rs:39:9: 39:20
        return;                          // scope 0 at ui/methods/method-projection.rs:40:6: 40:6
    }
}

fn <impl at ui/methods/method-projection.rs:47:1: 47:29>::get(_1: &SomeOtherStruct) -> &usize {
    debug self => _1;                    // in scope 0 at ui/methods/method-projection.rs:50:12: 50:17
    let mut _0: &usize;                  // return place in scope 0 at ui/methods/method-projection.rs:51:9: 51:20

    bb0: {
        _0 = &((*_1).0: usize);          // scope 0 at ui/methods/method-projection.rs:51:9: 51:20
        return;                          // scope 0 at ui/methods/method-projection.rs:52:6: 52:6
    }
}

fn main() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/methods/method-projection.rs:55:11: 55:11
    let _1: SomeStruct;                  // in scope 0 at ui/methods/method-projection.rs:56:9: 56:10
    let mut _2: (&std::string::String, &std::string::String); // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _3: &std::string::String;    // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let _4: std::string::String;         // in scope 0 at ui/methods/method-projection.rs:57:16: 57:23
    let mut _5: &SomeStruct;             // in scope 0 at ui/methods/method-projection.rs:57:20: 57:22
    let _6: &SomeStruct;                 // in scope 0 at ui/methods/method-projection.rs:57:20: 57:22
    let mut _7: &std::string::String;    // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let _8: std::string::String;         // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:117:23: 120:6
    let mut _10: std::fmt::Arguments<'_>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
    let mut _11: &[&str];                // in scope 0 at ui/methods/method-projection.rs:57:33: 57:37
    let mut _12: &[&str; 1];             // in scope 0 at ui/methods/method-projection.rs:57:33: 57:37
    let _13: &[&str; 1];                 // in scope 0 at ui/methods/method-projection.rs:57:33: 57:37
    let mut _14: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
    let mut _15: &[core::fmt::ArgumentV1<'_>; 0]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
    let _16: &[core::fmt::ArgumentV1<'_>; 0]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
    let mut _19: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    let mut _20: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
    let mut _21: &std::string::String;   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
    let mut _22: &std::string::String;   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
    let _24: !;                          // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
    let mut _25: core::panicking::AssertKind; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
    let mut _26: &std::string::String;   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let _27: &std::string::String;       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let mut _28: &std::string::String;   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let _29: &std::string::String;       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let mut _30: std::option::Option<std::fmt::Arguments<'_>>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
    let mut _32: (&std::string::String, &std::string::String); // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _33: &std::string::String;   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let _34: std::string::String;        // in scope 0 at ui/methods/method-projection.rs:60:16: 60:23
    let mut _35: &SomeOtherStruct;       // in scope 0 at ui/methods/method-projection.rs:60:20: 60:22
    let _36: &SomeOtherStruct;           // in scope 0 at ui/methods/method-projection.rs:60:20: 60:22
    let mut _37: &std::string::String;   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let _38: std::string::String;        // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:117:23: 120:6
    let mut _40: std::fmt::Arguments<'_>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
    let mut _41: &[&str];                // in scope 0 at ui/methods/method-projection.rs:60:33: 60:37
    let mut _42: &[&str; 1];             // in scope 0 at ui/methods/method-projection.rs:60:33: 60:37
    let _43: &[&str; 1];                 // in scope 0 at ui/methods/method-projection.rs:60:33: 60:37
    let mut _44: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
    let mut _45: &[core::fmt::ArgumentV1<'_>; 0]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
    let _46: &[core::fmt::ArgumentV1<'_>; 0]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
    let mut _49: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    let mut _50: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
    let mut _51: &std::string::String;   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
    let mut _52: &std::string::String;   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
    let _54: !;                          // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
    let mut _55: core::panicking::AssertKind; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
    let mut _56: &std::string::String;   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let _57: &std::string::String;       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let mut _58: &std::string::String;   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let _59: &std::string::String;       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let mut _60: std::option::Option<std::fmt::Arguments<'_>>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
    scope 1 {
        debug x => _1;                   // in scope 1 at ui/methods/method-projection.rs:56:9: 56:10
        let _9: std::string::String;     // in scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:13: 118:16
        let _17: &std::string::String;   // in scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        let _18: &std::string::String;   // in scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        let _31: SomeOtherStruct;        // in scope 1 at ui/methods/method-projection.rs:59:9: 59:10
        let mut _63: &[core::fmt::ArgumentV1<'_>; 0]; // in scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
        let mut _64: &[&str; 1];         // in scope 1 at ui/methods/method-projection.rs:57:33: 57:37
        scope 2 {
            debug res => _9;             // in scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:13: 118:16
        }
        scope 3 {
            debug left_val => _17;       // in scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
            debug right_val => _18;      // in scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
            let _23: core::panicking::AssertKind; // in scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
            scope 4 {
                debug kind => _23;       // in scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
            }
        }
        scope 5 {
            debug x => _31;              // in scope 5 at ui/methods/method-projection.rs:59:9: 59:10
            let _39: std::string::String; // in scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:13: 118:16
            let _47: &std::string::String; // in scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
            let _48: &std::string::String; // in scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
            let mut _61: &[core::fmt::ArgumentV1<'_>; 0]; // in scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
            let mut _62: &[&str; 1];     // in scope 5 at ui/methods/method-projection.rs:60:33: 60:37
            scope 6 {
                debug res => _39;        // in scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:13: 118:16
            }
            scope 7 {
                debug left_val => _47;   // in scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
                debug right_val => _48;  // in scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
                let _53: core::panicking::AssertKind; // in scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                scope 8 {
                    debug kind => _53;   // in scope 8 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                }
            }
        }
    }

    bb0: {
        _1 = SomeStruct { field: const 22_isize }; // scope 0 at ui/methods/method-projection.rs:56:13: 56:37
        _6 = &_1;                        // scope 1 at ui/methods/method-projection.rs:57:20: 57:22
        _5 = _6;                         // scope 1 at ui/methods/method-projection.rs:57:20: 57:22
        _4 = foo::<SomeStruct>(move _5) -> bb1; // scope 1 at ui/methods/method-projection.rs:57:16: 57:23
                                         // mir::Constant
                                         // + span: ui/methods/method-projection.rs:57:16: 57:19
                                         // + literal: Const { ty: for<'a> fn(&'a SomeStruct) -> String {foo::<SomeStruct>}, val: Value(<ZST>) }
    }

    bb1: {
        _3 = &_4;                        // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _64 = const _;                   // scope 1 at ui/methods/method-projection.rs:57:33: 57:37
                                         // mir::Constant
                                         // + span: ui/methods/method-projection.rs:57:33: 57:37
                                         // + literal: Const { ty: &[&str; 1], val: Unevaluated(main, [], Some(promoted[3])) }
        _13 = _64;                       // scope 1 at ui/methods/method-projection.rs:57:33: 57:37
        _12 = _13;                       // scope 1 at ui/methods/method-projection.rs:57:33: 57:37
        _11 = move _12 as &[&str] (Pointer(Unsize)); // scope 1 at ui/methods/method-projection.rs:57:33: 57:37
        _63 = const _;                   // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
                                         // + literal: Const { ty: &[core::fmt::ArgumentV1<'_>; 0], val: Unevaluated(main, [], Some(promoted[2])) }
        _16 = _63;                       // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
        _15 = _16;                       // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
        _14 = move _15 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
        _10 = Arguments::<'_>::new_v1(move _11, move _14) -> [return: bb2, unwind: bb20]; // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb2: {
        _9 = format(move _10) -> [return: bb3, unwind: bb20]; // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:19: 118:80
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:19: 118:38
                                         // + literal: Const { ty: for<'a> fn(Arguments<'a>) -> String {format}, val: Value(<ZST>) }
    }

    bb3: {
        _8 = move _9;                    // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:119:9: 119:12
        _7 = &_8;                        // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _2 = (move _3, move _7);         // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _17 = (_2.0: &std::string::String); // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _18 = (_2.1: &std::string::String); // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _21 = _17;                       // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
        _22 = _18;                       // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
        _20 = <String as PartialEq>::eq(move _21, move _22) -> [return: bb4, unwind: bb19]; // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a String, &'b String) -> bool {<String as PartialEq>::eq}, val: Value(<ZST>) }
    }

    bb4: {
        _19 = Not(move _20);             // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
        switchInt(move _19) -> [0: bb6, otherwise: bb5]; // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    }

    bb5: {
        _23 = const core::panicking::AssertKind::Eq; // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _25 = const core::panicking::AssertKind::Eq; // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _27 = _17;                       // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _26 = _27;                       // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _29 = _18;                       // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _28 = _29;                       // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _30 = Option::<Arguments<'_>>::None; // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
        _24 = core::panicking::assert_failed::<String, String>(move _25, move _26, move _28, move _30) -> bb19; // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:53
                                         // + literal: Const { ty: for<'a, 'b, 'c> fn(core::panicking::AssertKind, &'a String, &'b String, Option<Arguments<'c>>) -> ! {core::panicking::assert_failed::<String, String>}, val: Value(<ZST>) }
    }

    bb6: {
        drop(_8) -> [return: bb7, unwind: bb20]; // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:48:9: 48:10
    }

    bb7: {
        drop(_4) -> bb8;                 // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:48:9: 48:10
    }

    bb8: {
        _31 = SomeOtherStruct { field: const 44_usize }; // scope 1 at ui/methods/method-projection.rs:59:13: 59:42
        _36 = &_31;                      // scope 5 at ui/methods/method-projection.rs:60:20: 60:22
        _35 = _36;                       // scope 5 at ui/methods/method-projection.rs:60:20: 60:22
        _34 = foo::<SomeOtherStruct>(move _35) -> bb9; // scope 5 at ui/methods/method-projection.rs:60:16: 60:23
                                         // mir::Constant
                                         // + span: ui/methods/method-projection.rs:60:16: 60:19
                                         // + literal: Const { ty: for<'a> fn(&'a SomeOtherStruct) -> String {foo::<SomeOtherStruct>}, val: Value(<ZST>) }
    }

    bb9: {
        _33 = &_34;                      // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _62 = const _;                   // scope 5 at ui/methods/method-projection.rs:60:33: 60:37
                                         // mir::Constant
                                         // + span: ui/methods/method-projection.rs:60:33: 60:37
                                         // + literal: Const { ty: &[&str; 1], val: Unevaluated(main, [], Some(promoted[1])) }
        _43 = _62;                       // scope 5 at ui/methods/method-projection.rs:60:33: 60:37
        _42 = _43;                       // scope 5 at ui/methods/method-projection.rs:60:33: 60:37
        _41 = move _42 as &[&str] (Pointer(Unsize)); // scope 5 at ui/methods/method-projection.rs:60:33: 60:37
        _61 = const _;                   // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
                                         // + literal: Const { ty: &[core::fmt::ArgumentV1<'_>; 0], val: Unevaluated(main, [], Some(promoted[0])) }
        _46 = _61;                       // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
        _45 = _46;                       // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
        _44 = move _45 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
        _40 = Arguments::<'_>::new_v1(move _41, move _44) -> [return: bb10, unwind: bb18]; // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
                                         // + user_ty: UserType(1)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb10: {
        _39 = format(move _40) -> [return: bb11, unwind: bb18]; // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:19: 118:80
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:19: 118:38
                                         // + literal: Const { ty: for<'a> fn(Arguments<'a>) -> String {format}, val: Value(<ZST>) }
    }

    bb11: {
        _38 = move _39;                  // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:119:9: 119:12
        _37 = &_38;                      // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _32 = (move _33, move _37);      // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _47 = (_32.0: &std::string::String); // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _48 = (_32.1: &std::string::String); // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _51 = _47;                       // scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
        _52 = _48;                       // scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
        _50 = <String as PartialEq>::eq(move _51, move _52) -> [return: bb12, unwind: bb17]; // scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a String, &'b String) -> bool {<String as PartialEq>::eq}, val: Value(<ZST>) }
    }

    bb12: {
        _49 = Not(move _50);             // scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
        switchInt(move _49) -> [0: bb14, otherwise: bb13]; // scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    }

    bb13: {
        _53 = const core::panicking::AssertKind::Eq; // scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _55 = const core::panicking::AssertKind::Eq; // scope 8 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _57 = _47;                       // scope 8 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _56 = _57;                       // scope 8 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _59 = _48;                       // scope 8 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _58 = _59;                       // scope 8 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _60 = Option::<Arguments<'_>>::None; // scope 8 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
        _54 = core::panicking::assert_failed::<String, String>(move _55, move _56, move _58, move _60) -> bb17; // scope 8 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:53
                                         // + literal: Const { ty: for<'a, 'b, 'c> fn(core::panicking::AssertKind, &'a String, &'b String, Option<Arguments<'c>>) -> ! {core::panicking::assert_failed::<String, String>}, val: Value(<ZST>) }
    }

    bb14: {
        drop(_38) -> [return: bb15, unwind: bb18]; // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:48:9: 48:10
    }

    bb15: {
        drop(_34) -> bb16;               // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:48:9: 48:10
    }

    bb16: {
        return;                          // scope 0 at ui/methods/method-projection.rs:61:2: 61:2
    }

    bb17 (cleanup): {
        drop(_38) -> bb18;               // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:48:9: 48:10
    }

    bb18 (cleanup): {
        drop(_34) -> bb21;               // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:48:9: 48:10
    }

    bb19 (cleanup): {
        drop(_8) -> bb20;                // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:48:9: 48:10
    }

    bb20 (cleanup): {
        drop(_4) -> bb21;                // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:48:9: 48:10
    }

    bb21 (cleanup): {
        resume;                          // scope 0 at ui/methods/method-projection.rs:55:1: 61:2
    }
}

promoted[0] in main: &[core::fmt::ArgumentV1<'_>; 0] = {
    let mut _0: &[core::fmt::ArgumentV1<'_>; 0]; // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
    let mut _1: [core::fmt::ArgumentV1<'_>; 0]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79

    bb0: {
        _1 = [];                         // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
    }
}

promoted[1] in main: &[&str; 1] = {
    let mut _0: &[&str; 1];              // return place in scope 0 at ui/methods/method-projection.rs:60:33: 60:37
    let mut _1: [&str; 1];               // in scope 0 at ui/methods/method-projection.rs:60:33: 60:37

    bb0: {
        _1 = [const "44"];               // scope 0 at ui/methods/method-projection.rs:60:33: 60:37
                                         // mir::Constant
                                         // + span: ui/methods/method-projection.rs:60:33: 60:37
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at ui/methods/method-projection.rs:60:33: 60:37
        return;                          // scope 0 at ui/methods/method-projection.rs:60:33: 60:37
    }
}

promoted[2] in main: &[core::fmt::ArgumentV1<'_>; 0] = {
    let mut _0: &[core::fmt::ArgumentV1<'_>; 0]; // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
    let mut _1: [core::fmt::ArgumentV1<'_>; 0]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79

    bb0: {
        _1 = [];                         // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
    }
}

promoted[3] in main: &[&str; 1] = {
    let mut _0: &[&str; 1];              // return place in scope 0 at ui/methods/method-projection.rs:57:33: 57:37
    let mut _1: [&str; 1];               // in scope 0 at ui/methods/method-projection.rs:57:33: 57:37

    bb0: {
        _1 = [const "22"];               // scope 0 at ui/methods/method-projection.rs:57:33: 57:37
                                         // mir::Constant
                                         // + span: ui/methods/method-projection.rs:57:33: 57:37
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at ui/methods/method-projection.rs:57:33: 57:37
        return;                          // scope 0 at ui/methods/method-projection.rs:57:33: 57:37
    }
}
