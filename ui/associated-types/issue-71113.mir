// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
fn main() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/associated-types/issue-71113.rs:16:11: 16:11

    bb0: {
        return;                          // scope 0 at ui/associated-types/issue-71113.rs:16:13: 16:13
    }
}

fn _Recursive::Variant(_1: MyCow<'_, _Recursive<'_>>) -> _Recursive<'_> {
    let mut _0: _Recursive<'_>;          // return place in scope 0 at ui/associated-types/issue-71113.rs:9:5: 9:12

    bb0: {
        _0 = _Recursive::<'_>::Variant(move _1); // scope 0 at ui/associated-types/issue-71113.rs:9:5: 9:12
        return;                          // scope 0 at ui/associated-types/issue-71113.rs:9:5: 9:12
    }
}

// MIR FOR CTFE
fn _Recursive::Variant(_1: MyCow<'_, _Recursive<'_>>) -> _Recursive<'_> {
    let mut _0: _Recursive<'_>;          // return place in scope 0 at ui/associated-types/issue-71113.rs:9:5: 9:12

    bb0: {
        _0 = _Recursive::<'_>::Variant(move _1); // scope 0 at ui/associated-types/issue-71113.rs:9:5: 9:12
        return;                          // scope 0 at ui/associated-types/issue-71113.rs:9:5: 9:12
    }
}

fn Wrapper(_1: T) -> Wrapper<T> {
    let mut _0: Wrapper<T>;              // return place in scope 0 at ui/associated-types/issue-71113.rs:12:1: 12:22

    bb0: {
        _0 = Wrapper::<T>(move _1);      // scope 0 at ui/associated-types/issue-71113.rs:12:1: 12:22
        return;                          // scope 0 at ui/associated-types/issue-71113.rs:12:1: 12:22
    }
}

// MIR FOR CTFE
fn Wrapper(_1: T) -> Wrapper<T> {
    let mut _0: Wrapper<T>;              // return place in scope 0 at ui/associated-types/issue-71113.rs:12:1: 12:22

    bb0: {
        _0 = Wrapper::<T>(move _1);      // scope 0 at ui/associated-types/issue-71113.rs:12:1: 12:22
        return;                          // scope 0 at ui/associated-types/issue-71113.rs:12:1: 12:22
    }
}

fn MyCow(_1: Wrapper<Cow<'_, T>>) -> MyCow<'_, T> {
    let mut _0: MyCow<'_, T>;            // return place in scope 0 at ui/associated-types/issue-71113.rs:14:1: 14:52

    bb0: {
        _0 = MyCow::<'_, T>(move _1);    // scope 0 at ui/associated-types/issue-71113.rs:14:1: 14:52
        return;                          // scope 0 at ui/associated-types/issue-71113.rs:14:1: 14:52
    }
}

// MIR FOR CTFE
fn MyCow(_1: Wrapper<Cow<'_, T>>) -> MyCow<'_, T> {
    let mut _0: MyCow<'_, T>;            // return place in scope 0 at ui/associated-types/issue-71113.rs:14:1: 14:52

    bb0: {
        _0 = MyCow::<'_, T>(move _1);    // scope 0 at ui/associated-types/issue-71113.rs:14:1: 14:52
        return;                          // scope 0 at ui/associated-types/issue-71113.rs:14:1: 14:52
    }
}
