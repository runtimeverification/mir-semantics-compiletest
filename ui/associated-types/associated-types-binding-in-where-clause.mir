// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
fn <impl at ui/associated-types/associated-types-binding-in-where-clause.rs:11:10: 11:19>::eq(_1: &Bar, _2: &Bar) -> bool {
    debug self => _1;                    // in scope 0 at ui/associated-types/associated-types-binding-in-where-clause.rs:11:10: 11:19
    debug other => _2;                   // in scope 0 at ui/associated-types/associated-types-binding-in-where-clause.rs:11:10: 11:19
    let mut _0: bool;                    // return place in scope 0 at ui/associated-types/associated-types-binding-in-where-clause.rs:11:10: 11:19

    bb0: {
        _0 = const true;                 // scope 0 at ui/associated-types/associated-types-binding-in-where-clause.rs:11:10: 11:19
        return;                          // scope 0 at ui/associated-types/associated-types-binding-in-where-clause.rs:11:19: 11:19
    }
}

fn <impl at ui/associated-types/associated-types-binding-in-where-clause.rs:14:1: 14:19>::boo(_1: &isize) -> usize {
    debug self => _1;                    // in scope 0 at ui/associated-types/associated-types-binding-in-where-clause.rs:16:12: 16:17
    let mut _0: usize;                   // return place in scope 0 at ui/associated-types/associated-types-binding-in-where-clause.rs:16:22: 16:27

    bb0: {
        _0 = const 42_usize;             // scope 0 at ui/associated-types/associated-types-binding-in-where-clause.rs:16:30: 16:32
        return;                          // scope 0 at ui/associated-types/associated-types-binding-in-where-clause.rs:16:34: 16:34
    }
}

fn <impl at ui/associated-types/associated-types-binding-in-where-clause.rs:19:1: 19:18>::boo(_1: &char) -> Bar {
    debug self => _1;                    // in scope 0 at ui/associated-types/associated-types-binding-in-where-clause.rs:21:12: 21:17
    let mut _0: Bar;                     // return place in scope 0 at ui/associated-types/associated-types-binding-in-where-clause.rs:21:22: 21:25

    bb0: {
        return;                          // scope 0 at ui/associated-types/associated-types-binding-in-where-clause.rs:21:33: 21:33
    }
}

fn foo_bar(_1: I) -> Bar {
    debug x => _1;                       // in scope 0 at ui/associated-types/associated-types-binding-in-where-clause.rs:24:27: 24:28
    let mut _0: Bar;                     // return place in scope 0 at ui/associated-types/associated-types-binding-in-where-clause.rs:24:36: 24:39
    let mut _2: &I;                      // in scope 0 at ui/associated-types/associated-types-binding-in-where-clause.rs:25:5: 25:12

    bb0: {
        _2 = &_1;                        // scope 0 at ui/associated-types/associated-types-binding-in-where-clause.rs:25:5: 25:12
        _0 = <I as Foo>::boo(move _2) -> [return: bb1, unwind: bb3]; // scope 0 at ui/associated-types/associated-types-binding-in-where-clause.rs:25:5: 25:12
                                         // mir::Constant
                                         // + span: ui/associated-types/associated-types-binding-in-where-clause.rs:25:7: 25:10
                                         // + literal: Const { ty: for<'a> fn(&'a I) -> <I as Foo>::A {<I as Foo>::boo}, val: Value(<ZST>) }
    }

    bb1: {
        drop(_1) -> bb2;                 // scope 0 at ui/associated-types/associated-types-binding-in-where-clause.rs:26:1: 26:2
    }

    bb2: {
        return;                          // scope 0 at ui/associated-types/associated-types-binding-in-where-clause.rs:26:2: 26:2
    }

    bb3 (cleanup): {
        drop(_1) -> bb4;                 // scope 0 at ui/associated-types/associated-types-binding-in-where-clause.rs:26:1: 26:2
    }

    bb4 (cleanup): {
        resume;                          // scope 0 at ui/associated-types/associated-types-binding-in-where-clause.rs:24:1: 26:2
    }
}

fn foo_uint(_1: I) -> usize {
    debug x => _1;                       // in scope 0 at ui/associated-types/associated-types-binding-in-where-clause.rs:28:30: 28:31
    let mut _0: usize;                   // return place in scope 0 at ui/associated-types/associated-types-binding-in-where-clause.rs:28:39: 28:44
    let mut _2: &I;                      // in scope 0 at ui/associated-types/associated-types-binding-in-where-clause.rs:29:5: 29:12

    bb0: {
        _2 = &_1;                        // scope 0 at ui/associated-types/associated-types-binding-in-where-clause.rs:29:5: 29:12
        _0 = <I as Foo>::boo(move _2) -> [return: bb1, unwind: bb3]; // scope 0 at ui/associated-types/associated-types-binding-in-where-clause.rs:29:5: 29:12
                                         // mir::Constant
                                         // + span: ui/associated-types/associated-types-binding-in-where-clause.rs:29:7: 29:10
                                         // + literal: Const { ty: for<'a> fn(&'a I) -> <I as Foo>::A {<I as Foo>::boo}, val: Value(<ZST>) }
    }

    bb1: {
        drop(_1) -> bb2;                 // scope 0 at ui/associated-types/associated-types-binding-in-where-clause.rs:30:1: 30:2
    }

    bb2: {
        return;                          // scope 0 at ui/associated-types/associated-types-binding-in-where-clause.rs:30:2: 30:2
    }

    bb3 (cleanup): {
        drop(_1) -> bb4;                 // scope 0 at ui/associated-types/associated-types-binding-in-where-clause.rs:30:1: 30:2
    }

    bb4 (cleanup): {
        resume;                          // scope 0 at ui/associated-types/associated-types-binding-in-where-clause.rs:28:1: 30:2
    }
}

fn main() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/associated-types/associated-types-binding-in-where-clause.rs:32:15: 32:15
    let _1: isize;                       // in scope 0 at ui/associated-types/associated-types-binding-in-where-clause.rs:33:9: 33:10
    let _2: usize;                       // in scope 0 at ui/associated-types/associated-types-binding-in-where-clause.rs:34:5: 34:16
    let mut _3: isize;                   // in scope 0 at ui/associated-types/associated-types-binding-in-where-clause.rs:34:14: 34:15
    let _5: Bar;                         // in scope 0 at ui/associated-types/associated-types-binding-in-where-clause.rs:37:5: 37:15
    let mut _6: char;                    // in scope 0 at ui/associated-types/associated-types-binding-in-where-clause.rs:37:13: 37:14
    scope 1 {
        debug a => _1;                   // in scope 1 at ui/associated-types/associated-types-binding-in-where-clause.rs:33:9: 33:10
        let _4: char;                    // in scope 1 at ui/associated-types/associated-types-binding-in-where-clause.rs:36:9: 36:10
        scope 2 {
            debug a => _4;               // in scope 2 at ui/associated-types/associated-types-binding-in-where-clause.rs:36:9: 36:10
        }
    }

    bb0: {
        _1 = const 42_isize;             // scope 0 at ui/associated-types/associated-types-binding-in-where-clause.rs:33:13: 33:15
        _3 = const 42_isize;             // scope 1 at ui/associated-types/associated-types-binding-in-where-clause.rs:34:14: 34:15
        _2 = foo_uint::<isize>(move _3) -> bb1; // scope 1 at ui/associated-types/associated-types-binding-in-where-clause.rs:34:5: 34:16
                                         // mir::Constant
                                         // + span: ui/associated-types/associated-types-binding-in-where-clause.rs:34:5: 34:13
                                         // + literal: Const { ty: fn(isize) -> usize {foo_uint::<isize>}, val: Value(<ZST>) }
    }

    bb1: {
        _4 = const 'a';                  // scope 1 at ui/associated-types/associated-types-binding-in-where-clause.rs:36:13: 36:16
        _6 = const 'a';                  // scope 2 at ui/associated-types/associated-types-binding-in-where-clause.rs:37:13: 37:14
        _5 = foo_bar::<char>(move _6) -> bb2; // scope 2 at ui/associated-types/associated-types-binding-in-where-clause.rs:37:5: 37:15
                                         // mir::Constant
                                         // + span: ui/associated-types/associated-types-binding-in-where-clause.rs:37:5: 37:12
                                         // + literal: Const { ty: fn(char) -> Bar {foo_bar::<char>}, val: Value(<ZST>) }
    }

    bb2: {
        return;                          // scope 0 at ui/associated-types/associated-types-binding-in-where-clause.rs:38:2: 38:2
    }
}
