// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
fn <impl at ui/associated-types/associated-types-projection-to-unrelated-trait.rs:27:1: 27:18>::okay(_1: &(), _2: U, _3: f32) -> () {
    debug self => _1;                    // in scope 0 at ui/associated-types/associated-types-projection-to-unrelated-trait.rs:28:20: 28:25
    debug _foo => _2;                    // in scope 0 at ui/associated-types/associated-types-projection-to-unrelated-trait.rs:28:27: 28:31
    debug _bar => _3;                    // in scope 0 at ui/associated-types/associated-types-projection-to-unrelated-trait.rs:28:36: 28:40
    let mut _0: ();                      // return place in scope 0 at ui/associated-types/associated-types-projection-to-unrelated-trait.rs:28:64: 28:64

    bb0: {
        drop(_2) -> bb1;                 // scope 0 at ui/associated-types/associated-types-projection-to-unrelated-trait.rs:28:66: 28:67
    }

    bb1: {
        return;                          // scope 0 at ui/associated-types/associated-types-projection-to-unrelated-trait.rs:28:67: 28:67
    }
}

fn <impl at ui/associated-types/associated-types-projection-to-unrelated-trait.rs:31:1: 31:19>::okay(_1: &f64, _2: U, _3: u32) -> () {
    debug self => _1;                    // in scope 0 at ui/associated-types/associated-types-projection-to-unrelated-trait.rs:32:20: 32:25
    debug _foo => _2;                    // in scope 0 at ui/associated-types/associated-types-projection-to-unrelated-trait.rs:32:27: 32:31
    debug _bar => _3;                    // in scope 0 at ui/associated-types/associated-types-projection-to-unrelated-trait.rs:32:36: 32:40
    let mut _0: ();                      // return place in scope 0 at ui/associated-types/associated-types-projection-to-unrelated-trait.rs:32:64: 32:64

    bb0: {
        drop(_2) -> bb1;                 // scope 0 at ui/associated-types/associated-types-projection-to-unrelated-trait.rs:32:66: 32:67
    }

    bb1: {
        return;                          // scope 0 at ui/associated-types/associated-types-projection-to-unrelated-trait.rs:32:67: 32:67
    }
}

fn main() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/associated-types/associated-types-projection-to-unrelated-trait.rs:35:11: 35:11

    bb0: {
        return;                          // scope 0 at ui/associated-types/associated-types-projection-to-unrelated-trait.rs:35:14: 35:14
    }
}
