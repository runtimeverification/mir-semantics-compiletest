// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
fn <impl at ui/associated-types/issue-55846.rs:25:1: 25:31>::barify() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/associated-types/issue-55846.rs:26:17: 26:17
    let _1: ();                          // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:62
    let mut _2: std::fmt::Arguments<'_>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _3: &[&str];                 // in scope 0 at ui/associated-types/issue-55846.rs:27:18: 27:32
    let mut _4: &[&str; 1];              // in scope 0 at ui/associated-types/issue-55846.rs:27:18: 27:32
    let _5: &[&str; 1];                  // in scope 0 at ui/associated-types/issue-55846.rs:27:18: 27:32
    let mut _6: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _7: &[core::fmt::ArgumentV1<'_>; 0]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let _8: &[core::fmt::ArgumentV1<'_>; 0]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _9: &[core::fmt::ArgumentV1<'_>; 0]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _10: &[&str; 1];             // in scope 0 at ui/associated-types/issue-55846.rs:27:18: 27:32

    bb0: {
        _10 = const _;                   // scope 0 at ui/associated-types/issue-55846.rs:27:18: 27:32
                                         // mir::Constant
                                         // + span: ui/associated-types/issue-55846.rs:27:18: 27:32
                                         // + literal: Const { ty: &[&str; 1], val: Unevaluated(<Bar<H> as Barifier<H>>::barify, [H], Some(promoted[1])) }
        _5 = _10;                        // scope 0 at ui/associated-types/issue-55846.rs:27:18: 27:32
        _4 = _5;                         // scope 0 at ui/associated-types/issue-55846.rs:27:18: 27:32
        _3 = move _4 as &[&str] (Pointer(Unsize)); // scope 0 at ui/associated-types/issue-55846.rs:27:18: 27:32
        _9 = const _;                    // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // + literal: Const { ty: &[core::fmt::ArgumentV1<'_>; 0], val: Unevaluated(<Bar<H> as Barifier<H>>::barify, [H], Some(promoted[0])) }
        _8 = _9;                         // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _7 = _8;                         // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _6 = move _7 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _2 = Arguments::<'_>::new_v1(move _3, move _6) -> bb1; // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb1: {
        _1 = _print(move _2) -> bb2;     // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:62
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:27
                                         // + literal: Const { ty: for<'a> fn(Arguments<'a>) {_print}, val: Value(<ZST>) }
    }

    bb2: {
        return;                          // scope 0 at ui/associated-types/issue-55846.rs:28:6: 28:6
    }
}

promoted[0] in <impl at ui/associated-types/issue-55846.rs:25:1: 25:31>::barify: &[core::fmt::ArgumentV1<'_>; 0] = {
    let mut _0: &[core::fmt::ArgumentV1<'_>; 0]; // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _1: [core::fmt::ArgumentV1<'_>; 0]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61

    bb0: {
        _1 = [];                         // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    }
}

promoted[1] in <impl at ui/associated-types/issue-55846.rs:25:1: 25:31>::barify: &[&str; 1] = {
    let mut _0: &[&str; 1];              // return place in scope 0 at ui/associated-types/issue-55846.rs:27:18: 27:32
    let mut _1: [&str; 1];               // in scope 0 at ui/associated-types/issue-55846.rs:27:18: 27:32

    bb0: {
        _1 = [const "All correct!\n"];   // scope 0 at ui/associated-types/issue-55846.rs:27:18: 27:32
                                         // mir::Constant
                                         // + span: ui/associated-types/issue-55846.rs:27:18: 27:32
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at ui/associated-types/issue-55846.rs:27:18: 27:32
        return;                          // scope 0 at ui/associated-types/issue-55846.rs:27:18: 27:32
    }
}

fn <impl at ui/associated-types/issue-55846.rs:31:1: 31:35>::this_shouldnt_crash() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/associated-types/issue-55846.rs:32:30: 32:30
    let _1: ();                          // in scope 0 at ui/associated-types/issue-55846.rs:33:9: 33:63

    bb0: {
        _1 = <Bar<Foo> as Barifier<Foo>>::barify() -> bb1; // scope 0 at ui/associated-types/issue-55846.rs:33:9: 33:63
                                         // mir::Constant
                                         // + span: ui/associated-types/issue-55846.rs:33:9: 33:61
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: fn() {<Bar<Foo> as Barifier<Foo>>::barify}, val: Value(<ZST>) }
    }

    bb1: {
        return;                          // scope 0 at ui/associated-types/issue-55846.rs:34:6: 34:6
    }
}

fn main() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/associated-types/issue-55846.rs:37:11: 37:11
    let _1: ();                          // in scope 0 at ui/associated-types/issue-55846.rs:38:5: 38:38

    bb0: {
        _1 = Bar::<<Foo as Fooifier>::Assoc>::this_shouldnt_crash() -> bb1; // scope 0 at ui/associated-types/issue-55846.rs:38:5: 38:38
                                         // mir::Constant
                                         // + span: ui/associated-types/issue-55846.rs:38:5: 38:36
                                         // + literal: Const { ty: fn() {Bar::<<Foo as Fooifier>::Assoc>::this_shouldnt_crash}, val: Value(<ZST>) }
    }

    bb1: {
        return;                          // scope 0 at ui/associated-types/issue-55846.rs:39:2: 39:2
    }
}
