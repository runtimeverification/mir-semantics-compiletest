// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
fn <impl at ui/associated-types/defaults-cyclic-pass-2.rs:15:1: 15:15>::f() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/associated-types/defaults-cyclic-pass-2.rs:18:12: 18:12
    let mut _1: std::boxed::Box<u8>;     // in scope 0 at ui/associated-types/defaults-cyclic-pass-2.rs:21:26: 21:39
    scope 1 {
        scope 2 {
        }
    }

    bb0: {
        _1 = Box::<u8>::new(const 0_u8) -> bb1; // scope 1 at ui/associated-types/defaults-cyclic-pass-2.rs:21:26: 21:39
                                         // mir::Constant
                                         // + span: ui/associated-types/defaults-cyclic-pass-2.rs:21:26: 21:34
                                         // + user_ty: UserType(3)
                                         // + literal: Const { ty: fn(u8) -> Box<u8> {Box::<u8>::new}, val: Value(<ZST>) }
    }

    bb1: {
        drop(_1) -> bb2;                 // scope 1 at ui/associated-types/defaults-cyclic-pass-2.rs:21:39: 21:40
    }

    bb2: {
        return;                          // scope 0 at ui/associated-types/defaults-cyclic-pass-2.rs:22:6: 22:6
    }
}

fn <impl at ui/associated-types/defaults-cyclic-pass-2.rs:25:1: 25:19>::f() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/associated-types/defaults-cyclic-pass-2.rs:28:12: 28:12
    let mut _1: std::vec::Vec<()>;       // in scope 0 at ui/associated-types/defaults-cyclic-pass-2.rs:30:26: 30:42
    scope 1 {
        scope 2 {
        }
    }

    bb0: {
        _1 = Vec::<()>::new() -> bb1;    // scope 0 at ui/associated-types/defaults-cyclic-pass-2.rs:30:26: 30:42
                                         // mir::Constant
                                         // + span: ui/associated-types/defaults-cyclic-pass-2.rs:30:26: 30:40
                                         // + user_ty: UserType(1)
                                         // + literal: Const { ty: fn() -> Vec<()> {Vec::<()>::new}, val: Value(<ZST>) }
    }

    bb1: {
        drop(_1) -> bb2;                 // scope 0 at ui/associated-types/defaults-cyclic-pass-2.rs:30:42: 30:43
    }

    bb2: {
        return;                          // scope 0 at ui/associated-types/defaults-cyclic-pass-2.rs:32:6: 32:6
    }
}

fn <impl at ui/associated-types/defaults-cyclic-pass-2.rs:35:1: 35:15>::f() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/associated-types/defaults-cyclic-pass-2.rs:39:12: 39:12
    let mut _1: std::vec::Vec<()>;       // in scope 0 at ui/associated-types/defaults-cyclic-pass-2.rs:41:26: 41:42
    scope 1 {
        scope 2 {
        }
    }

    bb0: {
        _1 = Vec::<()>::new() -> bb1;    // scope 0 at ui/associated-types/defaults-cyclic-pass-2.rs:41:26: 41:42
                                         // mir::Constant
                                         // + span: ui/associated-types/defaults-cyclic-pass-2.rs:41:26: 41:40
                                         // + user_ty: UserType(1)
                                         // + literal: Const { ty: fn() -> Vec<()> {Vec::<()>::new}, val: Value(<ZST>) }
    }

    bb1: {
        drop(_1) -> bb2;                 // scope 0 at ui/associated-types/defaults-cyclic-pass-2.rs:41:42: 41:43
    }

    bb2: {
        return;                          // scope 0 at ui/associated-types/defaults-cyclic-pass-2.rs:43:6: 43:6
    }
}

fn main() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/associated-types/defaults-cyclic-pass-2.rs:46:11: 46:11
    let mut _1: std::boxed::Box<u8>;     // in scope 0 at ui/associated-types/defaults-cyclic-pass-2.rs:49:28: 49:41
    let mut _2: std::vec::Vec<()>;       // in scope 0 at ui/associated-types/defaults-cyclic-pass-2.rs:51:32: 51:48
    let mut _3: std::vec::Vec<()>;       // in scope 0 at ui/associated-types/defaults-cyclic-pass-2.rs:54:28: 54:44
    scope 1 {
        scope 2 {
            scope 3 {
                scope 4 {
                    scope 5 {
                        scope 6 {
                        }
                    }
                }
            }
        }
    }

    bb0: {
        _1 = Box::<u8>::new(const 0_u8) -> bb1; // scope 1 at ui/associated-types/defaults-cyclic-pass-2.rs:49:28: 49:41
                                         // mir::Constant
                                         // + span: ui/associated-types/defaults-cyclic-pass-2.rs:49:28: 49:36
                                         // + user_ty: UserType(3)
                                         // + literal: Const { ty: fn(u8) -> Box<u8> {Box::<u8>::new}, val: Value(<ZST>) }
    }

    bb1: {
        drop(_1) -> bb2;                 // scope 1 at ui/associated-types/defaults-cyclic-pass-2.rs:49:41: 49:42
    }

    bb2: {
        _2 = Vec::<()>::new() -> bb3;    // scope 2 at ui/associated-types/defaults-cyclic-pass-2.rs:51:32: 51:48
                                         // mir::Constant
                                         // + span: ui/associated-types/defaults-cyclic-pass-2.rs:51:32: 51:46
                                         // + user_ty: UserType(6)
                                         // + literal: Const { ty: fn() -> Vec<()> {Vec::<()>::new}, val: Value(<ZST>) }
    }

    bb3: {
        drop(_2) -> bb4;                 // scope 2 at ui/associated-types/defaults-cyclic-pass-2.rs:51:48: 51:49
    }

    bb4: {
        _3 = Vec::<()>::new() -> bb5;    // scope 4 at ui/associated-types/defaults-cyclic-pass-2.rs:54:28: 54:44
                                         // mir::Constant
                                         // + span: ui/associated-types/defaults-cyclic-pass-2.rs:54:28: 54:42
                                         // + user_ty: UserType(11)
                                         // + literal: Const { ty: fn() -> Vec<()> {Vec::<()>::new}, val: Value(<ZST>) }
    }

    bb5: {
        drop(_3) -> bb6;                 // scope 4 at ui/associated-types/defaults-cyclic-pass-2.rs:54:44: 54:45
    }

    bb6: {
        return;                          // scope 0 at ui/associated-types/defaults-cyclic-pass-2.rs:56:2: 56:2
    }
}
