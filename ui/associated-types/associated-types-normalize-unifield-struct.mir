// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
fn Offset::dummy(_1: &Self) -> () {
    debug self => _1;                    // in scope 0 at ui/associated-types/associated-types-normalize-unifield-struct.rs:8:14: 8:19
    let mut _0: ();                      // return place in scope 0 at ui/associated-types/associated-types-normalize-unifield-struct.rs:8:21: 8:21

    bb0: {
        return;                          // scope 0 at ui/associated-types/associated-types-normalize-unifield-struct.rs:8:24: 8:24
    }
}

fn <impl at ui/associated-types/associated-types-normalize-unifield-struct.rs:11:16: 11:21>::clone(_1: &X) -> X {
    debug self => _1;                    // in scope 0 at ui/associated-types/associated-types-normalize-unifield-struct.rs:11:16: 11:21
    let mut _0: X;                       // return place in scope 0 at ui/associated-types/associated-types-normalize-unifield-struct.rs:11:16: 11:21

    bb0: {
        return;                          // scope 0 at ui/associated-types/associated-types-normalize-unifield-struct.rs:11:21: 11:21
    }
}

fn <impl at ui/associated-types/associated-types-normalize-unifield-struct.rs:14:16: 14:21>::clone(_1: &Y) -> Y {
    debug self => _1;                    // in scope 0 at ui/associated-types/associated-types-normalize-unifield-struct.rs:14:16: 14:21
    let mut _0: Y;                       // return place in scope 0 at ui/associated-types/associated-types-normalize-unifield-struct.rs:14:16: 14:21

    bb0: {
        return;                          // scope 0 at ui/associated-types/associated-types-normalize-unifield-struct.rs:14:21: 14:21
    }
}

fn now() -> DateTime<X> {
    let mut _0: DateTime<X>;             // return place in scope 0 at ui/associated-types/associated-types-normalize-unifield-struct.rs:17:17: 17:28
    let mut _1: Y;                       // in scope 0 at ui/associated-types/associated-types-normalize-unifield-struct.rs:17:40: 17:41

    bb0: {
        _0 = from_utc::<X>(move _1) -> bb1; // scope 0 at ui/associated-types/associated-types-normalize-unifield-struct.rs:17:31: 17:42
                                         // mir::Constant
                                         // + span: ui/associated-types/associated-types-normalize-unifield-struct.rs:17:31: 17:39
                                         // + literal: Const { ty: fn(<X as Offset>::State) -> DateTime<X> {from_utc::<X>}, val: Value(<ZST>) }
    }

    bb1: {
        return;                          // scope 0 at ui/associated-types/associated-types-normalize-unifield-struct.rs:17:44: 17:44
    }
}

fn from_utc(_1: <Off as Offset>::State) -> DateTime<Off> {
    debug offset => _1;                  // in scope 0 at ui/associated-types/associated-types-normalize-unifield-struct.rs:20:30: 20:36
    let mut _0: DateTime<Off>;           // return place in scope 0 at ui/associated-types/associated-types-normalize-unifield-struct.rs:20:53: 20:66
    let mut _2: <Off as Offset>::State;  // in scope 0 at ui/associated-types/associated-types-normalize-unifield-struct.rs:20:88: 20:94

    bb0: {
        _2 = move _1;                    // scope 0 at ui/associated-types/associated-types-normalize-unifield-struct.rs:20:88: 20:94
        _0 = DateTime::<Off> { offset: move _2 }; // scope 0 at ui/associated-types/associated-types-normalize-unifield-struct.rs:20:69: 20:96
        return;                          // scope 0 at ui/associated-types/associated-types-normalize-unifield-struct.rs:20:98: 20:98
    }
}

fn main() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/associated-types/associated-types-normalize-unifield-struct.rs:22:15: 22:15
    let _1: DateTime<X>;                 // in scope 0 at ui/associated-types/associated-types-normalize-unifield-struct.rs:23:9: 23:11
    scope 1 {
        debug _x => _1;                  // in scope 1 at ui/associated-types/associated-types-normalize-unifield-struct.rs:23:9: 23:11
    }

    bb0: {
        _1 = now() -> bb1;               // scope 0 at ui/associated-types/associated-types-normalize-unifield-struct.rs:23:14: 23:19
                                         // mir::Constant
                                         // + span: ui/associated-types/associated-types-normalize-unifield-struct.rs:23:14: 23:17
                                         // + literal: Const { ty: fn() -> DateTime<X> {now}, val: Value(<ZST>) }
    }

    bb1: {
        return;                          // scope 0 at ui/associated-types/associated-types-normalize-unifield-struct.rs:24:2: 24:2
    }
}
