// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
fn g() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/associated-types/associated-types-projection-bound-ambiguity.rs:12:22: 12:22
    let _1: ();                          // in scope 0 at ui/associated-types/associated-types-projection-bound-ambiguity.rs:13:9: 13:10
    scope 1 {
        debug y => _1;                   // in scope 1 at ui/associated-types/associated-types-projection-bound-ambiguity.rs:13:9: 13:10
    }

    bb0: {
        return;                          // scope 0 at ui/associated-types/associated-types-projection-bound-ambiguity.rs:14:2: 14:2
    }
}

fn main() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/associated-types/associated-types-projection-bound-ambiguity.rs:16:11: 16:11

    bb0: {
        return;                          // scope 0 at ui/associated-types/associated-types-projection-bound-ambiguity.rs:16:13: 16:13
    }
}
