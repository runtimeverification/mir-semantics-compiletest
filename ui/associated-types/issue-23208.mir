// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
fn <impl at ui/associated-types/issue-23208.rs:14:1: 14:32>::get(_1: &i32) -> u32 {
    debug self => _1;
    let mut _0: u32;
    let mut _2: i32;

    bb0: {
        _2 = (*_1);
        _0 = move _2 as u32 (IntToInt);
        return;
    }
}

fn foo(_1: &T) -> u32 {
    debug t => _1;
    let mut _0: u32;

    bb0: {
        _0 = <T as TheSuperTrait<u32>>::get(_1) -> [return: bb1, unwind continue];
    }

    bb1: {
        return;
    }
}

fn main() -> () {
    let mut _0: ();
    let _1: u32;
    let mut _2: &i32;

    bb0: {
        _2 = const _;
        _1 = foo::<i32>(_2) -> [return: bb1, unwind continue];
    }

    bb1: {
        return;
    }
}

promoted[0] in main: &i32 = {
    let mut _0: &i32;
    let mut _1: i32;

    bb0: {
        _1 = const 22_i32;
        _0 = &_1;
        return;
    }
}
