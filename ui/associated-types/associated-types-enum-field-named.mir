// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
fn get(_1: &Vec<VarValue<K>>, _2: &K) -> &Option<V> {
    debug table => _1;                   // in scope 0 at ui/associated-types/associated-types-enum-field-named.rs:17:42: 17:47
    debug key => _2;                     // in scope 0 at ui/associated-types/associated-types-enum-field-named.rs:17:71: 17:74
    let mut _0: &std::option::Option<V>; // return place in scope 0 at ui/associated-types/associated-types-enum-field-named.rs:18:5: 21:6
    let mut _3: &VarValue<K>;            // in scope 0 at ui/associated-types/associated-types-enum-field-named.rs:18:11: 18:32
    let mut _4: &std::vec::Vec<VarValue<K>>; // in scope 0 at ui/associated-types/associated-types-enum-field-named.rs:18:11: 18:16
    let mut _5: usize;                   // in scope 0 at ui/associated-types/associated-types-enum-field-named.rs:18:17: 18:31
    let mut _6: &K;                      // in scope 0 at ui/associated-types/associated-types-enum-field-named.rs:18:17: 18:31
    let mut _7: isize;                   // in scope 0 at ui/associated-types/associated-types-enum-field-named.rs:19:9: 19:41
    let _8: &K;                          // in scope 0 at ui/associated-types/associated-types-enum-field-named.rs:19:34: 19:39
    let _9: &std::option::Option<V>;     // in scope 0 at ui/associated-types/associated-types-enum-field-named.rs:19:45: 19:58
    let mut _10: &std::vec::Vec<VarValue<K>>; // in scope 0 at ui/associated-types/associated-types-enum-field-named.rs:19:49: 19:54
    let mut _11: &K;                     // in scope 0 at ui/associated-types/associated-types-enum-field-named.rs:19:56: 19:57
    let _12: &std::option::Option<V>;    // in scope 0 at ui/associated-types/associated-types-enum-field-named.rs:20:33: 20:38
    scope 1 {
        debug k => _8;                   // in scope 1 at ui/associated-types/associated-types-enum-field-named.rs:19:34: 19:39
    }
    scope 2 {
        debug v => _12;                  // in scope 2 at ui/associated-types/associated-types-enum-field-named.rs:20:33: 20:38
    }

    bb0: {
        _4 = _1;                         // scope 0 at ui/associated-types/associated-types-enum-field-named.rs:18:11: 18:16
        _6 = _2;                         // scope 0 at ui/associated-types/associated-types-enum-field-named.rs:18:17: 18:31
        _5 = <K as UnifyKey>::to_index(move _6) -> bb1; // scope 0 at ui/associated-types/associated-types-enum-field-named.rs:18:17: 18:31
                                         // mir::Constant
                                         // + span: ui/associated-types/associated-types-enum-field-named.rs:18:21: 18:29
                                         // + literal: Const { ty: for<'a> fn(&'a K) -> usize {<K as UnifyKey>::to_index}, val: Value(<ZST>) }
    }

    bb1: {
        _3 = <Vec<VarValue<K>> as Index<usize>>::index(move _4, move _5) -> bb2; // scope 0 at ui/associated-types/associated-types-enum-field-named.rs:18:11: 18:32
                                         // mir::Constant
                                         // + span: ui/associated-types/associated-types-enum-field-named.rs:18:11: 18:32
                                         // + literal: Const { ty: for<'a> fn(&'a Vec<VarValue<K>>, usize) -> &'a <Vec<VarValue<K>> as Index<usize>>::Output {<Vec<VarValue<K>> as Index<usize>>::index}, val: Value(<ZST>) }
    }

    bb2: {
        _7 = discriminant((*_3));        // scope 0 at ui/associated-types/associated-types-enum-field-named.rs:18:11: 18:32
        switchInt(move _7) -> [0: bb5, 1: bb3, otherwise: bb4]; // scope 0 at ui/associated-types/associated-types-enum-field-named.rs:18:5: 18:32
    }

    bb3: {
        _12 = &(((*_3) as Root).0: std::option::Option<V>); // scope 0 at ui/associated-types/associated-types-enum-field-named.rs:20:33: 20:38
        _0 = _12;                        // scope 2 at ui/associated-types/associated-types-enum-field-named.rs:20:53: 20:54
        goto -> bb7;                     // scope 0 at ui/associated-types/associated-types-enum-field-named.rs:20:53: 20:54
    }

    bb4: {
        unreachable;                     // scope 0 at ui/associated-types/associated-types-enum-field-named.rs:18:11: 18:32
    }

    bb5: {
        _8 = &(((*_3) as Redirect).0: K); // scope 0 at ui/associated-types/associated-types-enum-field-named.rs:19:34: 19:39
        _10 = _1;                        // scope 1 at ui/associated-types/associated-types-enum-field-named.rs:19:49: 19:54
        _11 = _8;                        // scope 1 at ui/associated-types/associated-types-enum-field-named.rs:19:56: 19:57
        _9 = get::<K, V>(move _10, move _11) -> bb6; // scope 1 at ui/associated-types/associated-types-enum-field-named.rs:19:45: 19:58
                                         // mir::Constant
                                         // + span: ui/associated-types/associated-types-enum-field-named.rs:19:45: 19:48
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a Vec<VarValue<K>>, &'b K) -> &'a Option<V> {get::<K, V>}, val: Value(<ZST>) }
    }

    bb6: {
        _0 = _9;                         // scope 1 at ui/associated-types/associated-types-enum-field-named.rs:19:45: 19:58
        goto -> bb7;                     // scope 0 at ui/associated-types/associated-types-enum-field-named.rs:19:57: 19:58
    }

    bb7: {
        return;                          // scope 0 at ui/associated-types/associated-types-enum-field-named.rs:22:2: 22:2
    }
}

fn <impl at ui/associated-types/associated-types-enum-field-named.rs:24:1: 24:24>::to_index(_1: &usize) -> usize {
    debug self => _1;                    // in scope 0 at ui/associated-types/associated-types-enum-field-named.rs:26:17: 26:22
    let mut _0: usize;                   // return place in scope 0 at ui/associated-types/associated-types-enum-field-named.rs:26:27: 26:32

    bb0: {
        _0 = (*_1);                      // scope 0 at ui/associated-types/associated-types-enum-field-named.rs:26:35: 26:40
        return;                          // scope 0 at ui/associated-types/associated-types-enum-field-named.rs:26:42: 26:42
    }
}

fn main() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/associated-types/associated-types-enum-field-named.rs:29:11: 29:11
    let _1: std::vec::Vec<VarValue<usize>>; // in scope 0 at ui/associated-types/associated-types-enum-field-named.rs:30:9: 30:14
    let mut _2: std::boxed::Box<[VarValue<usize>]>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
    let mut _3: std::boxed::Box<[VarValue<usize>; 4]>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
    let mut _4: usize;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
    let mut _5: usize;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
    let mut _6: *mut u8;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
    let mut _7: std::boxed::Box<[VarValue<usize>; 4]>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
    let mut _8: VarValue<usize>;         // in scope 0 at ui/associated-types/associated-types-enum-field-named.rs:30:30: 30:48
    let mut _9: VarValue<usize>;         // in scope 0 at ui/associated-types/associated-types-enum-field-named.rs:31:30: 31:48
    let mut _10: VarValue<usize>;        // in scope 0 at ui/associated-types/associated-types-enum-field-named.rs:32:30: 32:64
    let mut _11: std::option::Option<char>; // in scope 0 at ui/associated-types/associated-types-enum-field-named.rs:32:44: 32:53
    let mut _12: VarValue<usize>;        // in scope 0 at ui/associated-types/associated-types-enum-field-named.rs:33:30: 33:48
    let mut _13: (&&std::option::Option<char>, &&std::option::Option<char>); // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _14: &&std::option::Option<char>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let _15: &std::option::Option<char>; // in scope 0 at ui/associated-types/associated-types-enum-field-named.rs:34:16: 34:31
    let mut _16: &std::vec::Vec<VarValue<usize>>; // in scope 0 at ui/associated-types/associated-types-enum-field-named.rs:34:20: 34:26
    let _17: &std::vec::Vec<VarValue<usize>>; // in scope 0 at ui/associated-types/associated-types-enum-field-named.rs:34:20: 34:26
    let mut _18: &usize;                 // in scope 0 at ui/associated-types/associated-types-enum-field-named.rs:34:28: 34:30
    let _19: &usize;                     // in scope 0 at ui/associated-types/associated-types-enum-field-named.rs:34:28: 34:30
    let mut _20: &&std::option::Option<char>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _23: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    let mut _24: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
    let mut _25: &&std::option::Option<char>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
    let mut _26: &&std::option::Option<char>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
    let _28: !;                          // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
    let mut _29: core::panicking::AssertKind; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
    let mut _30: &&std::option::Option<char>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let _31: &&std::option::Option<char>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let mut _32: &&std::option::Option<char>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let _33: &&std::option::Option<char>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let mut _34: std::option::Option<std::fmt::Arguments<'_>>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
    let mut _37: *const [VarValue<usize>; 4]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
    scope 1 {
        debug table => _1;               // in scope 1 at ui/associated-types/associated-types-enum-field-named.rs:30:9: 30:14
        let _21: &&std::option::Option<char>; // in scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        let _22: &&std::option::Option<char>; // in scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        let mut _35: &&std::option::Option<char>; // in scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        let mut _36: &usize;             // in scope 1 at ui/associated-types/associated-types-enum-field-named.rs:34:28: 34:30
        scope 3 {
            debug left_val => _21;       // in scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
            debug right_val => _22;      // in scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
            let _27: core::panicking::AssertKind; // in scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
            scope 4 {
                debug kind => _27;       // in scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
            }
        }
    }
    scope 2 {
    }

    bb0: {
        _4 = const 64_usize;             // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
        _5 = const 8_usize;              // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
        _6 = alloc::alloc::exchange_malloc(move _4, move _5) -> bb1; // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
                                         // + literal: Const { ty: unsafe fn(usize, usize) -> *mut u8 {alloc::alloc::exchange_malloc}, val: Value(<ZST>) }
    }

    bb1: {
        _7 = ShallowInitBox(move _6, [VarValue<usize>; 4]); // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
        _8 = VarValue::<usize>::Redirect { to: const 1_usize }; // scope 0 at ui/associated-types/associated-types-enum-field-named.rs:30:30: 30:48
        _9 = VarValue::<usize>::Redirect { to: const 3_usize }; // scope 0 at ui/associated-types/associated-types-enum-field-named.rs:31:30: 31:48
        _11 = const Option::<char>::Some('x'); // scope 0 at ui/associated-types/associated-types-enum-field-named.rs:32:44: 32:53
                                         // mir::Constant
                                         // + span: ui/associated-types/associated-types-enum-field-named.rs:32:44: 32:53
                                         // + literal: Const { ty: Option<char>, val: Value(Scalar(0x00000078)) }
        _10 = VarValue::<usize>::Root { value: move _11, rank: const 0_usize }; // scope 0 at ui/associated-types/associated-types-enum-field-named.rs:32:30: 32:64
        _12 = VarValue::<usize>::Redirect { to: const 2_usize }; // scope 0 at ui/associated-types/associated-types-enum-field-named.rs:33:30: 33:48
        _37 = (((_7.0: std::ptr::Unique<[VarValue<usize>; 4]>).0: std::ptr::NonNull<[VarValue<usize>; 4]>).0: *const [VarValue<usize>; 4]); // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:37: 52:46
        (*_37) = [move _8, move _9, move _10, move _12]; // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:37: 52:46
        _3 = move _7;                    // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
        _2 = move _3 as std::boxed::Box<[VarValue<usize>]> (Pointer(Unsize)); // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
        _1 = slice::<impl [VarValue<usize>]>::into_vec::<std::alloc::Global>(move _2) -> bb2; // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:50:36: 53:10
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:50:36: 50:51
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: fn(Box<[VarValue<usize>]>) -> Vec<VarValue<usize>> {slice::<impl [VarValue<usize>]>::into_vec::<std::alloc::Global>}, val: Value(<ZST>) }
    }

    bb2: {
        _17 = &_1;                       // scope 1 at ui/associated-types/associated-types-enum-field-named.rs:34:20: 34:26
        _16 = _17;                       // scope 1 at ui/associated-types/associated-types-enum-field-named.rs:34:20: 34:26
        _36 = const _;                   // scope 1 at ui/associated-types/associated-types-enum-field-named.rs:34:28: 34:30
                                         // mir::Constant
                                         // + span: ui/associated-types/associated-types-enum-field-named.rs:34:28: 34:30
                                         // + literal: Const { ty: &usize, val: Unevaluated(main, [], Some(promoted[1])) }
        _19 = _36;                       // scope 1 at ui/associated-types/associated-types-enum-field-named.rs:34:28: 34:30
        _18 = _19;                       // scope 1 at ui/associated-types/associated-types-enum-field-named.rs:34:28: 34:30
        _15 = get::<usize, char>(move _16, move _18) -> [return: bb3, unwind: bb8]; // scope 1 at ui/associated-types/associated-types-enum-field-named.rs:34:16: 34:31
                                         // mir::Constant
                                         // + span: ui/associated-types/associated-types-enum-field-named.rs:34:16: 34:19
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a Vec<VarValue<usize>>, &'b usize) -> &'a Option<char> {get::<usize, char>}, val: Value(<ZST>) }
    }

    bb3: {
        _14 = &_15;                      // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _35 = const _;                   // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // + literal: Const { ty: &&Option<char>, val: Unevaluated(main, [], Some(promoted[0])) }
        _20 = _35;                       // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _13 = (move _14, move _20);      // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _21 = (_13.0: &&std::option::Option<char>); // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _22 = (_13.1: &&std::option::Option<char>); // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _25 = _21;                       // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
        _26 = _22;                       // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
        _24 = <&Option<char> as PartialEq>::eq(move _25, move _26) -> [return: bb4, unwind: bb8]; // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a &Option<char>, &'b &Option<char>) -> bool {<&Option<char> as PartialEq>::eq}, val: Value(<ZST>) }
    }

    bb4: {
        _23 = Not(move _24);             // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
        switchInt(move _23) -> [0: bb6, otherwise: bb5]; // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    }

    bb5: {
        _27 = const core::panicking::AssertKind::Eq; // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _29 = const core::panicking::AssertKind::Eq; // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _31 = _21;                       // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _30 = _31;                       // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _33 = _22;                       // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _32 = _33;                       // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _34 = Option::<Arguments<'_>>::None; // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
        _28 = core::panicking::assert_failed::<&Option<char>, &Option<char>>(move _29, move _30, move _32, move _34) -> bb8; // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:53
                                         // + literal: Const { ty: for<'a, 'b, 'c> fn(core::panicking::AssertKind, &'a &Option<char>, &'b &Option<char>, Option<Arguments<'c>>) -> ! {core::panicking::assert_failed::<&Option<char>, &Option<char>>}, val: Value(<ZST>) }
    }

    bb6: {
        drop(_1) -> bb7;                 // scope 0 at ui/associated-types/associated-types-enum-field-named.rs:35:1: 35:2
    }

    bb7: {
        return;                          // scope 0 at ui/associated-types/associated-types-enum-field-named.rs:35:2: 35:2
    }

    bb8 (cleanup): {
        drop(_1) -> bb9;                 // scope 0 at ui/associated-types/associated-types-enum-field-named.rs:35:1: 35:2
    }

    bb9 (cleanup): {
        resume;                          // scope 0 at ui/associated-types/associated-types-enum-field-named.rs:29:1: 35:2
    }
}

promoted[0] in main: &&Option<char> = {
    let mut _0: &&std::option::Option<char>; // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _1: &std::option::Option<char>; // in scope 0 at ui/associated-types/associated-types-enum-field-named.rs:34:33: 34:43
    let mut _2: std::option::Option<char>; // in scope 0 at ui/associated-types/associated-types-enum-field-named.rs:34:34: 34:43

    bb0: {
        _2 = Option::<char>::Some(const 'x'); // scope 0 at ui/associated-types/associated-types-enum-field-named.rs:34:34: 34:43
        _1 = &_2;                        // scope 0 at ui/associated-types/associated-types-enum-field-named.rs:34:33: 34:43
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    }
}

promoted[1] in main: &usize = {
    let mut _0: &usize;                  // return place in scope 0 at ui/associated-types/associated-types-enum-field-named.rs:34:28: 34:30
    let mut _1: usize;                   // in scope 0 at ui/associated-types/associated-types-enum-field-named.rs:34:29: 34:30

    bb0: {
        _1 = const 0_usize;              // scope 0 at ui/associated-types/associated-types-enum-field-named.rs:34:29: 34:30
        _0 = &_1;                        // scope 0 at ui/associated-types/associated-types-enum-field-named.rs:34:28: 34:30
        return;                          // scope 0 at ui/associated-types/associated-types-enum-field-named.rs:34:28: 34:30
    }
}
