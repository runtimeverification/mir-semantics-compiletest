// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
fn main() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/associated-types/issue-54467.rs:38:11: 38:11
    let _1: Reserved<'_, ()>;            // in scope 0 at ui/associated-types/issue-54467.rs:39:9: 39:10
    let mut _2: Lex<'_, ()>;             // in scope 0 at ui/associated-types/issue-54467.rs:40:12: 42:10
    let mut _3: &();                     // in scope 0 at ui/associated-types/issue-54467.rs:41:16: 41:19
    let _4: &();                         // in scope 0 at ui/associated-types/issue-54467.rs:41:16: 41:19
    let mut _6: &();                     // in scope 0 at ui/associated-types/issue-54467.rs:41:16: 41:19
    scope 1 {
        debug r => _1;                   // in scope 1 at ui/associated-types/issue-54467.rs:39:9: 39:10
        let _5: &();                     // in scope 1 at ui/associated-types/issue-54467.rs:45:9: 45:11
        scope 2 {
            debug _v => _5;              // in scope 2 at ui/associated-types/issue-54467.rs:45:9: 45:11
        }
    }

    bb0: {
        _6 = const _;                    // scope 0 at ui/associated-types/issue-54467.rs:41:16: 41:19
                                         // mir::Constant
                                         // + span: ui/associated-types/issue-54467.rs:41:16: 41:19
                                         // + literal: Const { ty: &(), val: Unevaluated(main, [], Some(promoted[0])) }
        _4 = _6;                         // scope 0 at ui/associated-types/issue-54467.rs:41:16: 41:19
        _3 = _4;                         // scope 0 at ui/associated-types/issue-54467.rs:41:16: 41:19
        _2 = Lex::<'_, ()> { x: move _3 }; // scope 0 at ui/associated-types/issue-54467.rs:40:12: 42:10
        _1 = Reserved::<'_, ()> { x: move _2 }; // scope 0 at ui/associated-types/issue-54467.rs:39:27: 43:6
        _5 = ((_1.0: Lex<'_, ()>).0: &()); // scope 1 at ui/associated-types/issue-54467.rs:45:14: 45:19
        return;                          // scope 0 at ui/associated-types/issue-54467.rs:46:2: 46:2
    }
}

promoted[0] in main: &() = {
    let mut _0: &();                     // return place in scope 0 at ui/associated-types/issue-54467.rs:41:16: 41:19
    let mut _1: ();                      // in scope 0 at ui/associated-types/issue-54467.rs:41:17: 41:19

    bb0: {
        _1 = ();                         // scope 0 at ui/associated-types/issue-54467.rs:41:17: 41:19
        _0 = &_1;                        // scope 0 at ui/associated-types/issue-54467.rs:41:16: 41:19
        return;                          // scope 0 at ui/associated-types/issue-54467.rs:41:16: 41:19
    }
}
