// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
const Tr::C: u8 = {
    let mut _0: u8;                      // return place in scope 0 at ui/associated-types/associated-types-overridden-default.rs:11:14: 11:16

    bb0: {
        _0 = const 11_u8;                // scope 0 at ui/associated-types/associated-types-overridden-default.rs:11:19: 11:21
        return;                          // scope 0 at ui/associated-types/associated-types-overridden-default.rs:11:5: 11:22
    }
}

fn Tr::foo(_1: &Self) -> () {
    debug self => _1;                    // in scope 0 at ui/associated-types/associated-types-overridden-default.rs:12:12: 12:17
    let mut _0: ();                      // return place in scope 0 at ui/associated-types/associated-types-overridden-default.rs:12:19: 12:19

    bb0: {
        return;                          // scope 0 at ui/associated-types/associated-types-overridden-default.rs:12:21: 12:21
    }
}

fn main() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/associated-types/associated-types-overridden-default.rs:19:11: 19:11
    scope 1 {
        scope 2 {
        }
    }

    bb0: {
        return;                          // scope 0 at ui/associated-types/associated-types-overridden-default.rs:22:2: 22:2
    }
}
