// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
fn Other::uhoh(_1: &Self, _2: U, _3: <Self as Get>::Value) -> () {
    debug self => _1;                    // in scope 0 at ui/associated-types/associated-types-for-unimpl-trait_fixed.rs:10:20: 10:25
    debug foo => _2;                     // in scope 0 at ui/associated-types/associated-types-for-unimpl-trait_fixed.rs:10:27: 10:30
    debug bar => _3;                     // in scope 0 at ui/associated-types/associated-types-for-unimpl-trait_fixed.rs:10:35: 10:38
    let mut _0: ();                      // return place in scope 0 at ui/associated-types/associated-types-for-unimpl-trait_fixed.rs:10:62: 10:62

    bb0: {
        drop(_3) -> [return: bb1, unwind: bb3]; // scope 0 at ui/associated-types/associated-types-for-unimpl-trait_fixed.rs:10:79: 10:80
    }

    bb1: {
        drop(_2) -> bb2;                 // scope 0 at ui/associated-types/associated-types-for-unimpl-trait_fixed.rs:10:79: 10:80
    }

    bb2: {
        return;                          // scope 0 at ui/associated-types/associated-types-for-unimpl-trait_fixed.rs:10:80: 10:80
    }

    bb3 (cleanup): {
        drop(_2) -> bb4;                 // scope 0 at ui/associated-types/associated-types-for-unimpl-trait_fixed.rs:10:79: 10:80
    }

    bb4 (cleanup): {
        resume;                          // scope 0 at ui/associated-types/associated-types-for-unimpl-trait_fixed.rs:10:5: 10:80
    }
}

fn main() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/associated-types/associated-types-for-unimpl-trait_fixed.rs:14:11: 14:11

    bb0: {
        return;                          // scope 0 at ui/associated-types/associated-types-for-unimpl-trait_fixed.rs:15:2: 15:2
    }
}
