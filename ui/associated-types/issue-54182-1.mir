// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
fn main() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/associated-types/issue-54182-1.rs:23:11: 23:11
    let mut _1: ();                      // in scope 0 at ui/associated-types/issue-54182-1.rs:16:9: 16:36
    let mut _3: (&f32, &f32);            // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _4: &f32;                    // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let mut _5: &f32;                    // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _8: bool;                    // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    let mut _9: bool;                    // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
    let mut _10: f32;                    // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
    let mut _11: f32;                    // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
    let _13: !;                          // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
    let mut _14: core::panicking::AssertKind; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
    let mut _15: &f32;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let _16: &f32;                       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let mut _17: &f32;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let _18: &f32;                       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let mut _19: std::option::Option<std::fmt::Arguments<'_>>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
    let mut _20: ();                     // in scope 0 at ui/associated-types/issue-54182-1.rs:19:9: 19:40
    let mut _22: (&i32, &i32);           // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _23: &i32;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let mut _24: &i32;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _27: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    let mut _28: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
    let mut _29: i32;                    // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
    let mut _30: i32;                    // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
    let _32: !;                          // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
    let mut _33: core::panicking::AssertKind; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
    let mut _34: &i32;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let _35: &i32;                       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let mut _36: &i32;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let _37: &i32;                       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let mut _38: std::option::Option<std::fmt::Arguments<'_>>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
    scope 1 {
        let _2: f32;                     // in scope 1 at ui/associated-types/issue-54182-1.rs:26:9: 26:10
        scope 2 {
            debug r => _2;               // in scope 2 at ui/associated-types/issue-54182-1.rs:26:9: 26:10
            let _6: &f32;                // in scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
            let _7: &f32;                // in scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
            let mut _40: &f32;           // in scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
            scope 3 {
                debug left_val => _6;    // in scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
                debug right_val => _7;   // in scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
                let _12: core::panicking::AssertKind; // in scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                scope 4 {
                    debug kind => _12;   // in scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                }
            }
            scope 5 {
                let _21: i32;            // in scope 5 at ui/associated-types/issue-54182-1.rs:31:9: 31:10
                scope 6 {
                    debug r => _21;      // in scope 6 at ui/associated-types/issue-54182-1.rs:31:9: 31:10
                    let _25: &i32;       // in scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
                    let _26: &i32;       // in scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
                    let mut _39: &i32;   // in scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                    scope 7 {
                        debug left_val => _25; // in scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
                        debug right_val => _26; // in scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
                        let _31: core::panicking::AssertKind; // in scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                        scope 8 {
                            debug kind => _31; // in scope 8 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                        }
                    }
                }
            }
        }
    }

    bb0: {
        _1 = overload2::<(), i32, bool>(const 42_i32, const true) -> bb1; // scope 0 at ui/associated-types/issue-54182-1.rs:16:9: 16:36
                                         // mir::Constant
                                         // + span: ui/associated-types/issue-54182-1.rs:16:9: 16:28
                                         // + literal: Const { ty: fn(i32, bool) {overload2::<(), i32, bool>}, val: Value(<ZST>) }
    }

    bb1: {
        _2 = overload2::<f32, &str, f32>(const "Hello world", const 13f32) -> bb2; // scope 1 at ui/associated-types/issue-54182-1.rs:16:9: 16:36
                                         // mir::Constant
                                         // + span: ui/associated-types/issue-54182-1.rs:16:9: 16:28
                                         // + literal: Const { ty: fn(&str, f32) -> f32 {overload2::<f32, &str, f32>}, val: Value(<ZST>) }
                                         // mir::Constant
                                         // + span: ui/associated-types/issue-54182-1.rs:26:28: 26:41
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
    }

    bb2: {
        _4 = &_2;                        // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _40 = const _;                   // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // + literal: Const { ty: &f32, val: Unevaluated(main, [], Some(promoted[1])) }
        _5 = _40;                        // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _3 = (move _4, move _5);         // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _6 = (_3.0: &f32);               // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _7 = (_3.1: &f32);               // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _10 = (*_6);                     // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
        _11 = const 13f32;               // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
        _9 = Eq(move _10, move _11);     // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
        _8 = Not(move _9);               // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
        switchInt(move _8) -> [0: bb4, otherwise: bb3]; // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    }

    bb3: {
        _12 = const core::panicking::AssertKind::Eq; // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _14 = const core::panicking::AssertKind::Eq; // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _16 = _6;                        // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _15 = _16;                       // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _18 = _7;                        // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _17 = _18;                       // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _19 = Option::<Arguments<'_>>::None; // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
        _13 = core::panicking::assert_failed::<f32, f32>(move _14, move _15, move _17, move _19); // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:53
                                         // + literal: Const { ty: for<'a, 'b, 'c> fn(core::panicking::AssertKind, &'a f32, &'b f32, Option<Arguments<'c>>) -> ! {core::panicking::assert_failed::<f32, f32>}, val: Value(<ZST>) }
    }

    bb4: {
        _20 = overload3::<(), i32, bool, f32>(const 42_i32, const true, const 42.5f32) -> bb5; // scope 2 at ui/associated-types/issue-54182-1.rs:19:9: 19:40
                                         // mir::Constant
                                         // + span: ui/associated-types/issue-54182-1.rs:19:9: 19:28
                                         // + literal: Const { ty: fn(i32, bool, f32) {overload3::<(), i32, bool, f32>}, val: Value(<ZST>) }
    }

    bb5: {
        _21 = overload3::<i32, &str, f32, i32>(const "Hello world", const 13f32, const 42_i32) -> bb6; // scope 5 at ui/associated-types/issue-54182-1.rs:19:9: 19:40
                                         // mir::Constant
                                         // + span: ui/associated-types/issue-54182-1.rs:19:9: 19:28
                                         // + literal: Const { ty: fn(&str, f32, i32) -> i32 {overload3::<i32, &str, f32, i32>}, val: Value(<ZST>) }
                                         // mir::Constant
                                         // + span: ui/associated-types/issue-54182-1.rs:31:28: 31:41
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
    }

    bb6: {
        _23 = &_21;                      // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _39 = const _;                   // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // + literal: Const { ty: &i32, val: Unevaluated(main, [], Some(promoted[0])) }
        _24 = _39;                       // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _22 = (move _23, move _24);      // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _25 = (_22.0: &i32);             // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _26 = (_22.1: &i32);             // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _29 = (*_25);                    // scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
        _30 = const 42_i32;              // scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
        _28 = Eq(move _29, move _30);    // scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
        _27 = Not(move _28);             // scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
        switchInt(move _27) -> [0: bb8, otherwise: bb7]; // scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    }

    bb7: {
        _31 = const core::panicking::AssertKind::Eq; // scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _33 = const core::panicking::AssertKind::Eq; // scope 8 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _35 = _25;                       // scope 8 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _34 = _35;                       // scope 8 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _37 = _26;                       // scope 8 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _36 = _37;                       // scope 8 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _38 = Option::<Arguments<'_>>::None; // scope 8 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
        _32 = core::panicking::assert_failed::<i32, i32>(move _33, move _34, move _36, move _38); // scope 8 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:53
                                         // + literal: Const { ty: for<'a, 'b, 'c> fn(core::panicking::AssertKind, &'a i32, &'b i32, Option<Arguments<'c>>) -> ! {core::panicking::assert_failed::<i32, i32>}, val: Value(<ZST>) }
    }

    bb8: {
        return;                          // scope 0 at ui/associated-types/issue-54182-1.rs:33:2: 33:2
    }
}

promoted[0] in main: &i32 = {
    let mut _0: &i32;                    // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _1: i32;                     // in scope 0 at ui/associated-types/issue-54182-1.rs:32:19: 32:21

    bb0: {
        _1 = const 42_i32;               // scope 0 at ui/associated-types/issue-54182-1.rs:32:19: 32:21
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    }
}

promoted[1] in main: &f32 = {
    let mut _0: &f32;                    // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _1: f32;                     // in scope 0 at ui/associated-types/issue-54182-1.rs:27:19: 27:23

    bb0: {
        _1 = const 13f32;                // scope 0 at ui/associated-types/issue-54182-1.rs:27:19: 27:23
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    }
}

fn overload::<impl at ui/associated-types/issue-54182-1.rs:45:5: 45:34>::overload(_1: (i32, bool)) -> () {
    debug self => _1;                    // in scope 0 at ui/associated-types/issue-54182-1.rs:51:21: 51:25
    let mut _0: ();                      // return place in scope 0 at ui/associated-types/issue-54182-1.rs:51:42: 51:42
    let _2: i32;                         // in scope 0 at ui/associated-types/issue-54182-1.rs:52:18: 52:19
    let _3: bool;                        // in scope 0 at ui/associated-types/issue-54182-1.rs:52:21: 52:22
    let _4: ();                          // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:62
    let mut _5: std::fmt::Arguments<'_>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _6: &[&str];                 // in scope 0 at ui/associated-types/issue-54182-1.rs:53:22: 53:41
    let mut _7: &[&str; 2];              // in scope 0 at ui/associated-types/issue-54182-1.rs:53:22: 53:41
    let _8: &[&str; 2];                  // in scope 0 at ui/associated-types/issue-54182-1.rs:53:22: 53:41
    let mut _9: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _10: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let _11: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let _12: [core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _13: core::fmt::ArgumentV1<'_>; // in scope 0 at ui/associated-types/issue-54182-1.rs:53:43: 53:49
    let mut _14: &(i32, bool);           // in scope 0 at ui/associated-types/issue-54182-1.rs:53:43: 53:49
    let _15: &(i32, bool);               // in scope 0 at ui/associated-types/issue-54182-1.rs:53:43: 53:49
    let _16: (i32, bool);                // in scope 0 at ui/associated-types/issue-54182-1.rs:53:43: 53:49
    let mut _17: i32;                    // in scope 0 at ui/associated-types/issue-54182-1.rs:53:44: 53:45
    let mut _18: bool;                   // in scope 0 at ui/associated-types/issue-54182-1.rs:53:47: 53:48
    scope 1 {
        debug a => _2;                   // in scope 1 at ui/associated-types/issue-54182-1.rs:52:18: 52:19
        debug b => _3;                   // in scope 1 at ui/associated-types/issue-54182-1.rs:52:21: 52:22
        let mut _19: &[&str; 2];         // in scope 1 at ui/associated-types/issue-54182-1.rs:53:22: 53:41
    }

    bb0: {
        _2 = (_1.0: i32);                // scope 0 at ui/associated-types/issue-54182-1.rs:52:18: 52:19
        _3 = (_1.1: bool);               // scope 0 at ui/associated-types/issue-54182-1.rs:52:21: 52:22
        _19 = const _;                   // scope 1 at ui/associated-types/issue-54182-1.rs:53:22: 53:41
                                         // mir::Constant
                                         // + span: ui/associated-types/issue-54182-1.rs:53:22: 53:41
                                         // + literal: Const { ty: &[&str; 2], val: Unevaluated(<(i32, bool) as Overload>::overload, [], Some(promoted[0])) }
        _8 = _19;                        // scope 1 at ui/associated-types/issue-54182-1.rs:53:22: 53:41
        _7 = _8;                         // scope 1 at ui/associated-types/issue-54182-1.rs:53:22: 53:41
        _6 = move _7 as &[&str] (Pointer(Unsize)); // scope 1 at ui/associated-types/issue-54182-1.rs:53:22: 53:41
        _17 = _2;                        // scope 1 at ui/associated-types/issue-54182-1.rs:53:44: 53:45
        _18 = _3;                        // scope 1 at ui/associated-types/issue-54182-1.rs:53:47: 53:48
        _16 = (move _17, move _18);      // scope 1 at ui/associated-types/issue-54182-1.rs:53:43: 53:49
        _15 = &_16;                      // scope 1 at ui/associated-types/issue-54182-1.rs:53:43: 53:49
        _14 = _15;                       // scope 1 at ui/associated-types/issue-54182-1.rs:53:43: 53:49
        _13 = core::fmt::ArgumentV1::<'_>::new_debug::<(i32, bool)>(move _14) -> bb1; // scope 1 at ui/associated-types/issue-54182-1.rs:53:43: 53:49
                                         // mir::Constant
                                         // + span: ui/associated-types/issue-54182-1.rs:53:43: 53:49
                                         // + user_ty: UserType(1)
                                         // + literal: Const { ty: for<'b> fn(&'b (i32, bool)) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_debug::<(i32, bool)>}, val: Value(<ZST>) }
    }

    bb1: {
        _12 = [move _13];                // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _11 = &_12;                      // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _10 = _11;                       // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _9 = move _10 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _5 = Arguments::<'_>::new_v1(move _6, move _9) -> bb2; // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb2: {
        _4 = _print(move _5) -> bb3;     // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:62
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:27
                                         // + literal: Const { ty: for<'a> fn(Arguments<'a>) {_print}, val: Value(<ZST>) }
    }

    bb3: {
        return;                          // scope 0 at ui/associated-types/issue-54182-1.rs:54:10: 54:10
    }
}

promoted[0] in overload::<impl at ui/associated-types/issue-54182-1.rs:45:5: 45:34>::overload: &[&str; 2] = {
    let mut _0: &[&str; 2];              // return place in scope 0 at ui/associated-types/issue-54182-1.rs:53:22: 53:41
    let mut _1: [&str; 2];               // in scope 0 at ui/associated-types/issue-54182-1.rs:53:22: 53:41

    bb0: {
        _1 = [const "i32 and bool ", const "\n"]; // scope 0 at ui/associated-types/issue-54182-1.rs:53:22: 53:41
                                         // mir::Constant
                                         // + span: ui/associated-types/issue-54182-1.rs:53:22: 53:41
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
                                         // mir::Constant
                                         // + span: ui/associated-types/issue-54182-1.rs:53:22: 53:41
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at ui/associated-types/issue-54182-1.rs:53:22: 53:41
        return;                          // scope 0 at ui/associated-types/issue-54182-1.rs:53:22: 53:41
    }
}

fn overload::<impl at ui/associated-types/issue-54182-1.rs:56:5: 56:41>::overload(_1: (&str, f32)) -> f32 {
    debug self => _1;                    // in scope 0 at ui/associated-types/issue-54182-1.rs:58:21: 58:25
    let mut _0: f32;                     // return place in scope 0 at ui/associated-types/issue-54182-1.rs:59:21: 59:22
    let _2: &str;                        // in scope 0 at ui/associated-types/issue-54182-1.rs:59:18: 59:19
    let _3: ();                          // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:62
    let mut _4: std::fmt::Arguments<'_>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _5: &[&str];                 // in scope 0 at ui/associated-types/issue-54182-1.rs:60:22: 60:41
    let mut _6: &[&str; 2];              // in scope 0 at ui/associated-types/issue-54182-1.rs:60:22: 60:41
    let _7: &[&str; 2];                  // in scope 0 at ui/associated-types/issue-54182-1.rs:60:22: 60:41
    let mut _8: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _9: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let _10: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let _11: [core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _12: core::fmt::ArgumentV1<'_>; // in scope 0 at ui/associated-types/issue-54182-1.rs:60:43: 60:49
    let mut _13: &(&str, f32);           // in scope 0 at ui/associated-types/issue-54182-1.rs:60:43: 60:49
    let _14: &(&str, f32);               // in scope 0 at ui/associated-types/issue-54182-1.rs:60:43: 60:49
    let _15: (&str, f32);                // in scope 0 at ui/associated-types/issue-54182-1.rs:60:43: 60:49
    let mut _16: &str;                   // in scope 0 at ui/associated-types/issue-54182-1.rs:60:44: 60:45
    let mut _17: f32;                    // in scope 0 at ui/associated-types/issue-54182-1.rs:60:47: 60:48
    scope 1 {
        debug a => _2;                   // in scope 1 at ui/associated-types/issue-54182-1.rs:59:18: 59:19
        debug b => _0;                   // in scope 1 at ui/associated-types/issue-54182-1.rs:59:21: 59:22
        let mut _18: &[&str; 2];         // in scope 1 at ui/associated-types/issue-54182-1.rs:60:22: 60:41
    }

    bb0: {
        _2 = (_1.0: &str);               // scope 0 at ui/associated-types/issue-54182-1.rs:59:18: 59:19
        _0 = (_1.1: f32);                // scope 0 at ui/associated-types/issue-54182-1.rs:59:21: 59:22
        _18 = const _;                   // scope 1 at ui/associated-types/issue-54182-1.rs:60:22: 60:41
                                         // mir::Constant
                                         // + span: ui/associated-types/issue-54182-1.rs:60:22: 60:41
                                         // + literal: Const { ty: &[&str; 2], val: Unevaluated(<(&'a str, f32) as Overload>::overload, [ReErased], Some(promoted[0])) }
        _7 = _18;                        // scope 1 at ui/associated-types/issue-54182-1.rs:60:22: 60:41
        _6 = _7;                         // scope 1 at ui/associated-types/issue-54182-1.rs:60:22: 60:41
        _5 = move _6 as &[&str] (Pointer(Unsize)); // scope 1 at ui/associated-types/issue-54182-1.rs:60:22: 60:41
        _16 = _2;                        // scope 1 at ui/associated-types/issue-54182-1.rs:60:44: 60:45
        _17 = _0;                        // scope 1 at ui/associated-types/issue-54182-1.rs:60:47: 60:48
        _15 = (move _16, move _17);      // scope 1 at ui/associated-types/issue-54182-1.rs:60:43: 60:49
        _14 = &_15;                      // scope 1 at ui/associated-types/issue-54182-1.rs:60:43: 60:49
        _13 = _14;                       // scope 1 at ui/associated-types/issue-54182-1.rs:60:43: 60:49
        _12 = core::fmt::ArgumentV1::<'_>::new_debug::<(&str, f32)>(move _13) -> bb1; // scope 1 at ui/associated-types/issue-54182-1.rs:60:43: 60:49
                                         // mir::Constant
                                         // + span: ui/associated-types/issue-54182-1.rs:60:43: 60:49
                                         // + user_ty: UserType(1)
                                         // + literal: Const { ty: for<'b> fn(&'b (&str, f32)) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_debug::<(&str, f32)>}, val: Value(<ZST>) }
    }

    bb1: {
        _11 = [move _12];                // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _10 = &_11;                      // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _9 = _10;                        // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _8 = move _9 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _4 = Arguments::<'_>::new_v1(move _5, move _8) -> bb2; // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb2: {
        _3 = _print(move _4) -> bb3;     // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:62
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:27
                                         // + literal: Const { ty: for<'a> fn(Arguments<'a>) {_print}, val: Value(<ZST>) }
    }

    bb3: {
        return;                          // scope 0 at ui/associated-types/issue-54182-1.rs:62:10: 62:10
    }
}

promoted[0] in overload::<impl at ui/associated-types/issue-54182-1.rs:56:5: 56:41>::overload: &[&str; 2] = {
    let mut _0: &[&str; 2];              // return place in scope 0 at ui/associated-types/issue-54182-1.rs:60:22: 60:41
    let mut _1: [&str; 2];               // in scope 0 at ui/associated-types/issue-54182-1.rs:60:22: 60:41

    bb0: {
        _1 = [const "&str and f32 ", const "\n"]; // scope 0 at ui/associated-types/issue-54182-1.rs:60:22: 60:41
                                         // mir::Constant
                                         // + span: ui/associated-types/issue-54182-1.rs:60:22: 60:41
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
                                         // mir::Constant
                                         // + span: ui/associated-types/issue-54182-1.rs:60:22: 60:41
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at ui/associated-types/issue-54182-1.rs:60:22: 60:41
        return;                          // scope 0 at ui/associated-types/issue-54182-1.rs:60:22: 60:41
    }
}

fn overload::<impl at ui/associated-types/issue-54182-1.rs:66:5: 66:39>::overload(_1: (i32, bool, f32)) -> () {
    debug self => _1;                    // in scope 0 at ui/associated-types/issue-54182-1.rs:68:21: 68:25
    let mut _0: ();                      // return place in scope 0 at ui/associated-types/issue-54182-1.rs:68:42: 68:42
    let _2: i32;                         // in scope 0 at ui/associated-types/issue-54182-1.rs:69:18: 69:19
    let _3: bool;                        // in scope 0 at ui/associated-types/issue-54182-1.rs:69:21: 69:22
    let _4: f32;                         // in scope 0 at ui/associated-types/issue-54182-1.rs:69:24: 69:25
    let _5: ();                          // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:62
    let mut _6: std::fmt::Arguments<'_>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _7: &[&str];                 // in scope 0 at ui/associated-types/issue-54182-1.rs:70:22: 70:49
    let mut _8: &[&str; 2];              // in scope 0 at ui/associated-types/issue-54182-1.rs:70:22: 70:49
    let _9: &[&str; 2];                  // in scope 0 at ui/associated-types/issue-54182-1.rs:70:22: 70:49
    let mut _10: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _11: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let _12: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let _13: [core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _14: core::fmt::ArgumentV1<'_>; // in scope 0 at ui/associated-types/issue-54182-1.rs:70:51: 70:60
    let mut _15: &(i32, bool, f32);      // in scope 0 at ui/associated-types/issue-54182-1.rs:70:51: 70:60
    let _16: &(i32, bool, f32);          // in scope 0 at ui/associated-types/issue-54182-1.rs:70:51: 70:60
    let _17: (i32, bool, f32);           // in scope 0 at ui/associated-types/issue-54182-1.rs:70:51: 70:60
    let mut _18: i32;                    // in scope 0 at ui/associated-types/issue-54182-1.rs:70:52: 70:53
    let mut _19: bool;                   // in scope 0 at ui/associated-types/issue-54182-1.rs:70:55: 70:56
    let mut _20: f32;                    // in scope 0 at ui/associated-types/issue-54182-1.rs:70:58: 70:59
    scope 1 {
        debug a => _2;                   // in scope 1 at ui/associated-types/issue-54182-1.rs:69:18: 69:19
        debug b => _3;                   // in scope 1 at ui/associated-types/issue-54182-1.rs:69:21: 69:22
        debug c => _4;                   // in scope 1 at ui/associated-types/issue-54182-1.rs:69:24: 69:25
        let mut _21: &[&str; 2];         // in scope 1 at ui/associated-types/issue-54182-1.rs:70:22: 70:49
    }

    bb0: {
        _2 = (_1.0: i32);                // scope 0 at ui/associated-types/issue-54182-1.rs:69:18: 69:19
        _3 = (_1.1: bool);               // scope 0 at ui/associated-types/issue-54182-1.rs:69:21: 69:22
        _4 = (_1.2: f32);                // scope 0 at ui/associated-types/issue-54182-1.rs:69:24: 69:25
        _21 = const _;                   // scope 1 at ui/associated-types/issue-54182-1.rs:70:22: 70:49
                                         // mir::Constant
                                         // + span: ui/associated-types/issue-54182-1.rs:70:22: 70:49
                                         // + literal: Const { ty: &[&str; 2], val: Unevaluated(<(i32, bool, f32) as Overload>::overload, [], Some(promoted[0])) }
        _9 = _21;                        // scope 1 at ui/associated-types/issue-54182-1.rs:70:22: 70:49
        _8 = _9;                         // scope 1 at ui/associated-types/issue-54182-1.rs:70:22: 70:49
        _7 = move _8 as &[&str] (Pointer(Unsize)); // scope 1 at ui/associated-types/issue-54182-1.rs:70:22: 70:49
        _18 = _2;                        // scope 1 at ui/associated-types/issue-54182-1.rs:70:52: 70:53
        _19 = _3;                        // scope 1 at ui/associated-types/issue-54182-1.rs:70:55: 70:56
        _20 = _4;                        // scope 1 at ui/associated-types/issue-54182-1.rs:70:58: 70:59
        _17 = (move _18, move _19, move _20); // scope 1 at ui/associated-types/issue-54182-1.rs:70:51: 70:60
        _16 = &_17;                      // scope 1 at ui/associated-types/issue-54182-1.rs:70:51: 70:60
        _15 = _16;                       // scope 1 at ui/associated-types/issue-54182-1.rs:70:51: 70:60
        _14 = core::fmt::ArgumentV1::<'_>::new_debug::<(i32, bool, f32)>(move _15) -> bb1; // scope 1 at ui/associated-types/issue-54182-1.rs:70:51: 70:60
                                         // mir::Constant
                                         // + span: ui/associated-types/issue-54182-1.rs:70:51: 70:60
                                         // + user_ty: UserType(1)
                                         // + literal: Const { ty: for<'b> fn(&'b (i32, bool, f32)) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_debug::<(i32, bool, f32)>}, val: Value(<ZST>) }
    }

    bb1: {
        _13 = [move _14];                // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _12 = &_13;                      // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _11 = _12;                       // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _10 = move _11 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _6 = Arguments::<'_>::new_v1(move _7, move _10) -> bb2; // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb2: {
        _5 = _print(move _6) -> bb3;     // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:62
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:27
                                         // + literal: Const { ty: for<'a> fn(Arguments<'a>) {_print}, val: Value(<ZST>) }
    }

    bb3: {
        return;                          // scope 0 at ui/associated-types/issue-54182-1.rs:71:10: 71:10
    }
}

promoted[0] in overload::<impl at ui/associated-types/issue-54182-1.rs:66:5: 66:39>::overload: &[&str; 2] = {
    let mut _0: &[&str; 2];              // return place in scope 0 at ui/associated-types/issue-54182-1.rs:70:22: 70:49
    let mut _1: [&str; 2];               // in scope 0 at ui/associated-types/issue-54182-1.rs:70:22: 70:49

    bb0: {
        _1 = [const "i32 and bool and f32 ", const "\n"]; // scope 0 at ui/associated-types/issue-54182-1.rs:70:22: 70:49
                                         // mir::Constant
                                         // + span: ui/associated-types/issue-54182-1.rs:70:22: 70:49
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
                                         // mir::Constant
                                         // + span: ui/associated-types/issue-54182-1.rs:70:22: 70:49
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at ui/associated-types/issue-54182-1.rs:70:22: 70:49
        return;                          // scope 0 at ui/associated-types/issue-54182-1.rs:70:22: 70:49
    }
}

fn overload::<impl at ui/associated-types/issue-54182-1.rs:73:5: 73:46>::overload(_1: (&str, f32, i32)) -> i32 {
    debug self => _1;                    // in scope 0 at ui/associated-types/issue-54182-1.rs:75:21: 75:25
    let mut _0: i32;                     // return place in scope 0 at ui/associated-types/issue-54182-1.rs:76:24: 76:25
    let _2: &str;                        // in scope 0 at ui/associated-types/issue-54182-1.rs:76:18: 76:19
    let _3: f32;                         // in scope 0 at ui/associated-types/issue-54182-1.rs:76:21: 76:22
    let _4: ();                          // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:62
    let mut _5: std::fmt::Arguments<'_>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _6: &[&str];                 // in scope 0 at ui/associated-types/issue-54182-1.rs:77:22: 77:50
    let mut _7: &[&str; 2];              // in scope 0 at ui/associated-types/issue-54182-1.rs:77:22: 77:50
    let _8: &[&str; 2];                  // in scope 0 at ui/associated-types/issue-54182-1.rs:77:22: 77:50
    let mut _9: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _10: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let _11: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let _12: [core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _13: core::fmt::ArgumentV1<'_>; // in scope 0 at ui/associated-types/issue-54182-1.rs:77:52: 77:61
    let mut _14: &(&str, f32, i32);      // in scope 0 at ui/associated-types/issue-54182-1.rs:77:52: 77:61
    let _15: &(&str, f32, i32);          // in scope 0 at ui/associated-types/issue-54182-1.rs:77:52: 77:61
    let _16: (&str, f32, i32);           // in scope 0 at ui/associated-types/issue-54182-1.rs:77:52: 77:61
    let mut _17: &str;                   // in scope 0 at ui/associated-types/issue-54182-1.rs:77:53: 77:54
    let mut _18: f32;                    // in scope 0 at ui/associated-types/issue-54182-1.rs:77:56: 77:57
    let mut _19: i32;                    // in scope 0 at ui/associated-types/issue-54182-1.rs:77:59: 77:60
    scope 1 {
        debug a => _2;                   // in scope 1 at ui/associated-types/issue-54182-1.rs:76:18: 76:19
        debug b => _3;                   // in scope 1 at ui/associated-types/issue-54182-1.rs:76:21: 76:22
        debug c => _0;                   // in scope 1 at ui/associated-types/issue-54182-1.rs:76:24: 76:25
        let mut _20: &[&str; 2];         // in scope 1 at ui/associated-types/issue-54182-1.rs:77:22: 77:50
    }

    bb0: {
        _2 = (_1.0: &str);               // scope 0 at ui/associated-types/issue-54182-1.rs:76:18: 76:19
        _3 = (_1.1: f32);                // scope 0 at ui/associated-types/issue-54182-1.rs:76:21: 76:22
        _0 = (_1.2: i32);                // scope 0 at ui/associated-types/issue-54182-1.rs:76:24: 76:25
        _20 = const _;                   // scope 1 at ui/associated-types/issue-54182-1.rs:77:22: 77:50
                                         // mir::Constant
                                         // + span: ui/associated-types/issue-54182-1.rs:77:22: 77:50
                                         // + literal: Const { ty: &[&str; 2], val: Unevaluated(<(&'a str, f32, i32) as Overload>::overload, [ReErased], Some(promoted[0])) }
        _8 = _20;                        // scope 1 at ui/associated-types/issue-54182-1.rs:77:22: 77:50
        _7 = _8;                         // scope 1 at ui/associated-types/issue-54182-1.rs:77:22: 77:50
        _6 = move _7 as &[&str] (Pointer(Unsize)); // scope 1 at ui/associated-types/issue-54182-1.rs:77:22: 77:50
        _17 = _2;                        // scope 1 at ui/associated-types/issue-54182-1.rs:77:53: 77:54
        _18 = _3;                        // scope 1 at ui/associated-types/issue-54182-1.rs:77:56: 77:57
        _19 = _0;                        // scope 1 at ui/associated-types/issue-54182-1.rs:77:59: 77:60
        _16 = (move _17, move _18, move _19); // scope 1 at ui/associated-types/issue-54182-1.rs:77:52: 77:61
        _15 = &_16;                      // scope 1 at ui/associated-types/issue-54182-1.rs:77:52: 77:61
        _14 = _15;                       // scope 1 at ui/associated-types/issue-54182-1.rs:77:52: 77:61
        _13 = core::fmt::ArgumentV1::<'_>::new_debug::<(&str, f32, i32)>(move _14) -> bb1; // scope 1 at ui/associated-types/issue-54182-1.rs:77:52: 77:61
                                         // mir::Constant
                                         // + span: ui/associated-types/issue-54182-1.rs:77:52: 77:61
                                         // + user_ty: UserType(1)
                                         // + literal: Const { ty: for<'b> fn(&'b (&str, f32, i32)) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_debug::<(&str, f32, i32)>}, val: Value(<ZST>) }
    }

    bb1: {
        _12 = [move _13];                // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _11 = &_12;                      // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _10 = _11;                       // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _9 = move _10 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _5 = Arguments::<'_>::new_v1(move _6, move _9) -> bb2; // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb2: {
        _4 = _print(move _5) -> bb3;     // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:62
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:27
                                         // + literal: Const { ty: for<'a> fn(Arguments<'a>) {_print}, val: Value(<ZST>) }
    }

    bb3: {
        return;                          // scope 0 at ui/associated-types/issue-54182-1.rs:79:10: 79:10
    }
}

promoted[0] in overload::<impl at ui/associated-types/issue-54182-1.rs:73:5: 73:46>::overload: &[&str; 2] = {
    let mut _0: &[&str; 2];              // return place in scope 0 at ui/associated-types/issue-54182-1.rs:77:22: 77:50
    let mut _1: [&str; 2];               // in scope 0 at ui/associated-types/issue-54182-1.rs:77:22: 77:50

    bb0: {
        _1 = [const "&str and f32 and i32: ", const "\n"]; // scope 0 at ui/associated-types/issue-54182-1.rs:77:22: 77:50
                                         // mir::Constant
                                         // + span: ui/associated-types/issue-54182-1.rs:77:22: 77:50
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
                                         // mir::Constant
                                         // + span: ui/associated-types/issue-54182-1.rs:77:22: 77:50
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at ui/associated-types/issue-54182-1.rs:77:22: 77:50
        return;                          // scope 0 at ui/associated-types/issue-54182-1.rs:77:22: 77:50
    }
}

fn overload2(_1: A, _2: B) -> R {
    debug a => _1;                       // in scope 0 at ui/associated-types/issue-54182-1.rs:85:31: 85:32
    debug b => _2;                       // in scope 0 at ui/associated-types/issue-54182-1.rs:85:37: 85:38
    let mut _0: R;                       // return place in scope 0 at ui/associated-types/issue-54182-1.rs:85:46: 85:47
    let mut _3: (A, B);                  // in scope 0 at ui/associated-types/issue-54182-1.rs:86:9: 86:15
    let mut _4: A;                       // in scope 0 at ui/associated-types/issue-54182-1.rs:86:10: 86:11
    let mut _5: B;                       // in scope 0 at ui/associated-types/issue-54182-1.rs:86:13: 86:14

    bb0: {
        _4 = move _1;                    // scope 0 at ui/associated-types/issue-54182-1.rs:86:10: 86:11
        _5 = move _2;                    // scope 0 at ui/associated-types/issue-54182-1.rs:86:13: 86:14
        _3 = (move _4, move _5);         // scope 0 at ui/associated-types/issue-54182-1.rs:86:9: 86:15
        _0 = <(A, B) as Overload>::overload(move _3) -> bb1; // scope 0 at ui/associated-types/issue-54182-1.rs:86:9: 86:26
                                         // mir::Constant
                                         // + span: ui/associated-types/issue-54182-1.rs:86:16: 86:24
                                         // + literal: Const { ty: fn((A, B)) -> <(A, B) as Overload>::R {<(A, B) as Overload>::overload}, val: Value(<ZST>) }
    }

    bb1: {
        return;                          // scope 0 at ui/associated-types/issue-54182-1.rs:87:6: 87:6
    }
}

fn overload3(_1: A, _2: B, _3: C) -> R {
    debug a => _1;                       // in scope 0 at ui/associated-types/issue-54182-1.rs:89:34: 89:35
    debug b => _2;                       // in scope 0 at ui/associated-types/issue-54182-1.rs:89:40: 89:41
    debug c => _3;                       // in scope 0 at ui/associated-types/issue-54182-1.rs:89:46: 89:47
    let mut _0: R;                       // return place in scope 0 at ui/associated-types/issue-54182-1.rs:89:55: 89:56
    let mut _4: (A, B, C);               // in scope 0 at ui/associated-types/issue-54182-1.rs:90:9: 90:18
    let mut _5: A;                       // in scope 0 at ui/associated-types/issue-54182-1.rs:90:10: 90:11
    let mut _6: B;                       // in scope 0 at ui/associated-types/issue-54182-1.rs:90:13: 90:14
    let mut _7: C;                       // in scope 0 at ui/associated-types/issue-54182-1.rs:90:16: 90:17

    bb0: {
        _5 = move _1;                    // scope 0 at ui/associated-types/issue-54182-1.rs:90:10: 90:11
        _6 = move _2;                    // scope 0 at ui/associated-types/issue-54182-1.rs:90:13: 90:14
        _7 = move _3;                    // scope 0 at ui/associated-types/issue-54182-1.rs:90:16: 90:17
        _4 = (move _5, move _6, move _7); // scope 0 at ui/associated-types/issue-54182-1.rs:90:9: 90:18
        _0 = <(A, B, C) as Overload>::overload(move _4) -> bb1; // scope 0 at ui/associated-types/issue-54182-1.rs:90:9: 90:29
                                         // mir::Constant
                                         // + span: ui/associated-types/issue-54182-1.rs:90:19: 90:27
                                         // + literal: Const { ty: fn((A, B, C)) -> <(A, B, C) as Overload>::R {<(A, B, C) as Overload>::overload}, val: Value(<ZST>) }
    }

    bb1: {
        return;                          // scope 0 at ui/associated-types/issue-54182-1.rs:91:6: 91:6
    }
}
