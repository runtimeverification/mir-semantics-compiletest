// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
fn A::dummy(_1: &Self) -> () {
    debug self => _1;                    // in scope 0 at ui/associated-types/associated-types-projection-in-supertrait.rs:11:14: 11:19
    let mut _0: ();                      // return place in scope 0 at ui/associated-types/associated-types-projection-in-supertrait.rs:11:21: 11:21

    bb0: {
        return;                          // scope 0 at ui/associated-types/associated-types-projection-in-supertrait.rs:11:24: 11:24
    }
}

fn <impl at ui/associated-types/associated-types-projection-in-supertrait.rs:33:1: 33:18>::foo(_1: &Y, _2: i32) -> String {
    debug self => _1;                    // in scope 0 at ui/associated-types/associated-types-projection-in-supertrait.rs:35:13: 35:18
    debug t => _2;                       // in scope 0 at ui/associated-types/associated-types-projection-in-supertrait.rs:35:20: 35:21
    let mut _0: std::string::String;     // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:13: 118:16
    let mut _3: std::fmt::Arguments<'_>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
    let mut _4: &[&str];                 // in scope 0 at ui/associated-types/associated-types-projection-in-supertrait.rs:37:17: 37:27
    let mut _5: &[&str; 1];              // in scope 0 at ui/associated-types/associated-types-projection-in-supertrait.rs:37:17: 37:27
    let _6: &[&str; 1];                  // in scope 0 at ui/associated-types/associated-types-projection-in-supertrait.rs:37:17: 37:27
    let mut _7: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
    let mut _8: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
    let _9: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
    let _10: [core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
    let mut _11: core::fmt::ArgumentV1<'_>; // in scope 0 at ui/associated-types/associated-types-projection-in-supertrait.rs:37:29: 37:30
    let mut _12: &i32;                   // in scope 0 at ui/associated-types/associated-types-projection-in-supertrait.rs:37:29: 37:30
    let _13: &i32;                       // in scope 0 at ui/associated-types/associated-types-projection-in-supertrait.rs:37:29: 37:30
    let mut _14: &[&str; 1];             // in scope 0 at ui/associated-types/associated-types-projection-in-supertrait.rs:37:17: 37:27
    scope 1 {
        debug res => _0;                 // in scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:13: 118:16
    }

    bb0: {
        _14 = const _;                   // scope 0 at ui/associated-types/associated-types-projection-in-supertrait.rs:37:17: 37:27
                                         // mir::Constant
                                         // + span: ui/associated-types/associated-types-projection-in-supertrait.rs:37:17: 37:27
                                         // + literal: Const { ty: &[&str; 1], val: Unevaluated(<Y as B<i32>>::foo, [], Some(promoted[0])) }
        _6 = _14;                        // scope 0 at ui/associated-types/associated-types-projection-in-supertrait.rs:37:17: 37:27
        _5 = _6;                         // scope 0 at ui/associated-types/associated-types-projection-in-supertrait.rs:37:17: 37:27
        _4 = move _5 as &[&str] (Pointer(Unsize)); // scope 0 at ui/associated-types/associated-types-projection-in-supertrait.rs:37:17: 37:27
        _13 = &_2;                       // scope 0 at ui/associated-types/associated-types-projection-in-supertrait.rs:37:29: 37:30
        _12 = _13;                       // scope 0 at ui/associated-types/associated-types-projection-in-supertrait.rs:37:29: 37:30
        _11 = core::fmt::ArgumentV1::<'_>::new_display::<i32>(move _12) -> bb1; // scope 0 at ui/associated-types/associated-types-projection-in-supertrait.rs:37:29: 37:30
                                         // mir::Constant
                                         // + span: ui/associated-types/associated-types-projection-in-supertrait.rs:37:29: 37:30
                                         // + user_ty: UserType(1)
                                         // + literal: Const { ty: for<'b> fn(&'b i32) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_display::<i32>}, val: Value(<ZST>) }
    }

    bb1: {
        _10 = [move _11];                // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
        _9 = &_10;                       // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
        _8 = _9;                         // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
        _7 = move _8 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
        _3 = Arguments::<'_>::new_v1(move _4, move _7) -> bb2; // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb2: {
        _0 = format(move _3) -> bb3;     // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:19: 118:80
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:19: 118:38
                                         // + literal: Const { ty: for<'a> fn(Arguments<'a>) -> String {format}, val: Value(<ZST>) }
    }

    bb3: {
        return;                          // scope 0 at ui/associated-types/associated-types-projection-in-supertrait.rs:38:6: 38:6
    }
}

promoted[0] in <impl at ui/associated-types/associated-types-projection-in-supertrait.rs:33:1: 33:18>::foo: &[&str; 1] = {
    let mut _0: &[&str; 1];              // return place in scope 0 at ui/associated-types/associated-types-projection-in-supertrait.rs:37:17: 37:27
    let mut _1: [&str; 1];               // in scope 0 at ui/associated-types/associated-types-projection-in-supertrait.rs:37:17: 37:27

    bb0: {
        _1 = [const "First "];           // scope 0 at ui/associated-types/associated-types-projection-in-supertrait.rs:37:17: 37:27
                                         // mir::Constant
                                         // + span: ui/associated-types/associated-types-projection-in-supertrait.rs:37:17: 37:27
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at ui/associated-types/associated-types-projection-in-supertrait.rs:37:17: 37:27
        return;                          // scope 0 at ui/associated-types/associated-types-projection-in-supertrait.rs:37:17: 37:27
    }
}

fn main() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/associated-types/associated-types-projection-in-supertrait.rs:42:1: 42:1
    let _1: Y;                           // in scope 0 at ui/associated-types/associated-types-projection-in-supertrait.rs:43:9: 43:10
    let mut _2: (&std::string::String, &std::string::String); // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _3: &std::string::String;    // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let _4: std::string::String;         // in scope 0 at ui/associated-types/associated-types-projection-in-supertrait.rs:44:16: 44:24
    let mut _5: &Y;                      // in scope 0 at ui/associated-types/associated-types-projection-in-supertrait.rs:44:16: 44:24
    let mut _6: &std::string::String;    // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let _7: std::string::String;         // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:117:23: 120:6
    let mut _9: std::fmt::Arguments<'_>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
    let mut _10: &[&str];                // in scope 0 at ui/associated-types/associated-types-projection-in-supertrait.rs:44:34: 44:43
    let mut _11: &[&str; 1];             // in scope 0 at ui/associated-types/associated-types-projection-in-supertrait.rs:44:34: 44:43
    let _12: &[&str; 1];                 // in scope 0 at ui/associated-types/associated-types-projection-in-supertrait.rs:44:34: 44:43
    let mut _13: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
    let mut _14: &[core::fmt::ArgumentV1<'_>; 0]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
    let _15: &[core::fmt::ArgumentV1<'_>; 0]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
    let mut _18: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    let mut _19: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
    let mut _20: &std::string::String;   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
    let mut _21: &std::string::String;   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
    let _23: !;                          // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
    let mut _24: core::panicking::AssertKind; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
    let mut _25: &std::string::String;   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let _26: &std::string::String;       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let mut _27: &std::string::String;   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let _28: &std::string::String;       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let mut _29: std::option::Option<std::fmt::Arguments<'_>>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
    scope 1 {
        debug y => _1;                   // in scope 1 at ui/associated-types/associated-types-projection-in-supertrait.rs:43:9: 43:10
        let _8: std::string::String;     // in scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:13: 118:16
        let _16: &std::string::String;   // in scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        let _17: &std::string::String;   // in scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        let mut _30: &[core::fmt::ArgumentV1<'_>; 0]; // in scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
        let mut _31: &[&str; 1];         // in scope 1 at ui/associated-types/associated-types-projection-in-supertrait.rs:44:34: 44:43
        scope 2 {
            debug res => _8;             // in scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:13: 118:16
        }
        scope 3 {
            debug left_val => _16;       // in scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
            debug right_val => _17;      // in scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
            let _22: core::panicking::AssertKind; // in scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
            scope 4 {
                debug kind => _22;       // in scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
            }
        }
    }

    bb0: {
        _5 = &_1;                        // scope 1 at ui/associated-types/associated-types-projection-in-supertrait.rs:44:16: 44:24
        _4 = <Y as B<i32>>::foo(move _5, const 5_i32) -> bb1; // scope 1 at ui/associated-types/associated-types-projection-in-supertrait.rs:44:16: 44:24
                                         // mir::Constant
                                         // + span: ui/associated-types/associated-types-projection-in-supertrait.rs:44:18: 44:21
                                         // + literal: Const { ty: for<'a> fn(&'a Y, i32) -> String {<Y as B<i32>>::foo}, val: Value(<ZST>) }
    }

    bb1: {
        _3 = &_4;                        // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _31 = const _;                   // scope 1 at ui/associated-types/associated-types-projection-in-supertrait.rs:44:34: 44:43
                                         // mir::Constant
                                         // + span: ui/associated-types/associated-types-projection-in-supertrait.rs:44:34: 44:43
                                         // + literal: Const { ty: &[&str; 1], val: Unevaluated(main, [], Some(promoted[1])) }
        _12 = _31;                       // scope 1 at ui/associated-types/associated-types-projection-in-supertrait.rs:44:34: 44:43
        _11 = _12;                       // scope 1 at ui/associated-types/associated-types-projection-in-supertrait.rs:44:34: 44:43
        _10 = move _11 as &[&str] (Pointer(Unsize)); // scope 1 at ui/associated-types/associated-types-projection-in-supertrait.rs:44:34: 44:43
        _30 = const _;                   // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
                                         // + literal: Const { ty: &[core::fmt::ArgumentV1<'_>; 0], val: Unevaluated(main, [], Some(promoted[0])) }
        _15 = _30;                       // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
        _14 = _15;                       // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
        _13 = move _14 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
        _9 = Arguments::<'_>::new_v1(move _10, move _13) -> [return: bb2, unwind: bb10]; // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb2: {
        _8 = format(move _9) -> [return: bb3, unwind: bb10]; // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:19: 118:80
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:19: 118:38
                                         // + literal: Const { ty: for<'a> fn(Arguments<'a>) -> String {format}, val: Value(<ZST>) }
    }

    bb3: {
        _7 = move _8;                    // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:119:9: 119:12
        _6 = &_7;                        // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _2 = (move _3, move _6);         // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _16 = (_2.0: &std::string::String); // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _17 = (_2.1: &std::string::String); // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _20 = _16;                       // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
        _21 = _17;                       // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
        _19 = <String as PartialEq>::eq(move _20, move _21) -> [return: bb4, unwind: bb9]; // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a String, &'b String) -> bool {<String as PartialEq>::eq}, val: Value(<ZST>) }
    }

    bb4: {
        _18 = Not(move _19);             // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
        switchInt(move _18) -> [0: bb6, otherwise: bb5]; // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    }

    bb5: {
        _22 = const core::panicking::AssertKind::Eq; // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _24 = const core::panicking::AssertKind::Eq; // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _26 = _16;                       // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _25 = _26;                       // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _28 = _17;                       // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _27 = _28;                       // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _29 = Option::<Arguments<'_>>::None; // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
        _23 = core::panicking::assert_failed::<String, String>(move _24, move _25, move _27, move _29) -> bb9; // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:53
                                         // + literal: Const { ty: for<'a, 'b, 'c> fn(core::panicking::AssertKind, &'a String, &'b String, Option<Arguments<'c>>) -> ! {core::panicking::assert_failed::<String, String>}, val: Value(<ZST>) }
    }

    bb6: {
        drop(_7) -> [return: bb7, unwind: bb10]; // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:48:9: 48:10
    }

    bb7: {
        drop(_4) -> bb8;                 // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:48:9: 48:10
    }

    bb8: {
        return;                          // scope 0 at ui/associated-types/associated-types-projection-in-supertrait.rs:45:2: 45:2
    }

    bb9 (cleanup): {
        drop(_7) -> bb10;                // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:48:9: 48:10
    }

    bb10 (cleanup): {
        drop(_4) -> bb11;                // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:48:9: 48:10
    }

    bb11 (cleanup): {
        resume;                          // scope 0 at ui/associated-types/associated-types-projection-in-supertrait.rs:41:1: 45:2
    }
}

promoted[0] in main: &[core::fmt::ArgumentV1<'_>; 0] = {
    let mut _0: &[core::fmt::ArgumentV1<'_>; 0]; // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
    let mut _1: [core::fmt::ArgumentV1<'_>; 0]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79

    bb0: {
        _1 = [];                         // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
    }
}

promoted[1] in main: &[&str; 1] = {
    let mut _0: &[&str; 1];              // return place in scope 0 at ui/associated-types/associated-types-projection-in-supertrait.rs:44:34: 44:43
    let mut _1: [&str; 1];               // in scope 0 at ui/associated-types/associated-types-projection-in-supertrait.rs:44:34: 44:43

    bb0: {
        _1 = [const "First 5"];          // scope 0 at ui/associated-types/associated-types-projection-in-supertrait.rs:44:34: 44:43
                                         // mir::Constant
                                         // + span: ui/associated-types/associated-types-projection-in-supertrait.rs:44:34: 44:43
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at ui/associated-types/associated-types-projection-in-supertrait.rs:44:34: 44:43
        return;                          // scope 0 at ui/associated-types/associated-types-projection-in-supertrait.rs:44:34: 44:43
    }
}
