// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
fn <impl at ui/associated-types/issue-41868.rs:15:1: 15:22>::read(_1: &mut Foo) -> Option<u8> {
    debug rdr => _1;                     // in scope 0 at ui/associated-types/issue-41868.rs:16:13: 16:16
    let mut _0: std::option::Option<u8>; // return place in scope 0 at ui/associated-types/issue-41868.rs:16:31: 16:51

    bb0: {
        _0 = Option::<u8>::Some(const 42_u8); // scope 0 at ui/associated-types/issue-41868.rs:16:54: 16:62
        return;                          // scope 0 at ui/associated-types/issue-41868.rs:16:64: 16:64
    }
}

fn <impl at ui/associated-types/issue-41868.rs:19:1: 19:23>::read(_1: &mut Foo) -> Option<u16> {
    debug rdr => _1;                     // in scope 0 at ui/associated-types/issue-41868.rs:20:13: 20:16
    let mut _0: std::option::Option<u16>; // return place in scope 0 at ui/associated-types/issue-41868.rs:20:31: 20:42

    bb0: {
        _0 = Option::<u16>::Some(const 17_u16); // scope 0 at ui/associated-types/issue-41868.rs:20:45: 20:53
        return;                          // scope 0 at ui/associated-types/issue-41868.rs:20:55: 20:55
    }
}

fn main() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/associated-types/issue-41868.rs:23:11: 23:11

    bb0: {
        return;                          // scope 0 at ui/associated-types/issue-41868.rs:23:13: 23:13
    }
}
