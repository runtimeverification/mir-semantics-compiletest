// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
fn <impl at ui/disallowed-deconstructing/disallowed-deconstructing-destructing-struct-match_fixed.rs:6:1: 6:16>::drop(_1: &mut X) -> () {
    debug self => _1;                    // in scope 0 at ui/disallowed-deconstructing/disallowed-deconstructing-destructing-struct-match_fixed.rs:7:13: 7:22
    let mut _0: ();                      // return place in scope 0 at ui/disallowed-deconstructing/disallowed-deconstructing-destructing-struct-match_fixed.rs:7:24: 7:24
    let _2: ();                          // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:62
    let mut _3: std::fmt::Arguments<'_>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _4: &[&str];                 // in scope 0 at ui/disallowed-deconstructing/disallowed-deconstructing-destructing-struct-match_fixed.rs:8:18: 8:29
    let mut _5: &[&str; 2];              // in scope 0 at ui/disallowed-deconstructing/disallowed-deconstructing-destructing-struct-match_fixed.rs:8:18: 8:29
    let _6: &[&str; 2];                  // in scope 0 at ui/disallowed-deconstructing/disallowed-deconstructing-destructing-struct-match_fixed.rs:8:18: 8:29
    let mut _7: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _8: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let _9: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let _10: [core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _11: core::fmt::ArgumentV1<'_>; // in scope 0 at ui/disallowed-deconstructing/disallowed-deconstructing-destructing-struct-match_fixed.rs:8:31: 8:37
    let mut _12: &std::string::String;   // in scope 0 at ui/disallowed-deconstructing/disallowed-deconstructing-destructing-struct-match_fixed.rs:8:31: 8:37
    let _13: &std::string::String;       // in scope 0 at ui/disallowed-deconstructing/disallowed-deconstructing-destructing-struct-match_fixed.rs:8:31: 8:37
    let mut _14: &[&str; 2];             // in scope 0 at ui/disallowed-deconstructing/disallowed-deconstructing-destructing-struct-match_fixed.rs:8:18: 8:29

    bb0: {
        _14 = const _;                   // scope 0 at ui/disallowed-deconstructing/disallowed-deconstructing-destructing-struct-match_fixed.rs:8:18: 8:29
                                         // mir::Constant
                                         // + span: ui/disallowed-deconstructing/disallowed-deconstructing-destructing-struct-match_fixed.rs:8:18: 8:29
                                         // + literal: Const { ty: &[&str; 2], val: Unevaluated(<X as Drop>::drop, [], Some(promoted[0])) }
        _6 = _14;                        // scope 0 at ui/disallowed-deconstructing/disallowed-deconstructing-destructing-struct-match_fixed.rs:8:18: 8:29
        _5 = _6;                         // scope 0 at ui/disallowed-deconstructing/disallowed-deconstructing-destructing-struct-match_fixed.rs:8:18: 8:29
        _4 = move _5 as &[&str] (Pointer(Unsize)); // scope 0 at ui/disallowed-deconstructing/disallowed-deconstructing-destructing-struct-match_fixed.rs:8:18: 8:29
        _13 = &((*_1).0: std::string::String); // scope 0 at ui/disallowed-deconstructing/disallowed-deconstructing-destructing-struct-match_fixed.rs:8:31: 8:37
        _12 = _13;                       // scope 0 at ui/disallowed-deconstructing/disallowed-deconstructing-destructing-struct-match_fixed.rs:8:31: 8:37
        _11 = core::fmt::ArgumentV1::<'_>::new_display::<String>(move _12) -> bb1; // scope 0 at ui/disallowed-deconstructing/disallowed-deconstructing-destructing-struct-match_fixed.rs:8:31: 8:37
                                         // mir::Constant
                                         // + span: ui/disallowed-deconstructing/disallowed-deconstructing-destructing-struct-match_fixed.rs:8:31: 8:37
                                         // + user_ty: UserType(1)
                                         // + literal: Const { ty: for<'b> fn(&'b String) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_display::<String>}, val: Value(<ZST>) }
    }

    bb1: {
        _10 = [move _11];                // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _9 = &_10;                       // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _8 = _9;                         // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _7 = move _8 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _3 = Arguments::<'_>::new_v1(move _4, move _7) -> bb2; // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb2: {
        _2 = _print(move _3) -> bb3;     // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:62
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:27
                                         // + literal: Const { ty: for<'a> fn(Arguments<'a>) {_print}, val: Value(<ZST>) }
    }

    bb3: {
        return;                          // scope 0 at ui/disallowed-deconstructing/disallowed-deconstructing-destructing-struct-match_fixed.rs:9:6: 9:6
    }
}

promoted[0] in <impl at ui/disallowed-deconstructing/disallowed-deconstructing-destructing-struct-match_fixed.rs:6:1: 6:16>::drop: &[&str; 2] = {
    let mut _0: &[&str; 2];              // return place in scope 0 at ui/disallowed-deconstructing/disallowed-deconstructing-destructing-struct-match_fixed.rs:8:18: 8:29
    let mut _1: [&str; 2];               // in scope 0 at ui/disallowed-deconstructing/disallowed-deconstructing-destructing-struct-match_fixed.rs:8:18: 8:29

    bb0: {
        _1 = [const "value: ", const "\n"]; // scope 0 at ui/disallowed-deconstructing/disallowed-deconstructing-destructing-struct-match_fixed.rs:8:18: 8:29
                                         // mir::Constant
                                         // + span: ui/disallowed-deconstructing/disallowed-deconstructing-destructing-struct-match_fixed.rs:8:18: 8:29
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
                                         // mir::Constant
                                         // + span: ui/disallowed-deconstructing/disallowed-deconstructing-destructing-struct-match_fixed.rs:8:18: 8:29
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at ui/disallowed-deconstructing/disallowed-deconstructing-destructing-struct-match_fixed.rs:8:18: 8:29
        return;                          // scope 0 at ui/disallowed-deconstructing/disallowed-deconstructing-destructing-struct-match_fixed.rs:8:18: 8:29
    }
}

fn main() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/disallowed-deconstructing/disallowed-deconstructing-destructing-struct-match_fixed.rs:12:11: 12:11
    let _1: X;                           // in scope 0 at ui/disallowed-deconstructing/disallowed-deconstructing-destructing-struct-match_fixed.rs:13:9: 13:10
    let mut _2: std::string::String;     // in scope 0 at ui/disallowed-deconstructing/disallowed-deconstructing-destructing-struct-match_fixed.rs:13:20: 13:39
    let mut _3: &str;                    // in scope 0 at ui/disallowed-deconstructing/disallowed-deconstructing-destructing-struct-match_fixed.rs:13:20: 13:39
    let _4: &str;                        // in scope 0 at ui/disallowed-deconstructing/disallowed-deconstructing-destructing-struct-match_fixed.rs:13:20: 13:27
    let _6: ();                          // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:62
    let mut _7: std::fmt::Arguments<'_>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _8: &[&str];                 // in scope 0 at ui/disallowed-deconstructing/disallowed-deconstructing-destructing-struct-match_fixed.rs:17:36: 17:50
    let mut _9: &[&str; 2];              // in scope 0 at ui/disallowed-deconstructing/disallowed-deconstructing-destructing-struct-match_fixed.rs:17:36: 17:50
    let _10: &[&str; 2];                 // in scope 0 at ui/disallowed-deconstructing/disallowed-deconstructing-destructing-struct-match_fixed.rs:17:36: 17:50
    let mut _11: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _12: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let _13: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let _14: [core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _15: core::fmt::ArgumentV1<'_>; // in scope 0 at ui/disallowed-deconstructing/disallowed-deconstructing-destructing-struct-match_fixed.rs:17:52: 17:53
    let mut _16: &&std::string::String;  // in scope 0 at ui/disallowed-deconstructing/disallowed-deconstructing-destructing-struct-match_fixed.rs:17:52: 17:53
    let _17: &&std::string::String;      // in scope 0 at ui/disallowed-deconstructing/disallowed-deconstructing-destructing-struct-match_fixed.rs:17:52: 17:53
    scope 1 {
        debug x => _1;                   // in scope 1 at ui/disallowed-deconstructing/disallowed-deconstructing-destructing-struct-match_fixed.rs:13:9: 13:10
        let _5: &std::string::String;    // in scope 1 at ui/disallowed-deconstructing/disallowed-deconstructing-destructing-struct-match_fixed.rs:17:16: 17:21
        scope 2 {
            debug y => _5;               // in scope 2 at ui/disallowed-deconstructing/disallowed-deconstructing-destructing-struct-match_fixed.rs:17:16: 17:21
            let mut _18: &[&str; 2];     // in scope 2 at ui/disallowed-deconstructing/disallowed-deconstructing-destructing-struct-match_fixed.rs:17:36: 17:50
        }
    }

    bb0: {
        _4 = const "hello";              // scope 0 at ui/disallowed-deconstructing/disallowed-deconstructing-destructing-struct-match_fixed.rs:13:20: 13:27
                                         // mir::Constant
                                         // + span: ui/disallowed-deconstructing/disallowed-deconstructing-destructing-struct-match_fixed.rs:13:20: 13:27
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _3 = _4;                         // scope 0 at ui/disallowed-deconstructing/disallowed-deconstructing-destructing-struct-match_fixed.rs:13:20: 13:39
        _2 = <str as ToString>::to_string(move _3) -> bb1; // scope 0 at ui/disallowed-deconstructing/disallowed-deconstructing-destructing-struct-match_fixed.rs:13:20: 13:39
                                         // mir::Constant
                                         // + span: ui/disallowed-deconstructing/disallowed-deconstructing-destructing-struct-match_fixed.rs:13:28: 13:37
                                         // + literal: Const { ty: for<'a> fn(&'a str) -> String {<str as ToString>::to_string}, val: Value(<ZST>) }
    }

    bb1: {
        _1 = X { x: move _2 };           // scope 0 at ui/disallowed-deconstructing/disallowed-deconstructing-destructing-struct-match_fixed.rs:13:13: 13:41
        _5 = &(_1.0: std::string::String); // scope 1 at ui/disallowed-deconstructing/disallowed-deconstructing-destructing-struct-match_fixed.rs:17:16: 17:21
        _18 = const _;                   // scope 2 at ui/disallowed-deconstructing/disallowed-deconstructing-destructing-struct-match_fixed.rs:17:36: 17:50
                                         // mir::Constant
                                         // + span: ui/disallowed-deconstructing/disallowed-deconstructing-destructing-struct-match_fixed.rs:17:36: 17:50
                                         // + literal: Const { ty: &[&str; 2], val: Unevaluated(main, [], Some(promoted[0])) }
        _10 = _18;                       // scope 2 at ui/disallowed-deconstructing/disallowed-deconstructing-destructing-struct-match_fixed.rs:17:36: 17:50
        _9 = _10;                        // scope 2 at ui/disallowed-deconstructing/disallowed-deconstructing-destructing-struct-match_fixed.rs:17:36: 17:50
        _8 = move _9 as &[&str] (Pointer(Unsize)); // scope 2 at ui/disallowed-deconstructing/disallowed-deconstructing-destructing-struct-match_fixed.rs:17:36: 17:50
        _17 = &_5;                       // scope 2 at ui/disallowed-deconstructing/disallowed-deconstructing-destructing-struct-match_fixed.rs:17:52: 17:53
        _16 = _17;                       // scope 2 at ui/disallowed-deconstructing/disallowed-deconstructing-destructing-struct-match_fixed.rs:17:52: 17:53
        _15 = core::fmt::ArgumentV1::<'_>::new_display::<&String>(move _16) -> [return: bb2, unwind: bb6]; // scope 2 at ui/disallowed-deconstructing/disallowed-deconstructing-destructing-struct-match_fixed.rs:17:52: 17:53
                                         // mir::Constant
                                         // + span: ui/disallowed-deconstructing/disallowed-deconstructing-destructing-struct-match_fixed.rs:17:52: 17:53
                                         // + user_ty: UserType(1)
                                         // + literal: Const { ty: for<'b> fn(&'b &String) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_display::<&String>}, val: Value(<ZST>) }
    }

    bb2: {
        _14 = [move _15];                // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _13 = &_14;                      // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _12 = _13;                       // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _11 = move _12 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _7 = Arguments::<'_>::new_v1(move _8, move _11) -> [return: bb3, unwind: bb6]; // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb3: {
        _6 = _print(move _7) -> [return: bb4, unwind: bb6]; // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:62
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:27
                                         // + literal: Const { ty: for<'a> fn(Arguments<'a>) {_print}, val: Value(<ZST>) }
    }

    bb4: {
        drop(_1) -> bb5;                 // scope 0 at ui/disallowed-deconstructing/disallowed-deconstructing-destructing-struct-match_fixed.rs:19:1: 19:2
    }

    bb5: {
        return;                          // scope 0 at ui/disallowed-deconstructing/disallowed-deconstructing-destructing-struct-match_fixed.rs:19:2: 19:2
    }

    bb6 (cleanup): {
        drop(_1) -> bb7;                 // scope 0 at ui/disallowed-deconstructing/disallowed-deconstructing-destructing-struct-match_fixed.rs:19:1: 19:2
    }

    bb7 (cleanup): {
        resume;                          // scope 0 at ui/disallowed-deconstructing/disallowed-deconstructing-destructing-struct-match_fixed.rs:12:1: 19:2
    }
}

promoted[0] in main: &[&str; 2] = {
    let mut _0: &[&str; 2];              // return place in scope 0 at ui/disallowed-deconstructing/disallowed-deconstructing-destructing-struct-match_fixed.rs:17:36: 17:50
    let mut _1: [&str; 2];               // in scope 0 at ui/disallowed-deconstructing/disallowed-deconstructing-destructing-struct-match_fixed.rs:17:36: 17:50

    bb0: {
        _1 = [const "contents: ", const "\n"]; // scope 0 at ui/disallowed-deconstructing/disallowed-deconstructing-destructing-struct-match_fixed.rs:17:36: 17:50
                                         // mir::Constant
                                         // + span: ui/disallowed-deconstructing/disallowed-deconstructing-destructing-struct-match_fixed.rs:17:36: 17:50
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
                                         // mir::Constant
                                         // + span: ui/disallowed-deconstructing/disallowed-deconstructing-destructing-struct-match_fixed.rs:17:36: 17:50
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at ui/disallowed-deconstructing/disallowed-deconstructing-destructing-struct-match_fixed.rs:17:36: 17:50
        return;                          // scope 0 at ui/disallowed-deconstructing/disallowed-deconstructing-destructing-struct-match_fixed.rs:17:36: 17:50
    }
}
