// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
fn <impl at ui/overloaded/overloaded-deref-count.rs:13:1: 13:24>::new(_1: T) -> DerefCounter<T> {
    debug value => _1;                   // in scope 0 at ui/overloaded/overloaded-deref-count.rs:14:12: 14:17
    let mut _0: DerefCounter<T>;         // return place in scope 0 at ui/overloaded/overloaded-deref-count.rs:14:25: 14:40
    let mut _2: std::cell::Cell<usize>;  // in scope 0 at ui/overloaded/overloaded-deref-count.rs:16:24: 16:36
    let mut _3: T;                       // in scope 0 at ui/overloaded/overloaded-deref-count.rs:18:20: 18:25

    bb0: {
        _2 = Cell::<usize>::new(const 0_usize) -> [return: bb1, unwind: bb2]; // scope 0 at ui/overloaded/overloaded-deref-count.rs:16:24: 16:36
                                         // mir::Constant
                                         // + span: ui/overloaded/overloaded-deref-count.rs:16:24: 16:33
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: fn(usize) -> Cell<usize> {Cell::<usize>::new}, val: Value(<ZST>) }
    }

    bb1: {
        _3 = move _1;                    // scope 0 at ui/overloaded/overloaded-deref-count.rs:18:20: 18:25
        _0 = DerefCounter::<T> { count_imm: move _2, count_mut: const 0_usize, value: move _3 }; // scope 0 at ui/overloaded/overloaded-deref-count.rs:15:9: 19:10
        return;                          // scope 0 at ui/overloaded/overloaded-deref-count.rs:20:6: 20:6
    }

    bb2 (cleanup): {
        drop(_1) -> bb3;                 // scope 0 at ui/overloaded/overloaded-deref-count.rs:20:5: 20:6
    }

    bb3 (cleanup): {
        resume;                          // scope 0 at ui/overloaded/overloaded-deref-count.rs:14:5: 20:6
    }
}

fn <impl at ui/overloaded/overloaded-deref-count.rs:13:1: 13:24>::counts(_1: &DerefCounter<T>) -> (usize, usize) {
    debug self => _1;                    // in scope 0 at ui/overloaded/overloaded-deref-count.rs:22:15: 22:20
    let mut _0: (usize, usize);          // return place in scope 0 at ui/overloaded/overloaded-deref-count.rs:22:25: 22:39
    let mut _2: usize;                   // in scope 0 at ui/overloaded/overloaded-deref-count.rs:23:10: 23:30
    let mut _3: &std::cell::Cell<usize>; // in scope 0 at ui/overloaded/overloaded-deref-count.rs:23:10: 23:30
    let mut _4: usize;                   // in scope 0 at ui/overloaded/overloaded-deref-count.rs:23:32: 23:46

    bb0: {
        _3 = &((*_1).0: std::cell::Cell<usize>); // scope 0 at ui/overloaded/overloaded-deref-count.rs:23:10: 23:30
        _2 = Cell::<usize>::get(move _3) -> bb1; // scope 0 at ui/overloaded/overloaded-deref-count.rs:23:10: 23:30
                                         // mir::Constant
                                         // + span: ui/overloaded/overloaded-deref-count.rs:23:25: 23:28
                                         // + literal: Const { ty: for<'a> fn(&'a Cell<usize>) -> usize {Cell::<usize>::get}, val: Value(<ZST>) }
    }

    bb1: {
        _4 = ((*_1).1: usize);           // scope 0 at ui/overloaded/overloaded-deref-count.rs:23:32: 23:46
        _0 = (move _2, move _4);         // scope 0 at ui/overloaded/overloaded-deref-count.rs:23:9: 23:47
        return;                          // scope 0 at ui/overloaded/overloaded-deref-count.rs:24:6: 24:6
    }
}

fn <impl at ui/overloaded/overloaded-deref-count.rs:27:1: 27:34>::deref(_1: &DerefCounter<T>) -> &T {
    debug self => _1;                    // in scope 0 at ui/overloaded/overloaded-deref-count.rs:30:14: 30:19
    let mut _0: &T;                      // return place in scope 0 at ui/overloaded/overloaded-deref-count.rs:32:9: 32:20
    let _2: ();                          // in scope 0 at ui/overloaded/overloaded-deref-count.rs:31:9: 31:53
    let mut _3: &std::cell::Cell<usize>; // in scope 0 at ui/overloaded/overloaded-deref-count.rs:31:9: 31:53
    let mut _4: usize;                   // in scope 0 at ui/overloaded/overloaded-deref-count.rs:31:28: 31:52
    let mut _5: usize;                   // in scope 0 at ui/overloaded/overloaded-deref-count.rs:31:28: 31:48
    let mut _6: &std::cell::Cell<usize>; // in scope 0 at ui/overloaded/overloaded-deref-count.rs:31:28: 31:48
    let mut _7: (usize, bool);           // in scope 0 at ui/overloaded/overloaded-deref-count.rs:31:28: 31:52

    bb0: {
        _3 = &((*_1).0: std::cell::Cell<usize>); // scope 0 at ui/overloaded/overloaded-deref-count.rs:31:9: 31:53
        _6 = &((*_1).0: std::cell::Cell<usize>); // scope 0 at ui/overloaded/overloaded-deref-count.rs:31:28: 31:48
        _5 = Cell::<usize>::get(move _6) -> bb1; // scope 0 at ui/overloaded/overloaded-deref-count.rs:31:28: 31:48
                                         // mir::Constant
                                         // + span: ui/overloaded/overloaded-deref-count.rs:31:43: 31:46
                                         // + literal: Const { ty: for<'a> fn(&'a Cell<usize>) -> usize {Cell::<usize>::get}, val: Value(<ZST>) }
    }

    bb1: {
        _7 = CheckedAdd(_5, const 1_usize); // scope 0 at ui/overloaded/overloaded-deref-count.rs:31:28: 31:52
        assert(!move (_7.1: bool), "attempt to compute `{} + {}`, which would overflow", move _5, const 1_usize) -> bb2; // scope 0 at ui/overloaded/overloaded-deref-count.rs:31:28: 31:52
    }

    bb2: {
        _4 = move (_7.0: usize);         // scope 0 at ui/overloaded/overloaded-deref-count.rs:31:28: 31:52
        _2 = Cell::<usize>::set(move _3, move _4) -> bb3; // scope 0 at ui/overloaded/overloaded-deref-count.rs:31:9: 31:53
                                         // mir::Constant
                                         // + span: ui/overloaded/overloaded-deref-count.rs:31:24: 31:27
                                         // + literal: Const { ty: for<'a> fn(&'a Cell<usize>, usize) {Cell::<usize>::set}, val: Value(<ZST>) }
    }

    bb3: {
        _0 = &((*_1).2: T);              // scope 0 at ui/overloaded/overloaded-deref-count.rs:32:9: 32:20
        return;                          // scope 0 at ui/overloaded/overloaded-deref-count.rs:33:6: 33:6
    }
}

fn <impl at ui/overloaded/overloaded-deref-count.rs:36:1: 36:37>::deref_mut(_1: &mut DerefCounter<T>) -> &mut T {
    debug self => _1;                    // in scope 0 at ui/overloaded/overloaded-deref-count.rs:37:18: 37:27
    let mut _0: &mut T;                  // return place in scope 0 at ui/overloaded/overloaded-deref-count.rs:37:32: 37:38
    let mut _2: &mut T;                  // in scope 0 at ui/overloaded/overloaded-deref-count.rs:39:9: 39:24
    let mut _3: (usize, bool);           // in scope 0 at ui/overloaded/overloaded-deref-count.rs:38:9: 38:28
    let mut _4: &mut T;                  // in scope 0 at ui/overloaded/overloaded-deref-count.rs:39:9: 39:24

    bb0: {
        _3 = CheckedAdd(((*_1).1: usize), const 1_usize); // scope 0 at ui/overloaded/overloaded-deref-count.rs:38:9: 38:28
        assert(!move (_3.1: bool), "attempt to compute `{} + {}`, which would overflow", ((*_1).1: usize), const 1_usize) -> bb1; // scope 0 at ui/overloaded/overloaded-deref-count.rs:38:9: 38:28
    }

    bb1: {
        ((*_1).1: usize) = move (_3.0: usize); // scope 0 at ui/overloaded/overloaded-deref-count.rs:38:9: 38:28
        _4 = &mut ((*_1).2: T);          // scope 0 at ui/overloaded/overloaded-deref-count.rs:39:9: 39:24
        _2 = &mut (*_4);                 // scope 0 at ui/overloaded/overloaded-deref-count.rs:39:9: 39:24
        _0 = &mut (*_2);                 // scope 0 at ui/overloaded/overloaded-deref-count.rs:39:9: 39:24
        return;                          // scope 0 at ui/overloaded/overloaded-deref-count.rs:40:6: 40:6
    }
}

fn main() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/overloaded/overloaded-deref-count.rs:43:15: 43:15
    let mut _1: DerefCounter<i32>;       // in scope 0 at ui/overloaded/overloaded-deref-count.rs:44:9: 44:14
    let mut _3: std::vec::Vec<i32>;      // in scope 0 at ui/overloaded/overloaded-deref-count.rs:45:35: 45:45
    let mut _4: &i32;                    // in scope 0 at ui/overloaded/overloaded-deref-count.rs:47:13: 47:15
    let mut _5: &DerefCounter<i32>;      // in scope 0 at ui/overloaded/overloaded-deref-count.rs:47:14: 47:15
    let mut _6: (&(usize, usize), &(usize, usize)); // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _7: &(usize, usize);         // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let _8: (usize, usize);              // in scope 0 at ui/overloaded/overloaded-deref-count.rs:48:16: 48:26
    let mut _9: &DerefCounter<i32>;      // in scope 0 at ui/overloaded/overloaded-deref-count.rs:48:16: 48:26
    let mut _10: &(usize, usize);        // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _13: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    let mut _14: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
    let mut _15: &(usize, usize);        // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
    let mut _16: &(usize, usize);        // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
    let _18: !;                          // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
    let mut _19: core::panicking::AssertKind; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
    let mut _20: &(usize, usize);        // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let _21: &(usize, usize);            // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let mut _22: &(usize, usize);        // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let _23: &(usize, usize);            // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let mut _24: std::option::Option<std::fmt::Arguments<'_>>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
    let _25: &i32;                       // in scope 0 at ui/overloaded/overloaded-deref-count.rs:50:15: 50:17
    let mut _26: &DerefCounter<i32>;     // in scope 0 at ui/overloaded/overloaded-deref-count.rs:50:16: 50:17
    let _27: &std::vec::Vec<i32>;        // in scope 0 at ui/overloaded/overloaded-deref-count.rs:50:20: 50:22
    let mut _28: &DerefCounter<std::vec::Vec<i32>>; // in scope 0 at ui/overloaded/overloaded-deref-count.rs:50:21: 50:22
    let mut _29: (&(usize, usize), &(usize, usize)); // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _30: &(usize, usize);        // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let _31: (usize, usize);             // in scope 0 at ui/overloaded/overloaded-deref-count.rs:51:16: 51:26
    let mut _32: &DerefCounter<i32>;     // in scope 0 at ui/overloaded/overloaded-deref-count.rs:51:16: 51:26
    let mut _33: &(usize, usize);        // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _36: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    let mut _37: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
    let mut _38: &(usize, usize);        // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
    let mut _39: &(usize, usize);        // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
    let _41: !;                          // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
    let mut _42: core::panicking::AssertKind; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
    let mut _43: &(usize, usize);        // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let _44: &(usize, usize);            // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let mut _45: &(usize, usize);        // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let _46: &(usize, usize);            // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let mut _47: std::option::Option<std::fmt::Arguments<'_>>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
    let mut _48: (&(usize, usize), &(usize, usize)); // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _49: &(usize, usize);        // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let _50: (usize, usize);             // in scope 0 at ui/overloaded/overloaded-deref-count.rs:51:48: 51:58
    let mut _51: &DerefCounter<std::vec::Vec<i32>>; // in scope 0 at ui/overloaded/overloaded-deref-count.rs:51:48: 51:58
    let mut _52: &(usize, usize);        // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _55: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    let mut _56: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
    let mut _57: &(usize, usize);        // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
    let mut _58: &(usize, usize);        // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
    let _60: !;                          // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
    let mut _61: core::panicking::AssertKind; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
    let mut _62: &(usize, usize);        // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let _63: &(usize, usize);            // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let mut _64: &(usize, usize);        // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let _65: &(usize, usize);            // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let mut _66: std::option::Option<std::fmt::Arguments<'_>>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
    let mut _67: &mut i32;               // in scope 0 at ui/overloaded/overloaded-deref-count.rs:53:19: 53:21
    let mut _68: &mut DerefCounter<i32>; // in scope 0 at ui/overloaded/overloaded-deref-count.rs:53:20: 53:21
    let mut _69: &mut std::vec::Vec<i32>; // in scope 0 at ui/overloaded/overloaded-deref-count.rs:53:28: 53:30
    let mut _70: &mut DerefCounter<std::vec::Vec<i32>>; // in scope 0 at ui/overloaded/overloaded-deref-count.rs:53:29: 53:30
    let mut _71: (&(usize, usize), &(usize, usize)); // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _72: &(usize, usize);        // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let _73: (usize, usize);             // in scope 0 at ui/overloaded/overloaded-deref-count.rs:54:16: 54:26
    let mut _74: &DerefCounter<i32>;     // in scope 0 at ui/overloaded/overloaded-deref-count.rs:54:16: 54:26
    let mut _75: &(usize, usize);        // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _78: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    let mut _79: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
    let mut _80: &(usize, usize);        // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
    let mut _81: &(usize, usize);        // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
    let _83: !;                          // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
    let mut _84: core::panicking::AssertKind; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
    let mut _85: &(usize, usize);        // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let _86: &(usize, usize);            // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let mut _87: &(usize, usize);        // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let _88: &(usize, usize);            // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let mut _89: std::option::Option<std::fmt::Arguments<'_>>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
    let mut _90: (&(usize, usize), &(usize, usize)); // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _91: &(usize, usize);        // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let _92: (usize, usize);             // in scope 0 at ui/overloaded/overloaded-deref-count.rs:54:48: 54:58
    let mut _93: &DerefCounter<std::vec::Vec<i32>>; // in scope 0 at ui/overloaded/overloaded-deref-count.rs:54:48: 54:58
    let mut _94: &(usize, usize);        // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _97: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    let mut _98: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
    let mut _99: &(usize, usize);        // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
    let mut _100: &(usize, usize);       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
    let _102: !;                         // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
    let mut _103: core::panicking::AssertKind; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
    let mut _104: &(usize, usize);       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let _105: &(usize, usize);           // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let mut _106: &(usize, usize);       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let _107: &(usize, usize);           // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let mut _108: std::option::Option<std::fmt::Arguments<'_>>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
    let _110: ();                        // in scope 0 at ui/overloaded/overloaded-deref-count.rs:57:5: 57:15
    let mut _111: &mut std::vec::Vec<i32>; // in scope 0 at ui/overloaded/overloaded-deref-count.rs:57:5: 57:15
    let mut _112: &mut i32;              // in scope 0 at ui/overloaded/overloaded-deref-count.rs:59:5: 59:7
    let mut _113: &mut DerefCounter<i32>; // in scope 0 at ui/overloaded/overloaded-deref-count.rs:59:6: 59:7
    let mut _114: std::vec::Vec<i32>;    // in scope 0 at ui/overloaded/overloaded-deref-count.rs:59:18: 59:20
    let mut _115: &mut std::vec::Vec<i32>; // in scope 0 at ui/overloaded/overloaded-deref-count.rs:59:13: 59:15
    let mut _116: &mut DerefCounter<std::vec::Vec<i32>>; // in scope 0 at ui/overloaded/overloaded-deref-count.rs:59:14: 59:15
    let mut _117: (&(usize, usize), &(usize, usize)); // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _118: &(usize, usize);       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let _119: (usize, usize);            // in scope 0 at ui/overloaded/overloaded-deref-count.rs:60:16: 60:26
    let mut _120: &DerefCounter<i32>;    // in scope 0 at ui/overloaded/overloaded-deref-count.rs:60:16: 60:26
    let mut _121: &(usize, usize);       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _124: bool;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    let mut _125: bool;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
    let mut _126: &(usize, usize);       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
    let mut _127: &(usize, usize);       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
    let _129: !;                         // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
    let mut _130: core::panicking::AssertKind; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
    let mut _131: &(usize, usize);       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let _132: &(usize, usize);           // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let mut _133: &(usize, usize);       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let _134: &(usize, usize);           // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let mut _135: std::option::Option<std::fmt::Arguments<'_>>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
    let mut _136: (&(usize, usize), &(usize, usize)); // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _137: &(usize, usize);       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let _138: (usize, usize);            // in scope 0 at ui/overloaded/overloaded-deref-count.rs:60:48: 60:58
    let mut _139: &DerefCounter<std::vec::Vec<i32>>; // in scope 0 at ui/overloaded/overloaded-deref-count.rs:60:48: 60:58
    let mut _140: &(usize, usize);       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _143: bool;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    let mut _144: bool;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
    let mut _145: &(usize, usize);       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
    let mut _146: &(usize, usize);       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
    let _148: !;                         // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
    let mut _149: core::panicking::AssertKind; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
    let mut _150: &(usize, usize);       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let _151: &(usize, usize);           // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let mut _152: &(usize, usize);       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let _153: &(usize, usize);           // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let mut _154: std::option::Option<std::fmt::Arguments<'_>>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
    let mut _155: &mut i32;              // in scope 0 at ui/overloaded/overloaded-deref-count.rs:62:5: 62:7
    let mut _156: &mut DerefCounter<i32>; // in scope 0 at ui/overloaded/overloaded-deref-count.rs:62:6: 62:7
    let mut _157: (i32, bool);           // in scope 0 at ui/overloaded/overloaded-deref-count.rs:62:5: 62:12
    let mut _158: (&(usize, usize), &(usize, usize)); // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _159: &(usize, usize);       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let _160: (usize, usize);            // in scope 0 at ui/overloaded/overloaded-deref-count.rs:63:16: 63:26
    let mut _161: &DerefCounter<i32>;    // in scope 0 at ui/overloaded/overloaded-deref-count.rs:63:16: 63:26
    let mut _162: &(usize, usize);       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _165: bool;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    let mut _166: bool;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
    let mut _167: &(usize, usize);       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
    let mut _168: &(usize, usize);       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
    let _170: !;                         // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
    let mut _171: core::panicking::AssertKind; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
    let mut _172: &(usize, usize);       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let _173: &(usize, usize);           // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let mut _174: &(usize, usize);       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let _175: &(usize, usize);           // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let mut _176: std::option::Option<std::fmt::Arguments<'_>>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
    let _177: std::string::String;       // in scope 0 at ui/overloaded/overloaded-deref-count.rs:67:5: 67:21
    let mut _178: &i32;                  // in scope 0 at ui/overloaded/overloaded-deref-count.rs:67:5: 67:21
    let _179: &i32;                      // in scope 0 at ui/overloaded/overloaded-deref-count.rs:67:5: 67:9
    let mut _180: &DerefCounter<i32>;    // in scope 0 at ui/overloaded/overloaded-deref-count.rs:67:7: 67:8
    let mut _181: (&(usize, usize), &(usize, usize)); // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _182: &(usize, usize);       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let _183: (usize, usize);            // in scope 0 at ui/overloaded/overloaded-deref-count.rs:68:16: 68:26
    let mut _184: &DerefCounter<i32>;    // in scope 0 at ui/overloaded/overloaded-deref-count.rs:68:16: 68:26
    let mut _185: &(usize, usize);       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _188: bool;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    let mut _189: bool;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
    let mut _190: &(usize, usize);       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
    let mut _191: &(usize, usize);       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
    let _193: !;                         // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
    let mut _194: core::panicking::AssertKind; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
    let mut _195: &(usize, usize);       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let _196: &(usize, usize);           // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let mut _197: &(usize, usize);       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let _198: &(usize, usize);           // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let mut _199: std::option::Option<std::fmt::Arguments<'_>>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
    let _200: ();                        // in scope 0 at ui/overloaded/overloaded-deref-count.rs:71:5: 71:17
    let mut _201: &mut std::vec::Vec<i32>; // in scope 0 at ui/overloaded/overloaded-deref-count.rs:71:5: 71:17
    let mut _202: &mut std::vec::Vec<i32>; // in scope 0 at ui/overloaded/overloaded-deref-count.rs:71:5: 71:9
    let mut _203: &mut DerefCounter<std::vec::Vec<i32>>; // in scope 0 at ui/overloaded/overloaded-deref-count.rs:71:7: 71:8
    let mut _204: (&(usize, usize), &(usize, usize)); // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _205: &(usize, usize);       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let _206: (usize, usize);            // in scope 0 at ui/overloaded/overloaded-deref-count.rs:72:16: 72:26
    let mut _207: &DerefCounter<std::vec::Vec<i32>>; // in scope 0 at ui/overloaded/overloaded-deref-count.rs:72:16: 72:26
    let mut _208: &(usize, usize);       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _211: bool;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    let mut _212: bool;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
    let mut _213: &(usize, usize);       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
    let mut _214: &(usize, usize);       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
    let _216: !;                         // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
    let mut _217: core::panicking::AssertKind; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
    let mut _218: &(usize, usize);       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let _219: &(usize, usize);           // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let mut _220: &(usize, usize);       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let _221: &(usize, usize);           // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let mut _222: std::option::Option<std::fmt::Arguments<'_>>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
    let mut _223: (&i32, &i32);          // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _224: &i32;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let _225: &i32;                      // in scope 0 at ui/overloaded/overloaded-deref-count.rs:75:16: 75:18
    let mut _226: &DerefCounter<i32>;    // in scope 0 at ui/overloaded/overloaded-deref-count.rs:75:17: 75:18
    let mut _227: &i32;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _230: bool;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    let mut _231: bool;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
    let mut _232: i32;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
    let mut _233: i32;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
    let _235: !;                         // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
    let mut _236: core::panicking::AssertKind; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
    let mut _237: &i32;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let _238: &i32;                      // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let mut _239: &i32;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let _240: &i32;                      // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let mut _241: std::option::Option<std::fmt::Arguments<'_>>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
    let mut _243: &[i32; 2];             // in scope 0 at ui/overloaded/overloaded-deref-count.rs:76:26: 76:33
    let _244: &[i32; 2];                 // in scope 0 at ui/overloaded/overloaded-deref-count.rs:76:26: 76:33
    let mut _245: (&std::vec::Vec<i32>, &&[i32]); // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _246: &std::vec::Vec<i32>;   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let _247: &std::vec::Vec<i32>;       // in scope 0 at ui/overloaded/overloaded-deref-count.rs:77:16: 77:20
    let mut _248: &DerefCounter<std::vec::Vec<i32>>; // in scope 0 at ui/overloaded/overloaded-deref-count.rs:77:18: 77:19
    let mut _249: &&[i32];               // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _252: bool;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    let mut _253: bool;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
    let mut _254: &std::vec::Vec<i32>;   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
    let mut _255: &&[i32];               // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
    let _257: !;                         // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
    let mut _258: core::panicking::AssertKind; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
    let mut _259: &std::vec::Vec<i32>;   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let _260: &std::vec::Vec<i32>;       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let mut _261: &&[i32];               // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let _262: &&[i32];                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let mut _263: std::option::Option<std::fmt::Arguments<'_>>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
    let mut _276: bool;                  // in scope 0 at ui/overloaded/overloaded-deref-count.rs:59:19: 59:20
    let mut _277: bool;                  // in scope 0 at ui/overloaded/overloaded-deref-count.rs:78:1: 78:2
    scope 1 {
        debug n => _1;                   // in scope 1 at ui/overloaded/overloaded-deref-count.rs:44:9: 44:14
        let mut _2: DerefCounter<std::vec::Vec<i32>>; // in scope 1 at ui/overloaded/overloaded-deref-count.rs:45:9: 45:14
        scope 2 {
            debug v => _2;               // in scope 2 at ui/overloaded/overloaded-deref-count.rs:45:9: 45:14
            scope 3 {
                let _11: &(usize, usize); // in scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
                let _12: &(usize, usize); // in scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
                let mut _275: &(usize, usize); // in scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                scope 4 {
                    debug left_val => _11; // in scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
                    debug right_val => _12; // in scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
                    let _17: core::panicking::AssertKind; // in scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                    scope 5 {
                        debug kind => _17; // in scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                    }
                }
                scope 6 {
                    let _34: &(usize, usize); // in scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
                    let _35: &(usize, usize); // in scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
                    let _53: &(usize, usize); // in scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
                    let _54: &(usize, usize); // in scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
                    let mut _273: &(usize, usize); // in scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                    let mut _274: &(usize, usize); // in scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                    scope 7 {
                        debug left_val => _34; // in scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
                        debug right_val => _35; // in scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
                        let _40: core::panicking::AssertKind; // in scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                        scope 8 {
                            debug kind => _40; // in scope 8 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                        }
                    }
                    scope 9 {
                        debug left_val => _53; // in scope 9 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
                        debug right_val => _54; // in scope 9 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
                        let _59: core::panicking::AssertKind; // in scope 9 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                        scope 10 {
                            debug kind => _59; // in scope 10 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                        }
                    }
                    scope 11 {
                        let _76: &(usize, usize); // in scope 11 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
                        let _77: &(usize, usize); // in scope 11 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
                        let _95: &(usize, usize); // in scope 11 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
                        let _96: &(usize, usize); // in scope 11 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
                        let mut _109: std::vec::Vec<i32>; // in scope 11 at ui/overloaded/overloaded-deref-count.rs:56:9: 56:15
                        let mut _271: &(usize, usize); // in scope 11 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                        let mut _272: &(usize, usize); // in scope 11 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                        scope 12 {
                            debug left_val => _76; // in scope 12 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
                            debug right_val => _77; // in scope 12 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
                            let _82: core::panicking::AssertKind; // in scope 12 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                            scope 13 {
                                debug kind => _82; // in scope 13 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                            }
                        }
                        scope 14 {
                            debug left_val => _95; // in scope 14 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
                            debug right_val => _96; // in scope 14 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
                            let _101: core::panicking::AssertKind; // in scope 14 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                            scope 15 {
                                debug kind => _101; // in scope 15 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                            }
                        }
                        scope 16 {
                            debug v2 => _109; // in scope 16 at ui/overloaded/overloaded-deref-count.rs:56:9: 56:15
                            let _122: &(usize, usize); // in scope 16 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
                            let _123: &(usize, usize); // in scope 16 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
                            let _141: &(usize, usize); // in scope 16 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
                            let _142: &(usize, usize); // in scope 16 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
                            let _163: &(usize, usize); // in scope 16 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
                            let _164: &(usize, usize); // in scope 16 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
                            let _186: &(usize, usize); // in scope 16 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
                            let _187: &(usize, usize); // in scope 16 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
                            let _209: &(usize, usize); // in scope 16 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
                            let _210: &(usize, usize); // in scope 16 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
                            let _228: &i32; // in scope 16 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
                            let _229: &i32; // in scope 16 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
                            let _242: &[i32]; // in scope 16 at ui/overloaded/overloaded-deref-count.rs:76:9: 76:17
                            let mut _264: &[i32; 2]; // in scope 16 at ui/overloaded/overloaded-deref-count.rs:76:26: 76:33
                            let mut _265: &i32; // in scope 16 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                            let mut _266: &(usize, usize); // in scope 16 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                            let mut _267: &(usize, usize); // in scope 16 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                            let mut _268: &(usize, usize); // in scope 16 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                            let mut _269: &(usize, usize); // in scope 16 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                            let mut _270: &(usize, usize); // in scope 16 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                            scope 17 {
                                debug left_val => _122; // in scope 17 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
                                debug right_val => _123; // in scope 17 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
                                let _128: core::panicking::AssertKind; // in scope 17 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                                scope 18 {
                                    debug kind => _128; // in scope 18 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                                }
                            }
                            scope 19 {
                                debug left_val => _141; // in scope 19 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
                                debug right_val => _142; // in scope 19 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
                                let _147: core::panicking::AssertKind; // in scope 19 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                                scope 20 {
                                    debug kind => _147; // in scope 20 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                                }
                            }
                            scope 21 {
                                debug left_val => _163; // in scope 21 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
                                debug right_val => _164; // in scope 21 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
                                let _169: core::panicking::AssertKind; // in scope 21 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                                scope 22 {
                                    debug kind => _169; // in scope 22 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                                }
                            }
                            scope 23 {
                                debug left_val => _186; // in scope 23 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
                                debug right_val => _187; // in scope 23 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
                                let _192: core::panicking::AssertKind; // in scope 23 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                                scope 24 {
                                    debug kind => _192; // in scope 24 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                                }
                            }
                            scope 25 {
                                debug left_val => _209; // in scope 25 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
                                debug right_val => _210; // in scope 25 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
                                let _215: core::panicking::AssertKind; // in scope 25 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                                scope 26 {
                                    debug kind => _215; // in scope 26 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                                }
                            }
                            scope 27 {
                                debug left_val => _228; // in scope 27 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
                                debug right_val => _229; // in scope 27 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
                                let _234: core::panicking::AssertKind; // in scope 27 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                                scope 28 {
                                    debug kind => _234; // in scope 28 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                                }
                            }
                            scope 29 {
                                debug expected => _242; // in scope 29 at ui/overloaded/overloaded-deref-count.rs:76:9: 76:17
                                let _250: &std::vec::Vec<i32>; // in scope 29 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
                                let _251: &&[i32]; // in scope 29 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
                                scope 30 {
                                    debug left_val => _250; // in scope 30 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
                                    debug right_val => _251; // in scope 30 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
                                    let _256: core::panicking::AssertKind; // in scope 30 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                                    scope 31 {
                                        debug kind => _256; // in scope 31 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    }

    bb0: {
        _277 = const false;              // scope 0 at ui/overloaded/overloaded-deref-count.rs:44:9: 44:14
        _276 = const false;              // scope 0 at ui/overloaded/overloaded-deref-count.rs:44:9: 44:14
        _1 = DerefCounter::<i32>::new(const 0_i32) -> bb1; // scope 0 at ui/overloaded/overloaded-deref-count.rs:44:17: 44:37
                                         // mir::Constant
                                         // + span: ui/overloaded/overloaded-deref-count.rs:44:17: 44:34
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: fn(i32) -> DerefCounter<i32> {DerefCounter::<i32>::new}, val: Value(<ZST>) }
    }

    bb1: {
        _3 = Vec::<i32>::new() -> bb2;   // scope 1 at ui/overloaded/overloaded-deref-count.rs:45:35: 45:45
                                         // mir::Constant
                                         // + span: ui/overloaded/overloaded-deref-count.rs:45:35: 45:43
                                         // + user_ty: UserType(2)
                                         // + literal: Const { ty: fn() -> Vec<i32> {Vec::<i32>::new}, val: Value(<ZST>) }
    }

    bb2: {
        _2 = DerefCounter::<Vec<i32>>::new(move _3) -> bb3; // scope 1 at ui/overloaded/overloaded-deref-count.rs:45:17: 45:46
                                         // mir::Constant
                                         // + span: ui/overloaded/overloaded-deref-count.rs:45:17: 45:34
                                         // + user_ty: UserType(1)
                                         // + literal: Const { ty: fn(Vec<i32>) -> DerefCounter<Vec<i32>> {DerefCounter::<Vec<i32>>::new}, val: Value(<ZST>) }
    }

    bb3: {
        _5 = &_1;                        // scope 2 at ui/overloaded/overloaded-deref-count.rs:47:14: 47:15
        _4 = <DerefCounter<i32> as Deref>::deref(move _5) -> [return: bb4, unwind: bb68]; // scope 2 at ui/overloaded/overloaded-deref-count.rs:47:13: 47:15
                                         // mir::Constant
                                         // + span: ui/overloaded/overloaded-deref-count.rs:47:13: 47:15
                                         // + literal: Const { ty: for<'a> fn(&'a DerefCounter<i32>) -> &'a <DerefCounter<i32> as Deref>::Target {<DerefCounter<i32> as Deref>::deref}, val: Value(<ZST>) }
    }

    bb4: {
        _9 = &_1;                        // scope 3 at ui/overloaded/overloaded-deref-count.rs:48:16: 48:26
        _8 = DerefCounter::<i32>::counts(move _9) -> [return: bb5, unwind: bb68]; // scope 3 at ui/overloaded/overloaded-deref-count.rs:48:16: 48:26
                                         // mir::Constant
                                         // + span: ui/overloaded/overloaded-deref-count.rs:48:18: 48:24
                                         // + literal: Const { ty: for<'a> fn(&'a DerefCounter<i32>) -> (usize, usize) {DerefCounter::<i32>::counts}, val: Value(<ZST>) }
    }

    bb5: {
        _7 = &_8;                        // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _275 = const _;                  // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // + literal: Const { ty: &(usize, usize), val: Unevaluated(main, [], Some(promoted[11])) }
        _10 = _275;                      // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _6 = (move _7, move _10);        // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _11 = (_6.0: &(usize, usize));   // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _12 = (_6.1: &(usize, usize));   // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _15 = _11;                       // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
        _16 = _12;                       // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
        _14 = <(usize, usize) as PartialEq>::eq(move _15, move _16) -> [return: bb6, unwind: bb68]; // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a (usize, usize), &'b (usize, usize)) -> bool {<(usize, usize) as PartialEq>::eq}, val: Value(<ZST>) }
    }

    bb6: {
        _13 = Not(move _14);             // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
        switchInt(move _13) -> [0: bb8, otherwise: bb7]; // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    }

    bb7: {
        _17 = const core::panicking::AssertKind::Eq; // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _19 = const core::panicking::AssertKind::Eq; // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _21 = _11;                       // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _20 = _21;                       // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _23 = _12;                       // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _22 = _23;                       // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _24 = Option::<Arguments<'_>>::None; // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
        _18 = core::panicking::assert_failed::<(usize, usize), (usize, usize)>(move _19, move _20, move _22, move _24) -> bb68; // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:53
                                         // + literal: Const { ty: for<'a, 'b, 'c> fn(core::panicking::AssertKind, &'a (usize, usize), &'b (usize, usize), Option<Arguments<'c>>) -> ! {core::panicking::assert_failed::<(usize, usize), (usize, usize)>}, val: Value(<ZST>) }
    }

    bb8: {
        _26 = &_1;                       // scope 3 at ui/overloaded/overloaded-deref-count.rs:50:16: 50:17
        _25 = <DerefCounter<i32> as Deref>::deref(move _26) -> [return: bb9, unwind: bb68]; // scope 3 at ui/overloaded/overloaded-deref-count.rs:50:15: 50:17
                                         // mir::Constant
                                         // + span: ui/overloaded/overloaded-deref-count.rs:50:15: 50:17
                                         // + literal: Const { ty: for<'a> fn(&'a DerefCounter<i32>) -> &'a <DerefCounter<i32> as Deref>::Target {<DerefCounter<i32> as Deref>::deref}, val: Value(<ZST>) }
    }

    bb9: {
        _28 = &_2;                       // scope 3 at ui/overloaded/overloaded-deref-count.rs:50:21: 50:22
        _27 = <DerefCounter<Vec<i32>> as Deref>::deref(move _28) -> [return: bb10, unwind: bb68]; // scope 3 at ui/overloaded/overloaded-deref-count.rs:50:20: 50:22
                                         // mir::Constant
                                         // + span: ui/overloaded/overloaded-deref-count.rs:50:20: 50:22
                                         // + literal: Const { ty: for<'a> fn(&'a DerefCounter<Vec<i32>>) -> &'a <DerefCounter<Vec<i32>> as Deref>::Target {<DerefCounter<Vec<i32>> as Deref>::deref}, val: Value(<ZST>) }
    }

    bb10: {
        _32 = &_1;                       // scope 6 at ui/overloaded/overloaded-deref-count.rs:51:16: 51:26
        _31 = DerefCounter::<i32>::counts(move _32) -> [return: bb11, unwind: bb68]; // scope 6 at ui/overloaded/overloaded-deref-count.rs:51:16: 51:26
                                         // mir::Constant
                                         // + span: ui/overloaded/overloaded-deref-count.rs:51:18: 51:24
                                         // + literal: Const { ty: for<'a> fn(&'a DerefCounter<i32>) -> (usize, usize) {DerefCounter::<i32>::counts}, val: Value(<ZST>) }
    }

    bb11: {
        _30 = &_31;                      // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _274 = const _;                  // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // + literal: Const { ty: &(usize, usize), val: Unevaluated(main, [], Some(promoted[10])) }
        _33 = _274;                      // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _29 = (move _30, move _33);      // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _34 = (_29.0: &(usize, usize));  // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _35 = (_29.1: &(usize, usize));  // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _38 = _34;                       // scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
        _39 = _35;                       // scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
        _37 = <(usize, usize) as PartialEq>::eq(move _38, move _39) -> [return: bb12, unwind: bb68]; // scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a (usize, usize), &'b (usize, usize)) -> bool {<(usize, usize) as PartialEq>::eq}, val: Value(<ZST>) }
    }

    bb12: {
        _36 = Not(move _37);             // scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
        switchInt(move _36) -> [0: bb14, otherwise: bb13]; // scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    }

    bb13: {
        _40 = const core::panicking::AssertKind::Eq; // scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _42 = const core::panicking::AssertKind::Eq; // scope 8 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _44 = _34;                       // scope 8 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _43 = _44;                       // scope 8 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _46 = _35;                       // scope 8 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _45 = _46;                       // scope 8 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _47 = Option::<Arguments<'_>>::None; // scope 8 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
        _41 = core::panicking::assert_failed::<(usize, usize), (usize, usize)>(move _42, move _43, move _45, move _47) -> bb68; // scope 8 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:53
                                         // + literal: Const { ty: for<'a, 'b, 'c> fn(core::panicking::AssertKind, &'a (usize, usize), &'b (usize, usize), Option<Arguments<'c>>) -> ! {core::panicking::assert_failed::<(usize, usize), (usize, usize)>}, val: Value(<ZST>) }
    }

    bb14: {
        _51 = &_2;                       // scope 6 at ui/overloaded/overloaded-deref-count.rs:51:48: 51:58
        _50 = DerefCounter::<Vec<i32>>::counts(move _51) -> [return: bb15, unwind: bb68]; // scope 6 at ui/overloaded/overloaded-deref-count.rs:51:48: 51:58
                                         // mir::Constant
                                         // + span: ui/overloaded/overloaded-deref-count.rs:51:50: 51:56
                                         // + literal: Const { ty: for<'a> fn(&'a DerefCounter<Vec<i32>>) -> (usize, usize) {DerefCounter::<Vec<i32>>::counts}, val: Value(<ZST>) }
    }

    bb15: {
        _49 = &_50;                      // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _273 = const _;                  // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // + literal: Const { ty: &(usize, usize), val: Unevaluated(main, [], Some(promoted[9])) }
        _52 = _273;                      // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _48 = (move _49, move _52);      // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _53 = (_48.0: &(usize, usize));  // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _54 = (_48.1: &(usize, usize));  // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _57 = _53;                       // scope 9 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
        _58 = _54;                       // scope 9 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
        _56 = <(usize, usize) as PartialEq>::eq(move _57, move _58) -> [return: bb16, unwind: bb68]; // scope 9 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a (usize, usize), &'b (usize, usize)) -> bool {<(usize, usize) as PartialEq>::eq}, val: Value(<ZST>) }
    }

    bb16: {
        _55 = Not(move _56);             // scope 9 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
        switchInt(move _55) -> [0: bb18, otherwise: bb17]; // scope 9 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    }

    bb17: {
        _59 = const core::panicking::AssertKind::Eq; // scope 9 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _61 = const core::panicking::AssertKind::Eq; // scope 10 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _63 = _53;                       // scope 10 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _62 = _63;                       // scope 10 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _65 = _54;                       // scope 10 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _64 = _65;                       // scope 10 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _66 = Option::<Arguments<'_>>::None; // scope 10 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
        _60 = core::panicking::assert_failed::<(usize, usize), (usize, usize)>(move _61, move _62, move _64, move _66) -> bb68; // scope 10 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:53
                                         // + literal: Const { ty: for<'a, 'b, 'c> fn(core::panicking::AssertKind, &'a (usize, usize), &'b (usize, usize), Option<Arguments<'c>>) -> ! {core::panicking::assert_failed::<(usize, usize), (usize, usize)>}, val: Value(<ZST>) }
    }

    bb18: {
        _68 = &mut _1;                   // scope 6 at ui/overloaded/overloaded-deref-count.rs:53:20: 53:21
        _67 = <DerefCounter<i32> as DerefMut>::deref_mut(move _68) -> [return: bb19, unwind: bb68]; // scope 6 at ui/overloaded/overloaded-deref-count.rs:53:19: 53:21
                                         // mir::Constant
                                         // + span: ui/overloaded/overloaded-deref-count.rs:53:19: 53:21
                                         // + literal: Const { ty: for<'a> fn(&'a mut DerefCounter<i32>) -> &'a mut <DerefCounter<i32> as Deref>::Target {<DerefCounter<i32> as DerefMut>::deref_mut}, val: Value(<ZST>) }
    }

    bb19: {
        _70 = &mut _2;                   // scope 6 at ui/overloaded/overloaded-deref-count.rs:53:29: 53:30
        _69 = <DerefCounter<Vec<i32>> as DerefMut>::deref_mut(move _70) -> [return: bb20, unwind: bb68]; // scope 6 at ui/overloaded/overloaded-deref-count.rs:53:28: 53:30
                                         // mir::Constant
                                         // + span: ui/overloaded/overloaded-deref-count.rs:53:28: 53:30
                                         // + literal: Const { ty: for<'a> fn(&'a mut DerefCounter<Vec<i32>>) -> &'a mut <DerefCounter<Vec<i32>> as Deref>::Target {<DerefCounter<Vec<i32>> as DerefMut>::deref_mut}, val: Value(<ZST>) }
    }

    bb20: {
        _74 = &_1;                       // scope 11 at ui/overloaded/overloaded-deref-count.rs:54:16: 54:26
        _73 = DerefCounter::<i32>::counts(move _74) -> [return: bb21, unwind: bb68]; // scope 11 at ui/overloaded/overloaded-deref-count.rs:54:16: 54:26
                                         // mir::Constant
                                         // + span: ui/overloaded/overloaded-deref-count.rs:54:18: 54:24
                                         // + literal: Const { ty: for<'a> fn(&'a DerefCounter<i32>) -> (usize, usize) {DerefCounter::<i32>::counts}, val: Value(<ZST>) }
    }

    bb21: {
        _72 = &_73;                      // scope 11 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _272 = const _;                  // scope 11 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // + literal: Const { ty: &(usize, usize), val: Unevaluated(main, [], Some(promoted[8])) }
        _75 = _272;                      // scope 11 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _71 = (move _72, move _75);      // scope 11 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _76 = (_71.0: &(usize, usize));  // scope 11 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _77 = (_71.1: &(usize, usize));  // scope 11 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _80 = _76;                       // scope 12 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
        _81 = _77;                       // scope 12 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
        _79 = <(usize, usize) as PartialEq>::eq(move _80, move _81) -> [return: bb22, unwind: bb68]; // scope 12 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a (usize, usize), &'b (usize, usize)) -> bool {<(usize, usize) as PartialEq>::eq}, val: Value(<ZST>) }
    }

    bb22: {
        _78 = Not(move _79);             // scope 12 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
        switchInt(move _78) -> [0: bb24, otherwise: bb23]; // scope 12 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    }

    bb23: {
        _82 = const core::panicking::AssertKind::Eq; // scope 12 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _84 = const core::panicking::AssertKind::Eq; // scope 13 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _86 = _76;                       // scope 13 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _85 = _86;                       // scope 13 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _88 = _77;                       // scope 13 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _87 = _88;                       // scope 13 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _89 = Option::<Arguments<'_>>::None; // scope 13 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
        _83 = core::panicking::assert_failed::<(usize, usize), (usize, usize)>(move _84, move _85, move _87, move _89) -> bb68; // scope 13 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:53
                                         // + literal: Const { ty: for<'a, 'b, 'c> fn(core::panicking::AssertKind, &'a (usize, usize), &'b (usize, usize), Option<Arguments<'c>>) -> ! {core::panicking::assert_failed::<(usize, usize), (usize, usize)>}, val: Value(<ZST>) }
    }

    bb24: {
        _93 = &_2;                       // scope 11 at ui/overloaded/overloaded-deref-count.rs:54:48: 54:58
        _92 = DerefCounter::<Vec<i32>>::counts(move _93) -> [return: bb25, unwind: bb68]; // scope 11 at ui/overloaded/overloaded-deref-count.rs:54:48: 54:58
                                         // mir::Constant
                                         // + span: ui/overloaded/overloaded-deref-count.rs:54:50: 54:56
                                         // + literal: Const { ty: for<'a> fn(&'a DerefCounter<Vec<i32>>) -> (usize, usize) {DerefCounter::<Vec<i32>>::counts}, val: Value(<ZST>) }
    }

    bb25: {
        _91 = &_92;                      // scope 11 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _271 = const _;                  // scope 11 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // + literal: Const { ty: &(usize, usize), val: Unevaluated(main, [], Some(promoted[7])) }
        _94 = _271;                      // scope 11 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _90 = (move _91, move _94);      // scope 11 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _95 = (_90.0: &(usize, usize));  // scope 11 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _96 = (_90.1: &(usize, usize));  // scope 11 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _99 = _95;                       // scope 14 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
        _100 = _96;                      // scope 14 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
        _98 = <(usize, usize) as PartialEq>::eq(move _99, move _100) -> [return: bb26, unwind: bb68]; // scope 14 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a (usize, usize), &'b (usize, usize)) -> bool {<(usize, usize) as PartialEq>::eq}, val: Value(<ZST>) }
    }

    bb26: {
        _97 = Not(move _98);             // scope 14 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
        switchInt(move _97) -> [0: bb28, otherwise: bb27]; // scope 14 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    }

    bb27: {
        _101 = const core::panicking::AssertKind::Eq; // scope 14 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _103 = const core::panicking::AssertKind::Eq; // scope 15 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _105 = _95;                      // scope 15 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _104 = _105;                     // scope 15 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _107 = _96;                      // scope 15 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _106 = _107;                     // scope 15 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _108 = Option::<Arguments<'_>>::None; // scope 15 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
        _102 = core::panicking::assert_failed::<(usize, usize), (usize, usize)>(move _103, move _104, move _106, move _108) -> bb68; // scope 15 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:53
                                         // + literal: Const { ty: for<'a, 'b, 'c> fn(core::panicking::AssertKind, &'a (usize, usize), &'b (usize, usize), Option<Arguments<'c>>) -> ! {core::panicking::assert_failed::<(usize, usize), (usize, usize)>}, val: Value(<ZST>) }
    }

    bb28: {
        _109 = Vec::<i32>::new() -> [return: bb29, unwind: bb68]; // scope 11 at ui/overloaded/overloaded-deref-count.rs:56:18: 56:28
                                         // mir::Constant
                                         // + span: ui/overloaded/overloaded-deref-count.rs:56:18: 56:26
                                         // + user_ty: UserType(3)
                                         // + literal: Const { ty: fn() -> Vec<i32> {Vec::<i32>::new}, val: Value(<ZST>) }
    }

    bb29: {
        _277 = const true;               // scope 16 at ui/overloaded/overloaded-deref-count.rs:57:5: 57:15
        _111 = &mut _109;                // scope 16 at ui/overloaded/overloaded-deref-count.rs:57:5: 57:15
        _110 = Vec::<i32>::push(move _111, const 1_i32) -> [return: bb30, unwind: bb75]; // scope 16 at ui/overloaded/overloaded-deref-count.rs:57:5: 57:15
                                         // mir::Constant
                                         // + span: ui/overloaded/overloaded-deref-count.rs:57:8: 57:12
                                         // + literal: Const { ty: for<'a> fn(&'a mut Vec<i32>, i32) {Vec::<i32>::push}, val: Value(<ZST>) }
    }

    bb30: {
        _113 = &mut _1;                  // scope 16 at ui/overloaded/overloaded-deref-count.rs:59:6: 59:7
        _112 = <DerefCounter<i32> as DerefMut>::deref_mut(move _113) -> [return: bb31, unwind: bb75]; // scope 16 at ui/overloaded/overloaded-deref-count.rs:59:5: 59:7
                                         // mir::Constant
                                         // + span: ui/overloaded/overloaded-deref-count.rs:59:5: 59:7
                                         // + literal: Const { ty: for<'a> fn(&'a mut DerefCounter<i32>) -> &'a mut <DerefCounter<i32> as Deref>::Target {<DerefCounter<i32> as DerefMut>::deref_mut}, val: Value(<ZST>) }
    }

    bb31: {
        (*_112) = const 5_i32;           // scope 16 at ui/overloaded/overloaded-deref-count.rs:59:5: 59:11
        _277 = const false;              // scope 16 at ui/overloaded/overloaded-deref-count.rs:59:18: 59:20
        _276 = const true;               // scope 16 at ui/overloaded/overloaded-deref-count.rs:59:18: 59:20
        _114 = move _109;                // scope 16 at ui/overloaded/overloaded-deref-count.rs:59:18: 59:20
        _116 = &mut _2;                  // scope 16 at ui/overloaded/overloaded-deref-count.rs:59:14: 59:15
        _115 = <DerefCounter<Vec<i32>> as DerefMut>::deref_mut(move _116) -> [return: bb32, unwind: bb73]; // scope 16 at ui/overloaded/overloaded-deref-count.rs:59:13: 59:15
                                         // mir::Constant
                                         // + span: ui/overloaded/overloaded-deref-count.rs:59:13: 59:15
                                         // + literal: Const { ty: for<'a> fn(&'a mut DerefCounter<Vec<i32>>) -> &'a mut <DerefCounter<Vec<i32>> as Deref>::Target {<DerefCounter<Vec<i32>> as DerefMut>::deref_mut}, val: Value(<ZST>) }
    }

    bb32: {
        _276 = const false;              // scope 16 at ui/overloaded/overloaded-deref-count.rs:59:13: 59:15
        drop((*_115)) -> [return: bb71, unwind: bb70]; // scope 16 at ui/overloaded/overloaded-deref-count.rs:59:13: 59:15
    }

    bb33: {
        _118 = &_119;                    // scope 16 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _270 = const _;                  // scope 16 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // + literal: Const { ty: &(usize, usize), val: Unevaluated(main, [], Some(promoted[6])) }
        _121 = _270;                     // scope 16 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _117 = (move _118, move _121);   // scope 16 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _122 = (_117.0: &(usize, usize)); // scope 16 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _123 = (_117.1: &(usize, usize)); // scope 16 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _126 = _122;                     // scope 17 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
        _127 = _123;                     // scope 17 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
        _125 = <(usize, usize) as PartialEq>::eq(move _126, move _127) -> [return: bb34, unwind: bb75]; // scope 17 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a (usize, usize), &'b (usize, usize)) -> bool {<(usize, usize) as PartialEq>::eq}, val: Value(<ZST>) }
    }

    bb34: {
        _124 = Not(move _125);           // scope 17 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
        switchInt(move _124) -> [0: bb36, otherwise: bb35]; // scope 17 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    }

    bb35: {
        _128 = const core::panicking::AssertKind::Eq; // scope 17 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _130 = const core::panicking::AssertKind::Eq; // scope 18 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _132 = _122;                     // scope 18 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _131 = _132;                     // scope 18 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _134 = _123;                     // scope 18 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _133 = _134;                     // scope 18 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _135 = Option::<Arguments<'_>>::None; // scope 18 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
        _129 = core::panicking::assert_failed::<(usize, usize), (usize, usize)>(move _130, move _131, move _133, move _135) -> bb75; // scope 18 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:53
                                         // + literal: Const { ty: for<'a, 'b, 'c> fn(core::panicking::AssertKind, &'a (usize, usize), &'b (usize, usize), Option<Arguments<'c>>) -> ! {core::panicking::assert_failed::<(usize, usize), (usize, usize)>}, val: Value(<ZST>) }
    }

    bb36: {
        _139 = &_2;                      // scope 16 at ui/overloaded/overloaded-deref-count.rs:60:48: 60:58
        _138 = DerefCounter::<Vec<i32>>::counts(move _139) -> [return: bb37, unwind: bb75]; // scope 16 at ui/overloaded/overloaded-deref-count.rs:60:48: 60:58
                                         // mir::Constant
                                         // + span: ui/overloaded/overloaded-deref-count.rs:60:50: 60:56
                                         // + literal: Const { ty: for<'a> fn(&'a DerefCounter<Vec<i32>>) -> (usize, usize) {DerefCounter::<Vec<i32>>::counts}, val: Value(<ZST>) }
    }

    bb37: {
        _137 = &_138;                    // scope 16 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _269 = const _;                  // scope 16 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // + literal: Const { ty: &(usize, usize), val: Unevaluated(main, [], Some(promoted[5])) }
        _140 = _269;                     // scope 16 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _136 = (move _137, move _140);   // scope 16 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _141 = (_136.0: &(usize, usize)); // scope 16 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _142 = (_136.1: &(usize, usize)); // scope 16 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _145 = _141;                     // scope 19 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
        _146 = _142;                     // scope 19 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
        _144 = <(usize, usize) as PartialEq>::eq(move _145, move _146) -> [return: bb38, unwind: bb75]; // scope 19 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a (usize, usize), &'b (usize, usize)) -> bool {<(usize, usize) as PartialEq>::eq}, val: Value(<ZST>) }
    }

    bb38: {
        _143 = Not(move _144);           // scope 19 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
        switchInt(move _143) -> [0: bb40, otherwise: bb39]; // scope 19 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    }

    bb39: {
        _147 = const core::panicking::AssertKind::Eq; // scope 19 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _149 = const core::panicking::AssertKind::Eq; // scope 20 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _151 = _141;                     // scope 20 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _150 = _151;                     // scope 20 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _153 = _142;                     // scope 20 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _152 = _153;                     // scope 20 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _154 = Option::<Arguments<'_>>::None; // scope 20 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
        _148 = core::panicking::assert_failed::<(usize, usize), (usize, usize)>(move _149, move _150, move _152, move _154) -> bb75; // scope 20 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:53
                                         // + literal: Const { ty: for<'a, 'b, 'c> fn(core::panicking::AssertKind, &'a (usize, usize), &'b (usize, usize), Option<Arguments<'c>>) -> ! {core::panicking::assert_failed::<(usize, usize), (usize, usize)>}, val: Value(<ZST>) }
    }

    bb40: {
        _156 = &mut _1;                  // scope 16 at ui/overloaded/overloaded-deref-count.rs:62:6: 62:7
        _155 = <DerefCounter<i32> as DerefMut>::deref_mut(move _156) -> [return: bb41, unwind: bb75]; // scope 16 at ui/overloaded/overloaded-deref-count.rs:62:5: 62:7
                                         // mir::Constant
                                         // + span: ui/overloaded/overloaded-deref-count.rs:62:5: 62:7
                                         // + literal: Const { ty: for<'a> fn(&'a mut DerefCounter<i32>) -> &'a mut <DerefCounter<i32> as Deref>::Target {<DerefCounter<i32> as DerefMut>::deref_mut}, val: Value(<ZST>) }
    }

    bb41: {
        _157 = CheckedSub((*_155), const 3_i32); // scope 16 at ui/overloaded/overloaded-deref-count.rs:62:5: 62:12
        assert(!move (_157.1: bool), "attempt to compute `{} - {}`, which would overflow", (*_155), const 3_i32) -> [success: bb42, unwind: bb75]; // scope 16 at ui/overloaded/overloaded-deref-count.rs:62:5: 62:12
    }

    bb42: {
        (*_155) = move (_157.0: i32);    // scope 16 at ui/overloaded/overloaded-deref-count.rs:62:5: 62:12
        _161 = &_1;                      // scope 16 at ui/overloaded/overloaded-deref-count.rs:63:16: 63:26
        _160 = DerefCounter::<i32>::counts(move _161) -> [return: bb43, unwind: bb75]; // scope 16 at ui/overloaded/overloaded-deref-count.rs:63:16: 63:26
                                         // mir::Constant
                                         // + span: ui/overloaded/overloaded-deref-count.rs:63:18: 63:24
                                         // + literal: Const { ty: for<'a> fn(&'a DerefCounter<i32>) -> (usize, usize) {DerefCounter::<i32>::counts}, val: Value(<ZST>) }
    }

    bb43: {
        _159 = &_160;                    // scope 16 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _268 = const _;                  // scope 16 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // + literal: Const { ty: &(usize, usize), val: Unevaluated(main, [], Some(promoted[4])) }
        _162 = _268;                     // scope 16 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _158 = (move _159, move _162);   // scope 16 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _163 = (_158.0: &(usize, usize)); // scope 16 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _164 = (_158.1: &(usize, usize)); // scope 16 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _167 = _163;                     // scope 21 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
        _168 = _164;                     // scope 21 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
        _166 = <(usize, usize) as PartialEq>::eq(move _167, move _168) -> [return: bb44, unwind: bb75]; // scope 21 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a (usize, usize), &'b (usize, usize)) -> bool {<(usize, usize) as PartialEq>::eq}, val: Value(<ZST>) }
    }

    bb44: {
        _165 = Not(move _166);           // scope 21 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
        switchInt(move _165) -> [0: bb46, otherwise: bb45]; // scope 21 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    }

    bb45: {
        _169 = const core::panicking::AssertKind::Eq; // scope 21 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _171 = const core::panicking::AssertKind::Eq; // scope 22 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _173 = _163;                     // scope 22 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _172 = _173;                     // scope 22 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _175 = _164;                     // scope 22 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _174 = _175;                     // scope 22 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _176 = Option::<Arguments<'_>>::None; // scope 22 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
        _170 = core::panicking::assert_failed::<(usize, usize), (usize, usize)>(move _171, move _172, move _174, move _176) -> bb75; // scope 22 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:53
                                         // + literal: Const { ty: for<'a, 'b, 'c> fn(core::panicking::AssertKind, &'a (usize, usize), &'b (usize, usize), Option<Arguments<'c>>) -> ! {core::panicking::assert_failed::<(usize, usize), (usize, usize)>}, val: Value(<ZST>) }
    }

    bb46: {
        _180 = &_1;                      // scope 16 at ui/overloaded/overloaded-deref-count.rs:67:7: 67:8
        _179 = <DerefCounter<i32> as Deref>::deref(move _180) -> [return: bb47, unwind: bb75]; // scope 16 at ui/overloaded/overloaded-deref-count.rs:67:5: 67:9
                                         // mir::Constant
                                         // + span: ui/overloaded/overloaded-deref-count.rs:67:5: 67:9
                                         // + literal: Const { ty: for<'a> fn(&'a DerefCounter<i32>) -> &'a <DerefCounter<i32> as Deref>::Target {<DerefCounter<i32> as Deref>::deref}, val: Value(<ZST>) }
    }

    bb47: {
        _178 = _179;                     // scope 16 at ui/overloaded/overloaded-deref-count.rs:67:5: 67:21
        _177 = <i32 as ToString>::to_string(move _178) -> [return: bb48, unwind: bb75]; // scope 16 at ui/overloaded/overloaded-deref-count.rs:67:5: 67:21
                                         // mir::Constant
                                         // + span: ui/overloaded/overloaded-deref-count.rs:67:10: 67:19
                                         // + literal: Const { ty: for<'a> fn(&'a i32) -> String {<i32 as ToString>::to_string}, val: Value(<ZST>) }
    }

    bb48: {
        drop(_177) -> [return: bb49, unwind: bb75]; // scope 16 at ui/overloaded/overloaded-deref-count.rs:67:21: 67:22
    }

    bb49: {
        _184 = &_1;                      // scope 16 at ui/overloaded/overloaded-deref-count.rs:68:16: 68:26
        _183 = DerefCounter::<i32>::counts(move _184) -> [return: bb50, unwind: bb75]; // scope 16 at ui/overloaded/overloaded-deref-count.rs:68:16: 68:26
                                         // mir::Constant
                                         // + span: ui/overloaded/overloaded-deref-count.rs:68:18: 68:24
                                         // + literal: Const { ty: for<'a> fn(&'a DerefCounter<i32>) -> (usize, usize) {DerefCounter::<i32>::counts}, val: Value(<ZST>) }
    }

    bb50: {
        _182 = &_183;                    // scope 16 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _267 = const _;                  // scope 16 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // + literal: Const { ty: &(usize, usize), val: Unevaluated(main, [], Some(promoted[3])) }
        _185 = _267;                     // scope 16 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _181 = (move _182, move _185);   // scope 16 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _186 = (_181.0: &(usize, usize)); // scope 16 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _187 = (_181.1: &(usize, usize)); // scope 16 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _190 = _186;                     // scope 23 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
        _191 = _187;                     // scope 23 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
        _189 = <(usize, usize) as PartialEq>::eq(move _190, move _191) -> [return: bb51, unwind: bb75]; // scope 23 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a (usize, usize), &'b (usize, usize)) -> bool {<(usize, usize) as PartialEq>::eq}, val: Value(<ZST>) }
    }

    bb51: {
        _188 = Not(move _189);           // scope 23 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
        switchInt(move _188) -> [0: bb53, otherwise: bb52]; // scope 23 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    }

    bb52: {
        _192 = const core::panicking::AssertKind::Eq; // scope 23 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _194 = const core::panicking::AssertKind::Eq; // scope 24 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _196 = _186;                     // scope 24 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _195 = _196;                     // scope 24 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _198 = _187;                     // scope 24 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _197 = _198;                     // scope 24 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _199 = Option::<Arguments<'_>>::None; // scope 24 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
        _193 = core::panicking::assert_failed::<(usize, usize), (usize, usize)>(move _194, move _195, move _197, move _199) -> bb75; // scope 24 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:53
                                         // + literal: Const { ty: for<'a, 'b, 'c> fn(core::panicking::AssertKind, &'a (usize, usize), &'b (usize, usize), Option<Arguments<'c>>) -> ! {core::panicking::assert_failed::<(usize, usize), (usize, usize)>}, val: Value(<ZST>) }
    }

    bb53: {
        _203 = &mut _2;                  // scope 16 at ui/overloaded/overloaded-deref-count.rs:71:7: 71:8
        _202 = <DerefCounter<Vec<i32>> as DerefMut>::deref_mut(move _203) -> [return: bb54, unwind: bb75]; // scope 16 at ui/overloaded/overloaded-deref-count.rs:71:5: 71:9
                                         // mir::Constant
                                         // + span: ui/overloaded/overloaded-deref-count.rs:71:5: 71:9
                                         // + literal: Const { ty: for<'a> fn(&'a mut DerefCounter<Vec<i32>>) -> &'a mut <DerefCounter<Vec<i32>> as Deref>::Target {<DerefCounter<Vec<i32>> as DerefMut>::deref_mut}, val: Value(<ZST>) }
    }

    bb54: {
        _201 = &mut (*_202);             // scope 16 at ui/overloaded/overloaded-deref-count.rs:71:5: 71:17
        _200 = Vec::<i32>::push(move _201, const 2_i32) -> [return: bb55, unwind: bb75]; // scope 16 at ui/overloaded/overloaded-deref-count.rs:71:5: 71:17
                                         // mir::Constant
                                         // + span: ui/overloaded/overloaded-deref-count.rs:71:10: 71:14
                                         // + literal: Const { ty: for<'a> fn(&'a mut Vec<i32>, i32) {Vec::<i32>::push}, val: Value(<ZST>) }
    }

    bb55: {
        _207 = &_2;                      // scope 16 at ui/overloaded/overloaded-deref-count.rs:72:16: 72:26
        _206 = DerefCounter::<Vec<i32>>::counts(move _207) -> [return: bb56, unwind: bb75]; // scope 16 at ui/overloaded/overloaded-deref-count.rs:72:16: 72:26
                                         // mir::Constant
                                         // + span: ui/overloaded/overloaded-deref-count.rs:72:18: 72:24
                                         // + literal: Const { ty: for<'a> fn(&'a DerefCounter<Vec<i32>>) -> (usize, usize) {DerefCounter::<Vec<i32>>::counts}, val: Value(<ZST>) }
    }

    bb56: {
        _205 = &_206;                    // scope 16 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _266 = const _;                  // scope 16 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // + literal: Const { ty: &(usize, usize), val: Unevaluated(main, [], Some(promoted[2])) }
        _208 = _266;                     // scope 16 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _204 = (move _205, move _208);   // scope 16 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _209 = (_204.0: &(usize, usize)); // scope 16 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _210 = (_204.1: &(usize, usize)); // scope 16 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _213 = _209;                     // scope 25 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
        _214 = _210;                     // scope 25 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
        _212 = <(usize, usize) as PartialEq>::eq(move _213, move _214) -> [return: bb57, unwind: bb75]; // scope 25 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a (usize, usize), &'b (usize, usize)) -> bool {<(usize, usize) as PartialEq>::eq}, val: Value(<ZST>) }
    }

    bb57: {
        _211 = Not(move _212);           // scope 25 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
        switchInt(move _211) -> [0: bb59, otherwise: bb58]; // scope 25 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    }

    bb58: {
        _215 = const core::panicking::AssertKind::Eq; // scope 25 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _217 = const core::panicking::AssertKind::Eq; // scope 26 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _219 = _209;                     // scope 26 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _218 = _219;                     // scope 26 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _221 = _210;                     // scope 26 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _220 = _221;                     // scope 26 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _222 = Option::<Arguments<'_>>::None; // scope 26 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
        _216 = core::panicking::assert_failed::<(usize, usize), (usize, usize)>(move _217, move _218, move _220, move _222) -> bb75; // scope 26 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:53
                                         // + literal: Const { ty: for<'a, 'b, 'c> fn(core::panicking::AssertKind, &'a (usize, usize), &'b (usize, usize), Option<Arguments<'c>>) -> ! {core::panicking::assert_failed::<(usize, usize), (usize, usize)>}, val: Value(<ZST>) }
    }

    bb59: {
        _226 = &_1;                      // scope 16 at ui/overloaded/overloaded-deref-count.rs:75:17: 75:18
        _225 = <DerefCounter<i32> as Deref>::deref(move _226) -> [return: bb60, unwind: bb75]; // scope 16 at ui/overloaded/overloaded-deref-count.rs:75:16: 75:18
                                         // mir::Constant
                                         // + span: ui/overloaded/overloaded-deref-count.rs:75:16: 75:18
                                         // + literal: Const { ty: for<'a> fn(&'a DerefCounter<i32>) -> &'a <DerefCounter<i32> as Deref>::Target {<DerefCounter<i32> as Deref>::deref}, val: Value(<ZST>) }
    }

    bb60: {
        _224 = _225;                     // scope 16 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _265 = const _;                  // scope 16 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // + literal: Const { ty: &i32, val: Unevaluated(main, [], Some(promoted[1])) }
        _227 = _265;                     // scope 16 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _223 = (move _224, move _227);   // scope 16 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _228 = (_223.0: &i32);           // scope 16 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _229 = (_223.1: &i32);           // scope 16 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _232 = (*_228);                  // scope 27 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
        _233 = const 2_i32;              // scope 27 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
        _231 = Eq(move _232, move _233); // scope 27 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
        _230 = Not(move _231);           // scope 27 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
        switchInt(move _230) -> [0: bb62, otherwise: bb61]; // scope 27 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    }

    bb61: {
        _234 = const core::panicking::AssertKind::Eq; // scope 27 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _236 = const core::panicking::AssertKind::Eq; // scope 28 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _238 = _228;                     // scope 28 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _237 = _238;                     // scope 28 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _240 = _229;                     // scope 28 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _239 = _240;                     // scope 28 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _241 = Option::<Arguments<'_>>::None; // scope 28 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
        _235 = core::panicking::assert_failed::<i32, i32>(move _236, move _237, move _239, move _241) -> bb75; // scope 28 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:53
                                         // + literal: Const { ty: for<'a, 'b, 'c> fn(core::panicking::AssertKind, &'a i32, &'b i32, Option<Arguments<'c>>) -> ! {core::panicking::assert_failed::<i32, i32>}, val: Value(<ZST>) }
    }

    bb62: {
        _264 = const _;                  // scope 16 at ui/overloaded/overloaded-deref-count.rs:76:26: 76:33
                                         // mir::Constant
                                         // + span: ui/overloaded/overloaded-deref-count.rs:76:26: 76:33
                                         // + literal: Const { ty: &[i32; 2], val: Unevaluated(main, [], Some(promoted[0])) }
        _244 = _264;                     // scope 16 at ui/overloaded/overloaded-deref-count.rs:76:26: 76:33
        _243 = _244;                     // scope 16 at ui/overloaded/overloaded-deref-count.rs:76:26: 76:33
        _242 = move _243 as &[i32] (Pointer(Unsize)); // scope 16 at ui/overloaded/overloaded-deref-count.rs:76:26: 76:33
        _248 = &_2;                      // scope 29 at ui/overloaded/overloaded-deref-count.rs:77:18: 77:19
        _247 = <DerefCounter<Vec<i32>> as Deref>::deref(move _248) -> [return: bb63, unwind: bb75]; // scope 29 at ui/overloaded/overloaded-deref-count.rs:77:16: 77:20
                                         // mir::Constant
                                         // + span: ui/overloaded/overloaded-deref-count.rs:77:16: 77:20
                                         // + literal: Const { ty: for<'a> fn(&'a DerefCounter<Vec<i32>>) -> &'a <DerefCounter<Vec<i32>> as Deref>::Target {<DerefCounter<Vec<i32>> as Deref>::deref}, val: Value(<ZST>) }
    }

    bb63: {
        _246 = _247;                     // scope 29 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _249 = &_242;                    // scope 29 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _245 = (move _246, move _249);   // scope 29 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _250 = (_245.0: &std::vec::Vec<i32>); // scope 29 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _251 = (_245.1: &&[i32]);        // scope 29 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _254 = _250;                     // scope 30 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
        _255 = _251;                     // scope 30 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
        _253 = <Vec<i32> as PartialEq<&[i32]>>::eq(move _254, move _255) -> [return: bb64, unwind: bb75]; // scope 30 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a Vec<i32>, &'b &[i32]) -> bool {<Vec<i32> as PartialEq<&[i32]>>::eq}, val: Value(<ZST>) }
    }

    bb64: {
        _252 = Not(move _253);           // scope 30 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
        switchInt(move _252) -> [0: bb66, otherwise: bb65]; // scope 30 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    }

    bb65: {
        _256 = const core::panicking::AssertKind::Eq; // scope 30 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _258 = const core::panicking::AssertKind::Eq; // scope 31 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _260 = _250;                     // scope 31 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _259 = _260;                     // scope 31 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _262 = _251;                     // scope 31 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _261 = _262;                     // scope 31 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _263 = Option::<Arguments<'_>>::None; // scope 31 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
        _257 = core::panicking::assert_failed::<Vec<i32>, &[i32]>(move _258, move _259, move _261, move _263) -> bb75; // scope 31 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:53
                                         // + literal: Const { ty: for<'a, 'b, 'c> fn(core::panicking::AssertKind, &'a Vec<i32>, &'b &[i32], Option<Arguments<'c>>) -> ! {core::panicking::assert_failed::<Vec<i32>, &[i32]>}, val: Value(<ZST>) }
    }

    bb66: {
        _277 = const false;              // scope 11 at ui/overloaded/overloaded-deref-count.rs:78:1: 78:2
        drop(_2) -> bb67;                // scope 1 at ui/overloaded/overloaded-deref-count.rs:78:1: 78:2
    }

    bb67: {
        return;                          // scope 0 at ui/overloaded/overloaded-deref-count.rs:78:2: 78:2
    }

    bb68 (cleanup): {
        drop(_2) -> bb69;                // scope 1 at ui/overloaded/overloaded-deref-count.rs:78:1: 78:2
    }

    bb69 (cleanup): {
        resume;                          // scope 0 at ui/overloaded/overloaded-deref-count.rs:43:1: 78:2
    }

    bb70 (cleanup): {
        (*_115) = move _114;             // scope 16 at ui/overloaded/overloaded-deref-count.rs:59:13: 59:15
        goto -> bb73;                    // scope 16 at ui/overloaded/overloaded-deref-count.rs:59:13: 59:15
    }

    bb71: {
        (*_115) = move _114;             // scope 16 at ui/overloaded/overloaded-deref-count.rs:59:13: 59:15
        _276 = const false;              // scope 16 at ui/overloaded/overloaded-deref-count.rs:59:19: 59:20
        _120 = &_1;                      // scope 16 at ui/overloaded/overloaded-deref-count.rs:60:16: 60:26
        _119 = DerefCounter::<i32>::counts(move _120) -> [return: bb33, unwind: bb75]; // scope 16 at ui/overloaded/overloaded-deref-count.rs:60:16: 60:26
                                         // mir::Constant
                                         // + span: ui/overloaded/overloaded-deref-count.rs:60:18: 60:24
                                         // + literal: Const { ty: for<'a> fn(&'a DerefCounter<i32>) -> (usize, usize) {DerefCounter::<i32>::counts}, val: Value(<ZST>) }
    }

    bb72 (cleanup): {
        drop(_114) -> bb75;              // scope 16 at ui/overloaded/overloaded-deref-count.rs:59:19: 59:20
    }

    bb73 (cleanup): {
        switchInt(_276) -> [0: bb75, otherwise: bb72]; // scope 16 at ui/overloaded/overloaded-deref-count.rs:59:19: 59:20
    }

    bb74 (cleanup): {
        drop(_109) -> bb68;              // scope 11 at ui/overloaded/overloaded-deref-count.rs:78:1: 78:2
    }

    bb75 (cleanup): {
        switchInt(_277) -> [0: bb68, otherwise: bb74]; // scope 11 at ui/overloaded/overloaded-deref-count.rs:78:1: 78:2
    }
}

promoted[0] in main: &[i32; 2] = {
    let mut _0: &[i32; 2];               // return place in scope 0 at ui/overloaded/overloaded-deref-count.rs:76:26: 76:33
    let mut _1: [i32; 2];                // in scope 0 at ui/overloaded/overloaded-deref-count.rs:76:27: 76:33

    bb0: {
        _1 = [const 1_i32, const 2_i32]; // scope 0 at ui/overloaded/overloaded-deref-count.rs:76:27: 76:33
        _0 = &_1;                        // scope 0 at ui/overloaded/overloaded-deref-count.rs:76:26: 76:33
        return;                          // scope 0 at ui/overloaded/overloaded-deref-count.rs:76:26: 76:33
    }
}

promoted[1] in main: &i32 = {
    let mut _0: &i32;                    // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _1: i32;                     // in scope 0 at ui/overloaded/overloaded-deref-count.rs:75:20: 75:21

    bb0: {
        _1 = const 2_i32;                // scope 0 at ui/overloaded/overloaded-deref-count.rs:75:20: 75:21
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    }
}

promoted[2] in main: &(usize, usize) = {
    let mut _0: &(usize, usize);         // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _1: (usize, usize);          // in scope 0 at ui/overloaded/overloaded-deref-count.rs:72:28: 72:34

    bb0: {
        _1 = (const 1_usize, const 3_usize); // scope 0 at ui/overloaded/overloaded-deref-count.rs:72:28: 72:34
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    }
}

promoted[3] in main: &(usize, usize) = {
    let mut _0: &(usize, usize);         // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _1: (usize, usize);          // in scope 0 at ui/overloaded/overloaded-deref-count.rs:68:28: 68:34

    bb0: {
        _1 = (const 3_usize, const 3_usize); // scope 0 at ui/overloaded/overloaded-deref-count.rs:68:28: 68:34
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    }
}

promoted[4] in main: &(usize, usize) = {
    let mut _0: &(usize, usize);         // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _1: (usize, usize);          // in scope 0 at ui/overloaded/overloaded-deref-count.rs:63:28: 63:34

    bb0: {
        _1 = (const 2_usize, const 3_usize); // scope 0 at ui/overloaded/overloaded-deref-count.rs:63:28: 63:34
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    }
}

promoted[5] in main: &(usize, usize) = {
    let mut _0: &(usize, usize);         // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _1: (usize, usize);          // in scope 0 at ui/overloaded/overloaded-deref-count.rs:60:60: 60:66

    bb0: {
        _1 = (const 1_usize, const 2_usize); // scope 0 at ui/overloaded/overloaded-deref-count.rs:60:60: 60:66
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    }
}

promoted[6] in main: &(usize, usize) = {
    let mut _0: &(usize, usize);         // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _1: (usize, usize);          // in scope 0 at ui/overloaded/overloaded-deref-count.rs:60:28: 60:34

    bb0: {
        _1 = (const 2_usize, const 2_usize); // scope 0 at ui/overloaded/overloaded-deref-count.rs:60:28: 60:34
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    }
}

promoted[7] in main: &(usize, usize) = {
    let mut _0: &(usize, usize);         // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _1: (usize, usize);          // in scope 0 at ui/overloaded/overloaded-deref-count.rs:54:60: 54:66

    bb0: {
        _1 = (const 1_usize, const 1_usize); // scope 0 at ui/overloaded/overloaded-deref-count.rs:54:60: 54:66
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    }
}

promoted[8] in main: &(usize, usize) = {
    let mut _0: &(usize, usize);         // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _1: (usize, usize);          // in scope 0 at ui/overloaded/overloaded-deref-count.rs:54:28: 54:34

    bb0: {
        _1 = (const 2_usize, const 1_usize); // scope 0 at ui/overloaded/overloaded-deref-count.rs:54:28: 54:34
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    }
}

promoted[9] in main: &(usize, usize) = {
    let mut _0: &(usize, usize);         // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _1: (usize, usize);          // in scope 0 at ui/overloaded/overloaded-deref-count.rs:51:60: 51:66

    bb0: {
        _1 = (const 1_usize, const 0_usize); // scope 0 at ui/overloaded/overloaded-deref-count.rs:51:60: 51:66
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    }
}

promoted[10] in main: &(usize, usize) = {
    let mut _0: &(usize, usize);         // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _1: (usize, usize);          // in scope 0 at ui/overloaded/overloaded-deref-count.rs:51:28: 51:34

    bb0: {
        _1 = (const 2_usize, const 0_usize); // scope 0 at ui/overloaded/overloaded-deref-count.rs:51:28: 51:34
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    }
}

promoted[11] in main: &(usize, usize) = {
    let mut _0: &(usize, usize);         // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _1: (usize, usize);          // in scope 0 at ui/overloaded/overloaded-deref-count.rs:48:28: 48:34

    bb0: {
        _1 = (const 1_usize, const 0_usize); // scope 0 at ui/overloaded/overloaded-deref-count.rs:48:28: 48:34
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    }
}
