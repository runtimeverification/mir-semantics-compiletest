// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
fn <impl at ui/associated-type-bounds/issue-73818.rs:8:10: 8:19>::eq(_1: &Never, _2: &Never) -> bool {
    debug self => _1;                    // in scope 0 at ui/associated-type-bounds/issue-73818.rs:8:10: 8:19
    debug other => _2;                   // in scope 0 at ui/associated-type-bounds/issue-73818.rs:8:10: 8:19
    let mut _0: bool;                    // return place in scope 0 at ui/associated-type-bounds/issue-73818.rs:8:10: 8:19
    scope 1 {
    }

    bb0: {
        unreachable;                     // scope 1 at ui/associated-type-bounds/issue-73818.rs:8:10: 8:19
    }
}

fn main() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/associated-type-bounds/issue-73818.rs:25:11: 25:11

    bb0: {
        return;                          // scope 0 at ui/associated-type-bounds/issue-73818.rs:25:13: 25:13
    }
}
