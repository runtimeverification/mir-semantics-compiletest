// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
fn <impl at ui/associated-type-bounds/traits-assoc-anonymized.rs:5:1: 5:53>::fmt_index(_1: &LookupInternedStorage, _2: &<Q as QueryDb<'_>>::DynDb) -> () {
    debug self => _1;                    // in scope 0 at ui/associated-type-bounds/traits-assoc-anonymized.rs:10:18: 10:23
    debug db => _2;                      // in scope 0 at ui/associated-type-bounds/traits-assoc-anonymized.rs:10:25: 10:27
    let mut _0: ();                      // return place in scope 0 at ui/associated-type-bounds/traits-assoc-anonymized.rs:10:57: 10:57
    let _3: ();                          // in scope 0 at ui/associated-type-bounds/traits-assoc-anonymized.rs:11:9: 11:82
    let mut _4: &<Q as QueryDb<'_>>::DynDb; // in scope 0 at ui/associated-type-bounds/traits-assoc-anonymized.rs:11:79: 11:81

    bb0: {
        _4 = _2;                         // scope 0 at ui/associated-type-bounds/traits-assoc-anonymized.rs:11:79: 11:81
        _3 = <<Q as QueryDb<'_>>::DynDb as HasQueryGroup<<Q as QueryDb<'_>>::Group>>::group_storage(move _4) -> bb1; // scope 0 at ui/associated-type-bounds/traits-assoc-anonymized.rs:11:9: 11:82
                                         // mir::Constant
                                         // + span: ui/associated-type-bounds/traits-assoc-anonymized.rs:11:9: 11:78
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: for<'a> fn(&'a <Q as QueryDb<'_>>::DynDb) {<<Q as QueryDb<'_>>::DynDb as HasQueryGroup<<Q as QueryDb<'_>>::Group>>::group_storage}, val: Value(<ZST>) }
    }

    bb1: {
        return;                          // scope 0 at ui/associated-type-bounds/traits-assoc-anonymized.rs:12:6: 12:6
    }
}

fn main() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/associated-type-bounds/traits-assoc-anonymized.rs:33:11: 33:11

    bb0: {
        return;                          // scope 0 at ui/associated-type-bounds/traits-assoc-anonymized.rs:33:13: 33:13
    }
}
