// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
fn foo(_1: M) -> () {
    debug _m => _1;                      // in scope 0 at ui/associated-type-bounds/associated-item-through-where-clause.rs:14:11: 14:13
    let mut _0: ();                      // return place in scope 0 at ui/associated-type-bounds/associated-item-through-where-clause.rs:15:1: 15:1

    bb0: {
        drop(_1) -> bb1;                 // scope 0 at ui/associated-type-bounds/associated-item-through-where-clause.rs:19:1: 19:2
    }

    bb1: {
        return;                          // scope 0 at ui/associated-type-bounds/associated-item-through-where-clause.rs:19:2: 19:2
    }
}

fn main() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/associated-type-bounds/associated-item-through-where-clause.rs:21:11: 21:11

    bb0: {
        return;                          // scope 0 at ui/associated-type-bounds/associated-item-through-where-clause.rs:21:13: 21:13
    }
}
