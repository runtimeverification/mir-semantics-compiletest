// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
fn main() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/inherit-env.rs:9:11: 9:11
    let mut _1: bool;                    // in scope 0 at ui/inherit-env.rs:10:8: 10:65
    let mut _2: std::option::Option<bool>; // in scope 0 at ui/inherit-env.rs:10:8: 10:48
    let mut _3: std::option::Option<std::string::String>; // in scope 0 at ui/inherit-env.rs:10:8: 10:26
    let mut _4: &mut std::env::Args;     // in scope 0 at ui/inherit-env.rs:10:8: 10:26
    let mut _5: std::env::Args;          // in scope 0 at ui/inherit-env.rs:10:8: 10:19
    let mut _6: [closure@ui/inherit-env.rs:10:31: 10:34]; // in scope 0 at ui/inherit-env.rs:10:31: 10:47
    let mut _7: std::env::Vars;          // in scope 0 at ui/inherit-env.rs:11:23: 11:34
    let mut _8: std::env::Vars;          // in scope 0 at ui/inherit-env.rs:11:23: 11:34
    let mut _9: std::env::Vars;          // in scope 0 at ui/inherit-env.rs:11:23: 11:34
    let mut _10: std::option::Option<(std::string::String, std::string::String)>; // in scope 0 at ui/inherit-env.rs:11:23: 11:34
    let mut _11: &mut std::env::Vars;    // in scope 0 at ui/inherit-env.rs:11:23: 11:34
    let mut _12: &mut std::env::Vars;    // in scope 0 at ui/inherit-env.rs:11:23: 11:34
    let mut _13: isize;                  // in scope 0 at ui/inherit-env.rs:11:9: 13:10
    let _16: ();                         // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:62
    let mut _17: std::fmt::Arguments<'_>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _18: &[&str];                // in scope 0 at ui/inherit-env.rs:12:22: 12:29
    let mut _19: &[&str; 3];             // in scope 0 at ui/inherit-env.rs:12:22: 12:29
    let _20: &[&str; 3];                 // in scope 0 at ui/inherit-env.rs:12:22: 12:29
    let mut _21: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _22: &[core::fmt::ArgumentV1<'_>; 2]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let _23: &[core::fmt::ArgumentV1<'_>; 2]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let _24: [core::fmt::ArgumentV1<'_>; 2]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _25: core::fmt::ArgumentV1<'_>; // in scope 0 at ui/inherit-env.rs:12:31: 12:32
    let mut _26: &std::string::String;   // in scope 0 at ui/inherit-env.rs:12:31: 12:32
    let _27: &std::string::String;       // in scope 0 at ui/inherit-env.rs:12:31: 12:32
    let mut _28: core::fmt::ArgumentV1<'_>; // in scope 0 at ui/inherit-env.rs:12:34: 12:35
    let mut _29: &std::string::String;   // in scope 0 at ui/inherit-env.rs:12:34: 12:35
    let _30: &std::string::String;       // in scope 0 at ui/inherit-env.rs:12:34: 12:35
    let _31: std::path::PathBuf;         // in scope 0 at ui/inherit-env.rs:17:9: 17:11
    let mut _32: std::result::Result<std::path::PathBuf, std::io::Error>; // in scope 0 at ui/inherit-env.rs:17:14: 17:32
    let mut _34: std::result::Result<std::process::Output, std::io::Error>; // in scope 0 at ui/inherit-env.rs:18:18: 18:56
    let mut _35: &mut std::process::Command; // in scope 0 at ui/inherit-env.rs:18:18: 18:56
    let mut _36: &mut std::process::Command; // in scope 0 at ui/inherit-env.rs:18:18: 18:47
    let mut _37: &mut std::process::Command; // in scope 0 at ui/inherit-env.rs:18:18: 18:47
    let mut _38: std::process::Command;  // in scope 0 at ui/inherit-env.rs:18:18: 18:34
    let mut _39: std::path::PathBuf;     // in scope 0 at ui/inherit-env.rs:18:31: 18:33
    let mut _41: std::result::Result<std::string::String, std::string::FromUtf8Error>; // in scope 0 at ui/inherit-env.rs:19:18: 19:50
    let mut _42: std::vec::Vec<u8>;      // in scope 0 at ui/inherit-env.rs:19:36: 19:49
    let mut _43: std::env::Vars;         // in scope 0 at ui/inherit-env.rs:21:19: 21:30
    let mut _44: std::env::Vars;         // in scope 0 at ui/inherit-env.rs:21:19: 21:30
    let mut _46: std::option::Option<(std::string::String, std::string::String)>; // in scope 0 at ui/inherit-env.rs:21:19: 21:30
    let mut _47: &mut std::env::Vars;    // in scope 0 at ui/inherit-env.rs:21:19: 21:30
    let mut _48: &mut std::env::Vars;    // in scope 0 at ui/inherit-env.rs:21:19: 21:30
    let mut _49: isize;                  // in scope 0 at ui/inherit-env.rs:21:5: 25:6
    let mut _52: bool;                   // in scope 0 at ui/inherit-env.rs:22:9: 24:30
    let mut _53: bool;                   // in scope 0 at ui/inherit-env.rs:22:17: 22:57
    let mut _54: &str;                   // in scope 0 at ui/inherit-env.rs:22:17: 22:57
    let _55: &str;                       // in scope 0 at ui/inherit-env.rs:22:17: 22:57
    let mut _56: &std::string::String;   // in scope 0 at ui/inherit-env.rs:22:17: 22:57
    let mut _57: &std::string::String;   // in scope 0 at ui/inherit-env.rs:22:33: 22:56
    let _58: std::string::String;        // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:117:23: 120:6
    let mut _60: std::fmt::Arguments<'_>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
    let mut _61: &[&str];                // in scope 0 at ui/inherit-env.rs:22:42: 22:49
    let mut _62: &[&str; 2];             // in scope 0 at ui/inherit-env.rs:22:42: 22:49
    let _63: &[&str; 2];                 // in scope 0 at ui/inherit-env.rs:22:42: 22:49
    let mut _64: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
    let mut _65: &[core::fmt::ArgumentV1<'_>; 2]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
    let _66: &[core::fmt::ArgumentV1<'_>; 2]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
    let _67: [core::fmt::ArgumentV1<'_>; 2]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
    let mut _68: core::fmt::ArgumentV1<'_>; // in scope 0 at ui/inherit-env.rs:22:51: 22:52
    let mut _69: &std::string::String;   // in scope 0 at ui/inherit-env.rs:22:51: 22:52
    let _70: &std::string::String;       // in scope 0 at ui/inherit-env.rs:22:51: 22:52
    let mut _71: core::fmt::ArgumentV1<'_>; // in scope 0 at ui/inherit-env.rs:22:54: 22:55
    let mut _72: &std::string::String;   // in scope 0 at ui/inherit-env.rs:22:54: 22:55
    let _73: &std::string::String;       // in scope 0 at ui/inherit-env.rs:22:54: 22:55
    let mut _74: !;                      // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/panic.rs:29:9: 29:74
    let mut _75: std::fmt::Arguments<'_>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/panic.rs:29:31: 29:73
    let mut _76: &[&str];                // in scope 0 at ui/inherit-env.rs:23:17: 23:53
    let mut _77: &[&str; 3];             // in scope 0 at ui/inherit-env.rs:23:17: 23:53
    let _78: &[&str; 3];                 // in scope 0 at ui/inherit-env.rs:23:17: 23:53
    let mut _79: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/panic.rs:29:31: 29:73
    let mut _80: &[core::fmt::ArgumentV1<'_>; 3]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/panic.rs:29:31: 29:73
    let _81: &[core::fmt::ArgumentV1<'_>; 3]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/panic.rs:29:31: 29:73
    let _82: [core::fmt::ArgumentV1<'_>; 3]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/panic.rs:29:31: 29:73
    let mut _83: core::fmt::ArgumentV1<'_>; // in scope 0 at ui/inherit-env.rs:24:17: 24:18
    let mut _84: &std::string::String;   // in scope 0 at ui/inherit-env.rs:24:17: 24:18
    let _85: &std::string::String;       // in scope 0 at ui/inherit-env.rs:24:17: 24:18
    let mut _86: core::fmt::ArgumentV1<'_>; // in scope 0 at ui/inherit-env.rs:24:20: 24:21
    let mut _87: &std::string::String;   // in scope 0 at ui/inherit-env.rs:24:20: 24:21
    let _88: &std::string::String;       // in scope 0 at ui/inherit-env.rs:24:20: 24:21
    let mut _89: core::fmt::ArgumentV1<'_>; // in scope 0 at ui/inherit-env.rs:24:23: 24:29
    let mut _90: &std::string::String;   // in scope 0 at ui/inherit-env.rs:24:23: 24:29
    let _91: &std::string::String;       // in scope 0 at ui/inherit-env.rs:24:23: 24:29
    let mut _95: bool;                   // in scope 0 at ui/inherit-env.rs:26:1: 26:2
    scope 1 {
        debug iter => _9;                // in scope 1 at ui/inherit-env.rs:11:23: 11:34
        let _14: std::string::String;    // in scope 1 at ui/inherit-env.rs:11:14: 11:15
        let _15: std::string::String;    // in scope 1 at ui/inherit-env.rs:11:17: 11:18
        scope 2 {
            debug k => _14;              // in scope 2 at ui/inherit-env.rs:11:14: 11:15
            debug v => _15;              // in scope 2 at ui/inherit-env.rs:11:17: 11:18
            let mut _94: &[&str; 3];     // in scope 2 at ui/inherit-env.rs:12:22: 12:29
        }
    }
    scope 3 {
        debug me => _31;                 // in scope 3 at ui/inherit-env.rs:17:9: 17:11
        let _33: std::process::Output;   // in scope 3 at ui/inherit-env.rs:18:9: 18:15
        scope 4 {
            debug result => _33;         // in scope 4 at ui/inherit-env.rs:18:9: 18:15
            let _40: std::string::String; // in scope 4 at ui/inherit-env.rs:19:9: 19:15
            scope 5 {
                debug output => _40;     // in scope 5 at ui/inherit-env.rs:19:9: 19:15
                let mut _45: std::env::Vars; // in scope 5 at ui/inherit-env.rs:21:19: 21:30
                scope 6 {
                    debug iter => _45;   // in scope 6 at ui/inherit-env.rs:21:19: 21:30
                    let _50: std::string::String; // in scope 6 at ui/inherit-env.rs:21:10: 21:11
                    let _51: std::string::String; // in scope 6 at ui/inherit-env.rs:21:13: 21:14
                    scope 7 {
                        debug k => _50;  // in scope 7 at ui/inherit-env.rs:21:10: 21:11
                        debug v => _51;  // in scope 7 at ui/inherit-env.rs:21:13: 21:14
                        let _59: std::string::String; // in scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:13: 118:16
                        let mut _92: &[&str; 3]; // in scope 7 at ui/inherit-env.rs:23:17: 23:53
                        let mut _93: &[&str; 2]; // in scope 7 at ui/inherit-env.rs:22:42: 22:49
                        scope 8 {
                            debug res => _59; // in scope 8 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:13: 118:16
                        }
                    }
                }
            }
        }
    }

    bb0: {
        _95 = const false;               // scope 0 at ui/inherit-env.rs:10:5: 15:6
        _5 = args() -> bb1;              // scope 0 at ui/inherit-env.rs:10:8: 10:19
                                         // mir::Constant
                                         // + span: ui/inherit-env.rs:10:8: 10:17
                                         // + literal: Const { ty: fn() -> Args {args}, val: Value(<ZST>) }
    }

    bb1: {
        _4 = &mut _5;                    // scope 0 at ui/inherit-env.rs:10:8: 10:26
        _3 = <Args as Iterator>::nth(move _4, const 1_usize) -> [return: bb2, unwind: bb62]; // scope 0 at ui/inherit-env.rs:10:8: 10:26
                                         // mir::Constant
                                         // + span: ui/inherit-env.rs:10:20: 10:23
                                         // + literal: Const { ty: for<'a> fn(&'a mut Args, usize) -> Option<<Args as Iterator>::Item> {<Args as Iterator>::nth}, val: Value(<ZST>) }
    }

    bb2: {
        _2 = Option::<String>::map::<bool, [closure@ui/inherit-env.rs:10:31: 10:34]>(move _3, move _6) -> [return: bb3, unwind: bb62]; // scope 0 at ui/inherit-env.rs:10:8: 10:48
                                         // mir::Constant
                                         // + span: ui/inherit-env.rs:10:27: 10:30
                                         // + literal: Const { ty: fn(Option<String>, [closure@ui/inherit-env.rs:10:31: 10:34]) -> Option<bool> {Option::<String>::map::<bool, [closure@ui/inherit-env.rs:10:31: 10:34]>}, val: Value(<ZST>) }
    }

    bb3: {
        _1 = Option::<bool>::unwrap_or(move _2, const false) -> [return: bb4, unwind: bb62]; // scope 0 at ui/inherit-env.rs:10:8: 10:65
                                         // mir::Constant
                                         // + span: ui/inherit-env.rs:10:49: 10:58
                                         // + literal: Const { ty: fn(Option<bool>, bool) -> bool {Option::<bool>::unwrap_or}, val: Value(<ZST>) }
    }

    bb4: {
        drop(_5) -> bb5;                 // scope 0 at ui/inherit-env.rs:10:64: 10:65
    }

    bb5: {
        switchInt(move _1) -> [0: bb19, otherwise: bb6]; // scope 0 at ui/inherit-env.rs:10:8: 10:65
    }

    bb6: {
        _8 = vars() -> bb7;              // scope 0 at ui/inherit-env.rs:11:23: 11:34
                                         // mir::Constant
                                         // + span: ui/inherit-env.rs:11:23: 11:32
                                         // + literal: Const { ty: fn() -> Vars {vars}, val: Value(<ZST>) }
    }

    bb7: {
        _7 = <Vars as IntoIterator>::into_iter(move _8) -> bb8; // scope 0 at ui/inherit-env.rs:11:23: 11:34
                                         // mir::Constant
                                         // + span: ui/inherit-env.rs:11:23: 11:34
                                         // + literal: Const { ty: fn(Vars) -> <Vars as IntoIterator>::IntoIter {<Vars as IntoIterator>::into_iter}, val: Value(<ZST>) }
    }

    bb8: {
        _9 = move _7;                    // scope 0 at ui/inherit-env.rs:11:23: 11:34
        goto -> bb9;                     // scope 1 at ui/inherit-env.rs:11:9: 13:10
    }

    bb9: {
        _12 = &mut _9;                   // scope 1 at ui/inherit-env.rs:11:23: 11:34
        _11 = &mut (*_12);               // scope 1 at ui/inherit-env.rs:11:23: 11:34
        _10 = <Vars as Iterator>::next(move _11) -> [return: bb10, unwind: bb61]; // scope 1 at ui/inherit-env.rs:11:23: 11:34
                                         // mir::Constant
                                         // + span: ui/inherit-env.rs:11:23: 11:34
                                         // + literal: Const { ty: for<'a> fn(&'a mut Vars) -> Option<<Vars as Iterator>::Item> {<Vars as Iterator>::next}, val: Value(<ZST>) }
    }

    bb10: {
        _13 = discriminant(_10);         // scope 1 at ui/inherit-env.rs:11:23: 11:34
        switchInt(move _13) -> [0: bb13, 1: bb11, otherwise: bb12]; // scope 1 at ui/inherit-env.rs:11:23: 11:34
    }

    bb11: {
        _14 = move (((_10 as Some).0: (std::string::String, std::string::String)).0: std::string::String); // scope 1 at ui/inherit-env.rs:11:14: 11:15
        _15 = move (((_10 as Some).0: (std::string::String, std::string::String)).1: std::string::String); // scope 1 at ui/inherit-env.rs:11:17: 11:18
        _94 = const _;                   // scope 2 at ui/inherit-env.rs:12:22: 12:29
                                         // mir::Constant
                                         // + span: ui/inherit-env.rs:12:22: 12:29
                                         // + literal: Const { ty: &[&str; 3], val: Unevaluated(main, [], Some(promoted[2])) }
        _20 = _94;                       // scope 2 at ui/inherit-env.rs:12:22: 12:29
        _19 = _20;                       // scope 2 at ui/inherit-env.rs:12:22: 12:29
        _18 = move _19 as &[&str] (Pointer(Unsize)); // scope 2 at ui/inherit-env.rs:12:22: 12:29
        _27 = &_14;                      // scope 2 at ui/inherit-env.rs:12:31: 12:32
        _26 = _27;                       // scope 2 at ui/inherit-env.rs:12:31: 12:32
        _25 = core::fmt::ArgumentV1::<'_>::new_display::<String>(move _26) -> [return: bb14, unwind: bb59]; // scope 2 at ui/inherit-env.rs:12:31: 12:32
                                         // mir::Constant
                                         // + span: ui/inherit-env.rs:12:31: 12:32
                                         // + user_ty: UserType(1)
                                         // + literal: Const { ty: for<'b> fn(&'b String) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_display::<String>}, val: Value(<ZST>) }
    }

    bb12: {
        unreachable;                     // scope 1 at ui/inherit-env.rs:11:23: 11:34
    }

    bb13: {
        drop(_9) -> bb52;                // scope 0 at ui/inherit-env.rs:13:9: 13:10
    }

    bb14: {
        _30 = &_15;                      // scope 2 at ui/inherit-env.rs:12:34: 12:35
        _29 = _30;                       // scope 2 at ui/inherit-env.rs:12:34: 12:35
        _28 = core::fmt::ArgumentV1::<'_>::new_display::<String>(move _29) -> [return: bb15, unwind: bb59]; // scope 2 at ui/inherit-env.rs:12:34: 12:35
                                         // mir::Constant
                                         // + span: ui/inherit-env.rs:12:34: 12:35
                                         // + user_ty: UserType(2)
                                         // + literal: Const { ty: for<'b> fn(&'b String) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_display::<String>}, val: Value(<ZST>) }
    }

    bb15: {
        _24 = [move _25, move _28];      // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _23 = &_24;                      // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _22 = _23;                       // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _21 = move _22 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _17 = Arguments::<'_>::new_v1(move _18, move _21) -> [return: bb16, unwind: bb59]; // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb16: {
        _16 = _print(move _17) -> [return: bb17, unwind: bb59]; // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:62
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:27
                                         // + literal: Const { ty: for<'a> fn(Arguments<'a>) {_print}, val: Value(<ZST>) }
    }

    bb17: {
        drop(_15) -> [return: bb18, unwind: bb60]; // scope 1 at ui/inherit-env.rs:13:9: 13:10
    }

    bb18: {
        drop(_14) -> [return: bb9, unwind: bb61]; // scope 1 at ui/inherit-env.rs:13:9: 13:10
    }

    bb19: {
        _32 = current_exe() -> bb20;     // scope 0 at ui/inherit-env.rs:17:14: 17:32
                                         // mir::Constant
                                         // + span: ui/inherit-env.rs:17:14: 17:30
                                         // + literal: Const { ty: fn() -> Result<PathBuf, std::io::Error> {current_exe}, val: Value(<ZST>) }
    }

    bb20: {
        _31 = Result::<PathBuf, std::io::Error>::unwrap(move _32) -> bb21; // scope 0 at ui/inherit-env.rs:17:14: 17:41
                                         // mir::Constant
                                         // + span: ui/inherit-env.rs:17:33: 17:39
                                         // + literal: Const { ty: fn(Result<PathBuf, std::io::Error>) -> PathBuf {Result::<PathBuf, std::io::Error>::unwrap}, val: Value(<ZST>) }
    }

    bb21: {
        _39 = move _31;                  // scope 3 at ui/inherit-env.rs:18:31: 18:33
        _38 = Command::new::<PathBuf>(move _39) -> bb22; // scope 3 at ui/inherit-env.rs:18:18: 18:34
                                         // mir::Constant
                                         // + span: ui/inherit-env.rs:18:18: 18:30
                                         // + user_ty: UserType(3)
                                         // + literal: Const { ty: fn(PathBuf) -> Command {Command::new::<PathBuf>}, val: Value(<ZST>) }
    }

    bb22: {
        _37 = &mut _38;                  // scope 3 at ui/inherit-env.rs:18:18: 18:47
        _36 = Command::arg::<&str>(move _37, const "print") -> [return: bb23, unwind: bb58]; // scope 3 at ui/inherit-env.rs:18:18: 18:47
                                         // mir::Constant
                                         // + span: ui/inherit-env.rs:18:35: 18:38
                                         // + literal: Const { ty: for<'a> fn(&'a mut Command, &str) -> &'a mut Command {Command::arg::<&str>}, val: Value(<ZST>) }
                                         // mir::Constant
                                         // + span: ui/inherit-env.rs:18:39: 18:46
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
    }

    bb23: {
        _35 = &mut (*_36);               // scope 3 at ui/inherit-env.rs:18:18: 18:56
        _34 = Command::output(move _35) -> [return: bb24, unwind: bb58]; // scope 3 at ui/inherit-env.rs:18:18: 18:56
                                         // mir::Constant
                                         // + span: ui/inherit-env.rs:18:48: 18:54
                                         // + literal: Const { ty: for<'a> fn(&'a mut Command) -> Result<Output, std::io::Error> {Command::output}, val: Value(<ZST>) }
    }

    bb24: {
        _33 = Result::<Output, std::io::Error>::unwrap(move _34) -> [return: bb25, unwind: bb58]; // scope 3 at ui/inherit-env.rs:18:18: 18:65
                                         // mir::Constant
                                         // + span: ui/inherit-env.rs:18:57: 18:63
                                         // + literal: Const { ty: fn(Result<Output, std::io::Error>) -> Output {Result::<Output, std::io::Error>::unwrap}, val: Value(<ZST>) }
    }

    bb25: {
        _95 = const true;                // scope 3 at ui/inherit-env.rs:18:64: 18:65
        drop(_38) -> [return: bb26, unwind: bb67]; // scope 3 at ui/inherit-env.rs:18:65: 18:66
    }

    bb26: {
        _95 = const false;               // scope 4 at ui/inherit-env.rs:19:36: 19:49
        _42 = move (_33.1: std::vec::Vec<u8>); // scope 4 at ui/inherit-env.rs:19:36: 19:49
        _41 = String::from_utf8(move _42) -> [return: bb27, unwind: bb67]; // scope 4 at ui/inherit-env.rs:19:18: 19:50
                                         // mir::Constant
                                         // + span: ui/inherit-env.rs:19:18: 19:35
                                         // + literal: Const { ty: fn(Vec<u8>) -> Result<String, FromUtf8Error> {String::from_utf8}, val: Value(<ZST>) }
    }

    bb27: {
        _40 = Result::<String, FromUtf8Error>::unwrap(move _41) -> [return: bb28, unwind: bb67]; // scope 4 at ui/inherit-env.rs:19:18: 19:59
                                         // mir::Constant
                                         // + span: ui/inherit-env.rs:19:51: 19:57
                                         // + literal: Const { ty: fn(Result<String, FromUtf8Error>) -> String {Result::<String, FromUtf8Error>::unwrap}, val: Value(<ZST>) }
    }

    bb28: {
        _44 = vars() -> [return: bb29, unwind: bb57]; // scope 5 at ui/inherit-env.rs:21:19: 21:30
                                         // mir::Constant
                                         // + span: ui/inherit-env.rs:21:19: 21:28
                                         // + literal: Const { ty: fn() -> Vars {vars}, val: Value(<ZST>) }
    }

    bb29: {
        _43 = <Vars as IntoIterator>::into_iter(move _44) -> [return: bb30, unwind: bb57]; // scope 5 at ui/inherit-env.rs:21:19: 21:30
                                         // mir::Constant
                                         // + span: ui/inherit-env.rs:21:19: 21:30
                                         // + literal: Const { ty: fn(Vars) -> <Vars as IntoIterator>::IntoIter {<Vars as IntoIterator>::into_iter}, val: Value(<ZST>) }
    }

    bb30: {
        _45 = move _43;                  // scope 5 at ui/inherit-env.rs:21:19: 21:30
        goto -> bb31;                    // scope 6 at ui/inherit-env.rs:21:5: 25:6
    }

    bb31: {
        _48 = &mut _45;                  // scope 6 at ui/inherit-env.rs:21:19: 21:30
        _47 = &mut (*_48);               // scope 6 at ui/inherit-env.rs:21:19: 21:30
        _46 = <Vars as Iterator>::next(move _47) -> [return: bb32, unwind: bb56]; // scope 6 at ui/inherit-env.rs:21:19: 21:30
                                         // mir::Constant
                                         // + span: ui/inherit-env.rs:21:19: 21:30
                                         // + literal: Const { ty: for<'a> fn(&'a mut Vars) -> Option<<Vars as Iterator>::Item> {<Vars as Iterator>::next}, val: Value(<ZST>) }
    }

    bb32: {
        _49 = discriminant(_46);         // scope 6 at ui/inherit-env.rs:21:19: 21:30
        switchInt(move _49) -> [0: bb35, 1: bb33, otherwise: bb34]; // scope 6 at ui/inherit-env.rs:21:19: 21:30
    }

    bb33: {
        _50 = move (((_46 as Some).0: (std::string::String, std::string::String)).0: std::string::String); // scope 6 at ui/inherit-env.rs:21:10: 21:11
        _51 = move (((_46 as Some).0: (std::string::String, std::string::String)).1: std::string::String); // scope 6 at ui/inherit-env.rs:21:13: 21:14
        _56 = &_40;                      // scope 7 at ui/inherit-env.rs:22:17: 22:57
        _55 = <String as Deref>::deref(move _56) -> [return: bb36, unwind: bb54]; // scope 7 at ui/inherit-env.rs:22:17: 22:57
                                         // mir::Constant
                                         // + span: ui/inherit-env.rs:22:17: 22:57
                                         // + literal: Const { ty: for<'a> fn(&'a String) -> &'a <String as Deref>::Target {<String as Deref>::deref}, val: Value(<ZST>) }
    }

    bb34: {
        unreachable;                     // scope 6 at ui/inherit-env.rs:21:19: 21:30
    }

    bb35: {
        drop(_45) -> [return: bb50, unwind: bb57]; // scope 5 at ui/inherit-env.rs:25:5: 25:6
    }

    bb36: {
        _54 = _55;                       // scope 7 at ui/inherit-env.rs:22:17: 22:57
        _93 = const _;                   // scope 7 at ui/inherit-env.rs:22:42: 22:49
                                         // mir::Constant
                                         // + span: ui/inherit-env.rs:22:42: 22:49
                                         // + literal: Const { ty: &[&str; 2], val: Unevaluated(main, [], Some(promoted[1])) }
        _63 = _93;                       // scope 7 at ui/inherit-env.rs:22:42: 22:49
        _62 = _63;                       // scope 7 at ui/inherit-env.rs:22:42: 22:49
        _61 = move _62 as &[&str] (Pointer(Unsize)); // scope 7 at ui/inherit-env.rs:22:42: 22:49
        _70 = &_50;                      // scope 7 at ui/inherit-env.rs:22:51: 22:52
        _69 = _70;                       // scope 7 at ui/inherit-env.rs:22:51: 22:52
        _68 = core::fmt::ArgumentV1::<'_>::new_display::<String>(move _69) -> [return: bb37, unwind: bb54]; // scope 7 at ui/inherit-env.rs:22:51: 22:52
                                         // mir::Constant
                                         // + span: ui/inherit-env.rs:22:51: 22:52
                                         // + user_ty: UserType(5)
                                         // + literal: Const { ty: for<'b> fn(&'b String) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_display::<String>}, val: Value(<ZST>) }
    }

    bb37: {
        _73 = &_51;                      // scope 7 at ui/inherit-env.rs:22:54: 22:55
        _72 = _73;                       // scope 7 at ui/inherit-env.rs:22:54: 22:55
        _71 = core::fmt::ArgumentV1::<'_>::new_display::<String>(move _72) -> [return: bb38, unwind: bb54]; // scope 7 at ui/inherit-env.rs:22:54: 22:55
                                         // mir::Constant
                                         // + span: ui/inherit-env.rs:22:54: 22:55
                                         // + user_ty: UserType(6)
                                         // + literal: Const { ty: for<'b> fn(&'b String) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_display::<String>}, val: Value(<ZST>) }
    }

    bb38: {
        _67 = [move _68, move _71];      // scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
        _66 = &_67;                      // scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
        _65 = _66;                       // scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
        _64 = move _65 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
        _60 = Arguments::<'_>::new_v1(move _61, move _64) -> [return: bb39, unwind: bb54]; // scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
                                         // + user_ty: UserType(4)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb39: {
        _59 = format(move _60) -> [return: bb40, unwind: bb54]; // scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:19: 118:80
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:19: 118:38
                                         // + literal: Const { ty: for<'a> fn(Arguments<'a>) -> String {format}, val: Value(<ZST>) }
    }

    bb40: {
        _58 = move _59;                  // scope 8 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:119:9: 119:12
        _57 = &_58;                      // scope 7 at ui/inherit-env.rs:22:33: 22:56
        _53 = core::str::<impl str>::contains::<'_, &String>(move _54, move _57) -> [return: bb41, unwind: bb53]; // scope 7 at ui/inherit-env.rs:22:17: 22:57
                                         // mir::Constant
                                         // + span: ui/inherit-env.rs:22:24: 22:32
                                         // + literal: Const { ty: fn(&str, &String) -> bool {core::str::<impl str>::contains::<'_, &String>}, val: Value(<ZST>) }
    }

    bb41: {
        _52 = Not(move _53);             // scope 7 at ui/inherit-env.rs:22:9: 24:30
        drop(_58) -> [return: bb42, unwind: bb54]; // scope 7 at ui/inherit-env.rs:24:29: 24:30
    }

    bb42: {
        switchInt(move _52) -> [0: bb48, otherwise: bb43]; // scope 7 at ui/inherit-env.rs:22:9: 24:30
    }

    bb43: {
        _92 = const _;                   // scope 7 at ui/inherit-env.rs:23:17: 23:53
                                         // mir::Constant
                                         // + span: ui/inherit-env.rs:23:17: 23:53
                                         // + literal: Const { ty: &[&str; 3], val: Unevaluated(main, [], Some(promoted[0])) }
        _78 = _92;                       // scope 7 at ui/inherit-env.rs:23:17: 23:53
        _77 = _78;                       // scope 7 at ui/inherit-env.rs:23:17: 23:53
        _76 = move _77 as &[&str] (Pointer(Unsize)); // scope 7 at ui/inherit-env.rs:23:17: 23:53
        _85 = &_50;                      // scope 7 at ui/inherit-env.rs:24:17: 24:18
        _84 = _85;                       // scope 7 at ui/inherit-env.rs:24:17: 24:18
        _83 = core::fmt::ArgumentV1::<'_>::new_display::<String>(move _84) -> [return: bb44, unwind: bb54]; // scope 7 at ui/inherit-env.rs:24:17: 24:18
                                         // mir::Constant
                                         // + span: ui/inherit-env.rs:24:17: 24:18
                                         // + user_ty: UserType(8)
                                         // + literal: Const { ty: for<'b> fn(&'b String) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_display::<String>}, val: Value(<ZST>) }
    }

    bb44: {
        _88 = &_51;                      // scope 7 at ui/inherit-env.rs:24:20: 24:21
        _87 = _88;                       // scope 7 at ui/inherit-env.rs:24:20: 24:21
        _86 = core::fmt::ArgumentV1::<'_>::new_display::<String>(move _87) -> [return: bb45, unwind: bb54]; // scope 7 at ui/inherit-env.rs:24:20: 24:21
                                         // mir::Constant
                                         // + span: ui/inherit-env.rs:24:20: 24:21
                                         // + user_ty: UserType(9)
                                         // + literal: Const { ty: for<'b> fn(&'b String) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_display::<String>}, val: Value(<ZST>) }
    }

    bb45: {
        _91 = &_40;                      // scope 7 at ui/inherit-env.rs:24:23: 24:29
        _90 = _91;                       // scope 7 at ui/inherit-env.rs:24:23: 24:29
        _89 = core::fmt::ArgumentV1::<'_>::new_display::<String>(move _90) -> [return: bb46, unwind: bb54]; // scope 7 at ui/inherit-env.rs:24:23: 24:29
                                         // mir::Constant
                                         // + span: ui/inherit-env.rs:24:23: 24:29
                                         // + user_ty: UserType(10)
                                         // + literal: Const { ty: for<'b> fn(&'b String) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_display::<String>}, val: Value(<ZST>) }
    }

    bb46: {
        _82 = [move _83, move _86, move _89]; // scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/panic.rs:29:31: 29:73
        _81 = &_82;                      // scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/panic.rs:29:31: 29:73
        _80 = _81;                       // scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/panic.rs:29:31: 29:73
        _79 = move _80 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/panic.rs:29:31: 29:73
        _75 = Arguments::<'_>::new_v1(move _76, move _79) -> [return: bb47, unwind: bb54]; // scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/panic.rs:29:31: 29:73
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/panic.rs:29:31: 29:73
                                         // + user_ty: UserType(7)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb47: {
        _74 = panic_fmt(move _75) -> bb54; // scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/panic.rs:29:9: 29:74
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/panic.rs:29:9: 29:30
                                         // + literal: Const { ty: for<'a> fn(Arguments<'a>) -> ! {panic_fmt}, val: Value(<ZST>) }
    }

    bb48: {
        drop(_51) -> [return: bb49, unwind: bb55]; // scope 6 at ui/inherit-env.rs:25:5: 25:6
    }

    bb49: {
        drop(_50) -> [return: bb31, unwind: bb56]; // scope 6 at ui/inherit-env.rs:25:5: 25:6
    }

    bb50: {
        drop(_40) -> [return: bb51, unwind: bb67]; // scope 4 at ui/inherit-env.rs:26:1: 26:2
    }

    bb51: {
        drop((_33.2: std::vec::Vec<u8>)) -> bb64; // scope 3 at ui/inherit-env.rs:26:1: 26:2
    }

    bb52: {
        return;                          // scope 0 at ui/inherit-env.rs:26:2: 26:2
    }

    bb53 (cleanup): {
        drop(_58) -> bb54;               // scope 7 at ui/inherit-env.rs:24:29: 24:30
    }

    bb54 (cleanup): {
        drop(_51) -> bb55;               // scope 6 at ui/inherit-env.rs:25:5: 25:6
    }

    bb55 (cleanup): {
        drop(_50) -> bb56;               // scope 6 at ui/inherit-env.rs:25:5: 25:6
    }

    bb56 (cleanup): {
        drop(_45) -> bb57;               // scope 5 at ui/inherit-env.rs:25:5: 25:6
    }

    bb57 (cleanup): {
        drop(_40) -> bb67;               // scope 4 at ui/inherit-env.rs:26:1: 26:2
    }

    bb58 (cleanup): {
        drop(_38) -> bb63;               // scope 3 at ui/inherit-env.rs:18:65: 18:66
    }

    bb59 (cleanup): {
        drop(_15) -> bb60;               // scope 1 at ui/inherit-env.rs:13:9: 13:10
    }

    bb60 (cleanup): {
        drop(_14) -> bb61;               // scope 1 at ui/inherit-env.rs:13:9: 13:10
    }

    bb61 (cleanup): {
        drop(_9) -> bb63;                // scope 0 at ui/inherit-env.rs:13:9: 13:10
    }

    bb62 (cleanup): {
        drop(_5) -> bb63;                // scope 0 at ui/inherit-env.rs:10:64: 10:65
    }

    bb63 (cleanup): {
        resume;                          // scope 0 at ui/inherit-env.rs:9:1: 26:2
    }

    bb64: {
        _95 = const false;               // scope 3 at ui/inherit-env.rs:26:1: 26:2
        goto -> bb52;                    // scope 0 at ui/inherit-env.rs:26:2: 26:2
    }

    bb65 (cleanup): {
        drop((_33.2: std::vec::Vec<u8>)) -> bb63; // scope 3 at ui/inherit-env.rs:26:1: 26:2
    }

    bb66 (cleanup): {
        drop((_33.1: std::vec::Vec<u8>)) -> bb65; // scope 3 at ui/inherit-env.rs:26:1: 26:2
    }

    bb67 (cleanup): {
        switchInt(_95) -> [0: bb65, otherwise: bb66]; // scope 3 at ui/inherit-env.rs:26:1: 26:2
    }
}

promoted[0] in main: &[&str; 3] = {
    let mut _0: &[&str; 3];              // return place in scope 0 at ui/inherit-env.rs:23:17: 23:53
    let mut _1: [&str; 3];               // in scope 0 at ui/inherit-env.rs:23:17: 23:53

    bb0: {
        _1 = [const "output doesn't contain `", const "=", const "`\n"]; // scope 0 at ui/inherit-env.rs:23:17: 23:53
                                         // mir::Constant
                                         // + span: ui/inherit-env.rs:23:17: 23:53
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
                                         // mir::Constant
                                         // + span: ui/inherit-env.rs:23:17: 23:53
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
                                         // mir::Constant
                                         // + span: ui/inherit-env.rs:23:17: 23:53
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at ui/inherit-env.rs:23:17: 23:53
        return;                          // scope 0 at ui/inherit-env.rs:23:17: 23:53
    }
}

promoted[1] in main: &[&str; 2] = {
    let mut _0: &[&str; 2];              // return place in scope 0 at ui/inherit-env.rs:22:42: 22:49
    let mut _1: [&str; 2];               // in scope 0 at ui/inherit-env.rs:22:42: 22:49

    bb0: {
        _1 = [const "", const "="];      // scope 0 at ui/inherit-env.rs:22:42: 22:49
                                         // mir::Constant
                                         // + span: ui/inherit-env.rs:22:42: 22:49
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
                                         // mir::Constant
                                         // + span: ui/inherit-env.rs:22:42: 22:49
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at ui/inherit-env.rs:22:42: 22:49
        return;                          // scope 0 at ui/inherit-env.rs:22:42: 22:49
    }
}

promoted[2] in main: &[&str; 3] = {
    let mut _0: &[&str; 3];              // return place in scope 0 at ui/inherit-env.rs:12:22: 12:29
    let mut _1: [&str; 3];               // in scope 0 at ui/inherit-env.rs:12:22: 12:29

    bb0: {
        _1 = [const "", const "=", const "\n"]; // scope 0 at ui/inherit-env.rs:12:22: 12:29
                                         // mir::Constant
                                         // + span: ui/inherit-env.rs:12:22: 12:29
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
                                         // mir::Constant
                                         // + span: ui/inherit-env.rs:12:22: 12:29
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
                                         // mir::Constant
                                         // + span: ui/inherit-env.rs:12:22: 12:29
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at ui/inherit-env.rs:12:22: 12:29
        return;                          // scope 0 at ui/inherit-env.rs:12:22: 12:29
    }
}

fn main::{closure#0}(_1: [closure@ui/inherit-env.rs:10:31: 10:34], _2: String) -> bool {
    debug s => _2;                       // in scope 0 at ui/inherit-env.rs:10:32: 10:33
    let mut _0: bool;                    // return place in scope 0 at ui/inherit-env.rs:10:35: 10:35
    let mut _3: &std::string::String;    // in scope 0 at ui/inherit-env.rs:10:35: 10:36
    let mut _4: &&str;                   // in scope 0 at ui/inherit-env.rs:10:40: 10:47
    let mut _5: &&str;                   // in scope 0 at ui/inherit-env.rs:10:40: 10:47

    bb0: {
        _3 = &_2;                        // scope 0 at ui/inherit-env.rs:10:35: 10:36
        _5 = const _;                    // scope 0 at ui/inherit-env.rs:10:40: 10:47
                                         // mir::Constant
                                         // + span: ui/inherit-env.rs:10:40: 10:47
                                         // + literal: Const { ty: &&str, val: Unevaluated(main::{closure#0}, [<closure_kind>, <closure_signature>, <upvars>], Some(promoted[0])) }
        _4 = _5;                         // scope 0 at ui/inherit-env.rs:10:40: 10:47
        _0 = <String as PartialEq<&str>>::eq(move _3, move _4) -> [return: bb1, unwind: bb3]; // scope 0 at ui/inherit-env.rs:10:35: 10:47
                                         // mir::Constant
                                         // + span: ui/inherit-env.rs:10:35: 10:47
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a String, &'b &str) -> bool {<String as PartialEq<&str>>::eq}, val: Value(<ZST>) }
    }

    bb1: {
        drop(_2) -> bb2;                 // scope 0 at ui/inherit-env.rs:10:46: 10:47
    }

    bb2: {
        return;                          // scope 0 at ui/inherit-env.rs:10:47: 10:47
    }

    bb3 (cleanup): {
        drop(_2) -> bb4;                 // scope 0 at ui/inherit-env.rs:10:46: 10:47
    }

    bb4 (cleanup): {
        resume;                          // scope 0 at ui/inherit-env.rs:10:31: 10:47
    }
}

promoted[0] in main::{closure#0}: &&str = {
    let mut _0: &&str;                   // return place in scope 0 at ui/inherit-env.rs:10:40: 10:47
    let mut _1: &str;                    // in scope 0 at ui/inherit-env.rs:10:40: 10:47

    bb0: {
        _1 = const "print";              // scope 0 at ui/inherit-env.rs:10:40: 10:47
                                         // mir::Constant
                                         // + span: ui/inherit-env.rs:10:40: 10:47
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at ui/inherit-env.rs:10:40: 10:47
        return;                          // scope 0 at ui/inherit-env.rs:10:40: 10:47
    }
}
