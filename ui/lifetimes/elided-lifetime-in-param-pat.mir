// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
fn f(_1: S<&i8>) -> () {
    let mut _0: ();                      // return place in scope 0 at ui/lifetimes/elided-lifetime-in-param-pat.rs:7:31: 7:31

    bb0: {
        return;                          // scope 0 at ui/lifetimes/elided-lifetime-in-param-pat.rs:7:33: 7:33
    }
}

fn main() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/lifetimes/elided-lifetime-in-param-pat.rs:9:11: 9:11
    let _1: ();                          // in scope 0 at ui/lifetimes/elided-lifetime-in-param-pat.rs:10:5: 10:24
    let mut _2: S<&i8>;                  // in scope 0 at ui/lifetimes/elided-lifetime-in-param-pat.rs:10:7: 10:23
    let mut _3: &i8;                     // in scope 0 at ui/lifetimes/elided-lifetime-in-param-pat.rs:10:15: 10:21
    let _4: &i8;                         // in scope 0 at ui/lifetimes/elided-lifetime-in-param-pat.rs:10:15: 10:21
    let mut _5: &i8;                     // in scope 0 at ui/lifetimes/elided-lifetime-in-param-pat.rs:10:15: 10:21

    bb0: {
        _5 = const _;                    // scope 0 at ui/lifetimes/elided-lifetime-in-param-pat.rs:10:15: 10:21
                                         // mir::Constant
                                         // + span: ui/lifetimes/elided-lifetime-in-param-pat.rs:10:15: 10:21
                                         // + literal: Const { ty: &i8, val: Unevaluated(main, [], Some(promoted[0])) }
        _4 = _5;                         // scope 0 at ui/lifetimes/elided-lifetime-in-param-pat.rs:10:15: 10:21
        _3 = _4;                         // scope 0 at ui/lifetimes/elided-lifetime-in-param-pat.rs:10:15: 10:21
        _2 = S::<&i8> { _t: move _3 };   // scope 0 at ui/lifetimes/elided-lifetime-in-param-pat.rs:10:7: 10:23
        _1 = f(move _2) -> bb1;          // scope 0 at ui/lifetimes/elided-lifetime-in-param-pat.rs:10:5: 10:24
                                         // mir::Constant
                                         // + span: ui/lifetimes/elided-lifetime-in-param-pat.rs:10:5: 10:6
                                         // + literal: Const { ty: for<'a> fn(S<&'a i8>) {f}, val: Value(<ZST>) }
    }

    bb1: {
        return;                          // scope 0 at ui/lifetimes/elided-lifetime-in-param-pat.rs:11:2: 11:2
    }
}

promoted[0] in main: &i8 = {
    let mut _0: &i8;                     // return place in scope 0 at ui/lifetimes/elided-lifetime-in-param-pat.rs:10:15: 10:21
    let mut _1: i8;                      // in scope 0 at ui/lifetimes/elided-lifetime-in-param-pat.rs:10:16: 10:21

    bb0: {
        _1 = const 42_i8;                // scope 0 at ui/lifetimes/elided-lifetime-in-param-pat.rs:10:16: 10:21
        _0 = &_1;                        // scope 0 at ui/lifetimes/elided-lifetime-in-param-pat.rs:10:15: 10:21
        return;                          // scope 0 at ui/lifetimes/elided-lifetime-in-param-pat.rs:10:15: 10:21
    }
}
