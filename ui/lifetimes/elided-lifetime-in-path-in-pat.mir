// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
fn foo(_1: Foo<'_>) -> () {
    let mut _0: ();                      // return place in scope 0 at ui/lifetimes/elided-lifetime-in-path-in-pat.rs:9:32: 9:32
    let _2: &();                         // in scope 0 at ui/lifetimes/elided-lifetime-in-path-in-pat.rs:9:18: 9:19
    scope 1 {
        debug x => _2;                   // in scope 1 at ui/lifetimes/elided-lifetime-in-path-in-pat.rs:9:18: 9:19
    }

    bb0: {
        _2 = (_1.0: &());                // scope 0 at ui/lifetimes/elided-lifetime-in-path-in-pat.rs:9:18: 9:19
        return;                          // scope 0 at ui/lifetimes/elided-lifetime-in-path-in-pat.rs:11:2: 11:2
    }
}

fn main() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/lifetimes/elided-lifetime-in-path-in-pat.rs:13:11: 13:11

    bb0: {
        return;                          // scope 0 at ui/lifetimes/elided-lifetime-in-path-in-pat.rs:13:13: 13:13
    }
}
