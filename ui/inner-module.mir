// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
fn inner2::hello() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/inner-module.rs:5:24: 5:24
    let _1: ();                          // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:62
    let mut _2: std::fmt::Arguments<'_>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _3: &[&str];                 // in scope 0 at ui/inner-module.rs:5:35: 5:57
    let mut _4: &[&str; 1];              // in scope 0 at ui/inner-module.rs:5:35: 5:57
    let _5: &[&str; 1];                  // in scope 0 at ui/inner-module.rs:5:35: 5:57
    let mut _6: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _7: &[core::fmt::ArgumentV1<'_>; 0]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let _8: &[core::fmt::ArgumentV1<'_>; 0]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _9: &[core::fmt::ArgumentV1<'_>; 0]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _10: &[&str; 1];             // in scope 0 at ui/inner-module.rs:5:35: 5:57

    bb0: {
        _10 = const _;                   // scope 0 at ui/inner-module.rs:5:35: 5:57
                                         // mir::Constant
                                         // + span: ui/inner-module.rs:5:35: 5:57
                                         // + literal: Const { ty: &[&str; 1], val: Unevaluated(inner2::hello, [], Some(promoted[1])) }
        _5 = _10;                        // scope 0 at ui/inner-module.rs:5:35: 5:57
        _4 = _5;                         // scope 0 at ui/inner-module.rs:5:35: 5:57
        _3 = move _4 as &[&str] (Pointer(Unsize)); // scope 0 at ui/inner-module.rs:5:35: 5:57
        _9 = const _;                    // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // + literal: Const { ty: &[core::fmt::ArgumentV1<'_>; 0], val: Unevaluated(inner2::hello, [], Some(promoted[0])) }
        _8 = _9;                         // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _7 = _8;                         // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _6 = move _7 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _2 = Arguments::<'_>::new_v1(move _3, move _6) -> bb1; // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb1: {
        _1 = _print(move _2) -> bb2;     // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:62
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:27
                                         // + literal: Const { ty: for<'a> fn(Arguments<'a>) {_print}, val: Value(<ZST>) }
    }

    bb2: {
        return;                          // scope 0 at ui/inner-module.rs:5:61: 5:61
    }
}

promoted[0] in inner2::hello: &[core::fmt::ArgumentV1<'_>; 0] = {
    let mut _0: &[core::fmt::ArgumentV1<'_>; 0]; // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _1: [core::fmt::ArgumentV1<'_>; 0]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61

    bb0: {
        _1 = [];                         // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    }
}

promoted[1] in inner2::hello: &[&str; 1] = {
    let mut _0: &[&str; 1];              // return place in scope 0 at ui/inner-module.rs:5:35: 5:57
    let mut _1: [&str; 1];               // in scope 0 at ui/inner-module.rs:5:35: 5:57

    bb0: {
        _1 = [const "hello, modular world\n"]; // scope 0 at ui/inner-module.rs:5:35: 5:57
                                         // mir::Constant
                                         // + span: ui/inner-module.rs:5:35: 5:57
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at ui/inner-module.rs:5:35: 5:57
        return;                          // scope 0 at ui/inner-module.rs:5:35: 5:57
    }
}

fn inner::hello() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/inner-module.rs:7:20: 7:20
    let _1: ();                          // in scope 0 at ui/inner-module.rs:7:22: 7:37

    bb0: {
        _1 = inner2::hello() -> bb1;     // scope 0 at ui/inner-module.rs:7:22: 7:37
                                         // mir::Constant
                                         // + span: ui/inner-module.rs:7:22: 7:35
                                         // + literal: Const { ty: fn() {inner2::hello}, val: Value(<ZST>) }
    }

    bb1: {
        return;                          // scope 0 at ui/inner-module.rs:7:40: 7:40
    }
}

fn main() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/inner-module.rs:10:15: 10:15
    let _1: ();                          // in scope 0 at ui/inner-module.rs:10:17: 10:31
    let _2: ();                          // in scope 0 at ui/inner-module.rs:10:33: 10:55

    bb0: {
        _1 = inner::hello() -> bb1;      // scope 0 at ui/inner-module.rs:10:17: 10:31
                                         // mir::Constant
                                         // + span: ui/inner-module.rs:10:17: 10:29
                                         // + literal: Const { ty: fn() {inner::hello}, val: Value(<ZST>) }
    }

    bb1: {
        _2 = inner2::hello() -> bb2;     // scope 0 at ui/inner-module.rs:10:33: 10:55
                                         // mir::Constant
                                         // + span: ui/inner-module.rs:10:33: 10:53
                                         // + literal: Const { ty: fn() {inner2::hello}, val: Value(<ZST>) }
    }

    bb2: {
        return;                          // scope 0 at ui/inner-module.rs:10:58: 10:58
    }
}
