// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
fn start(_1: isize, _2: *const *const u8) -> isize {
    debug argc => _1;                    // in scope 0 at ui/runtime/running-with-no-runtime.rs:15:10: 15:14
    debug argv => _2;                    // in scope 0 at ui/runtime/running-with-no-runtime.rs:15:23: 15:27
    let mut _0: isize;                   // return place in scope 0 at ui/runtime/running-with-no-runtime.rs:15:50: 15:55
    let mut _3: bool;                    // in scope 0 at ui/runtime/running-with-no-runtime.rs:16:8: 16:16
    let mut _4: isize;                   // in scope 0 at ui/runtime/running-with-no-runtime.rs:16:8: 16:12
    let mut _5: char;                    // in scope 0 at ui/runtime/running-with-no-runtime.rs:18:19: 18:43
    let mut _6: u8;                      // in scope 0 at ui/runtime/running-with-no-runtime.rs:18:19: 18:35
    let mut _7: *const *const u8;        // in scope 0 at ui/runtime/running-with-no-runtime.rs:18:21: 18:35
    let mut _8: *const *const u8;        // in scope 0 at ui/runtime/running-with-no-runtime.rs:18:21: 18:25
    let _9: ();                          // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:62
    let mut _10: std::fmt::Arguments<'_>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _11: &[&str];                // in scope 0 at ui/runtime/running-with-no-runtime.rs:20:33: 20:38
    let mut _12: &[&str; 1];             // in scope 0 at ui/runtime/running-with-no-runtime.rs:20:33: 20:38
    let _13: &[&str; 1];                 // in scope 0 at ui/runtime/running-with-no-runtime.rs:20:33: 20:38
    let mut _14: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _15: &[core::fmt::ArgumentV1<'_>; 0]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let _16: &[core::fmt::ArgumentV1<'_>; 0]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _17: bool;                   // in scope 0 at ui/runtime/running-with-no-runtime.rs:21:24: 21:67
    let mut _18: bool;                   // in scope 0 at ui/runtime/running-with-no-runtime.rs:21:32: 21:66
    let mut _19: &std::result::Result<(), std::boxed::Box<dyn std::any::Any + std::marker::Send>>; // in scope 0 at ui/runtime/running-with-no-runtime.rs:21:32: 21:66
    let _20: std::result::Result<(), std::boxed::Box<dyn std::any::Any + std::marker::Send>>; // in scope 0 at ui/runtime/running-with-no-runtime.rs:21:32: 21:58
    let mut _21: [closure@ui/runtime/running-with-no-runtime.rs:21:52: 21:54]; // in scope 0 at ui/runtime/running-with-no-runtime.rs:21:52: 21:57
    let mut _22: !;                      // in scope 0 at ui/runtime/running-with-no-runtime.rs:21:24: 21:67
    let mut _23: bool;                   // in scope 0 at ui/runtime/running-with-no-runtime.rs:22:24: 22:74
    let mut _24: bool;                   // in scope 0 at ui/runtime/running-with-no-runtime.rs:22:32: 22:73
    let mut _25: &std::result::Result<(), std::boxed::Box<dyn std::any::Any + std::marker::Send>>; // in scope 0 at ui/runtime/running-with-no-runtime.rs:22:32: 22:73
    let _26: std::result::Result<(), std::boxed::Box<dyn std::any::Any + std::marker::Send>>; // in scope 0 at ui/runtime/running-with-no-runtime.rs:22:32: 22:64
    let mut _27: [closure@ui/runtime/running-with-no-runtime.rs:22:52: 22:54]; // in scope 0 at ui/runtime/running-with-no-runtime.rs:22:52: 22:63
    let mut _28: !;                      // in scope 0 at ui/runtime/running-with-no-runtime.rs:22:24: 22:74
    let mut _29: bool;                   // in scope 0 at ui/runtime/running-with-no-runtime.rs:23:24: 23:70
    let mut _30: bool;                   // in scope 0 at ui/runtime/running-with-no-runtime.rs:23:32: 23:69
    let mut _31: &std::result::Result<std::process::Child, std::io::Error>; // in scope 0 at ui/runtime/running-with-no-runtime.rs:23:32: 23:69
    let _32: std::result::Result<std::process::Child, std::io::Error>; // in scope 0 at ui/runtime/running-with-no-runtime.rs:23:32: 23:60
    let mut _33: &mut std::process::Command; // in scope 0 at ui/runtime/running-with-no-runtime.rs:23:32: 23:60
    let mut _34: std::process::Command;  // in scope 0 at ui/runtime/running-with-no-runtime.rs:23:32: 23:52
    let mut _35: !;                      // in scope 0 at ui/runtime/running-with-no-runtime.rs:23:24: 23:70
    let mut _36: !;                      // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/panic.rs:19:9: 19:50
    let _37: std::vec::Vec<std::vec::Vec<u8>>; // in scope 0 at ui/runtime/running-with-no-runtime.rs:30:9: 30:13
    let mut _38: std::iter::Map<std::ops::Range<usize>, [closure@ui/runtime/running-with-no-runtime.rs:31:32: 31:35]>; // in scope 0 at ui/runtime/running-with-no-runtime.rs:31:9: 34:11
    let mut _39: std::ops::Range<usize>; // in scope 0 at ui/runtime/running-with-no-runtime.rs:31:9: 31:27
    let mut _40: usize;                  // in scope 0 at ui/runtime/running-with-no-runtime.rs:31:13: 31:26
    let mut _41: isize;                  // in scope 0 at ui/runtime/running-with-no-runtime.rs:31:13: 31:17
    let mut _42: [closure@ui/runtime/running-with-no-runtime.rs:31:32: 31:35]; // in scope 0 at ui/runtime/running-with-no-runtime.rs:31:32: 34:10
    let mut _43: &*const *const u8;      // in scope 0 at ui/runtime/running-with-no-runtime.rs:31:32: 34:10
    let mut _45: std::result::Result<std::string::String, std::string::FromUtf8Error>; // in scope 0 at ui/runtime/running-with-no-runtime.rs:36:14: 36:49
    let mut _46: std::vec::Vec<u8>;      // in scope 0 at ui/runtime/running-with-no-runtime.rs:36:32: 36:48
    let mut _47: &[u8];                  // in scope 0 at ui/runtime/running-with-no-runtime.rs:36:32: 36:48
    let _48: &[u8];                      // in scope 0 at ui/runtime/running-with-no-runtime.rs:36:32: 36:48
    let mut _49: &std::vec::Vec<u8>;     // in scope 0 at ui/runtime/running-with-no-runtime.rs:36:32: 36:48
    let _50: &std::vec::Vec<u8>;         // in scope 0 at ui/runtime/running-with-no-runtime.rs:36:32: 36:39
    let mut _51: &std::vec::Vec<std::vec::Vec<u8>>; // in scope 0 at ui/runtime/running-with-no-runtime.rs:36:32: 36:36
    let _52: ();                         // in scope 0 at ui/runtime/running-with-no-runtime.rs:38:5: 38:55
    let mut _53: std::process::Output;   // in scope 0 at ui/runtime/running-with-no-runtime.rs:38:10: 38:54
    let mut _54: std::result::Result<std::process::Output, std::io::Error>; // in scope 0 at ui/runtime/running-with-no-runtime.rs:38:10: 38:45
    let mut _55: &mut std::process::Command; // in scope 0 at ui/runtime/running-with-no-runtime.rs:38:10: 38:45
    let mut _56: &mut std::process::Command; // in scope 0 at ui/runtime/running-with-no-runtime.rs:38:10: 38:36
    let mut _57: &mut std::process::Command; // in scope 0 at ui/runtime/running-with-no-runtime.rs:38:10: 38:36
    let mut _58: std::process::Command;  // in scope 0 at ui/runtime/running-with-no-runtime.rs:38:10: 38:27
    let mut _59: &std::string::String;   // in scope 0 at ui/runtime/running-with-no-runtime.rs:38:23: 38:26
    let _60: ();                         // in scope 0 at ui/runtime/running-with-no-runtime.rs:39:5: 39:55
    let mut _61: std::process::Output;   // in scope 0 at ui/runtime/running-with-no-runtime.rs:39:10: 39:54
    let mut _62: std::result::Result<std::process::Output, std::io::Error>; // in scope 0 at ui/runtime/running-with-no-runtime.rs:39:10: 39:45
    let mut _63: &mut std::process::Command; // in scope 0 at ui/runtime/running-with-no-runtime.rs:39:10: 39:45
    let mut _64: &mut std::process::Command; // in scope 0 at ui/runtime/running-with-no-runtime.rs:39:10: 39:36
    let mut _65: &mut std::process::Command; // in scope 0 at ui/runtime/running-with-no-runtime.rs:39:10: 39:36
    let mut _66: std::process::Command;  // in scope 0 at ui/runtime/running-with-no-runtime.rs:39:10: 39:27
    let mut _67: &std::string::String;   // in scope 0 at ui/runtime/running-with-no-runtime.rs:39:23: 39:26
    let _68: ();                         // in scope 0 at ui/runtime/running-with-no-runtime.rs:40:5: 40:55
    let mut _69: std::process::Output;   // in scope 0 at ui/runtime/running-with-no-runtime.rs:40:10: 40:54
    let mut _70: std::result::Result<std::process::Output, std::io::Error>; // in scope 0 at ui/runtime/running-with-no-runtime.rs:40:10: 40:45
    let mut _71: &mut std::process::Command; // in scope 0 at ui/runtime/running-with-no-runtime.rs:40:10: 40:45
    let mut _72: &mut std::process::Command; // in scope 0 at ui/runtime/running-with-no-runtime.rs:40:10: 40:36
    let mut _73: &mut std::process::Command; // in scope 0 at ui/runtime/running-with-no-runtime.rs:40:10: 40:36
    let mut _74: std::process::Command;  // in scope 0 at ui/runtime/running-with-no-runtime.rs:40:10: 40:27
    let mut _75: &std::string::String;   // in scope 0 at ui/runtime/running-with-no-runtime.rs:40:23: 40:26
    let _76: ();                         // in scope 0 at ui/runtime/running-with-no-runtime.rs:41:5: 41:55
    let mut _77: std::process::Output;   // in scope 0 at ui/runtime/running-with-no-runtime.rs:41:10: 41:54
    let mut _78: std::result::Result<std::process::Output, std::io::Error>; // in scope 0 at ui/runtime/running-with-no-runtime.rs:41:10: 41:45
    let mut _79: &mut std::process::Command; // in scope 0 at ui/runtime/running-with-no-runtime.rs:41:10: 41:45
    let mut _80: &mut std::process::Command; // in scope 0 at ui/runtime/running-with-no-runtime.rs:41:10: 41:36
    let mut _81: &mut std::process::Command; // in scope 0 at ui/runtime/running-with-no-runtime.rs:41:10: 41:36
    let mut _82: std::process::Command;  // in scope 0 at ui/runtime/running-with-no-runtime.rs:41:10: 41:27
    let mut _83: &std::string::String;   // in scope 0 at ui/runtime/running-with-no-runtime.rs:41:23: 41:26
    let _84: ();                         // in scope 0 at ui/runtime/running-with-no-runtime.rs:42:5: 42:55
    let mut _85: std::process::Output;   // in scope 0 at ui/runtime/running-with-no-runtime.rs:42:10: 42:54
    let mut _86: std::result::Result<std::process::Output, std::io::Error>; // in scope 0 at ui/runtime/running-with-no-runtime.rs:42:10: 42:45
    let mut _87: &mut std::process::Command; // in scope 0 at ui/runtime/running-with-no-runtime.rs:42:10: 42:45
    let mut _88: &mut std::process::Command; // in scope 0 at ui/runtime/running-with-no-runtime.rs:42:10: 42:36
    let mut _89: &mut std::process::Command; // in scope 0 at ui/runtime/running-with-no-runtime.rs:42:10: 42:36
    let mut _90: std::process::Command;  // in scope 0 at ui/runtime/running-with-no-runtime.rs:42:10: 42:27
    let mut _91: &std::string::String;   // in scope 0 at ui/runtime/running-with-no-runtime.rs:42:23: 42:26
    let mut _94: *const u8;              // in scope 0 at ui/runtime/running-with-no-runtime.rs:18:21: 18:35
    scope 1 {
        let mut _92: &[core::fmt::ArgumentV1<'_>; 0]; // in scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        let mut _93: &[&str; 1];         // in scope 1 at ui/runtime/running-with-no-runtime.rs:20:33: 20:38
    }
    scope 2 {
        debug args => _37;               // in scope 2 at ui/runtime/running-with-no-runtime.rs:30:9: 30:13
        let _44: std::string::String;    // in scope 2 at ui/runtime/running-with-no-runtime.rs:36:9: 36:11
        scope 4 {
            debug me => _44;             // in scope 4 at ui/runtime/running-with-no-runtime.rs:36:9: 36:11
        }
    }
    scope 3 {
    }

    bb0: {
        _4 = _1;                         // scope 0 at ui/runtime/running-with-no-runtime.rs:16:8: 16:12
        _3 = Gt(move _4, const 1_isize); // scope 0 at ui/runtime/running-with-no-runtime.rs:16:8: 16:16
        switchInt(move _3) -> [0: bb24, otherwise: bb1]; // scope 0 at ui/runtime/running-with-no-runtime.rs:16:8: 16:16
    }

    bb1: {
        _8 = _2;                         // scope 1 at ui/runtime/running-with-no-runtime.rs:18:21: 18:25
        _7 = ptr::const_ptr::<impl *const *const u8>::offset(move _8, const 1_isize) -> bb2; // scope 1 at ui/runtime/running-with-no-runtime.rs:18:21: 18:35
                                         // mir::Constant
                                         // + span: ui/runtime/running-with-no-runtime.rs:18:26: 18:32
                                         // + literal: Const { ty: unsafe fn(*const *const u8, isize) -> *const *const u8 {ptr::const_ptr::<impl *const *const u8>::offset}, val: Value(<ZST>) }
    }

    bb2: {
        _94 = deref_copy (*_7);          // scope 1 at ui/runtime/running-with-no-runtime.rs:18:19: 18:35
        _6 = (*_94);                     // scope 1 at ui/runtime/running-with-no-runtime.rs:18:19: 18:35
        _5 = move _6 as char (IntToInt); // scope 1 at ui/runtime/running-with-no-runtime.rs:18:19: 18:43
        switchInt(_5) -> [49: bb23, 50: bb4, 51: bb6, 52: bb11, 53: bb16, otherwise: bb3]; // scope 1 at ui/runtime/running-with-no-runtime.rs:18:13: 18:43
    }

    bb3: {
        _36 = begin_panic::<&str>(const "explicit panic"); // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/panic.rs:19:9: 19:50
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/panic.rs:19:9: 19:32
                                         // + literal: Const { ty: fn(&str) -> ! {begin_panic::<&str>}, val: Value(<ZST>) }
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/panic.rs:19:33: 19:49
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
    }

    bb4: {
        _93 = const _;                   // scope 1 at ui/runtime/running-with-no-runtime.rs:20:33: 20:38
                                         // mir::Constant
                                         // + span: ui/runtime/running-with-no-runtime.rs:20:33: 20:38
                                         // + literal: Const { ty: &[&str; 1], val: Unevaluated(start, [], Some(promoted[1])) }
        _13 = _93;                       // scope 1 at ui/runtime/running-with-no-runtime.rs:20:33: 20:38
        _12 = _13;                       // scope 1 at ui/runtime/running-with-no-runtime.rs:20:33: 20:38
        _11 = move _12 as &[&str] (Pointer(Unsize)); // scope 1 at ui/runtime/running-with-no-runtime.rs:20:33: 20:38
        _92 = const _;                   // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // + literal: Const { ty: &[core::fmt::ArgumentV1<'_>; 0], val: Unevaluated(start, [], Some(promoted[0])) }
        _16 = _92;                       // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _15 = _16;                       // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _14 = move _15 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _10 = Arguments::<'_>::new_v1(move _11, move _14) -> bb5; // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb5: {
        _9 = _print(move _10) -> bb23;   // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:62
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:27
                                         // + literal: Const { ty: for<'a> fn(Arguments<'a>) {_print}, val: Value(<ZST>) }
    }

    bb6: {
        _20 = catch_unwind::<[closure@ui/runtime/running-with-no-runtime.rs:21:52: 21:54], ()>(move _21) -> bb7; // scope 1 at ui/runtime/running-with-no-runtime.rs:21:32: 21:58
                                         // mir::Constant
                                         // + span: ui/runtime/running-with-no-runtime.rs:21:32: 21:51
                                         // + literal: Const { ty: fn([closure@ui/runtime/running-with-no-runtime.rs:21:52: 21:54]) -> Result<(), Box<(dyn Any + Send + 'static)>> {catch_unwind::<[closure@ui/runtime/running-with-no-runtime.rs:21:52: 21:54], ()>}, val: Value(<ZST>) }
    }

    bb7: {
        _19 = &_20;                      // scope 1 at ui/runtime/running-with-no-runtime.rs:21:32: 21:66
        _18 = Result::<(), Box<dyn Any + Send>>::is_ok(move _19) -> [return: bb8, unwind: bb74]; // scope 1 at ui/runtime/running-with-no-runtime.rs:21:32: 21:66
                                         // mir::Constant
                                         // + span: ui/runtime/running-with-no-runtime.rs:21:59: 21:64
                                         // + literal: Const { ty: for<'a> fn(&'a Result<(), Box<dyn Any + Send>>) -> bool {Result::<(), Box<dyn Any + Send>>::is_ok}, val: Value(<ZST>) }
    }

    bb8: {
        _17 = Not(move _18);             // scope 1 at ui/runtime/running-with-no-runtime.rs:21:24: 21:67
        drop(_20) -> bb9;                // scope 1 at ui/runtime/running-with-no-runtime.rs:21:66: 21:67
    }

    bb9: {
        switchInt(move _17) -> [0: bb23, otherwise: bb10]; // scope 1 at ui/runtime/running-with-no-runtime.rs:21:24: 21:67
    }

    bb10: {
        _22 = core::panicking::panic(const "assertion failed: panic::catch_unwind(|| {}).is_ok()"); // scope 1 at ui/runtime/running-with-no-runtime.rs:21:24: 21:67
                                         // mir::Constant
                                         // + span: ui/runtime/running-with-no-runtime.rs:21:24: 21:67
                                         // + literal: Const { ty: fn(&'static str) -> ! {core::panicking::panic}, val: Value(<ZST>) }
                                         // mir::Constant
                                         // + span: no-location
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
    }

    bb11: {
        _26 = catch_unwind::<[closure@ui/runtime/running-with-no-runtime.rs:22:52: 22:54], ()>(move _27) -> bb12; // scope 1 at ui/runtime/running-with-no-runtime.rs:22:32: 22:64
                                         // mir::Constant
                                         // + span: ui/runtime/running-with-no-runtime.rs:22:32: 22:51
                                         // + literal: Const { ty: fn([closure@ui/runtime/running-with-no-runtime.rs:22:52: 22:54]) -> Result<(), Box<(dyn Any + Send + 'static)>> {catch_unwind::<[closure@ui/runtime/running-with-no-runtime.rs:22:52: 22:54], ()>}, val: Value(<ZST>) }
    }

    bb12: {
        _25 = &_26;                      // scope 1 at ui/runtime/running-with-no-runtime.rs:22:32: 22:73
        _24 = Result::<(), Box<dyn Any + Send>>::is_err(move _25) -> [return: bb13, unwind: bb73]; // scope 1 at ui/runtime/running-with-no-runtime.rs:22:32: 22:73
                                         // mir::Constant
                                         // + span: ui/runtime/running-with-no-runtime.rs:22:65: 22:71
                                         // + literal: Const { ty: for<'a> fn(&'a Result<(), Box<dyn Any + Send>>) -> bool {Result::<(), Box<dyn Any + Send>>::is_err}, val: Value(<ZST>) }
    }

    bb13: {
        _23 = Not(move _24);             // scope 1 at ui/runtime/running-with-no-runtime.rs:22:24: 22:74
        drop(_26) -> bb14;               // scope 1 at ui/runtime/running-with-no-runtime.rs:22:73: 22:74
    }

    bb14: {
        switchInt(move _23) -> [0: bb23, otherwise: bb15]; // scope 1 at ui/runtime/running-with-no-runtime.rs:22:24: 22:74
    }

    bb15: {
        _28 = core::panicking::panic(const "assertion failed: panic::catch_unwind(|| panic!()).is_err()"); // scope 1 at ui/runtime/running-with-no-runtime.rs:22:24: 22:74
                                         // mir::Constant
                                         // + span: ui/runtime/running-with-no-runtime.rs:22:24: 22:74
                                         // + literal: Const { ty: fn(&'static str) -> ! {core::panicking::panic}, val: Value(<ZST>) }
                                         // mir::Constant
                                         // + span: no-location
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
    }

    bb16: {
        _34 = Command::new::<&str>(const "test") -> bb17; // scope 1 at ui/runtime/running-with-no-runtime.rs:23:32: 23:52
                                         // mir::Constant
                                         // + span: ui/runtime/running-with-no-runtime.rs:23:32: 23:44
                                         // + user_ty: UserType(1)
                                         // + literal: Const { ty: fn(&str) -> Command {Command::new::<&str>}, val: Value(<ZST>) }
                                         // mir::Constant
                                         // + span: ui/runtime/running-with-no-runtime.rs:23:45: 23:51
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
    }

    bb17: {
        _33 = &mut _34;                  // scope 1 at ui/runtime/running-with-no-runtime.rs:23:32: 23:60
        _32 = Command::spawn(move _33) -> [return: bb18, unwind: bb72]; // scope 1 at ui/runtime/running-with-no-runtime.rs:23:32: 23:60
                                         // mir::Constant
                                         // + span: ui/runtime/running-with-no-runtime.rs:23:53: 23:58
                                         // + literal: Const { ty: for<'a> fn(&'a mut Command) -> Result<Child, std::io::Error> {Command::spawn}, val: Value(<ZST>) }
    }

    bb18: {
        _31 = &_32;                      // scope 1 at ui/runtime/running-with-no-runtime.rs:23:32: 23:69
        _30 = Result::<Child, std::io::Error>::is_err(move _31) -> [return: bb19, unwind: bb71]; // scope 1 at ui/runtime/running-with-no-runtime.rs:23:32: 23:69
                                         // mir::Constant
                                         // + span: ui/runtime/running-with-no-runtime.rs:23:61: 23:67
                                         // + literal: Const { ty: for<'a> fn(&'a Result<Child, std::io::Error>) -> bool {Result::<Child, std::io::Error>::is_err}, val: Value(<ZST>) }
    }

    bb19: {
        _29 = Not(move _30);             // scope 1 at ui/runtime/running-with-no-runtime.rs:23:24: 23:70
        drop(_32) -> [return: bb20, unwind: bb72]; // scope 1 at ui/runtime/running-with-no-runtime.rs:23:69: 23:70
    }

    bb20: {
        drop(_34) -> bb21;               // scope 1 at ui/runtime/running-with-no-runtime.rs:23:69: 23:70
    }

    bb21: {
        switchInt(move _29) -> [0: bb23, otherwise: bb22]; // scope 1 at ui/runtime/running-with-no-runtime.rs:23:24: 23:70
    }

    bb22: {
        _35 = core::panicking::panic(const "assertion failed: Command::new(\\\"test\\\").spawn().is_err()"); // scope 1 at ui/runtime/running-with-no-runtime.rs:23:24: 23:70
                                         // mir::Constant
                                         // + span: ui/runtime/running-with-no-runtime.rs:23:24: 23:70
                                         // + literal: Const { ty: fn(&'static str) -> ! {core::panicking::panic}, val: Value(<ZST>) }
                                         // mir::Constant
                                         // + span: no-location
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
    }

    bb23: {
        _0 = const 0_isize;              // scope 0 at ui/runtime/running-with-no-runtime.rs:27:16: 27:17
        goto -> bb63;                    // scope 0 at ui/runtime/running-with-no-runtime.rs:45:2: 45:2
    }

    bb24: {
        _41 = _1;                        // scope 3 at ui/runtime/running-with-no-runtime.rs:31:13: 31:17
        _40 = move _41 as usize (IntToInt); // scope 3 at ui/runtime/running-with-no-runtime.rs:31:13: 31:26
        _39 = std::ops::Range::<usize> { start: const 0_usize, end: move _40 }; // scope 3 at ui/runtime/running-with-no-runtime.rs:31:9: 31:27
        _43 = &_2;                       // scope 3 at ui/runtime/running-with-no-runtime.rs:31:32: 34:10
        _42 = [closure@ui/runtime/running-with-no-runtime.rs:31:32: 31:35] { argv: move _43 }; // scope 3 at ui/runtime/running-with-no-runtime.rs:31:32: 34:10
                                         // closure
                                         // + def_id: DefId(0:10 ~ running_with_no_runtime[64fa]::start::{closure#0})
                                         // + substs: [
                                         //     i16,
                                         //     extern "rust-call" fn((usize,)) -> std::vec::Vec<u8>,
                                         //     (&*const *const u8,),
                                         // ]
        _38 = <std::ops::Range<usize> as Iterator>::map::<Vec<u8>, [closure@ui/runtime/running-with-no-runtime.rs:31:32: 31:35]>(move _39, move _42) -> bb25; // scope 3 at ui/runtime/running-with-no-runtime.rs:31:9: 34:11
                                         // mir::Constant
                                         // + span: ui/runtime/running-with-no-runtime.rs:31:28: 31:31
                                         // + literal: Const { ty: fn(std::ops::Range<usize>, [closure@ui/runtime/running-with-no-runtime.rs:31:32: 31:35]) -> Map<std::ops::Range<usize>, [closure@ui/runtime/running-with-no-runtime.rs:31:32: 31:35]> {<std::ops::Range<usize> as Iterator>::map::<Vec<u8>, [closure@ui/runtime/running-with-no-runtime.rs:31:32: 31:35]>}, val: Value(<ZST>) }
    }

    bb25: {
        _37 = <Map<std::ops::Range<usize>, [closure@ui/runtime/running-with-no-runtime.rs:31:32: 31:35]> as Iterator>::collect::<Vec<Vec<u8>>>(move _38) -> bb26; // scope 3 at ui/runtime/running-with-no-runtime.rs:31:9: 34:31
                                         // mir::Constant
                                         // + span: ui/runtime/running-with-no-runtime.rs:34:12: 34:19
                                         // + user_ty: UserType(2)
                                         // + literal: Const { ty: fn(Map<std::ops::Range<usize>, [closure@ui/runtime/running-with-no-runtime.rs:31:32: 31:35]>) -> Vec<Vec<u8>> {<Map<std::ops::Range<usize>, [closure@ui/runtime/running-with-no-runtime.rs:31:32: 31:35]> as Iterator>::collect::<Vec<Vec<u8>>>}, val: Value(<ZST>) }
    }

    bb26: {
        _51 = &_37;                      // scope 2 at ui/runtime/running-with-no-runtime.rs:36:32: 36:36
        _50 = <Vec<Vec<u8>> as Index<usize>>::index(move _51, const 0_usize) -> [return: bb27, unwind: bb70]; // scope 2 at ui/runtime/running-with-no-runtime.rs:36:32: 36:39
                                         // mir::Constant
                                         // + span: ui/runtime/running-with-no-runtime.rs:36:32: 36:39
                                         // + literal: Const { ty: for<'a> fn(&'a Vec<Vec<u8>>, usize) -> &'a <Vec<Vec<u8>> as Index<usize>>::Output {<Vec<Vec<u8>> as Index<usize>>::index}, val: Value(<ZST>) }
    }

    bb27: {
        _49 = _50;                       // scope 2 at ui/runtime/running-with-no-runtime.rs:36:32: 36:48
        _48 = <Vec<u8> as Deref>::deref(move _49) -> [return: bb28, unwind: bb70]; // scope 2 at ui/runtime/running-with-no-runtime.rs:36:32: 36:48
                                         // mir::Constant
                                         // + span: ui/runtime/running-with-no-runtime.rs:36:32: 36:48
                                         // + literal: Const { ty: for<'a> fn(&'a Vec<u8>) -> &'a <Vec<u8> as Deref>::Target {<Vec<u8> as Deref>::deref}, val: Value(<ZST>) }
    }

    bb28: {
        _47 = _48;                       // scope 2 at ui/runtime/running-with-no-runtime.rs:36:32: 36:48
        _46 = slice::<impl [u8]>::to_vec(move _47) -> [return: bb29, unwind: bb70]; // scope 2 at ui/runtime/running-with-no-runtime.rs:36:32: 36:48
                                         // mir::Constant
                                         // + span: ui/runtime/running-with-no-runtime.rs:36:40: 36:46
                                         // + literal: Const { ty: for<'a> fn(&'a [u8]) -> Vec<u8> {slice::<impl [u8]>::to_vec}, val: Value(<ZST>) }
    }

    bb29: {
        _45 = String::from_utf8(move _46) -> [return: bb30, unwind: bb70]; // scope 2 at ui/runtime/running-with-no-runtime.rs:36:14: 36:49
                                         // mir::Constant
                                         // + span: ui/runtime/running-with-no-runtime.rs:36:14: 36:31
                                         // + literal: Const { ty: fn(Vec<u8>) -> Result<String, FromUtf8Error> {String::from_utf8}, val: Value(<ZST>) }
    }

    bb30: {
        _44 = Result::<String, FromUtf8Error>::unwrap(move _45) -> [return: bb31, unwind: bb70]; // scope 2 at ui/runtime/running-with-no-runtime.rs:36:14: 36:58
                                         // mir::Constant
                                         // + span: ui/runtime/running-with-no-runtime.rs:36:50: 36:56
                                         // + literal: Const { ty: fn(Result<String, FromUtf8Error>) -> String {Result::<String, FromUtf8Error>::unwrap}, val: Value(<ZST>) }
    }

    bb31: {
        _59 = &_44;                      // scope 4 at ui/runtime/running-with-no-runtime.rs:38:23: 38:26
        _58 = Command::new::<&String>(move _59) -> [return: bb32, unwind: bb69]; // scope 4 at ui/runtime/running-with-no-runtime.rs:38:10: 38:27
                                         // mir::Constant
                                         // + span: ui/runtime/running-with-no-runtime.rs:38:10: 38:22
                                         // + user_ty: UserType(3)
                                         // + literal: Const { ty: fn(&String) -> Command {Command::new::<&String>}, val: Value(<ZST>) }
    }

    bb32: {
        _57 = &mut _58;                  // scope 4 at ui/runtime/running-with-no-runtime.rs:38:10: 38:36
        _56 = Command::arg::<&str>(move _57, const "1") -> [return: bb33, unwind: bb68]; // scope 4 at ui/runtime/running-with-no-runtime.rs:38:10: 38:36
                                         // mir::Constant
                                         // + span: ui/runtime/running-with-no-runtime.rs:38:28: 38:31
                                         // + literal: Const { ty: for<'a> fn(&'a mut Command, &str) -> &'a mut Command {Command::arg::<&str>}, val: Value(<ZST>) }
                                         // mir::Constant
                                         // + span: ui/runtime/running-with-no-runtime.rs:38:32: 38:35
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
    }

    bb33: {
        _55 = &mut (*_56);               // scope 4 at ui/runtime/running-with-no-runtime.rs:38:10: 38:45
        _54 = Command::output(move _55) -> [return: bb34, unwind: bb68]; // scope 4 at ui/runtime/running-with-no-runtime.rs:38:10: 38:45
                                         // mir::Constant
                                         // + span: ui/runtime/running-with-no-runtime.rs:38:37: 38:43
                                         // + literal: Const { ty: for<'a> fn(&'a mut Command) -> Result<Output, std::io::Error> {Command::output}, val: Value(<ZST>) }
    }

    bb34: {
        _53 = Result::<Output, std::io::Error>::unwrap(move _54) -> [return: bb35, unwind: bb68]; // scope 4 at ui/runtime/running-with-no-runtime.rs:38:10: 38:54
                                         // mir::Constant
                                         // + span: ui/runtime/running-with-no-runtime.rs:38:46: 38:52
                                         // + literal: Const { ty: fn(Result<Output, std::io::Error>) -> Output {Result::<Output, std::io::Error>::unwrap}, val: Value(<ZST>) }
    }

    bb35: {
        _52 = pass(move _53) -> [return: bb36, unwind: bb68]; // scope 4 at ui/runtime/running-with-no-runtime.rs:38:5: 38:55
                                         // mir::Constant
                                         // + span: ui/runtime/running-with-no-runtime.rs:38:5: 38:9
                                         // + literal: Const { ty: fn(Output) {pass}, val: Value(<ZST>) }
    }

    bb36: {
        drop(_58) -> [return: bb37, unwind: bb69]; // scope 4 at ui/runtime/running-with-no-runtime.rs:38:55: 38:56
    }

    bb37: {
        _67 = &_44;                      // scope 4 at ui/runtime/running-with-no-runtime.rs:39:23: 39:26
        _66 = Command::new::<&String>(move _67) -> [return: bb38, unwind: bb69]; // scope 4 at ui/runtime/running-with-no-runtime.rs:39:10: 39:27
                                         // mir::Constant
                                         // + span: ui/runtime/running-with-no-runtime.rs:39:10: 39:22
                                         // + user_ty: UserType(4)
                                         // + literal: Const { ty: fn(&String) -> Command {Command::new::<&String>}, val: Value(<ZST>) }
    }

    bb38: {
        _65 = &mut _66;                  // scope 4 at ui/runtime/running-with-no-runtime.rs:39:10: 39:36
        _64 = Command::arg::<&str>(move _65, const "2") -> [return: bb39, unwind: bb67]; // scope 4 at ui/runtime/running-with-no-runtime.rs:39:10: 39:36
                                         // mir::Constant
                                         // + span: ui/runtime/running-with-no-runtime.rs:39:28: 39:31
                                         // + literal: Const { ty: for<'a> fn(&'a mut Command, &str) -> &'a mut Command {Command::arg::<&str>}, val: Value(<ZST>) }
                                         // mir::Constant
                                         // + span: ui/runtime/running-with-no-runtime.rs:39:32: 39:35
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
    }

    bb39: {
        _63 = &mut (*_64);               // scope 4 at ui/runtime/running-with-no-runtime.rs:39:10: 39:45
        _62 = Command::output(move _63) -> [return: bb40, unwind: bb67]; // scope 4 at ui/runtime/running-with-no-runtime.rs:39:10: 39:45
                                         // mir::Constant
                                         // + span: ui/runtime/running-with-no-runtime.rs:39:37: 39:43
                                         // + literal: Const { ty: for<'a> fn(&'a mut Command) -> Result<Output, std::io::Error> {Command::output}, val: Value(<ZST>) }
    }

    bb40: {
        _61 = Result::<Output, std::io::Error>::unwrap(move _62) -> [return: bb41, unwind: bb67]; // scope 4 at ui/runtime/running-with-no-runtime.rs:39:10: 39:54
                                         // mir::Constant
                                         // + span: ui/runtime/running-with-no-runtime.rs:39:46: 39:52
                                         // + literal: Const { ty: fn(Result<Output, std::io::Error>) -> Output {Result::<Output, std::io::Error>::unwrap}, val: Value(<ZST>) }
    }

    bb41: {
        _60 = pass(move _61) -> [return: bb42, unwind: bb67]; // scope 4 at ui/runtime/running-with-no-runtime.rs:39:5: 39:55
                                         // mir::Constant
                                         // + span: ui/runtime/running-with-no-runtime.rs:39:5: 39:9
                                         // + literal: Const { ty: fn(Output) {pass}, val: Value(<ZST>) }
    }

    bb42: {
        drop(_66) -> [return: bb43, unwind: bb69]; // scope 4 at ui/runtime/running-with-no-runtime.rs:39:55: 39:56
    }

    bb43: {
        _75 = &_44;                      // scope 4 at ui/runtime/running-with-no-runtime.rs:40:23: 40:26
        _74 = Command::new::<&String>(move _75) -> [return: bb44, unwind: bb69]; // scope 4 at ui/runtime/running-with-no-runtime.rs:40:10: 40:27
                                         // mir::Constant
                                         // + span: ui/runtime/running-with-no-runtime.rs:40:10: 40:22
                                         // + user_ty: UserType(5)
                                         // + literal: Const { ty: fn(&String) -> Command {Command::new::<&String>}, val: Value(<ZST>) }
    }

    bb44: {
        _73 = &mut _74;                  // scope 4 at ui/runtime/running-with-no-runtime.rs:40:10: 40:36
        _72 = Command::arg::<&str>(move _73, const "3") -> [return: bb45, unwind: bb66]; // scope 4 at ui/runtime/running-with-no-runtime.rs:40:10: 40:36
                                         // mir::Constant
                                         // + span: ui/runtime/running-with-no-runtime.rs:40:28: 40:31
                                         // + literal: Const { ty: for<'a> fn(&'a mut Command, &str) -> &'a mut Command {Command::arg::<&str>}, val: Value(<ZST>) }
                                         // mir::Constant
                                         // + span: ui/runtime/running-with-no-runtime.rs:40:32: 40:35
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
    }

    bb45: {
        _71 = &mut (*_72);               // scope 4 at ui/runtime/running-with-no-runtime.rs:40:10: 40:45
        _70 = Command::output(move _71) -> [return: bb46, unwind: bb66]; // scope 4 at ui/runtime/running-with-no-runtime.rs:40:10: 40:45
                                         // mir::Constant
                                         // + span: ui/runtime/running-with-no-runtime.rs:40:37: 40:43
                                         // + literal: Const { ty: for<'a> fn(&'a mut Command) -> Result<Output, std::io::Error> {Command::output}, val: Value(<ZST>) }
    }

    bb46: {
        _69 = Result::<Output, std::io::Error>::unwrap(move _70) -> [return: bb47, unwind: bb66]; // scope 4 at ui/runtime/running-with-no-runtime.rs:40:10: 40:54
                                         // mir::Constant
                                         // + span: ui/runtime/running-with-no-runtime.rs:40:46: 40:52
                                         // + literal: Const { ty: fn(Result<Output, std::io::Error>) -> Output {Result::<Output, std::io::Error>::unwrap}, val: Value(<ZST>) }
    }

    bb47: {
        _68 = pass(move _69) -> [return: bb48, unwind: bb66]; // scope 4 at ui/runtime/running-with-no-runtime.rs:40:5: 40:55
                                         // mir::Constant
                                         // + span: ui/runtime/running-with-no-runtime.rs:40:5: 40:9
                                         // + literal: Const { ty: fn(Output) {pass}, val: Value(<ZST>) }
    }

    bb48: {
        drop(_74) -> [return: bb49, unwind: bb69]; // scope 4 at ui/runtime/running-with-no-runtime.rs:40:55: 40:56
    }

    bb49: {
        _83 = &_44;                      // scope 4 at ui/runtime/running-with-no-runtime.rs:41:23: 41:26
        _82 = Command::new::<&String>(move _83) -> [return: bb50, unwind: bb69]; // scope 4 at ui/runtime/running-with-no-runtime.rs:41:10: 41:27
                                         // mir::Constant
                                         // + span: ui/runtime/running-with-no-runtime.rs:41:10: 41:22
                                         // + user_ty: UserType(6)
                                         // + literal: Const { ty: fn(&String) -> Command {Command::new::<&String>}, val: Value(<ZST>) }
    }

    bb50: {
        _81 = &mut _82;                  // scope 4 at ui/runtime/running-with-no-runtime.rs:41:10: 41:36
        _80 = Command::arg::<&str>(move _81, const "4") -> [return: bb51, unwind: bb65]; // scope 4 at ui/runtime/running-with-no-runtime.rs:41:10: 41:36
                                         // mir::Constant
                                         // + span: ui/runtime/running-with-no-runtime.rs:41:28: 41:31
                                         // + literal: Const { ty: for<'a> fn(&'a mut Command, &str) -> &'a mut Command {Command::arg::<&str>}, val: Value(<ZST>) }
                                         // mir::Constant
                                         // + span: ui/runtime/running-with-no-runtime.rs:41:32: 41:35
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
    }

    bb51: {
        _79 = &mut (*_80);               // scope 4 at ui/runtime/running-with-no-runtime.rs:41:10: 41:45
        _78 = Command::output(move _79) -> [return: bb52, unwind: bb65]; // scope 4 at ui/runtime/running-with-no-runtime.rs:41:10: 41:45
                                         // mir::Constant
                                         // + span: ui/runtime/running-with-no-runtime.rs:41:37: 41:43
                                         // + literal: Const { ty: for<'a> fn(&'a mut Command) -> Result<Output, std::io::Error> {Command::output}, val: Value(<ZST>) }
    }

    bb52: {
        _77 = Result::<Output, std::io::Error>::unwrap(move _78) -> [return: bb53, unwind: bb65]; // scope 4 at ui/runtime/running-with-no-runtime.rs:41:10: 41:54
                                         // mir::Constant
                                         // + span: ui/runtime/running-with-no-runtime.rs:41:46: 41:52
                                         // + literal: Const { ty: fn(Result<Output, std::io::Error>) -> Output {Result::<Output, std::io::Error>::unwrap}, val: Value(<ZST>) }
    }

    bb53: {
        _76 = pass(move _77) -> [return: bb54, unwind: bb65]; // scope 4 at ui/runtime/running-with-no-runtime.rs:41:5: 41:55
                                         // mir::Constant
                                         // + span: ui/runtime/running-with-no-runtime.rs:41:5: 41:9
                                         // + literal: Const { ty: fn(Output) {pass}, val: Value(<ZST>) }
    }

    bb54: {
        drop(_82) -> [return: bb55, unwind: bb69]; // scope 4 at ui/runtime/running-with-no-runtime.rs:41:55: 41:56
    }

    bb55: {
        _91 = &_44;                      // scope 4 at ui/runtime/running-with-no-runtime.rs:42:23: 42:26
        _90 = Command::new::<&String>(move _91) -> [return: bb56, unwind: bb69]; // scope 4 at ui/runtime/running-with-no-runtime.rs:42:10: 42:27
                                         // mir::Constant
                                         // + span: ui/runtime/running-with-no-runtime.rs:42:10: 42:22
                                         // + user_ty: UserType(7)
                                         // + literal: Const { ty: fn(&String) -> Command {Command::new::<&String>}, val: Value(<ZST>) }
    }

    bb56: {
        _89 = &mut _90;                  // scope 4 at ui/runtime/running-with-no-runtime.rs:42:10: 42:36
        _88 = Command::arg::<&str>(move _89, const "5") -> [return: bb57, unwind: bb64]; // scope 4 at ui/runtime/running-with-no-runtime.rs:42:10: 42:36
                                         // mir::Constant
                                         // + span: ui/runtime/running-with-no-runtime.rs:42:28: 42:31
                                         // + literal: Const { ty: for<'a> fn(&'a mut Command, &str) -> &'a mut Command {Command::arg::<&str>}, val: Value(<ZST>) }
                                         // mir::Constant
                                         // + span: ui/runtime/running-with-no-runtime.rs:42:32: 42:35
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
    }

    bb57: {
        _87 = &mut (*_88);               // scope 4 at ui/runtime/running-with-no-runtime.rs:42:10: 42:45
        _86 = Command::output(move _87) -> [return: bb58, unwind: bb64]; // scope 4 at ui/runtime/running-with-no-runtime.rs:42:10: 42:45
                                         // mir::Constant
                                         // + span: ui/runtime/running-with-no-runtime.rs:42:37: 42:43
                                         // + literal: Const { ty: for<'a> fn(&'a mut Command) -> Result<Output, std::io::Error> {Command::output}, val: Value(<ZST>) }
    }

    bb58: {
        _85 = Result::<Output, std::io::Error>::unwrap(move _86) -> [return: bb59, unwind: bb64]; // scope 4 at ui/runtime/running-with-no-runtime.rs:42:10: 42:54
                                         // mir::Constant
                                         // + span: ui/runtime/running-with-no-runtime.rs:42:46: 42:52
                                         // + literal: Const { ty: fn(Result<Output, std::io::Error>) -> Output {Result::<Output, std::io::Error>::unwrap}, val: Value(<ZST>) }
    }

    bb59: {
        _84 = pass(move _85) -> [return: bb60, unwind: bb64]; // scope 4 at ui/runtime/running-with-no-runtime.rs:42:5: 42:55
                                         // mir::Constant
                                         // + span: ui/runtime/running-with-no-runtime.rs:42:5: 42:9
                                         // + literal: Const { ty: fn(Output) {pass}, val: Value(<ZST>) }
    }

    bb60: {
        drop(_90) -> [return: bb61, unwind: bb69]; // scope 4 at ui/runtime/running-with-no-runtime.rs:42:55: 42:56
    }

    bb61: {
        _0 = const 0_isize;              // scope 4 at ui/runtime/running-with-no-runtime.rs:44:5: 44:6
        drop(_44) -> [return: bb62, unwind: bb70]; // scope 2 at ui/runtime/running-with-no-runtime.rs:45:1: 45:2
    }

    bb62: {
        drop(_37) -> bb63;               // scope 0 at ui/runtime/running-with-no-runtime.rs:45:1: 45:2
    }

    bb63: {
        return;                          // scope 0 at ui/runtime/running-with-no-runtime.rs:45:2: 45:2
    }

    bb64 (cleanup): {
        drop(_90) -> bb69;               // scope 4 at ui/runtime/running-with-no-runtime.rs:42:55: 42:56
    }

    bb65 (cleanup): {
        drop(_82) -> bb69;               // scope 4 at ui/runtime/running-with-no-runtime.rs:41:55: 41:56
    }

    bb66 (cleanup): {
        drop(_74) -> bb69;               // scope 4 at ui/runtime/running-with-no-runtime.rs:40:55: 40:56
    }

    bb67 (cleanup): {
        drop(_66) -> bb69;               // scope 4 at ui/runtime/running-with-no-runtime.rs:39:55: 39:56
    }

    bb68 (cleanup): {
        drop(_58) -> bb69;               // scope 4 at ui/runtime/running-with-no-runtime.rs:38:55: 38:56
    }

    bb69 (cleanup): {
        drop(_44) -> bb70;               // scope 2 at ui/runtime/running-with-no-runtime.rs:45:1: 45:2
    }

    bb70 (cleanup): {
        drop(_37) -> bb75;               // scope 0 at ui/runtime/running-with-no-runtime.rs:45:1: 45:2
    }

    bb71 (cleanup): {
        drop(_32) -> bb72;               // scope 1 at ui/runtime/running-with-no-runtime.rs:23:69: 23:70
    }

    bb72 (cleanup): {
        drop(_34) -> bb75;               // scope 1 at ui/runtime/running-with-no-runtime.rs:23:69: 23:70
    }

    bb73 (cleanup): {
        drop(_26) -> bb75;               // scope 1 at ui/runtime/running-with-no-runtime.rs:22:73: 22:74
    }

    bb74 (cleanup): {
        drop(_20) -> bb75;               // scope 1 at ui/runtime/running-with-no-runtime.rs:21:66: 21:67
    }

    bb75 (cleanup): {
        resume;                          // scope 0 at ui/runtime/running-with-no-runtime.rs:15:1: 45:2
    }
}

promoted[0] in start: &[core::fmt::ArgumentV1<'_>; 0] = {
    let mut _0: &[core::fmt::ArgumentV1<'_>; 0]; // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _1: [core::fmt::ArgumentV1<'_>; 0]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61

    bb0: {
        _1 = [];                         // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    }
}

promoted[1] in start: &[&str; 1] = {
    let mut _0: &[&str; 1];              // return place in scope 0 at ui/runtime/running-with-no-runtime.rs:20:33: 20:38
    let mut _1: [&str; 1];               // in scope 0 at ui/runtime/running-with-no-runtime.rs:20:33: 20:38

    bb0: {
        _1 = [const "foo\n"];            // scope 0 at ui/runtime/running-with-no-runtime.rs:20:33: 20:38
                                         // mir::Constant
                                         // + span: ui/runtime/running-with-no-runtime.rs:20:33: 20:38
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at ui/runtime/running-with-no-runtime.rs:20:33: 20:38
        return;                          // scope 0 at ui/runtime/running-with-no-runtime.rs:20:33: 20:38
    }
}

fn start::{closure#1}(_1: [closure@ui/runtime/running-with-no-runtime.rs:21:52: 21:54]) -> () {
    let mut _0: ();                      // return place in scope 0 at ui/runtime/running-with-no-runtime.rs:21:55: 21:55

    bb0: {
        return;                          // scope 0 at ui/runtime/running-with-no-runtime.rs:21:57: 21:57
    }
}

fn start::{closure#2}(_1: [closure@ui/runtime/running-with-no-runtime.rs:22:52: 22:54]) -> () {
    let mut _0: ();                      // return place in scope 0 at ui/runtime/running-with-no-runtime.rs:22:55: 22:55
    let mut _2: !;                       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/panic.rs:19:9: 19:50

    bb0: {
        _2 = begin_panic::<&str>(const "explicit panic"); // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/panic.rs:19:9: 19:50
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/panic.rs:19:9: 19:32
                                         // + literal: Const { ty: fn(&str) -> ! {begin_panic::<&str>}, val: Value(<ZST>) }
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/panic.rs:19:33: 19:49
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
    }
}

fn start::{closure#0}(_1: &mut [closure@ui/runtime/running-with-no-runtime.rs:31:32: 31:35], _2: usize) -> Vec<u8> {
    debug i => _2;                       // in scope 0 at ui/runtime/running-with-no-runtime.rs:31:33: 31:34
    debug argv => (*((*_1).0: &*const *const u8)); // in scope 0 at ui/runtime/running-with-no-runtime.rs:15:23: 15:27
    let mut _0: std::vec::Vec<u8>;       // return place in scope 0 at ui/runtime/running-with-no-runtime.rs:31:36: 31:36
    let _3: *const i8;                   // in scope 0 at ui/runtime/running-with-no-runtime.rs:32:17: 32:20
    let mut _4: *const i8;               // in scope 0 at ui/runtime/running-with-no-runtime.rs:32:23: 32:47
    let mut _5: *const u8;               // in scope 0 at ui/runtime/running-with-no-runtime.rs:32:23: 32:35
    let mut _6: *const *const u8;        // in scope 0 at ui/runtime/running-with-no-runtime.rs:32:24: 32:35
    let mut _7: *const *const u8;        // in scope 0 at ui/runtime/running-with-no-runtime.rs:32:24: 32:28
    let mut _8: usize;                   // in scope 0 at ui/runtime/running-with-no-runtime.rs:32:33: 32:34
    let mut _9: &[u8];                   // in scope 0 at ui/runtime/running-with-no-runtime.rs:33:13: 33:52
    let _10: &[u8];                      // in scope 0 at ui/runtime/running-with-no-runtime.rs:33:13: 33:43
    let mut _11: &std::ffi::CStr;        // in scope 0 at ui/runtime/running-with-no-runtime.rs:33:13: 33:43
    let _12: &std::ffi::CStr;            // in scope 0 at ui/runtime/running-with-no-runtime.rs:33:13: 33:32
    let mut _13: *const i8;              // in scope 0 at ui/runtime/running-with-no-runtime.rs:33:28: 33:31
    let mut _14: &*const *const u8;      // in scope 0 at ui/runtime/running-with-no-runtime.rs:31:32: 34:10
    scope 1 {
        debug ptr => _3;                 // in scope 1 at ui/runtime/running-with-no-runtime.rs:32:17: 32:20
    }

    bb0: {
        _14 = deref_copy ((*_1).0: &*const *const u8); // scope 0 at ui/runtime/running-with-no-runtime.rs:32:24: 32:28
        _7 = (*_14);                     // scope 0 at ui/runtime/running-with-no-runtime.rs:32:24: 32:28
        _8 = _2;                         // scope 0 at ui/runtime/running-with-no-runtime.rs:32:33: 32:34
        _6 = ptr::const_ptr::<impl *const *const u8>::add(move _7, move _8) -> bb1; // scope 0 at ui/runtime/running-with-no-runtime.rs:32:24: 32:35
                                         // mir::Constant
                                         // + span: ui/runtime/running-with-no-runtime.rs:32:29: 32:32
                                         // + literal: Const { ty: unsafe fn(*const *const u8, usize) -> *const *const u8 {ptr::const_ptr::<impl *const *const u8>::add}, val: Value(<ZST>) }
    }

    bb1: {
        _5 = (*_6);                      // scope 0 at ui/runtime/running-with-no-runtime.rs:32:23: 32:35
        _4 = move _5 as *const i8 (PtrToPtr); // scope 0 at ui/runtime/running-with-no-runtime.rs:32:23: 32:47
        _3 = _4;                         // scope 0 at ui/runtime/running-with-no-runtime.rs:32:23: 32:47
        _13 = _3;                        // scope 1 at ui/runtime/running-with-no-runtime.rs:33:28: 33:31
        _12 = CStr::from_ptr::<'_>(move _13) -> bb2; // scope 1 at ui/runtime/running-with-no-runtime.rs:33:13: 33:32
                                         // mir::Constant
                                         // + span: ui/runtime/running-with-no-runtime.rs:33:13: 33:27
                                         // + user_ty: UserType(1)
                                         // + literal: Const { ty: unsafe fn(*const i8) -> &CStr {CStr::from_ptr::<'_>}, val: Value(<ZST>) }
    }

    bb2: {
        _11 = _12;                       // scope 1 at ui/runtime/running-with-no-runtime.rs:33:13: 33:43
        _10 = CStr::to_bytes(move _11) -> bb3; // scope 1 at ui/runtime/running-with-no-runtime.rs:33:13: 33:43
                                         // mir::Constant
                                         // + span: ui/runtime/running-with-no-runtime.rs:33:33: 33:41
                                         // + literal: Const { ty: for<'a> fn(&'a CStr) -> &'a [u8] {CStr::to_bytes}, val: Value(<ZST>) }
    }

    bb3: {
        _9 = _10;                        // scope 1 at ui/runtime/running-with-no-runtime.rs:33:13: 33:52
        _0 = slice::<impl [u8]>::to_vec(move _9) -> bb4; // scope 1 at ui/runtime/running-with-no-runtime.rs:33:13: 33:52
                                         // mir::Constant
                                         // + span: ui/runtime/running-with-no-runtime.rs:33:44: 33:50
                                         // + literal: Const { ty: for<'a> fn(&'a [u8]) -> Vec<u8> {slice::<impl [u8]>::to_vec}, val: Value(<ZST>) }
    }

    bb4: {
        return;                          // scope 0 at ui/runtime/running-with-no-runtime.rs:34:10: 34:10
    }
}

fn pass(_1: Output) -> () {
    debug output => _1;                  // in scope 0 at ui/runtime/running-with-no-runtime.rs:47:9: 47:15
    let mut _0: ();                      // return place in scope 0 at ui/runtime/running-with-no-runtime.rs:47:25: 47:25
    let mut _2: bool;                    // in scope 0 at ui/runtime/running-with-no-runtime.rs:48:8: 48:32
    let mut _3: bool;                    // in scope 0 at ui/runtime/running-with-no-runtime.rs:48:9: 48:32
    let mut _4: &std::process::ExitStatus; // in scope 0 at ui/runtime/running-with-no-runtime.rs:48:9: 48:32
    let _5: ();                          // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:62
    let mut _6: std::fmt::Arguments<'_>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _7: &[&str];                 // in scope 0 at ui/runtime/running-with-no-runtime.rs:49:18: 49:24
    let mut _8: &[&str; 2];              // in scope 0 at ui/runtime/running-with-no-runtime.rs:49:18: 49:24
    let _9: &[&str; 2];                  // in scope 0 at ui/runtime/running-with-no-runtime.rs:49:18: 49:24
    let mut _10: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _11: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let _12: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let _13: [core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _14: core::fmt::ArgumentV1<'_>; // in scope 0 at ui/runtime/running-with-no-runtime.rs:49:26: 49:56
    let mut _15: &std::result::Result<&str, std::str::Utf8Error>; // in scope 0 at ui/runtime/running-with-no-runtime.rs:49:26: 49:56
    let _16: &std::result::Result<&str, std::str::Utf8Error>; // in scope 0 at ui/runtime/running-with-no-runtime.rs:49:26: 49:56
    let _17: std::result::Result<&str, std::str::Utf8Error>; // in scope 0 at ui/runtime/running-with-no-runtime.rs:49:26: 49:56
    let mut _18: &[u8];                  // in scope 0 at ui/runtime/running-with-no-runtime.rs:49:41: 49:55
    let _19: &[u8];                      // in scope 0 at ui/runtime/running-with-no-runtime.rs:49:41: 49:55
    let mut _20: &std::vec::Vec<u8>;     // in scope 0 at ui/runtime/running-with-no-runtime.rs:49:41: 49:55
    let _21: &std::vec::Vec<u8>;         // in scope 0 at ui/runtime/running-with-no-runtime.rs:49:41: 49:55
    let _22: ();                         // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:62
    let mut _23: std::fmt::Arguments<'_>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _24: &[&str];                // in scope 0 at ui/runtime/running-with-no-runtime.rs:50:18: 50:24
    let mut _25: &[&str; 2];             // in scope 0 at ui/runtime/running-with-no-runtime.rs:50:18: 50:24
    let _26: &[&str; 2];                 // in scope 0 at ui/runtime/running-with-no-runtime.rs:50:18: 50:24
    let mut _27: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _28: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let _29: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let _30: [core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _31: core::fmt::ArgumentV1<'_>; // in scope 0 at ui/runtime/running-with-no-runtime.rs:50:26: 50:56
    let mut _32: &std::result::Result<&str, std::str::Utf8Error>; // in scope 0 at ui/runtime/running-with-no-runtime.rs:50:26: 50:56
    let _33: &std::result::Result<&str, std::str::Utf8Error>; // in scope 0 at ui/runtime/running-with-no-runtime.rs:50:26: 50:56
    let _34: std::result::Result<&str, std::str::Utf8Error>; // in scope 0 at ui/runtime/running-with-no-runtime.rs:50:26: 50:56
    let mut _35: &[u8];                  // in scope 0 at ui/runtime/running-with-no-runtime.rs:50:41: 50:55
    let _36: &[u8];                      // in scope 0 at ui/runtime/running-with-no-runtime.rs:50:41: 50:55
    let mut _37: &std::vec::Vec<u8>;     // in scope 0 at ui/runtime/running-with-no-runtime.rs:50:41: 50:55
    let _38: &std::vec::Vec<u8>;         // in scope 0 at ui/runtime/running-with-no-runtime.rs:50:41: 50:55
    let mut _39: &[&str; 2];             // in scope 0 at ui/runtime/running-with-no-runtime.rs:50:18: 50:24
    let mut _40: &[&str; 2];             // in scope 0 at ui/runtime/running-with-no-runtime.rs:49:18: 49:24

    bb0: {
        _4 = &(_1.0: std::process::ExitStatus); // scope 0 at ui/runtime/running-with-no-runtime.rs:48:9: 48:32
        _3 = ExitStatus::success(move _4) -> [return: bb1, unwind: bb14]; // scope 0 at ui/runtime/running-with-no-runtime.rs:48:9: 48:32
                                         // mir::Constant
                                         // + span: ui/runtime/running-with-no-runtime.rs:48:23: 48:30
                                         // + literal: Const { ty: for<'a> fn(&'a ExitStatus) -> bool {ExitStatus::success}, val: Value(<ZST>) }
    }

    bb1: {
        _2 = Not(move _3);               // scope 0 at ui/runtime/running-with-no-runtime.rs:48:8: 48:32
        switchInt(move _2) -> [0: bb12, otherwise: bb2]; // scope 0 at ui/runtime/running-with-no-runtime.rs:48:8: 48:32
    }

    bb2: {
        _40 = const _;                   // scope 0 at ui/runtime/running-with-no-runtime.rs:49:18: 49:24
                                         // mir::Constant
                                         // + span: ui/runtime/running-with-no-runtime.rs:49:18: 49:24
                                         // + literal: Const { ty: &[&str; 2], val: Unevaluated(pass, [], Some(promoted[1])) }
        _9 = _40;                        // scope 0 at ui/runtime/running-with-no-runtime.rs:49:18: 49:24
        _8 = _9;                         // scope 0 at ui/runtime/running-with-no-runtime.rs:49:18: 49:24
        _7 = move _8 as &[&str] (Pointer(Unsize)); // scope 0 at ui/runtime/running-with-no-runtime.rs:49:18: 49:24
        _21 = &(_1.1: std::vec::Vec<u8>); // scope 0 at ui/runtime/running-with-no-runtime.rs:49:41: 49:55
        _20 = _21;                       // scope 0 at ui/runtime/running-with-no-runtime.rs:49:41: 49:55
        _19 = <Vec<u8> as Deref>::deref(move _20) -> [return: bb3, unwind: bb14]; // scope 0 at ui/runtime/running-with-no-runtime.rs:49:41: 49:55
                                         // mir::Constant
                                         // + span: ui/runtime/running-with-no-runtime.rs:49:41: 49:55
                                         // + literal: Const { ty: for<'a> fn(&'a Vec<u8>) -> &'a <Vec<u8> as Deref>::Target {<Vec<u8> as Deref>::deref}, val: Value(<ZST>) }
    }

    bb3: {
        _18 = _19;                       // scope 0 at ui/runtime/running-with-no-runtime.rs:49:41: 49:55
        _17 = from_utf8(move _18) -> [return: bb4, unwind: bb14]; // scope 0 at ui/runtime/running-with-no-runtime.rs:49:26: 49:56
                                         // mir::Constant
                                         // + span: ui/runtime/running-with-no-runtime.rs:49:26: 49:40
                                         // + literal: Const { ty: for<'a> fn(&'a [u8]) -> Result<&'a str, Utf8Error> {from_utf8}, val: Value(<ZST>) }
    }

    bb4: {
        _16 = &_17;                      // scope 0 at ui/runtime/running-with-no-runtime.rs:49:26: 49:56
        _15 = _16;                       // scope 0 at ui/runtime/running-with-no-runtime.rs:49:26: 49:56
        _14 = core::fmt::ArgumentV1::<'_>::new_debug::<Result<&str, Utf8Error>>(move _15) -> [return: bb5, unwind: bb14]; // scope 0 at ui/runtime/running-with-no-runtime.rs:49:26: 49:56
                                         // mir::Constant
                                         // + span: ui/runtime/running-with-no-runtime.rs:49:26: 49:56
                                         // + user_ty: UserType(1)
                                         // + literal: Const { ty: for<'b> fn(&'b Result<&str, Utf8Error>) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_debug::<Result<&str, Utf8Error>>}, val: Value(<ZST>) }
    }

    bb5: {
        _13 = [move _14];                // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _12 = &_13;                      // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _11 = _12;                       // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _10 = move _11 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _6 = Arguments::<'_>::new_v1(move _7, move _10) -> [return: bb6, unwind: bb14]; // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb6: {
        _5 = _print(move _6) -> [return: bb7, unwind: bb14]; // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:62
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:27
                                         // + literal: Const { ty: for<'a> fn(Arguments<'a>) {_print}, val: Value(<ZST>) }
    }

    bb7: {
        _39 = const _;                   // scope 0 at ui/runtime/running-with-no-runtime.rs:50:18: 50:24
                                         // mir::Constant
                                         // + span: ui/runtime/running-with-no-runtime.rs:50:18: 50:24
                                         // + literal: Const { ty: &[&str; 2], val: Unevaluated(pass, [], Some(promoted[0])) }
        _26 = _39;                       // scope 0 at ui/runtime/running-with-no-runtime.rs:50:18: 50:24
        _25 = _26;                       // scope 0 at ui/runtime/running-with-no-runtime.rs:50:18: 50:24
        _24 = move _25 as &[&str] (Pointer(Unsize)); // scope 0 at ui/runtime/running-with-no-runtime.rs:50:18: 50:24
        _38 = &(_1.2: std::vec::Vec<u8>); // scope 0 at ui/runtime/running-with-no-runtime.rs:50:41: 50:55
        _37 = _38;                       // scope 0 at ui/runtime/running-with-no-runtime.rs:50:41: 50:55
        _36 = <Vec<u8> as Deref>::deref(move _37) -> [return: bb8, unwind: bb14]; // scope 0 at ui/runtime/running-with-no-runtime.rs:50:41: 50:55
                                         // mir::Constant
                                         // + span: ui/runtime/running-with-no-runtime.rs:50:41: 50:55
                                         // + literal: Const { ty: for<'a> fn(&'a Vec<u8>) -> &'a <Vec<u8> as Deref>::Target {<Vec<u8> as Deref>::deref}, val: Value(<ZST>) }
    }

    bb8: {
        _35 = _36;                       // scope 0 at ui/runtime/running-with-no-runtime.rs:50:41: 50:55
        _34 = from_utf8(move _35) -> [return: bb9, unwind: bb14]; // scope 0 at ui/runtime/running-with-no-runtime.rs:50:26: 50:56
                                         // mir::Constant
                                         // + span: ui/runtime/running-with-no-runtime.rs:50:26: 50:40
                                         // + literal: Const { ty: for<'a> fn(&'a [u8]) -> Result<&'a str, Utf8Error> {from_utf8}, val: Value(<ZST>) }
    }

    bb9: {
        _33 = &_34;                      // scope 0 at ui/runtime/running-with-no-runtime.rs:50:26: 50:56
        _32 = _33;                       // scope 0 at ui/runtime/running-with-no-runtime.rs:50:26: 50:56
        _31 = core::fmt::ArgumentV1::<'_>::new_debug::<Result<&str, Utf8Error>>(move _32) -> [return: bb10, unwind: bb14]; // scope 0 at ui/runtime/running-with-no-runtime.rs:50:26: 50:56
                                         // mir::Constant
                                         // + span: ui/runtime/running-with-no-runtime.rs:50:26: 50:56
                                         // + user_ty: UserType(3)
                                         // + literal: Const { ty: for<'b> fn(&'b Result<&str, Utf8Error>) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_debug::<Result<&str, Utf8Error>>}, val: Value(<ZST>) }
    }

    bb10: {
        _30 = [move _31];                // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _29 = &_30;                      // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _28 = _29;                       // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _27 = move _28 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _23 = Arguments::<'_>::new_v1(move _24, move _27) -> [return: bb11, unwind: bb14]; // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // + user_ty: UserType(2)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb11: {
        _22 = _print(move _23) -> [return: bb16, unwind: bb14]; // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:62
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:27
                                         // + literal: Const { ty: for<'a> fn(Arguments<'a>) {_print}, val: Value(<ZST>) }
    }

    bb12: {
        drop(_1) -> bb13;                // scope 0 at ui/runtime/running-with-no-runtime.rs:52:1: 52:2
    }

    bb13: {
        return;                          // scope 0 at ui/runtime/running-with-no-runtime.rs:52:2: 52:2
    }

    bb14 (cleanup): {
        drop(_1) -> bb15;                // scope 0 at ui/runtime/running-with-no-runtime.rs:52:1: 52:2
    }

    bb15 (cleanup): {
        resume;                          // scope 0 at ui/runtime/running-with-no-runtime.rs:47:1: 52:2
    }

    bb16: {
        goto -> bb12;                    // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:62
    }
}

promoted[0] in pass: &[&str; 2] = {
    let mut _0: &[&str; 2];              // return place in scope 0 at ui/runtime/running-with-no-runtime.rs:50:18: 50:24
    let mut _1: [&str; 2];               // in scope 0 at ui/runtime/running-with-no-runtime.rs:50:18: 50:24

    bb0: {
        _1 = [const "", const "\n"];     // scope 0 at ui/runtime/running-with-no-runtime.rs:50:18: 50:24
                                         // mir::Constant
                                         // + span: ui/runtime/running-with-no-runtime.rs:50:18: 50:24
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
                                         // mir::Constant
                                         // + span: ui/runtime/running-with-no-runtime.rs:50:18: 50:24
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at ui/runtime/running-with-no-runtime.rs:50:18: 50:24
        return;                          // scope 0 at ui/runtime/running-with-no-runtime.rs:50:18: 50:24
    }
}

promoted[1] in pass: &[&str; 2] = {
    let mut _0: &[&str; 2];              // return place in scope 0 at ui/runtime/running-with-no-runtime.rs:49:18: 49:24
    let mut _1: [&str; 2];               // in scope 0 at ui/runtime/running-with-no-runtime.rs:49:18: 49:24

    bb0: {
        _1 = [const "", const "\n"];     // scope 0 at ui/runtime/running-with-no-runtime.rs:49:18: 49:24
                                         // mir::Constant
                                         // + span: ui/runtime/running-with-no-runtime.rs:49:18: 49:24
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
                                         // mir::Constant
                                         // + span: ui/runtime/running-with-no-runtime.rs:49:18: 49:24
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at ui/runtime/running-with-no-runtime.rs:49:18: 49:24
        return;                          // scope 0 at ui/runtime/running-with-no-runtime.rs:49:18: 49:24
    }
}
