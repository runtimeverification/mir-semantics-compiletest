// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
const TMP: u32 = {
    let mut _0: u32;                     // return place in scope 0 at ui/async-await/return-ty-raw-ptr-coercion.rs:12:12: 12:15

    bb0: {
        _0 = const 22_u32;               // scope 0 at ui/async-await/return-ty-raw-ptr-coercion.rs:12:18: 12:20
        return;                          // scope 0 at ui/async-await/return-ty-raw-ptr-coercion.rs:12:1: 12:21
    }
}

fn raw_pointer_coercion() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/async-await/return-ty-raw-ptr-coercion.rs:15:27: 15:27

    bb0: {
        return;                          // scope 0 at ui/async-await/return-ty-raw-ptr-coercion.rs:23:2: 23:2
    }
}

fn sync_example() -> *const u32 {
    let mut _0: *const u32;              // return place in scope 0 at ui/async-await/return-ty-raw-ptr-coercion.rs:16:26: 16:36
    let _1: &u32;                        // in scope 0 at ui/async-await/return-ty-raw-ptr-coercion.rs:17:9: 17:13
    let mut _2: &u32;                    // in scope 0 at ui/async-await/return-ty-raw-ptr-coercion.rs:17:9: 17:13

    bb0: {
        _2 = const _;                    // scope 0 at ui/async-await/return-ty-raw-ptr-coercion.rs:17:9: 17:13
                                         // mir::Constant
                                         // + span: ui/async-await/return-ty-raw-ptr-coercion.rs:17:9: 17:13
                                         // + literal: Const { ty: &u32, val: Unevaluated(sync_example, [], Some(promoted[0])) }
        _1 = _2;                         // scope 0 at ui/async-await/return-ty-raw-ptr-coercion.rs:17:9: 17:13
        _0 = &raw const (*_1);           // scope 0 at ui/async-await/return-ty-raw-ptr-coercion.rs:17:9: 17:13
        return;                          // scope 0 at ui/async-await/return-ty-raw-ptr-coercion.rs:18:6: 18:6
    }
}

promoted[0] in sync_example: &u32 = {
    let mut _0: &u32;                    // return place in scope 0 at ui/async-await/return-ty-raw-ptr-coercion.rs:17:9: 17:13
    let mut _1: u32;                     // in scope 0 at ui/async-await/return-ty-raw-ptr-coercion.rs:17:10: 17:13

    bb0: {
        _1 = const _;                    // scope 0 at ui/async-await/return-ty-raw-ptr-coercion.rs:17:10: 17:13
        _0 = &_1;                        // scope 0 at ui/async-await/return-ty-raw-ptr-coercion.rs:17:9: 17:13
        return;                          // scope 0 at ui/async-await/return-ty-raw-ptr-coercion.rs:17:9: 17:13
    }
}

fn async_example() -> impl Future<Output = *const u32> {
    let mut _0: impl std::future::Future<Output = *const u32>; // return place in scope 0 at ui/async-await/return-ty-raw-ptr-coercion.rs:20:33: 20:43
    let mut _1: [async fn body@ui/async-await/return-ty-raw-ptr-coercion.rs:20:44: 22:6]; // in scope 0 at ui/async-await/return-ty-raw-ptr-coercion.rs:20:44: 22:6

    bb0: {
        _1 = [generator@ui/async-await/return-ty-raw-ptr-coercion.rs:20:44: 22:6 (#0)]; // scope 0 at ui/async-await/return-ty-raw-ptr-coercion.rs:20:44: 22:6
                                         // generator
                                         // + def_id: DefId(0:8 ~ return_ty_raw_ptr_coercion[a58b]::raw_pointer_coercion::async_example::{closure#0})
                                         // + substs: [
                                         //     std::future::ResumeTy,
                                         //     (),
                                         //     *const u32,
                                         //     {},
                                         //     (),
                                         // ]
                                         // + movability: Static
        _0 = identity_future::<*const u32, [async fn body@ui/async-await/return-ty-raw-ptr-coercion.rs:20:44: 22:6]>(move _1) -> bb1; // scope 0 at ui/async-await/return-ty-raw-ptr-coercion.rs:20:44: 22:6
                                         // mir::Constant
                                         // + span: ui/async-await/return-ty-raw-ptr-coercion.rs:20:44: 22:6
                                         // + literal: Const { ty: fn([async fn body@ui/async-await/return-ty-raw-ptr-coercion.rs:20:44: 22:6]) -> [async fn body@ui/async-await/return-ty-raw-ptr-coercion.rs:20:44: 22:6] {identity_future::<*const u32, [async fn body@ui/async-await/return-ty-raw-ptr-coercion.rs:20:44: 22:6]>}, val: Value(<ZST>) }
    }

    bb1: {
        return;                          // scope 0 at ui/async-await/return-ty-raw-ptr-coercion.rs:22:6: 22:6
    }
}

fn async_example::{closure#0}(_1: Pin<&mut [async fn body@ui/async-await/return-ty-raw-ptr-coercion.rs:20:44: 22:6]>, _2: &mut Context<'_>) -> Poll<*const u32> {
    debug _task_context => _6;           // in scope 0 at ui/async-await/return-ty-raw-ptr-coercion.rs:20:44: 22:6
    let mut _0: std::task::Poll<*const u32>; // return place in scope 0 at ui/async-await/return-ty-raw-ptr-coercion.rs:20:44: 22:6
    let _3: &u32;                        // in scope 0 at ui/async-await/return-ty-raw-ptr-coercion.rs:21:9: 21:13
    let mut _4: &u32;                    // in scope 0 at ui/async-await/return-ty-raw-ptr-coercion.rs:21:9: 21:13
    let mut _5: *const u32;              // in scope 0 at ui/async-await/return-ty-raw-ptr-coercion.rs:20:44: 22:6
    let mut _6: &mut std::task::Context<'_>; // in scope 0 at ui/async-await/return-ty-raw-ptr-coercion.rs:20:44: 22:6
    let mut _7: u32;                     // in scope 0 at ui/async-await/return-ty-raw-ptr-coercion.rs:20:44: 22:6
    let mut _8: &mut [async fn body@ui/async-await/return-ty-raw-ptr-coercion.rs:20:44: 22:6]; // in scope 0 at ui/async-await/return-ty-raw-ptr-coercion.rs:20:44: 22:6
    let mut _9: &mut [async fn body@ui/async-await/return-ty-raw-ptr-coercion.rs:20:44: 22:6]; // in scope 0 at ui/async-await/return-ty-raw-ptr-coercion.rs:20:44: 22:6

    bb0: {
        _8 = deref_copy (_1.0: &mut [async fn body@ui/async-await/return-ty-raw-ptr-coercion.rs:20:44: 22:6]); // scope 0 at ui/async-await/return-ty-raw-ptr-coercion.rs:20:44: 22:6
        _7 = discriminant((*_8));        // scope 0 at ui/async-await/return-ty-raw-ptr-coercion.rs:20:44: 22:6
        switchInt(move _7) -> [0: bb1, 1: bb2, otherwise: bb3]; // scope 0 at ui/async-await/return-ty-raw-ptr-coercion.rs:20:44: 22:6
    }

    bb1: {
        _6 = move _2;                    // scope 0 at ui/async-await/return-ty-raw-ptr-coercion.rs:20:44: 22:6
        _4 = const _;                    // scope 0 at ui/async-await/return-ty-raw-ptr-coercion.rs:21:9: 21:13
                                         // mir::Constant
                                         // + span: ui/async-await/return-ty-raw-ptr-coercion.rs:21:9: 21:13
                                         // + literal: Const { ty: &u32, val: Unevaluated(async_example::{closure#0}, [<resume_ty>, <yield_ty>, <return_ty>, <witness>, <upvars>], Some(promoted[0])) }
        _3 = _4;                         // scope 0 at ui/async-await/return-ty-raw-ptr-coercion.rs:21:9: 21:13
        _5 = &raw const (*_3);           // scope 0 at ui/async-await/return-ty-raw-ptr-coercion.rs:21:9: 21:13
        _0 = Poll::<*const u32>::Ready(move _5); // scope 0 at ui/async-await/return-ty-raw-ptr-coercion.rs:22:6: 22:6
        _9 = deref_copy (_1.0: &mut [async fn body@ui/async-await/return-ty-raw-ptr-coercion.rs:20:44: 22:6]); // scope 0 at ui/async-await/return-ty-raw-ptr-coercion.rs:22:6: 22:6
        discriminant((*_9)) = 1;         // scope 0 at ui/async-await/return-ty-raw-ptr-coercion.rs:22:6: 22:6
        return;                          // scope 0 at ui/async-await/return-ty-raw-ptr-coercion.rs:22:6: 22:6
    }

    bb2: {
        assert(const false, "`async fn` resumed after completion") -> bb2; // scope 0 at ui/async-await/return-ty-raw-ptr-coercion.rs:20:44: 22:6
    }

    bb3: {
        unreachable;                     // scope 0 at ui/async-await/return-ty-raw-ptr-coercion.rs:20:44: 22:6
    }
}

promoted[0] in async_example::{closure#0}: &u32 = {
    let mut _0: &u32;                    // return place in scope 0 at ui/async-await/return-ty-raw-ptr-coercion.rs:21:9: 21:13
    let mut _1: u32;                     // in scope 0 at ui/async-await/return-ty-raw-ptr-coercion.rs:21:10: 21:13

    bb0: {
        _1 = const _;                    // scope 0 at ui/async-await/return-ty-raw-ptr-coercion.rs:21:10: 21:13
        _0 = &_1;                        // scope 0 at ui/async-await/return-ty-raw-ptr-coercion.rs:21:9: 21:13
        return;                          // scope 0 at ui/async-await/return-ty-raw-ptr-coercion.rs:21:9: 21:13
    }
}

fn main() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/async-await/return-ty-raw-ptr-coercion.rs:25:11: 25:11

    bb0: {
        return;                          // scope 0 at ui/async-await/return-ty-raw-ptr-coercion.rs:25:13: 25:13
    }
}
