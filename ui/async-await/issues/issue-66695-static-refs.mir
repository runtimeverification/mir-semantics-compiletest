// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
static A: [i32; 5] = {
    let mut _0: [i32; 5];                // return place in scope 0 at ui/async-await/issues/issue-66695-static-refs.rs:4:11: 4:19

    bb0: {
        _0 = [const 1_i32, const 2_i32, const 3_i32, const 4_i32, const 5_i32]; // scope 0 at ui/async-await/issues/issue-66695-static-refs.rs:4:22: 4:37
        return;                          // scope 0 at ui/async-await/issues/issue-66695-static-refs.rs:4:1: 4:38
    }
}

A::{constant#0}: usize = {
    let mut _0: usize;                   // return place in scope 0 at ui/async-await/issues/issue-66695-static-refs.rs:4:17: 4:18

    bb0: {
        _0 = const 5_usize;              // scope 0 at ui/async-await/issues/issue-66695-static-refs.rs:4:17: 4:18
        return;                          // scope 0 at ui/async-await/issues/issue-66695-static-refs.rs:4:17: 4:18
    }
}

fn fun() -> impl Future<Output = ()> {
    let mut _0: impl std::future::Future<Output = ()>; // return place in scope 0 at ui/async-await/issues/issue-66695-static-refs.rs:6:16: 6:16
    let mut _1: [async fn body@ui/async-await/issues/issue-66695-static-refs.rs:6:16: 12:2]; // in scope 0 at ui/async-await/issues/issue-66695-static-refs.rs:6:16: 12:2

    bb0: {
        _1 = [generator@ui/async-await/issues/issue-66695-static-refs.rs:6:16: 12:2 (#0)]; // scope 0 at ui/async-await/issues/issue-66695-static-refs.rs:6:16: 12:2
                                         // generator
                                         // + def_id: DefId(0:6 ~ issue_66695_static_refs[3915]::fun::{closure#0})
                                         // + substs: [
                                         //     std::future::ResumeTy,
                                         //     (),
                                         //     (),
                                         //     for<'a> {std::future::ResumeTy, &'a [i32; 5], [i32; 5], [async block@ui/async-await/issues/issue-66695-static-refs.rs:7:15: 7:26], (), i32, [async block@ui/async-await/issues/issue-66695-static-refs.rs:9:14: 9:28]},
                                         //     (),
                                         // ]
                                         // + movability: Static
        _0 = identity_future::<(), [async fn body@ui/async-await/issues/issue-66695-static-refs.rs:6:16: 12:2]>(move _1) -> bb1; // scope 0 at ui/async-await/issues/issue-66695-static-refs.rs:6:16: 12:2
                                         // mir::Constant
                                         // + span: ui/async-await/issues/issue-66695-static-refs.rs:6:16: 12:2
                                         // + literal: Const { ty: fn([async fn body@ui/async-await/issues/issue-66695-static-refs.rs:6:16: 12:2]) -> [async fn body@ui/async-await/issues/issue-66695-static-refs.rs:6:16: 12:2] {identity_future::<(), [async fn body@ui/async-await/issues/issue-66695-static-refs.rs:6:16: 12:2]>}, val: Value(<ZST>) }
    }

    bb1: {
        return;                          // scope 0 at ui/async-await/issues/issue-66695-static-refs.rs:12:2: 12:2
    }
}

fn fun::{closure#0}(_1: Pin<&mut [async fn body@ui/async-await/issues/issue-66695-static-refs.rs:6:16: 12:2]>, _2: &mut Context<'_>) -> Poll<()> {
    debug _task_context => _37;          // in scope 0 at ui/async-await/issues/issue-66695-static-refs.rs:6:16: 12:2
    let mut _0: std::task::Poll<()>;     // return place in scope 0 at ui/async-await/issues/issue-66695-static-refs.rs:6:16: 12:2
    let _3: i32;                         // in scope 0 at ui/async-await/issues/issue-66695-static-refs.rs:7:9: 7:10
    let _4: usize;                       // in scope 0 at ui/async-await/issues/issue-66695-static-refs.rs:7:15: 7:32
    let mut _5: [async block@ui/async-await/issues/issue-66695-static-refs.rs:7:15: 7:26]; // in scope 0 at ui/async-await/issues/issue-66695-static-refs.rs:7:26: 7:32
    let mut _6: [async block@ui/async-await/issues/issue-66695-static-refs.rs:7:15: 7:26]; // in scope 0 at ui/async-await/issues/issue-66695-static-refs.rs:7:15: 7:26
    let mut _7: [async block@ui/async-await/issues/issue-66695-static-refs.rs:7:15: 7:26]; // in scope 0 at ui/async-await/issues/issue-66695-static-refs.rs:7:15: 7:26
    let mut _8: std::task::Poll<usize>;  // in scope 0 at ui/async-await/issues/issue-66695-static-refs.rs:7:26: 7:32
    let mut _9: std::pin::Pin<&mut [async block@ui/async-await/issues/issue-66695-static-refs.rs:7:15: 7:26]>; // in scope 0 at ui/async-await/issues/issue-66695-static-refs.rs:7:26: 7:32
    let mut _10: &mut [async block@ui/async-await/issues/issue-66695-static-refs.rs:7:15: 7:26]; // in scope 0 at ui/async-await/issues/issue-66695-static-refs.rs:7:26: 7:32
    let mut _11: &mut [async block@ui/async-await/issues/issue-66695-static-refs.rs:7:15: 7:26]; // in scope 0 at ui/async-await/issues/issue-66695-static-refs.rs:7:26: 7:32
    let mut _12: &mut std::task::Context<'_>; // in scope 0 at ui/async-await/issues/issue-66695-static-refs.rs:7:15: 7:32
    let mut _13: &mut std::task::Context<'_>; // in scope 0 at ui/async-await/issues/issue-66695-static-refs.rs:7:15: 7:32
    let mut _14: &mut std::task::Context<'_>; // in scope 0 at ui/async-await/issues/issue-66695-static-refs.rs:7:26: 7:32
    let mut _15: isize;                  // in scope 0 at ui/async-await/issues/issue-66695-static-refs.rs:7:26: 7:32
    let mut _17: &mut std::task::Context<'_>; // in scope 0 at ui/async-await/issues/issue-66695-static-refs.rs:7:26: 7:32
    let mut _18: usize;                  // in scope 0 at ui/async-await/issues/issue-66695-static-refs.rs:7:13: 7:33
    let mut _19: bool;                   // in scope 0 at ui/async-await/issues/issue-66695-static-refs.rs:7:13: 7:33
    let mut _22: bool;                   // in scope 0 at ui/async-await/issues/issue-66695-static-refs.rs:9:14: 9:34
    let mut _23: [async block@ui/async-await/issues/issue-66695-static-refs.rs:9:14: 9:28]; // in scope 0 at ui/async-await/issues/issue-66695-static-refs.rs:9:28: 9:34
    let mut _24: [async block@ui/async-await/issues/issue-66695-static-refs.rs:9:14: 9:28]; // in scope 0 at ui/async-await/issues/issue-66695-static-refs.rs:9:14: 9:28
    let mut _25: [async block@ui/async-await/issues/issue-66695-static-refs.rs:9:14: 9:28]; // in scope 0 at ui/async-await/issues/issue-66695-static-refs.rs:9:14: 9:28
    let mut _26: std::task::Poll<bool>;  // in scope 0 at ui/async-await/issues/issue-66695-static-refs.rs:9:28: 9:34
    let mut _27: std::pin::Pin<&mut [async block@ui/async-await/issues/issue-66695-static-refs.rs:9:14: 9:28]>; // in scope 0 at ui/async-await/issues/issue-66695-static-refs.rs:9:28: 9:34
    let mut _28: &mut [async block@ui/async-await/issues/issue-66695-static-refs.rs:9:14: 9:28]; // in scope 0 at ui/async-await/issues/issue-66695-static-refs.rs:9:28: 9:34
    let mut _29: &mut [async block@ui/async-await/issues/issue-66695-static-refs.rs:9:14: 9:28]; // in scope 0 at ui/async-await/issues/issue-66695-static-refs.rs:9:28: 9:34
    let mut _30: &mut std::task::Context<'_>; // in scope 0 at ui/async-await/issues/issue-66695-static-refs.rs:9:14: 9:34
    let mut _31: &mut std::task::Context<'_>; // in scope 0 at ui/async-await/issues/issue-66695-static-refs.rs:9:14: 9:34
    let mut _32: &mut std::task::Context<'_>; // in scope 0 at ui/async-await/issues/issue-66695-static-refs.rs:9:28: 9:34
    let mut _33: isize;                  // in scope 0 at ui/async-await/issues/issue-66695-static-refs.rs:9:28: 9:34
    let mut _35: &mut std::task::Context<'_>; // in scope 0 at ui/async-await/issues/issue-66695-static-refs.rs:9:28: 9:34
    let mut _36: ();                     // in scope 0 at ui/async-await/issues/issue-66695-static-refs.rs:6:16: 12:2
    let mut _37: &mut std::task::Context<'_>; // in scope 0 at ui/async-await/issues/issue-66695-static-refs.rs:6:16: 12:2
    let mut _38: u32;                    // in scope 0 at ui/async-await/issues/issue-66695-static-refs.rs:6:16: 12:2
    let mut _39: &mut [async fn body@ui/async-await/issues/issue-66695-static-refs.rs:6:16: 12:2]; // in scope 0 at ui/async-await/issues/issue-66695-static-refs.rs:6:16: 12:2
    let mut _40: &mut [async fn body@ui/async-await/issues/issue-66695-static-refs.rs:6:16: 12:2]; // in scope 0 at ui/async-await/issues/issue-66695-static-refs.rs:6:16: 12:2
    let mut _41: &mut [async fn body@ui/async-await/issues/issue-66695-static-refs.rs:6:16: 12:2]; // in scope 0 at ui/async-await/issues/issue-66695-static-refs.rs:6:16: 12:2
    let mut _42: &mut [async fn body@ui/async-await/issues/issue-66695-static-refs.rs:6:16: 12:2]; // in scope 0 at ui/async-await/issues/issue-66695-static-refs.rs:6:16: 12:2
    let mut _43: &mut [async fn body@ui/async-await/issues/issue-66695-static-refs.rs:6:16: 12:2]; // in scope 0 at ui/async-await/issues/issue-66695-static-refs.rs:6:16: 12:2
    let mut _44: &mut [async fn body@ui/async-await/issues/issue-66695-static-refs.rs:6:16: 12:2]; // in scope 0 at ui/async-await/issues/issue-66695-static-refs.rs:6:16: 12:2
    let mut _45: &[i32; 5];              // in scope 0 at ui/async-await/issues/issue-66695-static-refs.rs:6:16: 12:2
    let mut _46: &mut [async fn body@ui/async-await/issues/issue-66695-static-refs.rs:6:16: 12:2]; // in scope 0 at ui/async-await/issues/issue-66695-static-refs.rs:6:16: 12:2
    let mut _47: &mut [async fn body@ui/async-await/issues/issue-66695-static-refs.rs:6:16: 12:2]; // in scope 0 at ui/async-await/issues/issue-66695-static-refs.rs:6:16: 12:2
    let mut _48: &[i32; 5];              // in scope 0 at ui/async-await/issues/issue-66695-static-refs.rs:6:16: 12:2
    let mut _49: &mut [async fn body@ui/async-await/issues/issue-66695-static-refs.rs:6:16: 12:2]; // in scope 0 at ui/async-await/issues/issue-66695-static-refs.rs:6:16: 12:2
    let mut _50: &mut [async fn body@ui/async-await/issues/issue-66695-static-refs.rs:6:16: 12:2]; // in scope 0 at ui/async-await/issues/issue-66695-static-refs.rs:6:16: 12:2
    let mut _51: &mut [async fn body@ui/async-await/issues/issue-66695-static-refs.rs:6:16: 12:2]; // in scope 0 at ui/async-await/issues/issue-66695-static-refs.rs:6:16: 12:2
    let mut _52: &mut [async fn body@ui/async-await/issues/issue-66695-static-refs.rs:6:16: 12:2]; // in scope 0 at ui/async-await/issues/issue-66695-static-refs.rs:6:16: 12:2
    let mut _53: &[i32; 5];              // in scope 0 at ui/async-await/issues/issue-66695-static-refs.rs:6:16: 12:2
    let mut _54: &mut [async fn body@ui/async-await/issues/issue-66695-static-refs.rs:6:16: 12:2]; // in scope 0 at ui/async-await/issues/issue-66695-static-refs.rs:6:16: 12:2
    let mut _55: &mut [async fn body@ui/async-await/issues/issue-66695-static-refs.rs:6:16: 12:2]; // in scope 0 at ui/async-await/issues/issue-66695-static-refs.rs:6:16: 12:2
    scope 1 {
        debug u => _3;                   // in scope 1 at ui/async-await/issues/issue-66695-static-refs.rs:7:9: 7:10
        let _20: [i32; 5];               // in scope 1 at ui/async-await/issues/issue-66695-static-refs.rs:9:9: 9:10
        let _21: &[i32; 5];              // in scope 1 at ui/async-await/issues/issue-66695-static-refs.rs:9:9: 9:10
        scope 5 {
            debug i => _20;              // in scope 5 at ui/async-await/issues/issue-66695-static-refs.rs:9:9: 9:10
            debug i => _21;              // in scope 5 at ui/async-await/issues/issue-66695-static-refs.rs:9:9: 9:10
        }
        scope 6 {
            debug __awaitee => (((*(_1.0: &mut [async fn body@ui/async-await/issues/issue-66695-static-refs.rs:6:16: 12:2])) as variant#4).1: [async block@ui/async-await/issues/issue-66695-static-refs.rs:9:14: 9:28]); // in scope 6 at ui/async-await/issues/issue-66695-static-refs.rs:9:28: 9:34
            let _34: bool;               // in scope 6 at ui/async-await/issues/issue-66695-static-refs.rs:9:14: 9:34
            scope 7 {
            }
            scope 8 {
                debug result => _34;     // in scope 8 at ui/async-await/issues/issue-66695-static-refs.rs:9:14: 9:34
            }
        }
    }
    scope 2 {
        debug __awaitee => (((*(_1.0: &mut [async fn body@ui/async-await/issues/issue-66695-static-refs.rs:6:16: 12:2])) as variant#3).1: [async block@ui/async-await/issues/issue-66695-static-refs.rs:7:15: 7:26]); // in scope 2 at ui/async-await/issues/issue-66695-static-refs.rs:7:26: 7:32
        let _16: usize;                  // in scope 2 at ui/async-await/issues/issue-66695-static-refs.rs:7:15: 7:32
        scope 3 {
        }
        scope 4 {
            debug result => _16;         // in scope 4 at ui/async-await/issues/issue-66695-static-refs.rs:7:15: 7:32
        }
    }

    bb0: {
        _39 = deref_copy (_1.0: &mut [async fn body@ui/async-await/issues/issue-66695-static-refs.rs:6:16: 12:2]); // scope 0 at ui/async-await/issues/issue-66695-static-refs.rs:6:16: 12:2
        _38 = discriminant((*_39));      // scope 0 at ui/async-await/issues/issue-66695-static-refs.rs:6:16: 12:2
        switchInt(move _38) -> [0: bb1, 1: bb26, 2: bb25, 3: bb23, 4: bb24, otherwise: bb27]; // scope 0 at ui/async-await/issues/issue-66695-static-refs.rs:6:16: 12:2
    }

    bb1: {
        _37 = move _2;                   // scope 0 at ui/async-await/issues/issue-66695-static-refs.rs:6:16: 12:2
        _40 = deref_copy (_1.0: &mut [async fn body@ui/async-await/issues/issue-66695-static-refs.rs:6:16: 12:2]); // scope 0 at ui/async-await/issues/issue-66695-static-refs.rs:7:13: 7:14
        (((*_40) as variant#3).0: &[i32; 5]) = const {alloc1: &[i32; 5]}; // scope 0 at ui/async-await/issues/issue-66695-static-refs.rs:7:13: 7:14
                                         // mir::Constant
                                         // + span: ui/async-await/issues/issue-66695-static-refs.rs:7:13: 7:14
                                         // + literal: Const { ty: &[i32; 5], val: Value(Scalar(alloc1)) }
        _7 = [generator@ui/async-await/issues/issue-66695-static-refs.rs:7:15: 7:26 (#0)]; // scope 0 at ui/async-await/issues/issue-66695-static-refs.rs:7:15: 7:26
                                         // generator
                                         // + def_id: DefId(0:7 ~ issue_66695_static_refs[3915]::fun::{closure#0}::{closure#0})
                                         // + substs: [
                                         //     std::future::ResumeTy,
                                         //     (),
                                         //     usize,
                                         //     {},
                                         //     (),
                                         // ]
                                         // + movability: Static
        _6 = identity_future::<usize, [async block@ui/async-await/issues/issue-66695-static-refs.rs:7:15: 7:26]>(move _7) -> [return: bb2, unwind: bb22]; // scope 0 at ui/async-await/issues/issue-66695-static-refs.rs:7:15: 7:26
                                         // mir::Constant
                                         // + span: ui/async-await/issues/issue-66695-static-refs.rs:7:15: 7:26
                                         // + literal: Const { ty: fn([async block@ui/async-await/issues/issue-66695-static-refs.rs:7:15: 7:26]) -> [async block@ui/async-await/issues/issue-66695-static-refs.rs:7:15: 7:26] {identity_future::<usize, [async block@ui/async-await/issues/issue-66695-static-refs.rs:7:15: 7:26]>}, val: Value(<ZST>) }
    }

    bb2: {
        _5 = <[async block@ui/async-await/issues/issue-66695-static-refs.rs:7:15: 7:26] as IntoFuture>::into_future(move _6) -> [return: bb3, unwind: bb22]; // scope 0 at ui/async-await/issues/issue-66695-static-refs.rs:7:26: 7:32
                                         // mir::Constant
                                         // + span: ui/async-await/issues/issue-66695-static-refs.rs:7:26: 7:32
                                         // + literal: Const { ty: fn([async block@ui/async-await/issues/issue-66695-static-refs.rs:7:15: 7:26]) -> <[async block@ui/async-await/issues/issue-66695-static-refs.rs:7:15: 7:26] as IntoFuture>::IntoFuture {<[async block@ui/async-await/issues/issue-66695-static-refs.rs:7:15: 7:26] as IntoFuture>::into_future}, val: Value(<ZST>) }
    }

    bb3: {
        _41 = deref_copy (_1.0: &mut [async fn body@ui/async-await/issues/issue-66695-static-refs.rs:6:16: 12:2]); // scope 0 at ui/async-await/issues/issue-66695-static-refs.rs:7:26: 7:32
        (((*_41) as variant#3).1: [async block@ui/async-await/issues/issue-66695-static-refs.rs:7:15: 7:26]) = move _5; // scope 0 at ui/async-await/issues/issue-66695-static-refs.rs:7:26: 7:32
        goto -> bb4;                     // scope 2 at ui/async-await/issues/issue-66695-static-refs.rs:7:26: 7:32
    }

    bb4: {
        _42 = deref_copy (_1.0: &mut [async fn body@ui/async-await/issues/issue-66695-static-refs.rs:6:16: 12:2]); // scope 3 at ui/async-await/issues/issue-66695-static-refs.rs:7:26: 7:32
        _11 = &mut (((*_42) as variant#3).1: [async block@ui/async-await/issues/issue-66695-static-refs.rs:7:15: 7:26]); // scope 3 at ui/async-await/issues/issue-66695-static-refs.rs:7:26: 7:32
        _10 = &mut (*_11);               // scope 3 at ui/async-await/issues/issue-66695-static-refs.rs:7:26: 7:32
        _9 = Pin::<&mut [async block@ui/async-await/issues/issue-66695-static-refs.rs:7:15: 7:26]>::new_unchecked(move _10) -> [return: bb5, unwind: bb22]; // scope 3 at ui/async-await/issues/issue-66695-static-refs.rs:7:26: 7:32
                                         // mir::Constant
                                         // + span: ui/async-await/issues/issue-66695-static-refs.rs:7:26: 7:32
                                         // + literal: Const { ty: unsafe fn(&mut [async block@ui/async-await/issues/issue-66695-static-refs.rs:7:15: 7:26]) -> Pin<&mut [async block@ui/async-await/issues/issue-66695-static-refs.rs:7:15: 7:26]> {Pin::<&mut [async block@ui/async-await/issues/issue-66695-static-refs.rs:7:15: 7:26]>::new_unchecked}, val: Value(<ZST>) }
    }

    bb5: {
        _14 = _37;                       // scope 3 at ui/async-await/issues/issue-66695-static-refs.rs:7:26: 7:32
        _13 = move _14;                  // scope 3 at ui/async-await/issues/issue-66695-static-refs.rs:7:15: 7:32
        _12 = &mut (*_13);               // scope 3 at ui/async-await/issues/issue-66695-static-refs.rs:7:15: 7:32
        _8 = <[async block@ui/async-await/issues/issue-66695-static-refs.rs:7:15: 7:26] as Future>::poll(move _9, move _12) -> [return: bb6, unwind: bb22]; // scope 3 at ui/async-await/issues/issue-66695-static-refs.rs:7:26: 7:32
                                         // mir::Constant
                                         // + span: ui/async-await/issues/issue-66695-static-refs.rs:7:26: 7:32
                                         // + literal: Const { ty: for<'a, 'b, 'c> fn(Pin<&'a mut [async block@ui/async-await/issues/issue-66695-static-refs.rs:7:15: 7:26]>, &'b mut Context<'c>) -> Poll<<[async block@ui/async-await/issues/issue-66695-static-refs.rs:7:15: 7:26] as Future>::Output> {<[async block@ui/async-await/issues/issue-66695-static-refs.rs:7:15: 7:26] as Future>::poll}, val: Value(<ZST>) }
    }

    bb6: {
        _15 = discriminant(_8);          // scope 2 at ui/async-await/issues/issue-66695-static-refs.rs:7:26: 7:32
        switchInt(move _15) -> [0: bb9, 1: bb7, otherwise: bb8]; // scope 2 at ui/async-await/issues/issue-66695-static-refs.rs:7:26: 7:32
    }

    bb7: {
        _0 = Poll::<()>::Pending;        // scope 2 at ui/async-await/issues/issue-66695-static-refs.rs:7:26: 7:32
        _43 = deref_copy (_1.0: &mut [async fn body@ui/async-await/issues/issue-66695-static-refs.rs:6:16: 12:2]); // scope 2 at ui/async-await/issues/issue-66695-static-refs.rs:7:26: 7:32
        discriminant((*_43)) = 3;        // scope 2 at ui/async-await/issues/issue-66695-static-refs.rs:7:26: 7:32
        return;                          // scope 2 at ui/async-await/issues/issue-66695-static-refs.rs:7:26: 7:32
    }

    bb8: {
        unreachable;                     // scope 2 at ui/async-await/issues/issue-66695-static-refs.rs:7:26: 7:32
    }

    bb9: {
        _16 = ((_8 as Ready).0: usize);  // scope 2 at ui/async-await/issues/issue-66695-static-refs.rs:7:15: 7:32
        _4 = _16;                        // scope 4 at ui/async-await/issues/issue-66695-static-refs.rs:7:15: 7:32
        _18 = const 5_usize;             // scope 0 at ui/async-await/issues/issue-66695-static-refs.rs:7:13: 7:33
        _19 = Lt(_4, _18);               // scope 0 at ui/async-await/issues/issue-66695-static-refs.rs:7:13: 7:33
        assert(move _19, "index out of bounds: the length is {} but the index is {}", move _18, _4) -> [success: bb10, unwind: bb22]; // scope 0 at ui/async-await/issues/issue-66695-static-refs.rs:7:13: 7:33
    }

    bb10: {
        _44 = deref_copy (_1.0: &mut [async fn body@ui/async-await/issues/issue-66695-static-refs.rs:6:16: 12:2]); // scope 0 at ui/async-await/issues/issue-66695-static-refs.rs:7:13: 7:33
        _45 = deref_copy (((*_44) as variant#3).0: &[i32; 5]); // scope 0 at ui/async-await/issues/issue-66695-static-refs.rs:7:13: 7:33
        _3 = (*_45)[_4];                 // scope 0 at ui/async-await/issues/issue-66695-static-refs.rs:7:13: 7:33
        _46 = deref_copy (_1.0: &mut [async fn body@ui/async-await/issues/issue-66695-static-refs.rs:6:16: 12:2]); // scope 1 at ui/async-await/issues/issue-66695-static-refs.rs:8:11: 8:12
        (((*_46) as variant#4).0: &[i32; 5]) = const {alloc1: &[i32; 5]}; // scope 1 at ui/async-await/issues/issue-66695-static-refs.rs:8:11: 8:12
                                         // mir::Constant
                                         // + span: ui/async-await/issues/issue-66695-static-refs.rs:8:11: 8:12
                                         // + literal: Const { ty: &[i32; 5], val: Value(Scalar(alloc1)) }
        _47 = deref_copy (_1.0: &mut [async fn body@ui/async-await/issues/issue-66695-static-refs.rs:6:16: 12:2]); // scope 1 at ui/async-await/issues/issue-66695-static-refs.rs:9:9: 9:10
        _48 = deref_copy (((*_47) as variant#4).0: &[i32; 5]); // scope 1 at ui/async-await/issues/issue-66695-static-refs.rs:9:9: 9:10
        _21 = _48;                       // scope 1 at ui/async-await/issues/issue-66695-static-refs.rs:9:9: 9:10
        _25 = [generator@ui/async-await/issues/issue-66695-static-refs.rs:9:14: 9:28 (#0)]; // scope 1 at ui/async-await/issues/issue-66695-static-refs.rs:9:14: 9:28
                                         // generator
                                         // + def_id: DefId(0:8 ~ issue_66695_static_refs[3915]::fun::{closure#0}::{closure#1})
                                         // + substs: [
                                         //     std::future::ResumeTy,
                                         //     (),
                                         //     bool,
                                         //     {},
                                         //     (),
                                         // ]
                                         // + movability: Static
        _24 = identity_future::<bool, [async block@ui/async-await/issues/issue-66695-static-refs.rs:9:14: 9:28]>(move _25) -> [return: bb11, unwind: bb22]; // scope 1 at ui/async-await/issues/issue-66695-static-refs.rs:9:14: 9:28
                                         // mir::Constant
                                         // + span: ui/async-await/issues/issue-66695-static-refs.rs:9:14: 9:28
                                         // + literal: Const { ty: fn([async block@ui/async-await/issues/issue-66695-static-refs.rs:9:14: 9:28]) -> [async block@ui/async-await/issues/issue-66695-static-refs.rs:9:14: 9:28] {identity_future::<bool, [async block@ui/async-await/issues/issue-66695-static-refs.rs:9:14: 9:28]>}, val: Value(<ZST>) }
    }

    bb11: {
        _23 = <[async block@ui/async-await/issues/issue-66695-static-refs.rs:9:14: 9:28] as IntoFuture>::into_future(move _24) -> [return: bb12, unwind: bb22]; // scope 1 at ui/async-await/issues/issue-66695-static-refs.rs:9:28: 9:34
                                         // mir::Constant
                                         // + span: ui/async-await/issues/issue-66695-static-refs.rs:9:28: 9:34
                                         // + literal: Const { ty: fn([async block@ui/async-await/issues/issue-66695-static-refs.rs:9:14: 9:28]) -> <[async block@ui/async-await/issues/issue-66695-static-refs.rs:9:14: 9:28] as IntoFuture>::IntoFuture {<[async block@ui/async-await/issues/issue-66695-static-refs.rs:9:14: 9:28] as IntoFuture>::into_future}, val: Value(<ZST>) }
    }

    bb12: {
        _49 = deref_copy (_1.0: &mut [async fn body@ui/async-await/issues/issue-66695-static-refs.rs:6:16: 12:2]); // scope 1 at ui/async-await/issues/issue-66695-static-refs.rs:9:28: 9:34
        (((*_49) as variant#4).1: [async block@ui/async-await/issues/issue-66695-static-refs.rs:9:14: 9:28]) = move _23; // scope 1 at ui/async-await/issues/issue-66695-static-refs.rs:9:28: 9:34
        goto -> bb13;                    // scope 6 at ui/async-await/issues/issue-66695-static-refs.rs:9:28: 9:34
    }

    bb13: {
        _50 = deref_copy (_1.0: &mut [async fn body@ui/async-await/issues/issue-66695-static-refs.rs:6:16: 12:2]); // scope 7 at ui/async-await/issues/issue-66695-static-refs.rs:9:28: 9:34
        _29 = &mut (((*_50) as variant#4).1: [async block@ui/async-await/issues/issue-66695-static-refs.rs:9:14: 9:28]); // scope 7 at ui/async-await/issues/issue-66695-static-refs.rs:9:28: 9:34
        _28 = &mut (*_29);               // scope 7 at ui/async-await/issues/issue-66695-static-refs.rs:9:28: 9:34
        _27 = Pin::<&mut [async block@ui/async-await/issues/issue-66695-static-refs.rs:9:14: 9:28]>::new_unchecked(move _28) -> [return: bb14, unwind: bb22]; // scope 7 at ui/async-await/issues/issue-66695-static-refs.rs:9:28: 9:34
                                         // mir::Constant
                                         // + span: ui/async-await/issues/issue-66695-static-refs.rs:9:28: 9:34
                                         // + literal: Const { ty: unsafe fn(&mut [async block@ui/async-await/issues/issue-66695-static-refs.rs:9:14: 9:28]) -> Pin<&mut [async block@ui/async-await/issues/issue-66695-static-refs.rs:9:14: 9:28]> {Pin::<&mut [async block@ui/async-await/issues/issue-66695-static-refs.rs:9:14: 9:28]>::new_unchecked}, val: Value(<ZST>) }
    }

    bb14: {
        _32 = _37;                       // scope 7 at ui/async-await/issues/issue-66695-static-refs.rs:9:28: 9:34
        _31 = move _32;                  // scope 7 at ui/async-await/issues/issue-66695-static-refs.rs:9:14: 9:34
        _30 = &mut (*_31);               // scope 7 at ui/async-await/issues/issue-66695-static-refs.rs:9:14: 9:34
        _26 = <[async block@ui/async-await/issues/issue-66695-static-refs.rs:9:14: 9:28] as Future>::poll(move _27, move _30) -> [return: bb15, unwind: bb22]; // scope 7 at ui/async-await/issues/issue-66695-static-refs.rs:9:28: 9:34
                                         // mir::Constant
                                         // + span: ui/async-await/issues/issue-66695-static-refs.rs:9:28: 9:34
                                         // + literal: Const { ty: for<'a, 'b, 'c> fn(Pin<&'a mut [async block@ui/async-await/issues/issue-66695-static-refs.rs:9:14: 9:28]>, &'b mut Context<'c>) -> Poll<<[async block@ui/async-await/issues/issue-66695-static-refs.rs:9:14: 9:28] as Future>::Output> {<[async block@ui/async-await/issues/issue-66695-static-refs.rs:9:14: 9:28] as Future>::poll}, val: Value(<ZST>) }
    }

    bb15: {
        _33 = discriminant(_26);         // scope 6 at ui/async-await/issues/issue-66695-static-refs.rs:9:28: 9:34
        switchInt(move _33) -> [0: bb18, 1: bb16, otherwise: bb17]; // scope 6 at ui/async-await/issues/issue-66695-static-refs.rs:9:28: 9:34
    }

    bb16: {
        _0 = Poll::<()>::Pending;        // scope 6 at ui/async-await/issues/issue-66695-static-refs.rs:9:28: 9:34
        _51 = deref_copy (_1.0: &mut [async fn body@ui/async-await/issues/issue-66695-static-refs.rs:6:16: 12:2]); // scope 6 at ui/async-await/issues/issue-66695-static-refs.rs:9:28: 9:34
        discriminant((*_51)) = 4;        // scope 6 at ui/async-await/issues/issue-66695-static-refs.rs:9:28: 9:34
        return;                          // scope 6 at ui/async-await/issues/issue-66695-static-refs.rs:9:28: 9:34
    }

    bb17: {
        unreachable;                     // scope 6 at ui/async-await/issues/issue-66695-static-refs.rs:9:28: 9:34
    }

    bb18: {
        _34 = ((_26 as Ready).0: bool);  // scope 6 at ui/async-await/issues/issue-66695-static-refs.rs:9:14: 9:34
        _22 = _34;                       // scope 8 at ui/async-await/issues/issue-66695-static-refs.rs:9:14: 9:34
        switchInt(move _22) -> [0: bb20, otherwise: bb19]; // scope 1 at ui/async-await/issues/issue-66695-static-refs.rs:9:14: 9:34
    }

    bb19: {
        _52 = deref_copy (_1.0: &mut [async fn body@ui/async-await/issues/issue-66695-static-refs.rs:6:16: 12:2]); // scope 1 at ui/async-await/issues/issue-66695-static-refs.rs:9:9: 9:10
        _53 = deref_copy (((*_52) as variant#4).0: &[i32; 5]); // scope 1 at ui/async-await/issues/issue-66695-static-refs.rs:9:9: 9:10
        _20 = (*_53);                    // scope 1 at ui/async-await/issues/issue-66695-static-refs.rs:9:9: 9:10
        _36 = ();                        // scope 5 at ui/async-await/issues/issue-66695-static-refs.rs:9:38: 9:40
        goto -> bb21;                    // scope 1 at ui/async-await/issues/issue-66695-static-refs.rs:9:39: 9:40
    }

    bb20: {
        _36 = ();                        // scope 1 at ui/async-await/issues/issue-66695-static-refs.rs:10:14: 10:16
        goto -> bb21;                    // scope 1 at ui/async-await/issues/issue-66695-static-refs.rs:10:14: 10:16
    }

    bb21: {
        _0 = Poll::<()>::Ready(move _36); // scope 0 at ui/async-await/issues/issue-66695-static-refs.rs:12:2: 12:2
        _54 = deref_copy (_1.0: &mut [async fn body@ui/async-await/issues/issue-66695-static-refs.rs:6:16: 12:2]); // scope 0 at ui/async-await/issues/issue-66695-static-refs.rs:12:2: 12:2
        discriminant((*_54)) = 1;        // scope 0 at ui/async-await/issues/issue-66695-static-refs.rs:12:2: 12:2
        return;                          // scope 0 at ui/async-await/issues/issue-66695-static-refs.rs:12:2: 12:2
    }

    bb22 (cleanup): {
        _55 = deref_copy (_1.0: &mut [async fn body@ui/async-await/issues/issue-66695-static-refs.rs:6:16: 12:2]); // scope 0 at ui/async-await/issues/issue-66695-static-refs.rs:6:16: 12:2
        discriminant((*_55)) = 2;        // scope 0 at ui/async-await/issues/issue-66695-static-refs.rs:6:16: 12:2
        resume;                          // scope 0 at ui/async-await/issues/issue-66695-static-refs.rs:6:16: 12:2
    }

    bb23: {
        _17 = move _2;                   // scope 0 at ui/async-await/issues/issue-66695-static-refs.rs:6:16: 12:2
        _37 = move _17;                  // scope 2 at ui/async-await/issues/issue-66695-static-refs.rs:7:26: 7:32
        goto -> bb4;                     // scope 2 at ui/async-await/issues/issue-66695-static-refs.rs:7:26: 7:32
    }

    bb24: {
        _35 = move _2;                   // scope 0 at ui/async-await/issues/issue-66695-static-refs.rs:6:16: 12:2
        _37 = move _35;                  // scope 6 at ui/async-await/issues/issue-66695-static-refs.rs:9:28: 9:34
        goto -> bb13;                    // scope 6 at ui/async-await/issues/issue-66695-static-refs.rs:9:28: 9:34
    }

    bb25: {
        assert(const false, "`async fn` resumed after panicking") -> bb25; // scope 0 at ui/async-await/issues/issue-66695-static-refs.rs:6:16: 12:2
    }

    bb26: {
        assert(const false, "`async fn` resumed after completion") -> bb26; // scope 0 at ui/async-await/issues/issue-66695-static-refs.rs:6:16: 12:2
    }

    bb27: {
        unreachable;                     // scope 0 at ui/async-await/issues/issue-66695-static-refs.rs:6:16: 12:2
    }
}

alloc1 (static: A, size: 20, align: 4) {
    0x00 │ 01 00 00 00 02 00 00 00 03 00 00 00 04 00 00 00 │ ................
    0x10 │ 05 00 00 00                                     │ ....
}

fn fun::{closure#0}::{closure#0}(_1: Pin<&mut [async block@ui/async-await/issues/issue-66695-static-refs.rs:7:15: 7:26]>, _2: &mut Context<'_>) -> Poll<usize> {
    debug _task_context => _4;           // in scope 0 at ui/async-await/issues/issue-66695-static-refs.rs:7:15: 7:26
    let mut _0: std::task::Poll<usize>;  // return place in scope 0 at ui/async-await/issues/issue-66695-static-refs.rs:7:15: 7:26
    let mut _3: usize;                   // in scope 0 at ui/async-await/issues/issue-66695-static-refs.rs:7:15: 7:26
    let mut _4: &mut std::task::Context<'_>; // in scope 0 at ui/async-await/issues/issue-66695-static-refs.rs:7:15: 7:26
    let mut _5: u32;                     // in scope 0 at ui/async-await/issues/issue-66695-static-refs.rs:7:15: 7:26
    let mut _6: &mut [async block@ui/async-await/issues/issue-66695-static-refs.rs:7:15: 7:26]; // in scope 0 at ui/async-await/issues/issue-66695-static-refs.rs:7:15: 7:26
    let mut _7: &mut [async block@ui/async-await/issues/issue-66695-static-refs.rs:7:15: 7:26]; // in scope 0 at ui/async-await/issues/issue-66695-static-refs.rs:7:15: 7:26

    bb0: {
        _6 = deref_copy (_1.0: &mut [async block@ui/async-await/issues/issue-66695-static-refs.rs:7:15: 7:26]); // scope 0 at ui/async-await/issues/issue-66695-static-refs.rs:7:15: 7:26
        _5 = discriminant((*_6));        // scope 0 at ui/async-await/issues/issue-66695-static-refs.rs:7:15: 7:26
        switchInt(move _5) -> [0: bb1, 1: bb2, otherwise: bb3]; // scope 0 at ui/async-await/issues/issue-66695-static-refs.rs:7:15: 7:26
    }

    bb1: {
        _4 = move _2;                    // scope 0 at ui/async-await/issues/issue-66695-static-refs.rs:7:15: 7:26
        _3 = const 1_usize;              // scope 0 at ui/async-await/issues/issue-66695-static-refs.rs:7:23: 7:24
        _0 = Poll::<usize>::Ready(move _3); // scope 0 at ui/async-await/issues/issue-66695-static-refs.rs:7:26: 7:26
        _7 = deref_copy (_1.0: &mut [async block@ui/async-await/issues/issue-66695-static-refs.rs:7:15: 7:26]); // scope 0 at ui/async-await/issues/issue-66695-static-refs.rs:7:26: 7:26
        discriminant((*_7)) = 1;         // scope 0 at ui/async-await/issues/issue-66695-static-refs.rs:7:26: 7:26
        return;                          // scope 0 at ui/async-await/issues/issue-66695-static-refs.rs:7:26: 7:26
    }

    bb2: {
        assert(const false, "`async fn` resumed after completion") -> bb2; // scope 0 at ui/async-await/issues/issue-66695-static-refs.rs:7:15: 7:26
    }

    bb3: {
        unreachable;                     // scope 0 at ui/async-await/issues/issue-66695-static-refs.rs:7:15: 7:26
    }
}

fn fun::{closure#0}::{closure#1}(_1: Pin<&mut [async block@ui/async-await/issues/issue-66695-static-refs.rs:9:14: 9:28]>, _2: &mut Context<'_>) -> Poll<bool> {
    debug _task_context => _4;           // in scope 0 at ui/async-await/issues/issue-66695-static-refs.rs:9:14: 9:28
    let mut _0: std::task::Poll<bool>;   // return place in scope 0 at ui/async-await/issues/issue-66695-static-refs.rs:9:14: 9:28
    let mut _3: bool;                    // in scope 0 at ui/async-await/issues/issue-66695-static-refs.rs:9:14: 9:28
    let mut _4: &mut std::task::Context<'_>; // in scope 0 at ui/async-await/issues/issue-66695-static-refs.rs:9:14: 9:28
    let mut _5: u32;                     // in scope 0 at ui/async-await/issues/issue-66695-static-refs.rs:9:14: 9:28
    let mut _6: &mut [async block@ui/async-await/issues/issue-66695-static-refs.rs:9:14: 9:28]; // in scope 0 at ui/async-await/issues/issue-66695-static-refs.rs:9:14: 9:28
    let mut _7: &mut [async block@ui/async-await/issues/issue-66695-static-refs.rs:9:14: 9:28]; // in scope 0 at ui/async-await/issues/issue-66695-static-refs.rs:9:14: 9:28

    bb0: {
        _6 = deref_copy (_1.0: &mut [async block@ui/async-await/issues/issue-66695-static-refs.rs:9:14: 9:28]); // scope 0 at ui/async-await/issues/issue-66695-static-refs.rs:9:14: 9:28
        _5 = discriminant((*_6));        // scope 0 at ui/async-await/issues/issue-66695-static-refs.rs:9:14: 9:28
        switchInt(move _5) -> [0: bb1, 1: bb2, otherwise: bb3]; // scope 0 at ui/async-await/issues/issue-66695-static-refs.rs:9:14: 9:28
    }

    bb1: {
        _4 = move _2;                    // scope 0 at ui/async-await/issues/issue-66695-static-refs.rs:9:14: 9:28
        _3 = const true;                 // scope 0 at ui/async-await/issues/issue-66695-static-refs.rs:9:22: 9:26
        _0 = Poll::<bool>::Ready(move _3); // scope 0 at ui/async-await/issues/issue-66695-static-refs.rs:9:28: 9:28
        _7 = deref_copy (_1.0: &mut [async block@ui/async-await/issues/issue-66695-static-refs.rs:9:14: 9:28]); // scope 0 at ui/async-await/issues/issue-66695-static-refs.rs:9:28: 9:28
        discriminant((*_7)) = 1;         // scope 0 at ui/async-await/issues/issue-66695-static-refs.rs:9:28: 9:28
        return;                          // scope 0 at ui/async-await/issues/issue-66695-static-refs.rs:9:28: 9:28
    }

    bb2: {
        assert(const false, "`async fn` resumed after completion") -> bb2; // scope 0 at ui/async-await/issues/issue-66695-static-refs.rs:9:14: 9:28
    }

    bb3: {
        unreachable;                     // scope 0 at ui/async-await/issues/issue-66695-static-refs.rs:9:14: 9:28
    }
}

fn main() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/async-await/issues/issue-66695-static-refs.rs:14:11: 14:11
    let _1: [async block@ui/async-await/issues/issue-66695-static-refs.rs:15:5: 17:6]; // in scope 0 at ui/async-await/issues/issue-66695-static-refs.rs:15:5: 17:6
    let mut _2: [async block@ui/async-await/issues/issue-66695-static-refs.rs:15:5: 17:6]; // in scope 0 at ui/async-await/issues/issue-66695-static-refs.rs:15:5: 17:6
    let _3: [async block@ui/async-await/issues/issue-66695-static-refs.rs:18:5: 23:6]; // in scope 0 at ui/async-await/issues/issue-66695-static-refs.rs:18:5: 23:6
    let mut _4: [async block@ui/async-await/issues/issue-66695-static-refs.rs:18:5: 23:6]; // in scope 0 at ui/async-await/issues/issue-66695-static-refs.rs:18:5: 23:6

    bb0: {
        _2 = [generator@ui/async-await/issues/issue-66695-static-refs.rs:15:5: 17:6 (#0)]; // scope 0 at ui/async-await/issues/issue-66695-static-refs.rs:15:5: 17:6
                                         // generator
                                         // + def_id: DefId(0:10 ~ issue_66695_static_refs[3915]::main::{closure#0})
                                         // + substs: [
                                         //     std::future::ResumeTy,
                                         //     (),
                                         //     (),
                                         //     for<'a> {std::future::ResumeTy, &'a [i32; 5], [i32; 5], [async block@ui/async-await/issues/issue-66695-static-refs.rs:16:19: 16:30], ()},
                                         //     (),
                                         // ]
                                         // + movability: Static
        _1 = identity_future::<(), [async block@ui/async-await/issues/issue-66695-static-refs.rs:15:5: 17:6]>(move _2) -> bb1; // scope 0 at ui/async-await/issues/issue-66695-static-refs.rs:15:5: 17:6
                                         // mir::Constant
                                         // + span: ui/async-await/issues/issue-66695-static-refs.rs:15:5: 17:6
                                         // + literal: Const { ty: fn([async block@ui/async-await/issues/issue-66695-static-refs.rs:15:5: 17:6]) -> [async block@ui/async-await/issues/issue-66695-static-refs.rs:15:5: 17:6] {identity_future::<(), [async block@ui/async-await/issues/issue-66695-static-refs.rs:15:5: 17:6]>}, val: Value(<ZST>) }
    }

    bb1: {
        _4 = [generator@ui/async-await/issues/issue-66695-static-refs.rs:18:5: 23:6 (#0)]; // scope 0 at ui/async-await/issues/issue-66695-static-refs.rs:18:5: 23:6
                                         // generator
                                         // + def_id: DefId(0:12 ~ issue_66695_static_refs[3915]::main::{closure#1})
                                         // + substs: [
                                         //     std::future::ResumeTy,
                                         //     (),
                                         //     (),
                                         //     for<'a> {std::future::ResumeTy, [i32; 5], &'a [i32; 5], [async block@ui/async-await/issues/issue-66695-static-refs.rs:20:18: 20:32], ()},
                                         //     (),
                                         // ]
                                         // + movability: Static
        _3 = identity_future::<(), [async block@ui/async-await/issues/issue-66695-static-refs.rs:18:5: 23:6]>(move _4) -> bb2; // scope 0 at ui/async-await/issues/issue-66695-static-refs.rs:18:5: 23:6
                                         // mir::Constant
                                         // + span: ui/async-await/issues/issue-66695-static-refs.rs:18:5: 23:6
                                         // + literal: Const { ty: fn([async block@ui/async-await/issues/issue-66695-static-refs.rs:18:5: 23:6]) -> [async block@ui/async-await/issues/issue-66695-static-refs.rs:18:5: 23:6] {identity_future::<(), [async block@ui/async-await/issues/issue-66695-static-refs.rs:18:5: 23:6]>}, val: Value(<ZST>) }
    }

    bb2: {
        return;                          // scope 0 at ui/async-await/issues/issue-66695-static-refs.rs:24:2: 24:2
    }
}

fn main::{closure#0}(_1: Pin<&mut [async block@ui/async-await/issues/issue-66695-static-refs.rs:15:5: 17:6]>, _2: &mut Context<'_>) -> Poll<()> {
    debug _task_context => _21;          // in scope 0 at ui/async-await/issues/issue-66695-static-refs.rs:15:5: 17:6
    let mut _0: std::task::Poll<()>;     // return place in scope 0 at ui/async-await/issues/issue-66695-static-refs.rs:15:5: 17:6
    let _3: i32;                         // in scope 0 at ui/async-await/issues/issue-66695-static-refs.rs:16:13: 16:14
    let _4: usize;                       // in scope 0 at ui/async-await/issues/issue-66695-static-refs.rs:16:19: 16:36
    let mut _5: [async block@ui/async-await/issues/issue-66695-static-refs.rs:16:19: 16:30]; // in scope 0 at ui/async-await/issues/issue-66695-static-refs.rs:16:30: 16:36
    let mut _6: [async block@ui/async-await/issues/issue-66695-static-refs.rs:16:19: 16:30]; // in scope 0 at ui/async-await/issues/issue-66695-static-refs.rs:16:19: 16:30
    let mut _7: [async block@ui/async-await/issues/issue-66695-static-refs.rs:16:19: 16:30]; // in scope 0 at ui/async-await/issues/issue-66695-static-refs.rs:16:19: 16:30
    let mut _8: std::task::Poll<usize>;  // in scope 0 at ui/async-await/issues/issue-66695-static-refs.rs:16:30: 16:36
    let mut _9: std::pin::Pin<&mut [async block@ui/async-await/issues/issue-66695-static-refs.rs:16:19: 16:30]>; // in scope 0 at ui/async-await/issues/issue-66695-static-refs.rs:16:30: 16:36
    let mut _10: &mut [async block@ui/async-await/issues/issue-66695-static-refs.rs:16:19: 16:30]; // in scope 0 at ui/async-await/issues/issue-66695-static-refs.rs:16:30: 16:36
    let mut _11: &mut [async block@ui/async-await/issues/issue-66695-static-refs.rs:16:19: 16:30]; // in scope 0 at ui/async-await/issues/issue-66695-static-refs.rs:16:30: 16:36
    let mut _12: &mut std::task::Context<'_>; // in scope 0 at ui/async-await/issues/issue-66695-static-refs.rs:16:19: 16:36
    let mut _13: &mut std::task::Context<'_>; // in scope 0 at ui/async-await/issues/issue-66695-static-refs.rs:16:19: 16:36
    let mut _14: &mut std::task::Context<'_>; // in scope 0 at ui/async-await/issues/issue-66695-static-refs.rs:16:30: 16:36
    let mut _15: isize;                  // in scope 0 at ui/async-await/issues/issue-66695-static-refs.rs:16:30: 16:36
    let mut _17: &mut std::task::Context<'_>; // in scope 0 at ui/async-await/issues/issue-66695-static-refs.rs:16:30: 16:36
    let mut _18: usize;                  // in scope 0 at ui/async-await/issues/issue-66695-static-refs.rs:16:17: 16:37
    let mut _19: bool;                   // in scope 0 at ui/async-await/issues/issue-66695-static-refs.rs:16:17: 16:37
    let mut _20: ();                     // in scope 0 at ui/async-await/issues/issue-66695-static-refs.rs:15:5: 17:6
    let mut _21: &mut std::task::Context<'_>; // in scope 0 at ui/async-await/issues/issue-66695-static-refs.rs:15:5: 17:6
    let mut _22: u32;                    // in scope 0 at ui/async-await/issues/issue-66695-static-refs.rs:15:5: 17:6
    let mut _23: &mut [async block@ui/async-await/issues/issue-66695-static-refs.rs:15:5: 17:6]; // in scope 0 at ui/async-await/issues/issue-66695-static-refs.rs:15:5: 17:6
    let mut _24: &mut [async block@ui/async-await/issues/issue-66695-static-refs.rs:15:5: 17:6]; // in scope 0 at ui/async-await/issues/issue-66695-static-refs.rs:15:5: 17:6
    let mut _25: &mut [async block@ui/async-await/issues/issue-66695-static-refs.rs:15:5: 17:6]; // in scope 0 at ui/async-await/issues/issue-66695-static-refs.rs:15:5: 17:6
    let mut _26: &mut [async block@ui/async-await/issues/issue-66695-static-refs.rs:15:5: 17:6]; // in scope 0 at ui/async-await/issues/issue-66695-static-refs.rs:15:5: 17:6
    let mut _27: &mut [async block@ui/async-await/issues/issue-66695-static-refs.rs:15:5: 17:6]; // in scope 0 at ui/async-await/issues/issue-66695-static-refs.rs:15:5: 17:6
    let mut _28: &mut [async block@ui/async-await/issues/issue-66695-static-refs.rs:15:5: 17:6]; // in scope 0 at ui/async-await/issues/issue-66695-static-refs.rs:15:5: 17:6
    let mut _29: &[i32; 5];              // in scope 0 at ui/async-await/issues/issue-66695-static-refs.rs:15:5: 17:6
    let mut _30: &mut [async block@ui/async-await/issues/issue-66695-static-refs.rs:15:5: 17:6]; // in scope 0 at ui/async-await/issues/issue-66695-static-refs.rs:15:5: 17:6
    let mut _31: &mut [async block@ui/async-await/issues/issue-66695-static-refs.rs:15:5: 17:6]; // in scope 0 at ui/async-await/issues/issue-66695-static-refs.rs:15:5: 17:6
    scope 1 {
        debug u => _3;                   // in scope 1 at ui/async-await/issues/issue-66695-static-refs.rs:16:13: 16:14
    }
    scope 2 {
        debug __awaitee => (((*(_1.0: &mut [async block@ui/async-await/issues/issue-66695-static-refs.rs:15:5: 17:6])) as variant#3).1: [async block@ui/async-await/issues/issue-66695-static-refs.rs:16:19: 16:30]); // in scope 2 at ui/async-await/issues/issue-66695-static-refs.rs:16:30: 16:36
        let _16: usize;                  // in scope 2 at ui/async-await/issues/issue-66695-static-refs.rs:16:19: 16:36
        scope 3 {
        }
        scope 4 {
            debug result => _16;         // in scope 4 at ui/async-await/issues/issue-66695-static-refs.rs:16:19: 16:36
        }
    }

    bb0: {
        _23 = deref_copy (_1.0: &mut [async block@ui/async-await/issues/issue-66695-static-refs.rs:15:5: 17:6]); // scope 0 at ui/async-await/issues/issue-66695-static-refs.rs:15:5: 17:6
        _22 = discriminant((*_23));      // scope 0 at ui/async-await/issues/issue-66695-static-refs.rs:15:5: 17:6
        switchInt(move _22) -> [0: bb1, 1: bb14, 2: bb13, 3: bb12, otherwise: bb15]; // scope 0 at ui/async-await/issues/issue-66695-static-refs.rs:15:5: 17:6
    }

    bb1: {
        _21 = move _2;                   // scope 0 at ui/async-await/issues/issue-66695-static-refs.rs:15:5: 17:6
        _24 = deref_copy (_1.0: &mut [async block@ui/async-await/issues/issue-66695-static-refs.rs:15:5: 17:6]); // scope 0 at ui/async-await/issues/issue-66695-static-refs.rs:16:17: 16:18
        (((*_24) as variant#3).0: &[i32; 5]) = const {alloc1: &[i32; 5]}; // scope 0 at ui/async-await/issues/issue-66695-static-refs.rs:16:17: 16:18
                                         // mir::Constant
                                         // + span: ui/async-await/issues/issue-66695-static-refs.rs:16:17: 16:18
                                         // + literal: Const { ty: &[i32; 5], val: Value(Scalar(alloc1)) }
        _7 = [generator@ui/async-await/issues/issue-66695-static-refs.rs:16:19: 16:30 (#0)]; // scope 0 at ui/async-await/issues/issue-66695-static-refs.rs:16:19: 16:30
                                         // generator
                                         // + def_id: DefId(0:11 ~ issue_66695_static_refs[3915]::main::{closure#0}::{closure#0})
                                         // + substs: [
                                         //     std::future::ResumeTy,
                                         //     (),
                                         //     usize,
                                         //     {},
                                         //     (),
                                         // ]
                                         // + movability: Static
        _6 = identity_future::<usize, [async block@ui/async-await/issues/issue-66695-static-refs.rs:16:19: 16:30]>(move _7) -> [return: bb2, unwind: bb11]; // scope 0 at ui/async-await/issues/issue-66695-static-refs.rs:16:19: 16:30
                                         // mir::Constant
                                         // + span: ui/async-await/issues/issue-66695-static-refs.rs:16:19: 16:30
                                         // + literal: Const { ty: fn([async block@ui/async-await/issues/issue-66695-static-refs.rs:16:19: 16:30]) -> [async block@ui/async-await/issues/issue-66695-static-refs.rs:16:19: 16:30] {identity_future::<usize, [async block@ui/async-await/issues/issue-66695-static-refs.rs:16:19: 16:30]>}, val: Value(<ZST>) }
    }

    bb2: {
        _5 = <[async block@ui/async-await/issues/issue-66695-static-refs.rs:16:19: 16:30] as IntoFuture>::into_future(move _6) -> [return: bb3, unwind: bb11]; // scope 0 at ui/async-await/issues/issue-66695-static-refs.rs:16:30: 16:36
                                         // mir::Constant
                                         // + span: ui/async-await/issues/issue-66695-static-refs.rs:16:30: 16:36
                                         // + literal: Const { ty: fn([async block@ui/async-await/issues/issue-66695-static-refs.rs:16:19: 16:30]) -> <[async block@ui/async-await/issues/issue-66695-static-refs.rs:16:19: 16:30] as IntoFuture>::IntoFuture {<[async block@ui/async-await/issues/issue-66695-static-refs.rs:16:19: 16:30] as IntoFuture>::into_future}, val: Value(<ZST>) }
    }

    bb3: {
        _25 = deref_copy (_1.0: &mut [async block@ui/async-await/issues/issue-66695-static-refs.rs:15:5: 17:6]); // scope 0 at ui/async-await/issues/issue-66695-static-refs.rs:16:30: 16:36
        (((*_25) as variant#3).1: [async block@ui/async-await/issues/issue-66695-static-refs.rs:16:19: 16:30]) = move _5; // scope 0 at ui/async-await/issues/issue-66695-static-refs.rs:16:30: 16:36
        goto -> bb4;                     // scope 2 at ui/async-await/issues/issue-66695-static-refs.rs:16:30: 16:36
    }

    bb4: {
        _26 = deref_copy (_1.0: &mut [async block@ui/async-await/issues/issue-66695-static-refs.rs:15:5: 17:6]); // scope 3 at ui/async-await/issues/issue-66695-static-refs.rs:16:30: 16:36
        _11 = &mut (((*_26) as variant#3).1: [async block@ui/async-await/issues/issue-66695-static-refs.rs:16:19: 16:30]); // scope 3 at ui/async-await/issues/issue-66695-static-refs.rs:16:30: 16:36
        _10 = &mut (*_11);               // scope 3 at ui/async-await/issues/issue-66695-static-refs.rs:16:30: 16:36
        _9 = Pin::<&mut [async block@ui/async-await/issues/issue-66695-static-refs.rs:16:19: 16:30]>::new_unchecked(move _10) -> [return: bb5, unwind: bb11]; // scope 3 at ui/async-await/issues/issue-66695-static-refs.rs:16:30: 16:36
                                         // mir::Constant
                                         // + span: ui/async-await/issues/issue-66695-static-refs.rs:16:30: 16:36
                                         // + literal: Const { ty: unsafe fn(&mut [async block@ui/async-await/issues/issue-66695-static-refs.rs:16:19: 16:30]) -> Pin<&mut [async block@ui/async-await/issues/issue-66695-static-refs.rs:16:19: 16:30]> {Pin::<&mut [async block@ui/async-await/issues/issue-66695-static-refs.rs:16:19: 16:30]>::new_unchecked}, val: Value(<ZST>) }
    }

    bb5: {
        _14 = _21;                       // scope 3 at ui/async-await/issues/issue-66695-static-refs.rs:16:30: 16:36
        _13 = move _14;                  // scope 3 at ui/async-await/issues/issue-66695-static-refs.rs:16:19: 16:36
        _12 = &mut (*_13);               // scope 3 at ui/async-await/issues/issue-66695-static-refs.rs:16:19: 16:36
        _8 = <[async block@ui/async-await/issues/issue-66695-static-refs.rs:16:19: 16:30] as Future>::poll(move _9, move _12) -> [return: bb6, unwind: bb11]; // scope 3 at ui/async-await/issues/issue-66695-static-refs.rs:16:30: 16:36
                                         // mir::Constant
                                         // + span: ui/async-await/issues/issue-66695-static-refs.rs:16:30: 16:36
                                         // + literal: Const { ty: for<'a, 'b, 'c> fn(Pin<&'a mut [async block@ui/async-await/issues/issue-66695-static-refs.rs:16:19: 16:30]>, &'b mut Context<'c>) -> Poll<<[async block@ui/async-await/issues/issue-66695-static-refs.rs:16:19: 16:30] as Future>::Output> {<[async block@ui/async-await/issues/issue-66695-static-refs.rs:16:19: 16:30] as Future>::poll}, val: Value(<ZST>) }
    }

    bb6: {
        _15 = discriminant(_8);          // scope 2 at ui/async-await/issues/issue-66695-static-refs.rs:16:30: 16:36
        switchInt(move _15) -> [0: bb9, 1: bb7, otherwise: bb8]; // scope 2 at ui/async-await/issues/issue-66695-static-refs.rs:16:30: 16:36
    }

    bb7: {
        _0 = Poll::<()>::Pending;        // scope 2 at ui/async-await/issues/issue-66695-static-refs.rs:16:30: 16:36
        _27 = deref_copy (_1.0: &mut [async block@ui/async-await/issues/issue-66695-static-refs.rs:15:5: 17:6]); // scope 2 at ui/async-await/issues/issue-66695-static-refs.rs:16:30: 16:36
        discriminant((*_27)) = 3;        // scope 2 at ui/async-await/issues/issue-66695-static-refs.rs:16:30: 16:36
        return;                          // scope 2 at ui/async-await/issues/issue-66695-static-refs.rs:16:30: 16:36
    }

    bb8: {
        unreachable;                     // scope 2 at ui/async-await/issues/issue-66695-static-refs.rs:16:30: 16:36
    }

    bb9: {
        _16 = ((_8 as Ready).0: usize);  // scope 2 at ui/async-await/issues/issue-66695-static-refs.rs:16:19: 16:36
        _4 = _16;                        // scope 4 at ui/async-await/issues/issue-66695-static-refs.rs:16:19: 16:36
        _18 = const 5_usize;             // scope 0 at ui/async-await/issues/issue-66695-static-refs.rs:16:17: 16:37
        _19 = Lt(_4, _18);               // scope 0 at ui/async-await/issues/issue-66695-static-refs.rs:16:17: 16:37
        assert(move _19, "index out of bounds: the length is {} but the index is {}", move _18, _4) -> [success: bb10, unwind: bb11]; // scope 0 at ui/async-await/issues/issue-66695-static-refs.rs:16:17: 16:37
    }

    bb10: {
        _28 = deref_copy (_1.0: &mut [async block@ui/async-await/issues/issue-66695-static-refs.rs:15:5: 17:6]); // scope 0 at ui/async-await/issues/issue-66695-static-refs.rs:16:17: 16:37
        _29 = deref_copy (((*_28) as variant#3).0: &[i32; 5]); // scope 0 at ui/async-await/issues/issue-66695-static-refs.rs:16:17: 16:37
        _3 = (*_29)[_4];                 // scope 0 at ui/async-await/issues/issue-66695-static-refs.rs:16:17: 16:37
        _20 = const ();                  // scope 0 at ui/async-await/issues/issue-66695-static-refs.rs:15:11: 17:6
        _0 = Poll::<()>::Ready(move _20); // scope 0 at ui/async-await/issues/issue-66695-static-refs.rs:17:6: 17:6
        _30 = deref_copy (_1.0: &mut [async block@ui/async-await/issues/issue-66695-static-refs.rs:15:5: 17:6]); // scope 0 at ui/async-await/issues/issue-66695-static-refs.rs:17:6: 17:6
        discriminant((*_30)) = 1;        // scope 0 at ui/async-await/issues/issue-66695-static-refs.rs:17:6: 17:6
        return;                          // scope 0 at ui/async-await/issues/issue-66695-static-refs.rs:17:6: 17:6
    }

    bb11 (cleanup): {
        _31 = deref_copy (_1.0: &mut [async block@ui/async-await/issues/issue-66695-static-refs.rs:15:5: 17:6]); // scope 0 at ui/async-await/issues/issue-66695-static-refs.rs:15:5: 17:6
        discriminant((*_31)) = 2;        // scope 0 at ui/async-await/issues/issue-66695-static-refs.rs:15:5: 17:6
        resume;                          // scope 0 at ui/async-await/issues/issue-66695-static-refs.rs:15:5: 17:6
    }

    bb12: {
        _17 = move _2;                   // scope 0 at ui/async-await/issues/issue-66695-static-refs.rs:15:5: 17:6
        _21 = move _17;                  // scope 2 at ui/async-await/issues/issue-66695-static-refs.rs:16:30: 16:36
        goto -> bb4;                     // scope 2 at ui/async-await/issues/issue-66695-static-refs.rs:16:30: 16:36
    }

    bb13: {
        assert(const false, "`async fn` resumed after panicking") -> bb13; // scope 0 at ui/async-await/issues/issue-66695-static-refs.rs:15:5: 17:6
    }

    bb14: {
        assert(const false, "`async fn` resumed after completion") -> bb14; // scope 0 at ui/async-await/issues/issue-66695-static-refs.rs:15:5: 17:6
    }

    bb15: {
        unreachable;                     // scope 0 at ui/async-await/issues/issue-66695-static-refs.rs:15:5: 17:6
    }
}

alloc1 (static: A, size: 20, align: 4) {
    0x00 │ 01 00 00 00 02 00 00 00 03 00 00 00 04 00 00 00 │ ................
    0x10 │ 05 00 00 00                                     │ ....
}

fn main::{closure#0}::{closure#0}(_1: Pin<&mut [async block@ui/async-await/issues/issue-66695-static-refs.rs:16:19: 16:30]>, _2: &mut Context<'_>) -> Poll<usize> {
    debug _task_context => _4;           // in scope 0 at ui/async-await/issues/issue-66695-static-refs.rs:16:19: 16:30
    let mut _0: std::task::Poll<usize>;  // return place in scope 0 at ui/async-await/issues/issue-66695-static-refs.rs:16:19: 16:30
    let mut _3: usize;                   // in scope 0 at ui/async-await/issues/issue-66695-static-refs.rs:16:19: 16:30
    let mut _4: &mut std::task::Context<'_>; // in scope 0 at ui/async-await/issues/issue-66695-static-refs.rs:16:19: 16:30
    let mut _5: u32;                     // in scope 0 at ui/async-await/issues/issue-66695-static-refs.rs:16:19: 16:30
    let mut _6: &mut [async block@ui/async-await/issues/issue-66695-static-refs.rs:16:19: 16:30]; // in scope 0 at ui/async-await/issues/issue-66695-static-refs.rs:16:19: 16:30
    let mut _7: &mut [async block@ui/async-await/issues/issue-66695-static-refs.rs:16:19: 16:30]; // in scope 0 at ui/async-await/issues/issue-66695-static-refs.rs:16:19: 16:30

    bb0: {
        _6 = deref_copy (_1.0: &mut [async block@ui/async-await/issues/issue-66695-static-refs.rs:16:19: 16:30]); // scope 0 at ui/async-await/issues/issue-66695-static-refs.rs:16:19: 16:30
        _5 = discriminant((*_6));        // scope 0 at ui/async-await/issues/issue-66695-static-refs.rs:16:19: 16:30
        switchInt(move _5) -> [0: bb1, 1: bb2, otherwise: bb3]; // scope 0 at ui/async-await/issues/issue-66695-static-refs.rs:16:19: 16:30
    }

    bb1: {
        _4 = move _2;                    // scope 0 at ui/async-await/issues/issue-66695-static-refs.rs:16:19: 16:30
        _3 = const 1_usize;              // scope 0 at ui/async-await/issues/issue-66695-static-refs.rs:16:27: 16:28
        _0 = Poll::<usize>::Ready(move _3); // scope 0 at ui/async-await/issues/issue-66695-static-refs.rs:16:30: 16:30
        _7 = deref_copy (_1.0: &mut [async block@ui/async-await/issues/issue-66695-static-refs.rs:16:19: 16:30]); // scope 0 at ui/async-await/issues/issue-66695-static-refs.rs:16:30: 16:30
        discriminant((*_7)) = 1;         // scope 0 at ui/async-await/issues/issue-66695-static-refs.rs:16:30: 16:30
        return;                          // scope 0 at ui/async-await/issues/issue-66695-static-refs.rs:16:30: 16:30
    }

    bb2: {
        assert(const false, "`async fn` resumed after completion") -> bb2; // scope 0 at ui/async-await/issues/issue-66695-static-refs.rs:16:19: 16:30
    }

    bb3: {
        unreachable;                     // scope 0 at ui/async-await/issues/issue-66695-static-refs.rs:16:19: 16:30
    }
}

fn main::{closure#1}(_1: Pin<&mut [async block@ui/async-await/issues/issue-66695-static-refs.rs:18:5: 23:6]>, _2: &mut Context<'_>) -> Poll<()> {
    debug _task_context => _20;          // in scope 0 at ui/async-await/issues/issue-66695-static-refs.rs:18:5: 23:6
    let mut _0: std::task::Poll<()>;     // return place in scope 0 at ui/async-await/issues/issue-66695-static-refs.rs:18:5: 23:6
    let _3: [i32; 5];                    // in scope 0 at ui/async-await/issues/issue-66695-static-refs.rs:20:13: 20:14
    let _4: &[i32; 5];                   // in scope 0 at ui/async-await/issues/issue-66695-static-refs.rs:20:13: 20:14
    let mut _5: bool;                    // in scope 0 at ui/async-await/issues/issue-66695-static-refs.rs:20:18: 20:38
    let mut _6: [async block@ui/async-await/issues/issue-66695-static-refs.rs:20:18: 20:32]; // in scope 0 at ui/async-await/issues/issue-66695-static-refs.rs:20:32: 20:38
    let mut _7: [async block@ui/async-await/issues/issue-66695-static-refs.rs:20:18: 20:32]; // in scope 0 at ui/async-await/issues/issue-66695-static-refs.rs:20:18: 20:32
    let mut _8: [async block@ui/async-await/issues/issue-66695-static-refs.rs:20:18: 20:32]; // in scope 0 at ui/async-await/issues/issue-66695-static-refs.rs:20:18: 20:32
    let mut _9: std::task::Poll<bool>;   // in scope 0 at ui/async-await/issues/issue-66695-static-refs.rs:20:32: 20:38
    let mut _10: std::pin::Pin<&mut [async block@ui/async-await/issues/issue-66695-static-refs.rs:20:18: 20:32]>; // in scope 0 at ui/async-await/issues/issue-66695-static-refs.rs:20:32: 20:38
    let mut _11: &mut [async block@ui/async-await/issues/issue-66695-static-refs.rs:20:18: 20:32]; // in scope 0 at ui/async-await/issues/issue-66695-static-refs.rs:20:32: 20:38
    let mut _12: &mut [async block@ui/async-await/issues/issue-66695-static-refs.rs:20:18: 20:32]; // in scope 0 at ui/async-await/issues/issue-66695-static-refs.rs:20:32: 20:38
    let mut _13: &mut std::task::Context<'_>; // in scope 0 at ui/async-await/issues/issue-66695-static-refs.rs:20:18: 20:38
    let mut _14: &mut std::task::Context<'_>; // in scope 0 at ui/async-await/issues/issue-66695-static-refs.rs:20:18: 20:38
    let mut _15: &mut std::task::Context<'_>; // in scope 0 at ui/async-await/issues/issue-66695-static-refs.rs:20:32: 20:38
    let mut _16: isize;                  // in scope 0 at ui/async-await/issues/issue-66695-static-refs.rs:20:32: 20:38
    let mut _18: &mut std::task::Context<'_>; // in scope 0 at ui/async-await/issues/issue-66695-static-refs.rs:20:32: 20:38
    let mut _19: ();                     // in scope 0 at ui/async-await/issues/issue-66695-static-refs.rs:18:5: 23:6
    let mut _20: &mut std::task::Context<'_>; // in scope 0 at ui/async-await/issues/issue-66695-static-refs.rs:18:5: 23:6
    let mut _21: u32;                    // in scope 0 at ui/async-await/issues/issue-66695-static-refs.rs:18:5: 23:6
    let mut _22: &mut [async block@ui/async-await/issues/issue-66695-static-refs.rs:18:5: 23:6]; // in scope 0 at ui/async-await/issues/issue-66695-static-refs.rs:18:5: 23:6
    let mut _23: &mut [async block@ui/async-await/issues/issue-66695-static-refs.rs:18:5: 23:6]; // in scope 0 at ui/async-await/issues/issue-66695-static-refs.rs:18:5: 23:6
    let mut _24: &mut [async block@ui/async-await/issues/issue-66695-static-refs.rs:18:5: 23:6]; // in scope 0 at ui/async-await/issues/issue-66695-static-refs.rs:18:5: 23:6
    let mut _25: &[i32; 5];              // in scope 0 at ui/async-await/issues/issue-66695-static-refs.rs:18:5: 23:6
    let mut _26: &mut [async block@ui/async-await/issues/issue-66695-static-refs.rs:18:5: 23:6]; // in scope 0 at ui/async-await/issues/issue-66695-static-refs.rs:18:5: 23:6
    let mut _27: &mut [async block@ui/async-await/issues/issue-66695-static-refs.rs:18:5: 23:6]; // in scope 0 at ui/async-await/issues/issue-66695-static-refs.rs:18:5: 23:6
    let mut _28: &mut [async block@ui/async-await/issues/issue-66695-static-refs.rs:18:5: 23:6]; // in scope 0 at ui/async-await/issues/issue-66695-static-refs.rs:18:5: 23:6
    let mut _29: &mut [async block@ui/async-await/issues/issue-66695-static-refs.rs:18:5: 23:6]; // in scope 0 at ui/async-await/issues/issue-66695-static-refs.rs:18:5: 23:6
    let mut _30: &[i32; 5];              // in scope 0 at ui/async-await/issues/issue-66695-static-refs.rs:18:5: 23:6
    let mut _31: &mut [async block@ui/async-await/issues/issue-66695-static-refs.rs:18:5: 23:6]; // in scope 0 at ui/async-await/issues/issue-66695-static-refs.rs:18:5: 23:6
    let mut _32: &mut [async block@ui/async-await/issues/issue-66695-static-refs.rs:18:5: 23:6]; // in scope 0 at ui/async-await/issues/issue-66695-static-refs.rs:18:5: 23:6
    scope 1 {
        debug i => _3;                   // in scope 1 at ui/async-await/issues/issue-66695-static-refs.rs:20:13: 20:14
        debug i => _4;                   // in scope 1 at ui/async-await/issues/issue-66695-static-refs.rs:20:13: 20:14
    }
    scope 2 {
        debug __awaitee => (((*(_1.0: &mut [async block@ui/async-await/issues/issue-66695-static-refs.rs:18:5: 23:6])) as variant#3).1: [async block@ui/async-await/issues/issue-66695-static-refs.rs:20:18: 20:32]); // in scope 2 at ui/async-await/issues/issue-66695-static-refs.rs:20:32: 20:38
        let _17: bool;                   // in scope 2 at ui/async-await/issues/issue-66695-static-refs.rs:20:18: 20:38
        scope 3 {
        }
        scope 4 {
            debug result => _17;         // in scope 4 at ui/async-await/issues/issue-66695-static-refs.rs:20:18: 20:38
        }
    }

    bb0: {
        _22 = deref_copy (_1.0: &mut [async block@ui/async-await/issues/issue-66695-static-refs.rs:18:5: 23:6]); // scope 0 at ui/async-await/issues/issue-66695-static-refs.rs:18:5: 23:6
        _21 = discriminant((*_22));      // scope 0 at ui/async-await/issues/issue-66695-static-refs.rs:18:5: 23:6
        switchInt(move _21) -> [0: bb1, 1: bb16, 2: bb15, 3: bb14, otherwise: bb17]; // scope 0 at ui/async-await/issues/issue-66695-static-refs.rs:18:5: 23:6
    }

    bb1: {
        _20 = move _2;                   // scope 0 at ui/async-await/issues/issue-66695-static-refs.rs:18:5: 23:6
        _23 = deref_copy (_1.0: &mut [async block@ui/async-await/issues/issue-66695-static-refs.rs:18:5: 23:6]); // scope 0 at ui/async-await/issues/issue-66695-static-refs.rs:19:15: 19:16
        (((*_23) as variant#3).0: &[i32; 5]) = const {alloc1: &[i32; 5]}; // scope 0 at ui/async-await/issues/issue-66695-static-refs.rs:19:15: 19:16
                                         // mir::Constant
                                         // + span: ui/async-await/issues/issue-66695-static-refs.rs:19:15: 19:16
                                         // + literal: Const { ty: &[i32; 5], val: Value(Scalar(alloc1)) }
        _24 = deref_copy (_1.0: &mut [async block@ui/async-await/issues/issue-66695-static-refs.rs:18:5: 23:6]); // scope 0 at ui/async-await/issues/issue-66695-static-refs.rs:20:13: 20:14
        _25 = deref_copy (((*_24) as variant#3).0: &[i32; 5]); // scope 0 at ui/async-await/issues/issue-66695-static-refs.rs:20:13: 20:14
        _4 = _25;                        // scope 0 at ui/async-await/issues/issue-66695-static-refs.rs:20:13: 20:14
        _8 = [generator@ui/async-await/issues/issue-66695-static-refs.rs:20:18: 20:32 (#0)]; // scope 0 at ui/async-await/issues/issue-66695-static-refs.rs:20:18: 20:32
                                         // generator
                                         // + def_id: DefId(0:13 ~ issue_66695_static_refs[3915]::main::{closure#1}::{closure#0})
                                         // + substs: [
                                         //     std::future::ResumeTy,
                                         //     (),
                                         //     bool,
                                         //     {},
                                         //     (),
                                         // ]
                                         // + movability: Static
        _7 = identity_future::<bool, [async block@ui/async-await/issues/issue-66695-static-refs.rs:20:18: 20:32]>(move _8) -> [return: bb2, unwind: bb13]; // scope 0 at ui/async-await/issues/issue-66695-static-refs.rs:20:18: 20:32
                                         // mir::Constant
                                         // + span: ui/async-await/issues/issue-66695-static-refs.rs:20:18: 20:32
                                         // + literal: Const { ty: fn([async block@ui/async-await/issues/issue-66695-static-refs.rs:20:18: 20:32]) -> [async block@ui/async-await/issues/issue-66695-static-refs.rs:20:18: 20:32] {identity_future::<bool, [async block@ui/async-await/issues/issue-66695-static-refs.rs:20:18: 20:32]>}, val: Value(<ZST>) }
    }

    bb2: {
        _6 = <[async block@ui/async-await/issues/issue-66695-static-refs.rs:20:18: 20:32] as IntoFuture>::into_future(move _7) -> [return: bb3, unwind: bb13]; // scope 0 at ui/async-await/issues/issue-66695-static-refs.rs:20:32: 20:38
                                         // mir::Constant
                                         // + span: ui/async-await/issues/issue-66695-static-refs.rs:20:32: 20:38
                                         // + literal: Const { ty: fn([async block@ui/async-await/issues/issue-66695-static-refs.rs:20:18: 20:32]) -> <[async block@ui/async-await/issues/issue-66695-static-refs.rs:20:18: 20:32] as IntoFuture>::IntoFuture {<[async block@ui/async-await/issues/issue-66695-static-refs.rs:20:18: 20:32] as IntoFuture>::into_future}, val: Value(<ZST>) }
    }

    bb3: {
        _26 = deref_copy (_1.0: &mut [async block@ui/async-await/issues/issue-66695-static-refs.rs:18:5: 23:6]); // scope 0 at ui/async-await/issues/issue-66695-static-refs.rs:20:32: 20:38
        (((*_26) as variant#3).1: [async block@ui/async-await/issues/issue-66695-static-refs.rs:20:18: 20:32]) = move _6; // scope 0 at ui/async-await/issues/issue-66695-static-refs.rs:20:32: 20:38
        goto -> bb4;                     // scope 2 at ui/async-await/issues/issue-66695-static-refs.rs:20:32: 20:38
    }

    bb4: {
        _27 = deref_copy (_1.0: &mut [async block@ui/async-await/issues/issue-66695-static-refs.rs:18:5: 23:6]); // scope 3 at ui/async-await/issues/issue-66695-static-refs.rs:20:32: 20:38
        _12 = &mut (((*_27) as variant#3).1: [async block@ui/async-await/issues/issue-66695-static-refs.rs:20:18: 20:32]); // scope 3 at ui/async-await/issues/issue-66695-static-refs.rs:20:32: 20:38
        _11 = &mut (*_12);               // scope 3 at ui/async-await/issues/issue-66695-static-refs.rs:20:32: 20:38
        _10 = Pin::<&mut [async block@ui/async-await/issues/issue-66695-static-refs.rs:20:18: 20:32]>::new_unchecked(move _11) -> [return: bb5, unwind: bb13]; // scope 3 at ui/async-await/issues/issue-66695-static-refs.rs:20:32: 20:38
                                         // mir::Constant
                                         // + span: ui/async-await/issues/issue-66695-static-refs.rs:20:32: 20:38
                                         // + literal: Const { ty: unsafe fn(&mut [async block@ui/async-await/issues/issue-66695-static-refs.rs:20:18: 20:32]) -> Pin<&mut [async block@ui/async-await/issues/issue-66695-static-refs.rs:20:18: 20:32]> {Pin::<&mut [async block@ui/async-await/issues/issue-66695-static-refs.rs:20:18: 20:32]>::new_unchecked}, val: Value(<ZST>) }
    }

    bb5: {
        _15 = _20;                       // scope 3 at ui/async-await/issues/issue-66695-static-refs.rs:20:32: 20:38
        _14 = move _15;                  // scope 3 at ui/async-await/issues/issue-66695-static-refs.rs:20:18: 20:38
        _13 = &mut (*_14);               // scope 3 at ui/async-await/issues/issue-66695-static-refs.rs:20:18: 20:38
        _9 = <[async block@ui/async-await/issues/issue-66695-static-refs.rs:20:18: 20:32] as Future>::poll(move _10, move _13) -> [return: bb6, unwind: bb13]; // scope 3 at ui/async-await/issues/issue-66695-static-refs.rs:20:32: 20:38
                                         // mir::Constant
                                         // + span: ui/async-await/issues/issue-66695-static-refs.rs:20:32: 20:38
                                         // + literal: Const { ty: for<'a, 'b, 'c> fn(Pin<&'a mut [async block@ui/async-await/issues/issue-66695-static-refs.rs:20:18: 20:32]>, &'b mut Context<'c>) -> Poll<<[async block@ui/async-await/issues/issue-66695-static-refs.rs:20:18: 20:32] as Future>::Output> {<[async block@ui/async-await/issues/issue-66695-static-refs.rs:20:18: 20:32] as Future>::poll}, val: Value(<ZST>) }
    }

    bb6: {
        _16 = discriminant(_9);          // scope 2 at ui/async-await/issues/issue-66695-static-refs.rs:20:32: 20:38
        switchInt(move _16) -> [0: bb9, 1: bb7, otherwise: bb8]; // scope 2 at ui/async-await/issues/issue-66695-static-refs.rs:20:32: 20:38
    }

    bb7: {
        _0 = Poll::<()>::Pending;        // scope 2 at ui/async-await/issues/issue-66695-static-refs.rs:20:32: 20:38
        _28 = deref_copy (_1.0: &mut [async block@ui/async-await/issues/issue-66695-static-refs.rs:18:5: 23:6]); // scope 2 at ui/async-await/issues/issue-66695-static-refs.rs:20:32: 20:38
        discriminant((*_28)) = 3;        // scope 2 at ui/async-await/issues/issue-66695-static-refs.rs:20:32: 20:38
        return;                          // scope 2 at ui/async-await/issues/issue-66695-static-refs.rs:20:32: 20:38
    }

    bb8: {
        unreachable;                     // scope 2 at ui/async-await/issues/issue-66695-static-refs.rs:20:32: 20:38
    }

    bb9: {
        _17 = ((_9 as Ready).0: bool);   // scope 2 at ui/async-await/issues/issue-66695-static-refs.rs:20:18: 20:38
        _5 = _17;                        // scope 4 at ui/async-await/issues/issue-66695-static-refs.rs:20:18: 20:38
        switchInt(move _5) -> [0: bb11, otherwise: bb10]; // scope 0 at ui/async-await/issues/issue-66695-static-refs.rs:20:18: 20:38
    }

    bb10: {
        _29 = deref_copy (_1.0: &mut [async block@ui/async-await/issues/issue-66695-static-refs.rs:18:5: 23:6]); // scope 0 at ui/async-await/issues/issue-66695-static-refs.rs:20:13: 20:14
        _30 = deref_copy (((*_29) as variant#3).0: &[i32; 5]); // scope 0 at ui/async-await/issues/issue-66695-static-refs.rs:20:13: 20:14
        _3 = (*_30);                     // scope 0 at ui/async-await/issues/issue-66695-static-refs.rs:20:13: 20:14
        _19 = ();                        // scope 1 at ui/async-await/issues/issue-66695-static-refs.rs:20:42: 20:44
        goto -> bb12;                    // scope 0 at ui/async-await/issues/issue-66695-static-refs.rs:20:43: 20:44
    }

    bb11: {
        _19 = ();                        // scope 0 at ui/async-await/issues/issue-66695-static-refs.rs:21:18: 21:20
        goto -> bb12;                    // scope 0 at ui/async-await/issues/issue-66695-static-refs.rs:21:18: 21:20
    }

    bb12: {
        _0 = Poll::<()>::Ready(move _19); // scope 0 at ui/async-await/issues/issue-66695-static-refs.rs:23:6: 23:6
        _31 = deref_copy (_1.0: &mut [async block@ui/async-await/issues/issue-66695-static-refs.rs:18:5: 23:6]); // scope 0 at ui/async-await/issues/issue-66695-static-refs.rs:23:6: 23:6
        discriminant((*_31)) = 1;        // scope 0 at ui/async-await/issues/issue-66695-static-refs.rs:23:6: 23:6
        return;                          // scope 0 at ui/async-await/issues/issue-66695-static-refs.rs:23:6: 23:6
    }

    bb13 (cleanup): {
        _32 = deref_copy (_1.0: &mut [async block@ui/async-await/issues/issue-66695-static-refs.rs:18:5: 23:6]); // scope 0 at ui/async-await/issues/issue-66695-static-refs.rs:18:5: 23:6
        discriminant((*_32)) = 2;        // scope 0 at ui/async-await/issues/issue-66695-static-refs.rs:18:5: 23:6
        resume;                          // scope 0 at ui/async-await/issues/issue-66695-static-refs.rs:18:5: 23:6
    }

    bb14: {
        _18 = move _2;                   // scope 0 at ui/async-await/issues/issue-66695-static-refs.rs:18:5: 23:6
        _20 = move _18;                  // scope 2 at ui/async-await/issues/issue-66695-static-refs.rs:20:32: 20:38
        goto -> bb4;                     // scope 2 at ui/async-await/issues/issue-66695-static-refs.rs:20:32: 20:38
    }

    bb15: {
        assert(const false, "`async fn` resumed after panicking") -> bb15; // scope 0 at ui/async-await/issues/issue-66695-static-refs.rs:18:5: 23:6
    }

    bb16: {
        assert(const false, "`async fn` resumed after completion") -> bb16; // scope 0 at ui/async-await/issues/issue-66695-static-refs.rs:18:5: 23:6
    }

    bb17: {
        unreachable;                     // scope 0 at ui/async-await/issues/issue-66695-static-refs.rs:18:5: 23:6
    }
}

alloc1 (static: A, size: 20, align: 4) {
    0x00 │ 01 00 00 00 02 00 00 00 03 00 00 00 04 00 00 00 │ ................
    0x10 │ 05 00 00 00                                     │ ....
}

fn main::{closure#1}::{closure#0}(_1: Pin<&mut [async block@ui/async-await/issues/issue-66695-static-refs.rs:20:18: 20:32]>, _2: &mut Context<'_>) -> Poll<bool> {
    debug _task_context => _4;           // in scope 0 at ui/async-await/issues/issue-66695-static-refs.rs:20:18: 20:32
    let mut _0: std::task::Poll<bool>;   // return place in scope 0 at ui/async-await/issues/issue-66695-static-refs.rs:20:18: 20:32
    let mut _3: bool;                    // in scope 0 at ui/async-await/issues/issue-66695-static-refs.rs:20:18: 20:32
    let mut _4: &mut std::task::Context<'_>; // in scope 0 at ui/async-await/issues/issue-66695-static-refs.rs:20:18: 20:32
    let mut _5: u32;                     // in scope 0 at ui/async-await/issues/issue-66695-static-refs.rs:20:18: 20:32
    let mut _6: &mut [async block@ui/async-await/issues/issue-66695-static-refs.rs:20:18: 20:32]; // in scope 0 at ui/async-await/issues/issue-66695-static-refs.rs:20:18: 20:32
    let mut _7: &mut [async block@ui/async-await/issues/issue-66695-static-refs.rs:20:18: 20:32]; // in scope 0 at ui/async-await/issues/issue-66695-static-refs.rs:20:18: 20:32

    bb0: {
        _6 = deref_copy (_1.0: &mut [async block@ui/async-await/issues/issue-66695-static-refs.rs:20:18: 20:32]); // scope 0 at ui/async-await/issues/issue-66695-static-refs.rs:20:18: 20:32
        _5 = discriminant((*_6));        // scope 0 at ui/async-await/issues/issue-66695-static-refs.rs:20:18: 20:32
        switchInt(move _5) -> [0: bb1, 1: bb2, otherwise: bb3]; // scope 0 at ui/async-await/issues/issue-66695-static-refs.rs:20:18: 20:32
    }

    bb1: {
        _4 = move _2;                    // scope 0 at ui/async-await/issues/issue-66695-static-refs.rs:20:18: 20:32
        _3 = const true;                 // scope 0 at ui/async-await/issues/issue-66695-static-refs.rs:20:26: 20:30
        _0 = Poll::<bool>::Ready(move _3); // scope 0 at ui/async-await/issues/issue-66695-static-refs.rs:20:32: 20:32
        _7 = deref_copy (_1.0: &mut [async block@ui/async-await/issues/issue-66695-static-refs.rs:20:18: 20:32]); // scope 0 at ui/async-await/issues/issue-66695-static-refs.rs:20:32: 20:32
        discriminant((*_7)) = 1;         // scope 0 at ui/async-await/issues/issue-66695-static-refs.rs:20:32: 20:32
        return;                          // scope 0 at ui/async-await/issues/issue-66695-static-refs.rs:20:32: 20:32
    }

    bb2: {
        assert(const false, "`async fn` resumed after completion") -> bb2; // scope 0 at ui/async-await/issues/issue-66695-static-refs.rs:20:18: 20:32
    }

    bb3: {
        unreachable;                     // scope 0 at ui/async-await/issues/issue-66695-static-refs.rs:20:18: 20:32
    }
}
