// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
static mut A: [i32; 5] = {
    let mut _0: [i32; 5];                // return place in scope 0 at ui/async-await/issues/issue-67611-static-mut-refs.rs:8:15: 8:23

    bb0: {
        _0 = [const 1_i32, const 2_i32, const 3_i32, const 4_i32, const 5_i32]; // scope 0 at ui/async-await/issues/issue-67611-static-mut-refs.rs:8:26: 8:41
        return;                          // scope 0 at ui/async-await/issues/issue-67611-static-mut-refs.rs:8:1: 8:42
    }
}

A::{constant#0}: usize = {
    let mut _0: usize;                   // return place in scope 0 at ui/async-await/issues/issue-67611-static-mut-refs.rs:8:21: 8:22

    bb0: {
        _0 = const 5_usize;              // scope 0 at ui/async-await/issues/issue-67611-static-mut-refs.rs:8:21: 8:22
        return;                          // scope 0 at ui/async-await/issues/issue-67611-static-mut-refs.rs:8:21: 8:22
    }
}

fn is_send_sync(_1: T) -> () {
    let mut _0: ();                      // return place in scope 0 at ui/async-await/issues/issue-67611-static-mut-refs.rs:10:39: 10:39

    bb0: {
        drop(_1) -> bb1;                 // scope 0 at ui/async-await/issues/issue-67611-static-mut-refs.rs:10:40: 10:41
    }

    bb1: {
        return;                          // scope 0 at ui/async-await/issues/issue-67611-static-mut-refs.rs:10:41: 10:41
    }
}

fn fun() -> impl Future<Output = ()> {
    let mut _0: impl std::future::Future<Output = ()>; // return place in scope 0 at ui/async-await/issues/issue-67611-static-mut-refs.rs:12:16: 12:16
    let mut _1: [async fn body@ui/async-await/issues/issue-67611-static-mut-refs.rs:12:16: 20:2]; // in scope 0 at ui/async-await/issues/issue-67611-static-mut-refs.rs:12:16: 20:2

    bb0: {
        _1 = [generator@ui/async-await/issues/issue-67611-static-mut-refs.rs:12:16: 20:2 (#0)]; // scope 0 at ui/async-await/issues/issue-67611-static-mut-refs.rs:12:16: 20:2
                                         // generator
                                         // + def_id: DefId(0:8 ~ issue_67611_static_mut_refs[1fee]::fun::{closure#0})
                                         // + substs: [
                                         //     std::future::ResumeTy,
                                         //     (),
                                         //     (),
                                         //     for<'a> {std::future::ResumeTy, &'a [i32; 5], [i32; 5], [async block@ui/async-await/issues/issue-67611-static-mut-refs.rs:13:24: 13:35], (), i32, [async block@ui/async-await/issues/issue-67611-static-mut-refs.rs:16:18: 16:32]},
                                         //     (),
                                         // ]
                                         // + movability: Static
        _0 = identity_future::<(), [async fn body@ui/async-await/issues/issue-67611-static-mut-refs.rs:12:16: 20:2]>(move _1) -> bb1; // scope 0 at ui/async-await/issues/issue-67611-static-mut-refs.rs:12:16: 20:2
                                         // mir::Constant
                                         // + span: ui/async-await/issues/issue-67611-static-mut-refs.rs:12:16: 20:2
                                         // + literal: Const { ty: fn([async fn body@ui/async-await/issues/issue-67611-static-mut-refs.rs:12:16: 20:2]) -> [async fn body@ui/async-await/issues/issue-67611-static-mut-refs.rs:12:16: 20:2] {identity_future::<(), [async fn body@ui/async-await/issues/issue-67611-static-mut-refs.rs:12:16: 20:2]>}, val: Value(<ZST>) }
    }

    bb1: {
        return;                          // scope 0 at ui/async-await/issues/issue-67611-static-mut-refs.rs:20:2: 20:2
    }
}

fn fun::{closure#0}(_1: Pin<&mut [async fn body@ui/async-await/issues/issue-67611-static-mut-refs.rs:12:16: 20:2]>, _2: &mut Context<'_>) -> Poll<()> {
    debug _task_context => _37;          // in scope 0 at ui/async-await/issues/issue-67611-static-mut-refs.rs:12:16: 20:2
    let mut _0: std::task::Poll<()>;     // return place in scope 0 at ui/async-await/issues/issue-67611-static-mut-refs.rs:12:16: 20:2
    let _3: i32;                         // in scope 0 at ui/async-await/issues/issue-67611-static-mut-refs.rs:13:9: 13:10
    let _4: usize;                       // in scope 0 at ui/async-await/issues/issue-67611-static-mut-refs.rs:13:24: 13:41
    let mut _5: [async block@ui/async-await/issues/issue-67611-static-mut-refs.rs:13:24: 13:35]; // in scope 0 at ui/async-await/issues/issue-67611-static-mut-refs.rs:13:35: 13:41
    let mut _6: [async block@ui/async-await/issues/issue-67611-static-mut-refs.rs:13:24: 13:35]; // in scope 0 at ui/async-await/issues/issue-67611-static-mut-refs.rs:13:24: 13:35
    let mut _7: [async block@ui/async-await/issues/issue-67611-static-mut-refs.rs:13:24: 13:35]; // in scope 0 at ui/async-await/issues/issue-67611-static-mut-refs.rs:13:24: 13:35
    let mut _8: std::task::Poll<usize>;  // in scope 0 at ui/async-await/issues/issue-67611-static-mut-refs.rs:13:35: 13:41
    let mut _9: std::pin::Pin<&mut [async block@ui/async-await/issues/issue-67611-static-mut-refs.rs:13:24: 13:35]>; // in scope 0 at ui/async-await/issues/issue-67611-static-mut-refs.rs:13:35: 13:41
    let mut _10: &mut [async block@ui/async-await/issues/issue-67611-static-mut-refs.rs:13:24: 13:35]; // in scope 0 at ui/async-await/issues/issue-67611-static-mut-refs.rs:13:35: 13:41
    let mut _11: &mut [async block@ui/async-await/issues/issue-67611-static-mut-refs.rs:13:24: 13:35]; // in scope 0 at ui/async-await/issues/issue-67611-static-mut-refs.rs:13:35: 13:41
    let mut _12: &mut std::task::Context<'_>; // in scope 0 at ui/async-await/issues/issue-67611-static-mut-refs.rs:13:24: 13:41
    let mut _13: &mut std::task::Context<'_>; // in scope 0 at ui/async-await/issues/issue-67611-static-mut-refs.rs:13:24: 13:41
    let mut _14: &mut std::task::Context<'_>; // in scope 0 at ui/async-await/issues/issue-67611-static-mut-refs.rs:13:35: 13:41
    let mut _15: isize;                  // in scope 0 at ui/async-await/issues/issue-67611-static-mut-refs.rs:13:35: 13:41
    let mut _17: &mut std::task::Context<'_>; // in scope 0 at ui/async-await/issues/issue-67611-static-mut-refs.rs:13:35: 13:41
    let mut _18: usize;                  // in scope 0 at ui/async-await/issues/issue-67611-static-mut-refs.rs:13:22: 13:42
    let mut _19: bool;                   // in scope 0 at ui/async-await/issues/issue-67611-static-mut-refs.rs:13:22: 13:42
    let mut _22: bool;                   // in scope 0 at ui/async-await/issues/issue-67611-static-mut-refs.rs:16:18: 16:38
    let mut _23: [async block@ui/async-await/issues/issue-67611-static-mut-refs.rs:16:18: 16:32]; // in scope 0 at ui/async-await/issues/issue-67611-static-mut-refs.rs:16:32: 16:38
    let mut _24: [async block@ui/async-await/issues/issue-67611-static-mut-refs.rs:16:18: 16:32]; // in scope 0 at ui/async-await/issues/issue-67611-static-mut-refs.rs:16:18: 16:32
    let mut _25: [async block@ui/async-await/issues/issue-67611-static-mut-refs.rs:16:18: 16:32]; // in scope 0 at ui/async-await/issues/issue-67611-static-mut-refs.rs:16:18: 16:32
    let mut _26: std::task::Poll<bool>;  // in scope 0 at ui/async-await/issues/issue-67611-static-mut-refs.rs:16:32: 16:38
    let mut _27: std::pin::Pin<&mut [async block@ui/async-await/issues/issue-67611-static-mut-refs.rs:16:18: 16:32]>; // in scope 0 at ui/async-await/issues/issue-67611-static-mut-refs.rs:16:32: 16:38
    let mut _28: &mut [async block@ui/async-await/issues/issue-67611-static-mut-refs.rs:16:18: 16:32]; // in scope 0 at ui/async-await/issues/issue-67611-static-mut-refs.rs:16:32: 16:38
    let mut _29: &mut [async block@ui/async-await/issues/issue-67611-static-mut-refs.rs:16:18: 16:32]; // in scope 0 at ui/async-await/issues/issue-67611-static-mut-refs.rs:16:32: 16:38
    let mut _30: &mut std::task::Context<'_>; // in scope 0 at ui/async-await/issues/issue-67611-static-mut-refs.rs:16:18: 16:38
    let mut _31: &mut std::task::Context<'_>; // in scope 0 at ui/async-await/issues/issue-67611-static-mut-refs.rs:16:18: 16:38
    let mut _32: &mut std::task::Context<'_>; // in scope 0 at ui/async-await/issues/issue-67611-static-mut-refs.rs:16:32: 16:38
    let mut _33: isize;                  // in scope 0 at ui/async-await/issues/issue-67611-static-mut-refs.rs:16:32: 16:38
    let mut _35: &mut std::task::Context<'_>; // in scope 0 at ui/async-await/issues/issue-67611-static-mut-refs.rs:16:32: 16:38
    let mut _36: ();                     // in scope 0 at ui/async-await/issues/issue-67611-static-mut-refs.rs:12:16: 20:2
    let mut _37: &mut std::task::Context<'_>; // in scope 0 at ui/async-await/issues/issue-67611-static-mut-refs.rs:12:16: 20:2
    let mut _38: u32;                    // in scope 0 at ui/async-await/issues/issue-67611-static-mut-refs.rs:12:16: 20:2
    let mut _39: &mut [async fn body@ui/async-await/issues/issue-67611-static-mut-refs.rs:12:16: 20:2]; // in scope 0 at ui/async-await/issues/issue-67611-static-mut-refs.rs:12:16: 20:2
    let mut _40: &mut [async fn body@ui/async-await/issues/issue-67611-static-mut-refs.rs:12:16: 20:2]; // in scope 0 at ui/async-await/issues/issue-67611-static-mut-refs.rs:12:16: 20:2
    let mut _41: &mut [async fn body@ui/async-await/issues/issue-67611-static-mut-refs.rs:12:16: 20:2]; // in scope 0 at ui/async-await/issues/issue-67611-static-mut-refs.rs:12:16: 20:2
    let mut _42: &mut [async fn body@ui/async-await/issues/issue-67611-static-mut-refs.rs:12:16: 20:2]; // in scope 0 at ui/async-await/issues/issue-67611-static-mut-refs.rs:12:16: 20:2
    let mut _43: &mut [async fn body@ui/async-await/issues/issue-67611-static-mut-refs.rs:12:16: 20:2]; // in scope 0 at ui/async-await/issues/issue-67611-static-mut-refs.rs:12:16: 20:2
    let mut _44: &mut [async fn body@ui/async-await/issues/issue-67611-static-mut-refs.rs:12:16: 20:2]; // in scope 0 at ui/async-await/issues/issue-67611-static-mut-refs.rs:12:16: 20:2
    let mut _45: *mut [i32; 5];          // in scope 0 at ui/async-await/issues/issue-67611-static-mut-refs.rs:12:16: 20:2
    let mut _46: &mut [async fn body@ui/async-await/issues/issue-67611-static-mut-refs.rs:12:16: 20:2]; // in scope 0 at ui/async-await/issues/issue-67611-static-mut-refs.rs:12:16: 20:2
    let mut _47: &mut [async fn body@ui/async-await/issues/issue-67611-static-mut-refs.rs:12:16: 20:2]; // in scope 0 at ui/async-await/issues/issue-67611-static-mut-refs.rs:12:16: 20:2
    let mut _48: *mut [i32; 5];          // in scope 0 at ui/async-await/issues/issue-67611-static-mut-refs.rs:12:16: 20:2
    let mut _49: &mut [async fn body@ui/async-await/issues/issue-67611-static-mut-refs.rs:12:16: 20:2]; // in scope 0 at ui/async-await/issues/issue-67611-static-mut-refs.rs:12:16: 20:2
    let mut _50: &mut [async fn body@ui/async-await/issues/issue-67611-static-mut-refs.rs:12:16: 20:2]; // in scope 0 at ui/async-await/issues/issue-67611-static-mut-refs.rs:12:16: 20:2
    let mut _51: &mut [async fn body@ui/async-await/issues/issue-67611-static-mut-refs.rs:12:16: 20:2]; // in scope 0 at ui/async-await/issues/issue-67611-static-mut-refs.rs:12:16: 20:2
    let mut _52: &mut [async fn body@ui/async-await/issues/issue-67611-static-mut-refs.rs:12:16: 20:2]; // in scope 0 at ui/async-await/issues/issue-67611-static-mut-refs.rs:12:16: 20:2
    let mut _53: *mut [i32; 5];          // in scope 0 at ui/async-await/issues/issue-67611-static-mut-refs.rs:12:16: 20:2
    let mut _54: &mut [async fn body@ui/async-await/issues/issue-67611-static-mut-refs.rs:12:16: 20:2]; // in scope 0 at ui/async-await/issues/issue-67611-static-mut-refs.rs:12:16: 20:2
    let mut _55: &mut [async fn body@ui/async-await/issues/issue-67611-static-mut-refs.rs:12:16: 20:2]; // in scope 0 at ui/async-await/issues/issue-67611-static-mut-refs.rs:12:16: 20:2
    scope 1 {
        debug u => _3;                   // in scope 1 at ui/async-await/issues/issue-67611-static-mut-refs.rs:13:9: 13:10
        scope 6 {
            let _20: [i32; 5];           // in scope 6 at ui/async-await/issues/issue-67611-static-mut-refs.rs:16:13: 16:14
            let _21: &[i32; 5];          // in scope 6 at ui/async-await/issues/issue-67611-static-mut-refs.rs:16:13: 16:14
            scope 7 {
                debug i => _20;          // in scope 7 at ui/async-await/issues/issue-67611-static-mut-refs.rs:16:13: 16:14
                debug i => _21;          // in scope 7 at ui/async-await/issues/issue-67611-static-mut-refs.rs:16:13: 16:14
            }
            scope 8 {
                debug __awaitee => (((*(_1.0: &mut [async fn body@ui/async-await/issues/issue-67611-static-mut-refs.rs:12:16: 20:2])) as variant#4).1: [async block@ui/async-await/issues/issue-67611-static-mut-refs.rs:16:18: 16:32]); // in scope 8 at ui/async-await/issues/issue-67611-static-mut-refs.rs:16:32: 16:38
                let _34: bool;           // in scope 8 at ui/async-await/issues/issue-67611-static-mut-refs.rs:16:18: 16:38
                scope 9 {
                }
                scope 10 {
                    debug result => _34; // in scope 10 at ui/async-await/issues/issue-67611-static-mut-refs.rs:16:18: 16:38
                }
            }
        }
    }
    scope 2 {
        scope 3 {
            debug __awaitee => (((*(_1.0: &mut [async fn body@ui/async-await/issues/issue-67611-static-mut-refs.rs:12:16: 20:2])) as variant#3).1: [async block@ui/async-await/issues/issue-67611-static-mut-refs.rs:13:24: 13:35]); // in scope 3 at ui/async-await/issues/issue-67611-static-mut-refs.rs:13:35: 13:41
            let _16: usize;              // in scope 3 at ui/async-await/issues/issue-67611-static-mut-refs.rs:13:24: 13:41
            scope 4 {
            }
            scope 5 {
                debug result => _16;     // in scope 5 at ui/async-await/issues/issue-67611-static-mut-refs.rs:13:24: 13:41
            }
        }
    }

    bb0: {
        _39 = deref_copy (_1.0: &mut [async fn body@ui/async-await/issues/issue-67611-static-mut-refs.rs:12:16: 20:2]); // scope 0 at ui/async-await/issues/issue-67611-static-mut-refs.rs:12:16: 20:2
        _38 = discriminant((*_39));      // scope 0 at ui/async-await/issues/issue-67611-static-mut-refs.rs:12:16: 20:2
        switchInt(move _38) -> [0: bb1, 1: bb26, 2: bb25, 3: bb23, 4: bb24, otherwise: bb27]; // scope 0 at ui/async-await/issues/issue-67611-static-mut-refs.rs:12:16: 20:2
    }

    bb1: {
        _37 = move _2;                   // scope 0 at ui/async-await/issues/issue-67611-static-mut-refs.rs:12:16: 20:2
        _40 = deref_copy (_1.0: &mut [async fn body@ui/async-await/issues/issue-67611-static-mut-refs.rs:12:16: 20:2]); // scope 2 at ui/async-await/issues/issue-67611-static-mut-refs.rs:13:22: 13:23
        (((*_40) as variant#3).0: *mut [i32; 5]) = const {alloc1: *mut [i32; 5]}; // scope 2 at ui/async-await/issues/issue-67611-static-mut-refs.rs:13:22: 13:23
                                         // mir::Constant
                                         // + span: ui/async-await/issues/issue-67611-static-mut-refs.rs:13:22: 13:23
                                         // + literal: Const { ty: *mut [i32; 5], val: Value(Scalar(alloc1)) }
        _7 = [generator@ui/async-await/issues/issue-67611-static-mut-refs.rs:13:24: 13:35 (#0)]; // scope 2 at ui/async-await/issues/issue-67611-static-mut-refs.rs:13:24: 13:35
                                         // generator
                                         // + def_id: DefId(0:9 ~ issue_67611_static_mut_refs[1fee]::fun::{closure#0}::{closure#0})
                                         // + substs: [
                                         //     std::future::ResumeTy,
                                         //     (),
                                         //     usize,
                                         //     {},
                                         //     (),
                                         // ]
                                         // + movability: Static
        _6 = identity_future::<usize, [async block@ui/async-await/issues/issue-67611-static-mut-refs.rs:13:24: 13:35]>(move _7) -> [return: bb2, unwind: bb22]; // scope 2 at ui/async-await/issues/issue-67611-static-mut-refs.rs:13:24: 13:35
                                         // mir::Constant
                                         // + span: ui/async-await/issues/issue-67611-static-mut-refs.rs:13:24: 13:35
                                         // + literal: Const { ty: fn([async block@ui/async-await/issues/issue-67611-static-mut-refs.rs:13:24: 13:35]) -> [async block@ui/async-await/issues/issue-67611-static-mut-refs.rs:13:24: 13:35] {identity_future::<usize, [async block@ui/async-await/issues/issue-67611-static-mut-refs.rs:13:24: 13:35]>}, val: Value(<ZST>) }
    }

    bb2: {
        _5 = <[async block@ui/async-await/issues/issue-67611-static-mut-refs.rs:13:24: 13:35] as IntoFuture>::into_future(move _6) -> [return: bb3, unwind: bb22]; // scope 2 at ui/async-await/issues/issue-67611-static-mut-refs.rs:13:35: 13:41
                                         // mir::Constant
                                         // + span: ui/async-await/issues/issue-67611-static-mut-refs.rs:13:35: 13:41
                                         // + literal: Const { ty: fn([async block@ui/async-await/issues/issue-67611-static-mut-refs.rs:13:24: 13:35]) -> <[async block@ui/async-await/issues/issue-67611-static-mut-refs.rs:13:24: 13:35] as IntoFuture>::IntoFuture {<[async block@ui/async-await/issues/issue-67611-static-mut-refs.rs:13:24: 13:35] as IntoFuture>::into_future}, val: Value(<ZST>) }
    }

    bb3: {
        _41 = deref_copy (_1.0: &mut [async fn body@ui/async-await/issues/issue-67611-static-mut-refs.rs:12:16: 20:2]); // scope 2 at ui/async-await/issues/issue-67611-static-mut-refs.rs:13:35: 13:41
        (((*_41) as variant#3).1: [async block@ui/async-await/issues/issue-67611-static-mut-refs.rs:13:24: 13:35]) = move _5; // scope 2 at ui/async-await/issues/issue-67611-static-mut-refs.rs:13:35: 13:41
        goto -> bb4;                     // scope 3 at ui/async-await/issues/issue-67611-static-mut-refs.rs:13:35: 13:41
    }

    bb4: {
        _42 = deref_copy (_1.0: &mut [async fn body@ui/async-await/issues/issue-67611-static-mut-refs.rs:12:16: 20:2]); // scope 4 at ui/async-await/issues/issue-67611-static-mut-refs.rs:13:35: 13:41
        _11 = &mut (((*_42) as variant#3).1: [async block@ui/async-await/issues/issue-67611-static-mut-refs.rs:13:24: 13:35]); // scope 4 at ui/async-await/issues/issue-67611-static-mut-refs.rs:13:35: 13:41
        _10 = &mut (*_11);               // scope 4 at ui/async-await/issues/issue-67611-static-mut-refs.rs:13:35: 13:41
        _9 = Pin::<&mut [async block@ui/async-await/issues/issue-67611-static-mut-refs.rs:13:24: 13:35]>::new_unchecked(move _10) -> [return: bb5, unwind: bb22]; // scope 4 at ui/async-await/issues/issue-67611-static-mut-refs.rs:13:35: 13:41
                                         // mir::Constant
                                         // + span: ui/async-await/issues/issue-67611-static-mut-refs.rs:13:35: 13:41
                                         // + literal: Const { ty: unsafe fn(&mut [async block@ui/async-await/issues/issue-67611-static-mut-refs.rs:13:24: 13:35]) -> Pin<&mut [async block@ui/async-await/issues/issue-67611-static-mut-refs.rs:13:24: 13:35]> {Pin::<&mut [async block@ui/async-await/issues/issue-67611-static-mut-refs.rs:13:24: 13:35]>::new_unchecked}, val: Value(<ZST>) }
    }

    bb5: {
        _14 = _37;                       // scope 4 at ui/async-await/issues/issue-67611-static-mut-refs.rs:13:35: 13:41
        _13 = move _14;                  // scope 4 at ui/async-await/issues/issue-67611-static-mut-refs.rs:13:24: 13:41
        _12 = &mut (*_13);               // scope 4 at ui/async-await/issues/issue-67611-static-mut-refs.rs:13:24: 13:41
        _8 = <[async block@ui/async-await/issues/issue-67611-static-mut-refs.rs:13:24: 13:35] as Future>::poll(move _9, move _12) -> [return: bb6, unwind: bb22]; // scope 4 at ui/async-await/issues/issue-67611-static-mut-refs.rs:13:35: 13:41
                                         // mir::Constant
                                         // + span: ui/async-await/issues/issue-67611-static-mut-refs.rs:13:35: 13:41
                                         // + literal: Const { ty: for<'a, 'b, 'c> fn(Pin<&'a mut [async block@ui/async-await/issues/issue-67611-static-mut-refs.rs:13:24: 13:35]>, &'b mut Context<'c>) -> Poll<<[async block@ui/async-await/issues/issue-67611-static-mut-refs.rs:13:24: 13:35] as Future>::Output> {<[async block@ui/async-await/issues/issue-67611-static-mut-refs.rs:13:24: 13:35] as Future>::poll}, val: Value(<ZST>) }
    }

    bb6: {
        _15 = discriminant(_8);          // scope 3 at ui/async-await/issues/issue-67611-static-mut-refs.rs:13:35: 13:41
        switchInt(move _15) -> [0: bb9, 1: bb7, otherwise: bb8]; // scope 3 at ui/async-await/issues/issue-67611-static-mut-refs.rs:13:35: 13:41
    }

    bb7: {
        _0 = Poll::<()>::Pending;        // scope 3 at ui/async-await/issues/issue-67611-static-mut-refs.rs:13:35: 13:41
        _43 = deref_copy (_1.0: &mut [async fn body@ui/async-await/issues/issue-67611-static-mut-refs.rs:12:16: 20:2]); // scope 3 at ui/async-await/issues/issue-67611-static-mut-refs.rs:13:35: 13:41
        discriminant((*_43)) = 3;        // scope 3 at ui/async-await/issues/issue-67611-static-mut-refs.rs:13:35: 13:41
        return;                          // scope 3 at ui/async-await/issues/issue-67611-static-mut-refs.rs:13:35: 13:41
    }

    bb8: {
        unreachable;                     // scope 3 at ui/async-await/issues/issue-67611-static-mut-refs.rs:13:35: 13:41
    }

    bb9: {
        _16 = ((_8 as Ready).0: usize);  // scope 3 at ui/async-await/issues/issue-67611-static-mut-refs.rs:13:24: 13:41
        _4 = _16;                        // scope 5 at ui/async-await/issues/issue-67611-static-mut-refs.rs:13:24: 13:41
        _18 = const 5_usize;             // scope 2 at ui/async-await/issues/issue-67611-static-mut-refs.rs:13:22: 13:42
        _19 = Lt(_4, _18);               // scope 2 at ui/async-await/issues/issue-67611-static-mut-refs.rs:13:22: 13:42
        assert(move _19, "index out of bounds: the length is {} but the index is {}", move _18, _4) -> [success: bb10, unwind: bb22]; // scope 2 at ui/async-await/issues/issue-67611-static-mut-refs.rs:13:22: 13:42
    }

    bb10: {
        _44 = deref_copy (_1.0: &mut [async fn body@ui/async-await/issues/issue-67611-static-mut-refs.rs:12:16: 20:2]); // scope 2 at ui/async-await/issues/issue-67611-static-mut-refs.rs:13:22: 13:42
        _45 = deref_copy (((*_44) as variant#3).0: *mut [i32; 5]); // scope 2 at ui/async-await/issues/issue-67611-static-mut-refs.rs:13:22: 13:42
        _3 = (*_45)[_4];                 // scope 2 at ui/async-await/issues/issue-67611-static-mut-refs.rs:13:22: 13:42
        _46 = deref_copy (_1.0: &mut [async fn body@ui/async-await/issues/issue-67611-static-mut-refs.rs:12:16: 20:2]); // scope 6 at ui/async-await/issues/issue-67611-static-mut-refs.rs:15:15: 15:16
        (((*_46) as variant#4).0: *mut [i32; 5]) = const {alloc1: *mut [i32; 5]}; // scope 6 at ui/async-await/issues/issue-67611-static-mut-refs.rs:15:15: 15:16
                                         // mir::Constant
                                         // + span: ui/async-await/issues/issue-67611-static-mut-refs.rs:15:15: 15:16
                                         // + literal: Const { ty: *mut [i32; 5], val: Value(Scalar(alloc1)) }
        _47 = deref_copy (_1.0: &mut [async fn body@ui/async-await/issues/issue-67611-static-mut-refs.rs:12:16: 20:2]); // scope 6 at ui/async-await/issues/issue-67611-static-mut-refs.rs:16:13: 16:14
        _48 = deref_copy (((*_47) as variant#4).0: *mut [i32; 5]); // scope 6 at ui/async-await/issues/issue-67611-static-mut-refs.rs:16:13: 16:14
        _21 = &(*_48);                   // scope 6 at ui/async-await/issues/issue-67611-static-mut-refs.rs:16:13: 16:14
        _25 = [generator@ui/async-await/issues/issue-67611-static-mut-refs.rs:16:18: 16:32 (#0)]; // scope 6 at ui/async-await/issues/issue-67611-static-mut-refs.rs:16:18: 16:32
                                         // generator
                                         // + def_id: DefId(0:10 ~ issue_67611_static_mut_refs[1fee]::fun::{closure#0}::{closure#1})
                                         // + substs: [
                                         //     std::future::ResumeTy,
                                         //     (),
                                         //     bool,
                                         //     {},
                                         //     (),
                                         // ]
                                         // + movability: Static
        _24 = identity_future::<bool, [async block@ui/async-await/issues/issue-67611-static-mut-refs.rs:16:18: 16:32]>(move _25) -> [return: bb11, unwind: bb22]; // scope 6 at ui/async-await/issues/issue-67611-static-mut-refs.rs:16:18: 16:32
                                         // mir::Constant
                                         // + span: ui/async-await/issues/issue-67611-static-mut-refs.rs:16:18: 16:32
                                         // + literal: Const { ty: fn([async block@ui/async-await/issues/issue-67611-static-mut-refs.rs:16:18: 16:32]) -> [async block@ui/async-await/issues/issue-67611-static-mut-refs.rs:16:18: 16:32] {identity_future::<bool, [async block@ui/async-await/issues/issue-67611-static-mut-refs.rs:16:18: 16:32]>}, val: Value(<ZST>) }
    }

    bb11: {
        _23 = <[async block@ui/async-await/issues/issue-67611-static-mut-refs.rs:16:18: 16:32] as IntoFuture>::into_future(move _24) -> [return: bb12, unwind: bb22]; // scope 6 at ui/async-await/issues/issue-67611-static-mut-refs.rs:16:32: 16:38
                                         // mir::Constant
                                         // + span: ui/async-await/issues/issue-67611-static-mut-refs.rs:16:32: 16:38
                                         // + literal: Const { ty: fn([async block@ui/async-await/issues/issue-67611-static-mut-refs.rs:16:18: 16:32]) -> <[async block@ui/async-await/issues/issue-67611-static-mut-refs.rs:16:18: 16:32] as IntoFuture>::IntoFuture {<[async block@ui/async-await/issues/issue-67611-static-mut-refs.rs:16:18: 16:32] as IntoFuture>::into_future}, val: Value(<ZST>) }
    }

    bb12: {
        _49 = deref_copy (_1.0: &mut [async fn body@ui/async-await/issues/issue-67611-static-mut-refs.rs:12:16: 20:2]); // scope 6 at ui/async-await/issues/issue-67611-static-mut-refs.rs:16:32: 16:38
        (((*_49) as variant#4).1: [async block@ui/async-await/issues/issue-67611-static-mut-refs.rs:16:18: 16:32]) = move _23; // scope 6 at ui/async-await/issues/issue-67611-static-mut-refs.rs:16:32: 16:38
        goto -> bb13;                    // scope 8 at ui/async-await/issues/issue-67611-static-mut-refs.rs:16:32: 16:38
    }

    bb13: {
        _50 = deref_copy (_1.0: &mut [async fn body@ui/async-await/issues/issue-67611-static-mut-refs.rs:12:16: 20:2]); // scope 9 at ui/async-await/issues/issue-67611-static-mut-refs.rs:16:32: 16:38
        _29 = &mut (((*_50) as variant#4).1: [async block@ui/async-await/issues/issue-67611-static-mut-refs.rs:16:18: 16:32]); // scope 9 at ui/async-await/issues/issue-67611-static-mut-refs.rs:16:32: 16:38
        _28 = &mut (*_29);               // scope 9 at ui/async-await/issues/issue-67611-static-mut-refs.rs:16:32: 16:38
        _27 = Pin::<&mut [async block@ui/async-await/issues/issue-67611-static-mut-refs.rs:16:18: 16:32]>::new_unchecked(move _28) -> [return: bb14, unwind: bb22]; // scope 9 at ui/async-await/issues/issue-67611-static-mut-refs.rs:16:32: 16:38
                                         // mir::Constant
                                         // + span: ui/async-await/issues/issue-67611-static-mut-refs.rs:16:32: 16:38
                                         // + literal: Const { ty: unsafe fn(&mut [async block@ui/async-await/issues/issue-67611-static-mut-refs.rs:16:18: 16:32]) -> Pin<&mut [async block@ui/async-await/issues/issue-67611-static-mut-refs.rs:16:18: 16:32]> {Pin::<&mut [async block@ui/async-await/issues/issue-67611-static-mut-refs.rs:16:18: 16:32]>::new_unchecked}, val: Value(<ZST>) }
    }

    bb14: {
        _32 = _37;                       // scope 9 at ui/async-await/issues/issue-67611-static-mut-refs.rs:16:32: 16:38
        _31 = move _32;                  // scope 9 at ui/async-await/issues/issue-67611-static-mut-refs.rs:16:18: 16:38
        _30 = &mut (*_31);               // scope 9 at ui/async-await/issues/issue-67611-static-mut-refs.rs:16:18: 16:38
        _26 = <[async block@ui/async-await/issues/issue-67611-static-mut-refs.rs:16:18: 16:32] as Future>::poll(move _27, move _30) -> [return: bb15, unwind: bb22]; // scope 9 at ui/async-await/issues/issue-67611-static-mut-refs.rs:16:32: 16:38
                                         // mir::Constant
                                         // + span: ui/async-await/issues/issue-67611-static-mut-refs.rs:16:32: 16:38
                                         // + literal: Const { ty: for<'a, 'b, 'c> fn(Pin<&'a mut [async block@ui/async-await/issues/issue-67611-static-mut-refs.rs:16:18: 16:32]>, &'b mut Context<'c>) -> Poll<<[async block@ui/async-await/issues/issue-67611-static-mut-refs.rs:16:18: 16:32] as Future>::Output> {<[async block@ui/async-await/issues/issue-67611-static-mut-refs.rs:16:18: 16:32] as Future>::poll}, val: Value(<ZST>) }
    }

    bb15: {
        _33 = discriminant(_26);         // scope 8 at ui/async-await/issues/issue-67611-static-mut-refs.rs:16:32: 16:38
        switchInt(move _33) -> [0: bb18, 1: bb16, otherwise: bb17]; // scope 8 at ui/async-await/issues/issue-67611-static-mut-refs.rs:16:32: 16:38
    }

    bb16: {
        _0 = Poll::<()>::Pending;        // scope 8 at ui/async-await/issues/issue-67611-static-mut-refs.rs:16:32: 16:38
        _51 = deref_copy (_1.0: &mut [async fn body@ui/async-await/issues/issue-67611-static-mut-refs.rs:12:16: 20:2]); // scope 8 at ui/async-await/issues/issue-67611-static-mut-refs.rs:16:32: 16:38
        discriminant((*_51)) = 4;        // scope 8 at ui/async-await/issues/issue-67611-static-mut-refs.rs:16:32: 16:38
        return;                          // scope 8 at ui/async-await/issues/issue-67611-static-mut-refs.rs:16:32: 16:38
    }

    bb17: {
        unreachable;                     // scope 8 at ui/async-await/issues/issue-67611-static-mut-refs.rs:16:32: 16:38
    }

    bb18: {
        _34 = ((_26 as Ready).0: bool);  // scope 8 at ui/async-await/issues/issue-67611-static-mut-refs.rs:16:18: 16:38
        _22 = _34;                       // scope 10 at ui/async-await/issues/issue-67611-static-mut-refs.rs:16:18: 16:38
        switchInt(move _22) -> [0: bb20, otherwise: bb19]; // scope 6 at ui/async-await/issues/issue-67611-static-mut-refs.rs:16:18: 16:38
    }

    bb19: {
        _52 = deref_copy (_1.0: &mut [async fn body@ui/async-await/issues/issue-67611-static-mut-refs.rs:12:16: 20:2]); // scope 6 at ui/async-await/issues/issue-67611-static-mut-refs.rs:16:13: 16:14
        _53 = deref_copy (((*_52) as variant#4).0: *mut [i32; 5]); // scope 6 at ui/async-await/issues/issue-67611-static-mut-refs.rs:16:13: 16:14
        _20 = (*_53);                    // scope 6 at ui/async-await/issues/issue-67611-static-mut-refs.rs:16:13: 16:14
        _36 = ();                        // scope 7 at ui/async-await/issues/issue-67611-static-mut-refs.rs:16:42: 16:44
        goto -> bb21;                    // scope 6 at ui/async-await/issues/issue-67611-static-mut-refs.rs:16:43: 16:44
    }

    bb20: {
        _36 = ();                        // scope 6 at ui/async-await/issues/issue-67611-static-mut-refs.rs:17:18: 17:20
        goto -> bb21;                    // scope 6 at ui/async-await/issues/issue-67611-static-mut-refs.rs:17:18: 17:20
    }

    bb21: {
        _0 = Poll::<()>::Ready(move _36); // scope 0 at ui/async-await/issues/issue-67611-static-mut-refs.rs:20:2: 20:2
        _54 = deref_copy (_1.0: &mut [async fn body@ui/async-await/issues/issue-67611-static-mut-refs.rs:12:16: 20:2]); // scope 0 at ui/async-await/issues/issue-67611-static-mut-refs.rs:20:2: 20:2
        discriminant((*_54)) = 1;        // scope 0 at ui/async-await/issues/issue-67611-static-mut-refs.rs:20:2: 20:2
        return;                          // scope 0 at ui/async-await/issues/issue-67611-static-mut-refs.rs:20:2: 20:2
    }

    bb22 (cleanup): {
        _55 = deref_copy (_1.0: &mut [async fn body@ui/async-await/issues/issue-67611-static-mut-refs.rs:12:16: 20:2]); // scope 0 at ui/async-await/issues/issue-67611-static-mut-refs.rs:12:16: 20:2
        discriminant((*_55)) = 2;        // scope 0 at ui/async-await/issues/issue-67611-static-mut-refs.rs:12:16: 20:2
        resume;                          // scope 0 at ui/async-await/issues/issue-67611-static-mut-refs.rs:12:16: 20:2
    }

    bb23: {
        _17 = move _2;                   // scope 0 at ui/async-await/issues/issue-67611-static-mut-refs.rs:12:16: 20:2
        _37 = move _17;                  // scope 3 at ui/async-await/issues/issue-67611-static-mut-refs.rs:13:35: 13:41
        goto -> bb4;                     // scope 3 at ui/async-await/issues/issue-67611-static-mut-refs.rs:13:35: 13:41
    }

    bb24: {
        _35 = move _2;                   // scope 0 at ui/async-await/issues/issue-67611-static-mut-refs.rs:12:16: 20:2
        _37 = move _35;                  // scope 8 at ui/async-await/issues/issue-67611-static-mut-refs.rs:16:32: 16:38
        goto -> bb13;                    // scope 8 at ui/async-await/issues/issue-67611-static-mut-refs.rs:16:32: 16:38
    }

    bb25: {
        assert(const false, "`async fn` resumed after panicking") -> bb25; // scope 0 at ui/async-await/issues/issue-67611-static-mut-refs.rs:12:16: 20:2
    }

    bb26: {
        assert(const false, "`async fn` resumed after completion") -> bb26; // scope 0 at ui/async-await/issues/issue-67611-static-mut-refs.rs:12:16: 20:2
    }

    bb27: {
        unreachable;                     // scope 0 at ui/async-await/issues/issue-67611-static-mut-refs.rs:12:16: 20:2
    }
}

alloc1 (static: A, size: 20, align: 4) {
    0x00 │ 01 00 00 00 02 00 00 00 03 00 00 00 04 00 00 00 │ ................
    0x10 │ 05 00 00 00                                     │ ....
}

fn fun::{closure#0}::{closure#0}(_1: Pin<&mut [async block@ui/async-await/issues/issue-67611-static-mut-refs.rs:13:24: 13:35]>, _2: &mut Context<'_>) -> Poll<usize> {
    debug _task_context => _4;           // in scope 0 at ui/async-await/issues/issue-67611-static-mut-refs.rs:13:24: 13:35
    let mut _0: std::task::Poll<usize>;  // return place in scope 0 at ui/async-await/issues/issue-67611-static-mut-refs.rs:13:24: 13:35
    let mut _3: usize;                   // in scope 0 at ui/async-await/issues/issue-67611-static-mut-refs.rs:13:24: 13:35
    let mut _4: &mut std::task::Context<'_>; // in scope 0 at ui/async-await/issues/issue-67611-static-mut-refs.rs:13:24: 13:35
    let mut _5: u32;                     // in scope 0 at ui/async-await/issues/issue-67611-static-mut-refs.rs:13:24: 13:35
    let mut _6: &mut [async block@ui/async-await/issues/issue-67611-static-mut-refs.rs:13:24: 13:35]; // in scope 0 at ui/async-await/issues/issue-67611-static-mut-refs.rs:13:24: 13:35
    let mut _7: &mut [async block@ui/async-await/issues/issue-67611-static-mut-refs.rs:13:24: 13:35]; // in scope 0 at ui/async-await/issues/issue-67611-static-mut-refs.rs:13:24: 13:35

    bb0: {
        _6 = deref_copy (_1.0: &mut [async block@ui/async-await/issues/issue-67611-static-mut-refs.rs:13:24: 13:35]); // scope 0 at ui/async-await/issues/issue-67611-static-mut-refs.rs:13:24: 13:35
        _5 = discriminant((*_6));        // scope 0 at ui/async-await/issues/issue-67611-static-mut-refs.rs:13:24: 13:35
        switchInt(move _5) -> [0: bb1, 1: bb2, otherwise: bb3]; // scope 0 at ui/async-await/issues/issue-67611-static-mut-refs.rs:13:24: 13:35
    }

    bb1: {
        _4 = move _2;                    // scope 0 at ui/async-await/issues/issue-67611-static-mut-refs.rs:13:24: 13:35
        _3 = const 1_usize;              // scope 0 at ui/async-await/issues/issue-67611-static-mut-refs.rs:13:32: 13:33
        _0 = Poll::<usize>::Ready(move _3); // scope 0 at ui/async-await/issues/issue-67611-static-mut-refs.rs:13:35: 13:35
        _7 = deref_copy (_1.0: &mut [async block@ui/async-await/issues/issue-67611-static-mut-refs.rs:13:24: 13:35]); // scope 0 at ui/async-await/issues/issue-67611-static-mut-refs.rs:13:35: 13:35
        discriminant((*_7)) = 1;         // scope 0 at ui/async-await/issues/issue-67611-static-mut-refs.rs:13:35: 13:35
        return;                          // scope 0 at ui/async-await/issues/issue-67611-static-mut-refs.rs:13:35: 13:35
    }

    bb2: {
        assert(const false, "`async fn` resumed after completion") -> bb2; // scope 0 at ui/async-await/issues/issue-67611-static-mut-refs.rs:13:24: 13:35
    }

    bb3: {
        unreachable;                     // scope 0 at ui/async-await/issues/issue-67611-static-mut-refs.rs:13:24: 13:35
    }
}

fn fun::{closure#0}::{closure#1}(_1: Pin<&mut [async block@ui/async-await/issues/issue-67611-static-mut-refs.rs:16:18: 16:32]>, _2: &mut Context<'_>) -> Poll<bool> {
    debug _task_context => _4;           // in scope 0 at ui/async-await/issues/issue-67611-static-mut-refs.rs:16:18: 16:32
    let mut _0: std::task::Poll<bool>;   // return place in scope 0 at ui/async-await/issues/issue-67611-static-mut-refs.rs:16:18: 16:32
    let mut _3: bool;                    // in scope 0 at ui/async-await/issues/issue-67611-static-mut-refs.rs:16:18: 16:32
    let mut _4: &mut std::task::Context<'_>; // in scope 0 at ui/async-await/issues/issue-67611-static-mut-refs.rs:16:18: 16:32
    let mut _5: u32;                     // in scope 0 at ui/async-await/issues/issue-67611-static-mut-refs.rs:16:18: 16:32
    let mut _6: &mut [async block@ui/async-await/issues/issue-67611-static-mut-refs.rs:16:18: 16:32]; // in scope 0 at ui/async-await/issues/issue-67611-static-mut-refs.rs:16:18: 16:32
    let mut _7: &mut [async block@ui/async-await/issues/issue-67611-static-mut-refs.rs:16:18: 16:32]; // in scope 0 at ui/async-await/issues/issue-67611-static-mut-refs.rs:16:18: 16:32

    bb0: {
        _6 = deref_copy (_1.0: &mut [async block@ui/async-await/issues/issue-67611-static-mut-refs.rs:16:18: 16:32]); // scope 0 at ui/async-await/issues/issue-67611-static-mut-refs.rs:16:18: 16:32
        _5 = discriminant((*_6));        // scope 0 at ui/async-await/issues/issue-67611-static-mut-refs.rs:16:18: 16:32
        switchInt(move _5) -> [0: bb1, 1: bb2, otherwise: bb3]; // scope 0 at ui/async-await/issues/issue-67611-static-mut-refs.rs:16:18: 16:32
    }

    bb1: {
        _4 = move _2;                    // scope 0 at ui/async-await/issues/issue-67611-static-mut-refs.rs:16:18: 16:32
        _3 = const true;                 // scope 0 at ui/async-await/issues/issue-67611-static-mut-refs.rs:16:26: 16:30
        _0 = Poll::<bool>::Ready(move _3); // scope 0 at ui/async-await/issues/issue-67611-static-mut-refs.rs:16:32: 16:32
        _7 = deref_copy (_1.0: &mut [async block@ui/async-await/issues/issue-67611-static-mut-refs.rs:16:18: 16:32]); // scope 0 at ui/async-await/issues/issue-67611-static-mut-refs.rs:16:32: 16:32
        discriminant((*_7)) = 1;         // scope 0 at ui/async-await/issues/issue-67611-static-mut-refs.rs:16:32: 16:32
        return;                          // scope 0 at ui/async-await/issues/issue-67611-static-mut-refs.rs:16:32: 16:32
    }

    bb2: {
        assert(const false, "`async fn` resumed after completion") -> bb2; // scope 0 at ui/async-await/issues/issue-67611-static-mut-refs.rs:16:18: 16:32
    }

    bb3: {
        unreachable;                     // scope 0 at ui/async-await/issues/issue-67611-static-mut-refs.rs:16:18: 16:32
    }
}

fn main() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/async-await/issues/issue-67611-static-mut-refs.rs:22:11: 22:11
    let _1: [async block@ui/async-await/issues/issue-67611-static-mut-refs.rs:23:23: 25:6]; // in scope 0 at ui/async-await/issues/issue-67611-static-mut-refs.rs:23:9: 23:20
    let mut _2: [async block@ui/async-await/issues/issue-67611-static-mut-refs.rs:23:23: 25:6]; // in scope 0 at ui/async-await/issues/issue-67611-static-mut-refs.rs:23:23: 25:6
    let mut _4: [async block@ui/async-await/issues/issue-67611-static-mut-refs.rs:26:23: 33:6]; // in scope 0 at ui/async-await/issues/issue-67611-static-mut-refs.rs:26:23: 33:6
    let _5: ();                          // in scope 0 at ui/async-await/issues/issue-67611-static-mut-refs.rs:34:5: 34:30
    let mut _6: [async block@ui/async-await/issues/issue-67611-static-mut-refs.rs:23:23: 25:6]; // in scope 0 at ui/async-await/issues/issue-67611-static-mut-refs.rs:34:18: 34:29
    let _7: ();                          // in scope 0 at ui/async-await/issues/issue-67611-static-mut-refs.rs:35:5: 35:30
    let mut _8: [async block@ui/async-await/issues/issue-67611-static-mut-refs.rs:26:23: 33:6]; // in scope 0 at ui/async-await/issues/issue-67611-static-mut-refs.rs:35:18: 35:29
    let _9: ();                          // in scope 0 at ui/async-await/issues/issue-67611-static-mut-refs.rs:36:5: 36:24
    let mut _10: impl std::future::Future<Output = ()>; // in scope 0 at ui/async-await/issues/issue-67611-static-mut-refs.rs:36:18: 36:23
    scope 1 {
        debug index_block => _1;         // in scope 1 at ui/async-await/issues/issue-67611-static-mut-refs.rs:23:9: 23:20
        let _3: [async block@ui/async-await/issues/issue-67611-static-mut-refs.rs:26:23: 33:6]; // in scope 1 at ui/async-await/issues/issue-67611-static-mut-refs.rs:26:9: 26:20
        scope 2 {
            debug match_block => _3;     // in scope 2 at ui/async-await/issues/issue-67611-static-mut-refs.rs:26:9: 26:20
        }
    }

    bb0: {
        _2 = [generator@ui/async-await/issues/issue-67611-static-mut-refs.rs:23:23: 25:6 (#0)]; // scope 0 at ui/async-await/issues/issue-67611-static-mut-refs.rs:23:23: 25:6
                                         // generator
                                         // + def_id: DefId(0:12 ~ issue_67611_static_mut_refs[1fee]::main::{closure#0})
                                         // + substs: [
                                         //     std::future::ResumeTy,
                                         //     (),
                                         //     (),
                                         //     for<'a> {std::future::ResumeTy, &'a [i32; 5], [i32; 5], [async block@ui/async-await/issues/issue-67611-static-mut-refs.rs:24:28: 24:39], ()},
                                         //     (),
                                         // ]
                                         // + movability: Static
        _1 = identity_future::<(), [async block@ui/async-await/issues/issue-67611-static-mut-refs.rs:23:23: 25:6]>(move _2) -> bb1; // scope 0 at ui/async-await/issues/issue-67611-static-mut-refs.rs:23:23: 25:6
                                         // mir::Constant
                                         // + span: ui/async-await/issues/issue-67611-static-mut-refs.rs:23:23: 25:6
                                         // + literal: Const { ty: fn([async block@ui/async-await/issues/issue-67611-static-mut-refs.rs:23:23: 25:6]) -> [async block@ui/async-await/issues/issue-67611-static-mut-refs.rs:23:23: 25:6] {identity_future::<(), [async block@ui/async-await/issues/issue-67611-static-mut-refs.rs:23:23: 25:6]>}, val: Value(<ZST>) }
    }

    bb1: {
        _4 = [generator@ui/async-await/issues/issue-67611-static-mut-refs.rs:26:23: 33:6 (#0)]; // scope 1 at ui/async-await/issues/issue-67611-static-mut-refs.rs:26:23: 33:6
                                         // generator
                                         // + def_id: DefId(0:14 ~ issue_67611_static_mut_refs[1fee]::main::{closure#1})
                                         // + substs: [
                                         //     std::future::ResumeTy,
                                         //     (),
                                         //     (),
                                         //     for<'a> {std::future::ResumeTy, [i32; 5], &'a [i32; 5], [async block@ui/async-await/issues/issue-67611-static-mut-refs.rs:29:22: 29:36], ()},
                                         //     (),
                                         // ]
                                         // + movability: Static
        _3 = identity_future::<(), [async block@ui/async-await/issues/issue-67611-static-mut-refs.rs:26:23: 33:6]>(move _4) -> bb2; // scope 1 at ui/async-await/issues/issue-67611-static-mut-refs.rs:26:23: 33:6
                                         // mir::Constant
                                         // + span: ui/async-await/issues/issue-67611-static-mut-refs.rs:26:23: 33:6
                                         // + literal: Const { ty: fn([async block@ui/async-await/issues/issue-67611-static-mut-refs.rs:26:23: 33:6]) -> [async block@ui/async-await/issues/issue-67611-static-mut-refs.rs:26:23: 33:6] {identity_future::<(), [async block@ui/async-await/issues/issue-67611-static-mut-refs.rs:26:23: 33:6]>}, val: Value(<ZST>) }
    }

    bb2: {
        _6 = move _1;                    // scope 2 at ui/async-await/issues/issue-67611-static-mut-refs.rs:34:18: 34:29
        _5 = is_send_sync::<[async block@ui/async-await/issues/issue-67611-static-mut-refs.rs:23:23: 25:6]>(move _6) -> bb3; // scope 2 at ui/async-await/issues/issue-67611-static-mut-refs.rs:34:5: 34:30
                                         // mir::Constant
                                         // + span: ui/async-await/issues/issue-67611-static-mut-refs.rs:34:5: 34:17
                                         // + literal: Const { ty: fn([async block@ui/async-await/issues/issue-67611-static-mut-refs.rs:23:23: 25:6]) {is_send_sync::<[async block@ui/async-await/issues/issue-67611-static-mut-refs.rs:23:23: 25:6]>}, val: Value(<ZST>) }
    }

    bb3: {
        _8 = move _3;                    // scope 2 at ui/async-await/issues/issue-67611-static-mut-refs.rs:35:18: 35:29
        _7 = is_send_sync::<[async block@ui/async-await/issues/issue-67611-static-mut-refs.rs:26:23: 33:6]>(move _8) -> bb4; // scope 2 at ui/async-await/issues/issue-67611-static-mut-refs.rs:35:5: 35:30
                                         // mir::Constant
                                         // + span: ui/async-await/issues/issue-67611-static-mut-refs.rs:35:5: 35:17
                                         // + literal: Const { ty: fn([async block@ui/async-await/issues/issue-67611-static-mut-refs.rs:26:23: 33:6]) {is_send_sync::<[async block@ui/async-await/issues/issue-67611-static-mut-refs.rs:26:23: 33:6]>}, val: Value(<ZST>) }
    }

    bb4: {
        _10 = fun() -> bb5;              // scope 2 at ui/async-await/issues/issue-67611-static-mut-refs.rs:36:18: 36:23
                                         // mir::Constant
                                         // + span: ui/async-await/issues/issue-67611-static-mut-refs.rs:36:18: 36:21
                                         // + literal: Const { ty: fn() -> impl Future<Output = ()> {fun}, val: Value(<ZST>) }
    }

    bb5: {
        _9 = is_send_sync::<impl Future<Output = ()>>(move _10) -> bb6; // scope 2 at ui/async-await/issues/issue-67611-static-mut-refs.rs:36:5: 36:24
                                         // mir::Constant
                                         // + span: ui/async-await/issues/issue-67611-static-mut-refs.rs:36:5: 36:17
                                         // + literal: Const { ty: fn(impl Future<Output = ()>) {is_send_sync::<impl Future<Output = ()>>}, val: Value(<ZST>) }
    }

    bb6: {
        return;                          // scope 0 at ui/async-await/issues/issue-67611-static-mut-refs.rs:37:2: 37:2
    }
}

fn main::{closure#0}(_1: Pin<&mut [async block@ui/async-await/issues/issue-67611-static-mut-refs.rs:23:23: 25:6]>, _2: &mut Context<'_>) -> Poll<()> {
    debug _task_context => _21;          // in scope 0 at ui/async-await/issues/issue-67611-static-mut-refs.rs:23:23: 25:6
    let mut _0: std::task::Poll<()>;     // return place in scope 0 at ui/async-await/issues/issue-67611-static-mut-refs.rs:23:23: 25:6
    let _3: i32;                         // in scope 0 at ui/async-await/issues/issue-67611-static-mut-refs.rs:24:13: 24:14
    let _4: usize;                       // in scope 0 at ui/async-await/issues/issue-67611-static-mut-refs.rs:24:28: 24:45
    let mut _5: [async block@ui/async-await/issues/issue-67611-static-mut-refs.rs:24:28: 24:39]; // in scope 0 at ui/async-await/issues/issue-67611-static-mut-refs.rs:24:39: 24:45
    let mut _6: [async block@ui/async-await/issues/issue-67611-static-mut-refs.rs:24:28: 24:39]; // in scope 0 at ui/async-await/issues/issue-67611-static-mut-refs.rs:24:28: 24:39
    let mut _7: [async block@ui/async-await/issues/issue-67611-static-mut-refs.rs:24:28: 24:39]; // in scope 0 at ui/async-await/issues/issue-67611-static-mut-refs.rs:24:28: 24:39
    let mut _8: std::task::Poll<usize>;  // in scope 0 at ui/async-await/issues/issue-67611-static-mut-refs.rs:24:39: 24:45
    let mut _9: std::pin::Pin<&mut [async block@ui/async-await/issues/issue-67611-static-mut-refs.rs:24:28: 24:39]>; // in scope 0 at ui/async-await/issues/issue-67611-static-mut-refs.rs:24:39: 24:45
    let mut _10: &mut [async block@ui/async-await/issues/issue-67611-static-mut-refs.rs:24:28: 24:39]; // in scope 0 at ui/async-await/issues/issue-67611-static-mut-refs.rs:24:39: 24:45
    let mut _11: &mut [async block@ui/async-await/issues/issue-67611-static-mut-refs.rs:24:28: 24:39]; // in scope 0 at ui/async-await/issues/issue-67611-static-mut-refs.rs:24:39: 24:45
    let mut _12: &mut std::task::Context<'_>; // in scope 0 at ui/async-await/issues/issue-67611-static-mut-refs.rs:24:28: 24:45
    let mut _13: &mut std::task::Context<'_>; // in scope 0 at ui/async-await/issues/issue-67611-static-mut-refs.rs:24:28: 24:45
    let mut _14: &mut std::task::Context<'_>; // in scope 0 at ui/async-await/issues/issue-67611-static-mut-refs.rs:24:39: 24:45
    let mut _15: isize;                  // in scope 0 at ui/async-await/issues/issue-67611-static-mut-refs.rs:24:39: 24:45
    let mut _17: &mut std::task::Context<'_>; // in scope 0 at ui/async-await/issues/issue-67611-static-mut-refs.rs:24:39: 24:45
    let mut _18: usize;                  // in scope 0 at ui/async-await/issues/issue-67611-static-mut-refs.rs:24:26: 24:46
    let mut _19: bool;                   // in scope 0 at ui/async-await/issues/issue-67611-static-mut-refs.rs:24:26: 24:46
    let mut _20: ();                     // in scope 0 at ui/async-await/issues/issue-67611-static-mut-refs.rs:23:23: 25:6
    let mut _21: &mut std::task::Context<'_>; // in scope 0 at ui/async-await/issues/issue-67611-static-mut-refs.rs:23:23: 25:6
    let mut _22: u32;                    // in scope 0 at ui/async-await/issues/issue-67611-static-mut-refs.rs:23:23: 25:6
    let mut _23: &mut [async block@ui/async-await/issues/issue-67611-static-mut-refs.rs:23:23: 25:6]; // in scope 0 at ui/async-await/issues/issue-67611-static-mut-refs.rs:23:23: 25:6
    let mut _24: &mut [async block@ui/async-await/issues/issue-67611-static-mut-refs.rs:23:23: 25:6]; // in scope 0 at ui/async-await/issues/issue-67611-static-mut-refs.rs:23:23: 25:6
    let mut _25: &mut [async block@ui/async-await/issues/issue-67611-static-mut-refs.rs:23:23: 25:6]; // in scope 0 at ui/async-await/issues/issue-67611-static-mut-refs.rs:23:23: 25:6
    let mut _26: &mut [async block@ui/async-await/issues/issue-67611-static-mut-refs.rs:23:23: 25:6]; // in scope 0 at ui/async-await/issues/issue-67611-static-mut-refs.rs:23:23: 25:6
    let mut _27: &mut [async block@ui/async-await/issues/issue-67611-static-mut-refs.rs:23:23: 25:6]; // in scope 0 at ui/async-await/issues/issue-67611-static-mut-refs.rs:23:23: 25:6
    let mut _28: &mut [async block@ui/async-await/issues/issue-67611-static-mut-refs.rs:23:23: 25:6]; // in scope 0 at ui/async-await/issues/issue-67611-static-mut-refs.rs:23:23: 25:6
    let mut _29: *mut [i32; 5];          // in scope 0 at ui/async-await/issues/issue-67611-static-mut-refs.rs:23:23: 25:6
    let mut _30: &mut [async block@ui/async-await/issues/issue-67611-static-mut-refs.rs:23:23: 25:6]; // in scope 0 at ui/async-await/issues/issue-67611-static-mut-refs.rs:23:23: 25:6
    let mut _31: &mut [async block@ui/async-await/issues/issue-67611-static-mut-refs.rs:23:23: 25:6]; // in scope 0 at ui/async-await/issues/issue-67611-static-mut-refs.rs:23:23: 25:6
    scope 1 {
        debug u => _3;                   // in scope 1 at ui/async-await/issues/issue-67611-static-mut-refs.rs:24:13: 24:14
    }
    scope 2 {
        scope 3 {
            debug __awaitee => (((*(_1.0: &mut [async block@ui/async-await/issues/issue-67611-static-mut-refs.rs:23:23: 25:6])) as variant#3).1: [async block@ui/async-await/issues/issue-67611-static-mut-refs.rs:24:28: 24:39]); // in scope 3 at ui/async-await/issues/issue-67611-static-mut-refs.rs:24:39: 24:45
            let _16: usize;              // in scope 3 at ui/async-await/issues/issue-67611-static-mut-refs.rs:24:28: 24:45
            scope 4 {
            }
            scope 5 {
                debug result => _16;     // in scope 5 at ui/async-await/issues/issue-67611-static-mut-refs.rs:24:28: 24:45
            }
        }
    }

    bb0: {
        _23 = deref_copy (_1.0: &mut [async block@ui/async-await/issues/issue-67611-static-mut-refs.rs:23:23: 25:6]); // scope 0 at ui/async-await/issues/issue-67611-static-mut-refs.rs:23:23: 25:6
        _22 = discriminant((*_23));      // scope 0 at ui/async-await/issues/issue-67611-static-mut-refs.rs:23:23: 25:6
        switchInt(move _22) -> [0: bb1, 1: bb14, 2: bb13, 3: bb12, otherwise: bb15]; // scope 0 at ui/async-await/issues/issue-67611-static-mut-refs.rs:23:23: 25:6
    }

    bb1: {
        _21 = move _2;                   // scope 0 at ui/async-await/issues/issue-67611-static-mut-refs.rs:23:23: 25:6
        _24 = deref_copy (_1.0: &mut [async block@ui/async-await/issues/issue-67611-static-mut-refs.rs:23:23: 25:6]); // scope 2 at ui/async-await/issues/issue-67611-static-mut-refs.rs:24:26: 24:27
        (((*_24) as variant#3).0: *mut [i32; 5]) = const {alloc1: *mut [i32; 5]}; // scope 2 at ui/async-await/issues/issue-67611-static-mut-refs.rs:24:26: 24:27
                                         // mir::Constant
                                         // + span: ui/async-await/issues/issue-67611-static-mut-refs.rs:24:26: 24:27
                                         // + literal: Const { ty: *mut [i32; 5], val: Value(Scalar(alloc1)) }
        _7 = [generator@ui/async-await/issues/issue-67611-static-mut-refs.rs:24:28: 24:39 (#0)]; // scope 2 at ui/async-await/issues/issue-67611-static-mut-refs.rs:24:28: 24:39
                                         // generator
                                         // + def_id: DefId(0:13 ~ issue_67611_static_mut_refs[1fee]::main::{closure#0}::{closure#0})
                                         // + substs: [
                                         //     std::future::ResumeTy,
                                         //     (),
                                         //     usize,
                                         //     {},
                                         //     (),
                                         // ]
                                         // + movability: Static
        _6 = identity_future::<usize, [async block@ui/async-await/issues/issue-67611-static-mut-refs.rs:24:28: 24:39]>(move _7) -> [return: bb2, unwind: bb11]; // scope 2 at ui/async-await/issues/issue-67611-static-mut-refs.rs:24:28: 24:39
                                         // mir::Constant
                                         // + span: ui/async-await/issues/issue-67611-static-mut-refs.rs:24:28: 24:39
                                         // + literal: Const { ty: fn([async block@ui/async-await/issues/issue-67611-static-mut-refs.rs:24:28: 24:39]) -> [async block@ui/async-await/issues/issue-67611-static-mut-refs.rs:24:28: 24:39] {identity_future::<usize, [async block@ui/async-await/issues/issue-67611-static-mut-refs.rs:24:28: 24:39]>}, val: Value(<ZST>) }
    }

    bb2: {
        _5 = <[async block@ui/async-await/issues/issue-67611-static-mut-refs.rs:24:28: 24:39] as IntoFuture>::into_future(move _6) -> [return: bb3, unwind: bb11]; // scope 2 at ui/async-await/issues/issue-67611-static-mut-refs.rs:24:39: 24:45
                                         // mir::Constant
                                         // + span: ui/async-await/issues/issue-67611-static-mut-refs.rs:24:39: 24:45
                                         // + literal: Const { ty: fn([async block@ui/async-await/issues/issue-67611-static-mut-refs.rs:24:28: 24:39]) -> <[async block@ui/async-await/issues/issue-67611-static-mut-refs.rs:24:28: 24:39] as IntoFuture>::IntoFuture {<[async block@ui/async-await/issues/issue-67611-static-mut-refs.rs:24:28: 24:39] as IntoFuture>::into_future}, val: Value(<ZST>) }
    }

    bb3: {
        _25 = deref_copy (_1.0: &mut [async block@ui/async-await/issues/issue-67611-static-mut-refs.rs:23:23: 25:6]); // scope 2 at ui/async-await/issues/issue-67611-static-mut-refs.rs:24:39: 24:45
        (((*_25) as variant#3).1: [async block@ui/async-await/issues/issue-67611-static-mut-refs.rs:24:28: 24:39]) = move _5; // scope 2 at ui/async-await/issues/issue-67611-static-mut-refs.rs:24:39: 24:45
        goto -> bb4;                     // scope 3 at ui/async-await/issues/issue-67611-static-mut-refs.rs:24:39: 24:45
    }

    bb4: {
        _26 = deref_copy (_1.0: &mut [async block@ui/async-await/issues/issue-67611-static-mut-refs.rs:23:23: 25:6]); // scope 4 at ui/async-await/issues/issue-67611-static-mut-refs.rs:24:39: 24:45
        _11 = &mut (((*_26) as variant#3).1: [async block@ui/async-await/issues/issue-67611-static-mut-refs.rs:24:28: 24:39]); // scope 4 at ui/async-await/issues/issue-67611-static-mut-refs.rs:24:39: 24:45
        _10 = &mut (*_11);               // scope 4 at ui/async-await/issues/issue-67611-static-mut-refs.rs:24:39: 24:45
        _9 = Pin::<&mut [async block@ui/async-await/issues/issue-67611-static-mut-refs.rs:24:28: 24:39]>::new_unchecked(move _10) -> [return: bb5, unwind: bb11]; // scope 4 at ui/async-await/issues/issue-67611-static-mut-refs.rs:24:39: 24:45
                                         // mir::Constant
                                         // + span: ui/async-await/issues/issue-67611-static-mut-refs.rs:24:39: 24:45
                                         // + literal: Const { ty: unsafe fn(&mut [async block@ui/async-await/issues/issue-67611-static-mut-refs.rs:24:28: 24:39]) -> Pin<&mut [async block@ui/async-await/issues/issue-67611-static-mut-refs.rs:24:28: 24:39]> {Pin::<&mut [async block@ui/async-await/issues/issue-67611-static-mut-refs.rs:24:28: 24:39]>::new_unchecked}, val: Value(<ZST>) }
    }

    bb5: {
        _14 = _21;                       // scope 4 at ui/async-await/issues/issue-67611-static-mut-refs.rs:24:39: 24:45
        _13 = move _14;                  // scope 4 at ui/async-await/issues/issue-67611-static-mut-refs.rs:24:28: 24:45
        _12 = &mut (*_13);               // scope 4 at ui/async-await/issues/issue-67611-static-mut-refs.rs:24:28: 24:45
        _8 = <[async block@ui/async-await/issues/issue-67611-static-mut-refs.rs:24:28: 24:39] as Future>::poll(move _9, move _12) -> [return: bb6, unwind: bb11]; // scope 4 at ui/async-await/issues/issue-67611-static-mut-refs.rs:24:39: 24:45
                                         // mir::Constant
                                         // + span: ui/async-await/issues/issue-67611-static-mut-refs.rs:24:39: 24:45
                                         // + literal: Const { ty: for<'a, 'b, 'c> fn(Pin<&'a mut [async block@ui/async-await/issues/issue-67611-static-mut-refs.rs:24:28: 24:39]>, &'b mut Context<'c>) -> Poll<<[async block@ui/async-await/issues/issue-67611-static-mut-refs.rs:24:28: 24:39] as Future>::Output> {<[async block@ui/async-await/issues/issue-67611-static-mut-refs.rs:24:28: 24:39] as Future>::poll}, val: Value(<ZST>) }
    }

    bb6: {
        _15 = discriminant(_8);          // scope 3 at ui/async-await/issues/issue-67611-static-mut-refs.rs:24:39: 24:45
        switchInt(move _15) -> [0: bb9, 1: bb7, otherwise: bb8]; // scope 3 at ui/async-await/issues/issue-67611-static-mut-refs.rs:24:39: 24:45
    }

    bb7: {
        _0 = Poll::<()>::Pending;        // scope 3 at ui/async-await/issues/issue-67611-static-mut-refs.rs:24:39: 24:45
        _27 = deref_copy (_1.0: &mut [async block@ui/async-await/issues/issue-67611-static-mut-refs.rs:23:23: 25:6]); // scope 3 at ui/async-await/issues/issue-67611-static-mut-refs.rs:24:39: 24:45
        discriminant((*_27)) = 3;        // scope 3 at ui/async-await/issues/issue-67611-static-mut-refs.rs:24:39: 24:45
        return;                          // scope 3 at ui/async-await/issues/issue-67611-static-mut-refs.rs:24:39: 24:45
    }

    bb8: {
        unreachable;                     // scope 3 at ui/async-await/issues/issue-67611-static-mut-refs.rs:24:39: 24:45
    }

    bb9: {
        _16 = ((_8 as Ready).0: usize);  // scope 3 at ui/async-await/issues/issue-67611-static-mut-refs.rs:24:28: 24:45
        _4 = _16;                        // scope 5 at ui/async-await/issues/issue-67611-static-mut-refs.rs:24:28: 24:45
        _18 = const 5_usize;             // scope 2 at ui/async-await/issues/issue-67611-static-mut-refs.rs:24:26: 24:46
        _19 = Lt(_4, _18);               // scope 2 at ui/async-await/issues/issue-67611-static-mut-refs.rs:24:26: 24:46
        assert(move _19, "index out of bounds: the length is {} but the index is {}", move _18, _4) -> [success: bb10, unwind: bb11]; // scope 2 at ui/async-await/issues/issue-67611-static-mut-refs.rs:24:26: 24:46
    }

    bb10: {
        _28 = deref_copy (_1.0: &mut [async block@ui/async-await/issues/issue-67611-static-mut-refs.rs:23:23: 25:6]); // scope 2 at ui/async-await/issues/issue-67611-static-mut-refs.rs:24:26: 24:46
        _29 = deref_copy (((*_28) as variant#3).0: *mut [i32; 5]); // scope 2 at ui/async-await/issues/issue-67611-static-mut-refs.rs:24:26: 24:46
        _3 = (*_29)[_4];                 // scope 2 at ui/async-await/issues/issue-67611-static-mut-refs.rs:24:26: 24:46
        _20 = const ();                  // scope 0 at ui/async-await/issues/issue-67611-static-mut-refs.rs:23:29: 25:6
        _0 = Poll::<()>::Ready(move _20); // scope 0 at ui/async-await/issues/issue-67611-static-mut-refs.rs:25:6: 25:6
        _30 = deref_copy (_1.0: &mut [async block@ui/async-await/issues/issue-67611-static-mut-refs.rs:23:23: 25:6]); // scope 0 at ui/async-await/issues/issue-67611-static-mut-refs.rs:25:6: 25:6
        discriminant((*_30)) = 1;        // scope 0 at ui/async-await/issues/issue-67611-static-mut-refs.rs:25:6: 25:6
        return;                          // scope 0 at ui/async-await/issues/issue-67611-static-mut-refs.rs:25:6: 25:6
    }

    bb11 (cleanup): {
        _31 = deref_copy (_1.0: &mut [async block@ui/async-await/issues/issue-67611-static-mut-refs.rs:23:23: 25:6]); // scope 0 at ui/async-await/issues/issue-67611-static-mut-refs.rs:23:23: 25:6
        discriminant((*_31)) = 2;        // scope 0 at ui/async-await/issues/issue-67611-static-mut-refs.rs:23:23: 25:6
        resume;                          // scope 0 at ui/async-await/issues/issue-67611-static-mut-refs.rs:23:23: 25:6
    }

    bb12: {
        _17 = move _2;                   // scope 0 at ui/async-await/issues/issue-67611-static-mut-refs.rs:23:23: 25:6
        _21 = move _17;                  // scope 3 at ui/async-await/issues/issue-67611-static-mut-refs.rs:24:39: 24:45
        goto -> bb4;                     // scope 3 at ui/async-await/issues/issue-67611-static-mut-refs.rs:24:39: 24:45
    }

    bb13: {
        assert(const false, "`async fn` resumed after panicking") -> bb13; // scope 0 at ui/async-await/issues/issue-67611-static-mut-refs.rs:23:23: 25:6
    }

    bb14: {
        assert(const false, "`async fn` resumed after completion") -> bb14; // scope 0 at ui/async-await/issues/issue-67611-static-mut-refs.rs:23:23: 25:6
    }

    bb15: {
        unreachable;                     // scope 0 at ui/async-await/issues/issue-67611-static-mut-refs.rs:23:23: 25:6
    }
}

alloc1 (static: A, size: 20, align: 4) {
    0x00 │ 01 00 00 00 02 00 00 00 03 00 00 00 04 00 00 00 │ ................
    0x10 │ 05 00 00 00                                     │ ....
}

fn main::{closure#0}::{closure#0}(_1: Pin<&mut [async block@ui/async-await/issues/issue-67611-static-mut-refs.rs:24:28: 24:39]>, _2: &mut Context<'_>) -> Poll<usize> {
    debug _task_context => _4;           // in scope 0 at ui/async-await/issues/issue-67611-static-mut-refs.rs:24:28: 24:39
    let mut _0: std::task::Poll<usize>;  // return place in scope 0 at ui/async-await/issues/issue-67611-static-mut-refs.rs:24:28: 24:39
    let mut _3: usize;                   // in scope 0 at ui/async-await/issues/issue-67611-static-mut-refs.rs:24:28: 24:39
    let mut _4: &mut std::task::Context<'_>; // in scope 0 at ui/async-await/issues/issue-67611-static-mut-refs.rs:24:28: 24:39
    let mut _5: u32;                     // in scope 0 at ui/async-await/issues/issue-67611-static-mut-refs.rs:24:28: 24:39
    let mut _6: &mut [async block@ui/async-await/issues/issue-67611-static-mut-refs.rs:24:28: 24:39]; // in scope 0 at ui/async-await/issues/issue-67611-static-mut-refs.rs:24:28: 24:39
    let mut _7: &mut [async block@ui/async-await/issues/issue-67611-static-mut-refs.rs:24:28: 24:39]; // in scope 0 at ui/async-await/issues/issue-67611-static-mut-refs.rs:24:28: 24:39

    bb0: {
        _6 = deref_copy (_1.0: &mut [async block@ui/async-await/issues/issue-67611-static-mut-refs.rs:24:28: 24:39]); // scope 0 at ui/async-await/issues/issue-67611-static-mut-refs.rs:24:28: 24:39
        _5 = discriminant((*_6));        // scope 0 at ui/async-await/issues/issue-67611-static-mut-refs.rs:24:28: 24:39
        switchInt(move _5) -> [0: bb1, 1: bb2, otherwise: bb3]; // scope 0 at ui/async-await/issues/issue-67611-static-mut-refs.rs:24:28: 24:39
    }

    bb1: {
        _4 = move _2;                    // scope 0 at ui/async-await/issues/issue-67611-static-mut-refs.rs:24:28: 24:39
        _3 = const 1_usize;              // scope 0 at ui/async-await/issues/issue-67611-static-mut-refs.rs:24:36: 24:37
        _0 = Poll::<usize>::Ready(move _3); // scope 0 at ui/async-await/issues/issue-67611-static-mut-refs.rs:24:39: 24:39
        _7 = deref_copy (_1.0: &mut [async block@ui/async-await/issues/issue-67611-static-mut-refs.rs:24:28: 24:39]); // scope 0 at ui/async-await/issues/issue-67611-static-mut-refs.rs:24:39: 24:39
        discriminant((*_7)) = 1;         // scope 0 at ui/async-await/issues/issue-67611-static-mut-refs.rs:24:39: 24:39
        return;                          // scope 0 at ui/async-await/issues/issue-67611-static-mut-refs.rs:24:39: 24:39
    }

    bb2: {
        assert(const false, "`async fn` resumed after completion") -> bb2; // scope 0 at ui/async-await/issues/issue-67611-static-mut-refs.rs:24:28: 24:39
    }

    bb3: {
        unreachable;                     // scope 0 at ui/async-await/issues/issue-67611-static-mut-refs.rs:24:28: 24:39
    }
}

fn main::{closure#1}(_1: Pin<&mut [async block@ui/async-await/issues/issue-67611-static-mut-refs.rs:26:23: 33:6]>, _2: &mut Context<'_>) -> Poll<()> {
    debug _task_context => _20;          // in scope 0 at ui/async-await/issues/issue-67611-static-mut-refs.rs:26:23: 33:6
    let mut _0: std::task::Poll<()>;     // return place in scope 0 at ui/async-await/issues/issue-67611-static-mut-refs.rs:26:23: 33:6
    let mut _5: bool;                    // in scope 0 at ui/async-await/issues/issue-67611-static-mut-refs.rs:29:22: 29:42
    let mut _6: [async block@ui/async-await/issues/issue-67611-static-mut-refs.rs:29:22: 29:36]; // in scope 0 at ui/async-await/issues/issue-67611-static-mut-refs.rs:29:36: 29:42
    let mut _7: [async block@ui/async-await/issues/issue-67611-static-mut-refs.rs:29:22: 29:36]; // in scope 0 at ui/async-await/issues/issue-67611-static-mut-refs.rs:29:22: 29:36
    let mut _8: [async block@ui/async-await/issues/issue-67611-static-mut-refs.rs:29:22: 29:36]; // in scope 0 at ui/async-await/issues/issue-67611-static-mut-refs.rs:29:22: 29:36
    let mut _9: std::task::Poll<bool>;   // in scope 0 at ui/async-await/issues/issue-67611-static-mut-refs.rs:29:36: 29:42
    let mut _10: std::pin::Pin<&mut [async block@ui/async-await/issues/issue-67611-static-mut-refs.rs:29:22: 29:36]>; // in scope 0 at ui/async-await/issues/issue-67611-static-mut-refs.rs:29:36: 29:42
    let mut _11: &mut [async block@ui/async-await/issues/issue-67611-static-mut-refs.rs:29:22: 29:36]; // in scope 0 at ui/async-await/issues/issue-67611-static-mut-refs.rs:29:36: 29:42
    let mut _12: &mut [async block@ui/async-await/issues/issue-67611-static-mut-refs.rs:29:22: 29:36]; // in scope 0 at ui/async-await/issues/issue-67611-static-mut-refs.rs:29:36: 29:42
    let mut _13: &mut std::task::Context<'_>; // in scope 0 at ui/async-await/issues/issue-67611-static-mut-refs.rs:29:22: 29:42
    let mut _14: &mut std::task::Context<'_>; // in scope 0 at ui/async-await/issues/issue-67611-static-mut-refs.rs:29:22: 29:42
    let mut _15: &mut std::task::Context<'_>; // in scope 0 at ui/async-await/issues/issue-67611-static-mut-refs.rs:29:36: 29:42
    let mut _16: isize;                  // in scope 0 at ui/async-await/issues/issue-67611-static-mut-refs.rs:29:36: 29:42
    let mut _18: &mut std::task::Context<'_>; // in scope 0 at ui/async-await/issues/issue-67611-static-mut-refs.rs:29:36: 29:42
    let mut _19: ();                     // in scope 0 at ui/async-await/issues/issue-67611-static-mut-refs.rs:26:23: 33:6
    let mut _20: &mut std::task::Context<'_>; // in scope 0 at ui/async-await/issues/issue-67611-static-mut-refs.rs:26:23: 33:6
    let mut _21: u32;                    // in scope 0 at ui/async-await/issues/issue-67611-static-mut-refs.rs:26:23: 33:6
    let mut _22: &mut [async block@ui/async-await/issues/issue-67611-static-mut-refs.rs:26:23: 33:6]; // in scope 0 at ui/async-await/issues/issue-67611-static-mut-refs.rs:26:23: 33:6
    let mut _23: &mut [async block@ui/async-await/issues/issue-67611-static-mut-refs.rs:26:23: 33:6]; // in scope 0 at ui/async-await/issues/issue-67611-static-mut-refs.rs:26:23: 33:6
    let mut _24: &mut [async block@ui/async-await/issues/issue-67611-static-mut-refs.rs:26:23: 33:6]; // in scope 0 at ui/async-await/issues/issue-67611-static-mut-refs.rs:26:23: 33:6
    let mut _25: *mut [i32; 5];          // in scope 0 at ui/async-await/issues/issue-67611-static-mut-refs.rs:26:23: 33:6
    let mut _26: &mut [async block@ui/async-await/issues/issue-67611-static-mut-refs.rs:26:23: 33:6]; // in scope 0 at ui/async-await/issues/issue-67611-static-mut-refs.rs:26:23: 33:6
    let mut _27: &mut [async block@ui/async-await/issues/issue-67611-static-mut-refs.rs:26:23: 33:6]; // in scope 0 at ui/async-await/issues/issue-67611-static-mut-refs.rs:26:23: 33:6
    let mut _28: &mut [async block@ui/async-await/issues/issue-67611-static-mut-refs.rs:26:23: 33:6]; // in scope 0 at ui/async-await/issues/issue-67611-static-mut-refs.rs:26:23: 33:6
    let mut _29: &mut [async block@ui/async-await/issues/issue-67611-static-mut-refs.rs:26:23: 33:6]; // in scope 0 at ui/async-await/issues/issue-67611-static-mut-refs.rs:26:23: 33:6
    let mut _30: *mut [i32; 5];          // in scope 0 at ui/async-await/issues/issue-67611-static-mut-refs.rs:26:23: 33:6
    let mut _31: &mut [async block@ui/async-await/issues/issue-67611-static-mut-refs.rs:26:23: 33:6]; // in scope 0 at ui/async-await/issues/issue-67611-static-mut-refs.rs:26:23: 33:6
    let mut _32: &mut [async block@ui/async-await/issues/issue-67611-static-mut-refs.rs:26:23: 33:6]; // in scope 0 at ui/async-await/issues/issue-67611-static-mut-refs.rs:26:23: 33:6
    scope 1 {
        let _3: [i32; 5];                // in scope 1 at ui/async-await/issues/issue-67611-static-mut-refs.rs:29:17: 29:18
        let _4: &[i32; 5];               // in scope 1 at ui/async-await/issues/issue-67611-static-mut-refs.rs:29:17: 29:18
        scope 2 {
            debug i => _3;               // in scope 2 at ui/async-await/issues/issue-67611-static-mut-refs.rs:29:17: 29:18
            debug i => _4;               // in scope 2 at ui/async-await/issues/issue-67611-static-mut-refs.rs:29:17: 29:18
        }
        scope 3 {
            debug __awaitee => (((*(_1.0: &mut [async block@ui/async-await/issues/issue-67611-static-mut-refs.rs:26:23: 33:6])) as variant#3).1: [async block@ui/async-await/issues/issue-67611-static-mut-refs.rs:29:22: 29:36]); // in scope 3 at ui/async-await/issues/issue-67611-static-mut-refs.rs:29:36: 29:42
            let _17: bool;               // in scope 3 at ui/async-await/issues/issue-67611-static-mut-refs.rs:29:22: 29:42
            scope 4 {
            }
            scope 5 {
                debug result => _17;     // in scope 5 at ui/async-await/issues/issue-67611-static-mut-refs.rs:29:22: 29:42
            }
        }
    }

    bb0: {
        _22 = deref_copy (_1.0: &mut [async block@ui/async-await/issues/issue-67611-static-mut-refs.rs:26:23: 33:6]); // scope 0 at ui/async-await/issues/issue-67611-static-mut-refs.rs:26:23: 33:6
        _21 = discriminant((*_22));      // scope 0 at ui/async-await/issues/issue-67611-static-mut-refs.rs:26:23: 33:6
        switchInt(move _21) -> [0: bb1, 1: bb16, 2: bb15, 3: bb14, otherwise: bb17]; // scope 0 at ui/async-await/issues/issue-67611-static-mut-refs.rs:26:23: 33:6
    }

    bb1: {
        _20 = move _2;                   // scope 0 at ui/async-await/issues/issue-67611-static-mut-refs.rs:26:23: 33:6
        _23 = deref_copy (_1.0: &mut [async block@ui/async-await/issues/issue-67611-static-mut-refs.rs:26:23: 33:6]); // scope 1 at ui/async-await/issues/issue-67611-static-mut-refs.rs:28:19: 28:20
        (((*_23) as variant#3).0: *mut [i32; 5]) = const {alloc1: *mut [i32; 5]}; // scope 1 at ui/async-await/issues/issue-67611-static-mut-refs.rs:28:19: 28:20
                                         // mir::Constant
                                         // + span: ui/async-await/issues/issue-67611-static-mut-refs.rs:28:19: 28:20
                                         // + literal: Const { ty: *mut [i32; 5], val: Value(Scalar(alloc1)) }
        _24 = deref_copy (_1.0: &mut [async block@ui/async-await/issues/issue-67611-static-mut-refs.rs:26:23: 33:6]); // scope 1 at ui/async-await/issues/issue-67611-static-mut-refs.rs:29:17: 29:18
        _25 = deref_copy (((*_24) as variant#3).0: *mut [i32; 5]); // scope 1 at ui/async-await/issues/issue-67611-static-mut-refs.rs:29:17: 29:18
        _4 = &(*_25);                    // scope 1 at ui/async-await/issues/issue-67611-static-mut-refs.rs:29:17: 29:18
        _8 = [generator@ui/async-await/issues/issue-67611-static-mut-refs.rs:29:22: 29:36 (#0)]; // scope 1 at ui/async-await/issues/issue-67611-static-mut-refs.rs:29:22: 29:36
                                         // generator
                                         // + def_id: DefId(0:15 ~ issue_67611_static_mut_refs[1fee]::main::{closure#1}::{closure#0})
                                         // + substs: [
                                         //     std::future::ResumeTy,
                                         //     (),
                                         //     bool,
                                         //     {},
                                         //     (),
                                         // ]
                                         // + movability: Static
        _7 = identity_future::<bool, [async block@ui/async-await/issues/issue-67611-static-mut-refs.rs:29:22: 29:36]>(move _8) -> [return: bb2, unwind: bb13]; // scope 1 at ui/async-await/issues/issue-67611-static-mut-refs.rs:29:22: 29:36
                                         // mir::Constant
                                         // + span: ui/async-await/issues/issue-67611-static-mut-refs.rs:29:22: 29:36
                                         // + literal: Const { ty: fn([async block@ui/async-await/issues/issue-67611-static-mut-refs.rs:29:22: 29:36]) -> [async block@ui/async-await/issues/issue-67611-static-mut-refs.rs:29:22: 29:36] {identity_future::<bool, [async block@ui/async-await/issues/issue-67611-static-mut-refs.rs:29:22: 29:36]>}, val: Value(<ZST>) }
    }

    bb2: {
        _6 = <[async block@ui/async-await/issues/issue-67611-static-mut-refs.rs:29:22: 29:36] as IntoFuture>::into_future(move _7) -> [return: bb3, unwind: bb13]; // scope 1 at ui/async-await/issues/issue-67611-static-mut-refs.rs:29:36: 29:42
                                         // mir::Constant
                                         // + span: ui/async-await/issues/issue-67611-static-mut-refs.rs:29:36: 29:42
                                         // + literal: Const { ty: fn([async block@ui/async-await/issues/issue-67611-static-mut-refs.rs:29:22: 29:36]) -> <[async block@ui/async-await/issues/issue-67611-static-mut-refs.rs:29:22: 29:36] as IntoFuture>::IntoFuture {<[async block@ui/async-await/issues/issue-67611-static-mut-refs.rs:29:22: 29:36] as IntoFuture>::into_future}, val: Value(<ZST>) }
    }

    bb3: {
        _26 = deref_copy (_1.0: &mut [async block@ui/async-await/issues/issue-67611-static-mut-refs.rs:26:23: 33:6]); // scope 1 at ui/async-await/issues/issue-67611-static-mut-refs.rs:29:36: 29:42
        (((*_26) as variant#3).1: [async block@ui/async-await/issues/issue-67611-static-mut-refs.rs:29:22: 29:36]) = move _6; // scope 1 at ui/async-await/issues/issue-67611-static-mut-refs.rs:29:36: 29:42
        goto -> bb4;                     // scope 3 at ui/async-await/issues/issue-67611-static-mut-refs.rs:29:36: 29:42
    }

    bb4: {
        _27 = deref_copy (_1.0: &mut [async block@ui/async-await/issues/issue-67611-static-mut-refs.rs:26:23: 33:6]); // scope 4 at ui/async-await/issues/issue-67611-static-mut-refs.rs:29:36: 29:42
        _12 = &mut (((*_27) as variant#3).1: [async block@ui/async-await/issues/issue-67611-static-mut-refs.rs:29:22: 29:36]); // scope 4 at ui/async-await/issues/issue-67611-static-mut-refs.rs:29:36: 29:42
        _11 = &mut (*_12);               // scope 4 at ui/async-await/issues/issue-67611-static-mut-refs.rs:29:36: 29:42
        _10 = Pin::<&mut [async block@ui/async-await/issues/issue-67611-static-mut-refs.rs:29:22: 29:36]>::new_unchecked(move _11) -> [return: bb5, unwind: bb13]; // scope 4 at ui/async-await/issues/issue-67611-static-mut-refs.rs:29:36: 29:42
                                         // mir::Constant
                                         // + span: ui/async-await/issues/issue-67611-static-mut-refs.rs:29:36: 29:42
                                         // + literal: Const { ty: unsafe fn(&mut [async block@ui/async-await/issues/issue-67611-static-mut-refs.rs:29:22: 29:36]) -> Pin<&mut [async block@ui/async-await/issues/issue-67611-static-mut-refs.rs:29:22: 29:36]> {Pin::<&mut [async block@ui/async-await/issues/issue-67611-static-mut-refs.rs:29:22: 29:36]>::new_unchecked}, val: Value(<ZST>) }
    }

    bb5: {
        _15 = _20;                       // scope 4 at ui/async-await/issues/issue-67611-static-mut-refs.rs:29:36: 29:42
        _14 = move _15;                  // scope 4 at ui/async-await/issues/issue-67611-static-mut-refs.rs:29:22: 29:42
        _13 = &mut (*_14);               // scope 4 at ui/async-await/issues/issue-67611-static-mut-refs.rs:29:22: 29:42
        _9 = <[async block@ui/async-await/issues/issue-67611-static-mut-refs.rs:29:22: 29:36] as Future>::poll(move _10, move _13) -> [return: bb6, unwind: bb13]; // scope 4 at ui/async-await/issues/issue-67611-static-mut-refs.rs:29:36: 29:42
                                         // mir::Constant
                                         // + span: ui/async-await/issues/issue-67611-static-mut-refs.rs:29:36: 29:42
                                         // + literal: Const { ty: for<'a, 'b, 'c> fn(Pin<&'a mut [async block@ui/async-await/issues/issue-67611-static-mut-refs.rs:29:22: 29:36]>, &'b mut Context<'c>) -> Poll<<[async block@ui/async-await/issues/issue-67611-static-mut-refs.rs:29:22: 29:36] as Future>::Output> {<[async block@ui/async-await/issues/issue-67611-static-mut-refs.rs:29:22: 29:36] as Future>::poll}, val: Value(<ZST>) }
    }

    bb6: {
        _16 = discriminant(_9);          // scope 3 at ui/async-await/issues/issue-67611-static-mut-refs.rs:29:36: 29:42
        switchInt(move _16) -> [0: bb9, 1: bb7, otherwise: bb8]; // scope 3 at ui/async-await/issues/issue-67611-static-mut-refs.rs:29:36: 29:42
    }

    bb7: {
        _0 = Poll::<()>::Pending;        // scope 3 at ui/async-await/issues/issue-67611-static-mut-refs.rs:29:36: 29:42
        _28 = deref_copy (_1.0: &mut [async block@ui/async-await/issues/issue-67611-static-mut-refs.rs:26:23: 33:6]); // scope 3 at ui/async-await/issues/issue-67611-static-mut-refs.rs:29:36: 29:42
        discriminant((*_28)) = 3;        // scope 3 at ui/async-await/issues/issue-67611-static-mut-refs.rs:29:36: 29:42
        return;                          // scope 3 at ui/async-await/issues/issue-67611-static-mut-refs.rs:29:36: 29:42
    }

    bb8: {
        unreachable;                     // scope 3 at ui/async-await/issues/issue-67611-static-mut-refs.rs:29:36: 29:42
    }

    bb9: {
        _17 = ((_9 as Ready).0: bool);   // scope 3 at ui/async-await/issues/issue-67611-static-mut-refs.rs:29:22: 29:42
        _5 = _17;                        // scope 5 at ui/async-await/issues/issue-67611-static-mut-refs.rs:29:22: 29:42
        switchInt(move _5) -> [0: bb11, otherwise: bb10]; // scope 1 at ui/async-await/issues/issue-67611-static-mut-refs.rs:29:22: 29:42
    }

    bb10: {
        _29 = deref_copy (_1.0: &mut [async block@ui/async-await/issues/issue-67611-static-mut-refs.rs:26:23: 33:6]); // scope 1 at ui/async-await/issues/issue-67611-static-mut-refs.rs:29:17: 29:18
        _30 = deref_copy (((*_29) as variant#3).0: *mut [i32; 5]); // scope 1 at ui/async-await/issues/issue-67611-static-mut-refs.rs:29:17: 29:18
        _3 = (*_30);                     // scope 1 at ui/async-await/issues/issue-67611-static-mut-refs.rs:29:17: 29:18
        _19 = ();                        // scope 2 at ui/async-await/issues/issue-67611-static-mut-refs.rs:29:46: 29:48
        goto -> bb12;                    // scope 1 at ui/async-await/issues/issue-67611-static-mut-refs.rs:29:47: 29:48
    }

    bb11: {
        _19 = ();                        // scope 1 at ui/async-await/issues/issue-67611-static-mut-refs.rs:30:22: 30:24
        goto -> bb12;                    // scope 1 at ui/async-await/issues/issue-67611-static-mut-refs.rs:30:22: 30:24
    }

    bb12: {
        _0 = Poll::<()>::Ready(move _19); // scope 0 at ui/async-await/issues/issue-67611-static-mut-refs.rs:33:6: 33:6
        _31 = deref_copy (_1.0: &mut [async block@ui/async-await/issues/issue-67611-static-mut-refs.rs:26:23: 33:6]); // scope 0 at ui/async-await/issues/issue-67611-static-mut-refs.rs:33:6: 33:6
        discriminant((*_31)) = 1;        // scope 0 at ui/async-await/issues/issue-67611-static-mut-refs.rs:33:6: 33:6
        return;                          // scope 0 at ui/async-await/issues/issue-67611-static-mut-refs.rs:33:6: 33:6
    }

    bb13 (cleanup): {
        _32 = deref_copy (_1.0: &mut [async block@ui/async-await/issues/issue-67611-static-mut-refs.rs:26:23: 33:6]); // scope 0 at ui/async-await/issues/issue-67611-static-mut-refs.rs:26:23: 33:6
        discriminant((*_32)) = 2;        // scope 0 at ui/async-await/issues/issue-67611-static-mut-refs.rs:26:23: 33:6
        resume;                          // scope 0 at ui/async-await/issues/issue-67611-static-mut-refs.rs:26:23: 33:6
    }

    bb14: {
        _18 = move _2;                   // scope 0 at ui/async-await/issues/issue-67611-static-mut-refs.rs:26:23: 33:6
        _20 = move _18;                  // scope 3 at ui/async-await/issues/issue-67611-static-mut-refs.rs:29:36: 29:42
        goto -> bb4;                     // scope 3 at ui/async-await/issues/issue-67611-static-mut-refs.rs:29:36: 29:42
    }

    bb15: {
        assert(const false, "`async fn` resumed after panicking") -> bb15; // scope 0 at ui/async-await/issues/issue-67611-static-mut-refs.rs:26:23: 33:6
    }

    bb16: {
        assert(const false, "`async fn` resumed after completion") -> bb16; // scope 0 at ui/async-await/issues/issue-67611-static-mut-refs.rs:26:23: 33:6
    }

    bb17: {
        unreachable;                     // scope 0 at ui/async-await/issues/issue-67611-static-mut-refs.rs:26:23: 33:6
    }
}

alloc1 (static: A, size: 20, align: 4) {
    0x00 │ 01 00 00 00 02 00 00 00 03 00 00 00 04 00 00 00 │ ................
    0x10 │ 05 00 00 00                                     │ ....
}

fn main::{closure#1}::{closure#0}(_1: Pin<&mut [async block@ui/async-await/issues/issue-67611-static-mut-refs.rs:29:22: 29:36]>, _2: &mut Context<'_>) -> Poll<bool> {
    debug _task_context => _4;           // in scope 0 at ui/async-await/issues/issue-67611-static-mut-refs.rs:29:22: 29:36
    let mut _0: std::task::Poll<bool>;   // return place in scope 0 at ui/async-await/issues/issue-67611-static-mut-refs.rs:29:22: 29:36
    let mut _3: bool;                    // in scope 0 at ui/async-await/issues/issue-67611-static-mut-refs.rs:29:22: 29:36
    let mut _4: &mut std::task::Context<'_>; // in scope 0 at ui/async-await/issues/issue-67611-static-mut-refs.rs:29:22: 29:36
    let mut _5: u32;                     // in scope 0 at ui/async-await/issues/issue-67611-static-mut-refs.rs:29:22: 29:36
    let mut _6: &mut [async block@ui/async-await/issues/issue-67611-static-mut-refs.rs:29:22: 29:36]; // in scope 0 at ui/async-await/issues/issue-67611-static-mut-refs.rs:29:22: 29:36
    let mut _7: &mut [async block@ui/async-await/issues/issue-67611-static-mut-refs.rs:29:22: 29:36]; // in scope 0 at ui/async-await/issues/issue-67611-static-mut-refs.rs:29:22: 29:36

    bb0: {
        _6 = deref_copy (_1.0: &mut [async block@ui/async-await/issues/issue-67611-static-mut-refs.rs:29:22: 29:36]); // scope 0 at ui/async-await/issues/issue-67611-static-mut-refs.rs:29:22: 29:36
        _5 = discriminant((*_6));        // scope 0 at ui/async-await/issues/issue-67611-static-mut-refs.rs:29:22: 29:36
        switchInt(move _5) -> [0: bb1, 1: bb2, otherwise: bb3]; // scope 0 at ui/async-await/issues/issue-67611-static-mut-refs.rs:29:22: 29:36
    }

    bb1: {
        _4 = move _2;                    // scope 0 at ui/async-await/issues/issue-67611-static-mut-refs.rs:29:22: 29:36
        _3 = const true;                 // scope 0 at ui/async-await/issues/issue-67611-static-mut-refs.rs:29:30: 29:34
        _0 = Poll::<bool>::Ready(move _3); // scope 0 at ui/async-await/issues/issue-67611-static-mut-refs.rs:29:36: 29:36
        _7 = deref_copy (_1.0: &mut [async block@ui/async-await/issues/issue-67611-static-mut-refs.rs:29:22: 29:36]); // scope 0 at ui/async-await/issues/issue-67611-static-mut-refs.rs:29:36: 29:36
        discriminant((*_7)) = 1;         // scope 0 at ui/async-await/issues/issue-67611-static-mut-refs.rs:29:36: 29:36
        return;                          // scope 0 at ui/async-await/issues/issue-67611-static-mut-refs.rs:29:36: 29:36
    }

    bb2: {
        assert(const false, "`async fn` resumed after completion") -> bb2; // scope 0 at ui/async-await/issues/issue-67611-static-mut-refs.rs:29:22: 29:36
    }

    bb3: {
        unreachable;                     // scope 0 at ui/async-await/issues/issue-67611-static-mut-refs.rs:29:22: 29:36
    }
}
