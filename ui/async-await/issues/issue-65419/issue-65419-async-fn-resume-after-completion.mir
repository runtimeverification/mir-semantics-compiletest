// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
fn foo() -> impl Future<Output = ()> {
    let mut _0: impl std::future::Future<Output = ()>; // return place in scope 0 at ui/async-await/issues/issue-65419/issue-65419-async-fn-resume-after-completion.rs:12:16: 12:16
    let mut _1: [async fn body@ui/async-await/issues/issue-65419/issue-65419-async-fn-resume-after-completion.rs:12:16: 13:2]; // in scope 0 at ui/async-await/issues/issue-65419/issue-65419-async-fn-resume-after-completion.rs:12:16: 13:2

    bb0: {
        _1 = [generator@ui/async-await/issues/issue-65419/issue-65419-async-fn-resume-after-completion.rs:12:16: 13:2 (#0)]; // scope 0 at ui/async-await/issues/issue-65419/issue-65419-async-fn-resume-after-completion.rs:12:16: 13:2
                                         // generator
                                         // + def_id: DefId(0:4 ~ issue_65419_async_fn_resume_after_completion[46d9]::foo::{closure#0})
                                         // + substs: [
                                         //     std::future::ResumeTy,
                                         //     (),
                                         //     (),
                                         //     {},
                                         //     (),
                                         // ]
                                         // + movability: Static
        _0 = identity_future::<(), [async fn body@ui/async-await/issues/issue-65419/issue-65419-async-fn-resume-after-completion.rs:12:16: 13:2]>(move _1) -> bb1; // scope 0 at ui/async-await/issues/issue-65419/issue-65419-async-fn-resume-after-completion.rs:12:16: 13:2
                                         // mir::Constant
                                         // + span: ui/async-await/issues/issue-65419/issue-65419-async-fn-resume-after-completion.rs:12:16: 13:2
                                         // + literal: Const { ty: fn([async fn body@ui/async-await/issues/issue-65419/issue-65419-async-fn-resume-after-completion.rs:12:16: 13:2]) -> [async fn body@ui/async-await/issues/issue-65419/issue-65419-async-fn-resume-after-completion.rs:12:16: 13:2] {identity_future::<(), [async fn body@ui/async-await/issues/issue-65419/issue-65419-async-fn-resume-after-completion.rs:12:16: 13:2]>}, val: Value(<ZST>) }
    }

    bb1: {
        return;                          // scope 0 at ui/async-await/issues/issue-65419/issue-65419-async-fn-resume-after-completion.rs:13:2: 13:2
    }
}

fn foo::{closure#0}(_1: Pin<&mut [async fn body@ui/async-await/issues/issue-65419/issue-65419-async-fn-resume-after-completion.rs:12:16: 13:2]>, _2: &mut Context<'_>) -> Poll<()> {
    debug _task_context => _4;           // in scope 0 at ui/async-await/issues/issue-65419/issue-65419-async-fn-resume-after-completion.rs:12:16: 13:2
    let mut _0: std::task::Poll<()>;     // return place in scope 0 at ui/async-await/issues/issue-65419/issue-65419-async-fn-resume-after-completion.rs:12:16: 13:2
    let mut _3: ();                      // in scope 0 at ui/async-await/issues/issue-65419/issue-65419-async-fn-resume-after-completion.rs:12:16: 13:2
    let mut _4: &mut std::task::Context<'_>; // in scope 0 at ui/async-await/issues/issue-65419/issue-65419-async-fn-resume-after-completion.rs:12:16: 13:2
    let mut _5: u32;                     // in scope 0 at ui/async-await/issues/issue-65419/issue-65419-async-fn-resume-after-completion.rs:12:16: 13:2
    let mut _6: &mut [async fn body@ui/async-await/issues/issue-65419/issue-65419-async-fn-resume-after-completion.rs:12:16: 13:2]; // in scope 0 at ui/async-await/issues/issue-65419/issue-65419-async-fn-resume-after-completion.rs:12:16: 13:2
    let mut _7: &mut [async fn body@ui/async-await/issues/issue-65419/issue-65419-async-fn-resume-after-completion.rs:12:16: 13:2]; // in scope 0 at ui/async-await/issues/issue-65419/issue-65419-async-fn-resume-after-completion.rs:12:16: 13:2

    bb0: {
        _6 = deref_copy (_1.0: &mut [async fn body@ui/async-await/issues/issue-65419/issue-65419-async-fn-resume-after-completion.rs:12:16: 13:2]); // scope 0 at ui/async-await/issues/issue-65419/issue-65419-async-fn-resume-after-completion.rs:12:16: 13:2
        _5 = discriminant((*_6));        // scope 0 at ui/async-await/issues/issue-65419/issue-65419-async-fn-resume-after-completion.rs:12:16: 13:2
        switchInt(move _5) -> [0: bb1, 1: bb2, otherwise: bb3]; // scope 0 at ui/async-await/issues/issue-65419/issue-65419-async-fn-resume-after-completion.rs:12:16: 13:2
    }

    bb1: {
        _4 = move _2;                    // scope 0 at ui/async-await/issues/issue-65419/issue-65419-async-fn-resume-after-completion.rs:12:16: 13:2
        _3 = const ();                   // scope 0 at ui/async-await/issues/issue-65419/issue-65419-async-fn-resume-after-completion.rs:12:16: 13:2
        _0 = Poll::<()>::Ready(move _3); // scope 0 at ui/async-await/issues/issue-65419/issue-65419-async-fn-resume-after-completion.rs:13:2: 13:2
        _7 = deref_copy (_1.0: &mut [async fn body@ui/async-await/issues/issue-65419/issue-65419-async-fn-resume-after-completion.rs:12:16: 13:2]); // scope 0 at ui/async-await/issues/issue-65419/issue-65419-async-fn-resume-after-completion.rs:13:2: 13:2
        discriminant((*_7)) = 1;         // scope 0 at ui/async-await/issues/issue-65419/issue-65419-async-fn-resume-after-completion.rs:13:2: 13:2
        return;                          // scope 0 at ui/async-await/issues/issue-65419/issue-65419-async-fn-resume-after-completion.rs:13:2: 13:2
    }

    bb2: {
        assert(const false, "`async fn` resumed after completion") -> bb2; // scope 0 at ui/async-await/issues/issue-65419/issue-65419-async-fn-resume-after-completion.rs:12:16: 13:2
    }

    bb3: {
        unreachable;                     // scope 0 at ui/async-await/issues/issue-65419/issue-65419-async-fn-resume-after-completion.rs:12:16: 13:2
    }
}

fn main() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/async-await/issues/issue-65419/issue-65419-async-fn-resume-after-completion.rs:15:11: 15:11
    let mut _1: std::pin::Pin<std::boxed::Box<impl std::future::Future<Output = ()>>>; // in scope 0 at ui/async-await/issues/issue-65419/issue-65419-async-fn-resume-after-completion.rs:16:9: 16:19
    let mut _2: impl std::future::Future<Output = ()>; // in scope 0 at ui/async-await/issues/issue-65419/issue-65419-async-fn-resume-after-completion.rs:16:31: 16:36
    let _3: ();                          // in scope 0 at ui/async-await/issues/issue-65419/issue-65419-async-fn-resume-after-completion.rs:17:5: 17:40
    let mut _4: std::pin::Pin<&mut impl std::future::Future<Output = ()>>; // in scope 0 at ui/async-await/issues/issue-65419/issue-65419-async-fn-resume-after-completion.rs:17:24: 17:39
    let mut _5: &mut std::pin::Pin<std::boxed::Box<impl std::future::Future<Output = ()>>>; // in scope 0 at ui/async-await/issues/issue-65419/issue-65419-async-fn-resume-after-completion.rs:17:24: 17:39
    let _6: ();                          // in scope 0 at ui/async-await/issues/issue-65419/issue-65419-async-fn-resume-after-completion.rs:18:5: 18:40
    let mut _7: std::pin::Pin<&mut impl std::future::Future<Output = ()>>; // in scope 0 at ui/async-await/issues/issue-65419/issue-65419-async-fn-resume-after-completion.rs:18:24: 18:39
    let mut _8: &mut std::pin::Pin<std::boxed::Box<impl std::future::Future<Output = ()>>>; // in scope 0 at ui/async-await/issues/issue-65419/issue-65419-async-fn-resume-after-completion.rs:18:24: 18:39
    scope 1 {
        debug future => _1;              // in scope 1 at ui/async-await/issues/issue-65419/issue-65419-async-fn-resume-after-completion.rs:16:9: 16:19
    }

    bb0: {
        _2 = foo() -> bb1;               // scope 0 at ui/async-await/issues/issue-65419/issue-65419-async-fn-resume-after-completion.rs:16:31: 16:36
                                         // mir::Constant
                                         // + span: ui/async-await/issues/issue-65419/issue-65419-async-fn-resume-after-completion.rs:16:31: 16:34
                                         // + literal: Const { ty: fn() -> impl Future<Output = ()> {foo}, val: Value(<ZST>) }
    }

    bb1: {
        _1 = Box::<impl Future<Output = ()>>::pin(move _2) -> bb2; // scope 0 at ui/async-await/issues/issue-65419/issue-65419-async-fn-resume-after-completion.rs:16:22: 16:37
                                         // mir::Constant
                                         // + span: ui/async-await/issues/issue-65419/issue-65419-async-fn-resume-after-completion.rs:16:22: 16:30
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: fn(impl Future<Output = ()>) -> Pin<Box<impl Future<Output = ()>>> {Box::<impl Future<Output = ()>>::pin}, val: Value(<ZST>) }
    }

    bb2: {
        _5 = &mut _1;                    // scope 1 at ui/async-await/issues/issue-65419/issue-65419-async-fn-resume-after-completion.rs:17:24: 17:39
        _4 = Pin::<Box<impl Future<Output = ()>>>::as_mut(move _5) -> [return: bb3, unwind: bb8]; // scope 1 at ui/async-await/issues/issue-65419/issue-65419-async-fn-resume-after-completion.rs:17:24: 17:39
                                         // mir::Constant
                                         // + span: ui/async-await/issues/issue-65419/issue-65419-async-fn-resume-after-completion.rs:17:31: 17:37
                                         // + literal: Const { ty: for<'a> fn(&'a mut Pin<Box<impl Future<Output = ()>>>) -> Pin<&'a mut <Box<impl Future<Output = ()>> as Deref>::Target> {Pin::<Box<impl Future<Output = ()>>>::as_mut}, val: Value(<ZST>) }
    }

    bb3: {
        _3 = block_on::<Pin<&mut impl Future<Output = ()>>>(move _4) -> [return: bb4, unwind: bb8]; // scope 1 at ui/async-await/issues/issue-65419/issue-65419-async-fn-resume-after-completion.rs:17:5: 17:40
                                         // mir::Constant
                                         // + span: ui/async-await/issues/issue-65419/issue-65419-async-fn-resume-after-completion.rs:17:5: 17:23
                                         // + literal: Const { ty: fn(Pin<&mut impl Future<Output = ()>>) -> <Pin<&mut impl Future<Output = ()>> as Future>::Output {block_on::<Pin<&mut impl Future<Output = ()>>>}, val: Value(<ZST>) }
    }

    bb4: {
        _8 = &mut _1;                    // scope 1 at ui/async-await/issues/issue-65419/issue-65419-async-fn-resume-after-completion.rs:18:24: 18:39
        _7 = Pin::<Box<impl Future<Output = ()>>>::as_mut(move _8) -> [return: bb5, unwind: bb8]; // scope 1 at ui/async-await/issues/issue-65419/issue-65419-async-fn-resume-after-completion.rs:18:24: 18:39
                                         // mir::Constant
                                         // + span: ui/async-await/issues/issue-65419/issue-65419-async-fn-resume-after-completion.rs:18:31: 18:37
                                         // + literal: Const { ty: for<'a> fn(&'a mut Pin<Box<impl Future<Output = ()>>>) -> Pin<&'a mut <Box<impl Future<Output = ()>> as Deref>::Target> {Pin::<Box<impl Future<Output = ()>>>::as_mut}, val: Value(<ZST>) }
    }

    bb5: {
        _6 = block_on::<Pin<&mut impl Future<Output = ()>>>(move _7) -> [return: bb6, unwind: bb8]; // scope 1 at ui/async-await/issues/issue-65419/issue-65419-async-fn-resume-after-completion.rs:18:5: 18:40
                                         // mir::Constant
                                         // + span: ui/async-await/issues/issue-65419/issue-65419-async-fn-resume-after-completion.rs:18:5: 18:23
                                         // + literal: Const { ty: fn(Pin<&mut impl Future<Output = ()>>) -> <Pin<&mut impl Future<Output = ()>> as Future>::Output {block_on::<Pin<&mut impl Future<Output = ()>>>}, val: Value(<ZST>) }
    }

    bb6: {
        drop(_1) -> bb7;                 // scope 0 at ui/async-await/issues/issue-65419/issue-65419-async-fn-resume-after-completion.rs:19:1: 19:2
    }

    bb7: {
        return;                          // scope 0 at ui/async-await/issues/issue-65419/issue-65419-async-fn-resume-after-completion.rs:19:2: 19:2
    }

    bb8 (cleanup): {
        drop(_1) -> bb9;                 // scope 0 at ui/async-await/issues/issue-65419/issue-65419-async-fn-resume-after-completion.rs:19:1: 19:2
    }

    bb9 (cleanup): {
        resume;                          // scope 0 at ui/async-await/issues/issue-65419/issue-65419-async-fn-resume-after-completion.rs:15:1: 19:2
    }
}

fn block_on(_1: F) -> <F as Future>::Output {
    debug future => _1;                  // in scope 0 at ui/async-await/issues/issue-65419/issue-65419-async-fn-resume-after-completion.rs:28:32: 28:42
    let mut _2: std::pin::Pin<&mut F>;   // in scope 0 at ui/async-await/issues/issue-65419/issue-65419-async-fn-resume-after-completion.rs:29:13: 29:23
    let mut _3: &mut F;                  // in scope 0 at ui/async-await/issues/issue-65419/issue-65419-async-fn-resume-after-completion.rs:29:54: 29:65
    let mut _5: std::task::RawWaker;     // in scope 0 at ui/async-await/issues/issue-65419/issue-65419-async-fn-resume-after-completion.rs:37:46: 37:87
    let mut _6: *const ();               // in scope 0 at ui/async-await/issues/issue-65419/issue-65419-async-fn-resume-after-completion.rs:37:60: 37:77
    let mut _7: &std::task::RawWakerVTable; // in scope 0 at ui/async-await/issues/issue-65419/issue-65419-async-fn-resume-after-completion.rs:37:79: 37:86
    let _8: &std::task::RawWakerVTable;  // in scope 0 at ui/async-await/issues/issue-65419/issue-65419-async-fn-resume-after-completion.rs:37:79: 37:86
    let _9: &std::task::RawWakerVTable;  // in scope 0 at ui/async-await/issues/issue-65419/issue-65419-async-fn-resume-after-completion.rs:37:80: 37:86
    let mut _11: &std::task::Waker;      // in scope 0 at ui/async-await/issues/issue-65419/issue-65419-async-fn-resume-after-completion.rs:38:47: 38:53
    let _12: &std::task::Waker;          // in scope 0 at ui/async-await/issues/issue-65419/issue-65419-async-fn-resume-after-completion.rs:38:47: 38:53
    let mut _13: std::task::Poll<<F as std::future::Future>::Output>; // in scope 0 at ui/async-await/issues/issue-65419/issue-65419-async-fn-resume-after-completion.rs:41:39: 41:73
    let mut _14: std::pin::Pin<&mut F>;  // in scope 0 at ui/async-await/issues/issue-65419/issue-65419-async-fn-resume-after-completion.rs:41:39: 41:54
    let mut _15: &mut std::pin::Pin<&mut F>; // in scope 0 at ui/async-await/issues/issue-65419/issue-65419-async-fn-resume-after-completion.rs:41:39: 41:54
    let mut _16: &mut std::task::Context<'_>; // in scope 0 at ui/async-await/issues/issue-65419/issue-65419-async-fn-resume-after-completion.rs:41:60: 41:72
    let mut _17: &mut std::task::Context<'_>; // in scope 0 at ui/async-await/issues/issue-65419/issue-65419-async-fn-resume-after-completion.rs:41:60: 41:72
    let mut _18: isize;                  // in scope 0 at ui/async-await/issues/issue-65419/issue-65419-async-fn-resume-after-completion.rs:41:20: 41:36
    scope 1 {
        debug future => _2;              // in scope 1 at ui/async-await/issues/issue-65419/issue-65419-async-fn-resume-after-completion.rs:29:13: 29:23
        let _4: std::task::Waker;        // in scope 1 at ui/async-await/issues/issue-65419/issue-65419-async-fn-resume-after-completion.rs:37:13: 37:18
        scope 3 {
            debug waker => _4;           // in scope 3 at ui/async-await/issues/issue-65419/issue-65419-async-fn-resume-after-completion.rs:37:13: 37:18
            let mut _10: std::task::Context<'_>; // in scope 3 at ui/async-await/issues/issue-65419/issue-65419-async-fn-resume-after-completion.rs:38:13: 38:24
            scope 5 {
                debug context => _10;    // in scope 5 at ui/async-await/issues/issue-65419/issue-65419-async-fn-resume-after-completion.rs:38:13: 38:24
                scope 6 {
                    debug val => _0;     // in scope 6 at ui/async-await/issues/issue-65419/issue-65419-async-fn-resume-after-completion.rs:41:32: 41:35
                    let mut _0: <F as std::future::Future>::Output; // return place in scope 6 at ui/async-await/issues/issue-65419/issue-65419-async-fn-resume-after-completion.rs:41:32: 41:35
                }
            }
        }
        scope 4 {
        }
    }
    scope 2 {
    }

    bb0: {
        _3 = &mut _1;                    // scope 2 at ui/async-await/issues/issue-65419/issue-65419-async-fn-resume-after-completion.rs:29:54: 29:65
        _2 = Pin::<&mut F>::new_unchecked(move _3) -> [return: bb1, unwind: bb13]; // scope 2 at ui/async-await/issues/issue-65419/issue-65419-async-fn-resume-after-completion.rs:29:35: 29:66
                                         // mir::Constant
                                         // + span: ui/async-await/issues/issue-65419/issue-65419-async-fn-resume-after-completion.rs:29:35: 29:53
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: unsafe fn(&mut F) -> Pin<&mut F> {Pin::<&mut F>::new_unchecked}, val: Value(<ZST>) }
    }

    bb1: {
        _6 = null::<()>() -> [return: bb2, unwind: bb13]; // scope 4 at ui/async-await/issues/issue-65419/issue-65419-async-fn-resume-after-completion.rs:37:60: 37:77
                                         // mir::Constant
                                         // + span: ui/async-await/issues/issue-65419/issue-65419-async-fn-resume-after-completion.rs:37:60: 37:75
                                         // + literal: Const { ty: fn() -> *const () {null::<()>}, val: Value(<ZST>) }
    }

    bb2: {
        _9 = const {alloc1: &RawWakerVTable}; // scope 4 at ui/async-await/issues/issue-65419/issue-65419-async-fn-resume-after-completion.rs:37:80: 37:86
                                         // mir::Constant
                                         // + span: ui/async-await/issues/issue-65419/issue-65419-async-fn-resume-after-completion.rs:37:80: 37:86
                                         // + literal: Const { ty: &RawWakerVTable, val: Value(Scalar(alloc1)) }
        _8 = _9;                         // scope 4 at ui/async-await/issues/issue-65419/issue-65419-async-fn-resume-after-completion.rs:37:79: 37:86
        _7 = _8;                         // scope 4 at ui/async-await/issues/issue-65419/issue-65419-async-fn-resume-after-completion.rs:37:79: 37:86
        _5 = RawWaker::new(move _6, move _7) -> [return: bb3, unwind: bb13]; // scope 4 at ui/async-await/issues/issue-65419/issue-65419-async-fn-resume-after-completion.rs:37:46: 37:87
                                         // mir::Constant
                                         // + span: ui/async-await/issues/issue-65419/issue-65419-async-fn-resume-after-completion.rs:37:46: 37:59
                                         // + literal: Const { ty: fn(*const (), &'static RawWakerVTable) -> RawWaker {RawWaker::new}, val: Value(<ZST>) }
    }

    bb3: {
        _4 = Waker::from_raw(move _5) -> [return: bb4, unwind: bb13]; // scope 4 at ui/async-await/issues/issue-65419/issue-65419-async-fn-resume-after-completion.rs:37:30: 37:88
                                         // mir::Constant
                                         // + span: ui/async-await/issues/issue-65419/issue-65419-async-fn-resume-after-completion.rs:37:30: 37:45
                                         // + literal: Const { ty: unsafe fn(RawWaker) -> Waker {Waker::from_raw}, val: Value(<ZST>) }
    }

    bb4: {
        _12 = &_4;                       // scope 3 at ui/async-await/issues/issue-65419/issue-65419-async-fn-resume-after-completion.rs:38:47: 38:53
        _11 = _12;                       // scope 3 at ui/async-await/issues/issue-65419/issue-65419-async-fn-resume-after-completion.rs:38:47: 38:53
        _10 = Context::<'_>::from_waker(move _11) -> [return: bb15, unwind: bb12]; // scope 3 at ui/async-await/issues/issue-65419/issue-65419-async-fn-resume-after-completion.rs:38:27: 38:54
                                         // mir::Constant
                                         // + span: ui/async-await/issues/issue-65419/issue-65419-async-fn-resume-after-completion.rs:38:27: 38:46
                                         // + user_ty: UserType(1)
                                         // + literal: Const { ty: fn(&Waker) -> Context<'_> {Context::<'_>::from_waker}, val: Value(<ZST>) }
    }

    bb5: {
        _15 = &mut _2;                   // scope 6 at ui/async-await/issues/issue-65419/issue-65419-async-fn-resume-after-completion.rs:41:39: 41:54
        _14 = Pin::<&mut F>::as_mut(move _15) -> [return: bb6, unwind: bb12]; // scope 6 at ui/async-await/issues/issue-65419/issue-65419-async-fn-resume-after-completion.rs:41:39: 41:54
                                         // mir::Constant
                                         // + span: ui/async-await/issues/issue-65419/issue-65419-async-fn-resume-after-completion.rs:41:46: 41:52
                                         // + literal: Const { ty: for<'a> fn(&'a mut Pin<&mut F>) -> Pin<&'a mut <&mut F as Deref>::Target> {Pin::<&mut F>::as_mut}, val: Value(<ZST>) }
    }

    bb6: {
        _17 = &mut _10;                  // scope 6 at ui/async-await/issues/issue-65419/issue-65419-async-fn-resume-after-completion.rs:41:60: 41:72
        _16 = &mut (*_17);               // scope 6 at ui/async-await/issues/issue-65419/issue-65419-async-fn-resume-after-completion.rs:41:60: 41:72
        _13 = <F as Future>::poll(move _14, move _16) -> [return: bb7, unwind: bb12]; // scope 6 at ui/async-await/issues/issue-65419/issue-65419-async-fn-resume-after-completion.rs:41:39: 41:73
                                         // mir::Constant
                                         // + span: ui/async-await/issues/issue-65419/issue-65419-async-fn-resume-after-completion.rs:41:55: 41:59
                                         // + literal: Const { ty: for<'a, 'b, 'c> fn(Pin<&'a mut F>, &'b mut Context<'c>) -> Poll<<F as Future>::Output> {<F as Future>::poll}, val: Value(<ZST>) }
    }

    bb7: {
        _18 = discriminant(_13);         // scope 6 at ui/async-await/issues/issue-65419/issue-65419-async-fn-resume-after-completion.rs:41:20: 41:36
        switchInt(move _18) -> [0: bb8, otherwise: bb9]; // scope 6 at ui/async-await/issues/issue-65419/issue-65419-async-fn-resume-after-completion.rs:41:20: 41:36
    }

    bb8: {
        _0 = move ((_13 as Ready).0: <F as std::future::Future>::Output); // scope 6 at ui/async-await/issues/issue-65419/issue-65419-async-fn-resume-after-completion.rs:41:32: 41:35
        drop(_4) -> [return: bb10, unwind: bb13]; // scope 1 at ui/async-await/issues/issue-65419/issue-65419-async-fn-resume-after-completion.rs:45:5: 45:6
    }

    bb9: {
        drop(_13) -> [return: bb5, unwind: bb12]; // scope 5 at ui/async-await/issues/issue-65419/issue-65419-async-fn-resume-after-completion.rs:44:9: 44:10
    }

    bb10: {
        drop(_1) -> bb11;                // scope 0 at ui/async-await/issues/issue-65419/issue-65419-async-fn-resume-after-completion.rs:45:5: 45:6
    }

    bb11: {
        return;                          // scope 0 at ui/async-await/issues/issue-65419/issue-65419-async-fn-resume-after-completion.rs:45:6: 45:6
    }

    bb12 (cleanup): {
        drop(_4) -> bb13;                // scope 1 at ui/async-await/issues/issue-65419/issue-65419-async-fn-resume-after-completion.rs:45:5: 45:6
    }

    bb13 (cleanup): {
        drop(_1) -> bb14;                // scope 0 at ui/async-await/issues/issue-65419/issue-65419-async-fn-resume-after-completion.rs:45:5: 45:6
    }

    bb14 (cleanup): {
        resume;                          // scope 0 at ui/async-await/issues/issue-65419/issue-65419-async-fn-resume-after-completion.rs:28:5: 45:6
    }

    bb15: {
        goto -> bb5;                     // scope 3 at ui/async-await/issues/issue-65419/issue-65419-async-fn-resume-after-completion.rs:38:27: 38:54
    }
}

alloc1 (static: VTABLE, size: 32, align: 8) {
    0x00 │ ╾───────alloc3────────╼ ╾───────alloc4────────╼ │ ╾──────╼╾──────╼
    0x10 │ ╾───────alloc5────────╼ ╾───────alloc6────────╼ │ ╾──────╼╾──────╼
}

alloc3 (fn: <[closure@ui/async-await/issues/issue-65419/issue-65419-async-fn-resume-after-completion.rs:32:13: 32:16] as FnOnce<(*const (),)>>::call_once - shim)

alloc4 (fn: <[closure@ui/async-await/issues/issue-65419/issue-65419-async-fn-resume-after-completion.rs:33:13: 33:16] as FnOnce<(*const (),)>>::call_once - shim)

alloc5 (fn: <[closure@ui/async-await/issues/issue-65419/issue-65419-async-fn-resume-after-completion.rs:34:13: 34:16] as FnOnce<(*const (),)>>::call_once - shim)

alloc6 (fn: <[closure@ui/async-await/issues/issue-65419/issue-65419-async-fn-resume-after-completion.rs:35:13: 35:16] as FnOnce<(*const (),)>>::call_once - shim)

static VTABLE: RawWakerVTable = {
    let mut _0: std::task::RawWakerVTable; // return place in scope 0 at ui/async-await/issues/issue-65419/issue-65419-async-fn-resume-after-completion.rs:31:24: 31:38
    let mut _1: unsafe fn(*const ()) -> std::task::RawWaker; // in scope 0 at ui/async-await/issues/issue-65419/issue-65419-async-fn-resume-after-completion.rs:32:13: 32:40
    let mut _2: [closure@ui/async-await/issues/issue-65419/issue-65419-async-fn-resume-after-completion.rs:32:13: 32:16]; // in scope 0 at ui/async-await/issues/issue-65419/issue-65419-async-fn-resume-after-completion.rs:32:13: 32:40
    let mut _3: unsafe fn(*const ());    // in scope 0 at ui/async-await/issues/issue-65419/issue-65419-async-fn-resume-after-completion.rs:33:13: 33:39
    let mut _4: [closure@ui/async-await/issues/issue-65419/issue-65419-async-fn-resume-after-completion.rs:33:13: 33:16]; // in scope 0 at ui/async-await/issues/issue-65419/issue-65419-async-fn-resume-after-completion.rs:33:13: 33:39
    let mut _5: unsafe fn(*const ());    // in scope 0 at ui/async-await/issues/issue-65419/issue-65419-async-fn-resume-after-completion.rs:34:13: 34:46
    let mut _6: [closure@ui/async-await/issues/issue-65419/issue-65419-async-fn-resume-after-completion.rs:34:13: 34:16]; // in scope 0 at ui/async-await/issues/issue-65419/issue-65419-async-fn-resume-after-completion.rs:34:13: 34:46
    let mut _7: unsafe fn(*const ());    // in scope 0 at ui/async-await/issues/issue-65419/issue-65419-async-fn-resume-after-completion.rs:35:13: 35:19
    let mut _8: [closure@ui/async-await/issues/issue-65419/issue-65419-async-fn-resume-after-completion.rs:35:13: 35:16]; // in scope 0 at ui/async-await/issues/issue-65419/issue-65419-async-fn-resume-after-completion.rs:35:13: 35:19

    bb0: {
        StorageLive(_1);                 // scope 0 at ui/async-await/issues/issue-65419/issue-65419-async-fn-resume-after-completion.rs:32:13: 32:40
        StorageLive(_2);                 // scope 0 at ui/async-await/issues/issue-65419/issue-65419-async-fn-resume-after-completion.rs:32:13: 32:40
        _2 = [closure@ui/async-await/issues/issue-65419/issue-65419-async-fn-resume-after-completion.rs:32:13: 32:16]; // scope 0 at ui/async-await/issues/issue-65419/issue-65419-async-fn-resume-after-completion.rs:32:13: 32:40
                                         // closure
                                         // + def_id: DefId(0:19 ~ issue_65419_async_fn_resume_after_completion[46d9]::executor::block_on::VTABLE::{closure#0})
                                         // + substs: [
                                         //     i8,
                                         //     extern "rust-call" fn((*const (),)) -> std::task::RawWaker,
                                         //     (),
                                         // ]
        _1 = move _2 as unsafe fn(*const ()) -> std::task::RawWaker (Pointer(ClosureFnPointer(Unsafe))); // scope 0 at ui/async-await/issues/issue-65419/issue-65419-async-fn-resume-after-completion.rs:32:13: 32:40
        StorageDead(_2);                 // scope 0 at ui/async-await/issues/issue-65419/issue-65419-async-fn-resume-after-completion.rs:32:15: 32:16
        StorageLive(_3);                 // scope 0 at ui/async-await/issues/issue-65419/issue-65419-async-fn-resume-after-completion.rs:33:13: 33:39
        StorageLive(_4);                 // scope 0 at ui/async-await/issues/issue-65419/issue-65419-async-fn-resume-after-completion.rs:33:13: 33:39
        _4 = [closure@ui/async-await/issues/issue-65419/issue-65419-async-fn-resume-after-completion.rs:33:13: 33:16]; // scope 0 at ui/async-await/issues/issue-65419/issue-65419-async-fn-resume-after-completion.rs:33:13: 33:39
                                         // closure
                                         // + def_id: DefId(0:20 ~ issue_65419_async_fn_resume_after_completion[46d9]::executor::block_on::VTABLE::{closure#1})
                                         // + substs: [
                                         //     i8,
                                         //     extern "rust-call" fn((*const (),)),
                                         //     (),
                                         // ]
        _3 = move _4 as unsafe fn(*const ()) (Pointer(ClosureFnPointer(Unsafe))); // scope 0 at ui/async-await/issues/issue-65419/issue-65419-async-fn-resume-after-completion.rs:33:13: 33:39
        StorageDead(_4);                 // scope 0 at ui/async-await/issues/issue-65419/issue-65419-async-fn-resume-after-completion.rs:33:15: 33:16
        StorageLive(_5);                 // scope 0 at ui/async-await/issues/issue-65419/issue-65419-async-fn-resume-after-completion.rs:34:13: 34:46
        StorageLive(_6);                 // scope 0 at ui/async-await/issues/issue-65419/issue-65419-async-fn-resume-after-completion.rs:34:13: 34:46
        _6 = [closure@ui/async-await/issues/issue-65419/issue-65419-async-fn-resume-after-completion.rs:34:13: 34:16]; // scope 0 at ui/async-await/issues/issue-65419/issue-65419-async-fn-resume-after-completion.rs:34:13: 34:46
                                         // closure
                                         // + def_id: DefId(0:21 ~ issue_65419_async_fn_resume_after_completion[46d9]::executor::block_on::VTABLE::{closure#2})
                                         // + substs: [
                                         //     i8,
                                         //     extern "rust-call" fn((*const (),)),
                                         //     (),
                                         // ]
        _5 = move _6 as unsafe fn(*const ()) (Pointer(ClosureFnPointer(Unsafe))); // scope 0 at ui/async-await/issues/issue-65419/issue-65419-async-fn-resume-after-completion.rs:34:13: 34:46
        StorageDead(_6);                 // scope 0 at ui/async-await/issues/issue-65419/issue-65419-async-fn-resume-after-completion.rs:34:15: 34:16
        StorageLive(_7);                 // scope 0 at ui/async-await/issues/issue-65419/issue-65419-async-fn-resume-after-completion.rs:35:13: 35:19
        StorageLive(_8);                 // scope 0 at ui/async-await/issues/issue-65419/issue-65419-async-fn-resume-after-completion.rs:35:13: 35:19
        _8 = [closure@ui/async-await/issues/issue-65419/issue-65419-async-fn-resume-after-completion.rs:35:13: 35:16]; // scope 0 at ui/async-await/issues/issue-65419/issue-65419-async-fn-resume-after-completion.rs:35:13: 35:19
                                         // closure
                                         // + def_id: DefId(0:22 ~ issue_65419_async_fn_resume_after_completion[46d9]::executor::block_on::VTABLE::{closure#3})
                                         // + substs: [
                                         //     i8,
                                         //     extern "rust-call" fn((*const (),)),
                                         //     (),
                                         // ]
        _7 = move _8 as unsafe fn(*const ()) (Pointer(ClosureFnPointer(Unsafe))); // scope 0 at ui/async-await/issues/issue-65419/issue-65419-async-fn-resume-after-completion.rs:35:13: 35:19
        StorageDead(_8);                 // scope 0 at ui/async-await/issues/issue-65419/issue-65419-async-fn-resume-after-completion.rs:35:15: 35:16
        ConstEvalCounter;                // scope 0 at ui/async-await/issues/issue-65419/issue-65419-async-fn-resume-after-completion.rs:31:41: 36:10
        _0 = RawWakerVTable::new(move _1, move _3, move _5, move _7) -> bb1; // scope 0 at ui/async-await/issues/issue-65419/issue-65419-async-fn-resume-after-completion.rs:31:41: 36:10
                                         // mir::Constant
                                         // + span: ui/async-await/issues/issue-65419/issue-65419-async-fn-resume-after-completion.rs:31:41: 31:60
                                         // + literal: Const { ty: fn(unsafe fn(*const ()) -> RawWaker, unsafe fn(*const ()), unsafe fn(*const ()), unsafe fn(*const ())) -> RawWakerVTable {RawWakerVTable::new}, val: Value(<ZST>) }
    }

    bb1: {
        StorageDead(_7);                 // scope 0 at ui/async-await/issues/issue-65419/issue-65419-async-fn-resume-after-completion.rs:36:9: 36:10
        StorageDead(_5);                 // scope 0 at ui/async-await/issues/issue-65419/issue-65419-async-fn-resume-after-completion.rs:36:9: 36:10
        StorageDead(_3);                 // scope 0 at ui/async-await/issues/issue-65419/issue-65419-async-fn-resume-after-completion.rs:36:9: 36:10
        StorageDead(_1);                 // scope 0 at ui/async-await/issues/issue-65419/issue-65419-async-fn-resume-after-completion.rs:36:9: 36:10
        return;                          // scope 0 at ui/async-await/issues/issue-65419/issue-65419-async-fn-resume-after-completion.rs:31:9: 36:11
    }
}

fn VTABLE::{closure#0}(_1: &[closure@ui/async-await/issues/issue-65419/issue-65419-async-fn-resume-after-completion.rs:32:13: 32:16], _2: *const ()) -> RawWaker {
    let mut _0: std::task::RawWaker;     // return place in scope 0 at ui/async-await/issues/issue-65419/issue-65419-async-fn-resume-after-completion.rs:32:17: 32:17
    let mut _3: !;                       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/panic.rs:57:9: 57:73
    let mut _4: std::fmt::Arguments<'_>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/panic.rs:57:38: 57:72
    let mut _5: &[&str];                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:709:24: 709:45
    let mut _6: &[&str; 1];              // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:709:24: 709:45
    let _7: &[&str; 1];                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:709:24: 709:45
    let mut _8: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/panic.rs:57:38: 57:72
    let mut _9: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/panic.rs:57:38: 57:72
    let _10: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/panic.rs:57:38: 57:72
    let _11: [core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/panic.rs:57:38: 57:72
    let mut _12: core::fmt::ArgumentV1<'_>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:709:47: 709:77
    let mut _13: &std::fmt::Arguments<'_>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:709:47: 709:77
    let _14: &std::fmt::Arguments<'_>;   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:709:47: 709:77
    let _15: std::fmt::Arguments<'_>;    // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:709:47: 709:77
    let mut _16: &[&str];                // in scope 0 at ui/async-await/issues/issue-65419/issue-65419-async-fn-resume-after-completion.rs:32:32: 32:39
    let mut _17: &[&str; 1];             // in scope 0 at ui/async-await/issues/issue-65419/issue-65419-async-fn-resume-after-completion.rs:32:32: 32:39
    let _18: &[&str; 1];                 // in scope 0 at ui/async-await/issues/issue-65419/issue-65419-async-fn-resume-after-completion.rs:32:32: 32:39
    let mut _19: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:709:47: 709:77
    let mut _20: &[core::fmt::ArgumentV1<'_>; 0]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:709:47: 709:77
    let _21: &[core::fmt::ArgumentV1<'_>; 0]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:709:47: 709:77
    let mut _22: &[core::fmt::ArgumentV1<'_>; 0]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:709:47: 709:77
    let mut _23: &[&str; 1];             // in scope 0 at ui/async-await/issues/issue-65419/issue-65419-async-fn-resume-after-completion.rs:32:32: 32:39
    let mut _24: &[&str; 1];             // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:709:24: 709:45

    bb0: {
        _24 = const _;                   // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:709:24: 709:45
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:709:24: 709:45
                                         // + literal: Const { ty: &[&str; 1], val: Unevaluated(VTABLE::{closure#0}, [<closure_kind>, <closure_signature>, <upvars>], Some(promoted[2])) }
        _7 = _24;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:709:24: 709:45
        _6 = _7;                         // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:709:24: 709:45
        _5 = move _6 as &[&str] (Pointer(Unsize)); // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:709:24: 709:45
        _23 = const _;                   // scope 0 at ui/async-await/issues/issue-65419/issue-65419-async-fn-resume-after-completion.rs:32:32: 32:39
                                         // mir::Constant
                                         // + span: ui/async-await/issues/issue-65419/issue-65419-async-fn-resume-after-completion.rs:32:32: 32:39
                                         // + literal: Const { ty: &[&str; 1], val: Unevaluated(VTABLE::{closure#0}, [<closure_kind>, <closure_signature>, <upvars>], Some(promoted[1])) }
        _18 = _23;                       // scope 0 at ui/async-await/issues/issue-65419/issue-65419-async-fn-resume-after-completion.rs:32:32: 32:39
        _17 = _18;                       // scope 0 at ui/async-await/issues/issue-65419/issue-65419-async-fn-resume-after-completion.rs:32:32: 32:39
        _16 = move _17 as &[&str] (Pointer(Unsize)); // scope 0 at ui/async-await/issues/issue-65419/issue-65419-async-fn-resume-after-completion.rs:32:32: 32:39
        _22 = const _;                   // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:709:47: 709:77
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:709:47: 709:77
                                         // + literal: Const { ty: &[ArgumentV1<'_>; 0], val: Unevaluated(VTABLE::{closure#0}, [<closure_kind>, <closure_signature>, <upvars>], Some(promoted[0])) }
        _21 = _22;                       // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:709:47: 709:77
        _20 = _21;                       // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:709:47: 709:77
        _19 = move _20 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:709:47: 709:77
        _15 = Arguments::<'_>::new_v1(move _16, move _19) -> bb1; // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:709:47: 709:77
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:709:47: 709:77
                                         // + user_ty: UserType(2)
                                         // + literal: Const { ty: fn(&[&'static str], &[ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb1: {
        _14 = &_15;                      // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:709:47: 709:77
        _13 = _14;                       // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:709:47: 709:77
        _12 = ArgumentV1::<'_>::new_display::<Arguments<'_>>(move _13) -> bb2; // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:709:47: 709:77
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:709:47: 709:77
                                         // + user_ty: UserType(1)
                                         // + literal: Const { ty: for<'b> fn(&'b Arguments<'_>) -> ArgumentV1<'b> {ArgumentV1::<'_>::new_display::<Arguments<'_>>}, val: Value(<ZST>) }
    }

    bb2: {
        _11 = [move _12];                // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/panic.rs:57:38: 57:72
        _10 = &_11;                      // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/panic.rs:57:38: 57:72
        _9 = _10;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/panic.rs:57:38: 57:72
        _8 = move _9 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/panic.rs:57:38: 57:72
        _4 = Arguments::<'_>::new_v1(move _5, move _8) -> bb3; // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/panic.rs:57:38: 57:72
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/panic.rs:57:38: 57:72
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: fn(&[&'static str], &[ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb3: {
        _3 = panic_fmt(move _4);         // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/panic.rs:57:9: 57:73
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/panic.rs:57:9: 57:37
                                         // + literal: Const { ty: for<'a> fn(Arguments<'a>) -> ! {panic_fmt}, val: Value(<ZST>) }
    }
}

promoted[0] in VTABLE::{closure#0}: &[ArgumentV1<'_>; 0] = {
    let mut _0: &[core::fmt::ArgumentV1<'_>; 0]; // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:709:47: 709:77
    let mut _1: [core::fmt::ArgumentV1<'_>; 0]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:709:47: 709:77

    bb0: {
        _1 = [];                         // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:709:47: 709:77
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:709:47: 709:77
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:709:47: 709:77
    }
}

promoted[1] in VTABLE::{closure#0}: &[&str; 1] = {
    let mut _0: &[&str; 1];              // return place in scope 0 at ui/async-await/issues/issue-65419/issue-65419-async-fn-resume-after-completion.rs:32:32: 32:39
    let mut _1: [&str; 1];               // in scope 0 at ui/async-await/issues/issue-65419/issue-65419-async-fn-resume-after-completion.rs:32:32: 32:39

    bb0: {
        _1 = [const "clone"];            // scope 0 at ui/async-await/issues/issue-65419/issue-65419-async-fn-resume-after-completion.rs:32:32: 32:39
                                         // mir::Constant
                                         // + span: ui/async-await/issues/issue-65419/issue-65419-async-fn-resume-after-completion.rs:32:32: 32:39
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at ui/async-await/issues/issue-65419/issue-65419-async-fn-resume-after-completion.rs:32:32: 32:39
        return;                          // scope 0 at ui/async-await/issues/issue-65419/issue-65419-async-fn-resume-after-completion.rs:32:32: 32:39
    }
}

promoted[2] in VTABLE::{closure#0}: &[&str; 1] = {
    let mut _0: &[&str; 1];              // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:709:24: 709:45
    let mut _1: [&str; 1];               // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:709:24: 709:45

    bb0: {
        _1 = [const "not implemented: "]; // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:709:24: 709:45
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:709:24: 709:45
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:709:24: 709:45
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:709:24: 709:45
    }
}

fn VTABLE::{closure#1}(_1: &[closure@ui/async-await/issues/issue-65419/issue-65419-async-fn-resume-after-completion.rs:33:13: 33:16], _2: *const ()) -> () {
    let mut _0: ();                      // return place in scope 0 at ui/async-await/issues/issue-65419/issue-65419-async-fn-resume-after-completion.rs:33:17: 33:17
    let mut _3: !;                       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/panic.rs:57:9: 57:73
    let mut _4: std::fmt::Arguments<'_>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/panic.rs:57:38: 57:72
    let mut _5: &[&str];                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:709:24: 709:45
    let mut _6: &[&str; 1];              // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:709:24: 709:45
    let _7: &[&str; 1];                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:709:24: 709:45
    let mut _8: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/panic.rs:57:38: 57:72
    let mut _9: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/panic.rs:57:38: 57:72
    let _10: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/panic.rs:57:38: 57:72
    let _11: [core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/panic.rs:57:38: 57:72
    let mut _12: core::fmt::ArgumentV1<'_>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:709:47: 709:77
    let mut _13: &std::fmt::Arguments<'_>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:709:47: 709:77
    let _14: &std::fmt::Arguments<'_>;   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:709:47: 709:77
    let _15: std::fmt::Arguments<'_>;    // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:709:47: 709:77
    let mut _16: &[&str];                // in scope 0 at ui/async-await/issues/issue-65419/issue-65419-async-fn-resume-after-completion.rs:33:32: 33:38
    let mut _17: &[&str; 1];             // in scope 0 at ui/async-await/issues/issue-65419/issue-65419-async-fn-resume-after-completion.rs:33:32: 33:38
    let _18: &[&str; 1];                 // in scope 0 at ui/async-await/issues/issue-65419/issue-65419-async-fn-resume-after-completion.rs:33:32: 33:38
    let mut _19: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:709:47: 709:77
    let mut _20: &[core::fmt::ArgumentV1<'_>; 0]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:709:47: 709:77
    let _21: &[core::fmt::ArgumentV1<'_>; 0]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:709:47: 709:77
    let mut _22: &[core::fmt::ArgumentV1<'_>; 0]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:709:47: 709:77
    let mut _23: &[&str; 1];             // in scope 0 at ui/async-await/issues/issue-65419/issue-65419-async-fn-resume-after-completion.rs:33:32: 33:38
    let mut _24: &[&str; 1];             // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:709:24: 709:45

    bb0: {
        _24 = const _;                   // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:709:24: 709:45
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:709:24: 709:45
                                         // + literal: Const { ty: &[&str; 1], val: Unevaluated(VTABLE::{closure#1}, [<closure_kind>, <closure_signature>, <upvars>], Some(promoted[2])) }
        _7 = _24;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:709:24: 709:45
        _6 = _7;                         // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:709:24: 709:45
        _5 = move _6 as &[&str] (Pointer(Unsize)); // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:709:24: 709:45
        _23 = const _;                   // scope 0 at ui/async-await/issues/issue-65419/issue-65419-async-fn-resume-after-completion.rs:33:32: 33:38
                                         // mir::Constant
                                         // + span: ui/async-await/issues/issue-65419/issue-65419-async-fn-resume-after-completion.rs:33:32: 33:38
                                         // + literal: Const { ty: &[&str; 1], val: Unevaluated(VTABLE::{closure#1}, [<closure_kind>, <closure_signature>, <upvars>], Some(promoted[1])) }
        _18 = _23;                       // scope 0 at ui/async-await/issues/issue-65419/issue-65419-async-fn-resume-after-completion.rs:33:32: 33:38
        _17 = _18;                       // scope 0 at ui/async-await/issues/issue-65419/issue-65419-async-fn-resume-after-completion.rs:33:32: 33:38
        _16 = move _17 as &[&str] (Pointer(Unsize)); // scope 0 at ui/async-await/issues/issue-65419/issue-65419-async-fn-resume-after-completion.rs:33:32: 33:38
        _22 = const _;                   // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:709:47: 709:77
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:709:47: 709:77
                                         // + literal: Const { ty: &[ArgumentV1<'_>; 0], val: Unevaluated(VTABLE::{closure#1}, [<closure_kind>, <closure_signature>, <upvars>], Some(promoted[0])) }
        _21 = _22;                       // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:709:47: 709:77
        _20 = _21;                       // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:709:47: 709:77
        _19 = move _20 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:709:47: 709:77
        _15 = Arguments::<'_>::new_v1(move _16, move _19) -> bb1; // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:709:47: 709:77
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:709:47: 709:77
                                         // + user_ty: UserType(2)
                                         // + literal: Const { ty: fn(&[&'static str], &[ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb1: {
        _14 = &_15;                      // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:709:47: 709:77
        _13 = _14;                       // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:709:47: 709:77
        _12 = ArgumentV1::<'_>::new_display::<Arguments<'_>>(move _13) -> bb2; // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:709:47: 709:77
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:709:47: 709:77
                                         // + user_ty: UserType(1)
                                         // + literal: Const { ty: for<'b> fn(&'b Arguments<'_>) -> ArgumentV1<'b> {ArgumentV1::<'_>::new_display::<Arguments<'_>>}, val: Value(<ZST>) }
    }

    bb2: {
        _11 = [move _12];                // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/panic.rs:57:38: 57:72
        _10 = &_11;                      // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/panic.rs:57:38: 57:72
        _9 = _10;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/panic.rs:57:38: 57:72
        _8 = move _9 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/panic.rs:57:38: 57:72
        _4 = Arguments::<'_>::new_v1(move _5, move _8) -> bb3; // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/panic.rs:57:38: 57:72
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/panic.rs:57:38: 57:72
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: fn(&[&'static str], &[ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb3: {
        _3 = panic_fmt(move _4);         // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/panic.rs:57:9: 57:73
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/panic.rs:57:9: 57:37
                                         // + literal: Const { ty: for<'a> fn(Arguments<'a>) -> ! {panic_fmt}, val: Value(<ZST>) }
    }
}

promoted[0] in VTABLE::{closure#1}: &[ArgumentV1<'_>; 0] = {
    let mut _0: &[core::fmt::ArgumentV1<'_>; 0]; // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:709:47: 709:77
    let mut _1: [core::fmt::ArgumentV1<'_>; 0]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:709:47: 709:77

    bb0: {
        _1 = [];                         // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:709:47: 709:77
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:709:47: 709:77
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:709:47: 709:77
    }
}

promoted[1] in VTABLE::{closure#1}: &[&str; 1] = {
    let mut _0: &[&str; 1];              // return place in scope 0 at ui/async-await/issues/issue-65419/issue-65419-async-fn-resume-after-completion.rs:33:32: 33:38
    let mut _1: [&str; 1];               // in scope 0 at ui/async-await/issues/issue-65419/issue-65419-async-fn-resume-after-completion.rs:33:32: 33:38

    bb0: {
        _1 = [const "wake"];             // scope 0 at ui/async-await/issues/issue-65419/issue-65419-async-fn-resume-after-completion.rs:33:32: 33:38
                                         // mir::Constant
                                         // + span: ui/async-await/issues/issue-65419/issue-65419-async-fn-resume-after-completion.rs:33:32: 33:38
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at ui/async-await/issues/issue-65419/issue-65419-async-fn-resume-after-completion.rs:33:32: 33:38
        return;                          // scope 0 at ui/async-await/issues/issue-65419/issue-65419-async-fn-resume-after-completion.rs:33:32: 33:38
    }
}

promoted[2] in VTABLE::{closure#1}: &[&str; 1] = {
    let mut _0: &[&str; 1];              // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:709:24: 709:45
    let mut _1: [&str; 1];               // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:709:24: 709:45

    bb0: {
        _1 = [const "not implemented: "]; // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:709:24: 709:45
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:709:24: 709:45
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:709:24: 709:45
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:709:24: 709:45
    }
}

fn VTABLE::{closure#2}(_1: &[closure@ui/async-await/issues/issue-65419/issue-65419-async-fn-resume-after-completion.rs:34:13: 34:16], _2: *const ()) -> () {
    let mut _0: ();                      // return place in scope 0 at ui/async-await/issues/issue-65419/issue-65419-async-fn-resume-after-completion.rs:34:17: 34:17
    let mut _3: !;                       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/panic.rs:57:9: 57:73
    let mut _4: std::fmt::Arguments<'_>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/panic.rs:57:38: 57:72
    let mut _5: &[&str];                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:709:24: 709:45
    let mut _6: &[&str; 1];              // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:709:24: 709:45
    let _7: &[&str; 1];                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:709:24: 709:45
    let mut _8: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/panic.rs:57:38: 57:72
    let mut _9: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/panic.rs:57:38: 57:72
    let _10: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/panic.rs:57:38: 57:72
    let _11: [core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/panic.rs:57:38: 57:72
    let mut _12: core::fmt::ArgumentV1<'_>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:709:47: 709:77
    let mut _13: &std::fmt::Arguments<'_>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:709:47: 709:77
    let _14: &std::fmt::Arguments<'_>;   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:709:47: 709:77
    let _15: std::fmt::Arguments<'_>;    // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:709:47: 709:77
    let mut _16: &[&str];                // in scope 0 at ui/async-await/issues/issue-65419/issue-65419-async-fn-resume-after-completion.rs:34:32: 34:45
    let mut _17: &[&str; 1];             // in scope 0 at ui/async-await/issues/issue-65419/issue-65419-async-fn-resume-after-completion.rs:34:32: 34:45
    let _18: &[&str; 1];                 // in scope 0 at ui/async-await/issues/issue-65419/issue-65419-async-fn-resume-after-completion.rs:34:32: 34:45
    let mut _19: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:709:47: 709:77
    let mut _20: &[core::fmt::ArgumentV1<'_>; 0]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:709:47: 709:77
    let _21: &[core::fmt::ArgumentV1<'_>; 0]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:709:47: 709:77
    let mut _22: &[core::fmt::ArgumentV1<'_>; 0]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:709:47: 709:77
    let mut _23: &[&str; 1];             // in scope 0 at ui/async-await/issues/issue-65419/issue-65419-async-fn-resume-after-completion.rs:34:32: 34:45
    let mut _24: &[&str; 1];             // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:709:24: 709:45

    bb0: {
        _24 = const _;                   // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:709:24: 709:45
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:709:24: 709:45
                                         // + literal: Const { ty: &[&str; 1], val: Unevaluated(VTABLE::{closure#2}, [<closure_kind>, <closure_signature>, <upvars>], Some(promoted[2])) }
        _7 = _24;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:709:24: 709:45
        _6 = _7;                         // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:709:24: 709:45
        _5 = move _6 as &[&str] (Pointer(Unsize)); // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:709:24: 709:45
        _23 = const _;                   // scope 0 at ui/async-await/issues/issue-65419/issue-65419-async-fn-resume-after-completion.rs:34:32: 34:45
                                         // mir::Constant
                                         // + span: ui/async-await/issues/issue-65419/issue-65419-async-fn-resume-after-completion.rs:34:32: 34:45
                                         // + literal: Const { ty: &[&str; 1], val: Unevaluated(VTABLE::{closure#2}, [<closure_kind>, <closure_signature>, <upvars>], Some(promoted[1])) }
        _18 = _23;                       // scope 0 at ui/async-await/issues/issue-65419/issue-65419-async-fn-resume-after-completion.rs:34:32: 34:45
        _17 = _18;                       // scope 0 at ui/async-await/issues/issue-65419/issue-65419-async-fn-resume-after-completion.rs:34:32: 34:45
        _16 = move _17 as &[&str] (Pointer(Unsize)); // scope 0 at ui/async-await/issues/issue-65419/issue-65419-async-fn-resume-after-completion.rs:34:32: 34:45
        _22 = const _;                   // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:709:47: 709:77
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:709:47: 709:77
                                         // + literal: Const { ty: &[ArgumentV1<'_>; 0], val: Unevaluated(VTABLE::{closure#2}, [<closure_kind>, <closure_signature>, <upvars>], Some(promoted[0])) }
        _21 = _22;                       // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:709:47: 709:77
        _20 = _21;                       // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:709:47: 709:77
        _19 = move _20 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:709:47: 709:77
        _15 = Arguments::<'_>::new_v1(move _16, move _19) -> bb1; // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:709:47: 709:77
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:709:47: 709:77
                                         // + user_ty: UserType(2)
                                         // + literal: Const { ty: fn(&[&'static str], &[ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb1: {
        _14 = &_15;                      // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:709:47: 709:77
        _13 = _14;                       // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:709:47: 709:77
        _12 = ArgumentV1::<'_>::new_display::<Arguments<'_>>(move _13) -> bb2; // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:709:47: 709:77
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:709:47: 709:77
                                         // + user_ty: UserType(1)
                                         // + literal: Const { ty: for<'b> fn(&'b Arguments<'_>) -> ArgumentV1<'b> {ArgumentV1::<'_>::new_display::<Arguments<'_>>}, val: Value(<ZST>) }
    }

    bb2: {
        _11 = [move _12];                // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/panic.rs:57:38: 57:72
        _10 = &_11;                      // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/panic.rs:57:38: 57:72
        _9 = _10;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/panic.rs:57:38: 57:72
        _8 = move _9 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/panic.rs:57:38: 57:72
        _4 = Arguments::<'_>::new_v1(move _5, move _8) -> bb3; // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/panic.rs:57:38: 57:72
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/panic.rs:57:38: 57:72
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: fn(&[&'static str], &[ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb3: {
        _3 = panic_fmt(move _4);         // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/panic.rs:57:9: 57:73
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/panic.rs:57:9: 57:37
                                         // + literal: Const { ty: for<'a> fn(Arguments<'a>) -> ! {panic_fmt}, val: Value(<ZST>) }
    }
}

promoted[0] in VTABLE::{closure#2}: &[ArgumentV1<'_>; 0] = {
    let mut _0: &[core::fmt::ArgumentV1<'_>; 0]; // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:709:47: 709:77
    let mut _1: [core::fmt::ArgumentV1<'_>; 0]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:709:47: 709:77

    bb0: {
        _1 = [];                         // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:709:47: 709:77
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:709:47: 709:77
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:709:47: 709:77
    }
}

promoted[1] in VTABLE::{closure#2}: &[&str; 1] = {
    let mut _0: &[&str; 1];              // return place in scope 0 at ui/async-await/issues/issue-65419/issue-65419-async-fn-resume-after-completion.rs:34:32: 34:45
    let mut _1: [&str; 1];               // in scope 0 at ui/async-await/issues/issue-65419/issue-65419-async-fn-resume-after-completion.rs:34:32: 34:45

    bb0: {
        _1 = [const "wake_by_ref"];      // scope 0 at ui/async-await/issues/issue-65419/issue-65419-async-fn-resume-after-completion.rs:34:32: 34:45
                                         // mir::Constant
                                         // + span: ui/async-await/issues/issue-65419/issue-65419-async-fn-resume-after-completion.rs:34:32: 34:45
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at ui/async-await/issues/issue-65419/issue-65419-async-fn-resume-after-completion.rs:34:32: 34:45
        return;                          // scope 0 at ui/async-await/issues/issue-65419/issue-65419-async-fn-resume-after-completion.rs:34:32: 34:45
    }
}

promoted[2] in VTABLE::{closure#2}: &[&str; 1] = {
    let mut _0: &[&str; 1];              // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:709:24: 709:45
    let mut _1: [&str; 1];               // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:709:24: 709:45

    bb0: {
        _1 = [const "not implemented: "]; // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:709:24: 709:45
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:709:24: 709:45
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:709:24: 709:45
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:709:24: 709:45
    }
}

fn VTABLE::{closure#3}(_1: &[closure@ui/async-await/issues/issue-65419/issue-65419-async-fn-resume-after-completion.rs:35:13: 35:16], _2: *const ()) -> () {
    let mut _0: ();                      // return place in scope 0 at ui/async-await/issues/issue-65419/issue-65419-async-fn-resume-after-completion.rs:35:17: 35:17

    bb0: {
        return;                          // scope 0 at ui/async-await/issues/issue-65419/issue-65419-async-fn-resume-after-completion.rs:35:19: 35:19
    }
}
