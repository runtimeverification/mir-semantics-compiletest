// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
fn main() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/async-await/issues/issue-65419/issue-65419-generator-resume-after-completion.rs:18:11: 18:11
    let mut _1: [generator@ui/async-await/issues/issue-65419/issue-65419-generator-resume-after-completion.rs:19:17: 19:19]; // in scope 0 at ui/async-await/issues/issue-65419/issue-65419-generator-resume-after-completion.rs:19:9: 19:14
    let _2: std::ops::GeneratorState<(), ()>; // in scope 0 at ui/async-await/issues/issue-65419/issue-65419-generator-resume-after-completion.rs:22:5: 22:32
    let mut _3: std::pin::Pin<&mut [generator@ui/async-await/issues/issue-65419/issue-65419-generator-resume-after-completion.rs:19:17: 19:19]>; // in scope 0 at ui/async-await/issues/issue-65419/issue-65419-generator-resume-after-completion.rs:22:5: 22:21
    let mut _4: &mut [generator@ui/async-await/issues/issue-65419/issue-65419-generator-resume-after-completion.rs:19:17: 19:19]; // in scope 0 at ui/async-await/issues/issue-65419/issue-65419-generator-resume-after-completion.rs:22:14: 22:20
    let mut _5: ();                      // in scope 0 at ui/async-await/issues/issue-65419/issue-65419-generator-resume-after-completion.rs:22:29: 22:31
    let _6: std::ops::GeneratorState<(), ()>; // in scope 0 at ui/async-await/issues/issue-65419/issue-65419-generator-resume-after-completion.rs:23:5: 23:32
    let mut _7: std::pin::Pin<&mut [generator@ui/async-await/issues/issue-65419/issue-65419-generator-resume-after-completion.rs:19:17: 19:19]>; // in scope 0 at ui/async-await/issues/issue-65419/issue-65419-generator-resume-after-completion.rs:23:5: 23:21
    let mut _8: &mut [generator@ui/async-await/issues/issue-65419/issue-65419-generator-resume-after-completion.rs:19:17: 19:19]; // in scope 0 at ui/async-await/issues/issue-65419/issue-65419-generator-resume-after-completion.rs:23:14: 23:20
    let mut _9: ();                      // in scope 0 at ui/async-await/issues/issue-65419/issue-65419-generator-resume-after-completion.rs:23:29: 23:31
    let _10: std::ops::GeneratorState<(), ()>; // in scope 0 at ui/async-await/issues/issue-65419/issue-65419-generator-resume-after-completion.rs:24:5: 24:32
    let mut _11: std::pin::Pin<&mut [generator@ui/async-await/issues/issue-65419/issue-65419-generator-resume-after-completion.rs:19:17: 19:19]>; // in scope 0 at ui/async-await/issues/issue-65419/issue-65419-generator-resume-after-completion.rs:24:5: 24:21
    let mut _12: &mut [generator@ui/async-await/issues/issue-65419/issue-65419-generator-resume-after-completion.rs:19:17: 19:19]; // in scope 0 at ui/async-await/issues/issue-65419/issue-65419-generator-resume-after-completion.rs:24:14: 24:20
    let mut _13: ();                     // in scope 0 at ui/async-await/issues/issue-65419/issue-65419-generator-resume-after-completion.rs:24:29: 24:31
    scope 1 {
        debug g => _1;                   // in scope 1 at ui/async-await/issues/issue-65419/issue-65419-generator-resume-after-completion.rs:19:9: 19:14
    }

    bb0: {
        _1 = [generator@ui/async-await/issues/issue-65419/issue-65419-generator-resume-after-completion.rs:19:17: 19:19 (#0)]; // scope 0 at ui/async-await/issues/issue-65419/issue-65419-generator-resume-after-completion.rs:19:17: 21:6
                                         // generator
                                         // + def_id: DefId(0:7 ~ issue_65419_generator_resume_after_completion[7a98]::main::{closure#0})
                                         // + substs: [
                                         //     (),
                                         //     (),
                                         //     (),
                                         //     {()},
                                         //     (),
                                         // ]
                                         // + movability: Movable
        _4 = &mut _1;                    // scope 1 at ui/async-await/issues/issue-65419/issue-65419-generator-resume-after-completion.rs:22:14: 22:20
        _3 = Pin::<&mut [generator@ui/async-await/issues/issue-65419/issue-65419-generator-resume-after-completion.rs:19:17: 19:19]>::new(move _4) -> bb1; // scope 1 at ui/async-await/issues/issue-65419/issue-65419-generator-resume-after-completion.rs:22:5: 22:21
                                         // mir::Constant
                                         // + span: ui/async-await/issues/issue-65419/issue-65419-generator-resume-after-completion.rs:22:5: 22:13
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: fn(&mut [generator@ui/async-await/issues/issue-65419/issue-65419-generator-resume-after-completion.rs:19:17: 19:19]) -> Pin<&mut [generator@ui/async-await/issues/issue-65419/issue-65419-generator-resume-after-completion.rs:19:17: 19:19]> {Pin::<&mut [generator@ui/async-await/issues/issue-65419/issue-65419-generator-resume-after-completion.rs:19:17: 19:19]>::new}, val: Value(<ZST>) }
    }

    bb1: {
        _2 = <[generator@ui/async-await/issues/issue-65419/issue-65419-generator-resume-after-completion.rs:19:17: 19:19] as Generator>::resume(move _3, move _5) -> bb2; // scope 1 at ui/async-await/issues/issue-65419/issue-65419-generator-resume-after-completion.rs:22:5: 22:32
                                         // mir::Constant
                                         // + span: ui/async-await/issues/issue-65419/issue-65419-generator-resume-after-completion.rs:22:22: 22:28
                                         // + literal: Const { ty: for<'a> fn(Pin<&'a mut [generator@ui/async-await/issues/issue-65419/issue-65419-generator-resume-after-completion.rs:19:17: 19:19]>, ()) -> GeneratorState<<[generator@ui/async-await/issues/issue-65419/issue-65419-generator-resume-after-completion.rs:19:17: 19:19] as Generator>::Yield, <[generator@ui/async-await/issues/issue-65419/issue-65419-generator-resume-after-completion.rs:19:17: 19:19] as Generator>::Return> {<[generator@ui/async-await/issues/issue-65419/issue-65419-generator-resume-after-completion.rs:19:17: 19:19] as Generator>::resume}, val: Value(<ZST>) }
    }

    bb2: {
        _8 = &mut _1;                    // scope 1 at ui/async-await/issues/issue-65419/issue-65419-generator-resume-after-completion.rs:23:14: 23:20
        _7 = Pin::<&mut [generator@ui/async-await/issues/issue-65419/issue-65419-generator-resume-after-completion.rs:19:17: 19:19]>::new(move _8) -> bb3; // scope 1 at ui/async-await/issues/issue-65419/issue-65419-generator-resume-after-completion.rs:23:5: 23:21
                                         // mir::Constant
                                         // + span: ui/async-await/issues/issue-65419/issue-65419-generator-resume-after-completion.rs:23:5: 23:13
                                         // + user_ty: UserType(1)
                                         // + literal: Const { ty: fn(&mut [generator@ui/async-await/issues/issue-65419/issue-65419-generator-resume-after-completion.rs:19:17: 19:19]) -> Pin<&mut [generator@ui/async-await/issues/issue-65419/issue-65419-generator-resume-after-completion.rs:19:17: 19:19]> {Pin::<&mut [generator@ui/async-await/issues/issue-65419/issue-65419-generator-resume-after-completion.rs:19:17: 19:19]>::new}, val: Value(<ZST>) }
    }

    bb3: {
        _6 = <[generator@ui/async-await/issues/issue-65419/issue-65419-generator-resume-after-completion.rs:19:17: 19:19] as Generator>::resume(move _7, move _9) -> bb4; // scope 1 at ui/async-await/issues/issue-65419/issue-65419-generator-resume-after-completion.rs:23:5: 23:32
                                         // mir::Constant
                                         // + span: ui/async-await/issues/issue-65419/issue-65419-generator-resume-after-completion.rs:23:22: 23:28
                                         // + literal: Const { ty: for<'a> fn(Pin<&'a mut [generator@ui/async-await/issues/issue-65419/issue-65419-generator-resume-after-completion.rs:19:17: 19:19]>, ()) -> GeneratorState<<[generator@ui/async-await/issues/issue-65419/issue-65419-generator-resume-after-completion.rs:19:17: 19:19] as Generator>::Yield, <[generator@ui/async-await/issues/issue-65419/issue-65419-generator-resume-after-completion.rs:19:17: 19:19] as Generator>::Return> {<[generator@ui/async-await/issues/issue-65419/issue-65419-generator-resume-after-completion.rs:19:17: 19:19] as Generator>::resume}, val: Value(<ZST>) }
    }

    bb4: {
        _12 = &mut _1;                   // scope 1 at ui/async-await/issues/issue-65419/issue-65419-generator-resume-after-completion.rs:24:14: 24:20
        _11 = Pin::<&mut [generator@ui/async-await/issues/issue-65419/issue-65419-generator-resume-after-completion.rs:19:17: 19:19]>::new(move _12) -> bb5; // scope 1 at ui/async-await/issues/issue-65419/issue-65419-generator-resume-after-completion.rs:24:5: 24:21
                                         // mir::Constant
                                         // + span: ui/async-await/issues/issue-65419/issue-65419-generator-resume-after-completion.rs:24:5: 24:13
                                         // + user_ty: UserType(2)
                                         // + literal: Const { ty: fn(&mut [generator@ui/async-await/issues/issue-65419/issue-65419-generator-resume-after-completion.rs:19:17: 19:19]) -> Pin<&mut [generator@ui/async-await/issues/issue-65419/issue-65419-generator-resume-after-completion.rs:19:17: 19:19]> {Pin::<&mut [generator@ui/async-await/issues/issue-65419/issue-65419-generator-resume-after-completion.rs:19:17: 19:19]>::new}, val: Value(<ZST>) }
    }

    bb5: {
        _10 = <[generator@ui/async-await/issues/issue-65419/issue-65419-generator-resume-after-completion.rs:19:17: 19:19] as Generator>::resume(move _11, move _13) -> bb6; // scope 1 at ui/async-await/issues/issue-65419/issue-65419-generator-resume-after-completion.rs:24:5: 24:32
                                         // mir::Constant
                                         // + span: ui/async-await/issues/issue-65419/issue-65419-generator-resume-after-completion.rs:24:22: 24:28
                                         // + literal: Const { ty: for<'a> fn(Pin<&'a mut [generator@ui/async-await/issues/issue-65419/issue-65419-generator-resume-after-completion.rs:19:17: 19:19]>, ()) -> GeneratorState<<[generator@ui/async-await/issues/issue-65419/issue-65419-generator-resume-after-completion.rs:19:17: 19:19] as Generator>::Yield, <[generator@ui/async-await/issues/issue-65419/issue-65419-generator-resume-after-completion.rs:19:17: 19:19] as Generator>::Return> {<[generator@ui/async-await/issues/issue-65419/issue-65419-generator-resume-after-completion.rs:19:17: 19:19] as Generator>::resume}, val: Value(<ZST>) }
    }

    bb6: {
        return;                          // scope 0 at ui/async-await/issues/issue-65419/issue-65419-generator-resume-after-completion.rs:25:2: 25:2
    }
}

fn main::{closure#0}(_1: Pin<&mut [generator@ui/async-await/issues/issue-65419/issue-65419-generator-resume-after-completion.rs:19:17: 19:19]>, _2: ()) -> GeneratorState<(), ()> {
    let mut _0: std::ops::GeneratorState<(), ()>; // return place in scope 0 at ui/async-await/issues/issue-65419/issue-65419-generator-resume-after-completion.rs:19:17: 21:6
    let mut _3: ();                      // in scope 0 at ui/async-await/issues/issue-65419/issue-65419-generator-resume-after-completion.rs:20:9: 20:14
    let mut _4: ();                      // in scope 0 at ui/async-await/issues/issue-65419/issue-65419-generator-resume-after-completion.rs:19:20: 19:20
    let mut _5: u32;                     // in scope 0 at ui/async-await/issues/issue-65419/issue-65419-generator-resume-after-completion.rs:19:17: 21:6
    let mut _6: &mut [generator@ui/async-await/issues/issue-65419/issue-65419-generator-resume-after-completion.rs:19:17: 19:19]; // in scope 0 at ui/async-await/issues/issue-65419/issue-65419-generator-resume-after-completion.rs:19:17: 21:6
    let mut _7: &mut [generator@ui/async-await/issues/issue-65419/issue-65419-generator-resume-after-completion.rs:19:17: 19:19]; // in scope 0 at ui/async-await/issues/issue-65419/issue-65419-generator-resume-after-completion.rs:19:17: 21:6
    let mut _8: &mut [generator@ui/async-await/issues/issue-65419/issue-65419-generator-resume-after-completion.rs:19:17: 19:19]; // in scope 0 at ui/async-await/issues/issue-65419/issue-65419-generator-resume-after-completion.rs:19:17: 21:6

    bb0: {
        _6 = deref_copy (_1.0: &mut [generator@ui/async-await/issues/issue-65419/issue-65419-generator-resume-after-completion.rs:19:17: 19:19]); // scope 0 at ui/async-await/issues/issue-65419/issue-65419-generator-resume-after-completion.rs:19:17: 21:6
        _5 = discriminant((*_6));        // scope 0 at ui/async-await/issues/issue-65419/issue-65419-generator-resume-after-completion.rs:19:17: 21:6
        switchInt(move _5) -> [0: bb1, 1: bb3, 3: bb2, otherwise: bb4]; // scope 0 at ui/async-await/issues/issue-65419/issue-65419-generator-resume-after-completion.rs:19:17: 21:6
    }

    bb1: {
        _3 = ();                         // scope 0 at ui/async-await/issues/issue-65419/issue-65419-generator-resume-after-completion.rs:20:9: 20:14
        _0 = GeneratorState::<(), ()>::Yielded(move _3); // scope 0 at ui/async-await/issues/issue-65419/issue-65419-generator-resume-after-completion.rs:20:9: 20:14
        _7 = deref_copy (_1.0: &mut [generator@ui/async-await/issues/issue-65419/issue-65419-generator-resume-after-completion.rs:19:17: 19:19]); // scope 0 at ui/async-await/issues/issue-65419/issue-65419-generator-resume-after-completion.rs:20:9: 20:14
        discriminant((*_7)) = 3;         // scope 0 at ui/async-await/issues/issue-65419/issue-65419-generator-resume-after-completion.rs:20:9: 20:14
        return;                          // scope 0 at ui/async-await/issues/issue-65419/issue-65419-generator-resume-after-completion.rs:20:9: 20:14
    }

    bb2: {
        _4 = const ();                   // scope 0 at ui/async-await/issues/issue-65419/issue-65419-generator-resume-after-completion.rs:19:20: 21:6
        _0 = GeneratorState::<(), ()>::Complete(move _4); // scope 0 at ui/async-await/issues/issue-65419/issue-65419-generator-resume-after-completion.rs:21:6: 21:6
        _8 = deref_copy (_1.0: &mut [generator@ui/async-await/issues/issue-65419/issue-65419-generator-resume-after-completion.rs:19:17: 19:19]); // scope 0 at ui/async-await/issues/issue-65419/issue-65419-generator-resume-after-completion.rs:21:6: 21:6
        discriminant((*_8)) = 1;         // scope 0 at ui/async-await/issues/issue-65419/issue-65419-generator-resume-after-completion.rs:21:6: 21:6
        return;                          // scope 0 at ui/async-await/issues/issue-65419/issue-65419-generator-resume-after-completion.rs:21:6: 21:6
    }

    bb3: {
        assert(const false, "generator resumed after completion") -> bb3; // scope 0 at ui/async-await/issues/issue-65419/issue-65419-generator-resume-after-completion.rs:19:17: 21:6
    }

    bb4: {
        unreachable;                     // scope 0 at ui/async-await/issues/issue-65419/issue-65419-generator-resume-after-completion.rs:19:17: 21:6
    }
}
