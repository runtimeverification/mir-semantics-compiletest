// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
fn <impl at ui/async-await/issue-73137.rs:15:1: 15:25>::wake(_1: Arc<DummyWaker>) -> () {
    debug self => _1;                    // in scope 0 at ui/async-await/issue-73137.rs:16:13: 16:17
    let mut _0: ();                      // return place in scope 0 at ui/async-await/issue-73137.rs:16:30: 16:30

    bb0: {
        drop(_1) -> bb1;                 // scope 0 at ui/async-await/issue-73137.rs:16:31: 16:32
    }

    bb1: {
        return;                          // scope 0 at ui/async-await/issue-73137.rs:16:32: 16:32
    }
}

fn nop(_1: T) -> () {
    let mut _0: ();                      // return place in scope 0 at ui/async-await/issue-73137.rs:25:17: 25:17

    bb0: {
        drop(_1) -> bb1;                 // scope 0 at ui/async-await/issue-73137.rs:25:18: 25:19
    }

    bb1: {
        return;                          // scope 0 at ui/async-await/issue-73137.rs:25:19: 25:19
    }
}

fn main() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/async-await/issue-73137.rs:27:11: 27:11
    let mut _1: std::pin::Pin<std::boxed::Box<[async block@ui/async-await/issue-73137.rs:28:28: 40:6]>>; // in scope 0 at ui/async-await/issue-73137.rs:28:9: 28:16
    let mut _2: [async block@ui/async-await/issue-73137.rs:28:28: 40:6]; // in scope 0 at ui/async-await/issue-73137.rs:28:28: 40:6
    let mut _3: [async block@ui/async-await/issue-73137.rs:28:28: 40:6]; // in scope 0 at ui/async-await/issue-73137.rs:28:28: 40:6
    let mut _5: std::sync::Arc<DummyWaker>; // in scope 0 at ui/async-await/issue-73137.rs:41:29: 41:49
    let mut _6: DummyWaker;              // in scope 0 at ui/async-await/issue-73137.rs:41:38: 41:48
    let mut _8: &std::task::Waker;       // in scope 0 at ui/async-await/issue-73137.rs:42:38: 42:44
    let _9: &std::task::Waker;           // in scope 0 at ui/async-await/issue-73137.rs:42:38: 42:44
    let mut _10: std::task::Poll<()>;    // in scope 0 at ui/async-await/issue-73137.rs:43:13: 43:39
    let mut _11: std::pin::Pin<&mut [async block@ui/async-await/issue-73137.rs:28:28: 40:6]>; // in scope 0 at ui/async-await/issue-73137.rs:43:13: 43:25
    let mut _12: &mut std::pin::Pin<std::boxed::Box<[async block@ui/async-await/issue-73137.rs:28:28: 40:6]>>; // in scope 0 at ui/async-await/issue-73137.rs:43:13: 43:25
    let mut _13: &mut std::task::Context<'_>; // in scope 0 at ui/async-await/issue-73137.rs:43:31: 43:38
    let mut _14: &mut std::task::Context<'_>; // in scope 0 at ui/async-await/issue-73137.rs:43:31: 43:38
    scope 1 {
        debug fut => _1;                 // in scope 1 at ui/async-await/issue-73137.rs:28:9: 28:16
        let _4: std::task::Waker;        // in scope 1 at ui/async-await/issue-73137.rs:41:9: 41:14
        scope 2 {
            debug waker => _4;           // in scope 2 at ui/async-await/issue-73137.rs:41:9: 41:14
            let mut _7: std::task::Context<'_>; // in scope 2 at ui/async-await/issue-73137.rs:42:9: 42:15
            scope 3 {
                debug cx => _7;          // in scope 3 at ui/async-await/issue-73137.rs:42:9: 42:15
                scope 4 {
                }
            }
        }
    }

    bb0: {
        _3 = [generator@ui/async-await/issue-73137.rs:28:28: 40:6 (#0)]; // scope 0 at ui/async-await/issue-73137.rs:28:28: 40:6
                                         // generator
                                         // + def_id: DefId(0:19 ~ issue_73137[ce1a]::main::{closure#0})
                                         // + substs: [
                                         //     std::future::ResumeTy,
                                         //     (),
                                         //     (),
                                         //     for<'a> {std::future::ResumeTy, u32, &'a u32, [async block@ui/async-await/issue-73137.rs:31:16: 31:27], (), Foo, [async block@ui/async-await/issue-73137.rs:39:9: 39:17]},
                                         //     (),
                                         // ]
                                         // + movability: Static
        _2 = identity_future::<(), [async block@ui/async-await/issue-73137.rs:28:28: 40:6]>(move _3) -> bb1; // scope 0 at ui/async-await/issue-73137.rs:28:28: 40:6
                                         // mir::Constant
                                         // + span: ui/async-await/issue-73137.rs:28:28: 40:6
                                         // + literal: Const { ty: fn([async block@ui/async-await/issue-73137.rs:28:28: 40:6]) -> [async block@ui/async-await/issue-73137.rs:28:28: 40:6] {identity_future::<(), [async block@ui/async-await/issue-73137.rs:28:28: 40:6]>}, val: Value(<ZST>) }
    }

    bb1: {
        _1 = Box::<[async block@ui/async-await/issue-73137.rs:28:28: 40:6]>::pin(move _2) -> bb2; // scope 0 at ui/async-await/issue-73137.rs:28:19: 40:7
                                         // mir::Constant
                                         // + span: ui/async-await/issue-73137.rs:28:19: 28:27
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: fn([async block@ui/async-await/issue-73137.rs:28:28: 40:6]) -> Pin<Box<[async block@ui/async-await/issue-73137.rs:28:28: 40:6]>> {Box::<[async block@ui/async-await/issue-73137.rs:28:28: 40:6]>::pin}, val: Value(<ZST>) }
    }

    bb2: {
        _5 = Arc::<DummyWaker>::new(move _6) -> [return: bb3, unwind: bb11]; // scope 1 at ui/async-await/issue-73137.rs:41:29: 41:49
                                         // mir::Constant
                                         // + span: ui/async-await/issue-73137.rs:41:29: 41:37
                                         // + user_ty: UserType(2)
                                         // + literal: Const { ty: fn(DummyWaker) -> Arc<DummyWaker> {Arc::<DummyWaker>::new}, val: Value(<ZST>) }
    }

    bb3: {
        _4 = <Waker as From<Arc<DummyWaker>>>::from(move _5) -> [return: bb4, unwind: bb11]; // scope 1 at ui/async-await/issue-73137.rs:41:17: 41:50
                                         // mir::Constant
                                         // + span: ui/async-await/issue-73137.rs:41:17: 41:28
                                         // + user_ty: UserType(1)
                                         // + literal: Const { ty: fn(Arc<DummyWaker>) -> Waker {<Waker as From<Arc<DummyWaker>>>::from}, val: Value(<ZST>) }
    }

    bb4: {
        _9 = &_4;                        // scope 2 at ui/async-await/issue-73137.rs:42:38: 42:44
        _8 = _9;                         // scope 2 at ui/async-await/issue-73137.rs:42:38: 42:44
        _7 = Context::<'_>::from_waker(move _8) -> [return: bb5, unwind: bb10]; // scope 2 at ui/async-await/issue-73137.rs:42:18: 42:45
                                         // mir::Constant
                                         // + span: ui/async-await/issue-73137.rs:42:18: 42:37
                                         // + user_ty: UserType(3)
                                         // + literal: Const { ty: fn(&Waker) -> Context<'_> {Context::<'_>::from_waker}, val: Value(<ZST>) }
    }

    bb5: {
        _12 = &mut _1;                   // scope 3 at ui/async-await/issue-73137.rs:43:13: 43:25
        _11 = Pin::<Box<[async block@ui/async-await/issue-73137.rs:28:28: 40:6]>>::as_mut(move _12) -> [return: bb6, unwind: bb10]; // scope 3 at ui/async-await/issue-73137.rs:43:13: 43:25
                                         // mir::Constant
                                         // + span: ui/async-await/issue-73137.rs:43:17: 43:23
                                         // + literal: Const { ty: for<'a> fn(&'a mut Pin<Box<[async block@ui/async-await/issue-73137.rs:28:28: 40:6]>>) -> Pin<&'a mut <Box<[async block@ui/async-await/issue-73137.rs:28:28: 40:6]> as Deref>::Target> {Pin::<Box<[async block@ui/async-await/issue-73137.rs:28:28: 40:6]>>::as_mut}, val: Value(<ZST>) }
    }

    bb6: {
        _14 = &mut _7;                   // scope 3 at ui/async-await/issue-73137.rs:43:31: 43:38
        _13 = &mut (*_14);               // scope 3 at ui/async-await/issue-73137.rs:43:31: 43:38
        _10 = <[async block@ui/async-await/issue-73137.rs:28:28: 40:6] as Future>::poll(move _11, move _13) -> [return: bb7, unwind: bb10]; // scope 3 at ui/async-await/issue-73137.rs:43:13: 43:39
                                         // mir::Constant
                                         // + span: ui/async-await/issue-73137.rs:43:26: 43:30
                                         // + literal: Const { ty: for<'a, 'b, 'c> fn(Pin<&'a mut [async block@ui/async-await/issue-73137.rs:28:28: 40:6]>, &'b mut Context<'c>) -> Poll<<[async block@ui/async-await/issue-73137.rs:28:28: 40:6] as Future>::Output> {<[async block@ui/async-await/issue-73137.rs:28:28: 40:6] as Future>::poll}, val: Value(<ZST>) }
    }

    bb7: {
        drop(_4) -> [return: bb8, unwind: bb11]; // scope 1 at ui/async-await/issue-73137.rs:44:1: 44:2
    }

    bb8: {
        drop(_1) -> bb9;                 // scope 0 at ui/async-await/issue-73137.rs:44:1: 44:2
    }

    bb9: {
        return;                          // scope 0 at ui/async-await/issue-73137.rs:44:2: 44:2
    }

    bb10 (cleanup): {
        drop(_4) -> bb11;                // scope 1 at ui/async-await/issue-73137.rs:44:1: 44:2
    }

    bb11 (cleanup): {
        drop(_1) -> bb12;                // scope 0 at ui/async-await/issue-73137.rs:44:1: 44:2
    }

    bb12 (cleanup): {
        resume;                          // scope 0 at ui/async-await/issue-73137.rs:27:1: 44:2
    }
}

fn main::{closure#0}(_1: Pin<&mut [async block@ui/async-await/issue-73137.rs:28:28: 40:6]>, _2: &mut Context<'_>) -> Poll<()> {
    debug _task_context => _54;          // in scope 0 at ui/async-await/issue-73137.rs:28:28: 40:6
    let mut _0: std::task::Poll<()>;     // return place in scope 0 at ui/async-await/issue-73137.rs:28:28: 40:6
    let _3: &u32;                        // in scope 0 at ui/async-await/issue-73137.rs:30:16: 30:19
    let mut _4: usize;                   // in scope 0 at ui/async-await/issue-73137.rs:31:16: 31:33
    let mut _5: [async block@ui/async-await/issue-73137.rs:31:16: 31:27]; // in scope 0 at ui/async-await/issue-73137.rs:31:27: 31:33
    let mut _6: [async block@ui/async-await/issue-73137.rs:31:16: 31:27]; // in scope 0 at ui/async-await/issue-73137.rs:31:16: 31:27
    let mut _7: [async block@ui/async-await/issue-73137.rs:31:16: 31:27]; // in scope 0 at ui/async-await/issue-73137.rs:31:16: 31:27
    let mut _8: std::task::Poll<usize>;  // in scope 0 at ui/async-await/issue-73137.rs:31:27: 31:33
    let mut _9: std::pin::Pin<&mut [async block@ui/async-await/issue-73137.rs:31:16: 31:27]>; // in scope 0 at ui/async-await/issue-73137.rs:31:27: 31:33
    let mut _10: &mut [async block@ui/async-await/issue-73137.rs:31:16: 31:27]; // in scope 0 at ui/async-await/issue-73137.rs:31:27: 31:33
    let mut _11: &mut [async block@ui/async-await/issue-73137.rs:31:16: 31:27]; // in scope 0 at ui/async-await/issue-73137.rs:31:27: 31:33
    let mut _12: &mut std::task::Context<'_>; // in scope 0 at ui/async-await/issue-73137.rs:31:16: 31:33
    let mut _13: &mut std::task::Context<'_>; // in scope 0 at ui/async-await/issue-73137.rs:31:16: 31:33
    let mut _14: &mut std::task::Context<'_>; // in scope 0 at ui/async-await/issue-73137.rs:31:27: 31:33
    let mut _15: isize;                  // in scope 0 at ui/async-await/issue-73137.rs:31:27: 31:33
    let mut _17: &mut std::task::Context<'_>; // in scope 0 at ui/async-await/issue-73137.rs:31:27: 31:33
    let _18: ();                         // in scope 0 at ui/async-await/issue-73137.rs:36:9: 36:23
    let mut _19: &&u32;                  // in scope 0 at ui/async-await/issue-73137.rs:36:13: 36:22
    let mut _20: (&usize, &usize);       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:88:15: 88:32
    let mut _21: &usize;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:88:16: 88:22
    let mut _22: &usize;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:88:24: 88:31
    let _23: usize;                      // in scope 0 at ui/async-await/issue-73137.rs:37:28: 37:68
    let mut _24: &u32;                   // in scope 0 at ui/async-await/issue-73137.rs:37:57: 37:65
    let mut _27: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:90:20: 90:43
    let mut _28: usize;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:90:20: 90:29
    let mut _29: usize;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:90:33: 90:43
    let _31: !;                          // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:95:21: 95:114
    let mut _32: core::panicking::AssertKind; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:95:54: 95:58
    let mut _33: &usize;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:95:60: 95:70
    let _34: &usize;                     // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:95:60: 95:70
    let mut _35: &usize;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:95:72: 95:83
    let _36: &usize;                     // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:95:72: 95:83
    let mut _37: std::option::Option<std::fmt::Arguments<'_>>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:95:85: 95:113
    let mut _38: [async block@ui/async-await/issue-73137.rs:39:9: 39:17]; // in scope 0 at ui/async-await/issue-73137.rs:39:17: 39:23
    let mut _39: [async block@ui/async-await/issue-73137.rs:39:9: 39:17]; // in scope 0 at ui/async-await/issue-73137.rs:39:9: 39:17
    let mut _40: [async block@ui/async-await/issue-73137.rs:39:9: 39:17]; // in scope 0 at ui/async-await/issue-73137.rs:39:9: 39:17
    let mut _41: std::task::Poll<()>;    // in scope 0 at ui/async-await/issue-73137.rs:39:17: 39:23
    let mut _42: std::pin::Pin<&mut [async block@ui/async-await/issue-73137.rs:39:9: 39:17]>; // in scope 0 at ui/async-await/issue-73137.rs:39:17: 39:23
    let mut _43: &mut [async block@ui/async-await/issue-73137.rs:39:9: 39:17]; // in scope 0 at ui/async-await/issue-73137.rs:39:17: 39:23
    let mut _44: &mut [async block@ui/async-await/issue-73137.rs:39:9: 39:17]; // in scope 0 at ui/async-await/issue-73137.rs:39:17: 39:23
    let mut _45: &mut std::task::Context<'_>; // in scope 0 at ui/async-await/issue-73137.rs:39:9: 39:23
    let mut _46: &mut std::task::Context<'_>; // in scope 0 at ui/async-await/issue-73137.rs:39:9: 39:23
    let mut _47: &mut std::task::Context<'_>; // in scope 0 at ui/async-await/issue-73137.rs:39:17: 39:23
    let mut _48: isize;                  // in scope 0 at ui/async-await/issue-73137.rs:39:17: 39:23
    let mut _50: &mut std::task::Context<'_>; // in scope 0 at ui/async-await/issue-73137.rs:39:17: 39:23
    let mut _52: &u32;                   // in scope 0 at ui/async-await/issue-73137.rs:30:16: 30:19
    let mut _53: ();                     // in scope 0 at ui/async-await/issue-73137.rs:28:28: 40:6
    let mut _54: &mut std::task::Context<'_>; // in scope 0 at ui/async-await/issue-73137.rs:28:28: 40:6
    let mut _55: u32;                    // in scope 0 at ui/async-await/issue-73137.rs:28:28: 40:6
    let mut _56: &mut [async block@ui/async-await/issue-73137.rs:28:28: 40:6]; // in scope 0 at ui/async-await/issue-73137.rs:28:28: 40:6
    let mut _57: &mut [async block@ui/async-await/issue-73137.rs:28:28: 40:6]; // in scope 0 at ui/async-await/issue-73137.rs:28:28: 40:6
    let mut _58: &mut [async block@ui/async-await/issue-73137.rs:28:28: 40:6]; // in scope 0 at ui/async-await/issue-73137.rs:28:28: 40:6
    let mut _59: &mut [async block@ui/async-await/issue-73137.rs:28:28: 40:6]; // in scope 0 at ui/async-await/issue-73137.rs:28:28: 40:6
    let mut _60: &mut [async block@ui/async-await/issue-73137.rs:28:28: 40:6]; // in scope 0 at ui/async-await/issue-73137.rs:28:28: 40:6
    let mut _61: &mut [async block@ui/async-await/issue-73137.rs:28:28: 40:6]; // in scope 0 at ui/async-await/issue-73137.rs:28:28: 40:6
    let mut _62: &mut [async block@ui/async-await/issue-73137.rs:28:28: 40:6]; // in scope 0 at ui/async-await/issue-73137.rs:28:28: 40:6
    let mut _63: &mut [async block@ui/async-await/issue-73137.rs:28:28: 40:6]; // in scope 0 at ui/async-await/issue-73137.rs:28:28: 40:6
    let mut _64: &mut [async block@ui/async-await/issue-73137.rs:28:28: 40:6]; // in scope 0 at ui/async-await/issue-73137.rs:28:28: 40:6
    let mut _65: &mut [async block@ui/async-await/issue-73137.rs:28:28: 40:6]; // in scope 0 at ui/async-await/issue-73137.rs:28:28: 40:6
    let mut _66: &mut [async block@ui/async-await/issue-73137.rs:28:28: 40:6]; // in scope 0 at ui/async-await/issue-73137.rs:28:28: 40:6
    let mut _67: &mut [async block@ui/async-await/issue-73137.rs:28:28: 40:6]; // in scope 0 at ui/async-await/issue-73137.rs:28:28: 40:6
    let mut _68: &mut [async block@ui/async-await/issue-73137.rs:28:28: 40:6]; // in scope 0 at ui/async-await/issue-73137.rs:28:28: 40:6
    let mut _69: &mut [async block@ui/async-await/issue-73137.rs:28:28: 40:6]; // in scope 0 at ui/async-await/issue-73137.rs:28:28: 40:6
    scope 1 {
        debug action => (((*(_1.0: &mut [async block@ui/async-await/issue-73137.rs:28:28: 40:6])) as variant#4).0: Foo); // in scope 1 at ui/async-await/issue-73137.rs:29:13: 29:19
        let _25: &usize;                 // in scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:89:14: 89:22
        let _26: &usize;                 // in scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:89:24: 89:33
        let mut _51: &usize;             // in scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:88:16: 88:22
        scope 5 {
        }
        scope 6 {
            debug left_val => _25;       // in scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:89:14: 89:22
            debug right_val => _26;      // in scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:89:24: 89:33
            let _30: core::panicking::AssertKind; // in scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:91:25: 91:29
            scope 7 {
                debug kind => _30;       // in scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:91:25: 91:29
            }
        }
        scope 8 {
            debug __awaitee => (((*(_1.0: &mut [async block@ui/async-await/issue-73137.rs:28:28: 40:6])) as variant#4).1: [async block@ui/async-await/issue-73137.rs:39:9: 39:17]); // in scope 8 at ui/async-await/issue-73137.rs:39:17: 39:23
            let _49: ();                 // in scope 8 at ui/async-await/issue-73137.rs:39:9: 39:23
            scope 9 {
            }
            scope 10 {
                debug result => _49;     // in scope 10 at ui/async-await/issue-73137.rs:39:9: 39:23
            }
        }
    }
    scope 2 {
        debug __awaitee => (((*(_1.0: &mut [async block@ui/async-await/issue-73137.rs:28:28: 40:6])) as variant#3).1: [async block@ui/async-await/issue-73137.rs:31:16: 31:27]); // in scope 2 at ui/async-await/issue-73137.rs:31:27: 31:33
        let _16: usize;                  // in scope 2 at ui/async-await/issue-73137.rs:31:16: 31:33
        scope 3 {
        }
        scope 4 {
            debug result => _16;         // in scope 4 at ui/async-await/issue-73137.rs:31:16: 31:33
        }
    }

    bb0: {
        _56 = deref_copy (_1.0: &mut [async block@ui/async-await/issue-73137.rs:28:28: 40:6]); // scope 0 at ui/async-await/issue-73137.rs:28:28: 40:6
        _55 = discriminant((*_56));      // scope 0 at ui/async-await/issue-73137.rs:28:28: 40:6
        switchInt(move _55) -> [0: bb1, 1: bb26, 2: bb25, 3: bb23, 4: bb24, otherwise: bb27]; // scope 0 at ui/async-await/issue-73137.rs:28:28: 40:6
    }

    bb1: {
        _54 = move _2;                   // scope 0 at ui/async-await/issue-73137.rs:28:28: 40:6
        _52 = const _;                   // scope 0 at ui/async-await/issue-73137.rs:30:16: 30:19
                                         // mir::Constant
                                         // + span: ui/async-await/issue-73137.rs:30:16: 30:19
                                         // + literal: Const { ty: &u32, val: Unevaluated(main::{closure#0}, [<resume_ty>, <yield_ty>, <return_ty>, <witness>, <upvars>], Some(promoted[1])) }
        _3 = _52;                        // scope 0 at ui/async-await/issue-73137.rs:30:16: 30:19
        _57 = deref_copy (_1.0: &mut [async block@ui/async-await/issue-73137.rs:28:28: 40:6]); // scope 0 at ui/async-await/issue-73137.rs:30:16: 30:19
        (((*_57) as variant#3).0: &u32) = _3; // scope 0 at ui/async-await/issue-73137.rs:30:16: 30:19
        _7 = [generator@ui/async-await/issue-73137.rs:31:16: 31:27 (#0)]; // scope 0 at ui/async-await/issue-73137.rs:31:16: 31:27
                                         // generator
                                         // + def_id: DefId(0:20 ~ issue_73137[ce1a]::main::{closure#0}::{closure#0})
                                         // + substs: [
                                         //     std::future::ResumeTy,
                                         //     (),
                                         //     usize,
                                         //     {},
                                         //     (),
                                         // ]
                                         // + movability: Static
        _6 = identity_future::<usize, [async block@ui/async-await/issue-73137.rs:31:16: 31:27]>(move _7) -> [return: bb2, unwind: bb22]; // scope 0 at ui/async-await/issue-73137.rs:31:16: 31:27
                                         // mir::Constant
                                         // + span: ui/async-await/issue-73137.rs:31:16: 31:27
                                         // + literal: Const { ty: fn([async block@ui/async-await/issue-73137.rs:31:16: 31:27]) -> [async block@ui/async-await/issue-73137.rs:31:16: 31:27] {identity_future::<usize, [async block@ui/async-await/issue-73137.rs:31:16: 31:27]>}, val: Value(<ZST>) }
    }

    bb2: {
        _5 = <[async block@ui/async-await/issue-73137.rs:31:16: 31:27] as IntoFuture>::into_future(move _6) -> [return: bb3, unwind: bb22]; // scope 0 at ui/async-await/issue-73137.rs:31:27: 31:33
                                         // mir::Constant
                                         // + span: ui/async-await/issue-73137.rs:31:27: 31:33
                                         // + literal: Const { ty: fn([async block@ui/async-await/issue-73137.rs:31:16: 31:27]) -> <[async block@ui/async-await/issue-73137.rs:31:16: 31:27] as IntoFuture>::IntoFuture {<[async block@ui/async-await/issue-73137.rs:31:16: 31:27] as IntoFuture>::into_future}, val: Value(<ZST>) }
    }

    bb3: {
        _58 = deref_copy (_1.0: &mut [async block@ui/async-await/issue-73137.rs:28:28: 40:6]); // scope 0 at ui/async-await/issue-73137.rs:31:27: 31:33
        (((*_58) as variant#3).1: [async block@ui/async-await/issue-73137.rs:31:16: 31:27]) = move _5; // scope 0 at ui/async-await/issue-73137.rs:31:27: 31:33
        goto -> bb4;                     // scope 2 at ui/async-await/issue-73137.rs:31:27: 31:33
    }

    bb4: {
        _59 = deref_copy (_1.0: &mut [async block@ui/async-await/issue-73137.rs:28:28: 40:6]); // scope 3 at ui/async-await/issue-73137.rs:31:27: 31:33
        _11 = &mut (((*_59) as variant#3).1: [async block@ui/async-await/issue-73137.rs:31:16: 31:27]); // scope 3 at ui/async-await/issue-73137.rs:31:27: 31:33
        _10 = &mut (*_11);               // scope 3 at ui/async-await/issue-73137.rs:31:27: 31:33
        _9 = Pin::<&mut [async block@ui/async-await/issue-73137.rs:31:16: 31:27]>::new_unchecked(move _10) -> [return: bb5, unwind: bb22]; // scope 3 at ui/async-await/issue-73137.rs:31:27: 31:33
                                         // mir::Constant
                                         // + span: ui/async-await/issue-73137.rs:31:27: 31:33
                                         // + literal: Const { ty: unsafe fn(&mut [async block@ui/async-await/issue-73137.rs:31:16: 31:27]) -> Pin<&mut [async block@ui/async-await/issue-73137.rs:31:16: 31:27]> {Pin::<&mut [async block@ui/async-await/issue-73137.rs:31:16: 31:27]>::new_unchecked}, val: Value(<ZST>) }
    }

    bb5: {
        _14 = _54;                       // scope 3 at ui/async-await/issue-73137.rs:31:27: 31:33
        _13 = move _14;                  // scope 3 at ui/async-await/issue-73137.rs:31:16: 31:33
        _12 = &mut (*_13);               // scope 3 at ui/async-await/issue-73137.rs:31:16: 31:33
        _8 = <[async block@ui/async-await/issue-73137.rs:31:16: 31:27] as Future>::poll(move _9, move _12) -> [return: bb6, unwind: bb22]; // scope 3 at ui/async-await/issue-73137.rs:31:27: 31:33
                                         // mir::Constant
                                         // + span: ui/async-await/issue-73137.rs:31:27: 31:33
                                         // + literal: Const { ty: for<'a, 'b, 'c> fn(Pin<&'a mut [async block@ui/async-await/issue-73137.rs:31:16: 31:27]>, &'b mut Context<'c>) -> Poll<<[async block@ui/async-await/issue-73137.rs:31:16: 31:27] as Future>::Output> {<[async block@ui/async-await/issue-73137.rs:31:16: 31:27] as Future>::poll}, val: Value(<ZST>) }
    }

    bb6: {
        _15 = discriminant(_8);          // scope 2 at ui/async-await/issue-73137.rs:31:27: 31:33
        switchInt(move _15) -> [0: bb9, 1: bb7, otherwise: bb8]; // scope 2 at ui/async-await/issue-73137.rs:31:27: 31:33
    }

    bb7: {
        _0 = Poll::<()>::Pending;        // scope 2 at ui/async-await/issue-73137.rs:31:27: 31:33
        _60 = deref_copy (_1.0: &mut [async block@ui/async-await/issue-73137.rs:28:28: 40:6]); // scope 2 at ui/async-await/issue-73137.rs:31:27: 31:33
        discriminant((*_60)) = 3;        // scope 2 at ui/async-await/issue-73137.rs:31:27: 31:33
        return;                          // scope 2 at ui/async-await/issue-73137.rs:31:27: 31:33
    }

    bb8: {
        unreachable;                     // scope 2 at ui/async-await/issue-73137.rs:31:27: 31:33
    }

    bb9: {
        _16 = ((_8 as Ready).0: usize);  // scope 2 at ui/async-await/issue-73137.rs:31:16: 31:33
        _4 = _16;                        // scope 4 at ui/async-await/issue-73137.rs:31:16: 31:33
        _61 = deref_copy (_1.0: &mut [async block@ui/async-await/issue-73137.rs:28:28: 40:6]); // scope 0 at ui/async-await/issue-73137.rs:29:22: 32:10
        _62 = deref_copy (_1.0: &mut [async block@ui/async-await/issue-73137.rs:28:28: 40:6]); // scope 0 at ui/async-await/issue-73137.rs:29:22: 32:10
        (((*_61) as variant#4).0: Foo) = Foo { a: move _4, b: move (((*_62) as variant#3).0: &u32) }; // scope 0 at ui/async-await/issue-73137.rs:29:22: 32:10
        _63 = deref_copy (_1.0: &mut [async block@ui/async-await/issue-73137.rs:28:28: 40:6]); // scope 1 at ui/async-await/issue-73137.rs:36:13: 36:22
        _19 = &((((*_63) as variant#4).0: Foo).1: &u32); // scope 1 at ui/async-await/issue-73137.rs:36:13: 36:22
        _18 = nop::<&&u32>(move _19) -> [return: bb10, unwind: bb22]; // scope 1 at ui/async-await/issue-73137.rs:36:9: 36:23
                                         // mir::Constant
                                         // + span: ui/async-await/issue-73137.rs:36:9: 36:12
                                         // + literal: Const { ty: fn(&&u32) {nop::<&&u32>}, val: Value(<ZST>) }
    }

    bb10: {
        _51 = const _;                   // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:88:16: 88:22
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:88:16: 88:22
                                         // + literal: Const { ty: &usize, val: Unevaluated(main::{closure#0}, [<resume_ty>, <yield_ty>, <return_ty>, <witness>, <upvars>], Some(promoted[0])) }
        _21 = _51;                       // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:88:16: 88:22
        _64 = deref_copy (_1.0: &mut [async block@ui/async-await/issue-73137.rs:28:28: 40:6]); // scope 5 at ui/async-await/issue-73137.rs:37:57: 37:65
        _24 = ((((*_64) as variant#4).0: Foo).1: &u32); // scope 5 at ui/async-await/issue-73137.rs:37:57: 37:65
        _23 = transmute::<&u32, usize>(move _24) -> [return: bb11, unwind: bb22]; // scope 5 at ui/async-await/issue-73137.rs:37:37: 37:66
                                         // mir::Constant
                                         // + span: ui/async-await/issue-73137.rs:37:37: 37:56
                                         // + literal: Const { ty: unsafe extern "rust-intrinsic" fn(&u32) -> usize {transmute::<&u32, usize>}, val: Value(<ZST>) }
    }

    bb11: {
        _22 = &_23;                      // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:88:24: 88:31
        _20 = (move _21, move _22);      // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:88:15: 88:32
        _25 = (_20.0: &usize);           // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:89:14: 89:22
        _26 = (_20.1: &usize);           // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:89:24: 89:33
        _28 = (*_25);                    // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:90:20: 90:29
        _29 = (*_26);                    // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:90:33: 90:43
        _27 = Eq(move _28, move _29);    // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:90:20: 90:43
        switchInt(move _27) -> [0: bb13, otherwise: bb12]; // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:90:20: 90:43
    }

    bb12: {
        _30 = core::panicking::AssertKind::Ne; // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:91:32: 91:65
        _32 = move _30;                  // scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:95:54: 95:58
        _34 = _25;                       // scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:95:60: 95:70
        _33 = _34;                       // scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:95:60: 95:70
        _36 = _26;                       // scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:95:72: 95:83
        _35 = _36;                       // scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:95:72: 95:83
        _37 = Option::<Arguments<'_>>::None; // scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:95:85: 95:113
        _31 = core::panicking::assert_failed::<usize, usize>(move _32, move _33, move _35, move _37) -> bb22; // scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:95:21: 95:114
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:95:21: 95:53
                                         // + literal: Const { ty: for<'a, 'b, 'c> fn(core::panicking::AssertKind, &'a usize, &'b usize, Option<Arguments<'c>>) -> ! {core::panicking::assert_failed::<usize, usize>}, val: Value(<ZST>) }
    }

    bb13: {
        _40 = [generator@ui/async-await/issue-73137.rs:39:9: 39:17 (#0)]; // scope 1 at ui/async-await/issue-73137.rs:39:9: 39:17
                                         // generator
                                         // + def_id: DefId(0:21 ~ issue_73137[ce1a]::main::{closure#0}::{closure#1})
                                         // + substs: [
                                         //     std::future::ResumeTy,
                                         //     (),
                                         //     (),
                                         //     {},
                                         //     (),
                                         // ]
                                         // + movability: Static
        _39 = identity_future::<(), [async block@ui/async-await/issue-73137.rs:39:9: 39:17]>(move _40) -> [return: bb14, unwind: bb22]; // scope 1 at ui/async-await/issue-73137.rs:39:9: 39:17
                                         // mir::Constant
                                         // + span: ui/async-await/issue-73137.rs:39:9: 39:17
                                         // + literal: Const { ty: fn([async block@ui/async-await/issue-73137.rs:39:9: 39:17]) -> [async block@ui/async-await/issue-73137.rs:39:9: 39:17] {identity_future::<(), [async block@ui/async-await/issue-73137.rs:39:9: 39:17]>}, val: Value(<ZST>) }
    }

    bb14: {
        _38 = <[async block@ui/async-await/issue-73137.rs:39:9: 39:17] as IntoFuture>::into_future(move _39) -> [return: bb15, unwind: bb22]; // scope 1 at ui/async-await/issue-73137.rs:39:17: 39:23
                                         // mir::Constant
                                         // + span: ui/async-await/issue-73137.rs:39:17: 39:23
                                         // + literal: Const { ty: fn([async block@ui/async-await/issue-73137.rs:39:9: 39:17]) -> <[async block@ui/async-await/issue-73137.rs:39:9: 39:17] as IntoFuture>::IntoFuture {<[async block@ui/async-await/issue-73137.rs:39:9: 39:17] as IntoFuture>::into_future}, val: Value(<ZST>) }
    }

    bb15: {
        _65 = deref_copy (_1.0: &mut [async block@ui/async-await/issue-73137.rs:28:28: 40:6]); // scope 1 at ui/async-await/issue-73137.rs:39:17: 39:23
        (((*_65) as variant#4).1: [async block@ui/async-await/issue-73137.rs:39:9: 39:17]) = move _38; // scope 1 at ui/async-await/issue-73137.rs:39:17: 39:23
        goto -> bb16;                    // scope 8 at ui/async-await/issue-73137.rs:39:17: 39:23
    }

    bb16: {
        _66 = deref_copy (_1.0: &mut [async block@ui/async-await/issue-73137.rs:28:28: 40:6]); // scope 9 at ui/async-await/issue-73137.rs:39:17: 39:23
        _44 = &mut (((*_66) as variant#4).1: [async block@ui/async-await/issue-73137.rs:39:9: 39:17]); // scope 9 at ui/async-await/issue-73137.rs:39:17: 39:23
        _43 = &mut (*_44);               // scope 9 at ui/async-await/issue-73137.rs:39:17: 39:23
        _42 = Pin::<&mut [async block@ui/async-await/issue-73137.rs:39:9: 39:17]>::new_unchecked(move _43) -> [return: bb17, unwind: bb22]; // scope 9 at ui/async-await/issue-73137.rs:39:17: 39:23
                                         // mir::Constant
                                         // + span: ui/async-await/issue-73137.rs:39:17: 39:23
                                         // + literal: Const { ty: unsafe fn(&mut [async block@ui/async-await/issue-73137.rs:39:9: 39:17]) -> Pin<&mut [async block@ui/async-await/issue-73137.rs:39:9: 39:17]> {Pin::<&mut [async block@ui/async-await/issue-73137.rs:39:9: 39:17]>::new_unchecked}, val: Value(<ZST>) }
    }

    bb17: {
        _47 = _54;                       // scope 9 at ui/async-await/issue-73137.rs:39:17: 39:23
        _46 = move _47;                  // scope 9 at ui/async-await/issue-73137.rs:39:9: 39:23
        _45 = &mut (*_46);               // scope 9 at ui/async-await/issue-73137.rs:39:9: 39:23
        _41 = <[async block@ui/async-await/issue-73137.rs:39:9: 39:17] as Future>::poll(move _42, move _45) -> [return: bb18, unwind: bb22]; // scope 9 at ui/async-await/issue-73137.rs:39:17: 39:23
                                         // mir::Constant
                                         // + span: ui/async-await/issue-73137.rs:39:17: 39:23
                                         // + literal: Const { ty: for<'a, 'b, 'c> fn(Pin<&'a mut [async block@ui/async-await/issue-73137.rs:39:9: 39:17]>, &'b mut Context<'c>) -> Poll<<[async block@ui/async-await/issue-73137.rs:39:9: 39:17] as Future>::Output> {<[async block@ui/async-await/issue-73137.rs:39:9: 39:17] as Future>::poll}, val: Value(<ZST>) }
    }

    bb18: {
        _48 = discriminant(_41);         // scope 8 at ui/async-await/issue-73137.rs:39:17: 39:23
        switchInt(move _48) -> [0: bb21, 1: bb19, otherwise: bb20]; // scope 8 at ui/async-await/issue-73137.rs:39:17: 39:23
    }

    bb19: {
        _0 = Poll::<()>::Pending;        // scope 8 at ui/async-await/issue-73137.rs:39:17: 39:23
        _67 = deref_copy (_1.0: &mut [async block@ui/async-await/issue-73137.rs:28:28: 40:6]); // scope 8 at ui/async-await/issue-73137.rs:39:17: 39:23
        discriminant((*_67)) = 4;        // scope 8 at ui/async-await/issue-73137.rs:39:17: 39:23
        return;                          // scope 8 at ui/async-await/issue-73137.rs:39:17: 39:23
    }

    bb20: {
        unreachable;                     // scope 8 at ui/async-await/issue-73137.rs:39:17: 39:23
    }

    bb21: {
        _49 = ((_41 as Ready).0: ());    // scope 8 at ui/async-await/issue-73137.rs:39:9: 39:23
        _53 = const ();                  // scope 0 at ui/async-await/issue-73137.rs:28:34: 40:6
        _0 = Poll::<()>::Ready(move _53); // scope 0 at ui/async-await/issue-73137.rs:40:6: 40:6
        _68 = deref_copy (_1.0: &mut [async block@ui/async-await/issue-73137.rs:28:28: 40:6]); // scope 0 at ui/async-await/issue-73137.rs:40:6: 40:6
        discriminant((*_68)) = 1;        // scope 0 at ui/async-await/issue-73137.rs:40:6: 40:6
        return;                          // scope 0 at ui/async-await/issue-73137.rs:40:6: 40:6
    }

    bb22 (cleanup): {
        _69 = deref_copy (_1.0: &mut [async block@ui/async-await/issue-73137.rs:28:28: 40:6]); // scope 0 at ui/async-await/issue-73137.rs:28:28: 40:6
        discriminant((*_69)) = 2;        // scope 0 at ui/async-await/issue-73137.rs:28:28: 40:6
        resume;                          // scope 0 at ui/async-await/issue-73137.rs:28:28: 40:6
    }

    bb23: {
        _17 = move _2;                   // scope 0 at ui/async-await/issue-73137.rs:28:28: 40:6
        _54 = move _17;                  // scope 2 at ui/async-await/issue-73137.rs:31:27: 31:33
        goto -> bb4;                     // scope 2 at ui/async-await/issue-73137.rs:31:27: 31:33
    }

    bb24: {
        _50 = move _2;                   // scope 0 at ui/async-await/issue-73137.rs:28:28: 40:6
        _54 = move _50;                  // scope 8 at ui/async-await/issue-73137.rs:39:17: 39:23
        goto -> bb16;                    // scope 8 at ui/async-await/issue-73137.rs:39:17: 39:23
    }

    bb25: {
        assert(const false, "`async fn` resumed after panicking") -> bb25; // scope 0 at ui/async-await/issue-73137.rs:28:28: 40:6
    }

    bb26: {
        assert(const false, "`async fn` resumed after completion") -> bb26; // scope 0 at ui/async-await/issue-73137.rs:28:28: 40:6
    }

    bb27: {
        unreachable;                     // scope 0 at ui/async-await/issue-73137.rs:28:28: 40:6
    }
}

promoted[0] in main::{closure#0}: &usize = {
    let mut _0: &usize;                  // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:88:16: 88:22
    let mut _1: usize;                   // in scope 0 at ui/async-await/issue-73137.rs:37:20: 37:26

    bb0: {
        _1 = const 0_usize;              // scope 0 at ui/async-await/issue-73137.rs:37:20: 37:26
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:88:16: 88:22
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:88:16: 88:22
    }
}

promoted[1] in main::{closure#0}: &u32 = {
    let mut _0: &u32;                    // return place in scope 0 at ui/async-await/issue-73137.rs:30:16: 30:19
    let mut _1: u32;                     // in scope 0 at ui/async-await/issue-73137.rs:30:17: 30:19

    bb0: {
        _1 = const 42_u32;               // scope 0 at ui/async-await/issue-73137.rs:30:17: 30:19
        _0 = &_1;                        // scope 0 at ui/async-await/issue-73137.rs:30:16: 30:19
        return;                          // scope 0 at ui/async-await/issue-73137.rs:30:16: 30:19
    }
}

fn main::{closure#0}::{closure#0}(_1: Pin<&mut [async block@ui/async-await/issue-73137.rs:31:16: 31:27]>, _2: &mut Context<'_>) -> Poll<usize> {
    debug _task_context => _4;           // in scope 0 at ui/async-await/issue-73137.rs:31:16: 31:27
    let mut _0: std::task::Poll<usize>;  // return place in scope 0 at ui/async-await/issue-73137.rs:31:16: 31:27
    let mut _3: usize;                   // in scope 0 at ui/async-await/issue-73137.rs:31:16: 31:27
    let mut _4: &mut std::task::Context<'_>; // in scope 0 at ui/async-await/issue-73137.rs:31:16: 31:27
    let mut _5: u32;                     // in scope 0 at ui/async-await/issue-73137.rs:31:16: 31:27
    let mut _6: &mut [async block@ui/async-await/issue-73137.rs:31:16: 31:27]; // in scope 0 at ui/async-await/issue-73137.rs:31:16: 31:27
    let mut _7: &mut [async block@ui/async-await/issue-73137.rs:31:16: 31:27]; // in scope 0 at ui/async-await/issue-73137.rs:31:16: 31:27

    bb0: {
        _6 = deref_copy (_1.0: &mut [async block@ui/async-await/issue-73137.rs:31:16: 31:27]); // scope 0 at ui/async-await/issue-73137.rs:31:16: 31:27
        _5 = discriminant((*_6));        // scope 0 at ui/async-await/issue-73137.rs:31:16: 31:27
        switchInt(move _5) -> [0: bb1, 1: bb2, otherwise: bb3]; // scope 0 at ui/async-await/issue-73137.rs:31:16: 31:27
    }

    bb1: {
        _4 = move _2;                    // scope 0 at ui/async-await/issue-73137.rs:31:16: 31:27
        _3 = const 0_usize;              // scope 0 at ui/async-await/issue-73137.rs:31:24: 31:25
        _0 = Poll::<usize>::Ready(move _3); // scope 0 at ui/async-await/issue-73137.rs:31:27: 31:27
        _7 = deref_copy (_1.0: &mut [async block@ui/async-await/issue-73137.rs:31:16: 31:27]); // scope 0 at ui/async-await/issue-73137.rs:31:27: 31:27
        discriminant((*_7)) = 1;         // scope 0 at ui/async-await/issue-73137.rs:31:27: 31:27
        return;                          // scope 0 at ui/async-await/issue-73137.rs:31:27: 31:27
    }

    bb2: {
        assert(const false, "`async fn` resumed after completion") -> bb2; // scope 0 at ui/async-await/issue-73137.rs:31:16: 31:27
    }

    bb3: {
        unreachable;                     // scope 0 at ui/async-await/issue-73137.rs:31:16: 31:27
    }
}

fn main::{closure#0}::{closure#1}(_1: Pin<&mut [async block@ui/async-await/issue-73137.rs:39:9: 39:17]>, _2: &mut Context<'_>) -> Poll<()> {
    debug _task_context => _4;           // in scope 0 at ui/async-await/issue-73137.rs:39:9: 39:17
    let mut _0: std::task::Poll<()>;     // return place in scope 0 at ui/async-await/issue-73137.rs:39:9: 39:17
    let mut _3: ();                      // in scope 0 at ui/async-await/issue-73137.rs:39:9: 39:17
    let mut _4: &mut std::task::Context<'_>; // in scope 0 at ui/async-await/issue-73137.rs:39:9: 39:17
    let mut _5: u32;                     // in scope 0 at ui/async-await/issue-73137.rs:39:9: 39:17
    let mut _6: &mut [async block@ui/async-await/issue-73137.rs:39:9: 39:17]; // in scope 0 at ui/async-await/issue-73137.rs:39:9: 39:17
    let mut _7: &mut [async block@ui/async-await/issue-73137.rs:39:9: 39:17]; // in scope 0 at ui/async-await/issue-73137.rs:39:9: 39:17

    bb0: {
        _6 = deref_copy (_1.0: &mut [async block@ui/async-await/issue-73137.rs:39:9: 39:17]); // scope 0 at ui/async-await/issue-73137.rs:39:9: 39:17
        _5 = discriminant((*_6));        // scope 0 at ui/async-await/issue-73137.rs:39:9: 39:17
        switchInt(move _5) -> [0: bb1, 1: bb2, otherwise: bb3]; // scope 0 at ui/async-await/issue-73137.rs:39:9: 39:17
    }

    bb1: {
        _4 = move _2;                    // scope 0 at ui/async-await/issue-73137.rs:39:9: 39:17
        _3 = const ();                   // scope 0 at ui/async-await/issue-73137.rs:39:15: 39:17
        _0 = Poll::<()>::Ready(move _3); // scope 0 at ui/async-await/issue-73137.rs:39:17: 39:17
        _7 = deref_copy (_1.0: &mut [async block@ui/async-await/issue-73137.rs:39:9: 39:17]); // scope 0 at ui/async-await/issue-73137.rs:39:17: 39:17
        discriminant((*_7)) = 1;         // scope 0 at ui/async-await/issue-73137.rs:39:17: 39:17
        return;                          // scope 0 at ui/async-await/issue-73137.rs:39:17: 39:17
    }

    bb2: {
        assert(const false, "`async fn` resumed after completion") -> bb2; // scope 0 at ui/async-await/issue-73137.rs:39:9: 39:17
    }

    bb3: {
        unreachable;                     // scope 0 at ui/async-await/issue-73137.rs:39:9: 39:17
    }
}
