// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
fn <impl at ui/match/guards.rs:5:16: 5:21>::clone(_1: &Pair) -> Pair {
    debug self => _1;                    // in scope 0 at ui/match/guards.rs:5:16: 5:21
    let mut _0: Pair;                    // return place in scope 0 at ui/match/guards.rs:5:16: 5:21
    scope 1 {
    }

    bb0: {
        _0 = (*_1);                      // scope 1 at ui/match/guards.rs:5:16: 5:21
        return;                          // scope 0 at ui/match/guards.rs:5:21: 5:21
    }
}

fn main() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/match/guards.rs:8:15: 8:15
    let _1: isize;                       // in scope 0 at ui/match/guards.rs:9:9: 9:10
    let _2: i32;                         // in scope 0 at ui/match/guards.rs:10:20: 10:21
    let _3: &i32;                        // in scope 0 at ui/match/guards.rs:10:20: 10:21
    let _4: i32;                         // in scope 0 at ui/match/guards.rs:10:40: 10:41
    let _5: &i32;                        // in scope 0 at ui/match/guards.rs:10:40: 10:41
    let mut _6: (&isize, &isize);        // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _7: &isize;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let mut _8: &isize;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _11: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    let mut _12: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
    let mut _13: isize;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
    let mut _14: isize;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
    let _16: !;                          // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
    let mut _17: core::panicking::AssertKind; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
    let mut _18: &isize;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let _19: &isize;                     // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let mut _20: &isize;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let _21: &isize;                     // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let mut _22: std::option::Option<std::fmt::Arguments<'_>>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
    let mut _30: isize;                  // in scope 0 at ui/match/guards.rs:16:32: 16:33
    let mut _31: isize;                  // in scope 0 at ui/match/guards.rs:16:43: 16:44
    let mut _34: (&isize, &isize);       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _35: &isize;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let mut _36: &isize;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _39: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    let mut _40: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
    let mut _41: isize;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
    let mut _42: isize;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
    let _44: !;                          // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
    let mut _45: core::panicking::AssertKind; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
    let mut _46: &isize;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let _47: &isize;                     // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let mut _48: &isize;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let _49: &isize;                     // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let mut _50: std::option::Option<std::fmt::Arguments<'_>>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
    let mut _56: &i32;                   // in scope 0 at ui/match/guards.rs:10:40: 10:41
    let mut _57: &i32;                   // in scope 0 at ui/match/guards.rs:10:20: 10:21
    scope 1 {
        debug a => _1;                   // in scope 1 at ui/match/guards.rs:9:9: 9:10
        let _9: &isize;                  // in scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        let _10: &isize;                 // in scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        let _23: isize;                  // in scope 1 at ui/match/guards.rs:13:9: 13:10
        let _24: Pair;                   // in scope 1 at ui/match/guards.rs:15:11: 15:12
        let _25: &Pair;                  // in scope 1 at ui/match/guards.rs:15:11: 15:12
        let _26: isize;                  // in scope 1 at ui/match/guards.rs:16:20: 16:21
        let _27: &isize;                 // in scope 1 at ui/match/guards.rs:16:20: 16:21
        let _28: isize;                  // in scope 1 at ui/match/guards.rs:16:26: 16:27
        let _29: &isize;                 // in scope 1 at ui/match/guards.rs:16:26: 16:27
        let _32: isize;                  // in scope 1 at ui/match/guards.rs:17:20: 17:22
        let _33: isize;                  // in scope 1 at ui/match/guards.rs:17:27: 17:29
        let mut _52: &Pair;              // in scope 1 at ui/match/guards.rs:16:26: 16:27
        let mut _53: &Pair;              // in scope 1 at ui/match/guards.rs:16:20: 16:21
        let mut _54: &Pair;              // in scope 1 at ui/match/guards.rs:15:11: 15:12
        let mut _55: &isize;             // in scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        scope 4 {
            debug left_val => _9;        // in scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
            debug right_val => _10;      // in scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
            let _15: core::panicking::AssertKind; // in scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
            scope 5 {
                debug kind => _15;       // in scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
            }
        }
        scope 6 {
            debug b => _23;              // in scope 6 at ui/match/guards.rs:13:9: 13:10
            let _37: &isize;             // in scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
            let _38: &isize;             // in scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
            let mut _51: &isize;         // in scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
            scope 10 {
                debug left_val => _37;   // in scope 10 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
                debug right_val => _38;  // in scope 10 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
                let _43: core::panicking::AssertKind; // in scope 10 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                scope 11 {
                    debug kind => _43;   // in scope 11 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                }
            }
        }
        scope 7 {
            debug x => _24;              // in scope 7 at ui/match/guards.rs:15:11: 15:12
            debug x => _25;              // in scope 7 at ui/match/guards.rs:15:11: 15:12
        }
        scope 8 {
            debug x => _26;              // in scope 8 at ui/match/guards.rs:16:20: 16:21
            debug x => _27;              // in scope 8 at ui/match/guards.rs:16:20: 16:21
            debug y => _28;              // in scope 8 at ui/match/guards.rs:16:26: 16:27
            debug y => _29;              // in scope 8 at ui/match/guards.rs:16:26: 16:27
        }
        scope 9 {
            debug _x => _32;             // in scope 9 at ui/match/guards.rs:17:20: 17:22
            debug _y => _33;             // in scope 9 at ui/match/guards.rs:17:27: 17:29
        }
    }
    scope 2 {
        debug x => _2;                   // in scope 2 at ui/match/guards.rs:10:20: 10:21
        debug x => _3;                   // in scope 2 at ui/match/guards.rs:10:20: 10:21
    }
    scope 3 {
        debug x => _4;                   // in scope 3 at ui/match/guards.rs:10:40: 10:41
        debug x => _5;                   // in scope 3 at ui/match/guards.rs:10:40: 10:41
    }

    bb0: {
        _57 = const _;                   // scope 0 at ui/match/guards.rs:10:20: 10:21
                                         // mir::Constant
                                         // + span: ui/match/guards.rs:10:20: 10:21
                                         // + literal: Const { ty: &i32, val: Unevaluated(main, [], Some(promoted[6])) }
        _3 = _57;                        // scope 0 at ui/match/guards.rs:10:20: 10:21
        _56 = const _;                   // scope 0 at ui/match/guards.rs:10:40: 10:41
                                         // mir::Constant
                                         // + span: ui/match/guards.rs:10:40: 10:41
                                         // + literal: Const { ty: &i32, val: Unevaluated(main, [], Some(promoted[5])) }
        _5 = _56;                        // scope 0 at ui/match/guards.rs:10:40: 10:41
        _4 = const 10_i32;               // scope 0 at ui/match/guards.rs:10:40: 10:41
        _1 = const 2_isize;              // scope 3 at ui/match/guards.rs:10:57: 10:58
        _7 = &_1;                        // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _55 = const _;                   // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // + literal: Const { ty: &isize, val: Unevaluated(main, [], Some(promoted[4])) }
        _8 = _55;                        // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _6 = (move _7, move _8);         // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _9 = (_6.0: &isize);             // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _10 = (_6.1: &isize);            // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _13 = (*_9);                     // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
        _14 = const 2_isize;             // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
        _12 = Eq(move _13, move _14);    // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
        _11 = Not(move _12);             // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
        switchInt(move _11) -> [0: bb2, otherwise: bb1]; // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    }

    bb1: {
        _15 = const core::panicking::AssertKind::Eq; // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _17 = const core::panicking::AssertKind::Eq; // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _19 = _9;                        // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _18 = _19;                       // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _21 = _10;                       // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _20 = _21;                       // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _22 = Option::<Arguments<'_>>::None; // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
        _16 = core::panicking::assert_failed::<isize, isize>(move _17, move _18, move _20, move _22); // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:53
                                         // + literal: Const { ty: for<'a, 'b, 'c> fn(core::panicking::AssertKind, &'a isize, &'b isize, Option<Arguments<'c>>) -> ! {core::panicking::assert_failed::<isize, isize>}, val: Value(<ZST>) }
    }

    bb2: {
        _54 = const _;                   // scope 1 at ui/match/guards.rs:15:11: 15:12
                                         // mir::Constant
                                         // + span: ui/match/guards.rs:15:11: 15:12
                                         // + literal: Const { ty: &Pair, val: Unevaluated(main, [], Some(promoted[3])) }
        _25 = _54;                       // scope 1 at ui/match/guards.rs:15:11: 15:12
        _53 = const _;                   // scope 1 at ui/match/guards.rs:16:20: 16:21
                                         // mir::Constant
                                         // + span: ui/match/guards.rs:16:20: 16:21
                                         // + literal: Const { ty: &Pair, val: Unevaluated(main, [], Some(promoted[2])) }
        _27 = &((*_53).0: isize);        // scope 1 at ui/match/guards.rs:16:20: 16:21
        _52 = const _;                   // scope 1 at ui/match/guards.rs:16:26: 16:27
                                         // mir::Constant
                                         // + span: ui/match/guards.rs:16:26: 16:27
                                         // + literal: Const { ty: &Pair, val: Unevaluated(main, [], Some(promoted[1])) }
        _29 = &((*_52).1: isize);        // scope 1 at ui/match/guards.rs:16:26: 16:27
        _30 = (*_27);                    // scope 1 at ui/match/guards.rs:16:32: 16:33
        switchInt(move _30) -> [10: bb3, otherwise: bb5]; // scope 1 at ui/match/guards.rs:16:32: 16:39
    }

    bb3: {
        _31 = (*_29);                    // scope 1 at ui/match/guards.rs:16:43: 16:44
        switchInt(move _31) -> [20: bb4, otherwise: bb5]; // scope 1 at ui/match/guards.rs:16:43: 16:50
    }

    bb4: {
        _26 = const 10_isize;            // scope 1 at ui/match/guards.rs:16:20: 16:21
        _28 = const 20_isize;            // scope 1 at ui/match/guards.rs:16:26: 16:27
        _23 = const 2_isize;             // scope 8 at ui/match/guards.rs:16:56: 16:57
        goto -> bb6;                     // scope 1 at ui/match/guards.rs:16:58: 16:59
    }

    bb5: {
        _32 = const 10_isize;            // scope 1 at ui/match/guards.rs:17:20: 17:22
        _33 = const 20_isize;            // scope 1 at ui/match/guards.rs:17:27: 17:29
        _23 = const 3_isize;             // scope 9 at ui/match/guards.rs:17:36: 17:37
        goto -> bb6;                     // scope 1 at ui/match/guards.rs:17:38: 17:39
    }

    bb6: {
        _35 = &_23;                      // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _51 = const _;                   // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // + literal: Const { ty: &isize, val: Unevaluated(main, [], Some(promoted[0])) }
        _36 = _51;                       // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _34 = (move _35, move _36);      // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _37 = (_34.0: &isize);           // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _38 = (_34.1: &isize);           // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _41 = (*_37);                    // scope 10 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
        _42 = const 2_isize;             // scope 10 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
        _40 = Eq(move _41, move _42);    // scope 10 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
        _39 = Not(move _40);             // scope 10 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
        switchInt(move _39) -> [0: bb8, otherwise: bb7]; // scope 10 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    }

    bb7: {
        _43 = const core::panicking::AssertKind::Eq; // scope 10 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _45 = const core::panicking::AssertKind::Eq; // scope 11 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _47 = _37;                       // scope 11 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _46 = _47;                       // scope 11 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _49 = _38;                       // scope 11 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _48 = _49;                       // scope 11 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _50 = Option::<Arguments<'_>>::None; // scope 11 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
        _44 = core::panicking::assert_failed::<isize, isize>(move _45, move _46, move _48, move _50); // scope 11 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:53
                                         // + literal: Const { ty: for<'a, 'b, 'c> fn(core::panicking::AssertKind, &'a isize, &'b isize, Option<Arguments<'c>>) -> ! {core::panicking::assert_failed::<isize, isize>}, val: Value(<ZST>) }
    }

    bb8: {
        return;                          // scope 0 at ui/match/guards.rs:20:2: 20:2
    }
}

promoted[0] in main: &isize = {
    let mut _0: &isize;                  // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _1: isize;                   // in scope 0 at ui/match/guards.rs:19:19: 19:20

    bb0: {
        _1 = const 2_isize;              // scope 0 at ui/match/guards.rs:19:19: 19:20
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    }
}

promoted[1] in main: &Pair = {
    let mut _0: &Pair;                   // return place in scope 0 at ui/match/guards.rs:16:26: 16:27
    let mut _1: Pair;                    // in scope 0 at ui/match/guards.rs:14:15: 14:36

    bb0: {
        _1 = Pair { x: const 10_isize, y: const 20_isize }; // scope 0 at ui/match/guards.rs:14:15: 14:36
        _0 = &_1;                        // scope 0 at ui/match/guards.rs:16:26: 16:27
        return;                          // scope 0 at ui/match/guards.rs:16:26: 16:27
    }
}

promoted[2] in main: &Pair = {
    let mut _0: &Pair;                   // return place in scope 0 at ui/match/guards.rs:16:20: 16:21
    let mut _1: Pair;                    // in scope 0 at ui/match/guards.rs:14:15: 14:36

    bb0: {
        _1 = Pair { x: const 10_isize, y: const 20_isize }; // scope 0 at ui/match/guards.rs:14:15: 14:36
        _0 = &_1;                        // scope 0 at ui/match/guards.rs:16:20: 16:21
        return;                          // scope 0 at ui/match/guards.rs:16:20: 16:21
    }
}

promoted[3] in main: &Pair = {
    let mut _0: &Pair;                   // return place in scope 0 at ui/match/guards.rs:15:11: 15:12
    let mut _1: Pair;                    // in scope 0 at ui/match/guards.rs:14:15: 14:36

    bb0: {
        _1 = Pair { x: const 10_isize, y: const 20_isize }; // scope 0 at ui/match/guards.rs:14:15: 14:36
        _0 = &_1;                        // scope 0 at ui/match/guards.rs:15:11: 15:12
        return;                          // scope 0 at ui/match/guards.rs:15:11: 15:12
    }
}

promoted[4] in main: &isize = {
    let mut _0: &isize;                  // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _1: isize;                   // in scope 0 at ui/match/guards.rs:11:19: 11:20

    bb0: {
        _1 = const 2_isize;              // scope 0 at ui/match/guards.rs:11:19: 11:20
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    }
}

promoted[5] in main: &i32 = {
    let mut _0: &i32;                    // return place in scope 0 at ui/match/guards.rs:10:40: 10:41
    let mut _1: i32;                     // in scope 0 at ui/match/guards.rs:10:15: 10:17

    bb0: {
        _1 = const 10_i32;               // scope 0 at ui/match/guards.rs:10:15: 10:17
        _0 = &_1;                        // scope 0 at ui/match/guards.rs:10:40: 10:41
        return;                          // scope 0 at ui/match/guards.rs:10:40: 10:41
    }
}

promoted[6] in main: &i32 = {
    let mut _0: &i32;                    // return place in scope 0 at ui/match/guards.rs:10:20: 10:21
    let mut _1: i32;                     // in scope 0 at ui/match/guards.rs:10:15: 10:17

    bb0: {
        _1 = const 10_i32;               // scope 0 at ui/match/guards.rs:10:15: 10:17
        _0 = &_1;                        // scope 0 at ui/match/guards.rs:10:20: 10:21
        return;                          // scope 0 at ui/match/guards.rs:10:20: 10:21
    }
}
