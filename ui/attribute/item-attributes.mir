// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
static test_single_attr_outer::X: isize = {
    let mut _0: isize;                   // return place in scope 0 at ui/attribute/item-attributes.rs:20:19: 20:24

    bb0: {
        _0 = const 10_isize;             // scope 0 at ui/attribute/item-attributes.rs:20:27: 20:29
        return;                          // scope 0 at ui/attribute/item-attributes.rs:20:5: 20:30
    }
}

fn test_single_attr_outer::f() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/attribute/item-attributes.rs:23:16: 23:16

    bb0: {
        return;                          // scope 0 at ui/attribute/item-attributes.rs:23:18: 23:18
    }
}

static test_multi_attr_outer::X: isize = {
    let mut _0: isize;                   // return place in scope 0 at ui/attribute/item-attributes.rs:37:19: 37:24

    bb0: {
        _0 = const 10_isize;             // scope 0 at ui/attribute/item-attributes.rs:37:27: 37:29
        return;                          // scope 0 at ui/attribute/item-attributes.rs:37:5: 37:30
    }
}

fn test_multi_attr_outer::f() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/attribute/item-attributes.rs:41:16: 41:16

    bb0: {
        return;                          // scope 0 at ui/attribute/item-attributes.rs:41:18: 41:18
    }
}

fn test_stmt_single_attr_outer::f() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/attribute/item-attributes.rs:61:16: 61:16

    bb0: {
        return;                          // scope 0 at ui/attribute/item-attributes.rs:75:6: 75:6
    }
}

static test_stmt_single_attr_outer::f::X: isize = {
    let mut _0: isize;                   // return place in scope 0 at ui/attribute/item-attributes.rs:63:19: 63:24

    bb0: {
        _0 = const 10_isize;             // scope 0 at ui/attribute/item-attributes.rs:63:27: 63:29
        return;                          // scope 0 at ui/attribute/item-attributes.rs:63:9: 63:30
    }
}

fn test_stmt_single_attr_outer::f::f() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/attribute/item-attributes.rs:66:16: 66:16

    bb0: {
        return;                          // scope 0 at ui/attribute/item-attributes.rs:66:18: 66:18
    }
}

fn test_stmt_multi_attr_outer::f() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/attribute/item-attributes.rs:79:16: 79:16

    bb0: {
        return;                          // scope 0 at ui/attribute/item-attributes.rs:97:6: 97:6
    }
}

static test_stmt_multi_attr_outer::f::X: isize = {
    let mut _0: isize;                   // return place in scope 0 at ui/attribute/item-attributes.rs:82:19: 82:24

    bb0: {
        _0 = const 10_isize;             // scope 0 at ui/attribute/item-attributes.rs:82:27: 82:29
        return;                          // scope 0 at ui/attribute/item-attributes.rs:82:9: 82:30
    }
}

fn test_stmt_multi_attr_outer::f::f() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/attribute/item-attributes.rs:86:16: 86:16

    bb0: {
        return;                          // scope 0 at ui/attribute/item-attributes.rs:86:18: 86:18
    }
}

fn test_attr_inner_then_outer::m::f() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/attribute/item-attributes.rs:113:16: 113:16

    bb0: {
        return;                          // scope 0 at ui/attribute/item-attributes.rs:113:18: 113:18
    }
}

fn test_attr_inner_then_outer_multi::m::f() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/attribute/item-attributes.rs:125:16: 125:16

    bb0: {
        return;                          // scope 0 at ui/attribute/item-attributes.rs:125:18: 125:18
    }
}

fn test_distinguish_syntax_ext::f() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/attribute/item-attributes.rs:130:16: 130:16
    let _1: std::string::String;         // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:119:9: 119:12
    let _2: std::string::String;         // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:13: 118:16
    let mut _3: std::fmt::Arguments<'_>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
    let mut _4: &[&str];                 // in scope 0 at ui/attribute/item-attributes.rs:131:17: 131:25
    let mut _5: &[&str; 1];              // in scope 0 at ui/attribute/item-attributes.rs:131:17: 131:25
    let _6: &[&str; 1];                  // in scope 0 at ui/attribute/item-attributes.rs:131:17: 131:25
    let mut _7: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
    let mut _8: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
    let _9: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
    let _10: [core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
    let mut _11: core::fmt::ArgumentV1<'_>; // in scope 0 at ui/attribute/item-attributes.rs:131:27: 131:30
    let mut _12: &&str;                  // in scope 0 at ui/attribute/item-attributes.rs:131:27: 131:30
    let _13: &&str;                      // in scope 0 at ui/attribute/item-attributes.rs:131:27: 131:30
    let mut _14: &&str;                  // in scope 0 at ui/attribute/item-attributes.rs:131:27: 131:30
    let mut _15: &[&str; 1];             // in scope 0 at ui/attribute/item-attributes.rs:131:17: 131:25
    scope 1 {
        debug res => _2;                 // in scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:13: 118:16
    }

    bb0: {
        _15 = const _;                   // scope 0 at ui/attribute/item-attributes.rs:131:17: 131:25
                                         // mir::Constant
                                         // + span: ui/attribute/item-attributes.rs:131:17: 131:25
                                         // + literal: Const { ty: &[&str; 1], val: Unevaluated(test_distinguish_syntax_ext::f, [], Some(promoted[1])) }
        _6 = _15;                        // scope 0 at ui/attribute/item-attributes.rs:131:17: 131:25
        _5 = _6;                         // scope 0 at ui/attribute/item-attributes.rs:131:17: 131:25
        _4 = move _5 as &[&str] (Pointer(Unsize)); // scope 0 at ui/attribute/item-attributes.rs:131:17: 131:25
        _14 = const _;                   // scope 0 at ui/attribute/item-attributes.rs:131:27: 131:30
                                         // mir::Constant
                                         // + span: ui/attribute/item-attributes.rs:131:27: 131:30
                                         // + literal: Const { ty: &&str, val: Unevaluated(test_distinguish_syntax_ext::f, [], Some(promoted[0])) }
        _13 = _14;                       // scope 0 at ui/attribute/item-attributes.rs:131:27: 131:30
        _12 = _13;                       // scope 0 at ui/attribute/item-attributes.rs:131:27: 131:30
        _11 = core::fmt::ArgumentV1::<'_>::new_display::<&str>(move _12) -> bb1; // scope 0 at ui/attribute/item-attributes.rs:131:27: 131:30
                                         // mir::Constant
                                         // + span: ui/attribute/item-attributes.rs:131:27: 131:30
                                         // + user_ty: UserType(1)
                                         // + literal: Const { ty: for<'b> fn(&'b &str) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_display::<&str>}, val: Value(<ZST>) }
    }

    bb1: {
        _10 = [move _11];                // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
        _9 = &_10;                       // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
        _8 = _9;                         // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
        _7 = move _8 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
        _3 = Arguments::<'_>::new_v1(move _4, move _7) -> bb2; // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb2: {
        _2 = format(move _3) -> bb3;     // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:19: 118:80
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:19: 118:38
                                         // + literal: Const { ty: for<'a> fn(Arguments<'a>) -> String {format}, val: Value(<ZST>) }
    }

    bb3: {
        _1 = move _2;                    // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:119:9: 119:12
        drop(_1) -> bb4;                 // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:120:5: 120:6
    }

    bb4: {
        return;                          // scope 0 at ui/attribute/item-attributes.rs:134:6: 134:6
    }
}

promoted[0] in test_distinguish_syntax_ext::f: &&str = {
    let mut _0: &&str;                   // return place in scope 0 at ui/attribute/item-attributes.rs:131:27: 131:30
    let mut _1: &str;                    // in scope 0 at ui/attribute/item-attributes.rs:131:27: 131:30

    bb0: {
        _1 = const "s";                  // scope 0 at ui/attribute/item-attributes.rs:131:27: 131:30
                                         // mir::Constant
                                         // + span: ui/attribute/item-attributes.rs:131:27: 131:30
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at ui/attribute/item-attributes.rs:131:27: 131:30
        return;                          // scope 0 at ui/attribute/item-attributes.rs:131:27: 131:30
    }
}

promoted[1] in test_distinguish_syntax_ext::f: &[&str; 1] = {
    let mut _0: &[&str; 1];              // return place in scope 0 at ui/attribute/item-attributes.rs:131:17: 131:25
    let mut _1: [&str; 1];               // in scope 0 at ui/attribute/item-attributes.rs:131:17: 131:25

    bb0: {
        _1 = [const "test"];             // scope 0 at ui/attribute/item-attributes.rs:131:17: 131:25
                                         // mir::Constant
                                         // + span: ui/attribute/item-attributes.rs:131:17: 131:25
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at ui/attribute/item-attributes.rs:131:17: 131:25
        return;                          // scope 0 at ui/attribute/item-attributes.rs:131:17: 131:25
    }
}

fn g() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/attribute/item-attributes.rs:133:16: 133:16

    bb0: {
        return;                          // scope 0 at ui/attribute/item-attributes.rs:133:18: 133:18
    }
}

fn test_other_forms::f() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/attribute/item-attributes.rs:142:16: 142:16

    bb0: {
        return;                          // scope 0 at ui/attribute/item-attributes.rs:142:18: 142:18
    }
}

fn test_fn_inner() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/attribute/item-attributes.rs:170:20: 170:20

    bb0: {
        return;                          // scope 0 at ui/attribute/item-attributes.rs:172:2: 172:2
    }
}

fn main() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/attribute/item-attributes.rs:174:11: 174:11

    bb0: {
        return;                          // scope 0 at ui/attribute/item-attributes.rs:174:13: 174:13
    }
}
