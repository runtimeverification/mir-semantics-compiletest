// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
fn main() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/attribute/tool_attributes.rs:6:11: 6:11
    let _1: ();                          // in scope 0 at ui/attribute/tool_attributes.rs:8:5: 8:11

    bb0: {
        _1 = foo() -> bb1;               // scope 0 at ui/attribute/tool_attributes.rs:8:5: 8:11
                                         // mir::Constant
                                         // + span: ui/attribute/tool_attributes.rs:8:5: 8:8
                                         // + literal: Const { ty: fn() {foo}, val: Value(<ZST>) }
    }

    bb1: {
        return;                          // scope 0 at ui/attribute/tool_attributes.rs:9:2: 9:2
    }
}

fn foo() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/attribute/tool_attributes.rs:11:10: 11:10

    bb0: {
        return;                          // scope 0 at ui/attribute/tool_attributes.rs:13:2: 13:2
    }
}
