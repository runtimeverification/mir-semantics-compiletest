// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
fn boldly_go(_1: crew_of_enterprise_d, _2: String) -> () {
    debug _crew_member => _1;            // in scope 0 at ui/attribute/variant-attributes.rs:32:14: 32:26
    debug _where => _2;                  // in scope 0 at ui/attribute/variant-attributes.rs:32:50: 32:56
    let mut _0: ();                      // return place in scope 0 at ui/attribute/variant-attributes.rs:32:66: 32:66

    bb0: {
        drop(_2) -> bb1;                 // scope 0 at ui/attribute/variant-attributes.rs:32:68: 32:69
    }

    bb1: {
        return;                          // scope 0 at ui/attribute/variant-attributes.rs:32:69: 32:69
    }
}

fn main() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/attribute/variant-attributes.rs:34:11: 34:11
    let _1: ();                          // in scope 0 at ui/attribute/variant-attributes.rs:35:5: 36:58
    let mut _2: crew_of_enterprise_d;    // in scope 0 at ui/attribute/variant-attributes.rs:35:15: 35:41
    let mut _3: std::string::String;     // in scope 0 at ui/attribute/variant-attributes.rs:36:15: 36:57
    let mut _4: &str;                    // in scope 0 at ui/attribute/variant-attributes.rs:36:15: 36:57
    let _5: &str;                        // in scope 0 at ui/attribute/variant-attributes.rs:36:15: 36:45

    bb0: {
        _2 = const crew_of_enterprise_d::worf; // scope 0 at ui/attribute/variant-attributes.rs:35:15: 35:41
                                         // mir::Constant
                                         // + span: ui/attribute/variant-attributes.rs:35:15: 35:41
                                         // + literal: Const { ty: crew_of_enterprise_d, val: Value(Scalar(0x05)) }
        _5 = const "where no one has gone before"; // scope 0 at ui/attribute/variant-attributes.rs:36:15: 36:45
                                         // mir::Constant
                                         // + span: ui/attribute/variant-attributes.rs:36:15: 36:45
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _4 = _5;                         // scope 0 at ui/attribute/variant-attributes.rs:36:15: 36:57
        _3 = <str as ToString>::to_string(move _4) -> bb1; // scope 0 at ui/attribute/variant-attributes.rs:36:15: 36:57
                                         // mir::Constant
                                         // + span: ui/attribute/variant-attributes.rs:36:46: 36:55
                                         // + literal: Const { ty: for<'a> fn(&'a str) -> String {<str as ToString>::to_string}, val: Value(<ZST>) }
    }

    bb1: {
        _1 = boldly_go(move _2, move _3) -> bb2; // scope 0 at ui/attribute/variant-attributes.rs:35:5: 36:58
                                         // mir::Constant
                                         // + span: ui/attribute/variant-attributes.rs:35:5: 35:14
                                         // + literal: Const { ty: fn(crew_of_enterprise_d, String) {boldly_go}, val: Value(<ZST>) }
    }

    bb2: {
        return;                          // scope 0 at ui/attribute/variant-attributes.rs:37:2: 37:2
    }
}
