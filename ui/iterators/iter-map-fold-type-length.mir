// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
fn <impl at ui/iterators/iter-map-fold-type-length.rs:11:1: 11:29>::next(_1: &mut Iter<I>) -> Option<<I as Iterator>::Item> {
    debug self => _1;                    // in scope 0 at ui/iterators/iter-map-fold-type-length.rs:17:13: 17:22
    let mut _0: std::option::Option<<I as std::iter::Iterator>::Item>; // return place in scope 0 at ui/iterators/iter-map-fold-type-length.rs:17:27: 17:45
    let mut _2: &mut I;                  // in scope 0 at ui/iterators/iter-map-fold-type-length.rs:18:9: 18:22

    bb0: {
        _2 = &mut ((*_1).0: I);          // scope 0 at ui/iterators/iter-map-fold-type-length.rs:18:9: 18:22
        _0 = <I as Iterator>::next(move _2) -> bb1; // scope 0 at ui/iterators/iter-map-fold-type-length.rs:18:9: 18:22
                                         // mir::Constant
                                         // + span: ui/iterators/iter-map-fold-type-length.rs:18:16: 18:20
                                         // + literal: Const { ty: for<'a> fn(&'a mut I) -> Option<<I as Iterator>::Item> {<I as Iterator>::next}, val: Value(<ZST>) }
    }

    bb1: {
        return;                          // scope 0 at ui/iterators/iter-map-fold-type-length.rs:19:6: 19:6
    }
}

fn main() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/iterators/iter-map-fold-type-length.rs:22:11: 22:11
    let _1: usize;                       // in scope 0 at ui/iterators/iter-map-fold-type-length.rs:23:9: 23:10
    let mut _2: std::iter::Map<std::iter::Map<std::iter::Map<std::iter::Map<std::iter::Map<std::iter::Map<std::iter::Map<std::iter::Map<std::iter::Map<std::iter::Map<std::iter::Map<std::iter::Map<Iter<std::ops::Range<i32>>, [closure@ui/iterators/iter-map-fold-type-length.rs:24:14: 24:17]>, [closure@ui/iterators/iter-map-fold-type-length.rs:25:14: 25:17]>, [closure@ui/iterators/iter-map-fold-type-length.rs:26:14: 26:17]>, [closure@ui/iterators/iter-map-fold-type-length.rs:27:14: 27:17]>, [closure@ui/iterators/iter-map-fold-type-length.rs:28:14: 28:17]>, [closure@ui/iterators/iter-map-fold-type-length.rs:29:14: 29:17]>, [closure@ui/iterators/iter-map-fold-type-length.rs:30:14: 30:17]>, [closure@ui/iterators/iter-map-fold-type-length.rs:31:14: 31:17]>, [closure@ui/iterators/iter-map-fold-type-length.rs:32:14: 32:17]>, [closure@ui/iterators/iter-map-fold-type-length.rs:33:14: 33:17]>, [closure@ui/iterators/iter-map-fold-type-length.rs:34:14: 34:17]>, [closure@ui/iterators/iter-map-fold-type-length.rs:35:14: 35:17]>; // in scope 0 at ui/iterators/iter-map-fold-type-length.rs:23:13: 35:20
    let mut _3: std::iter::Map<std::iter::Map<std::iter::Map<std::iter::Map<std::iter::Map<std::iter::Map<std::iter::Map<std::iter::Map<std::iter::Map<std::iter::Map<std::iter::Map<Iter<std::ops::Range<i32>>, [closure@ui/iterators/iter-map-fold-type-length.rs:24:14: 24:17]>, [closure@ui/iterators/iter-map-fold-type-length.rs:25:14: 25:17]>, [closure@ui/iterators/iter-map-fold-type-length.rs:26:14: 26:17]>, [closure@ui/iterators/iter-map-fold-type-length.rs:27:14: 27:17]>, [closure@ui/iterators/iter-map-fold-type-length.rs:28:14: 28:17]>, [closure@ui/iterators/iter-map-fold-type-length.rs:29:14: 29:17]>, [closure@ui/iterators/iter-map-fold-type-length.rs:30:14: 30:17]>, [closure@ui/iterators/iter-map-fold-type-length.rs:31:14: 31:17]>, [closure@ui/iterators/iter-map-fold-type-length.rs:32:14: 32:17]>, [closure@ui/iterators/iter-map-fold-type-length.rs:33:14: 33:17]>, [closure@ui/iterators/iter-map-fold-type-length.rs:34:14: 34:17]>; // in scope 0 at ui/iterators/iter-map-fold-type-length.rs:23:13: 34:20
    let mut _4: std::iter::Map<std::iter::Map<std::iter::Map<std::iter::Map<std::iter::Map<std::iter::Map<std::iter::Map<std::iter::Map<std::iter::Map<std::iter::Map<Iter<std::ops::Range<i32>>, [closure@ui/iterators/iter-map-fold-type-length.rs:24:14: 24:17]>, [closure@ui/iterators/iter-map-fold-type-length.rs:25:14: 25:17]>, [closure@ui/iterators/iter-map-fold-type-length.rs:26:14: 26:17]>, [closure@ui/iterators/iter-map-fold-type-length.rs:27:14: 27:17]>, [closure@ui/iterators/iter-map-fold-type-length.rs:28:14: 28:17]>, [closure@ui/iterators/iter-map-fold-type-length.rs:29:14: 29:17]>, [closure@ui/iterators/iter-map-fold-type-length.rs:30:14: 30:17]>, [closure@ui/iterators/iter-map-fold-type-length.rs:31:14: 31:17]>, [closure@ui/iterators/iter-map-fold-type-length.rs:32:14: 32:17]>, [closure@ui/iterators/iter-map-fold-type-length.rs:33:14: 33:17]>; // in scope 0 at ui/iterators/iter-map-fold-type-length.rs:23:13: 33:20
    let mut _5: std::iter::Map<std::iter::Map<std::iter::Map<std::iter::Map<std::iter::Map<std::iter::Map<std::iter::Map<std::iter::Map<std::iter::Map<Iter<std::ops::Range<i32>>, [closure@ui/iterators/iter-map-fold-type-length.rs:24:14: 24:17]>, [closure@ui/iterators/iter-map-fold-type-length.rs:25:14: 25:17]>, [closure@ui/iterators/iter-map-fold-type-length.rs:26:14: 26:17]>, [closure@ui/iterators/iter-map-fold-type-length.rs:27:14: 27:17]>, [closure@ui/iterators/iter-map-fold-type-length.rs:28:14: 28:17]>, [closure@ui/iterators/iter-map-fold-type-length.rs:29:14: 29:17]>, [closure@ui/iterators/iter-map-fold-type-length.rs:30:14: 30:17]>, [closure@ui/iterators/iter-map-fold-type-length.rs:31:14: 31:17]>, [closure@ui/iterators/iter-map-fold-type-length.rs:32:14: 32:17]>; // in scope 0 at ui/iterators/iter-map-fold-type-length.rs:23:13: 32:20
    let mut _6: std::iter::Map<std::iter::Map<std::iter::Map<std::iter::Map<std::iter::Map<std::iter::Map<std::iter::Map<std::iter::Map<Iter<std::ops::Range<i32>>, [closure@ui/iterators/iter-map-fold-type-length.rs:24:14: 24:17]>, [closure@ui/iterators/iter-map-fold-type-length.rs:25:14: 25:17]>, [closure@ui/iterators/iter-map-fold-type-length.rs:26:14: 26:17]>, [closure@ui/iterators/iter-map-fold-type-length.rs:27:14: 27:17]>, [closure@ui/iterators/iter-map-fold-type-length.rs:28:14: 28:17]>, [closure@ui/iterators/iter-map-fold-type-length.rs:29:14: 29:17]>, [closure@ui/iterators/iter-map-fold-type-length.rs:30:14: 30:17]>, [closure@ui/iterators/iter-map-fold-type-length.rs:31:14: 31:17]>; // in scope 0 at ui/iterators/iter-map-fold-type-length.rs:23:13: 31:20
    let mut _7: std::iter::Map<std::iter::Map<std::iter::Map<std::iter::Map<std::iter::Map<std::iter::Map<std::iter::Map<Iter<std::ops::Range<i32>>, [closure@ui/iterators/iter-map-fold-type-length.rs:24:14: 24:17]>, [closure@ui/iterators/iter-map-fold-type-length.rs:25:14: 25:17]>, [closure@ui/iterators/iter-map-fold-type-length.rs:26:14: 26:17]>, [closure@ui/iterators/iter-map-fold-type-length.rs:27:14: 27:17]>, [closure@ui/iterators/iter-map-fold-type-length.rs:28:14: 28:17]>, [closure@ui/iterators/iter-map-fold-type-length.rs:29:14: 29:17]>, [closure@ui/iterators/iter-map-fold-type-length.rs:30:14: 30:17]>; // in scope 0 at ui/iterators/iter-map-fold-type-length.rs:23:13: 30:20
    let mut _8: std::iter::Map<std::iter::Map<std::iter::Map<std::iter::Map<std::iter::Map<std::iter::Map<Iter<std::ops::Range<i32>>, [closure@ui/iterators/iter-map-fold-type-length.rs:24:14: 24:17]>, [closure@ui/iterators/iter-map-fold-type-length.rs:25:14: 25:17]>, [closure@ui/iterators/iter-map-fold-type-length.rs:26:14: 26:17]>, [closure@ui/iterators/iter-map-fold-type-length.rs:27:14: 27:17]>, [closure@ui/iterators/iter-map-fold-type-length.rs:28:14: 28:17]>, [closure@ui/iterators/iter-map-fold-type-length.rs:29:14: 29:17]>; // in scope 0 at ui/iterators/iter-map-fold-type-length.rs:23:13: 29:20
    let mut _9: std::iter::Map<std::iter::Map<std::iter::Map<std::iter::Map<std::iter::Map<Iter<std::ops::Range<i32>>, [closure@ui/iterators/iter-map-fold-type-length.rs:24:14: 24:17]>, [closure@ui/iterators/iter-map-fold-type-length.rs:25:14: 25:17]>, [closure@ui/iterators/iter-map-fold-type-length.rs:26:14: 26:17]>, [closure@ui/iterators/iter-map-fold-type-length.rs:27:14: 27:17]>, [closure@ui/iterators/iter-map-fold-type-length.rs:28:14: 28:17]>; // in scope 0 at ui/iterators/iter-map-fold-type-length.rs:23:13: 28:20
    let mut _10: std::iter::Map<std::iter::Map<std::iter::Map<std::iter::Map<Iter<std::ops::Range<i32>>, [closure@ui/iterators/iter-map-fold-type-length.rs:24:14: 24:17]>, [closure@ui/iterators/iter-map-fold-type-length.rs:25:14: 25:17]>, [closure@ui/iterators/iter-map-fold-type-length.rs:26:14: 26:17]>, [closure@ui/iterators/iter-map-fold-type-length.rs:27:14: 27:17]>; // in scope 0 at ui/iterators/iter-map-fold-type-length.rs:23:13: 27:20
    let mut _11: std::iter::Map<std::iter::Map<std::iter::Map<Iter<std::ops::Range<i32>>, [closure@ui/iterators/iter-map-fold-type-length.rs:24:14: 24:17]>, [closure@ui/iterators/iter-map-fold-type-length.rs:25:14: 25:17]>, [closure@ui/iterators/iter-map-fold-type-length.rs:26:14: 26:17]>; // in scope 0 at ui/iterators/iter-map-fold-type-length.rs:23:13: 26:20
    let mut _12: std::iter::Map<std::iter::Map<Iter<std::ops::Range<i32>>, [closure@ui/iterators/iter-map-fold-type-length.rs:24:14: 24:17]>, [closure@ui/iterators/iter-map-fold-type-length.rs:25:14: 25:17]>; // in scope 0 at ui/iterators/iter-map-fold-type-length.rs:23:13: 25:20
    let mut _13: std::iter::Map<Iter<std::ops::Range<i32>>, [closure@ui/iterators/iter-map-fold-type-length.rs:24:14: 24:17]>; // in scope 0 at ui/iterators/iter-map-fold-type-length.rs:23:13: 24:20
    let mut _14: Iter<std::ops::Range<i32>>; // in scope 0 at ui/iterators/iter-map-fold-type-length.rs:23:13: 23:27
    let mut _15: std::ops::Range<i32>;   // in scope 0 at ui/iterators/iter-map-fold-type-length.rs:23:18: 23:26
    let mut _16: [closure@ui/iterators/iter-map-fold-type-length.rs:24:14: 24:17]; // in scope 0 at ui/iterators/iter-map-fold-type-length.rs:24:14: 24:19
    let mut _17: [closure@ui/iterators/iter-map-fold-type-length.rs:25:14: 25:17]; // in scope 0 at ui/iterators/iter-map-fold-type-length.rs:25:14: 25:19
    let mut _18: [closure@ui/iterators/iter-map-fold-type-length.rs:26:14: 26:17]; // in scope 0 at ui/iterators/iter-map-fold-type-length.rs:26:14: 26:19
    let mut _19: [closure@ui/iterators/iter-map-fold-type-length.rs:27:14: 27:17]; // in scope 0 at ui/iterators/iter-map-fold-type-length.rs:27:14: 27:19
    let mut _20: [closure@ui/iterators/iter-map-fold-type-length.rs:28:14: 28:17]; // in scope 0 at ui/iterators/iter-map-fold-type-length.rs:28:14: 28:19
    let mut _21: [closure@ui/iterators/iter-map-fold-type-length.rs:29:14: 29:17]; // in scope 0 at ui/iterators/iter-map-fold-type-length.rs:29:14: 29:19
    let mut _22: [closure@ui/iterators/iter-map-fold-type-length.rs:30:14: 30:17]; // in scope 0 at ui/iterators/iter-map-fold-type-length.rs:30:14: 30:19
    let mut _23: [closure@ui/iterators/iter-map-fold-type-length.rs:31:14: 31:17]; // in scope 0 at ui/iterators/iter-map-fold-type-length.rs:31:14: 31:19
    let mut _24: [closure@ui/iterators/iter-map-fold-type-length.rs:32:14: 32:17]; // in scope 0 at ui/iterators/iter-map-fold-type-length.rs:32:14: 32:19
    let mut _25: [closure@ui/iterators/iter-map-fold-type-length.rs:33:14: 33:17]; // in scope 0 at ui/iterators/iter-map-fold-type-length.rs:33:14: 33:19
    let mut _26: [closure@ui/iterators/iter-map-fold-type-length.rs:34:14: 34:17]; // in scope 0 at ui/iterators/iter-map-fold-type-length.rs:34:14: 34:19
    let mut _27: [closure@ui/iterators/iter-map-fold-type-length.rs:35:14: 35:17]; // in scope 0 at ui/iterators/iter-map-fold-type-length.rs:35:14: 35:19
    let mut _28: (&usize, &usize);       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _29: &usize;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let mut _30: &usize;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _33: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    let mut _34: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
    let mut _35: usize;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
    let mut _36: usize;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
    let _38: !;                          // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
    let mut _39: core::panicking::AssertKind; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
    let mut _40: &usize;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let _41: &usize;                     // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let mut _42: &usize;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let _43: &usize;                     // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let mut _44: std::option::Option<std::fmt::Arguments<'_>>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
    scope 1 {
        debug c => _1;                   // in scope 1 at ui/iterators/iter-map-fold-type-length.rs:23:9: 23:10
        let _31: &usize;                 // in scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        let _32: &usize;                 // in scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        let mut _45: &usize;             // in scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        scope 2 {
            debug left_val => _31;       // in scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
            debug right_val => _32;      // in scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
            let _37: core::panicking::AssertKind; // in scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
            scope 3 {
                debug kind => _37;       // in scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
            }
        }
    }

    bb0: {
        _15 = std::ops::Range::<i32> { start: const 0_i32, end: const 10_i32 }; // scope 0 at ui/iterators/iter-map-fold-type-length.rs:23:18: 23:26
        _14 = Iter::<std::ops::Range<i32>>(move _15); // scope 0 at ui/iterators/iter-map-fold-type-length.rs:23:13: 23:27
        _13 = <Iter<std::ops::Range<i32>> as Iterator>::map::<i32, [closure@ui/iterators/iter-map-fold-type-length.rs:24:14: 24:17]>(move _14, move _16) -> bb1; // scope 0 at ui/iterators/iter-map-fold-type-length.rs:23:13: 24:20
                                         // mir::Constant
                                         // + span: ui/iterators/iter-map-fold-type-length.rs:24:10: 24:13
                                         // + literal: Const { ty: fn(Iter<std::ops::Range<i32>>, [closure@ui/iterators/iter-map-fold-type-length.rs:24:14: 24:17]) -> Map<Iter<std::ops::Range<i32>>, [closure@ui/iterators/iter-map-fold-type-length.rs:24:14: 24:17]> {<Iter<std::ops::Range<i32>> as Iterator>::map::<i32, [closure@ui/iterators/iter-map-fold-type-length.rs:24:14: 24:17]>}, val: Value(<ZST>) }
    }

    bb1: {
        _12 = <Map<Iter<std::ops::Range<i32>>, [closure@ui/iterators/iter-map-fold-type-length.rs:24:14: 24:17]> as Iterator>::map::<i32, [closure@ui/iterators/iter-map-fold-type-length.rs:25:14: 25:17]>(move _13, move _17) -> bb2; // scope 0 at ui/iterators/iter-map-fold-type-length.rs:23:13: 25:20
                                         // mir::Constant
                                         // + span: ui/iterators/iter-map-fold-type-length.rs:25:10: 25:13
                                         // + literal: Const { ty: fn(Map<Iter<std::ops::Range<i32>>, [closure@ui/iterators/iter-map-fold-type-length.rs:24:14: 24:17]>, [closure@ui/iterators/iter-map-fold-type-length.rs:25:14: 25:17]) -> Map<Map<Iter<std::ops::Range<i32>>, [closure@ui/iterators/iter-map-fold-type-length.rs:24:14: 24:17]>, [closure@ui/iterators/iter-map-fold-type-length.rs:25:14: 25:17]> {<Map<Iter<std::ops::Range<i32>>, [closure@ui/iterators/iter-map-fold-type-length.rs:24:14: 24:17]> as Iterator>::map::<i32, [closure@ui/iterators/iter-map-fold-type-length.rs:25:14: 25:17]>}, val: Value(<ZST>) }
    }

    bb2: {
        _11 = <Map<Map<Iter<std::ops::Range<i32>>, [closure@ui/iterators/iter-map-fold-type-length.rs:24:14: 24:17]>, [closure@ui/iterators/iter-map-fold-type-length.rs:25:14: 25:17]> as Iterator>::map::<i32, [closure@ui/iterators/iter-map-fold-type-length.rs:26:14: 26:17]>(move _12, move _18) -> bb3; // scope 0 at ui/iterators/iter-map-fold-type-length.rs:23:13: 26:20
                                         // mir::Constant
                                         // + span: ui/iterators/iter-map-fold-type-length.rs:26:10: 26:13
                                         // + literal: Const { ty: fn(Map<Map<Iter<std::ops::Range<i32>>, [closure@ui/iterators/iter-map-fold-type-length.rs:24:14: 24:17]>, [closure@ui/iterators/iter-map-fold-type-length.rs:25:14: 25:17]>, [closure@ui/iterators/iter-map-fold-type-length.rs:26:14: 26:17]) -> Map<Map<Map<Iter<std::ops::Range<i32>>, [closure@ui/iterators/iter-map-fold-type-length.rs:24:14: 24:17]>, [closure@ui/iterators/iter-map-fold-type-length.rs:25:14: 25:17]>, [closure@ui/iterators/iter-map-fold-type-length.rs:26:14: 26:17]> {<Map<Map<Iter<std::ops::Range<i32>>, [closure@ui/iterators/iter-map-fold-type-length.rs:24:14: 24:17]>, [closure@ui/iterators/iter-map-fold-type-length.rs:25:14: 25:17]> as Iterator>::map::<i32, [closure@ui/iterators/iter-map-fold-type-length.rs:26:14: 26:17]>}, val: Value(<ZST>) }
    }

    bb3: {
        _10 = <Map<Map<Map<Iter<std::ops::Range<i32>>, [closure@ui/iterators/iter-map-fold-type-length.rs:24:14: 24:17]>, [closure@ui/iterators/iter-map-fold-type-length.rs:25:14: 25:17]>, [closure@ui/iterators/iter-map-fold-type-length.rs:26:14: 26:17]> as Iterator>::map::<i32, [closure@ui/iterators/iter-map-fold-type-length.rs:27:14: 27:17]>(move _11, move _19) -> bb4; // scope 0 at ui/iterators/iter-map-fold-type-length.rs:23:13: 27:20
                                         // mir::Constant
                                         // + span: ui/iterators/iter-map-fold-type-length.rs:27:10: 27:13
                                         // + literal: Const { ty: fn(Map<Map<Map<Iter<std::ops::Range<i32>>, [closure@ui/iterators/iter-map-fold-type-length.rs:24:14: 24:17]>, [closure@ui/iterators/iter-map-fold-type-length.rs:25:14: 25:17]>, [closure@ui/iterators/iter-map-fold-type-length.rs:26:14: 26:17]>, [closure@ui/iterators/iter-map-fold-type-length.rs:27:14: 27:17]) -> Map<Map<Map<Map<Iter<std::ops::Range<i32>>, [closure@ui/iterators/iter-map-fold-type-length.rs:24:14: 24:17]>, [closure@ui/iterators/iter-map-fold-type-length.rs:25:14: 25:17]>, [closure@ui/iterators/iter-map-fold-type-length.rs:26:14: 26:17]>, [closure@ui/iterators/iter-map-fold-type-length.rs:27:14: 27:17]> {<Map<Map<Map<Iter<std::ops::Range<i32>>, [closure@ui/iterators/iter-map-fold-type-length.rs:24:14: 24:17]>, [closure@ui/iterators/iter-map-fold-type-length.rs:25:14: 25:17]>, [closure@ui/iterators/iter-map-fold-type-length.rs:26:14: 26:17]> as Iterator>::map::<i32, [closure@ui/iterators/iter-map-fold-type-length.rs:27:14: 27:17]>}, val: Value(<ZST>) }
    }

    bb4: {
        _9 = <Map<Map<Map<Map<Iter<std::ops::Range<i32>>, [closure@ui/iterators/iter-map-fold-type-length.rs:24:14: 24:17]>, [closure@ui/iterators/iter-map-fold-type-length.rs:25:14: 25:17]>, [closure@ui/iterators/iter-map-fold-type-length.rs:26:14: 26:17]>, [closure@ui/iterators/iter-map-fold-type-length.rs:27:14: 27:17]> as Iterator>::map::<i32, [closure@ui/iterators/iter-map-fold-type-length.rs:28:14: 28:17]>(move _10, move _20) -> bb5; // scope 0 at ui/iterators/iter-map-fold-type-length.rs:23:13: 28:20
                                         // mir::Constant
                                         // + span: ui/iterators/iter-map-fold-type-length.rs:28:10: 28:13
                                         // + literal: Const { ty: fn(Map<Map<Map<Map<Iter<std::ops::Range<i32>>, [closure@ui/iterators/iter-map-fold-type-length.rs:24:14: 24:17]>, [closure@ui/iterators/iter-map-fold-type-length.rs:25:14: 25:17]>, [closure@ui/iterators/iter-map-fold-type-length.rs:26:14: 26:17]>, [closure@ui/iterators/iter-map-fold-type-length.rs:27:14: 27:17]>, [closure@ui/iterators/iter-map-fold-type-length.rs:28:14: 28:17]) -> Map<Map<Map<Map<Map<Iter<std::ops::Range<i32>>, [closure@ui/iterators/iter-map-fold-type-length.rs:24:14: 24:17]>, [closure@ui/iterators/iter-map-fold-type-length.rs:25:14: 25:17]>, [closure@ui/iterators/iter-map-fold-type-length.rs:26:14: 26:17]>, [closure@ui/iterators/iter-map-fold-type-length.rs:27:14: 27:17]>, [closure@ui/iterators/iter-map-fold-type-length.rs:28:14: 28:17]> {<Map<Map<Map<Map<Iter<std::ops::Range<i32>>, [closure@ui/iterators/iter-map-fold-type-length.rs:24:14: 24:17]>, [closure@ui/iterators/iter-map-fold-type-length.rs:25:14: 25:17]>, [closure@ui/iterators/iter-map-fold-type-length.rs:26:14: 26:17]>, [closure@ui/iterators/iter-map-fold-type-length.rs:27:14: 27:17]> as Iterator>::map::<i32, [closure@ui/iterators/iter-map-fold-type-length.rs:28:14: 28:17]>}, val: Value(<ZST>) }
    }

    bb5: {
        _8 = <Map<Map<Map<Map<Map<Iter<std::ops::Range<i32>>, [closure@ui/iterators/iter-map-fold-type-length.rs:24:14: 24:17]>, [closure@ui/iterators/iter-map-fold-type-length.rs:25:14: 25:17]>, [closure@ui/iterators/iter-map-fold-type-length.rs:26:14: 26:17]>, [closure@ui/iterators/iter-map-fold-type-length.rs:27:14: 27:17]>, [closure@ui/iterators/iter-map-fold-type-length.rs:28:14: 28:17]> as Iterator>::map::<i32, [closure@ui/iterators/iter-map-fold-type-length.rs:29:14: 29:17]>(move _9, move _21) -> bb6; // scope 0 at ui/iterators/iter-map-fold-type-length.rs:23:13: 29:20
                                         // mir::Constant
                                         // + span: ui/iterators/iter-map-fold-type-length.rs:29:10: 29:13
                                         // + literal: Const { ty: fn(Map<Map<Map<Map<Map<Iter<std::ops::Range<i32>>, [closure@ui/iterators/iter-map-fold-type-length.rs:24:14: 24:17]>, [closure@ui/iterators/iter-map-fold-type-length.rs:25:14: 25:17]>, [closure@ui/iterators/iter-map-fold-type-length.rs:26:14: 26:17]>, [closure@ui/iterators/iter-map-fold-type-length.rs:27:14: 27:17]>, [closure@ui/iterators/iter-map-fold-type-length.rs:28:14: 28:17]>, [closure@ui/iterators/iter-map-fold-type-length.rs:29:14: 29:17]) -> Map<Map<Map<Map<Map<Map<Iter<std::ops::Range<i32>>, [closure@ui/iterators/iter-map-fold-type-length.rs:24:14: 24:17]>, [closure@ui/iterators/iter-map-fold-type-length.rs:25:14: 25:17]>, [closure@ui/iterators/iter-map-fold-type-length.rs:26:14: 26:17]>, [closure@ui/iterators/iter-map-fold-type-length.rs:27:14: 27:17]>, [closure@ui/iterators/iter-map-fold-type-length.rs:28:14: 28:17]>, [closure@ui/iterators/iter-map-fold-type-length.rs:29:14: 29:17]> {<Map<Map<Map<Map<Map<Iter<std::ops::Range<i32>>, [closure@ui/iterators/iter-map-fold-type-length.rs:24:14: 24:17]>, [closure@ui/iterators/iter-map-fold-type-length.rs:25:14: 25:17]>, [closure@ui/iterators/iter-map-fold-type-length.rs:26:14: 26:17]>, [closure@ui/iterators/iter-map-fold-type-length.rs:27:14: 27:17]>, [closure@ui/iterators/iter-map-fold-type-length.rs:28:14: 28:17]> as Iterator>::map::<i32, [closure@ui/iterators/iter-map-fold-type-length.rs:29:14: 29:17]>}, val: Value(<ZST>) }
    }

    bb6: {
        _7 = <Map<Map<Map<Map<Map<Map<Iter<std::ops::Range<i32>>, [closure@ui/iterators/iter-map-fold-type-length.rs:24:14: 24:17]>, [closure@ui/iterators/iter-map-fold-type-length.rs:25:14: 25:17]>, [closure@ui/iterators/iter-map-fold-type-length.rs:26:14: 26:17]>, [closure@ui/iterators/iter-map-fold-type-length.rs:27:14: 27:17]>, [closure@ui/iterators/iter-map-fold-type-length.rs:28:14: 28:17]>, [closure@ui/iterators/iter-map-fold-type-length.rs:29:14: 29:17]> as Iterator>::map::<i32, [closure@ui/iterators/iter-map-fold-type-length.rs:30:14: 30:17]>(move _8, move _22) -> bb7; // scope 0 at ui/iterators/iter-map-fold-type-length.rs:23:13: 30:20
                                         // mir::Constant
                                         // + span: ui/iterators/iter-map-fold-type-length.rs:30:10: 30:13
                                         // + literal: Const { ty: fn(Map<Map<Map<Map<Map<Map<Iter<std::ops::Range<i32>>, [closure@ui/iterators/iter-map-fold-type-length.rs:24:14: 24:17]>, [closure@ui/iterators/iter-map-fold-type-length.rs:25:14: 25:17]>, [closure@ui/iterators/iter-map-fold-type-length.rs:26:14: 26:17]>, [closure@ui/iterators/iter-map-fold-type-length.rs:27:14: 27:17]>, [closure@ui/iterators/iter-map-fold-type-length.rs:28:14: 28:17]>, [closure@ui/iterators/iter-map-fold-type-length.rs:29:14: 29:17]>, [closure@ui/iterators/iter-map-fold-type-length.rs:30:14: 30:17]) -> Map<Map<Map<Map<Map<Map<Map<Iter<std::ops::Range<i32>>, [closure@ui/iterators/iter-map-fold-type-length.rs:24:14: 24:17]>, [closure@ui/iterators/iter-map-fold-type-length.rs:25:14: 25:17]>, [closure@ui/iterators/iter-map-fold-type-length.rs:26:14: 26:17]>, [closure@ui/iterators/iter-map-fold-type-length.rs:27:14: 27:17]>, [closure@ui/iterators/iter-map-fold-type-length.rs:28:14: 28:17]>, [closure@ui/iterators/iter-map-fold-type-length.rs:29:14: 29:17]>, [closure@ui/iterators/iter-map-fold-type-length.rs:30:14: 30:17]> {<Map<Map<Map<Map<Map<Map<Iter<std::ops::Range<i32>>, [closure@ui/iterators/iter-map-fold-type-length.rs:24:14: 24:17]>, [closure@ui/iterators/iter-map-fold-type-length.rs:25:14: 25:17]>, [closure@ui/iterators/iter-map-fold-type-length.rs:26:14: 26:17]>, [closure@ui/iterators/iter-map-fold-type-length.rs:27:14: 27:17]>, [closure@ui/iterators/iter-map-fold-type-length.rs:28:14: 28:17]>, [closure@ui/iterators/iter-map-fold-type-length.rs:29:14: 29:17]> as Iterator>::map::<i32, [closure@ui/iterators/iter-map-fold-type-length.rs:30:14: 30:17]>}, val: Value(<ZST>) }
    }

    bb7: {
        _6 = <Map<Map<Map<Map<Map<Map<Map<Iter<std::ops::Range<i32>>, [closure@ui/iterators/iter-map-fold-type-length.rs:24:14: 24:17]>, [closure@ui/iterators/iter-map-fold-type-length.rs:25:14: 25:17]>, [closure@ui/iterators/iter-map-fold-type-length.rs:26:14: 26:17]>, [closure@ui/iterators/iter-map-fold-type-length.rs:27:14: 27:17]>, [closure@ui/iterators/iter-map-fold-type-length.rs:28:14: 28:17]>, [closure@ui/iterators/iter-map-fold-type-length.rs:29:14: 29:17]>, [closure@ui/iterators/iter-map-fold-type-length.rs:30:14: 30:17]> as Iterator>::map::<i32, [closure@ui/iterators/iter-map-fold-type-length.rs:31:14: 31:17]>(move _7, move _23) -> bb8; // scope 0 at ui/iterators/iter-map-fold-type-length.rs:23:13: 31:20
                                         // mir::Constant
                                         // + span: ui/iterators/iter-map-fold-type-length.rs:31:10: 31:13
                                         // + literal: Const { ty: fn(Map<Map<Map<Map<Map<Map<Map<Iter<std::ops::Range<i32>>, [closure@ui/iterators/iter-map-fold-type-length.rs:24:14: 24:17]>, [closure@ui/iterators/iter-map-fold-type-length.rs:25:14: 25:17]>, [closure@ui/iterators/iter-map-fold-type-length.rs:26:14: 26:17]>, [closure@ui/iterators/iter-map-fold-type-length.rs:27:14: 27:17]>, [closure@ui/iterators/iter-map-fold-type-length.rs:28:14: 28:17]>, [closure@ui/iterators/iter-map-fold-type-length.rs:29:14: 29:17]>, [closure@ui/iterators/iter-map-fold-type-length.rs:30:14: 30:17]>, [closure@ui/iterators/iter-map-fold-type-length.rs:31:14: 31:17]) -> Map<Map<Map<Map<Map<Map<Map<Map<Iter<std::ops::Range<i32>>, [closure@ui/iterators/iter-map-fold-type-length.rs:24:14: 24:17]>, [closure@ui/iterators/iter-map-fold-type-length.rs:25:14: 25:17]>, [closure@ui/iterators/iter-map-fold-type-length.rs:26:14: 26:17]>, [closure@ui/iterators/iter-map-fold-type-length.rs:27:14: 27:17]>, [closure@ui/iterators/iter-map-fold-type-length.rs:28:14: 28:17]>, [closure@ui/iterators/iter-map-fold-type-length.rs:29:14: 29:17]>, [closure@ui/iterators/iter-map-fold-type-length.rs:30:14: 30:17]>, [closure@ui/iterators/iter-map-fold-type-length.rs:31:14: 31:17]> {<Map<Map<Map<Map<Map<Map<Map<Iter<std::ops::Range<i32>>, [closure@ui/iterators/iter-map-fold-type-length.rs:24:14: 24:17]>, [closure@ui/iterators/iter-map-fold-type-length.rs:25:14: 25:17]>, [closure@ui/iterators/iter-map-fold-type-length.rs:26:14: 26:17]>, [closure@ui/iterators/iter-map-fold-type-length.rs:27:14: 27:17]>, [closure@ui/iterators/iter-map-fold-type-length.rs:28:14: 28:17]>, [closure@ui/iterators/iter-map-fold-type-length.rs:29:14: 29:17]>, [closure@ui/iterators/iter-map-fold-type-length.rs:30:14: 30:17]> as Iterator>::map::<i32, [closure@ui/iterators/iter-map-fold-type-length.rs:31:14: 31:17]>}, val: Value(<ZST>) }
    }

    bb8: {
        _5 = <Map<Map<Map<Map<Map<Map<Map<Map<Iter<std::ops::Range<i32>>, [closure@ui/iterators/iter-map-fold-type-length.rs:24:14: 24:17]>, [closure@ui/iterators/iter-map-fold-type-length.rs:25:14: 25:17]>, [closure@ui/iterators/iter-map-fold-type-length.rs:26:14: 26:17]>, [closure@ui/iterators/iter-map-fold-type-length.rs:27:14: 27:17]>, [closure@ui/iterators/iter-map-fold-type-length.rs:28:14: 28:17]>, [closure@ui/iterators/iter-map-fold-type-length.rs:29:14: 29:17]>, [closure@ui/iterators/iter-map-fold-type-length.rs:30:14: 30:17]>, [closure@ui/iterators/iter-map-fold-type-length.rs:31:14: 31:17]> as Iterator>::map::<i32, [closure@ui/iterators/iter-map-fold-type-length.rs:32:14: 32:17]>(move _6, move _24) -> bb9; // scope 0 at ui/iterators/iter-map-fold-type-length.rs:23:13: 32:20
                                         // mir::Constant
                                         // + span: ui/iterators/iter-map-fold-type-length.rs:32:10: 32:13
                                         // + literal: Const { ty: fn(Map<Map<Map<Map<Map<Map<Map<Map<Iter<std::ops::Range<i32>>, [closure@ui/iterators/iter-map-fold-type-length.rs:24:14: 24:17]>, [closure@ui/iterators/iter-map-fold-type-length.rs:25:14: 25:17]>, [closure@ui/iterators/iter-map-fold-type-length.rs:26:14: 26:17]>, [closure@ui/iterators/iter-map-fold-type-length.rs:27:14: 27:17]>, [closure@ui/iterators/iter-map-fold-type-length.rs:28:14: 28:17]>, [closure@ui/iterators/iter-map-fold-type-length.rs:29:14: 29:17]>, [closure@ui/iterators/iter-map-fold-type-length.rs:30:14: 30:17]>, [closure@ui/iterators/iter-map-fold-type-length.rs:31:14: 31:17]>, [closure@ui/iterators/iter-map-fold-type-length.rs:32:14: 32:17]) -> Map<Map<Map<Map<Map<Map<Map<Map<Map<Iter<std::ops::Range<i32>>, [closure@ui/iterators/iter-map-fold-type-length.rs:24:14: 24:17]>, [closure@ui/iterators/iter-map-fold-type-length.rs:25:14: 25:17]>, [closure@ui/iterators/iter-map-fold-type-length.rs:26:14: 26:17]>, [closure@ui/iterators/iter-map-fold-type-length.rs:27:14: 27:17]>, [closure@ui/iterators/iter-map-fold-type-length.rs:28:14: 28:17]>, [closure@ui/iterators/iter-map-fold-type-length.rs:29:14: 29:17]>, [closure@ui/iterators/iter-map-fold-type-length.rs:30:14: 30:17]>, [closure@ui/iterators/iter-map-fold-type-length.rs:31:14: 31:17]>, [closure@ui/iterators/iter-map-fold-type-length.rs:32:14: 32:17]> {<Map<Map<Map<Map<Map<Map<Map<Map<Iter<std::ops::Range<i32>>, [closure@ui/iterators/iter-map-fold-type-length.rs:24:14: 24:17]>, [closure@ui/iterators/iter-map-fold-type-length.rs:25:14: 25:17]>, [closure@ui/iterators/iter-map-fold-type-length.rs:26:14: 26:17]>, [closure@ui/iterators/iter-map-fold-type-length.rs:27:14: 27:17]>, [closure@ui/iterators/iter-map-fold-type-length.rs:28:14: 28:17]>, [closure@ui/iterators/iter-map-fold-type-length.rs:29:14: 29:17]>, [closure@ui/iterators/iter-map-fold-type-length.rs:30:14: 30:17]>, [closure@ui/iterators/iter-map-fold-type-length.rs:31:14: 31:17]> as Iterator>::map::<i32, [closure@ui/iterators/iter-map-fold-type-length.rs:32:14: 32:17]>}, val: Value(<ZST>) }
    }

    bb9: {
        _4 = <Map<Map<Map<Map<Map<Map<Map<Map<Map<Iter<std::ops::Range<i32>>, [closure@ui/iterators/iter-map-fold-type-length.rs:24:14: 24:17]>, [closure@ui/iterators/iter-map-fold-type-length.rs:25:14: 25:17]>, [closure@ui/iterators/iter-map-fold-type-length.rs:26:14: 26:17]>, [closure@ui/iterators/iter-map-fold-type-length.rs:27:14: 27:17]>, [closure@ui/iterators/iter-map-fold-type-length.rs:28:14: 28:17]>, [closure@ui/iterators/iter-map-fold-type-length.rs:29:14: 29:17]>, [closure@ui/iterators/iter-map-fold-type-length.rs:30:14: 30:17]>, [closure@ui/iterators/iter-map-fold-type-length.rs:31:14: 31:17]>, [closure@ui/iterators/iter-map-fold-type-length.rs:32:14: 32:17]> as Iterator>::map::<i32, [closure@ui/iterators/iter-map-fold-type-length.rs:33:14: 33:17]>(move _5, move _25) -> bb10; // scope 0 at ui/iterators/iter-map-fold-type-length.rs:23:13: 33:20
                                         // mir::Constant
                                         // + span: ui/iterators/iter-map-fold-type-length.rs:33:10: 33:13
                                         // + literal: Const { ty: fn(Map<Map<Map<Map<Map<Map<Map<Map<Map<Iter<std::ops::Range<i32>>, [closure@ui/iterators/iter-map-fold-type-length.rs:24:14: 24:17]>, [closure@ui/iterators/iter-map-fold-type-length.rs:25:14: 25:17]>, [closure@ui/iterators/iter-map-fold-type-length.rs:26:14: 26:17]>, [closure@ui/iterators/iter-map-fold-type-length.rs:27:14: 27:17]>, [closure@ui/iterators/iter-map-fold-type-length.rs:28:14: 28:17]>, [closure@ui/iterators/iter-map-fold-type-length.rs:29:14: 29:17]>, [closure@ui/iterators/iter-map-fold-type-length.rs:30:14: 30:17]>, [closure@ui/iterators/iter-map-fold-type-length.rs:31:14: 31:17]>, [closure@ui/iterators/iter-map-fold-type-length.rs:32:14: 32:17]>, [closure@ui/iterators/iter-map-fold-type-length.rs:33:14: 33:17]) -> Map<Map<Map<Map<Map<Map<Map<Map<Map<Map<Iter<std::ops::Range<i32>>, [closure@ui/iterators/iter-map-fold-type-length.rs:24:14: 24:17]>, [closure@ui/iterators/iter-map-fold-type-length.rs:25:14: 25:17]>, [closure@ui/iterators/iter-map-fold-type-length.rs:26:14: 26:17]>, [closure@ui/iterators/iter-map-fold-type-length.rs:27:14: 27:17]>, [closure@ui/iterators/iter-map-fold-type-length.rs:28:14: 28:17]>, [closure@ui/iterators/iter-map-fold-type-length.rs:29:14: 29:17]>, [closure@ui/iterators/iter-map-fold-type-length.rs:30:14: 30:17]>, [closure@ui/iterators/iter-map-fold-type-length.rs:31:14: 31:17]>, [closure@ui/iterators/iter-map-fold-type-length.rs:32:14: 32:17]>, [closure@ui/iterators/iter-map-fold-type-length.rs:33:14: 33:17]> {<Map<Map<Map<Map<Map<Map<Map<Map<Map<Iter<std::ops::Range<i32>>, [closure@ui/iterators/iter-map-fold-type-length.rs:24:14: 24:17]>, [closure@ui/iterators/iter-map-fold-type-length.rs:25:14: 25:17]>, [closure@ui/iterators/iter-map-fold-type-length.rs:26:14: 26:17]>, [closure@ui/iterators/iter-map-fold-type-length.rs:27:14: 27:17]>, [closure@ui/iterators/iter-map-fold-type-length.rs:28:14: 28:17]>, [closure@ui/iterators/iter-map-fold-type-length.rs:29:14: 29:17]>, [closure@ui/iterators/iter-map-fold-type-length.rs:30:14: 30:17]>, [closure@ui/iterators/iter-map-fold-type-length.rs:31:14: 31:17]>, [closure@ui/iterators/iter-map-fold-type-length.rs:32:14: 32:17]> as Iterator>::map::<i32, [closure@ui/iterators/iter-map-fold-type-length.rs:33:14: 33:17]>}, val: Value(<ZST>) }
    }

    bb10: {
        _3 = <Map<Map<Map<Map<Map<Map<Map<Map<Map<Map<Iter<std::ops::Range<i32>>, [closure@ui/iterators/iter-map-fold-type-length.rs:24:14: 24:17]>, [closure@ui/iterators/iter-map-fold-type-length.rs:25:14: 25:17]>, [closure@ui/iterators/iter-map-fold-type-length.rs:26:14: 26:17]>, [closure@ui/iterators/iter-map-fold-type-length.rs:27:14: 27:17]>, [closure@ui/iterators/iter-map-fold-type-length.rs:28:14: 28:17]>, [closure@ui/iterators/iter-map-fold-type-length.rs:29:14: 29:17]>, [closure@ui/iterators/iter-map-fold-type-length.rs:30:14: 30:17]>, [closure@ui/iterators/iter-map-fold-type-length.rs:31:14: 31:17]>, [closure@ui/iterators/iter-map-fold-type-length.rs:32:14: 32:17]>, [closure@ui/iterators/iter-map-fold-type-length.rs:33:14: 33:17]> as Iterator>::map::<i32, [closure@ui/iterators/iter-map-fold-type-length.rs:34:14: 34:17]>(move _4, move _26) -> bb11; // scope 0 at ui/iterators/iter-map-fold-type-length.rs:23:13: 34:20
                                         // mir::Constant
                                         // + span: ui/iterators/iter-map-fold-type-length.rs:34:10: 34:13
                                         // + literal: Const { ty: fn(Map<Map<Map<Map<Map<Map<Map<Map<Map<Map<Iter<std::ops::Range<i32>>, [closure@ui/iterators/iter-map-fold-type-length.rs:24:14: 24:17]>, [closure@ui/iterators/iter-map-fold-type-length.rs:25:14: 25:17]>, [closure@ui/iterators/iter-map-fold-type-length.rs:26:14: 26:17]>, [closure@ui/iterators/iter-map-fold-type-length.rs:27:14: 27:17]>, [closure@ui/iterators/iter-map-fold-type-length.rs:28:14: 28:17]>, [closure@ui/iterators/iter-map-fold-type-length.rs:29:14: 29:17]>, [closure@ui/iterators/iter-map-fold-type-length.rs:30:14: 30:17]>, [closure@ui/iterators/iter-map-fold-type-length.rs:31:14: 31:17]>, [closure@ui/iterators/iter-map-fold-type-length.rs:32:14: 32:17]>, [closure@ui/iterators/iter-map-fold-type-length.rs:33:14: 33:17]>, [closure@ui/iterators/iter-map-fold-type-length.rs:34:14: 34:17]) -> Map<Map<Map<Map<Map<Map<Map<Map<Map<Map<Map<Iter<std::ops::Range<i32>>, [closure@ui/iterators/iter-map-fold-type-length.rs:24:14: 24:17]>, [closure@ui/iterators/iter-map-fold-type-length.rs:25:14: 25:17]>, [closure@ui/iterators/iter-map-fold-type-length.rs:26:14: 26:17]>, [closure@ui/iterators/iter-map-fold-type-length.rs:27:14: 27:17]>, [closure@ui/iterators/iter-map-fold-type-length.rs:28:14: 28:17]>, [closure@ui/iterators/iter-map-fold-type-length.rs:29:14: 29:17]>, [closure@ui/iterators/iter-map-fold-type-length.rs:30:14: 30:17]>, [closure@ui/iterators/iter-map-fold-type-length.rs:31:14: 31:17]>, [closure@ui/iterators/iter-map-fold-type-length.rs:32:14: 32:17]>, [closure@ui/iterators/iter-map-fold-type-length.rs:33:14: 33:17]>, [closure@ui/iterators/iter-map-fold-type-length.rs:34:14: 34:17]> {<Map<Map<Map<Map<Map<Map<Map<Map<Map<Map<Iter<std::ops::Range<i32>>, [closure@ui/iterators/iter-map-fold-type-length.rs:24:14: 24:17]>, [closure@ui/iterators/iter-map-fold-type-length.rs:25:14: 25:17]>, [closure@ui/iterators/iter-map-fold-type-length.rs:26:14: 26:17]>, [closure@ui/iterators/iter-map-fold-type-length.rs:27:14: 27:17]>, [closure@ui/iterators/iter-map-fold-type-length.rs:28:14: 28:17]>, [closure@ui/iterators/iter-map-fold-type-length.rs:29:14: 29:17]>, [closure@ui/iterators/iter-map-fold-type-length.rs:30:14: 30:17]>, [closure@ui/iterators/iter-map-fold-type-length.rs:31:14: 31:17]>, [closure@ui/iterators/iter-map-fold-type-length.rs:32:14: 32:17]>, [closure@ui/iterators/iter-map-fold-type-length.rs:33:14: 33:17]> as Iterator>::map::<i32, [closure@ui/iterators/iter-map-fold-type-length.rs:34:14: 34:17]>}, val: Value(<ZST>) }
    }

    bb11: {
        _2 = <Map<Map<Map<Map<Map<Map<Map<Map<Map<Map<Map<Iter<std::ops::Range<i32>>, [closure@ui/iterators/iter-map-fold-type-length.rs:24:14: 24:17]>, [closure@ui/iterators/iter-map-fold-type-length.rs:25:14: 25:17]>, [closure@ui/iterators/iter-map-fold-type-length.rs:26:14: 26:17]>, [closure@ui/iterators/iter-map-fold-type-length.rs:27:14: 27:17]>, [closure@ui/iterators/iter-map-fold-type-length.rs:28:14: 28:17]>, [closure@ui/iterators/iter-map-fold-type-length.rs:29:14: 29:17]>, [closure@ui/iterators/iter-map-fold-type-length.rs:30:14: 30:17]>, [closure@ui/iterators/iter-map-fold-type-length.rs:31:14: 31:17]>, [closure@ui/iterators/iter-map-fold-type-length.rs:32:14: 32:17]>, [closure@ui/iterators/iter-map-fold-type-length.rs:33:14: 33:17]>, [closure@ui/iterators/iter-map-fold-type-length.rs:34:14: 34:17]> as Iterator>::map::<i32, [closure@ui/iterators/iter-map-fold-type-length.rs:35:14: 35:17]>(move _3, move _27) -> bb12; // scope 0 at ui/iterators/iter-map-fold-type-length.rs:23:13: 35:20
                                         // mir::Constant
                                         // + span: ui/iterators/iter-map-fold-type-length.rs:35:10: 35:13
                                         // + literal: Const { ty: fn(Map<Map<Map<Map<Map<Map<Map<Map<Map<Map<Map<Iter<std::ops::Range<i32>>, [closure@ui/iterators/iter-map-fold-type-length.rs:24:14: 24:17]>, [closure@ui/iterators/iter-map-fold-type-length.rs:25:14: 25:17]>, [closure@ui/iterators/iter-map-fold-type-length.rs:26:14: 26:17]>, [closure@ui/iterators/iter-map-fold-type-length.rs:27:14: 27:17]>, [closure@ui/iterators/iter-map-fold-type-length.rs:28:14: 28:17]>, [closure@ui/iterators/iter-map-fold-type-length.rs:29:14: 29:17]>, [closure@ui/iterators/iter-map-fold-type-length.rs:30:14: 30:17]>, [closure@ui/iterators/iter-map-fold-type-length.rs:31:14: 31:17]>, [closure@ui/iterators/iter-map-fold-type-length.rs:32:14: 32:17]>, [closure@ui/iterators/iter-map-fold-type-length.rs:33:14: 33:17]>, [closure@ui/iterators/iter-map-fold-type-length.rs:34:14: 34:17]>, [closure@ui/iterators/iter-map-fold-type-length.rs:35:14: 35:17]) -> Map<Map<Map<Map<Map<Map<Map<Map<Map<Map<Map<Map<Iter<std::ops::Range<i32>>, [closure@ui/iterators/iter-map-fold-type-length.rs:24:14: 24:17]>, [closure@ui/iterators/iter-map-fold-type-length.rs:25:14: 25:17]>, [closure@ui/iterators/iter-map-fold-type-length.rs:26:14: 26:17]>, [closure@ui/iterators/iter-map-fold-type-length.rs:27:14: 27:17]>, [closure@ui/iterators/iter-map-fold-type-length.rs:28:14: 28:17]>, [closure@ui/iterators/iter-map-fold-type-length.rs:29:14: 29:17]>, [closure@ui/iterators/iter-map-fold-type-length.rs:30:14: 30:17]>, [closure@ui/iterators/iter-map-fold-type-length.rs:31:14: 31:17]>, [closure@ui/iterators/iter-map-fold-type-length.rs:32:14: 32:17]>, [closure@ui/iterators/iter-map-fold-type-length.rs:33:14: 33:17]>, [closure@ui/iterators/iter-map-fold-type-length.rs:34:14: 34:17]>, [closure@ui/iterators/iter-map-fold-type-length.rs:35:14: 35:17]> {<Map<Map<Map<Map<Map<Map<Map<Map<Map<Map<Map<Iter<std::ops::Range<i32>>, [closure@ui/iterators/iter-map-fold-type-length.rs:24:14: 24:17]>, [closure@ui/iterators/iter-map-fold-type-length.rs:25:14: 25:17]>, [closure@ui/iterators/iter-map-fold-type-length.rs:26:14: 26:17]>, [closure@ui/iterators/iter-map-fold-type-length.rs:27:14: 27:17]>, [closure@ui/iterators/iter-map-fold-type-length.rs:28:14: 28:17]>, [closure@ui/iterators/iter-map-fold-type-length.rs:29:14: 29:17]>, [closure@ui/iterators/iter-map-fold-type-length.rs:30:14: 30:17]>, [closure@ui/iterators/iter-map-fold-type-length.rs:31:14: 31:17]>, [closure@ui/iterators/iter-map-fold-type-length.rs:32:14: 32:17]>, [closure@ui/iterators/iter-map-fold-type-length.rs:33:14: 33:17]>, [closure@ui/iterators/iter-map-fold-type-length.rs:34:14: 34:17]> as Iterator>::map::<i32, [closure@ui/iterators/iter-map-fold-type-length.rs:35:14: 35:17]>}, val: Value(<ZST>) }
    }

    bb12: {
        _1 = <Map<Map<Map<Map<Map<Map<Map<Map<Map<Map<Map<Map<Iter<std::ops::Range<i32>>, [closure@ui/iterators/iter-map-fold-type-length.rs:24:14: 24:17]>, [closure@ui/iterators/iter-map-fold-type-length.rs:25:14: 25:17]>, [closure@ui/iterators/iter-map-fold-type-length.rs:26:14: 26:17]>, [closure@ui/iterators/iter-map-fold-type-length.rs:27:14: 27:17]>, [closure@ui/iterators/iter-map-fold-type-length.rs:28:14: 28:17]>, [closure@ui/iterators/iter-map-fold-type-length.rs:29:14: 29:17]>, [closure@ui/iterators/iter-map-fold-type-length.rs:30:14: 30:17]>, [closure@ui/iterators/iter-map-fold-type-length.rs:31:14: 31:17]>, [closure@ui/iterators/iter-map-fold-type-length.rs:32:14: 32:17]>, [closure@ui/iterators/iter-map-fold-type-length.rs:33:14: 33:17]>, [closure@ui/iterators/iter-map-fold-type-length.rs:34:14: 34:17]>, [closure@ui/iterators/iter-map-fold-type-length.rs:35:14: 35:17]> as Iterator>::count(move _2) -> bb13; // scope 0 at ui/iterators/iter-map-fold-type-length.rs:23:13: 36:17
                                         // mir::Constant
                                         // + span: ui/iterators/iter-map-fold-type-length.rs:36:10: 36:15
                                         // + literal: Const { ty: fn(Map<Map<Map<Map<Map<Map<Map<Map<Map<Map<Map<Map<Iter<std::ops::Range<i32>>, [closure@ui/iterators/iter-map-fold-type-length.rs:24:14: 24:17]>, [closure@ui/iterators/iter-map-fold-type-length.rs:25:14: 25:17]>, [closure@ui/iterators/iter-map-fold-type-length.rs:26:14: 26:17]>, [closure@ui/iterators/iter-map-fold-type-length.rs:27:14: 27:17]>, [closure@ui/iterators/iter-map-fold-type-length.rs:28:14: 28:17]>, [closure@ui/iterators/iter-map-fold-type-length.rs:29:14: 29:17]>, [closure@ui/iterators/iter-map-fold-type-length.rs:30:14: 30:17]>, [closure@ui/iterators/iter-map-fold-type-length.rs:31:14: 31:17]>, [closure@ui/iterators/iter-map-fold-type-length.rs:32:14: 32:17]>, [closure@ui/iterators/iter-map-fold-type-length.rs:33:14: 33:17]>, [closure@ui/iterators/iter-map-fold-type-length.rs:34:14: 34:17]>, [closure@ui/iterators/iter-map-fold-type-length.rs:35:14: 35:17]>) -> usize {<Map<Map<Map<Map<Map<Map<Map<Map<Map<Map<Map<Map<Iter<std::ops::Range<i32>>, [closure@ui/iterators/iter-map-fold-type-length.rs:24:14: 24:17]>, [closure@ui/iterators/iter-map-fold-type-length.rs:25:14: 25:17]>, [closure@ui/iterators/iter-map-fold-type-length.rs:26:14: 26:17]>, [closure@ui/iterators/iter-map-fold-type-length.rs:27:14: 27:17]>, [closure@ui/iterators/iter-map-fold-type-length.rs:28:14: 28:17]>, [closure@ui/iterators/iter-map-fold-type-length.rs:29:14: 29:17]>, [closure@ui/iterators/iter-map-fold-type-length.rs:30:14: 30:17]>, [closure@ui/iterators/iter-map-fold-type-length.rs:31:14: 31:17]>, [closure@ui/iterators/iter-map-fold-type-length.rs:32:14: 32:17]>, [closure@ui/iterators/iter-map-fold-type-length.rs:33:14: 33:17]>, [closure@ui/iterators/iter-map-fold-type-length.rs:34:14: 34:17]>, [closure@ui/iterators/iter-map-fold-type-length.rs:35:14: 35:17]> as Iterator>::count}, val: Value(<ZST>) }
    }

    bb13: {
        _29 = &_1;                       // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _45 = const _;                   // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // + literal: Const { ty: &usize, val: Unevaluated(main, [], Some(promoted[0])) }
        _30 = _45;                       // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _28 = (move _29, move _30);      // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _31 = (_28.0: &usize);           // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _32 = (_28.1: &usize);           // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _35 = (*_31);                    // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
        _36 = const 10_usize;            // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
        _34 = Eq(move _35, move _36);    // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
        _33 = Not(move _34);             // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
        switchInt(move _33) -> [0: bb15, otherwise: bb14]; // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    }

    bb14: {
        _37 = const core::panicking::AssertKind::Eq; // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _39 = const core::panicking::AssertKind::Eq; // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _41 = _31;                       // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _40 = _41;                       // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _43 = _32;                       // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _42 = _43;                       // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _44 = Option::<Arguments<'_>>::None; // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
        _38 = core::panicking::assert_failed::<usize, usize>(move _39, move _40, move _42, move _44); // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:53
                                         // + literal: Const { ty: for<'a, 'b, 'c> fn(core::panicking::AssertKind, &'a usize, &'b usize, Option<Arguments<'c>>) -> ! {core::panicking::assert_failed::<usize, usize>}, val: Value(<ZST>) }
    }

    bb15: {
        return;                          // scope 0 at ui/iterators/iter-map-fold-type-length.rs:38:2: 38:2
    }
}

promoted[0] in main: &usize = {
    let mut _0: &usize;                  // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _1: usize;                   // in scope 0 at ui/iterators/iter-map-fold-type-length.rs:37:19: 37:21

    bb0: {
        _1 = const 10_usize;             // scope 0 at ui/iterators/iter-map-fold-type-length.rs:37:19: 37:21
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    }
}

fn main::{closure#0}(_1: &mut [closure@ui/iterators/iter-map-fold-type-length.rs:24:14: 24:17], _2: i32) -> i32 {
    debug x => _2;                       // in scope 0 at ui/iterators/iter-map-fold-type-length.rs:24:15: 24:16
    let mut _0: i32;                     // return place in scope 0 at ui/iterators/iter-map-fold-type-length.rs:24:18: 24:18

    bb0: {
        _0 = _2;                         // scope 0 at ui/iterators/iter-map-fold-type-length.rs:24:18: 24:19
        return;                          // scope 0 at ui/iterators/iter-map-fold-type-length.rs:24:19: 24:19
    }
}

fn main::{closure#1}(_1: &mut [closure@ui/iterators/iter-map-fold-type-length.rs:25:14: 25:17], _2: i32) -> i32 {
    debug x => _2;                       // in scope 0 at ui/iterators/iter-map-fold-type-length.rs:25:15: 25:16
    let mut _0: i32;                     // return place in scope 0 at ui/iterators/iter-map-fold-type-length.rs:25:18: 25:18

    bb0: {
        _0 = _2;                         // scope 0 at ui/iterators/iter-map-fold-type-length.rs:25:18: 25:19
        return;                          // scope 0 at ui/iterators/iter-map-fold-type-length.rs:25:19: 25:19
    }
}

fn main::{closure#2}(_1: &mut [closure@ui/iterators/iter-map-fold-type-length.rs:26:14: 26:17], _2: i32) -> i32 {
    debug x => _2;                       // in scope 0 at ui/iterators/iter-map-fold-type-length.rs:26:15: 26:16
    let mut _0: i32;                     // return place in scope 0 at ui/iterators/iter-map-fold-type-length.rs:26:18: 26:18

    bb0: {
        _0 = _2;                         // scope 0 at ui/iterators/iter-map-fold-type-length.rs:26:18: 26:19
        return;                          // scope 0 at ui/iterators/iter-map-fold-type-length.rs:26:19: 26:19
    }
}

fn main::{closure#3}(_1: &mut [closure@ui/iterators/iter-map-fold-type-length.rs:27:14: 27:17], _2: i32) -> i32 {
    debug x => _2;                       // in scope 0 at ui/iterators/iter-map-fold-type-length.rs:27:15: 27:16
    let mut _0: i32;                     // return place in scope 0 at ui/iterators/iter-map-fold-type-length.rs:27:18: 27:18

    bb0: {
        _0 = _2;                         // scope 0 at ui/iterators/iter-map-fold-type-length.rs:27:18: 27:19
        return;                          // scope 0 at ui/iterators/iter-map-fold-type-length.rs:27:19: 27:19
    }
}

fn main::{closure#4}(_1: &mut [closure@ui/iterators/iter-map-fold-type-length.rs:28:14: 28:17], _2: i32) -> i32 {
    debug x => _2;                       // in scope 0 at ui/iterators/iter-map-fold-type-length.rs:28:15: 28:16
    let mut _0: i32;                     // return place in scope 0 at ui/iterators/iter-map-fold-type-length.rs:28:18: 28:18

    bb0: {
        _0 = _2;                         // scope 0 at ui/iterators/iter-map-fold-type-length.rs:28:18: 28:19
        return;                          // scope 0 at ui/iterators/iter-map-fold-type-length.rs:28:19: 28:19
    }
}

fn main::{closure#5}(_1: &mut [closure@ui/iterators/iter-map-fold-type-length.rs:29:14: 29:17], _2: i32) -> i32 {
    debug x => _2;                       // in scope 0 at ui/iterators/iter-map-fold-type-length.rs:29:15: 29:16
    let mut _0: i32;                     // return place in scope 0 at ui/iterators/iter-map-fold-type-length.rs:29:18: 29:18

    bb0: {
        _0 = _2;                         // scope 0 at ui/iterators/iter-map-fold-type-length.rs:29:18: 29:19
        return;                          // scope 0 at ui/iterators/iter-map-fold-type-length.rs:29:19: 29:19
    }
}

fn main::{closure#6}(_1: &mut [closure@ui/iterators/iter-map-fold-type-length.rs:30:14: 30:17], _2: i32) -> i32 {
    debug x => _2;                       // in scope 0 at ui/iterators/iter-map-fold-type-length.rs:30:15: 30:16
    let mut _0: i32;                     // return place in scope 0 at ui/iterators/iter-map-fold-type-length.rs:30:18: 30:18

    bb0: {
        _0 = _2;                         // scope 0 at ui/iterators/iter-map-fold-type-length.rs:30:18: 30:19
        return;                          // scope 0 at ui/iterators/iter-map-fold-type-length.rs:30:19: 30:19
    }
}

fn main::{closure#7}(_1: &mut [closure@ui/iterators/iter-map-fold-type-length.rs:31:14: 31:17], _2: i32) -> i32 {
    debug x => _2;                       // in scope 0 at ui/iterators/iter-map-fold-type-length.rs:31:15: 31:16
    let mut _0: i32;                     // return place in scope 0 at ui/iterators/iter-map-fold-type-length.rs:31:18: 31:18

    bb0: {
        _0 = _2;                         // scope 0 at ui/iterators/iter-map-fold-type-length.rs:31:18: 31:19
        return;                          // scope 0 at ui/iterators/iter-map-fold-type-length.rs:31:19: 31:19
    }
}

fn main::{closure#8}(_1: &mut [closure@ui/iterators/iter-map-fold-type-length.rs:32:14: 32:17], _2: i32) -> i32 {
    debug x => _2;                       // in scope 0 at ui/iterators/iter-map-fold-type-length.rs:32:15: 32:16
    let mut _0: i32;                     // return place in scope 0 at ui/iterators/iter-map-fold-type-length.rs:32:18: 32:18

    bb0: {
        _0 = _2;                         // scope 0 at ui/iterators/iter-map-fold-type-length.rs:32:18: 32:19
        return;                          // scope 0 at ui/iterators/iter-map-fold-type-length.rs:32:19: 32:19
    }
}

fn main::{closure#9}(_1: &mut [closure@ui/iterators/iter-map-fold-type-length.rs:33:14: 33:17], _2: i32) -> i32 {
    debug x => _2;                       // in scope 0 at ui/iterators/iter-map-fold-type-length.rs:33:15: 33:16
    let mut _0: i32;                     // return place in scope 0 at ui/iterators/iter-map-fold-type-length.rs:33:18: 33:18

    bb0: {
        _0 = _2;                         // scope 0 at ui/iterators/iter-map-fold-type-length.rs:33:18: 33:19
        return;                          // scope 0 at ui/iterators/iter-map-fold-type-length.rs:33:19: 33:19
    }
}

fn main::{closure#10}(_1: &mut [closure@ui/iterators/iter-map-fold-type-length.rs:34:14: 34:17], _2: i32) -> i32 {
    debug x => _2;                       // in scope 0 at ui/iterators/iter-map-fold-type-length.rs:34:15: 34:16
    let mut _0: i32;                     // return place in scope 0 at ui/iterators/iter-map-fold-type-length.rs:34:18: 34:18

    bb0: {
        _0 = _2;                         // scope 0 at ui/iterators/iter-map-fold-type-length.rs:34:18: 34:19
        return;                          // scope 0 at ui/iterators/iter-map-fold-type-length.rs:34:19: 34:19
    }
}

fn main::{closure#11}(_1: &mut [closure@ui/iterators/iter-map-fold-type-length.rs:35:14: 35:17], _2: i32) -> i32 {
    debug x => _2;                       // in scope 0 at ui/iterators/iter-map-fold-type-length.rs:35:15: 35:16
    let mut _0: i32;                     // return place in scope 0 at ui/iterators/iter-map-fold-type-length.rs:35:18: 35:18

    bb0: {
        _0 = _2;                         // scope 0 at ui/iterators/iter-map-fold-type-length.rs:35:18: 35:19
        return;                          // scope 0 at ui/iterators/iter-map-fold-type-length.rs:35:19: 35:19
    }
}

fn Iter(_1: I) -> Iter<I> {
    let mut _0: Iter<I>;                 // return place in scope 0 at ui/iterators/iter-map-fold-type-length.rs:9:1: 9:15

    bb0: {
        _0 = Iter::<I>(move _1);         // scope 0 at ui/iterators/iter-map-fold-type-length.rs:9:1: 9:15
        return;                          // scope 0 at ui/iterators/iter-map-fold-type-length.rs:9:1: 9:15
    }
}

// MIR FOR CTFE
fn Iter(_1: I) -> Iter<I> {
    let mut _0: Iter<I>;                 // return place in scope 0 at ui/iterators/iter-map-fold-type-length.rs:9:1: 9:15

    bb0: {
        _0 = Iter::<I>(move _1);         // scope 0 at ui/iterators/iter-map-fold-type-length.rs:9:1: 9:15
        return;                          // scope 0 at ui/iterators/iter-map-fold-type-length.rs:9:1: 9:15
    }
}
