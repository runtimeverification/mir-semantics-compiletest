// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
fn main() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/iterators/iter-sum-overflow-ndebug.rs:4:11: 4:11
    let mut _1: (&i32, &i32);            // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _2: &i32;                    // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let _3: i32;                         // in scope 0 at ui/iterators/iter-sum-overflow-ndebug.rs:5:16: 5:52
    let mut _4: std::slice::Iter<'_, i32>; // in scope 0 at ui/iterators/iter-sum-overflow-ndebug.rs:5:16: 5:39
    let mut _5: &[i32];                  // in scope 0 at ui/iterators/iter-sum-overflow-ndebug.rs:5:16: 5:39
    let mut _6: &[i32; 2];               // in scope 0 at ui/iterators/iter-sum-overflow-ndebug.rs:5:16: 5:39
    let mut _7: &i32;                    // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let _8: i32;                         // in scope 0 at ui/iterators/iter-sum-overflow-ndebug.rs:6:16: 6:43
    let _9: &i32;                        // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
    let _10: &i32;                       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
    let mut _11: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    let mut _12: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
    let mut _13: i32;                    // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
    let mut _14: i32;                    // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
    let _16: !;                          // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
    let mut _17: core::panicking::AssertKind; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
    let mut _18: &i32;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let _19: &i32;                       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let mut _20: &i32;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let _21: &i32;                       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let mut _22: std::option::Option<std::fmt::Arguments<'_>>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
    let mut _23: (&i32, &i32);           // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _24: &i32;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let _25: i32;                        // in scope 0 at ui/iterators/iter-sum-overflow-ndebug.rs:7:16: 7:56
    let mut _26: std::slice::Iter<'_, i32>; // in scope 0 at ui/iterators/iter-sum-overflow-ndebug.rs:7:16: 7:39
    let mut _27: &[i32];                 // in scope 0 at ui/iterators/iter-sum-overflow-ndebug.rs:7:16: 7:39
    let mut _28: &[i32; 2];              // in scope 0 at ui/iterators/iter-sum-overflow-ndebug.rs:7:16: 7:39
    let mut _29: &i32;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let _30: i32;                        // in scope 0 at ui/iterators/iter-sum-overflow-ndebug.rs:8:16: 8:43
    let _31: &i32;                       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
    let _32: &i32;                       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
    let mut _33: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    let mut _34: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
    let mut _35: i32;                    // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
    let mut _36: i32;                    // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
    let _38: !;                          // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
    let mut _39: core::panicking::AssertKind; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
    let mut _40: &i32;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let _41: &i32;                       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let mut _42: &i32;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let _43: &i32;                       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let mut _44: std::option::Option<std::fmt::Arguments<'_>>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
    let mut _45: (&i32, &i32);           // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _46: &i32;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let _47: i32;                        // in scope 0 at ui/iterators/iter-sum-overflow-ndebug.rs:10:16: 10:61
    let mut _48: std::iter::Cloned<std::slice::Iter<'_, i32>>; // in scope 0 at ui/iterators/iter-sum-overflow-ndebug.rs:10:16: 10:48
    let mut _49: std::slice::Iter<'_, i32>; // in scope 0 at ui/iterators/iter-sum-overflow-ndebug.rs:10:16: 10:39
    let mut _50: &[i32];                 // in scope 0 at ui/iterators/iter-sum-overflow-ndebug.rs:10:16: 10:39
    let mut _51: &[i32; 2];              // in scope 0 at ui/iterators/iter-sum-overflow-ndebug.rs:10:16: 10:39
    let mut _52: &i32;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let _53: i32;                        // in scope 0 at ui/iterators/iter-sum-overflow-ndebug.rs:11:16: 11:43
    let _54: &i32;                       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
    let _55: &i32;                       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
    let mut _56: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    let mut _57: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
    let mut _58: i32;                    // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
    let mut _59: i32;                    // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
    let _61: !;                          // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
    let mut _62: core::panicking::AssertKind; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
    let mut _63: &i32;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let _64: &i32;                       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let mut _65: &i32;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let _66: &i32;                       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let mut _67: std::option::Option<std::fmt::Arguments<'_>>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
    let mut _68: (&i32, &i32);           // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _69: &i32;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let _70: i32;                        // in scope 0 at ui/iterators/iter-sum-overflow-ndebug.rs:12:16: 12:65
    let mut _71: std::iter::Cloned<std::slice::Iter<'_, i32>>; // in scope 0 at ui/iterators/iter-sum-overflow-ndebug.rs:12:16: 12:48
    let mut _72: std::slice::Iter<'_, i32>; // in scope 0 at ui/iterators/iter-sum-overflow-ndebug.rs:12:16: 12:39
    let mut _73: &[i32];                 // in scope 0 at ui/iterators/iter-sum-overflow-ndebug.rs:12:16: 12:39
    let mut _74: &[i32; 2];              // in scope 0 at ui/iterators/iter-sum-overflow-ndebug.rs:12:16: 12:39
    let mut _75: &i32;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let _76: i32;                        // in scope 0 at ui/iterators/iter-sum-overflow-ndebug.rs:13:16: 13:43
    let _77: &i32;                       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
    let _78: &i32;                       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
    let mut _79: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    let mut _80: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
    let mut _81: i32;                    // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
    let mut _82: i32;                    // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
    let _84: !;                          // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
    let mut _85: core::panicking::AssertKind; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
    let mut _86: &i32;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let _87: &i32;                       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let mut _88: &i32;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let _89: &i32;                       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let mut _90: std::option::Option<std::fmt::Arguments<'_>>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
    let mut _91: &[i32; 2];              // in scope 0 at ui/iterators/iter-sum-overflow-ndebug.rs:12:16: 12:39
    let mut _92: &[i32; 2];              // in scope 0 at ui/iterators/iter-sum-overflow-ndebug.rs:10:16: 10:39
    let mut _93: &[i32; 2];              // in scope 0 at ui/iterators/iter-sum-overflow-ndebug.rs:7:16: 7:39
    let mut _94: &[i32; 2];              // in scope 0 at ui/iterators/iter-sum-overflow-ndebug.rs:5:16: 5:39
    scope 1 {
        debug left_val => _9;            // in scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        debug right_val => _10;          // in scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        let _15: core::panicking::AssertKind; // in scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
        scope 2 {
            debug kind => _15;           // in scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
        }
    }
    scope 3 {
        debug left_val => _31;           // in scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        debug right_val => _32;          // in scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        let _37: core::panicking::AssertKind; // in scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
        scope 4 {
            debug kind => _37;           // in scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
        }
    }
    scope 5 {
        debug left_val => _54;           // in scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        debug right_val => _55;          // in scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        let _60: core::panicking::AssertKind; // in scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
        scope 6 {
            debug kind => _60;           // in scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
        }
    }
    scope 7 {
        debug left_val => _77;           // in scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        debug right_val => _78;          // in scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        let _83: core::panicking::AssertKind; // in scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
        scope 8 {
            debug kind => _83;           // in scope 8 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
        }
    }

    bb0: {
        _94 = const _;                   // scope 0 at ui/iterators/iter-sum-overflow-ndebug.rs:5:16: 5:39
                                         // mir::Constant
                                         // + span: ui/iterators/iter-sum-overflow-ndebug.rs:5:16: 5:39
                                         // + literal: Const { ty: &[i32; 2], val: Unevaluated(main, [], Some(promoted[3])) }
        _6 = _94;                        // scope 0 at ui/iterators/iter-sum-overflow-ndebug.rs:5:16: 5:39
        _5 = move _6 as &[i32] (Pointer(Unsize)); // scope 0 at ui/iterators/iter-sum-overflow-ndebug.rs:5:16: 5:39
        _4 = core::slice::<impl [i32]>::iter(move _5) -> bb1; // scope 0 at ui/iterators/iter-sum-overflow-ndebug.rs:5:16: 5:39
                                         // mir::Constant
                                         // + span: ui/iterators/iter-sum-overflow-ndebug.rs:5:33: 5:37
                                         // + literal: Const { ty: for<'a> fn(&'a [i32]) -> std::slice::Iter<'a, i32> {core::slice::<impl [i32]>::iter}, val: Value(<ZST>) }
    }

    bb1: {
        _3 = <std::slice::Iter<'_, i32> as Iterator>::sum::<i32>(move _4) -> bb2; // scope 0 at ui/iterators/iter-sum-overflow-ndebug.rs:5:16: 5:52
                                         // mir::Constant
                                         // + span: ui/iterators/iter-sum-overflow-ndebug.rs:5:40: 5:43
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: fn(std::slice::Iter<'_, i32>) -> i32 {<std::slice::Iter<'_, i32> as Iterator>::sum::<i32>}, val: Value(<ZST>) }
    }

    bb2: {
        _2 = &_3;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _8 = core::num::<impl i32>::wrapping_add(const 1_i32, const _) -> bb3; // scope 0 at ui/iterators/iter-sum-overflow-ndebug.rs:6:16: 6:43
                                         // mir::Constant
                                         // + span: ui/iterators/iter-sum-overflow-ndebug.rs:6:21: 6:33
                                         // + literal: Const { ty: fn(i32, i32) -> i32 {core::num::<impl i32>::wrapping_add}, val: Value(<ZST>) }
    }

    bb3: {
        _7 = &_8;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _1 = (move _2, move _7);         // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _9 = (_1.0: &i32);               // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _10 = (_1.1: &i32);              // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _13 = (*_9);                     // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
        _14 = (*_10);                    // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
        _12 = Eq(move _13, move _14);    // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
        _11 = Not(move _12);             // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
        switchInt(move _11) -> [0: bb5, otherwise: bb4]; // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    }

    bb4: {
        _15 = const core::panicking::AssertKind::Eq; // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _17 = const core::panicking::AssertKind::Eq; // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _19 = _9;                        // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _18 = _19;                       // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _21 = _10;                       // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _20 = _21;                       // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _22 = Option::<Arguments<'_>>::None; // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
        _16 = core::panicking::assert_failed::<i32, i32>(move _17, move _18, move _20, move _22); // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:53
                                         // + literal: Const { ty: for<'a, 'b, 'c> fn(core::panicking::AssertKind, &'a i32, &'b i32, Option<Arguments<'c>>) -> ! {core::panicking::assert_failed::<i32, i32>}, val: Value(<ZST>) }
    }

    bb5: {
        _93 = const _;                   // scope 0 at ui/iterators/iter-sum-overflow-ndebug.rs:7:16: 7:39
                                         // mir::Constant
                                         // + span: ui/iterators/iter-sum-overflow-ndebug.rs:7:16: 7:39
                                         // + literal: Const { ty: &[i32; 2], val: Unevaluated(main, [], Some(promoted[2])) }
        _28 = _93;                       // scope 0 at ui/iterators/iter-sum-overflow-ndebug.rs:7:16: 7:39
        _27 = move _28 as &[i32] (Pointer(Unsize)); // scope 0 at ui/iterators/iter-sum-overflow-ndebug.rs:7:16: 7:39
        _26 = core::slice::<impl [i32]>::iter(move _27) -> bb6; // scope 0 at ui/iterators/iter-sum-overflow-ndebug.rs:7:16: 7:39
                                         // mir::Constant
                                         // + span: ui/iterators/iter-sum-overflow-ndebug.rs:7:33: 7:37
                                         // + literal: Const { ty: for<'a> fn(&'a [i32]) -> std::slice::Iter<'a, i32> {core::slice::<impl [i32]>::iter}, val: Value(<ZST>) }
    }

    bb6: {
        _25 = <std::slice::Iter<'_, i32> as Iterator>::product::<i32>(move _26) -> bb7; // scope 0 at ui/iterators/iter-sum-overflow-ndebug.rs:7:16: 7:56
                                         // mir::Constant
                                         // + span: ui/iterators/iter-sum-overflow-ndebug.rs:7:40: 7:47
                                         // + user_ty: UserType(1)
                                         // + literal: Const { ty: fn(std::slice::Iter<'_, i32>) -> i32 {<std::slice::Iter<'_, i32> as Iterator>::product::<i32>}, val: Value(<ZST>) }
    }

    bb7: {
        _24 = &_25;                      // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _30 = core::num::<impl i32>::wrapping_mul(const 2_i32, const _) -> bb8; // scope 0 at ui/iterators/iter-sum-overflow-ndebug.rs:8:16: 8:43
                                         // mir::Constant
                                         // + span: ui/iterators/iter-sum-overflow-ndebug.rs:8:21: 8:33
                                         // + literal: Const { ty: fn(i32, i32) -> i32 {core::num::<impl i32>::wrapping_mul}, val: Value(<ZST>) }
    }

    bb8: {
        _29 = &_30;                      // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _23 = (move _24, move _29);      // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _31 = (_23.0: &i32);             // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _32 = (_23.1: &i32);             // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _35 = (*_31);                    // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
        _36 = (*_32);                    // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
        _34 = Eq(move _35, move _36);    // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
        _33 = Not(move _34);             // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
        switchInt(move _33) -> [0: bb10, otherwise: bb9]; // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    }

    bb9: {
        _37 = const core::panicking::AssertKind::Eq; // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _39 = const core::panicking::AssertKind::Eq; // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _41 = _31;                       // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _40 = _41;                       // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _43 = _32;                       // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _42 = _43;                       // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _44 = Option::<Arguments<'_>>::None; // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
        _38 = core::panicking::assert_failed::<i32, i32>(move _39, move _40, move _42, move _44); // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:53
                                         // + literal: Const { ty: for<'a, 'b, 'c> fn(core::panicking::AssertKind, &'a i32, &'b i32, Option<Arguments<'c>>) -> ! {core::panicking::assert_failed::<i32, i32>}, val: Value(<ZST>) }
    }

    bb10: {
        _92 = const _;                   // scope 0 at ui/iterators/iter-sum-overflow-ndebug.rs:10:16: 10:39
                                         // mir::Constant
                                         // + span: ui/iterators/iter-sum-overflow-ndebug.rs:10:16: 10:39
                                         // + literal: Const { ty: &[i32; 2], val: Unevaluated(main, [], Some(promoted[1])) }
        _51 = _92;                       // scope 0 at ui/iterators/iter-sum-overflow-ndebug.rs:10:16: 10:39
        _50 = move _51 as &[i32] (Pointer(Unsize)); // scope 0 at ui/iterators/iter-sum-overflow-ndebug.rs:10:16: 10:39
        _49 = core::slice::<impl [i32]>::iter(move _50) -> bb11; // scope 0 at ui/iterators/iter-sum-overflow-ndebug.rs:10:16: 10:39
                                         // mir::Constant
                                         // + span: ui/iterators/iter-sum-overflow-ndebug.rs:10:33: 10:37
                                         // + literal: Const { ty: for<'a> fn(&'a [i32]) -> std::slice::Iter<'a, i32> {core::slice::<impl [i32]>::iter}, val: Value(<ZST>) }
    }

    bb11: {
        _48 = <std::slice::Iter<'_, i32> as Iterator>::cloned::<'_, i32>(move _49) -> bb12; // scope 0 at ui/iterators/iter-sum-overflow-ndebug.rs:10:16: 10:48
                                         // mir::Constant
                                         // + span: ui/iterators/iter-sum-overflow-ndebug.rs:10:40: 10:46
                                         // + literal: Const { ty: fn(std::slice::Iter<'_, i32>) -> Cloned<std::slice::Iter<'_, i32>> {<std::slice::Iter<'_, i32> as Iterator>::cloned::<'_, i32>}, val: Value(<ZST>) }
    }

    bb12: {
        _47 = <Cloned<std::slice::Iter<'_, i32>> as Iterator>::sum::<i32>(move _48) -> bb13; // scope 0 at ui/iterators/iter-sum-overflow-ndebug.rs:10:16: 10:61
                                         // mir::Constant
                                         // + span: ui/iterators/iter-sum-overflow-ndebug.rs:10:49: 10:52
                                         // + user_ty: UserType(2)
                                         // + literal: Const { ty: fn(Cloned<std::slice::Iter<'_, i32>>) -> i32 {<Cloned<std::slice::Iter<'_, i32>> as Iterator>::sum::<i32>}, val: Value(<ZST>) }
    }

    bb13: {
        _46 = &_47;                      // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _53 = core::num::<impl i32>::wrapping_add(const 1_i32, const _) -> bb14; // scope 0 at ui/iterators/iter-sum-overflow-ndebug.rs:11:16: 11:43
                                         // mir::Constant
                                         // + span: ui/iterators/iter-sum-overflow-ndebug.rs:11:21: 11:33
                                         // + literal: Const { ty: fn(i32, i32) -> i32 {core::num::<impl i32>::wrapping_add}, val: Value(<ZST>) }
    }

    bb14: {
        _52 = &_53;                      // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _45 = (move _46, move _52);      // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _54 = (_45.0: &i32);             // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _55 = (_45.1: &i32);             // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _58 = (*_54);                    // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
        _59 = (*_55);                    // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
        _57 = Eq(move _58, move _59);    // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
        _56 = Not(move _57);             // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
        switchInt(move _56) -> [0: bb16, otherwise: bb15]; // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    }

    bb15: {
        _60 = const core::panicking::AssertKind::Eq; // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _62 = const core::panicking::AssertKind::Eq; // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _64 = _54;                       // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _63 = _64;                       // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _66 = _55;                       // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _65 = _66;                       // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _67 = Option::<Arguments<'_>>::None; // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
        _61 = core::panicking::assert_failed::<i32, i32>(move _62, move _63, move _65, move _67); // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:53
                                         // + literal: Const { ty: for<'a, 'b, 'c> fn(core::panicking::AssertKind, &'a i32, &'b i32, Option<Arguments<'c>>) -> ! {core::panicking::assert_failed::<i32, i32>}, val: Value(<ZST>) }
    }

    bb16: {
        _91 = const _;                   // scope 0 at ui/iterators/iter-sum-overflow-ndebug.rs:12:16: 12:39
                                         // mir::Constant
                                         // + span: ui/iterators/iter-sum-overflow-ndebug.rs:12:16: 12:39
                                         // + literal: Const { ty: &[i32; 2], val: Unevaluated(main, [], Some(promoted[0])) }
        _74 = _91;                       // scope 0 at ui/iterators/iter-sum-overflow-ndebug.rs:12:16: 12:39
        _73 = move _74 as &[i32] (Pointer(Unsize)); // scope 0 at ui/iterators/iter-sum-overflow-ndebug.rs:12:16: 12:39
        _72 = core::slice::<impl [i32]>::iter(move _73) -> bb17; // scope 0 at ui/iterators/iter-sum-overflow-ndebug.rs:12:16: 12:39
                                         // mir::Constant
                                         // + span: ui/iterators/iter-sum-overflow-ndebug.rs:12:33: 12:37
                                         // + literal: Const { ty: for<'a> fn(&'a [i32]) -> std::slice::Iter<'a, i32> {core::slice::<impl [i32]>::iter}, val: Value(<ZST>) }
    }

    bb17: {
        _71 = <std::slice::Iter<'_, i32> as Iterator>::cloned::<'_, i32>(move _72) -> bb18; // scope 0 at ui/iterators/iter-sum-overflow-ndebug.rs:12:16: 12:48
                                         // mir::Constant
                                         // + span: ui/iterators/iter-sum-overflow-ndebug.rs:12:40: 12:46
                                         // + literal: Const { ty: fn(std::slice::Iter<'_, i32>) -> Cloned<std::slice::Iter<'_, i32>> {<std::slice::Iter<'_, i32> as Iterator>::cloned::<'_, i32>}, val: Value(<ZST>) }
    }

    bb18: {
        _70 = <Cloned<std::slice::Iter<'_, i32>> as Iterator>::product::<i32>(move _71) -> bb19; // scope 0 at ui/iterators/iter-sum-overflow-ndebug.rs:12:16: 12:65
                                         // mir::Constant
                                         // + span: ui/iterators/iter-sum-overflow-ndebug.rs:12:49: 12:56
                                         // + user_ty: UserType(3)
                                         // + literal: Const { ty: fn(Cloned<std::slice::Iter<'_, i32>>) -> i32 {<Cloned<std::slice::Iter<'_, i32>> as Iterator>::product::<i32>}, val: Value(<ZST>) }
    }

    bb19: {
        _69 = &_70;                      // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _76 = core::num::<impl i32>::wrapping_mul(const 2_i32, const _) -> bb20; // scope 0 at ui/iterators/iter-sum-overflow-ndebug.rs:13:16: 13:43
                                         // mir::Constant
                                         // + span: ui/iterators/iter-sum-overflow-ndebug.rs:13:21: 13:33
                                         // + literal: Const { ty: fn(i32, i32) -> i32 {core::num::<impl i32>::wrapping_mul}, val: Value(<ZST>) }
    }

    bb20: {
        _75 = &_76;                      // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _68 = (move _69, move _75);      // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _77 = (_68.0: &i32);             // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _78 = (_68.1: &i32);             // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _81 = (*_77);                    // scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
        _82 = (*_78);                    // scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
        _80 = Eq(move _81, move _82);    // scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
        _79 = Not(move _80);             // scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
        switchInt(move _79) -> [0: bb22, otherwise: bb21]; // scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    }

    bb21: {
        _83 = const core::panicking::AssertKind::Eq; // scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _85 = const core::panicking::AssertKind::Eq; // scope 8 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _87 = _77;                       // scope 8 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _86 = _87;                       // scope 8 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _89 = _78;                       // scope 8 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _88 = _89;                       // scope 8 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _90 = Option::<Arguments<'_>>::None; // scope 8 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
        _84 = core::panicking::assert_failed::<i32, i32>(move _85, move _86, move _88, move _90); // scope 8 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:53
                                         // + literal: Const { ty: for<'a, 'b, 'c> fn(core::panicking::AssertKind, &'a i32, &'b i32, Option<Arguments<'c>>) -> ! {core::panicking::assert_failed::<i32, i32>}, val: Value(<ZST>) }
    }

    bb22: {
        return;                          // scope 0 at ui/iterators/iter-sum-overflow-ndebug.rs:14:2: 14:2
    }
}

promoted[0] in main: &[i32; 2] = {
    let mut _0: &[i32; 2];               // return place in scope 0 at ui/iterators/iter-sum-overflow-ndebug.rs:12:16: 12:39
    let mut _1: [i32; 2];                // in scope 0 at ui/iterators/iter-sum-overflow-ndebug.rs:12:16: 12:32

    bb0: {
        _1 = [const 2_i32, const _];     // scope 0 at ui/iterators/iter-sum-overflow-ndebug.rs:12:16: 12:32
        _0 = &_1;                        // scope 0 at ui/iterators/iter-sum-overflow-ndebug.rs:12:16: 12:39
        return;                          // scope 0 at ui/iterators/iter-sum-overflow-ndebug.rs:12:16: 12:39
    }
}

promoted[1] in main: &[i32; 2] = {
    let mut _0: &[i32; 2];               // return place in scope 0 at ui/iterators/iter-sum-overflow-ndebug.rs:10:16: 10:39
    let mut _1: [i32; 2];                // in scope 0 at ui/iterators/iter-sum-overflow-ndebug.rs:10:16: 10:32

    bb0: {
        _1 = [const 1_i32, const _];     // scope 0 at ui/iterators/iter-sum-overflow-ndebug.rs:10:16: 10:32
        _0 = &_1;                        // scope 0 at ui/iterators/iter-sum-overflow-ndebug.rs:10:16: 10:39
        return;                          // scope 0 at ui/iterators/iter-sum-overflow-ndebug.rs:10:16: 10:39
    }
}

promoted[2] in main: &[i32; 2] = {
    let mut _0: &[i32; 2];               // return place in scope 0 at ui/iterators/iter-sum-overflow-ndebug.rs:7:16: 7:39
    let mut _1: [i32; 2];                // in scope 0 at ui/iterators/iter-sum-overflow-ndebug.rs:7:16: 7:32

    bb0: {
        _1 = [const 2_i32, const _];     // scope 0 at ui/iterators/iter-sum-overflow-ndebug.rs:7:16: 7:32
        _0 = &_1;                        // scope 0 at ui/iterators/iter-sum-overflow-ndebug.rs:7:16: 7:39
        return;                          // scope 0 at ui/iterators/iter-sum-overflow-ndebug.rs:7:16: 7:39
    }
}

promoted[3] in main: &[i32; 2] = {
    let mut _0: &[i32; 2];               // return place in scope 0 at ui/iterators/iter-sum-overflow-ndebug.rs:5:16: 5:39
    let mut _1: [i32; 2];                // in scope 0 at ui/iterators/iter-sum-overflow-ndebug.rs:5:16: 5:32

    bb0: {
        _1 = [const 1_i32, const _];     // scope 0 at ui/iterators/iter-sum-overflow-ndebug.rs:5:16: 5:32
        _0 = &_1;                        // scope 0 at ui/iterators/iter-sum-overflow-ndebug.rs:5:16: 5:39
        return;                          // scope 0 at ui/iterators/iter-sum-overflow-ndebug.rs:5:16: 5:39
    }
}
