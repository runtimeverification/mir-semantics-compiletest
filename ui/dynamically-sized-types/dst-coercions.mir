// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
fn T::dummy(_1: &Self) -> () {
    debug self => _1;
    let mut _0: ();

    bb0: {
        return;
    }
}

fn main() -> () {
    let mut _0: ();
    let _1: &dyn T;
    let mut _3: *const S;
    let mut _6: &mut S;
    let mut _7: S;
    let mut _9: *mut S;
    let mut _10: &mut S;
    let mut _11: S;
    let mut _13: &mut S;
    let mut _14: S;
    let mut _16: &S;
    let _17: &mut S;
    let mut _18: S;
    let mut _20: *const S;
    let _21: &mut S;
    let mut _22: S;
    let mut _25: &S;
    scope 1 {
        debug x => _1;
        let _2: *const dyn T;
        let mut _24: &S;
        scope 2 {
            debug x => _2;
            let _4: *const S;
            let mut _23: &S;
            scope 3 {
                debug x => _4;
                let _5: &mut dyn T;
                scope 4 {
                    debug x => _5;
                    let _8: *mut dyn T;
                    scope 5 {
                        debug x => _8;
                        let _12: *mut S;
                        scope 6 {
                            debug x => _12;
                            let _15: &dyn T;
                            scope 7 {
                                debug x => _15;
                                let _19: *const dyn T;
                                scope 8 {
                                    debug x => _19;
                                }
                            }
                        }
                    }
                }
            }
        }
    }

    bb0: {
        _25 = const _;
        _1 = _25 as &dyn T (Pointer(Unsize));
        _24 = const _;
        _3 = &raw const (*_24);
        _2 = move _3 as *const dyn T (Pointer(Unsize));
        _23 = const _;
        _4 = &raw const (*_23);
        _6 = &mut _7;
        _5 = _6 as &mut dyn T (Pointer(Unsize));
        _10 = &mut _11;
        _9 = &raw mut (*_10);
        _8 = move _9 as *mut dyn T (Pointer(Unsize));
        _13 = &mut _14;
        _12 = &raw mut (*_13);
        _17 = &mut _18;
        _16 = &(*_17);
        _15 = move _16 as &dyn T (Pointer(Unsize));
        _21 = &mut _22;
        _20 = &raw const (*_21);
        _19 = move _20 as *const dyn T (Pointer(Unsize));
        return;
    }
}

promoted[0] in main: &S = {
    let mut _0: &S;
    let mut _1: S;

    bb0: {
        _1 = S;
        _0 = &_1;
        return;
    }
}

promoted[1] in main: &S = {
    let mut _0: &S;
    let mut _1: S;

    bb0: {
        _1 = S;
        _0 = &_1;
        return;
    }
}

promoted[2] in main: &S = {
    let mut _0: &S;
    let mut _1: S;

    bb0: {
        _1 = S;
        _0 = &_1;
        return;
    }
}
