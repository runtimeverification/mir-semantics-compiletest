// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
fn main() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/deref-patterns/basic.rs:5:11: 5:11
    let _1: ();                          // in scope 0 at ui/deref-patterns/basic.rs:6:5: 6:35
    let mut _2: std::option::Option<std::string::String>; // in scope 0 at ui/deref-patterns/basic.rs:6:10: 6:34
    let mut _3: std::string::String;     // in scope 0 at ui/deref-patterns/basic.rs:6:15: 6:33
    let _4: ();                          // in scope 0 at ui/deref-patterns/basic.rs:7:5: 7:30
    let mut _5: std::option::Option<std::string::String>; // in scope 0 at ui/deref-patterns/basic.rs:7:10: 7:29
    let mut _6: std::string::String;     // in scope 0 at ui/deref-patterns/basic.rs:7:15: 7:28
    let _7: ();                          // in scope 0 at ui/deref-patterns/basic.rs:8:5: 8:15
    let mut _8: std::option::Option<std::string::String>; // in scope 0 at ui/deref-patterns/basic.rs:8:10: 8:14

    bb0: {
        _3 = <String as From<&str>>::from(const "42") -> bb1; // scope 0 at ui/deref-patterns/basic.rs:6:15: 6:33
                                         // mir::Constant
                                         // + span: ui/deref-patterns/basic.rs:6:15: 6:27
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: fn(&str) -> String {<String as From<&str>>::from}, val: Value(<ZST>) }
                                         // mir::Constant
                                         // + span: ui/deref-patterns/basic.rs:6:28: 6:32
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
    }

    bb1: {
        _2 = Option::<String>::Some(move _3); // scope 0 at ui/deref-patterns/basic.rs:6:10: 6:34
        _1 = test(move _2) -> bb2;       // scope 0 at ui/deref-patterns/basic.rs:6:5: 6:35
                                         // mir::Constant
                                         // + span: ui/deref-patterns/basic.rs:6:5: 6:9
                                         // + literal: Const { ty: fn(Option<String>) {test}, val: Value(<ZST>) }
    }

    bb2: {
        _6 = String::new() -> bb3;       // scope 0 at ui/deref-patterns/basic.rs:7:15: 7:28
                                         // mir::Constant
                                         // + span: ui/deref-patterns/basic.rs:7:15: 7:26
                                         // + literal: Const { ty: fn() -> String {String::new}, val: Value(<ZST>) }
    }

    bb3: {
        _5 = Option::<String>::Some(move _6); // scope 0 at ui/deref-patterns/basic.rs:7:10: 7:29
        _4 = test(move _5) -> bb4;       // scope 0 at ui/deref-patterns/basic.rs:7:5: 7:30
                                         // mir::Constant
                                         // + span: ui/deref-patterns/basic.rs:7:5: 7:9
                                         // + literal: Const { ty: fn(Option<String>) {test}, val: Value(<ZST>) }
    }

    bb4: {
        _8 = Option::<String>::None;     // scope 0 at ui/deref-patterns/basic.rs:8:10: 8:14
        _7 = test(move _8) -> bb5;       // scope 0 at ui/deref-patterns/basic.rs:8:5: 8:15
                                         // mir::Constant
                                         // + span: ui/deref-patterns/basic.rs:8:5: 8:9
                                         // + literal: Const { ty: fn(Option<String>) {test}, val: Value(<ZST>) }
    }

    bb5: {
        return;                          // scope 0 at ui/deref-patterns/basic.rs:9:2: 9:2
    }
}

fn test(_1: Option<String>) -> () {
    debug o => _1;                       // in scope 0 at ui/deref-patterns/basic.rs:11:9: 11:10
    let mut _0: ();                      // return place in scope 0 at ui/deref-patterns/basic.rs:11:28: 11:28
    let mut _2: &std::string::String;    // in scope 0 at ui/deref-patterns/basic.rs:13:14: 13:18
    let mut _3: &str;                    // in scope 0 at ui/deref-patterns/basic.rs:13:14: 13:18
    let mut _4: bool;                    // in scope 0 at ui/deref-patterns/basic.rs:13:14: 13:18
    let mut _5: isize;                   // in scope 0 at ui/deref-patterns/basic.rs:13:9: 13:19
    let _6: ();                          // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:62
    let mut _7: std::fmt::Arguments<'_>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _8: &[&str];                 // in scope 0 at ui/deref-patterns/basic.rs:13:32: 13:44
    let mut _9: &[&str; 1];              // in scope 0 at ui/deref-patterns/basic.rs:13:32: 13:44
    let _10: &[&str; 1];                 // in scope 0 at ui/deref-patterns/basic.rs:13:32: 13:44
    let mut _11: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _12: &[core::fmt::ArgumentV1<'_>; 0]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let _13: &[core::fmt::ArgumentV1<'_>; 0]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let _14: ();                         // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:62
    let mut _15: std::fmt::Arguments<'_>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _16: &[&str];                // in scope 0 at ui/deref-patterns/basic.rs:14:29: 14:46
    let mut _17: &[&str; 1];             // in scope 0 at ui/deref-patterns/basic.rs:14:29: 14:46
    let _18: &[&str; 1];                 // in scope 0 at ui/deref-patterns/basic.rs:14:29: 14:46
    let mut _19: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _20: &[core::fmt::ArgumentV1<'_>; 0]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let _21: &[core::fmt::ArgumentV1<'_>; 0]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let _22: ();                         // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:62
    let mut _23: std::fmt::Arguments<'_>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _24: &[&str];                // in scope 0 at ui/deref-patterns/basic.rs:15:26: 15:31
    let mut _25: &[&str; 1];             // in scope 0 at ui/deref-patterns/basic.rs:15:26: 15:31
    let _26: &[&str; 1];                 // in scope 0 at ui/deref-patterns/basic.rs:15:26: 15:31
    let mut _27: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _28: &[core::fmt::ArgumentV1<'_>; 0]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let _29: &[core::fmt::ArgumentV1<'_>; 0]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _30: &[core::fmt::ArgumentV1<'_>; 0]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _31: &[&str; 1];             // in scope 0 at ui/deref-patterns/basic.rs:15:26: 15:31
    let mut _32: &[core::fmt::ArgumentV1<'_>; 0]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _33: &[&str; 1];             // in scope 0 at ui/deref-patterns/basic.rs:14:29: 14:46
    let mut _34: &[core::fmt::ArgumentV1<'_>; 0]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _35: &[&str; 1];             // in scope 0 at ui/deref-patterns/basic.rs:13:32: 13:44

    bb0: {
        _5 = discriminant(_1);           // scope 0 at ui/deref-patterns/basic.rs:12:11: 12:12
        switchInt(move _5) -> [0: bb1, 1: bb2, otherwise: bb5]; // scope 0 at ui/deref-patterns/basic.rs:12:5: 12:12
    }

    bb1: {
        _31 = const _;                   // scope 0 at ui/deref-patterns/basic.rs:15:26: 15:31
                                         // mir::Constant
                                         // + span: ui/deref-patterns/basic.rs:15:26: 15:31
                                         // + literal: Const { ty: &[&str; 1], val: Unevaluated(test, [], Some(promoted[1])) }
        _26 = _31;                       // scope 0 at ui/deref-patterns/basic.rs:15:26: 15:31
        _25 = _26;                       // scope 0 at ui/deref-patterns/basic.rs:15:26: 15:31
        _24 = move _25 as &[&str] (Pointer(Unsize)); // scope 0 at ui/deref-patterns/basic.rs:15:26: 15:31
        _30 = const _;                   // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // + literal: Const { ty: &[core::fmt::ArgumentV1<'_>; 0], val: Unevaluated(test, [], Some(promoted[0])) }
        _29 = _30;                       // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _28 = _29;                       // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _27 = move _28 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _23 = Arguments::<'_>::new_v1(move _24, move _27) -> [return: bb10, unwind: bb13]; // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // + user_ty: UserType(2)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb2: {
        _2 = &((_1 as Some).0: std::string::String); // scope 0 at ui/deref-patterns/basic.rs:13:14: 13:18
        _3 = <String as Deref>::deref(move _2) -> bb3; // scope 0 at ui/deref-patterns/basic.rs:13:14: 13:18
                                         // mir::Constant
                                         // + span: ui/deref-patterns/basic.rs:13:14: 13:18
                                         // + literal: Const { ty: for<'a> fn(&'a String) -> &'a <String as Deref>::Target {<String as Deref>::deref}, val: Value(<ZST>) }
    }

    bb3: {
        _4 = <str as PartialEq>::eq(_3, const "42") -> [return: bb4, unwind: bb13]; // scope 0 at ui/deref-patterns/basic.rs:13:14: 13:18
                                         // mir::Constant
                                         // + span: ui/deref-patterns/basic.rs:13:14: 13:18
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a str, &'b str) -> bool {<str as PartialEq>::eq}, val: Value(<ZST>) }
                                         // mir::Constant
                                         // + span: ui/deref-patterns/basic.rs:13:14: 13:18
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
    }

    bb4: {
        switchInt(move _4) -> [0: bb8, otherwise: bb6]; // scope 0 at ui/deref-patterns/basic.rs:13:14: 13:18
    }

    bb5: {
        unreachable;                     // scope 0 at ui/deref-patterns/basic.rs:12:11: 12:12
    }

    bb6: {
        _35 = const _;                   // scope 0 at ui/deref-patterns/basic.rs:13:32: 13:44
                                         // mir::Constant
                                         // + span: ui/deref-patterns/basic.rs:13:32: 13:44
                                         // + literal: Const { ty: &[&str; 1], val: Unevaluated(test, [], Some(promoted[5])) }
        _10 = _35;                       // scope 0 at ui/deref-patterns/basic.rs:13:32: 13:44
        _9 = _10;                        // scope 0 at ui/deref-patterns/basic.rs:13:32: 13:44
        _8 = move _9 as &[&str] (Pointer(Unsize)); // scope 0 at ui/deref-patterns/basic.rs:13:32: 13:44
        _34 = const _;                   // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // + literal: Const { ty: &[core::fmt::ArgumentV1<'_>; 0], val: Unevaluated(test, [], Some(promoted[4])) }
        _13 = _34;                       // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _12 = _13;                       // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _11 = move _12 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _7 = Arguments::<'_>::new_v1(move _8, move _11) -> [return: bb7, unwind: bb13]; // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb7: {
        _6 = _print(move _7) -> [return: bb15, unwind: bb13]; // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:62
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:27
                                         // + literal: Const { ty: for<'a> fn(Arguments<'a>) {_print}, val: Value(<ZST>) }
    }

    bb8: {
        _33 = const _;                   // scope 0 at ui/deref-patterns/basic.rs:14:29: 14:46
                                         // mir::Constant
                                         // + span: ui/deref-patterns/basic.rs:14:29: 14:46
                                         // + literal: Const { ty: &[&str; 1], val: Unevaluated(test, [], Some(promoted[3])) }
        _18 = _33;                       // scope 0 at ui/deref-patterns/basic.rs:14:29: 14:46
        _17 = _18;                       // scope 0 at ui/deref-patterns/basic.rs:14:29: 14:46
        _16 = move _17 as &[&str] (Pointer(Unsize)); // scope 0 at ui/deref-patterns/basic.rs:14:29: 14:46
        _32 = const _;                   // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // + literal: Const { ty: &[core::fmt::ArgumentV1<'_>; 0], val: Unevaluated(test, [], Some(promoted[2])) }
        _21 = _32;                       // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _20 = _21;                       // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _19 = move _20 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _15 = Arguments::<'_>::new_v1(move _16, move _19) -> [return: bb9, unwind: bb13]; // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // + user_ty: UserType(1)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb9: {
        _14 = _print(move _15) -> [return: bb16, unwind: bb13]; // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:62
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:27
                                         // + literal: Const { ty: for<'a> fn(Arguments<'a>) {_print}, val: Value(<ZST>) }
    }

    bb10: {
        _22 = _print(move _23) -> [return: bb17, unwind: bb13]; // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:62
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:27
                                         // + literal: Const { ty: for<'a> fn(Arguments<'a>) {_print}, val: Value(<ZST>) }
    }

    bb11: {
        drop(_1) -> bb12;                // scope 0 at ui/deref-patterns/basic.rs:17:1: 17:2
    }

    bb12: {
        return;                          // scope 0 at ui/deref-patterns/basic.rs:17:2: 17:2
    }

    bb13 (cleanup): {
        drop(_1) -> bb14;                // scope 0 at ui/deref-patterns/basic.rs:17:1: 17:2
    }

    bb14 (cleanup): {
        resume;                          // scope 0 at ui/deref-patterns/basic.rs:11:1: 17:2
    }

    bb15: {
        goto -> bb11;                    // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:62
    }

    bb16: {
        goto -> bb11;                    // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:62
    }

    bb17: {
        goto -> bb11;                    // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:62
    }
}

promoted[0] in test: &[core::fmt::ArgumentV1<'_>; 0] = {
    let mut _0: &[core::fmt::ArgumentV1<'_>; 0]; // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _1: [core::fmt::ArgumentV1<'_>; 0]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61

    bb0: {
        _1 = [];                         // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    }
}

promoted[1] in test: &[&str; 1] = {
    let mut _0: &[&str; 1];              // return place in scope 0 at ui/deref-patterns/basic.rs:15:26: 15:31
    let mut _1: [&str; 1];               // in scope 0 at ui/deref-patterns/basic.rs:15:26: 15:31

    bb0: {
        _1 = [const "nil\n"];            // scope 0 at ui/deref-patterns/basic.rs:15:26: 15:31
                                         // mir::Constant
                                         // + span: ui/deref-patterns/basic.rs:15:26: 15:31
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at ui/deref-patterns/basic.rs:15:26: 15:31
        return;                          // scope 0 at ui/deref-patterns/basic.rs:15:26: 15:31
    }
}

promoted[2] in test: &[core::fmt::ArgumentV1<'_>; 0] = {
    let mut _0: &[core::fmt::ArgumentV1<'_>; 0]; // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _1: [core::fmt::ArgumentV1<'_>; 0]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61

    bb0: {
        _1 = [];                         // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    }
}

promoted[3] in test: &[&str; 1] = {
    let mut _0: &[&str; 1];              // return place in scope 0 at ui/deref-patterns/basic.rs:14:29: 14:46
    let mut _1: [&str; 1];               // in scope 0 at ui/deref-patterns/basic.rs:14:29: 14:46

    bb0: {
        _1 = [const "something else?\n"]; // scope 0 at ui/deref-patterns/basic.rs:14:29: 14:46
                                         // mir::Constant
                                         // + span: ui/deref-patterns/basic.rs:14:29: 14:46
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at ui/deref-patterns/basic.rs:14:29: 14:46
        return;                          // scope 0 at ui/deref-patterns/basic.rs:14:29: 14:46
    }
}

promoted[4] in test: &[core::fmt::ArgumentV1<'_>; 0] = {
    let mut _0: &[core::fmt::ArgumentV1<'_>; 0]; // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _1: [core::fmt::ArgumentV1<'_>; 0]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61

    bb0: {
        _1 = [];                         // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    }
}

promoted[5] in test: &[&str; 1] = {
    let mut _0: &[&str; 1];              // return place in scope 0 at ui/deref-patterns/basic.rs:13:32: 13:44
    let mut _1: [&str; 1];               // in scope 0 at ui/deref-patterns/basic.rs:13:32: 13:44

    bb0: {
        _1 = [const "the answer\n"];     // scope 0 at ui/deref-patterns/basic.rs:13:32: 13:44
                                         // mir::Constant
                                         // + span: ui/deref-patterns/basic.rs:13:32: 13:44
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at ui/deref-patterns/basic.rs:13:32: 13:44
        return;                          // scope 0 at ui/deref-patterns/basic.rs:13:32: 13:44
    }
}
