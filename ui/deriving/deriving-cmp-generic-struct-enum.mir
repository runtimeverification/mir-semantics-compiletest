// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
fn <impl at ui/deriving/deriving-cmp-generic-struct-enum.rs:2:10: 2:19>::eq(_1: &ES<T>, _2: &ES<T>) -> bool {
    debug self => _1;                    // in scope 0 at ui/deriving/deriving-cmp-generic-struct-enum.rs:2:10: 2:19
    debug other => _2;                   // in scope 0 at ui/deriving/deriving-cmp-generic-struct-enum.rs:2:10: 2:19
    let mut _0: bool;                    // return place in scope 0 at ui/deriving/deriving-cmp-generic-struct-enum.rs:2:10: 2:19
    let _3: isize;                       // in scope 0 at ui/deriving/deriving-cmp-generic-struct-enum.rs:2:10: 2:19
    let mut _4: &ES<T>;                  // in scope 0 at ui/deriving/deriving-cmp-generic-struct-enum.rs:2:10: 2:19
    let mut _6: &ES<T>;                  // in scope 0 at ui/deriving/deriving-cmp-generic-struct-enum.rs:2:10: 2:19
    let mut _7: bool;                    // in scope 0 at ui/deriving/deriving-cmp-generic-struct-enum.rs:2:10: 2:19
    let mut _8: isize;                   // in scope 0 at ui/deriving/deriving-cmp-generic-struct-enum.rs:2:10: 2:19
    let mut _9: isize;                   // in scope 0 at ui/deriving/deriving-cmp-generic-struct-enum.rs:2:10: 2:19
    let mut _10: bool;                   // in scope 0 at ui/deriving/deriving-cmp-generic-struct-enum.rs:2:10: 2:19
    let mut _11: (&ES<T>, &ES<T>);       // in scope 0 at ui/deriving/deriving-cmp-generic-struct-enum.rs:2:10: 2:19
    let mut _12: &ES<T>;                 // in scope 0 at ui/deriving/deriving-cmp-generic-struct-enum.rs:2:10: 2:19
    let mut _13: &ES<T>;                 // in scope 0 at ui/deriving/deriving-cmp-generic-struct-enum.rs:2:10: 2:19
    let mut _14: isize;                  // in scope 0 at ui/deriving/deriving-cmp-generic-struct-enum.rs:2:10: 2:19
    let mut _15: isize;                  // in scope 0 at ui/deriving/deriving-cmp-generic-struct-enum.rs:2:10: 2:19
    let mut _16: isize;                  // in scope 0 at ui/deriving/deriving-cmp-generic-struct-enum.rs:2:10: 2:19
    let mut _19: &T;                     // in scope 0 at ui/deriving/deriving-cmp-generic-struct-enum.rs:4:11: 4:15
    let mut _20: &T;                     // in scope 0 at ui/deriving/deriving-cmp-generic-struct-enum.rs:4:11: 4:15
    let mut _25: bool;                   // in scope 0 at ui/deriving/deriving-cmp-generic-struct-enum.rs:5:11: 5:15
    let mut _26: &T;                     // in scope 0 at ui/deriving/deriving-cmp-generic-struct-enum.rs:5:11: 5:15
    let mut _27: &T;                     // in scope 0 at ui/deriving/deriving-cmp-generic-struct-enum.rs:5:11: 5:15
    let mut _28: bool;                   // in scope 0 at ui/deriving/deriving-cmp-generic-struct-enum.rs:5:17: 5:21
    let mut _29: &T;                     // in scope 0 at ui/deriving/deriving-cmp-generic-struct-enum.rs:5:17: 5:21
    let mut _30: &T;                     // in scope 0 at ui/deriving/deriving-cmp-generic-struct-enum.rs:5:17: 5:21
    let mut _31: &ES<T>;                 // in scope 0 at ui/deriving/deriving-cmp-generic-struct-enum.rs:2:10: 2:19
    let mut _32: &ES<T>;                 // in scope 0 at ui/deriving/deriving-cmp-generic-struct-enum.rs:2:10: 2:19
    let mut _33: &ES<T>;                 // in scope 0 at ui/deriving/deriving-cmp-generic-struct-enum.rs:2:10: 2:19
    let mut _34: &ES<T>;                 // in scope 0 at ui/deriving/deriving-cmp-generic-struct-enum.rs:2:10: 2:19
    let mut _35: &ES<T>;                 // in scope 0 at ui/deriving/deriving-cmp-generic-struct-enum.rs:2:10: 2:19
    let mut _36: &ES<T>;                 // in scope 0 at ui/deriving/deriving-cmp-generic-struct-enum.rs:2:10: 2:19
    let mut _37: &ES<T>;                 // in scope 0 at ui/deriving/deriving-cmp-generic-struct-enum.rs:2:10: 2:19
    let mut _38: &ES<T>;                 // in scope 0 at ui/deriving/deriving-cmp-generic-struct-enum.rs:2:10: 2:19
    let mut _39: &ES<T>;                 // in scope 0 at ui/deriving/deriving-cmp-generic-struct-enum.rs:2:10: 2:19
    scope 1 {
        debug __self_tag => _3;          // in scope 1 at ui/deriving/deriving-cmp-generic-struct-enum.rs:2:10: 2:19
        let _5: isize;                   // in scope 1 at ui/deriving/deriving-cmp-generic-struct-enum.rs:2:10: 2:19
        scope 2 {
            debug __arg1_tag => _5;      // in scope 2 at ui/deriving/deriving-cmp-generic-struct-enum.rs:2:10: 2:19
            let _17: &T;                 // in scope 2 at ui/deriving/deriving-cmp-generic-struct-enum.rs:4:11: 4:15
            let _18: &T;                 // in scope 2 at ui/deriving/deriving-cmp-generic-struct-enum.rs:4:11: 4:15
            let _21: &T;                 // in scope 2 at ui/deriving/deriving-cmp-generic-struct-enum.rs:5:11: 5:15
            let _22: &T;                 // in scope 2 at ui/deriving/deriving-cmp-generic-struct-enum.rs:5:17: 5:21
            let _23: &T;                 // in scope 2 at ui/deriving/deriving-cmp-generic-struct-enum.rs:5:11: 5:15
            let _24: &T;                 // in scope 2 at ui/deriving/deriving-cmp-generic-struct-enum.rs:5:17: 5:21
            scope 3 {
                debug __self_0 => _17;   // in scope 3 at ui/deriving/deriving-cmp-generic-struct-enum.rs:4:11: 4:15
                debug __arg1_0 => _18;   // in scope 3 at ui/deriving/deriving-cmp-generic-struct-enum.rs:4:11: 4:15
            }
            scope 4 {
                debug __self_0 => _21;   // in scope 4 at ui/deriving/deriving-cmp-generic-struct-enum.rs:5:11: 5:15
                debug __self_1 => _22;   // in scope 4 at ui/deriving/deriving-cmp-generic-struct-enum.rs:5:17: 5:21
                debug __arg1_0 => _23;   // in scope 4 at ui/deriving/deriving-cmp-generic-struct-enum.rs:5:11: 5:15
                debug __arg1_1 => _24;   // in scope 4 at ui/deriving/deriving-cmp-generic-struct-enum.rs:5:17: 5:21
            }
            scope 5 {
            }
        }
    }

    bb0: {
        _4 = _1;                         // scope 0 at ui/deriving/deriving-cmp-generic-struct-enum.rs:2:10: 2:19
        _3 = discriminant((*_4));        // scope 0 at ui/deriving/deriving-cmp-generic-struct-enum.rs:2:10: 2:19
        _6 = _2;                         // scope 1 at ui/deriving/deriving-cmp-generic-struct-enum.rs:2:10: 2:19
        _5 = discriminant((*_6));        // scope 1 at ui/deriving/deriving-cmp-generic-struct-enum.rs:2:10: 2:19
        _8 = _3;                         // scope 2 at ui/deriving/deriving-cmp-generic-struct-enum.rs:2:10: 2:19
        _9 = _5;                         // scope 2 at ui/deriving/deriving-cmp-generic-struct-enum.rs:2:10: 2:19
        _7 = Eq(move _8, move _9);       // scope 2 at ui/deriving/deriving-cmp-generic-struct-enum.rs:2:10: 2:19
        switchInt(move _7) -> [0: bb1, otherwise: bb2]; // scope 2 at ui/deriving/deriving-cmp-generic-struct-enum.rs:2:10: 2:19
    }

    bb1: {
        _0 = const false;                // scope 2 at ui/deriving/deriving-cmp-generic-struct-enum.rs:2:10: 2:19
        goto -> bb3;                     // scope 2 at ui/deriving/deriving-cmp-generic-struct-enum.rs:2:10: 2:19
    }

    bb2: {
        _12 = _1;                        // scope 2 at ui/deriving/deriving-cmp-generic-struct-enum.rs:2:10: 2:19
        _13 = _2;                        // scope 2 at ui/deriving/deriving-cmp-generic-struct-enum.rs:2:10: 2:19
        _11 = (move _12, move _13);      // scope 2 at ui/deriving/deriving-cmp-generic-struct-enum.rs:2:10: 2:19
        _31 = deref_copy (_11.0: &ES<T>); // scope 2 at ui/deriving/deriving-cmp-generic-struct-enum.rs:2:10: 2:19
        _16 = discriminant((*_31));      // scope 2 at ui/deriving/deriving-cmp-generic-struct-enum.rs:2:10: 2:19
        switchInt(move _16) -> [0: bb4, 1: bb6, otherwise: bb5]; // scope 2 at ui/deriving/deriving-cmp-generic-struct-enum.rs:2:10: 2:19
    }

    bb3: {
        return;                          // scope 0 at ui/deriving/deriving-cmp-generic-struct-enum.rs:2:19: 2:19
    }

    bb4: {
        _32 = deref_copy (_11.1: &ES<T>); // scope 2 at ui/deriving/deriving-cmp-generic-struct-enum.rs:2:10: 2:19
        _14 = discriminant((*_32));      // scope 2 at ui/deriving/deriving-cmp-generic-struct-enum.rs:2:10: 2:19
        switchInt(move _14) -> [0: bb7, otherwise: bb5]; // scope 2 at ui/deriving/deriving-cmp-generic-struct-enum.rs:2:10: 2:19
    }

    bb5: {
        unreachable;                     // scope 5 at ui/deriving/deriving-cmp-generic-struct-enum.rs:2:10: 2:19
    }

    bb6: {
        _33 = deref_copy (_11.1: &ES<T>); // scope 2 at ui/deriving/deriving-cmp-generic-struct-enum.rs:2:10: 2:19
        _15 = discriminant((*_33));      // scope 2 at ui/deriving/deriving-cmp-generic-struct-enum.rs:2:10: 2:19
        switchInt(move _15) -> [1: bb8, otherwise: bb5]; // scope 2 at ui/deriving/deriving-cmp-generic-struct-enum.rs:2:10: 2:19
    }

    bb7: {
        _34 = deref_copy (_11.0: &ES<T>); // scope 2 at ui/deriving/deriving-cmp-generic-struct-enum.rs:4:11: 4:15
        _17 = &(((*_34) as ES1).0: T);   // scope 2 at ui/deriving/deriving-cmp-generic-struct-enum.rs:4:11: 4:15
        _35 = deref_copy (_11.1: &ES<T>); // scope 2 at ui/deriving/deriving-cmp-generic-struct-enum.rs:4:11: 4:15
        _18 = &(((*_35) as ES1).0: T);   // scope 2 at ui/deriving/deriving-cmp-generic-struct-enum.rs:4:11: 4:15
        _19 = _17;                       // scope 3 at ui/deriving/deriving-cmp-generic-struct-enum.rs:4:11: 4:15
        _20 = _18;                       // scope 3 at ui/deriving/deriving-cmp-generic-struct-enum.rs:4:11: 4:15
        _10 = <T as PartialEq>::eq(move _19, move _20) -> bb13; // scope 3 at ui/deriving/deriving-cmp-generic-struct-enum.rs:4:11: 4:15
                                         // mir::Constant
                                         // + span: ui/deriving/deriving-cmp-generic-struct-enum.rs:4:11: 4:15
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a T, &'b T) -> bool {<T as PartialEq>::eq}, val: Value(<ZST>) }
    }

    bb8: {
        _36 = deref_copy (_11.0: &ES<T>); // scope 2 at ui/deriving/deriving-cmp-generic-struct-enum.rs:5:11: 5:15
        _21 = &(((*_36) as ES2).0: T);   // scope 2 at ui/deriving/deriving-cmp-generic-struct-enum.rs:5:11: 5:15
        _37 = deref_copy (_11.0: &ES<T>); // scope 2 at ui/deriving/deriving-cmp-generic-struct-enum.rs:5:17: 5:21
        _22 = &(((*_37) as ES2).1: T);   // scope 2 at ui/deriving/deriving-cmp-generic-struct-enum.rs:5:17: 5:21
        _38 = deref_copy (_11.1: &ES<T>); // scope 2 at ui/deriving/deriving-cmp-generic-struct-enum.rs:5:11: 5:15
        _23 = &(((*_38) as ES2).0: T);   // scope 2 at ui/deriving/deriving-cmp-generic-struct-enum.rs:5:11: 5:15
        _39 = deref_copy (_11.1: &ES<T>); // scope 2 at ui/deriving/deriving-cmp-generic-struct-enum.rs:5:17: 5:21
        _24 = &(((*_39) as ES2).1: T);   // scope 2 at ui/deriving/deriving-cmp-generic-struct-enum.rs:5:17: 5:21
        _26 = _21;                       // scope 4 at ui/deriving/deriving-cmp-generic-struct-enum.rs:5:11: 5:15
        _27 = _23;                       // scope 4 at ui/deriving/deriving-cmp-generic-struct-enum.rs:5:11: 5:15
        _25 = <T as PartialEq>::eq(move _26, move _27) -> bb11; // scope 4 at ui/deriving/deriving-cmp-generic-struct-enum.rs:5:11: 5:15
                                         // mir::Constant
                                         // + span: ui/deriving/deriving-cmp-generic-struct-enum.rs:5:11: 5:15
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a T, &'b T) -> bool {<T as PartialEq>::eq}, val: Value(<ZST>) }
    }

    bb9: {
        _10 = const false;               // scope 4 at ui/deriving/deriving-cmp-generic-struct-enum.rs:5:17: 5:21
        goto -> bb13;                    // scope 4 at ui/deriving/deriving-cmp-generic-struct-enum.rs:5:17: 5:21
    }

    bb10: {
        _29 = _22;                       // scope 4 at ui/deriving/deriving-cmp-generic-struct-enum.rs:5:17: 5:21
        _30 = _24;                       // scope 4 at ui/deriving/deriving-cmp-generic-struct-enum.rs:5:17: 5:21
        _28 = <T as PartialEq>::eq(move _29, move _30) -> bb12; // scope 4 at ui/deriving/deriving-cmp-generic-struct-enum.rs:5:17: 5:21
                                         // mir::Constant
                                         // + span: ui/deriving/deriving-cmp-generic-struct-enum.rs:5:17: 5:21
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a T, &'b T) -> bool {<T as PartialEq>::eq}, val: Value(<ZST>) }
    }

    bb11: {
        switchInt(move _25) -> [0: bb9, otherwise: bb10]; // scope 4 at ui/deriving/deriving-cmp-generic-struct-enum.rs:5:17: 5:21
    }

    bb12: {
        _10 = move _28;                  // scope 4 at ui/deriving/deriving-cmp-generic-struct-enum.rs:5:17: 5:21
        goto -> bb13;                    // scope 4 at ui/deriving/deriving-cmp-generic-struct-enum.rs:5:17: 5:21
    }

    bb13: {
        _0 = move _10;                   // scope 2 at ui/deriving/deriving-cmp-generic-struct-enum.rs:2:10: 2:19
        goto -> bb3;                     // scope 2 at ui/deriving/deriving-cmp-generic-struct-enum.rs:2:10: 2:19
    }
}

fn <impl at ui/deriving/deriving-cmp-generic-struct-enum.rs:2:21: 2:23>::assert_receiver_is_total_eq(_1: &ES<T>) -> () {
    debug self => _1;                    // in scope 0 at ui/deriving/deriving-cmp-generic-struct-enum.rs:2:21: 2:23
    let mut _0: ();                      // return place in scope 0 at ui/deriving/deriving-cmp-generic-struct-enum.rs:2:21: 2:23
    scope 1 {
    }

    bb0: {
        return;                          // scope 0 at ui/deriving/deriving-cmp-generic-struct-enum.rs:2:23: 2:23
    }
}

fn <impl at ui/deriving/deriving-cmp-generic-struct-enum.rs:2:25: 2:35>::partial_cmp(_1: &ES<T>, _2: &ES<T>) -> Option<std::cmp::Ordering> {
    debug self => _1;                    // in scope 0 at ui/deriving/deriving-cmp-generic-struct-enum.rs:2:25: 2:35
    debug other => _2;                   // in scope 0 at ui/deriving/deriving-cmp-generic-struct-enum.rs:2:25: 2:35
    let mut _0: std::option::Option<std::cmp::Ordering>; // return place in scope 0 at ui/deriving/deriving-cmp-generic-struct-enum.rs:2:25: 2:35
    let _3: isize;                       // in scope 0 at ui/deriving/deriving-cmp-generic-struct-enum.rs:2:25: 2:35
    let mut _4: &ES<T>;                  // in scope 0 at ui/deriving/deriving-cmp-generic-struct-enum.rs:2:25: 2:35
    let mut _6: &ES<T>;                  // in scope 0 at ui/deriving/deriving-cmp-generic-struct-enum.rs:2:25: 2:35
    let mut _7: (&ES<T>, &ES<T>);        // in scope 0 at ui/deriving/deriving-cmp-generic-struct-enum.rs:2:25: 2:35
    let mut _8: &ES<T>;                  // in scope 0 at ui/deriving/deriving-cmp-generic-struct-enum.rs:2:25: 2:35
    let mut _9: &ES<T>;                  // in scope 0 at ui/deriving/deriving-cmp-generic-struct-enum.rs:2:25: 2:35
    let mut _10: isize;                  // in scope 0 at ui/deriving/deriving-cmp-generic-struct-enum.rs:2:25: 2:35
    let mut _11: isize;                  // in scope 0 at ui/deriving/deriving-cmp-generic-struct-enum.rs:2:25: 2:35
    let mut _12: isize;                  // in scope 0 at ui/deriving/deriving-cmp-generic-struct-enum.rs:2:25: 2:35
    let mut _15: &T;                     // in scope 0 at ui/deriving/deriving-cmp-generic-struct-enum.rs:4:11: 4:15
    let mut _16: &T;                     // in scope 0 at ui/deriving/deriving-cmp-generic-struct-enum.rs:4:11: 4:15
    let mut _21: std::option::Option<std::cmp::Ordering>; // in scope 0 at ui/deriving/deriving-cmp-generic-struct-enum.rs:5:11: 5:15
    let mut _22: &T;                     // in scope 0 at ui/deriving/deriving-cmp-generic-struct-enum.rs:5:11: 5:15
    let mut _23: &T;                     // in scope 0 at ui/deriving/deriving-cmp-generic-struct-enum.rs:5:11: 5:15
    let mut _24: i8;                     // in scope 0 at ui/deriving/deriving-cmp-generic-struct-enum.rs:5:11: 5:15
    let mut _25: isize;                  // in scope 0 at ui/deriving/deriving-cmp-generic-struct-enum.rs:5:11: 5:15
    let mut _26: &T;                     // in scope 0 at ui/deriving/deriving-cmp-generic-struct-enum.rs:5:17: 5:21
    let mut _27: &T;                     // in scope 0 at ui/deriving/deriving-cmp-generic-struct-enum.rs:5:17: 5:21
    let mut _29: &isize;                 // in scope 0 at ui/deriving/deriving-cmp-generic-struct-enum.rs:2:25: 2:35
    let _30: &isize;                     // in scope 0 at ui/deriving/deriving-cmp-generic-struct-enum.rs:2:25: 2:35
    let mut _31: &isize;                 // in scope 0 at ui/deriving/deriving-cmp-generic-struct-enum.rs:2:25: 2:35
    let _32: &isize;                     // in scope 0 at ui/deriving/deriving-cmp-generic-struct-enum.rs:2:25: 2:35
    let mut _33: &ES<T>;                 // in scope 0 at ui/deriving/deriving-cmp-generic-struct-enum.rs:2:25: 2:35
    let mut _34: &ES<T>;                 // in scope 0 at ui/deriving/deriving-cmp-generic-struct-enum.rs:2:25: 2:35
    let mut _35: &ES<T>;                 // in scope 0 at ui/deriving/deriving-cmp-generic-struct-enum.rs:2:25: 2:35
    let mut _36: &ES<T>;                 // in scope 0 at ui/deriving/deriving-cmp-generic-struct-enum.rs:2:25: 2:35
    let mut _37: &ES<T>;                 // in scope 0 at ui/deriving/deriving-cmp-generic-struct-enum.rs:2:25: 2:35
    let mut _38: &ES<T>;                 // in scope 0 at ui/deriving/deriving-cmp-generic-struct-enum.rs:2:25: 2:35
    let mut _39: &ES<T>;                 // in scope 0 at ui/deriving/deriving-cmp-generic-struct-enum.rs:2:25: 2:35
    let mut _40: &ES<T>;                 // in scope 0 at ui/deriving/deriving-cmp-generic-struct-enum.rs:2:25: 2:35
    let mut _41: &ES<T>;                 // in scope 0 at ui/deriving/deriving-cmp-generic-struct-enum.rs:2:25: 2:35
    scope 1 {
        debug __self_tag => _3;          // in scope 1 at ui/deriving/deriving-cmp-generic-struct-enum.rs:2:25: 2:35
        let _5: isize;                   // in scope 1 at ui/deriving/deriving-cmp-generic-struct-enum.rs:2:25: 2:35
        scope 2 {
            debug __arg1_tag => _5;      // in scope 2 at ui/deriving/deriving-cmp-generic-struct-enum.rs:2:25: 2:35
            let _13: &T;                 // in scope 2 at ui/deriving/deriving-cmp-generic-struct-enum.rs:4:11: 4:15
            let _14: &T;                 // in scope 2 at ui/deriving/deriving-cmp-generic-struct-enum.rs:4:11: 4:15
            let _17: &T;                 // in scope 2 at ui/deriving/deriving-cmp-generic-struct-enum.rs:5:11: 5:15
            let _18: &T;                 // in scope 2 at ui/deriving/deriving-cmp-generic-struct-enum.rs:5:17: 5:21
            let _19: &T;                 // in scope 2 at ui/deriving/deriving-cmp-generic-struct-enum.rs:5:11: 5:15
            let _20: &T;                 // in scope 2 at ui/deriving/deriving-cmp-generic-struct-enum.rs:5:17: 5:21
            scope 3 {
                debug __self_0 => _13;   // in scope 3 at ui/deriving/deriving-cmp-generic-struct-enum.rs:4:11: 4:15
                debug __arg1_0 => _14;   // in scope 3 at ui/deriving/deriving-cmp-generic-struct-enum.rs:4:11: 4:15
            }
            scope 4 {
                debug __self_0 => _17;   // in scope 4 at ui/deriving/deriving-cmp-generic-struct-enum.rs:5:11: 5:15
                debug __self_1 => _18;   // in scope 4 at ui/deriving/deriving-cmp-generic-struct-enum.rs:5:17: 5:21
                debug __arg1_0 => _19;   // in scope 4 at ui/deriving/deriving-cmp-generic-struct-enum.rs:5:11: 5:15
                debug __arg1_1 => _20;   // in scope 4 at ui/deriving/deriving-cmp-generic-struct-enum.rs:5:17: 5:21
                let _28: std::option::Option<std::cmp::Ordering>; // in scope 4 at ui/deriving/deriving-cmp-generic-struct-enum.rs:5:11: 5:15
                scope 5 {
                    debug cmp => _28;    // in scope 5 at ui/deriving/deriving-cmp-generic-struct-enum.rs:5:11: 5:15
                }
            }
        }
    }

    bb0: {
        _4 = _1;                         // scope 0 at ui/deriving/deriving-cmp-generic-struct-enum.rs:2:25: 2:35
        _3 = discriminant((*_4));        // scope 0 at ui/deriving/deriving-cmp-generic-struct-enum.rs:2:25: 2:35
        _6 = _2;                         // scope 1 at ui/deriving/deriving-cmp-generic-struct-enum.rs:2:25: 2:35
        _5 = discriminant((*_6));        // scope 1 at ui/deriving/deriving-cmp-generic-struct-enum.rs:2:25: 2:35
        _8 = _1;                         // scope 2 at ui/deriving/deriving-cmp-generic-struct-enum.rs:2:25: 2:35
        _9 = _2;                         // scope 2 at ui/deriving/deriving-cmp-generic-struct-enum.rs:2:25: 2:35
        _7 = (move _8, move _9);         // scope 2 at ui/deriving/deriving-cmp-generic-struct-enum.rs:2:25: 2:35
        _33 = deref_copy (_7.0: &ES<T>); // scope 2 at ui/deriving/deriving-cmp-generic-struct-enum.rs:2:25: 2:35
        _12 = discriminant((*_33));      // scope 2 at ui/deriving/deriving-cmp-generic-struct-enum.rs:2:25: 2:35
        switchInt(move _12) -> [0: bb1, 1: bb3, otherwise: bb2]; // scope 2 at ui/deriving/deriving-cmp-generic-struct-enum.rs:2:25: 2:35
    }

    bb1: {
        _34 = deref_copy (_7.1: &ES<T>); // scope 2 at ui/deriving/deriving-cmp-generic-struct-enum.rs:2:25: 2:35
        _10 = discriminant((*_34));      // scope 2 at ui/deriving/deriving-cmp-generic-struct-enum.rs:2:25: 2:35
        switchInt(move _10) -> [0: bb4, otherwise: bb2]; // scope 2 at ui/deriving/deriving-cmp-generic-struct-enum.rs:2:25: 2:35
    }

    bb2: {
        _30 = &_3;                       // scope 2 at ui/deriving/deriving-cmp-generic-struct-enum.rs:2:25: 2:35
        _29 = _30;                       // scope 2 at ui/deriving/deriving-cmp-generic-struct-enum.rs:2:25: 2:35
        _32 = &_5;                       // scope 2 at ui/deriving/deriving-cmp-generic-struct-enum.rs:2:25: 2:35
        _31 = _32;                       // scope 2 at ui/deriving/deriving-cmp-generic-struct-enum.rs:2:25: 2:35
        _0 = <isize as PartialOrd>::partial_cmp(move _29, move _31) -> bb10; // scope 2 at ui/deriving/deriving-cmp-generic-struct-enum.rs:2:25: 2:35
                                         // mir::Constant
                                         // + span: ui/deriving/deriving-cmp-generic-struct-enum.rs:2:25: 2:35
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a isize, &'b isize) -> Option<std::cmp::Ordering> {<isize as PartialOrd>::partial_cmp}, val: Value(<ZST>) }
    }

    bb3: {
        _35 = deref_copy (_7.1: &ES<T>); // scope 2 at ui/deriving/deriving-cmp-generic-struct-enum.rs:2:25: 2:35
        _11 = discriminant((*_35));      // scope 2 at ui/deriving/deriving-cmp-generic-struct-enum.rs:2:25: 2:35
        switchInt(move _11) -> [1: bb5, otherwise: bb2]; // scope 2 at ui/deriving/deriving-cmp-generic-struct-enum.rs:2:25: 2:35
    }

    bb4: {
        _36 = deref_copy (_7.0: &ES<T>); // scope 2 at ui/deriving/deriving-cmp-generic-struct-enum.rs:4:11: 4:15
        _13 = &(((*_36) as ES1).0: T);   // scope 2 at ui/deriving/deriving-cmp-generic-struct-enum.rs:4:11: 4:15
        _37 = deref_copy (_7.1: &ES<T>); // scope 2 at ui/deriving/deriving-cmp-generic-struct-enum.rs:4:11: 4:15
        _14 = &(((*_37) as ES1).0: T);   // scope 2 at ui/deriving/deriving-cmp-generic-struct-enum.rs:4:11: 4:15
        _15 = _13;                       // scope 3 at ui/deriving/deriving-cmp-generic-struct-enum.rs:4:11: 4:15
        _16 = _14;                       // scope 3 at ui/deriving/deriving-cmp-generic-struct-enum.rs:4:11: 4:15
        _0 = <T as PartialOrd>::partial_cmp(move _15, move _16) -> bb10; // scope 3 at ui/deriving/deriving-cmp-generic-struct-enum.rs:4:11: 4:15
                                         // mir::Constant
                                         // + span: ui/deriving/deriving-cmp-generic-struct-enum.rs:4:11: 4:15
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a T, &'b T) -> Option<std::cmp::Ordering> {<T as PartialOrd>::partial_cmp}, val: Value(<ZST>) }
    }

    bb5: {
        _38 = deref_copy (_7.0: &ES<T>); // scope 2 at ui/deriving/deriving-cmp-generic-struct-enum.rs:5:11: 5:15
        _17 = &(((*_38) as ES2).0: T);   // scope 2 at ui/deriving/deriving-cmp-generic-struct-enum.rs:5:11: 5:15
        _39 = deref_copy (_7.0: &ES<T>); // scope 2 at ui/deriving/deriving-cmp-generic-struct-enum.rs:5:17: 5:21
        _18 = &(((*_39) as ES2).1: T);   // scope 2 at ui/deriving/deriving-cmp-generic-struct-enum.rs:5:17: 5:21
        _40 = deref_copy (_7.1: &ES<T>); // scope 2 at ui/deriving/deriving-cmp-generic-struct-enum.rs:5:11: 5:15
        _19 = &(((*_40) as ES2).0: T);   // scope 2 at ui/deriving/deriving-cmp-generic-struct-enum.rs:5:11: 5:15
        _41 = deref_copy (_7.1: &ES<T>); // scope 2 at ui/deriving/deriving-cmp-generic-struct-enum.rs:5:17: 5:21
        _20 = &(((*_41) as ES2).1: T);   // scope 2 at ui/deriving/deriving-cmp-generic-struct-enum.rs:5:17: 5:21
        _22 = _17;                       // scope 4 at ui/deriving/deriving-cmp-generic-struct-enum.rs:5:11: 5:15
        _23 = _19;                       // scope 4 at ui/deriving/deriving-cmp-generic-struct-enum.rs:5:11: 5:15
        _21 = <T as PartialOrd>::partial_cmp(move _22, move _23) -> bb6; // scope 4 at ui/deriving/deriving-cmp-generic-struct-enum.rs:5:11: 5:15
                                         // mir::Constant
                                         // + span: ui/deriving/deriving-cmp-generic-struct-enum.rs:5:11: 5:15
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a T, &'b T) -> Option<std::cmp::Ordering> {<T as PartialOrd>::partial_cmp}, val: Value(<ZST>) }
    }

    bb6: {
        _25 = discriminant(_21);         // scope 4 at ui/deriving/deriving-cmp-generic-struct-enum.rs:5:11: 5:15
        switchInt(move _25) -> [1: bb8, otherwise: bb7]; // scope 4 at ui/deriving/deriving-cmp-generic-struct-enum.rs:5:11: 5:15
    }

    bb7: {
        _28 = _21;                       // scope 4 at ui/deriving/deriving-cmp-generic-struct-enum.rs:5:11: 5:15
        _0 = _28;                        // scope 5 at ui/deriving/deriving-cmp-generic-struct-enum.rs:5:11: 5:15
        goto -> bb10;                    // scope 4 at ui/deriving/deriving-cmp-generic-struct-enum.rs:5:14: 5:15
    }

    bb8: {
        _24 = discriminant(((_21 as Some).0: std::cmp::Ordering)); // scope 4 at ui/deriving/deriving-cmp-generic-struct-enum.rs:5:11: 5:15
        switchInt(move _24) -> [0: bb9, otherwise: bb7]; // scope 4 at ui/deriving/deriving-cmp-generic-struct-enum.rs:5:11: 5:15
    }

    bb9: {
        _26 = _18;                       // scope 4 at ui/deriving/deriving-cmp-generic-struct-enum.rs:5:17: 5:21
        _27 = _20;                       // scope 4 at ui/deriving/deriving-cmp-generic-struct-enum.rs:5:17: 5:21
        _0 = <T as PartialOrd>::partial_cmp(move _26, move _27) -> bb10; // scope 4 at ui/deriving/deriving-cmp-generic-struct-enum.rs:5:17: 5:21
                                         // mir::Constant
                                         // + span: ui/deriving/deriving-cmp-generic-struct-enum.rs:5:17: 5:21
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a T, &'b T) -> Option<std::cmp::Ordering> {<T as PartialOrd>::partial_cmp}, val: Value(<ZST>) }
    }

    bb10: {
        return;                          // scope 0 at ui/deriving/deriving-cmp-generic-struct-enum.rs:2:35: 2:35
    }
}

fn <impl at ui/deriving/deriving-cmp-generic-struct-enum.rs:2:37: 2:40>::cmp(_1: &ES<T>, _2: &ES<T>) -> std::cmp::Ordering {
    debug self => _1;                    // in scope 0 at ui/deriving/deriving-cmp-generic-struct-enum.rs:2:37: 2:40
    debug other => _2;                   // in scope 0 at ui/deriving/deriving-cmp-generic-struct-enum.rs:2:37: 2:40
    let mut _0: std::cmp::Ordering;      // return place in scope 0 at ui/deriving/deriving-cmp-generic-struct-enum.rs:2:37: 2:40
    let _3: isize;                       // in scope 0 at ui/deriving/deriving-cmp-generic-struct-enum.rs:2:37: 2:40
    let mut _4: &ES<T>;                  // in scope 0 at ui/deriving/deriving-cmp-generic-struct-enum.rs:2:37: 2:40
    let mut _6: &ES<T>;                  // in scope 0 at ui/deriving/deriving-cmp-generic-struct-enum.rs:2:37: 2:40
    let mut _7: std::cmp::Ordering;      // in scope 0 at ui/deriving/deriving-cmp-generic-struct-enum.rs:2:37: 2:40
    let mut _8: &isize;                  // in scope 0 at ui/deriving/deriving-cmp-generic-struct-enum.rs:2:37: 2:40
    let _9: &isize;                      // in scope 0 at ui/deriving/deriving-cmp-generic-struct-enum.rs:2:37: 2:40
    let mut _10: &isize;                 // in scope 0 at ui/deriving/deriving-cmp-generic-struct-enum.rs:2:37: 2:40
    let _11: &isize;                     // in scope 0 at ui/deriving/deriving-cmp-generic-struct-enum.rs:2:37: 2:40
    let mut _12: i8;                     // in scope 0 at ui/deriving/deriving-cmp-generic-struct-enum.rs:2:37: 2:40
    let mut _13: (&ES<T>, &ES<T>);       // in scope 0 at ui/deriving/deriving-cmp-generic-struct-enum.rs:2:37: 2:40
    let mut _14: &ES<T>;                 // in scope 0 at ui/deriving/deriving-cmp-generic-struct-enum.rs:2:37: 2:40
    let mut _15: &ES<T>;                 // in scope 0 at ui/deriving/deriving-cmp-generic-struct-enum.rs:2:37: 2:40
    let mut _16: isize;                  // in scope 0 at ui/deriving/deriving-cmp-generic-struct-enum.rs:2:37: 2:40
    let mut _17: isize;                  // in scope 0 at ui/deriving/deriving-cmp-generic-struct-enum.rs:2:37: 2:40
    let mut _18: isize;                  // in scope 0 at ui/deriving/deriving-cmp-generic-struct-enum.rs:2:37: 2:40
    let mut _21: &T;                     // in scope 0 at ui/deriving/deriving-cmp-generic-struct-enum.rs:4:11: 4:15
    let mut _22: &T;                     // in scope 0 at ui/deriving/deriving-cmp-generic-struct-enum.rs:4:11: 4:15
    let mut _27: std::cmp::Ordering;     // in scope 0 at ui/deriving/deriving-cmp-generic-struct-enum.rs:5:11: 5:15
    let mut _28: &T;                     // in scope 0 at ui/deriving/deriving-cmp-generic-struct-enum.rs:5:11: 5:15
    let mut _29: &T;                     // in scope 0 at ui/deriving/deriving-cmp-generic-struct-enum.rs:5:11: 5:15
    let mut _30: i8;                     // in scope 0 at ui/deriving/deriving-cmp-generic-struct-enum.rs:5:11: 5:15
    let mut _31: &T;                     // in scope 0 at ui/deriving/deriving-cmp-generic-struct-enum.rs:5:17: 5:21
    let mut _32: &T;                     // in scope 0 at ui/deriving/deriving-cmp-generic-struct-enum.rs:5:17: 5:21
    let mut _35: &ES<T>;                 // in scope 0 at ui/deriving/deriving-cmp-generic-struct-enum.rs:2:37: 2:40
    let mut _36: &ES<T>;                 // in scope 0 at ui/deriving/deriving-cmp-generic-struct-enum.rs:2:37: 2:40
    let mut _37: &ES<T>;                 // in scope 0 at ui/deriving/deriving-cmp-generic-struct-enum.rs:2:37: 2:40
    let mut _38: &ES<T>;                 // in scope 0 at ui/deriving/deriving-cmp-generic-struct-enum.rs:2:37: 2:40
    let mut _39: &ES<T>;                 // in scope 0 at ui/deriving/deriving-cmp-generic-struct-enum.rs:2:37: 2:40
    let mut _40: &ES<T>;                 // in scope 0 at ui/deriving/deriving-cmp-generic-struct-enum.rs:2:37: 2:40
    let mut _41: &ES<T>;                 // in scope 0 at ui/deriving/deriving-cmp-generic-struct-enum.rs:2:37: 2:40
    let mut _42: &ES<T>;                 // in scope 0 at ui/deriving/deriving-cmp-generic-struct-enum.rs:2:37: 2:40
    let mut _43: &ES<T>;                 // in scope 0 at ui/deriving/deriving-cmp-generic-struct-enum.rs:2:37: 2:40
    scope 1 {
        debug __self_tag => _3;          // in scope 1 at ui/deriving/deriving-cmp-generic-struct-enum.rs:2:37: 2:40
        let _5: isize;                   // in scope 1 at ui/deriving/deriving-cmp-generic-struct-enum.rs:2:37: 2:40
        scope 2 {
            debug __arg1_tag => _5;      // in scope 2 at ui/deriving/deriving-cmp-generic-struct-enum.rs:2:37: 2:40
            let _19: &T;                 // in scope 2 at ui/deriving/deriving-cmp-generic-struct-enum.rs:4:11: 4:15
            let _20: &T;                 // in scope 2 at ui/deriving/deriving-cmp-generic-struct-enum.rs:4:11: 4:15
            let _23: &T;                 // in scope 2 at ui/deriving/deriving-cmp-generic-struct-enum.rs:5:11: 5:15
            let _24: &T;                 // in scope 2 at ui/deriving/deriving-cmp-generic-struct-enum.rs:5:17: 5:21
            let _25: &T;                 // in scope 2 at ui/deriving/deriving-cmp-generic-struct-enum.rs:5:11: 5:15
            let _26: &T;                 // in scope 2 at ui/deriving/deriving-cmp-generic-struct-enum.rs:5:17: 5:21
            let _34: std::cmp::Ordering; // in scope 2 at ui/deriving/deriving-cmp-generic-struct-enum.rs:2:37: 2:40
            scope 3 {
                debug __self_0 => _19;   // in scope 3 at ui/deriving/deriving-cmp-generic-struct-enum.rs:4:11: 4:15
                debug __arg1_0 => _20;   // in scope 3 at ui/deriving/deriving-cmp-generic-struct-enum.rs:4:11: 4:15
            }
            scope 4 {
                debug __self_0 => _23;   // in scope 4 at ui/deriving/deriving-cmp-generic-struct-enum.rs:5:11: 5:15
                debug __self_1 => _24;   // in scope 4 at ui/deriving/deriving-cmp-generic-struct-enum.rs:5:17: 5:21
                debug __arg1_0 => _25;   // in scope 4 at ui/deriving/deriving-cmp-generic-struct-enum.rs:5:11: 5:15
                debug __arg1_1 => _26;   // in scope 4 at ui/deriving/deriving-cmp-generic-struct-enum.rs:5:17: 5:21
                let _33: std::cmp::Ordering; // in scope 4 at ui/deriving/deriving-cmp-generic-struct-enum.rs:5:11: 5:15
                scope 5 {
                    debug cmp => _33;    // in scope 5 at ui/deriving/deriving-cmp-generic-struct-enum.rs:5:11: 5:15
                }
            }
            scope 6 {
            }
            scope 7 {
                debug cmp => _34;        // in scope 7 at ui/deriving/deriving-cmp-generic-struct-enum.rs:2:37: 2:40
            }
        }
    }

    bb0: {
        _4 = _1;                         // scope 0 at ui/deriving/deriving-cmp-generic-struct-enum.rs:2:37: 2:40
        _3 = discriminant((*_4));        // scope 0 at ui/deriving/deriving-cmp-generic-struct-enum.rs:2:37: 2:40
        _6 = _2;                         // scope 1 at ui/deriving/deriving-cmp-generic-struct-enum.rs:2:37: 2:40
        _5 = discriminant((*_6));        // scope 1 at ui/deriving/deriving-cmp-generic-struct-enum.rs:2:37: 2:40
        _9 = &_3;                        // scope 2 at ui/deriving/deriving-cmp-generic-struct-enum.rs:2:37: 2:40
        _8 = _9;                         // scope 2 at ui/deriving/deriving-cmp-generic-struct-enum.rs:2:37: 2:40
        _11 = &_5;                       // scope 2 at ui/deriving/deriving-cmp-generic-struct-enum.rs:2:37: 2:40
        _10 = _11;                       // scope 2 at ui/deriving/deriving-cmp-generic-struct-enum.rs:2:37: 2:40
        _7 = <isize as Ord>::cmp(move _8, move _10) -> bb1; // scope 2 at ui/deriving/deriving-cmp-generic-struct-enum.rs:2:37: 2:40
                                         // mir::Constant
                                         // + span: ui/deriving/deriving-cmp-generic-struct-enum.rs:2:37: 2:40
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a isize, &'b isize) -> std::cmp::Ordering {<isize as Ord>::cmp}, val: Value(<ZST>) }
    }

    bb1: {
        _12 = discriminant(_7);          // scope 2 at ui/deriving/deriving-cmp-generic-struct-enum.rs:2:37: 2:40
        switchInt(move _12) -> [0: bb3, otherwise: bb2]; // scope 2 at ui/deriving/deriving-cmp-generic-struct-enum.rs:2:37: 2:40
    }

    bb2: {
        _34 = _7;                        // scope 2 at ui/deriving/deriving-cmp-generic-struct-enum.rs:2:37: 2:40
        _0 = _34;                        // scope 7 at ui/deriving/deriving-cmp-generic-struct-enum.rs:2:37: 2:40
        goto -> bb12;                    // scope 2 at ui/deriving/deriving-cmp-generic-struct-enum.rs:2:39: 2:40
    }

    bb3: {
        _14 = _1;                        // scope 2 at ui/deriving/deriving-cmp-generic-struct-enum.rs:2:37: 2:40
        _15 = _2;                        // scope 2 at ui/deriving/deriving-cmp-generic-struct-enum.rs:2:37: 2:40
        _13 = (move _14, move _15);      // scope 2 at ui/deriving/deriving-cmp-generic-struct-enum.rs:2:37: 2:40
        _35 = deref_copy (_13.0: &ES<T>); // scope 2 at ui/deriving/deriving-cmp-generic-struct-enum.rs:2:37: 2:40
        _18 = discriminant((*_35));      // scope 2 at ui/deriving/deriving-cmp-generic-struct-enum.rs:2:37: 2:40
        switchInt(move _18) -> [0: bb4, 1: bb6, otherwise: bb5]; // scope 2 at ui/deriving/deriving-cmp-generic-struct-enum.rs:2:37: 2:40
    }

    bb4: {
        _36 = deref_copy (_13.1: &ES<T>); // scope 2 at ui/deriving/deriving-cmp-generic-struct-enum.rs:2:37: 2:40
        _16 = discriminant((*_36));      // scope 2 at ui/deriving/deriving-cmp-generic-struct-enum.rs:2:37: 2:40
        switchInt(move _16) -> [0: bb7, otherwise: bb5]; // scope 2 at ui/deriving/deriving-cmp-generic-struct-enum.rs:2:37: 2:40
    }

    bb5: {
        unreachable;                     // scope 6 at ui/deriving/deriving-cmp-generic-struct-enum.rs:2:37: 2:40
    }

    bb6: {
        _37 = deref_copy (_13.1: &ES<T>); // scope 2 at ui/deriving/deriving-cmp-generic-struct-enum.rs:2:37: 2:40
        _17 = discriminant((*_37));      // scope 2 at ui/deriving/deriving-cmp-generic-struct-enum.rs:2:37: 2:40
        switchInt(move _17) -> [1: bb8, otherwise: bb5]; // scope 2 at ui/deriving/deriving-cmp-generic-struct-enum.rs:2:37: 2:40
    }

    bb7: {
        _38 = deref_copy (_13.0: &ES<T>); // scope 2 at ui/deriving/deriving-cmp-generic-struct-enum.rs:4:11: 4:15
        _19 = &(((*_38) as ES1).0: T);   // scope 2 at ui/deriving/deriving-cmp-generic-struct-enum.rs:4:11: 4:15
        _39 = deref_copy (_13.1: &ES<T>); // scope 2 at ui/deriving/deriving-cmp-generic-struct-enum.rs:4:11: 4:15
        _20 = &(((*_39) as ES1).0: T);   // scope 2 at ui/deriving/deriving-cmp-generic-struct-enum.rs:4:11: 4:15
        _21 = _19;                       // scope 3 at ui/deriving/deriving-cmp-generic-struct-enum.rs:4:11: 4:15
        _22 = _20;                       // scope 3 at ui/deriving/deriving-cmp-generic-struct-enum.rs:4:11: 4:15
        _0 = <T as Ord>::cmp(move _21, move _22) -> bb12; // scope 3 at ui/deriving/deriving-cmp-generic-struct-enum.rs:4:11: 4:15
                                         // mir::Constant
                                         // + span: ui/deriving/deriving-cmp-generic-struct-enum.rs:4:11: 4:15
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a T, &'b T) -> std::cmp::Ordering {<T as Ord>::cmp}, val: Value(<ZST>) }
    }

    bb8: {
        _40 = deref_copy (_13.0: &ES<T>); // scope 2 at ui/deriving/deriving-cmp-generic-struct-enum.rs:5:11: 5:15
        _23 = &(((*_40) as ES2).0: T);   // scope 2 at ui/deriving/deriving-cmp-generic-struct-enum.rs:5:11: 5:15
        _41 = deref_copy (_13.0: &ES<T>); // scope 2 at ui/deriving/deriving-cmp-generic-struct-enum.rs:5:17: 5:21
        _24 = &(((*_41) as ES2).1: T);   // scope 2 at ui/deriving/deriving-cmp-generic-struct-enum.rs:5:17: 5:21
        _42 = deref_copy (_13.1: &ES<T>); // scope 2 at ui/deriving/deriving-cmp-generic-struct-enum.rs:5:11: 5:15
        _25 = &(((*_42) as ES2).0: T);   // scope 2 at ui/deriving/deriving-cmp-generic-struct-enum.rs:5:11: 5:15
        _43 = deref_copy (_13.1: &ES<T>); // scope 2 at ui/deriving/deriving-cmp-generic-struct-enum.rs:5:17: 5:21
        _26 = &(((*_43) as ES2).1: T);   // scope 2 at ui/deriving/deriving-cmp-generic-struct-enum.rs:5:17: 5:21
        _28 = _23;                       // scope 4 at ui/deriving/deriving-cmp-generic-struct-enum.rs:5:11: 5:15
        _29 = _25;                       // scope 4 at ui/deriving/deriving-cmp-generic-struct-enum.rs:5:11: 5:15
        _27 = <T as Ord>::cmp(move _28, move _29) -> bb9; // scope 4 at ui/deriving/deriving-cmp-generic-struct-enum.rs:5:11: 5:15
                                         // mir::Constant
                                         // + span: ui/deriving/deriving-cmp-generic-struct-enum.rs:5:11: 5:15
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a T, &'b T) -> std::cmp::Ordering {<T as Ord>::cmp}, val: Value(<ZST>) }
    }

    bb9: {
        _30 = discriminant(_27);         // scope 4 at ui/deriving/deriving-cmp-generic-struct-enum.rs:5:11: 5:15
        switchInt(move _30) -> [0: bb11, otherwise: bb10]; // scope 4 at ui/deriving/deriving-cmp-generic-struct-enum.rs:5:11: 5:15
    }

    bb10: {
        _33 = _27;                       // scope 4 at ui/deriving/deriving-cmp-generic-struct-enum.rs:5:11: 5:15
        _0 = _33;                        // scope 5 at ui/deriving/deriving-cmp-generic-struct-enum.rs:5:11: 5:15
        goto -> bb12;                    // scope 4 at ui/deriving/deriving-cmp-generic-struct-enum.rs:5:14: 5:15
    }

    bb11: {
        _31 = _24;                       // scope 4 at ui/deriving/deriving-cmp-generic-struct-enum.rs:5:17: 5:21
        _32 = _26;                       // scope 4 at ui/deriving/deriving-cmp-generic-struct-enum.rs:5:17: 5:21
        _0 = <T as Ord>::cmp(move _31, move _32) -> bb12; // scope 4 at ui/deriving/deriving-cmp-generic-struct-enum.rs:5:17: 5:21
                                         // mir::Constant
                                         // + span: ui/deriving/deriving-cmp-generic-struct-enum.rs:5:17: 5:21
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a T, &'b T) -> std::cmp::Ordering {<T as Ord>::cmp}, val: Value(<ZST>) }
    }

    bb12: {
        return;                          // scope 0 at ui/deriving/deriving-cmp-generic-struct-enum.rs:2:40: 2:40
    }
}

fn main() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/deriving/deriving-cmp-generic-struct-enum.rs:9:15: 9:15
    let _1: ES<i32>;                     // in scope 0 at ui/deriving/deriving-cmp-generic-struct-enum.rs:10:10: 10:14
    let _2: ES<i32>;                     // in scope 0 at ui/deriving/deriving-cmp-generic-struct-enum.rs:10:16: 10:20
    let _3: ES<i32>;                     // in scope 0 at ui/deriving/deriving-cmp-generic-struct-enum.rs:10:22: 10:26
    let _4: ES<i32>;                     // in scope 0 at ui/deriving/deriving-cmp-generic-struct-enum.rs:10:28: 10:32
    let mut _5: (ES<i32>, ES<i32>, ES<i32>, ES<i32>); // in scope 0 at ui/deriving/deriving-cmp-generic-struct-enum.rs:10:36: 20:7
    let mut _6: ES<i32>;                 // in scope 0 at ui/deriving/deriving-cmp-generic-struct-enum.rs:10:37: 12:6
    let mut _7: ES<i32>;                 // in scope 0 at ui/deriving/deriving-cmp-generic-struct-enum.rs:12:8: 14:6
    let mut _8: ES<i32>;                 // in scope 0 at ui/deriving/deriving-cmp-generic-struct-enum.rs:14:8: 17:6
    let mut _9: ES<i32>;                 // in scope 0 at ui/deriving/deriving-cmp-generic-struct-enum.rs:17:8: 20:6
    let mut _11: ES<i32>;                // in scope 0 at ui/deriving/deriving-cmp-generic-struct-enum.rs:23:16: 23:20
    let mut _12: ES<i32>;                // in scope 0 at ui/deriving/deriving-cmp-generic-struct-enum.rs:23:22: 23:26
    let mut _13: ES<i32>;                // in scope 0 at ui/deriving/deriving-cmp-generic-struct-enum.rs:23:28: 23:32
    let mut _14: ES<i32>;                // in scope 0 at ui/deriving/deriving-cmp-generic-struct-enum.rs:23:34: 23:38
    let mut _15: std::iter::Enumerate<std::slice::Iter<'_, ES<i32>>>; // in scope 0 at ui/deriving/deriving-cmp-generic-struct-enum.rs:25:21: 25:43
    let mut _16: std::iter::Enumerate<std::slice::Iter<'_, ES<i32>>>; // in scope 0 at ui/deriving/deriving-cmp-generic-struct-enum.rs:25:21: 25:43
    let mut _17: std::slice::Iter<'_, ES<i32>>; // in scope 0 at ui/deriving/deriving-cmp-generic-struct-enum.rs:25:21: 25:31
    let mut _18: &[ES<i32>];             // in scope 0 at ui/deriving/deriving-cmp-generic-struct-enum.rs:25:21: 25:31
    let mut _19: &[ES<i32>; 4];          // in scope 0 at ui/deriving/deriving-cmp-generic-struct-enum.rs:25:21: 25:31
    let mut _21: std::option::Option<(usize, &ES<i32>)>; // in scope 0 at ui/deriving/deriving-cmp-generic-struct-enum.rs:25:21: 25:43
    let mut _22: &mut std::iter::Enumerate<std::slice::Iter<'_, ES<i32>>>; // in scope 0 at ui/deriving/deriving-cmp-generic-struct-enum.rs:25:21: 25:43
    let mut _23: &mut std::iter::Enumerate<std::slice::Iter<'_, ES<i32>>>; // in scope 0 at ui/deriving/deriving-cmp-generic-struct-enum.rs:25:21: 25:43
    let mut _24: isize;                  // in scope 0 at ui/deriving/deriving-cmp-generic-struct-enum.rs:25:5: 47:6
    let mut _27: std::iter::Enumerate<std::slice::Iter<'_, ES<i32>>>; // in scope 0 at ui/deriving/deriving-cmp-generic-struct-enum.rs:26:25: 26:47
    let mut _28: std::iter::Enumerate<std::slice::Iter<'_, ES<i32>>>; // in scope 0 at ui/deriving/deriving-cmp-generic-struct-enum.rs:26:25: 26:47
    let mut _29: std::slice::Iter<'_, ES<i32>>; // in scope 0 at ui/deriving/deriving-cmp-generic-struct-enum.rs:26:25: 26:35
    let mut _30: &[ES<i32>];             // in scope 0 at ui/deriving/deriving-cmp-generic-struct-enum.rs:26:25: 26:35
    let mut _31: &[ES<i32>; 4];          // in scope 0 at ui/deriving/deriving-cmp-generic-struct-enum.rs:26:25: 26:35
    let mut _33: std::option::Option<(usize, &ES<i32>)>; // in scope 0 at ui/deriving/deriving-cmp-generic-struct-enum.rs:26:25: 26:47
    let mut _34: &mut std::iter::Enumerate<std::slice::Iter<'_, ES<i32>>>; // in scope 0 at ui/deriving/deriving-cmp-generic-struct-enum.rs:26:25: 26:47
    let mut _35: &mut std::iter::Enumerate<std::slice::Iter<'_, ES<i32>>>; // in scope 0 at ui/deriving/deriving-cmp-generic-struct-enum.rs:26:25: 26:47
    let mut _36: isize;                  // in scope 0 at ui/deriving/deriving-cmp-generic-struct-enum.rs:26:9: 46:10
    let mut _40: &usize;                 // in scope 0 at ui/deriving/deriving-cmp-generic-struct-enum.rs:27:23: 27:32
    let mut _41: &usize;                 // in scope 0 at ui/deriving/deriving-cmp-generic-struct-enum.rs:27:29: 27:31
    let _42: &usize;                     // in scope 0 at ui/deriving/deriving-cmp-generic-struct-enum.rs:27:29: 27:31
    let mut _44: usize;                  // in scope 0 at ui/deriving/deriving-cmp-generic-struct-enum.rs:29:22: 29:23
    let mut _45: usize;                  // in scope 0 at ui/deriving/deriving-cmp-generic-struct-enum.rs:29:27: 29:28
    let mut _48: (bool, bool);           // in scope 0 at ui/deriving/deriving-cmp-generic-struct-enum.rs:30:28: 30:43
    let mut _49: bool;                   // in scope 0 at ui/deriving/deriving-cmp-generic-struct-enum.rs:30:29: 30:34
    let mut _50: usize;                  // in scope 0 at ui/deriving/deriving-cmp-generic-struct-enum.rs:30:29: 30:30
    let mut _51: usize;                  // in scope 0 at ui/deriving/deriving-cmp-generic-struct-enum.rs:30:33: 30:34
    let mut _52: bool;                   // in scope 0 at ui/deriving/deriving-cmp-generic-struct-enum.rs:30:36: 30:42
    let mut _53: usize;                  // in scope 0 at ui/deriving/deriving-cmp-generic-struct-enum.rs:30:36: 30:37
    let mut _54: usize;                  // in scope 0 at ui/deriving/deriving-cmp-generic-struct-enum.rs:30:41: 30:42
    let mut _57: (bool, bool);           // in scope 0 at ui/deriving/deriving-cmp-generic-struct-enum.rs:31:28: 31:43
    let mut _58: bool;                   // in scope 0 at ui/deriving/deriving-cmp-generic-struct-enum.rs:31:29: 31:34
    let mut _59: usize;                  // in scope 0 at ui/deriving/deriving-cmp-generic-struct-enum.rs:31:29: 31:30
    let mut _60: usize;                  // in scope 0 at ui/deriving/deriving-cmp-generic-struct-enum.rs:31:33: 31:34
    let mut _61: bool;                   // in scope 0 at ui/deriving/deriving-cmp-generic-struct-enum.rs:31:36: 31:42
    let mut _62: usize;                  // in scope 0 at ui/deriving/deriving-cmp-generic-struct-enum.rs:31:36: 31:37
    let mut _63: usize;                  // in scope 0 at ui/deriving/deriving-cmp-generic-struct-enum.rs:31:41: 31:42
    let mut _64: (&bool, &bool);         // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _65: &bool;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let _66: bool;                       // in scope 0 at ui/deriving/deriving-cmp-generic-struct-enum.rs:34:24: 34:36
    let mut _67: &ES<i32>;               // in scope 0 at ui/deriving/deriving-cmp-generic-struct-enum.rs:34:24: 34:28
    let mut _68: &ES<i32>;               // in scope 0 at ui/deriving/deriving-cmp-generic-struct-enum.rs:34:32: 34:36
    let mut _69: &bool;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _72: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    let mut _73: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
    let mut _74: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
    let mut _75: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
    let _77: !;                          // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
    let mut _78: core::panicking::AssertKind; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
    let mut _79: &bool;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let _80: &bool;                      // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let mut _81: &bool;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let _82: &bool;                      // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let mut _83: std::option::Option<std::fmt::Arguments<'_>>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
    let mut _84: (&bool, &bool);         // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _85: &bool;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let _86: bool;                       // in scope 0 at ui/deriving/deriving-cmp-generic-struct-enum.rs:35:24: 35:36
    let mut _87: &ES<i32>;               // in scope 0 at ui/deriving/deriving-cmp-generic-struct-enum.rs:35:24: 35:28
    let mut _88: &ES<i32>;               // in scope 0 at ui/deriving/deriving-cmp-generic-struct-enum.rs:35:32: 35:36
    let mut _89: &bool;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let _90: bool;                       // in scope 0 at ui/deriving/deriving-cmp-generic-struct-enum.rs:35:38: 35:41
    let mut _91: bool;                   // in scope 0 at ui/deriving/deriving-cmp-generic-struct-enum.rs:35:39: 35:41
    let mut _94: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    let mut _95: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
    let mut _96: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
    let mut _97: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
    let _99: !;                          // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
    let mut _100: core::panicking::AssertKind; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
    let mut _101: &bool;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let _102: &bool;                     // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let mut _103: &bool;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let _104: &bool;                     // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let mut _105: std::option::Option<std::fmt::Arguments<'_>>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
    let mut _106: (&bool, &bool);        // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _107: &bool;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let _108: bool;                      // in scope 0 at ui/deriving/deriving-cmp-generic-struct-enum.rs:38:24: 38:35
    let mut _109: &ES<i32>;              // in scope 0 at ui/deriving/deriving-cmp-generic-struct-enum.rs:38:24: 38:28
    let mut _110: &ES<i32>;              // in scope 0 at ui/deriving/deriving-cmp-generic-struct-enum.rs:38:31: 38:35
    let mut _111: &bool;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _114: bool;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    let mut _115: bool;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
    let mut _116: bool;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
    let mut _117: bool;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
    let _119: !;                         // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
    let mut _120: core::panicking::AssertKind; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
    let mut _121: &bool;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let _122: &bool;                     // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let mut _123: &bool;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let _124: &bool;                     // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let mut _125: std::option::Option<std::fmt::Arguments<'_>>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
    let mut _126: (&bool, &bool);        // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _127: &bool;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let _128: bool;                      // in scope 0 at ui/deriving/deriving-cmp-generic-struct-enum.rs:39:24: 39:35
    let mut _129: &ES<i32>;              // in scope 0 at ui/deriving/deriving-cmp-generic-struct-enum.rs:39:24: 39:28
    let mut _130: &ES<i32>;              // in scope 0 at ui/deriving/deriving-cmp-generic-struct-enum.rs:39:31: 39:35
    let mut _131: &bool;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _134: bool;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    let mut _135: bool;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
    let mut _136: bool;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
    let mut _137: bool;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
    let _139: !;                         // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
    let mut _140: core::panicking::AssertKind; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
    let mut _141: &bool;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let _142: &bool;                     // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let mut _143: &bool;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let _144: &bool;                     // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let mut _145: std::option::Option<std::fmt::Arguments<'_>>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
    let mut _146: (&bool, &bool);        // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _147: &bool;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let _148: bool;                      // in scope 0 at ui/deriving/deriving-cmp-generic-struct-enum.rs:41:24: 41:36
    let mut _149: &ES<i32>;              // in scope 0 at ui/deriving/deriving-cmp-generic-struct-enum.rs:41:24: 41:28
    let mut _150: &ES<i32>;              // in scope 0 at ui/deriving/deriving-cmp-generic-struct-enum.rs:41:32: 41:36
    let mut _151: &bool;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _154: bool;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    let mut _155: bool;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
    let mut _156: bool;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
    let mut _157: bool;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
    let _159: !;                         // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
    let mut _160: core::panicking::AssertKind; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
    let mut _161: &bool;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let _162: &bool;                     // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let mut _163: &bool;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let _164: &bool;                     // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let mut _165: std::option::Option<std::fmt::Arguments<'_>>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
    let mut _166: (&bool, &bool);        // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _167: &bool;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let _168: bool;                      // in scope 0 at ui/deriving/deriving-cmp-generic-struct-enum.rs:42:24: 42:36
    let mut _169: &ES<i32>;              // in scope 0 at ui/deriving/deriving-cmp-generic-struct-enum.rs:42:24: 42:28
    let mut _170: &ES<i32>;              // in scope 0 at ui/deriving/deriving-cmp-generic-struct-enum.rs:42:32: 42:36
    let mut _171: &bool;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _174: bool;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    let mut _175: bool;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
    let mut _176: bool;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
    let mut _177: bool;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
    let _179: !;                         // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
    let mut _180: core::panicking::AssertKind; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
    let mut _181: &bool;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let _182: &bool;                     // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let mut _183: &bool;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let _184: &bool;                     // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let mut _185: std::option::Option<std::fmt::Arguments<'_>>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
    let mut _186: (&std::cmp::Ordering, &std::cmp::Ordering); // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _187: &std::cmp::Ordering;   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let _188: std::cmp::Ordering;        // in scope 0 at ui/deriving/deriving-cmp-generic-struct-enum.rs:45:24: 45:36
    let mut _189: &ES<i32>;              // in scope 0 at ui/deriving/deriving-cmp-generic-struct-enum.rs:45:24: 45:36
    let mut _190: &ES<i32>;              // in scope 0 at ui/deriving/deriving-cmp-generic-struct-enum.rs:45:32: 45:35
    let mut _191: &std::cmp::Ordering;   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _194: bool;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    let mut _195: bool;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
    let mut _196: &std::cmp::Ordering;   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
    let mut _197: &std::cmp::Ordering;   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
    let _199: !;                         // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
    let mut _200: core::panicking::AssertKind; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
    let mut _201: &std::cmp::Ordering;   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let _202: &std::cmp::Ordering;       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let mut _203: &std::cmp::Ordering;   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let _204: &std::cmp::Ordering;       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let mut _205: std::option::Option<std::fmt::Arguments<'_>>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
    scope 1 {
        debug es11 => _1;                // in scope 1 at ui/deriving/deriving-cmp-generic-struct-enum.rs:10:10: 10:14
        debug es12 => _2;                // in scope 1 at ui/deriving/deriving-cmp-generic-struct-enum.rs:10:16: 10:20
        debug es21 => _3;                // in scope 1 at ui/deriving/deriving-cmp-generic-struct-enum.rs:10:22: 10:26
        debug es22 => _4;                // in scope 1 at ui/deriving/deriving-cmp-generic-struct-enum.rs:10:28: 10:32
        let _10: [ES<i32>; 4];           // in scope 1 at ui/deriving/deriving-cmp-generic-struct-enum.rs:23:9: 23:12
        scope 2 {
            debug ess => _10;            // in scope 2 at ui/deriving/deriving-cmp-generic-struct-enum.rs:23:9: 23:12
            let mut _20: std::iter::Enumerate<std::slice::Iter<'_, ES<i32>>>; // in scope 2 at ui/deriving/deriving-cmp-generic-struct-enum.rs:25:21: 25:43
            scope 3 {
                debug iter => _20;       // in scope 3 at ui/deriving/deriving-cmp-generic-struct-enum.rs:25:21: 25:43
                let _25: usize;          // in scope 3 at ui/deriving/deriving-cmp-generic-struct-enum.rs:25:10: 25:11
                let _26: &ES<i32>;       // in scope 3 at ui/deriving/deriving-cmp-generic-struct-enum.rs:25:13: 25:16
                scope 4 {
                    debug i => _25;      // in scope 4 at ui/deriving/deriving-cmp-generic-struct-enum.rs:25:10: 25:11
                    debug es1 => _26;    // in scope 4 at ui/deriving/deriving-cmp-generic-struct-enum.rs:25:13: 25:16
                    let mut _32: std::iter::Enumerate<std::slice::Iter<'_, ES<i32>>>; // in scope 4 at ui/deriving/deriving-cmp-generic-struct-enum.rs:26:25: 26:47
                    scope 5 {
                        debug iter => _32; // in scope 5 at ui/deriving/deriving-cmp-generic-struct-enum.rs:26:25: 26:47
                        let _37: usize;  // in scope 5 at ui/deriving/deriving-cmp-generic-struct-enum.rs:26:14: 26:15
                        let _38: &ES<i32>; // in scope 5 at ui/deriving/deriving-cmp-generic-struct-enum.rs:26:17: 26:20
                        scope 6 {
                            debug j => _37; // in scope 6 at ui/deriving/deriving-cmp-generic-struct-enum.rs:26:14: 26:15
                            debug es2 => _38; // in scope 6 at ui/deriving/deriving-cmp-generic-struct-enum.rs:26:17: 26:20
                            let _39: std::cmp::Ordering; // in scope 6 at ui/deriving/deriving-cmp-generic-struct-enum.rs:27:17: 27:20
                            scope 7 {
                                debug ord => _39; // in scope 7 at ui/deriving/deriving-cmp-generic-struct-enum.rs:27:17: 27:20
                                let _43: bool; // in scope 7 at ui/deriving/deriving-cmp-generic-struct-enum.rs:29:17: 29:19
                                scope 8 {
                                    debug eq => _43; // in scope 8 at ui/deriving/deriving-cmp-generic-struct-enum.rs:29:17: 29:19
                                    let _46: bool; // in scope 8 at ui/deriving/deriving-cmp-generic-struct-enum.rs:30:18: 30:20
                                    let _47: bool; // in scope 8 at ui/deriving/deriving-cmp-generic-struct-enum.rs:30:22: 30:24
                                    scope 9 {
                                        debug lt => _46; // in scope 9 at ui/deriving/deriving-cmp-generic-struct-enum.rs:30:18: 30:20
                                        debug le => _47; // in scope 9 at ui/deriving/deriving-cmp-generic-struct-enum.rs:30:22: 30:24
                                        let _55: bool; // in scope 9 at ui/deriving/deriving-cmp-generic-struct-enum.rs:31:18: 31:20
                                        let _56: bool; // in scope 9 at ui/deriving/deriving-cmp-generic-struct-enum.rs:31:22: 31:24
                                        scope 10 {
                                            debug gt => _55; // in scope 10 at ui/deriving/deriving-cmp-generic-struct-enum.rs:31:18: 31:20
                                            debug ge => _56; // in scope 10 at ui/deriving/deriving-cmp-generic-struct-enum.rs:31:22: 31:24
                                            let _70: &bool; // in scope 10 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
                                            let _71: &bool; // in scope 10 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
                                            let _92: &bool; // in scope 10 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
                                            let _93: &bool; // in scope 10 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
                                            let _112: &bool; // in scope 10 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
                                            let _113: &bool; // in scope 10 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
                                            let _132: &bool; // in scope 10 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
                                            let _133: &bool; // in scope 10 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
                                            let _152: &bool; // in scope 10 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
                                            let _153: &bool; // in scope 10 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
                                            let _172: &bool; // in scope 10 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
                                            let _173: &bool; // in scope 10 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
                                            let _192: &std::cmp::Ordering; // in scope 10 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
                                            let _193: &std::cmp::Ordering; // in scope 10 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
                                            scope 11 {
                                                debug left_val => _70; // in scope 11 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
                                                debug right_val => _71; // in scope 11 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
                                                let _76: core::panicking::AssertKind; // in scope 11 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                                                scope 12 {
                                                    debug kind => _76; // in scope 12 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                                                }
                                            }
                                            scope 13 {
                                                debug left_val => _92; // in scope 13 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
                                                debug right_val => _93; // in scope 13 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
                                                let _98: core::panicking::AssertKind; // in scope 13 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                                                scope 14 {
                                                    debug kind => _98; // in scope 14 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                                                }
                                            }
                                            scope 15 {
                                                debug left_val => _112; // in scope 15 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
                                                debug right_val => _113; // in scope 15 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
                                                let _118: core::panicking::AssertKind; // in scope 15 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                                                scope 16 {
                                                    debug kind => _118; // in scope 16 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                                                }
                                            }
                                            scope 17 {
                                                debug left_val => _132; // in scope 17 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
                                                debug right_val => _133; // in scope 17 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
                                                let _138: core::panicking::AssertKind; // in scope 17 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                                                scope 18 {
                                                    debug kind => _138; // in scope 18 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                                                }
                                            }
                                            scope 19 {
                                                debug left_val => _152; // in scope 19 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
                                                debug right_val => _153; // in scope 19 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
                                                let _158: core::panicking::AssertKind; // in scope 19 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                                                scope 20 {
                                                    debug kind => _158; // in scope 20 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                                                }
                                            }
                                            scope 21 {
                                                debug left_val => _172; // in scope 21 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
                                                debug right_val => _173; // in scope 21 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
                                                let _178: core::panicking::AssertKind; // in scope 21 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                                                scope 22 {
                                                    debug kind => _178; // in scope 22 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                                                }
                                            }
                                            scope 23 {
                                                debug left_val => _192; // in scope 23 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
                                                debug right_val => _193; // in scope 23 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
                                                let _198: core::panicking::AssertKind; // in scope 23 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                                                scope 24 {
                                                    debug kind => _198; // in scope 24 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    }

    bb0: {
        _6 = ES::<i32>::ES1 { x: const 1_i32 }; // scope 0 at ui/deriving/deriving-cmp-generic-struct-enum.rs:10:37: 12:6
        _7 = ES::<i32>::ES1 { x: const 2_i32 }; // scope 0 at ui/deriving/deriving-cmp-generic-struct-enum.rs:12:8: 14:6
        _8 = ES::<i32>::ES2 { x: const 1_i32, y: const 1_i32 }; // scope 0 at ui/deriving/deriving-cmp-generic-struct-enum.rs:14:8: 17:6
        _9 = ES::<i32>::ES2 { x: const 1_i32, y: const 2_i32 }; // scope 0 at ui/deriving/deriving-cmp-generic-struct-enum.rs:17:8: 20:6
        _5 = (move _6, move _7, move _8, move _9); // scope 0 at ui/deriving/deriving-cmp-generic-struct-enum.rs:10:36: 20:7
        _1 = move (_5.0: ES<i32>);       // scope 0 at ui/deriving/deriving-cmp-generic-struct-enum.rs:10:10: 10:14
        _2 = move (_5.1: ES<i32>);       // scope 0 at ui/deriving/deriving-cmp-generic-struct-enum.rs:10:16: 10:20
        _3 = move (_5.2: ES<i32>);       // scope 0 at ui/deriving/deriving-cmp-generic-struct-enum.rs:10:22: 10:26
        _4 = move (_5.3: ES<i32>);       // scope 0 at ui/deriving/deriving-cmp-generic-struct-enum.rs:10:28: 10:32
        _11 = move _1;                   // scope 1 at ui/deriving/deriving-cmp-generic-struct-enum.rs:23:16: 23:20
        _12 = move _2;                   // scope 1 at ui/deriving/deriving-cmp-generic-struct-enum.rs:23:22: 23:26
        _13 = move _3;                   // scope 1 at ui/deriving/deriving-cmp-generic-struct-enum.rs:23:28: 23:32
        _14 = move _4;                   // scope 1 at ui/deriving/deriving-cmp-generic-struct-enum.rs:23:34: 23:38
        _10 = [move _11, move _12, move _13, move _14]; // scope 1 at ui/deriving/deriving-cmp-generic-struct-enum.rs:23:15: 23:39
        _19 = &_10;                      // scope 2 at ui/deriving/deriving-cmp-generic-struct-enum.rs:25:21: 25:31
        _18 = move _19 as &[ES<i32>] (Pointer(Unsize)); // scope 2 at ui/deriving/deriving-cmp-generic-struct-enum.rs:25:21: 25:31
        _17 = core::slice::<impl [ES<i32>]>::iter(move _18) -> bb1; // scope 2 at ui/deriving/deriving-cmp-generic-struct-enum.rs:25:21: 25:31
                                         // mir::Constant
                                         // + span: ui/deriving/deriving-cmp-generic-struct-enum.rs:25:25: 25:29
                                         // + literal: Const { ty: for<'a> fn(&'a [ES<i32>]) -> std::slice::Iter<'a, ES<i32>> {core::slice::<impl [ES<i32>]>::iter}, val: Value(<ZST>) }
    }

    bb1: {
        _16 = <std::slice::Iter<'_, ES<i32>> as Iterator>::enumerate(move _17) -> bb2; // scope 2 at ui/deriving/deriving-cmp-generic-struct-enum.rs:25:21: 25:43
                                         // mir::Constant
                                         // + span: ui/deriving/deriving-cmp-generic-struct-enum.rs:25:32: 25:41
                                         // + literal: Const { ty: fn(std::slice::Iter<'_, ES<i32>>) -> Enumerate<std::slice::Iter<'_, ES<i32>>> {<std::slice::Iter<'_, ES<i32>> as Iterator>::enumerate}, val: Value(<ZST>) }
    }

    bb2: {
        _15 = <Enumerate<std::slice::Iter<'_, ES<i32>>> as IntoIterator>::into_iter(move _16) -> bb3; // scope 2 at ui/deriving/deriving-cmp-generic-struct-enum.rs:25:21: 25:43
                                         // mir::Constant
                                         // + span: ui/deriving/deriving-cmp-generic-struct-enum.rs:25:21: 25:43
                                         // + literal: Const { ty: fn(Enumerate<std::slice::Iter<'_, ES<i32>>>) -> <Enumerate<std::slice::Iter<'_, ES<i32>>> as IntoIterator>::IntoIter {<Enumerate<std::slice::Iter<'_, ES<i32>>> as IntoIterator>::into_iter}, val: Value(<ZST>) }
    }

    bb3: {
        _20 = move _15;                  // scope 2 at ui/deriving/deriving-cmp-generic-struct-enum.rs:25:21: 25:43
        goto -> bb4;                     // scope 3 at ui/deriving/deriving-cmp-generic-struct-enum.rs:25:5: 47:6
    }

    bb4: {
        _23 = &mut _20;                  // scope 3 at ui/deriving/deriving-cmp-generic-struct-enum.rs:25:21: 25:43
        _22 = &mut (*_23);               // scope 3 at ui/deriving/deriving-cmp-generic-struct-enum.rs:25:21: 25:43
        _21 = <Enumerate<std::slice::Iter<'_, ES<i32>>> as Iterator>::next(move _22) -> bb5; // scope 3 at ui/deriving/deriving-cmp-generic-struct-enum.rs:25:21: 25:43
                                         // mir::Constant
                                         // + span: ui/deriving/deriving-cmp-generic-struct-enum.rs:25:21: 25:43
                                         // + literal: Const { ty: for<'a> fn(&'a mut Enumerate<std::slice::Iter<'_, ES<i32>>>) -> Option<<Enumerate<std::slice::Iter<'_, ES<i32>>> as Iterator>::Item> {<Enumerate<std::slice::Iter<'_, ES<i32>>> as Iterator>::next}, val: Value(<ZST>) }
    }

    bb5: {
        _24 = discriminant(_21);         // scope 3 at ui/deriving/deriving-cmp-generic-struct-enum.rs:25:21: 25:43
        switchInt(move _24) -> [0: bb8, 1: bb6, otherwise: bb7]; // scope 3 at ui/deriving/deriving-cmp-generic-struct-enum.rs:25:21: 25:43
    }

    bb6: {
        _25 = (((_21 as Some).0: (usize, &ES<i32>)).0: usize); // scope 3 at ui/deriving/deriving-cmp-generic-struct-enum.rs:25:10: 25:11
        _26 = (((_21 as Some).0: (usize, &ES<i32>)).1: &ES<i32>); // scope 3 at ui/deriving/deriving-cmp-generic-struct-enum.rs:25:13: 25:16
        _31 = &_10;                      // scope 4 at ui/deriving/deriving-cmp-generic-struct-enum.rs:26:25: 26:35
        _30 = move _31 as &[ES<i32>] (Pointer(Unsize)); // scope 4 at ui/deriving/deriving-cmp-generic-struct-enum.rs:26:25: 26:35
        _29 = core::slice::<impl [ES<i32>]>::iter(move _30) -> bb9; // scope 4 at ui/deriving/deriving-cmp-generic-struct-enum.rs:26:25: 26:35
                                         // mir::Constant
                                         // + span: ui/deriving/deriving-cmp-generic-struct-enum.rs:26:29: 26:33
                                         // + literal: Const { ty: for<'a> fn(&'a [ES<i32>]) -> std::slice::Iter<'a, ES<i32>> {core::slice::<impl [ES<i32>]>::iter}, val: Value(<ZST>) }
    }

    bb7: {
        unreachable;                     // scope 3 at ui/deriving/deriving-cmp-generic-struct-enum.rs:25:21: 25:43
    }

    bb8: {
        return;                          // scope 0 at ui/deriving/deriving-cmp-generic-struct-enum.rs:48:2: 48:2
    }

    bb9: {
        _28 = <std::slice::Iter<'_, ES<i32>> as Iterator>::enumerate(move _29) -> bb10; // scope 4 at ui/deriving/deriving-cmp-generic-struct-enum.rs:26:25: 26:47
                                         // mir::Constant
                                         // + span: ui/deriving/deriving-cmp-generic-struct-enum.rs:26:36: 26:45
                                         // + literal: Const { ty: fn(std::slice::Iter<'_, ES<i32>>) -> Enumerate<std::slice::Iter<'_, ES<i32>>> {<std::slice::Iter<'_, ES<i32>> as Iterator>::enumerate}, val: Value(<ZST>) }
    }

    bb10: {
        _27 = <Enumerate<std::slice::Iter<'_, ES<i32>>> as IntoIterator>::into_iter(move _28) -> bb11; // scope 4 at ui/deriving/deriving-cmp-generic-struct-enum.rs:26:25: 26:47
                                         // mir::Constant
                                         // + span: ui/deriving/deriving-cmp-generic-struct-enum.rs:26:25: 26:47
                                         // + literal: Const { ty: fn(Enumerate<std::slice::Iter<'_, ES<i32>>>) -> <Enumerate<std::slice::Iter<'_, ES<i32>>> as IntoIterator>::IntoIter {<Enumerate<std::slice::Iter<'_, ES<i32>>> as IntoIterator>::into_iter}, val: Value(<ZST>) }
    }

    bb11: {
        _32 = move _27;                  // scope 4 at ui/deriving/deriving-cmp-generic-struct-enum.rs:26:25: 26:47
        goto -> bb12;                    // scope 5 at ui/deriving/deriving-cmp-generic-struct-enum.rs:26:9: 46:10
    }

    bb12: {
        _35 = &mut _32;                  // scope 5 at ui/deriving/deriving-cmp-generic-struct-enum.rs:26:25: 26:47
        _34 = &mut (*_35);               // scope 5 at ui/deriving/deriving-cmp-generic-struct-enum.rs:26:25: 26:47
        _33 = <Enumerate<std::slice::Iter<'_, ES<i32>>> as Iterator>::next(move _34) -> bb13; // scope 5 at ui/deriving/deriving-cmp-generic-struct-enum.rs:26:25: 26:47
                                         // mir::Constant
                                         // + span: ui/deriving/deriving-cmp-generic-struct-enum.rs:26:25: 26:47
                                         // + literal: Const { ty: for<'a> fn(&'a mut Enumerate<std::slice::Iter<'_, ES<i32>>>) -> Option<<Enumerate<std::slice::Iter<'_, ES<i32>>> as Iterator>::Item> {<Enumerate<std::slice::Iter<'_, ES<i32>>> as Iterator>::next}, val: Value(<ZST>) }
    }

    bb13: {
        _36 = discriminant(_33);         // scope 5 at ui/deriving/deriving-cmp-generic-struct-enum.rs:26:25: 26:47
        switchInt(move _36) -> [0: bb4, 1: bb14, otherwise: bb15]; // scope 5 at ui/deriving/deriving-cmp-generic-struct-enum.rs:26:25: 26:47
    }

    bb14: {
        _37 = (((_33 as Some).0: (usize, &ES<i32>)).0: usize); // scope 5 at ui/deriving/deriving-cmp-generic-struct-enum.rs:26:14: 26:15
        _38 = (((_33 as Some).0: (usize, &ES<i32>)).1: &ES<i32>); // scope 5 at ui/deriving/deriving-cmp-generic-struct-enum.rs:26:17: 26:20
        _40 = &_25;                      // scope 6 at ui/deriving/deriving-cmp-generic-struct-enum.rs:27:23: 27:32
        _42 = &_37;                      // scope 6 at ui/deriving/deriving-cmp-generic-struct-enum.rs:27:29: 27:31
        _41 = _42;                       // scope 6 at ui/deriving/deriving-cmp-generic-struct-enum.rs:27:29: 27:31
        _39 = <usize as Ord>::cmp(move _40, move _41) -> bb16; // scope 6 at ui/deriving/deriving-cmp-generic-struct-enum.rs:27:23: 27:32
                                         // mir::Constant
                                         // + span: ui/deriving/deriving-cmp-generic-struct-enum.rs:27:25: 27:28
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a usize, &'b usize) -> std::cmp::Ordering {<usize as Ord>::cmp}, val: Value(<ZST>) }
    }

    bb15: {
        unreachable;                     // scope 5 at ui/deriving/deriving-cmp-generic-struct-enum.rs:26:25: 26:47
    }

    bb16: {
        _44 = _25;                       // scope 7 at ui/deriving/deriving-cmp-generic-struct-enum.rs:29:22: 29:23
        _45 = _37;                       // scope 7 at ui/deriving/deriving-cmp-generic-struct-enum.rs:29:27: 29:28
        _43 = Eq(move _44, move _45);    // scope 7 at ui/deriving/deriving-cmp-generic-struct-enum.rs:29:22: 29:28
        _50 = _25;                       // scope 8 at ui/deriving/deriving-cmp-generic-struct-enum.rs:30:29: 30:30
        _51 = _37;                       // scope 8 at ui/deriving/deriving-cmp-generic-struct-enum.rs:30:33: 30:34
        _49 = Lt(move _50, move _51);    // scope 8 at ui/deriving/deriving-cmp-generic-struct-enum.rs:30:29: 30:34
        _53 = _25;                       // scope 8 at ui/deriving/deriving-cmp-generic-struct-enum.rs:30:36: 30:37
        _54 = _37;                       // scope 8 at ui/deriving/deriving-cmp-generic-struct-enum.rs:30:41: 30:42
        _52 = Le(move _53, move _54);    // scope 8 at ui/deriving/deriving-cmp-generic-struct-enum.rs:30:36: 30:42
        _48 = (move _49, move _52);      // scope 8 at ui/deriving/deriving-cmp-generic-struct-enum.rs:30:28: 30:43
        _46 = (_48.0: bool);             // scope 8 at ui/deriving/deriving-cmp-generic-struct-enum.rs:30:18: 30:20
        _47 = (_48.1: bool);             // scope 8 at ui/deriving/deriving-cmp-generic-struct-enum.rs:30:22: 30:24
        _59 = _25;                       // scope 9 at ui/deriving/deriving-cmp-generic-struct-enum.rs:31:29: 31:30
        _60 = _37;                       // scope 9 at ui/deriving/deriving-cmp-generic-struct-enum.rs:31:33: 31:34
        _58 = Gt(move _59, move _60);    // scope 9 at ui/deriving/deriving-cmp-generic-struct-enum.rs:31:29: 31:34
        _62 = _25;                       // scope 9 at ui/deriving/deriving-cmp-generic-struct-enum.rs:31:36: 31:37
        _63 = _37;                       // scope 9 at ui/deriving/deriving-cmp-generic-struct-enum.rs:31:41: 31:42
        _61 = Ge(move _62, move _63);    // scope 9 at ui/deriving/deriving-cmp-generic-struct-enum.rs:31:36: 31:42
        _57 = (move _58, move _61);      // scope 9 at ui/deriving/deriving-cmp-generic-struct-enum.rs:31:28: 31:43
        _55 = (_57.0: bool);             // scope 9 at ui/deriving/deriving-cmp-generic-struct-enum.rs:31:18: 31:20
        _56 = (_57.1: bool);             // scope 9 at ui/deriving/deriving-cmp-generic-struct-enum.rs:31:22: 31:24
        _67 = _26;                       // scope 10 at ui/deriving/deriving-cmp-generic-struct-enum.rs:34:24: 34:28
        _68 = _38;                       // scope 10 at ui/deriving/deriving-cmp-generic-struct-enum.rs:34:32: 34:36
        _66 = <ES<i32> as PartialEq>::eq(move _67, move _68) -> bb17; // scope 10 at ui/deriving/deriving-cmp-generic-struct-enum.rs:34:24: 34:36
                                         // mir::Constant
                                         // + span: ui/deriving/deriving-cmp-generic-struct-enum.rs:34:24: 34:36
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a ES<i32>, &'b ES<i32>) -> bool {<ES<i32> as PartialEq>::eq}, val: Value(<ZST>) }
    }

    bb17: {
        _65 = &_66;                      // scope 10 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _69 = &_43;                      // scope 10 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _64 = (move _65, move _69);      // scope 10 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _70 = (_64.0: &bool);            // scope 10 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _71 = (_64.1: &bool);            // scope 10 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _74 = (*_70);                    // scope 11 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
        _75 = (*_71);                    // scope 11 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
        _73 = Eq(move _74, move _75);    // scope 11 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
        _72 = Not(move _73);             // scope 11 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
        switchInt(move _72) -> [0: bb19, otherwise: bb18]; // scope 11 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    }

    bb18: {
        _76 = const core::panicking::AssertKind::Eq; // scope 11 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _78 = const core::panicking::AssertKind::Eq; // scope 12 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _80 = _70;                       // scope 12 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _79 = _80;                       // scope 12 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _82 = _71;                       // scope 12 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _81 = _82;                       // scope 12 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _83 = Option::<Arguments<'_>>::None; // scope 12 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
        _77 = core::panicking::assert_failed::<bool, bool>(move _78, move _79, move _81, move _83); // scope 12 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:53
                                         // + literal: Const { ty: for<'a, 'b, 'c> fn(core::panicking::AssertKind, &'a bool, &'b bool, Option<Arguments<'c>>) -> ! {core::panicking::assert_failed::<bool, bool>}, val: Value(<ZST>) }
    }

    bb19: {
        _87 = _26;                       // scope 10 at ui/deriving/deriving-cmp-generic-struct-enum.rs:35:24: 35:28
        _88 = _38;                       // scope 10 at ui/deriving/deriving-cmp-generic-struct-enum.rs:35:32: 35:36
        _86 = <ES<i32> as PartialEq>::ne(move _87, move _88) -> bb20; // scope 10 at ui/deriving/deriving-cmp-generic-struct-enum.rs:35:24: 35:36
                                         // mir::Constant
                                         // + span: ui/deriving/deriving-cmp-generic-struct-enum.rs:35:24: 35:36
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a ES<i32>, &'b ES<i32>) -> bool {<ES<i32> as PartialEq>::ne}, val: Value(<ZST>) }
    }

    bb20: {
        _85 = &_86;                      // scope 10 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _91 = _43;                       // scope 10 at ui/deriving/deriving-cmp-generic-struct-enum.rs:35:39: 35:41
        _90 = Not(move _91);             // scope 10 at ui/deriving/deriving-cmp-generic-struct-enum.rs:35:38: 35:41
        _89 = &_90;                      // scope 10 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _84 = (move _85, move _89);      // scope 10 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _92 = (_84.0: &bool);            // scope 10 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _93 = (_84.1: &bool);            // scope 10 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _96 = (*_92);                    // scope 13 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
        _97 = (*_93);                    // scope 13 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
        _95 = Eq(move _96, move _97);    // scope 13 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
        _94 = Not(move _95);             // scope 13 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
        switchInt(move _94) -> [0: bb22, otherwise: bb21]; // scope 13 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    }

    bb21: {
        _98 = const core::panicking::AssertKind::Eq; // scope 13 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _100 = const core::panicking::AssertKind::Eq; // scope 14 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _102 = _92;                      // scope 14 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _101 = _102;                     // scope 14 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _104 = _93;                      // scope 14 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _103 = _104;                     // scope 14 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _105 = Option::<Arguments<'_>>::None; // scope 14 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
        _99 = core::panicking::assert_failed::<bool, bool>(move _100, move _101, move _103, move _105); // scope 14 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:53
                                         // + literal: Const { ty: for<'a, 'b, 'c> fn(core::panicking::AssertKind, &'a bool, &'b bool, Option<Arguments<'c>>) -> ! {core::panicking::assert_failed::<bool, bool>}, val: Value(<ZST>) }
    }

    bb22: {
        _109 = _26;                      // scope 10 at ui/deriving/deriving-cmp-generic-struct-enum.rs:38:24: 38:28
        _110 = _38;                      // scope 10 at ui/deriving/deriving-cmp-generic-struct-enum.rs:38:31: 38:35
        _108 = <ES<i32> as PartialOrd>::lt(move _109, move _110) -> bb23; // scope 10 at ui/deriving/deriving-cmp-generic-struct-enum.rs:38:24: 38:35
                                         // mir::Constant
                                         // + span: ui/deriving/deriving-cmp-generic-struct-enum.rs:38:24: 38:35
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a ES<i32>, &'b ES<i32>) -> bool {<ES<i32> as PartialOrd>::lt}, val: Value(<ZST>) }
    }

    bb23: {
        _107 = &_108;                    // scope 10 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _111 = &_46;                     // scope 10 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _106 = (move _107, move _111);   // scope 10 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _112 = (_106.0: &bool);          // scope 10 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _113 = (_106.1: &bool);          // scope 10 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _116 = (*_112);                  // scope 15 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
        _117 = (*_113);                  // scope 15 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
        _115 = Eq(move _116, move _117); // scope 15 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
        _114 = Not(move _115);           // scope 15 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
        switchInt(move _114) -> [0: bb25, otherwise: bb24]; // scope 15 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    }

    bb24: {
        _118 = const core::panicking::AssertKind::Eq; // scope 15 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _120 = const core::panicking::AssertKind::Eq; // scope 16 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _122 = _112;                     // scope 16 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _121 = _122;                     // scope 16 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _124 = _113;                     // scope 16 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _123 = _124;                     // scope 16 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _125 = Option::<Arguments<'_>>::None; // scope 16 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
        _119 = core::panicking::assert_failed::<bool, bool>(move _120, move _121, move _123, move _125); // scope 16 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:53
                                         // + literal: Const { ty: for<'a, 'b, 'c> fn(core::panicking::AssertKind, &'a bool, &'b bool, Option<Arguments<'c>>) -> ! {core::panicking::assert_failed::<bool, bool>}, val: Value(<ZST>) }
    }

    bb25: {
        _129 = _26;                      // scope 10 at ui/deriving/deriving-cmp-generic-struct-enum.rs:39:24: 39:28
        _130 = _38;                      // scope 10 at ui/deriving/deriving-cmp-generic-struct-enum.rs:39:31: 39:35
        _128 = <ES<i32> as PartialOrd>::gt(move _129, move _130) -> bb26; // scope 10 at ui/deriving/deriving-cmp-generic-struct-enum.rs:39:24: 39:35
                                         // mir::Constant
                                         // + span: ui/deriving/deriving-cmp-generic-struct-enum.rs:39:24: 39:35
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a ES<i32>, &'b ES<i32>) -> bool {<ES<i32> as PartialOrd>::gt}, val: Value(<ZST>) }
    }

    bb26: {
        _127 = &_128;                    // scope 10 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _131 = &_55;                     // scope 10 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _126 = (move _127, move _131);   // scope 10 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _132 = (_126.0: &bool);          // scope 10 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _133 = (_126.1: &bool);          // scope 10 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _136 = (*_132);                  // scope 17 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
        _137 = (*_133);                  // scope 17 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
        _135 = Eq(move _136, move _137); // scope 17 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
        _134 = Not(move _135);           // scope 17 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
        switchInt(move _134) -> [0: bb28, otherwise: bb27]; // scope 17 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    }

    bb27: {
        _138 = const core::panicking::AssertKind::Eq; // scope 17 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _140 = const core::panicking::AssertKind::Eq; // scope 18 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _142 = _132;                     // scope 18 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _141 = _142;                     // scope 18 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _144 = _133;                     // scope 18 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _143 = _144;                     // scope 18 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _145 = Option::<Arguments<'_>>::None; // scope 18 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
        _139 = core::panicking::assert_failed::<bool, bool>(move _140, move _141, move _143, move _145); // scope 18 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:53
                                         // + literal: Const { ty: for<'a, 'b, 'c> fn(core::panicking::AssertKind, &'a bool, &'b bool, Option<Arguments<'c>>) -> ! {core::panicking::assert_failed::<bool, bool>}, val: Value(<ZST>) }
    }

    bb28: {
        _149 = _26;                      // scope 10 at ui/deriving/deriving-cmp-generic-struct-enum.rs:41:24: 41:28
        _150 = _38;                      // scope 10 at ui/deriving/deriving-cmp-generic-struct-enum.rs:41:32: 41:36
        _148 = <ES<i32> as PartialOrd>::le(move _149, move _150) -> bb29; // scope 10 at ui/deriving/deriving-cmp-generic-struct-enum.rs:41:24: 41:36
                                         // mir::Constant
                                         // + span: ui/deriving/deriving-cmp-generic-struct-enum.rs:41:24: 41:36
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a ES<i32>, &'b ES<i32>) -> bool {<ES<i32> as PartialOrd>::le}, val: Value(<ZST>) }
    }

    bb29: {
        _147 = &_148;                    // scope 10 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _151 = &_47;                     // scope 10 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _146 = (move _147, move _151);   // scope 10 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _152 = (_146.0: &bool);          // scope 10 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _153 = (_146.1: &bool);          // scope 10 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _156 = (*_152);                  // scope 19 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
        _157 = (*_153);                  // scope 19 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
        _155 = Eq(move _156, move _157); // scope 19 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
        _154 = Not(move _155);           // scope 19 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
        switchInt(move _154) -> [0: bb31, otherwise: bb30]; // scope 19 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    }

    bb30: {
        _158 = const core::panicking::AssertKind::Eq; // scope 19 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _160 = const core::panicking::AssertKind::Eq; // scope 20 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _162 = _152;                     // scope 20 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _161 = _162;                     // scope 20 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _164 = _153;                     // scope 20 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _163 = _164;                     // scope 20 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _165 = Option::<Arguments<'_>>::None; // scope 20 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
        _159 = core::panicking::assert_failed::<bool, bool>(move _160, move _161, move _163, move _165); // scope 20 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:53
                                         // + literal: Const { ty: for<'a, 'b, 'c> fn(core::panicking::AssertKind, &'a bool, &'b bool, Option<Arguments<'c>>) -> ! {core::panicking::assert_failed::<bool, bool>}, val: Value(<ZST>) }
    }

    bb31: {
        _169 = _26;                      // scope 10 at ui/deriving/deriving-cmp-generic-struct-enum.rs:42:24: 42:28
        _170 = _38;                      // scope 10 at ui/deriving/deriving-cmp-generic-struct-enum.rs:42:32: 42:36
        _168 = <ES<i32> as PartialOrd>::ge(move _169, move _170) -> bb32; // scope 10 at ui/deriving/deriving-cmp-generic-struct-enum.rs:42:24: 42:36
                                         // mir::Constant
                                         // + span: ui/deriving/deriving-cmp-generic-struct-enum.rs:42:24: 42:36
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a ES<i32>, &'b ES<i32>) -> bool {<ES<i32> as PartialOrd>::ge}, val: Value(<ZST>) }
    }

    bb32: {
        _167 = &_168;                    // scope 10 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _171 = &_56;                     // scope 10 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _166 = (move _167, move _171);   // scope 10 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _172 = (_166.0: &bool);          // scope 10 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _173 = (_166.1: &bool);          // scope 10 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _176 = (*_172);                  // scope 21 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
        _177 = (*_173);                  // scope 21 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
        _175 = Eq(move _176, move _177); // scope 21 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
        _174 = Not(move _175);           // scope 21 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
        switchInt(move _174) -> [0: bb34, otherwise: bb33]; // scope 21 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    }

    bb33: {
        _178 = const core::panicking::AssertKind::Eq; // scope 21 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _180 = const core::panicking::AssertKind::Eq; // scope 22 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _182 = _172;                     // scope 22 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _181 = _182;                     // scope 22 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _184 = _173;                     // scope 22 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _183 = _184;                     // scope 22 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _185 = Option::<Arguments<'_>>::None; // scope 22 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
        _179 = core::panicking::assert_failed::<bool, bool>(move _180, move _181, move _183, move _185); // scope 22 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:53
                                         // + literal: Const { ty: for<'a, 'b, 'c> fn(core::panicking::AssertKind, &'a bool, &'b bool, Option<Arguments<'c>>) -> ! {core::panicking::assert_failed::<bool, bool>}, val: Value(<ZST>) }
    }

    bb34: {
        _189 = _26;                      // scope 10 at ui/deriving/deriving-cmp-generic-struct-enum.rs:45:24: 45:36
        _190 = _38;                      // scope 10 at ui/deriving/deriving-cmp-generic-struct-enum.rs:45:32: 45:35
        _188 = <ES<i32> as Ord>::cmp(move _189, move _190) -> bb35; // scope 10 at ui/deriving/deriving-cmp-generic-struct-enum.rs:45:24: 45:36
                                         // mir::Constant
                                         // + span: ui/deriving/deriving-cmp-generic-struct-enum.rs:45:28: 45:31
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a ES<i32>, &'b ES<i32>) -> std::cmp::Ordering {<ES<i32> as Ord>::cmp}, val: Value(<ZST>) }
    }

    bb35: {
        _187 = &_188;                    // scope 10 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _191 = &_39;                     // scope 10 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _186 = (move _187, move _191);   // scope 10 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _192 = (_186.0: &std::cmp::Ordering); // scope 10 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _193 = (_186.1: &std::cmp::Ordering); // scope 10 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _196 = _192;                     // scope 23 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
        _197 = _193;                     // scope 23 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
        _195 = <std::cmp::Ordering as PartialEq>::eq(move _196, move _197) -> bb36; // scope 23 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a std::cmp::Ordering, &'b std::cmp::Ordering) -> bool {<std::cmp::Ordering as PartialEq>::eq}, val: Value(<ZST>) }
    }

    bb36: {
        _194 = Not(move _195);           // scope 23 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
        switchInt(move _194) -> [0: bb12, otherwise: bb37]; // scope 23 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    }

    bb37: {
        _198 = const core::panicking::AssertKind::Eq; // scope 23 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _200 = const core::panicking::AssertKind::Eq; // scope 24 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _202 = _192;                     // scope 24 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _201 = _202;                     // scope 24 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _204 = _193;                     // scope 24 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _203 = _204;                     // scope 24 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _205 = Option::<Arguments<'_>>::None; // scope 24 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
        _199 = core::panicking::assert_failed::<std::cmp::Ordering, std::cmp::Ordering>(move _200, move _201, move _203, move _205); // scope 24 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:53
                                         // + literal: Const { ty: for<'a, 'b, 'c> fn(core::panicking::AssertKind, &'a std::cmp::Ordering, &'b std::cmp::Ordering, Option<Arguments<'c>>) -> ! {core::panicking::assert_failed::<std::cmp::Ordering, std::cmp::Ordering>}, val: Value(<ZST>) }
    }
}
