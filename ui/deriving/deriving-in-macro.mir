// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
fn foo::<impl at ui/deriving/deriving-in-macro.rs:8:22: 8:31>::eq(_1: &bar, _2: &bar) -> bool {
    debug self => _1;                    // in scope 0 at ui/deriving/deriving-in-macro.rs:8:22: 8:31
    debug other => _2;                   // in scope 0 at ui/deriving/deriving-in-macro.rs:8:22: 8:31
    let mut _0: bool;                    // return place in scope 0 at ui/deriving/deriving-in-macro.rs:8:22: 8:31

    bb0: {
        _0 = const true;                 // scope 0 at ui/deriving/deriving-in-macro.rs:8:22: 8:31
        return;                          // scope 0 at ui/deriving/deriving-in-macro.rs:8:31: 8:31
    }
}

fn main() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/deriving/deriving-in-macro.rs:16:15: 16:15

    bb0: {
        return;                          // scope 0 at ui/deriving/deriving-in-macro.rs:16:17: 16:17
    }
}
