// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
fn <impl at ui/deriving/deriving-enum-single-variant.rs:7:10: 7:19>::eq(_1: &Task, _2: &Task) -> bool {
    debug self => _1;                    // in scope 0 at ui/deriving/deriving-enum-single-variant.rs:7:10: 7:19
    debug other => _2;                   // in scope 0 at ui/deriving/deriving-enum-single-variant.rs:7:10: 7:19
    let mut _0: bool;                    // return place in scope 0 at ui/deriving/deriving-enum-single-variant.rs:7:10: 7:19
    let mut _3: (&Task, &Task);          // in scope 0 at ui/deriving/deriving-enum-single-variant.rs:7:10: 7:19
    let mut _4: &Task;                   // in scope 0 at ui/deriving/deriving-enum-single-variant.rs:7:10: 7:19
    let mut _5: &Task;                   // in scope 0 at ui/deriving/deriving-enum-single-variant.rs:7:10: 7:19
    let _6: &isize;                      // in scope 0 at ui/deriving/deriving-enum-single-variant.rs:9:16: 9:23
    let _7: &isize;                      // in scope 0 at ui/deriving/deriving-enum-single-variant.rs:9:16: 9:23
    let mut _8: isize;                   // in scope 0 at ui/deriving/deriving-enum-single-variant.rs:9:16: 9:23
    let mut _9: isize;                   // in scope 0 at ui/deriving/deriving-enum-single-variant.rs:9:16: 9:23
    let mut _10: &Task;                  // in scope 0 at ui/deriving/deriving-enum-single-variant.rs:7:10: 7:19
    let mut _11: &Task;                  // in scope 0 at ui/deriving/deriving-enum-single-variant.rs:7:10: 7:19
    scope 1 {
        debug __self_0 => _6;            // in scope 1 at ui/deriving/deriving-enum-single-variant.rs:9:16: 9:23
        debug __arg1_0 => _7;            // in scope 1 at ui/deriving/deriving-enum-single-variant.rs:9:16: 9:23
    }

    bb0: {
        _4 = _1;                         // scope 0 at ui/deriving/deriving-enum-single-variant.rs:7:10: 7:19
        _5 = _2;                         // scope 0 at ui/deriving/deriving-enum-single-variant.rs:7:10: 7:19
        _3 = (move _4, move _5);         // scope 0 at ui/deriving/deriving-enum-single-variant.rs:7:10: 7:19
        _10 = deref_copy (_3.0: &Task);  // scope 0 at ui/deriving/deriving-enum-single-variant.rs:9:16: 9:23
        _6 = &(((*_10) as TaskHandle).0: isize); // scope 0 at ui/deriving/deriving-enum-single-variant.rs:9:16: 9:23
        _11 = deref_copy (_3.1: &Task);  // scope 0 at ui/deriving/deriving-enum-single-variant.rs:9:16: 9:23
        _7 = &(((*_11) as TaskHandle).0: isize); // scope 0 at ui/deriving/deriving-enum-single-variant.rs:9:16: 9:23
        _8 = (*_6);                      // scope 1 at ui/deriving/deriving-enum-single-variant.rs:9:16: 9:23
        _9 = (*_7);                      // scope 1 at ui/deriving/deriving-enum-single-variant.rs:9:16: 9:23
        _0 = Eq(move _8, move _9);       // scope 1 at ui/deriving/deriving-enum-single-variant.rs:9:16: 9:23
        return;                          // scope 0 at ui/deriving/deriving-enum-single-variant.rs:7:19: 7:19
    }
}

fn main() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/deriving/deriving-enum-single-variant.rs:12:15: 12:15

    bb0: {
        return;                          // scope 0 at ui/deriving/deriving-enum-single-variant.rs:12:18: 12:18
    }
}

fn Task::TaskHandle(_1: isize) -> Task {
    let mut _0: Task;                    // return place in scope 0 at ui/deriving/deriving-enum-single-variant.rs:9:5: 9:15

    bb0: {
        _0 = Task::TaskHandle(move _1);  // scope 0 at ui/deriving/deriving-enum-single-variant.rs:9:5: 9:15
        return;                          // scope 0 at ui/deriving/deriving-enum-single-variant.rs:9:5: 9:15
    }
}

// MIR FOR CTFE
fn Task::TaskHandle(_1: isize) -> Task {
    let mut _0: Task;                    // return place in scope 0 at ui/deriving/deriving-enum-single-variant.rs:9:5: 9:15

    bb0: {
        _0 = Task::TaskHandle(move _1);  // scope 0 at ui/deriving/deriving-enum-single-variant.rs:9:5: 9:15
        return;                          // scope 0 at ui/deriving/deriving-enum-single-variant.rs:9:5: 9:15
    }
}
