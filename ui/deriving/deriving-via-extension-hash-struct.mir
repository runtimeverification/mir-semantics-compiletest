// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
fn <impl at ui/deriving/deriving-via-extension-hash-struct.rs:5:10: 5:14>::hash(_1: &Foo, _2: &mut __H) -> () {
    debug self => _1;                    // in scope 0 at ui/deriving/deriving-via-extension-hash-struct.rs:5:10: 5:14
    debug state => _2;                   // in scope 0 at ui/deriving/deriving-via-extension-hash-struct.rs:5:10: 5:14
    let mut _0: ();                      // return place in scope 0 at ui/deriving/deriving-via-extension-hash-struct.rs:5:10: 5:14
    let _3: ();                          // in scope 0 at ui/deriving/deriving-via-extension-hash-struct.rs:7:5: 7:13
    let mut _4: &isize;                  // in scope 0 at ui/deriving/deriving-via-extension-hash-struct.rs:7:5: 7:13
    let _5: &isize;                      // in scope 0 at ui/deriving/deriving-via-extension-hash-struct.rs:7:5: 7:13
    let mut _6: &mut __H;                // in scope 0 at ui/deriving/deriving-via-extension-hash-struct.rs:5:10: 5:14
    let _7: ();                          // in scope 0 at ui/deriving/deriving-via-extension-hash-struct.rs:8:5: 8:13
    let mut _8: &isize;                  // in scope 0 at ui/deriving/deriving-via-extension-hash-struct.rs:8:5: 8:13
    let _9: &isize;                      // in scope 0 at ui/deriving/deriving-via-extension-hash-struct.rs:8:5: 8:13
    let mut _10: &mut __H;               // in scope 0 at ui/deriving/deriving-via-extension-hash-struct.rs:5:10: 5:14
    let mut _11: &isize;                 // in scope 0 at ui/deriving/deriving-via-extension-hash-struct.rs:9:5: 9:13
    let _12: &isize;                     // in scope 0 at ui/deriving/deriving-via-extension-hash-struct.rs:9:5: 9:13
    let mut _13: &mut __H;               // in scope 0 at ui/deriving/deriving-via-extension-hash-struct.rs:5:10: 5:14

    bb0: {
        _5 = &((*_1).0: isize);          // scope 0 at ui/deriving/deriving-via-extension-hash-struct.rs:7:5: 7:13
        _4 = _5;                         // scope 0 at ui/deriving/deriving-via-extension-hash-struct.rs:7:5: 7:13
        _6 = &mut (*_2);                 // scope 0 at ui/deriving/deriving-via-extension-hash-struct.rs:5:10: 5:14
        _3 = <isize as Hash>::hash::<__H>(move _4, move _6) -> bb1; // scope 0 at ui/deriving/deriving-via-extension-hash-struct.rs:7:5: 7:13
                                         // mir::Constant
                                         // + span: ui/deriving/deriving-via-extension-hash-struct.rs:7:5: 7:13
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a isize, &'b mut __H) {<isize as Hash>::hash::<__H>}, val: Value(<ZST>) }
    }

    bb1: {
        _9 = &((*_1).1: isize);          // scope 0 at ui/deriving/deriving-via-extension-hash-struct.rs:8:5: 8:13
        _8 = _9;                         // scope 0 at ui/deriving/deriving-via-extension-hash-struct.rs:8:5: 8:13
        _10 = &mut (*_2);                // scope 0 at ui/deriving/deriving-via-extension-hash-struct.rs:5:10: 5:14
        _7 = <isize as Hash>::hash::<__H>(move _8, move _10) -> bb2; // scope 0 at ui/deriving/deriving-via-extension-hash-struct.rs:8:5: 8:13
                                         // mir::Constant
                                         // + span: ui/deriving/deriving-via-extension-hash-struct.rs:8:5: 8:13
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a isize, &'b mut __H) {<isize as Hash>::hash::<__H>}, val: Value(<ZST>) }
    }

    bb2: {
        _12 = &((*_1).2: isize);         // scope 0 at ui/deriving/deriving-via-extension-hash-struct.rs:9:5: 9:13
        _11 = _12;                       // scope 0 at ui/deriving/deriving-via-extension-hash-struct.rs:9:5: 9:13
        _13 = &mut (*_2);                // scope 0 at ui/deriving/deriving-via-extension-hash-struct.rs:5:10: 5:14
        _0 = <isize as Hash>::hash::<__H>(move _11, move _13) -> bb3; // scope 0 at ui/deriving/deriving-via-extension-hash-struct.rs:9:5: 9:13
                                         // mir::Constant
                                         // + span: ui/deriving/deriving-via-extension-hash-struct.rs:9:5: 9:13
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a isize, &'b mut __H) {<isize as Hash>::hash::<__H>}, val: Value(<ZST>) }
    }

    bb3: {
        return;                          // scope 0 at ui/deriving/deriving-via-extension-hash-struct.rs:5:14: 5:14
    }
}

fn main() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/deriving/deriving-via-extension-hash-struct.rs:12:15: 12:15

    bb0: {
        return;                          // scope 0 at ui/deriving/deriving-via-extension-hash-struct.rs:12:17: 12:17
    }
}
