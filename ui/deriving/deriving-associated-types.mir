// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
fn <impl at ui/deriving/deriving-associated-types.rs:24:10: 24:19>::eq(_1: &PrivateStruct<T>, _2: &PrivateStruct<T>) -> bool {
    debug self => _1;                    // in scope 0 at ui/deriving/deriving-associated-types.rs:24:10: 24:19
    debug other => _2;                   // in scope 0 at ui/deriving/deriving-associated-types.rs:24:10: 24:19
    let mut _0: bool;                    // return place in scope 0 at ui/deriving/deriving-associated-types.rs:24:10: 24:19
    let mut _3: &T;                      // in scope 0 at ui/deriving/deriving-associated-types.rs:25:25: 25:26
    let mut _4: &T;                      // in scope 0 at ui/deriving/deriving-associated-types.rs:25:25: 25:26

    bb0: {
        _3 = &((*_1).0: T);              // scope 0 at ui/deriving/deriving-associated-types.rs:25:25: 25:26
        _4 = &((*_2).0: T);              // scope 0 at ui/deriving/deriving-associated-types.rs:25:25: 25:26
        _0 = <T as PartialEq>::eq(move _3, move _4) -> bb1; // scope 0 at ui/deriving/deriving-associated-types.rs:25:25: 25:26
                                         // mir::Constant
                                         // + span: ui/deriving/deriving-associated-types.rs:25:25: 25:26
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a T, &'b T) -> bool {<T as PartialEq>::eq}, val: Value(<ZST>) }
    }

    bb1: {
        return;                          // scope 0 at ui/deriving/deriving-associated-types.rs:24:19: 24:19
    }
}

fn <impl at ui/deriving/deriving-associated-types.rs:24:21: 24:26>::fmt(_1: &PrivateStruct<T>, _2: &mut Formatter<'_>) -> Result<(), std::fmt::Error> {
    debug self => _1;                    // in scope 0 at ui/deriving/deriving-associated-types.rs:24:21: 24:26
    debug f => _2;                       // in scope 0 at ui/deriving/deriving-associated-types.rs:24:21: 24:26
    let mut _0: std::result::Result<(), std::fmt::Error>; // return place in scope 0 at ui/deriving/deriving-associated-types.rs:24:21: 24:26
    let mut _3: &mut std::fmt::Formatter<'_>; // in scope 0 at ui/deriving/deriving-associated-types.rs:24:21: 24:26
    let mut _4: &str;                    // in scope 0 at ui/deriving/deriving-associated-types.rs:24:21: 24:26
    let _5: &str;                        // in scope 0 at ui/deriving/deriving-associated-types.rs:24:21: 24:26
    let mut _6: &dyn std::fmt::Debug;    // in scope 0 at ui/deriving/deriving-associated-types.rs:25:25: 25:26
    let mut _7: &&T;                     // in scope 0 at ui/deriving/deriving-associated-types.rs:25:25: 25:26
    let _8: &&T;                         // in scope 0 at ui/deriving/deriving-associated-types.rs:25:25: 25:26
    let _9: &T;                          // in scope 0 at ui/deriving/deriving-associated-types.rs:25:25: 25:26

    bb0: {
        _3 = &mut (*_2);                 // scope 0 at ui/deriving/deriving-associated-types.rs:24:21: 24:26
        _5 = const "PrivateStruct";      // scope 0 at ui/deriving/deriving-associated-types.rs:24:21: 24:26
                                         // mir::Constant
                                         // + span: ui/deriving/deriving-associated-types.rs:24:21: 24:26
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _4 = _5;                         // scope 0 at ui/deriving/deriving-associated-types.rs:24:21: 24:26
        _9 = &((*_1).0: T);              // scope 0 at ui/deriving/deriving-associated-types.rs:25:25: 25:26
        _8 = &_9;                        // scope 0 at ui/deriving/deriving-associated-types.rs:25:25: 25:26
        _7 = _8;                         // scope 0 at ui/deriving/deriving-associated-types.rs:25:25: 25:26
        _6 = move _7 as &dyn std::fmt::Debug (Pointer(Unsize)); // scope 0 at ui/deriving/deriving-associated-types.rs:25:25: 25:26
        _0 = Formatter::<'_>::debug_tuple_field1_finish(move _3, move _4, move _6) -> bb1; // scope 0 at ui/deriving/deriving-associated-types.rs:24:21: 24:26
                                         // mir::Constant
                                         // + span: ui/deriving/deriving-associated-types.rs:24:21: 24:26
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: for<'b, 'a, 'c> fn(&'b mut Formatter<'_>, &'a str, &'c (dyn Debug + 'c)) -> Result<(), std::fmt::Error> {Formatter::<'_>::debug_tuple_field1_finish}, val: Value(<ZST>) }
    }

    bb1: {
        return;                          // scope 0 at ui/deriving/deriving-associated-types.rs:24:26: 24:26
    }
}

fn <impl at ui/deriving/deriving-associated-types.rs:27:10: 27:19>::eq(_1: &TupleStruct<A, B, C>, _2: &TupleStruct<A, B, C>) -> bool {
    debug self => _1;                    // in scope 0 at ui/deriving/deriving-associated-types.rs:27:10: 27:19
    debug other => _2;                   // in scope 0 at ui/deriving/deriving-associated-types.rs:27:10: 27:19
    let mut _0: bool;                    // return place in scope 0 at ui/deriving/deriving-associated-types.rs:27:10: 27:19
    let mut _3: bool;                    // in scope 0 at ui/deriving/deriving-associated-types.rs:42:5: 42:36
    let mut _4: bool;                    // in scope 0 at ui/deriving/deriving-associated-types.rs:41:5: 41:28
    let mut _5: bool;                    // in scope 0 at ui/deriving/deriving-associated-types.rs:40:5: 40:20
    let mut _6: bool;                    // in scope 0 at ui/deriving/deriving-associated-types.rs:39:5: 39:12
    let mut _7: bool;                    // in scope 0 at ui/deriving/deriving-associated-types.rs:38:5: 38:6
    let mut _8: bool;                    // in scope 0 at ui/deriving/deriving-associated-types.rs:37:5: 37:39
    let mut _9: bool;                    // in scope 0 at ui/deriving/deriving-associated-types.rs:36:5: 36:31
    let mut _10: bool;                   // in scope 0 at ui/deriving/deriving-associated-types.rs:35:5: 35:20
    let mut _11: bool;                   // in scope 0 at ui/deriving/deriving-associated-types.rs:34:5: 34:12
    let mut _12: bool;                   // in scope 0 at ui/deriving/deriving-associated-types.rs:33:5: 33:6
    let mut _13: bool;                   // in scope 0 at ui/deriving/deriving-associated-types.rs:32:5: 32:21
    let mut _14: bool;                   // in scope 0 at ui/deriving/deriving-associated-types.rs:31:5: 31:6
    let mut _15: bool;                   // in scope 0 at ui/deriving/deriving-associated-types.rs:30:5: 30:25
    let mut _16: bool;                   // in scope 0 at ui/deriving/deriving-associated-types.rs:29:5: 29:17
    let mut _17: i32;                    // in scope 0 at ui/deriving/deriving-associated-types.rs:29:5: 29:17
    let mut _18: i32;                    // in scope 0 at ui/deriving/deriving-associated-types.rs:29:5: 29:17
    let mut _19: bool;                   // in scope 0 at ui/deriving/deriving-associated-types.rs:30:5: 30:25
    let mut _20: &std::option::Option<i32>; // in scope 0 at ui/deriving/deriving-associated-types.rs:30:5: 30:25
    let mut _21: &std::option::Option<i32>; // in scope 0 at ui/deriving/deriving-associated-types.rs:30:5: 30:25
    let mut _22: bool;                   // in scope 0 at ui/deriving/deriving-associated-types.rs:31:5: 31:6
    let mut _23: &A;                     // in scope 0 at ui/deriving/deriving-associated-types.rs:31:5: 31:6
    let mut _24: &A;                     // in scope 0 at ui/deriving/deriving-associated-types.rs:31:5: 31:6
    let mut _25: bool;                   // in scope 0 at ui/deriving/deriving-associated-types.rs:32:5: 32:21
    let mut _26: &PrivateStruct<A>;      // in scope 0 at ui/deriving/deriving-associated-types.rs:32:5: 32:21
    let mut _27: &PrivateStruct<A>;      // in scope 0 at ui/deriving/deriving-associated-types.rs:32:5: 32:21
    let mut _28: bool;                   // in scope 0 at ui/deriving/deriving-associated-types.rs:33:5: 33:6
    let mut _29: &B;                     // in scope 0 at ui/deriving/deriving-associated-types.rs:33:5: 33:6
    let mut _30: &B;                     // in scope 0 at ui/deriving/deriving-associated-types.rs:33:5: 33:6
    let mut _31: bool;                   // in scope 0 at ui/deriving/deriving-associated-types.rs:34:5: 34:12
    let mut _32: &<B as DeclaredTrait>::Type; // in scope 0 at ui/deriving/deriving-associated-types.rs:34:5: 34:12
    let mut _33: &<B as DeclaredTrait>::Type; // in scope 0 at ui/deriving/deriving-associated-types.rs:34:5: 34:12
    let mut _34: bool;                   // in scope 0 at ui/deriving/deriving-associated-types.rs:35:5: 35:20
    let mut _35: &std::option::Option<<B as DeclaredTrait>::Type>; // in scope 0 at ui/deriving/deriving-associated-types.rs:35:5: 35:20
    let mut _36: &std::option::Option<<B as DeclaredTrait>::Type>; // in scope 0 at ui/deriving/deriving-associated-types.rs:35:5: 35:20
    let mut _37: bool;                   // in scope 0 at ui/deriving/deriving-associated-types.rs:36:5: 36:31
    let mut _38: &<B as DeclaredTrait>::Type; // in scope 0 at ui/deriving/deriving-associated-types.rs:36:5: 36:31
    let mut _39: &<B as DeclaredTrait>::Type; // in scope 0 at ui/deriving/deriving-associated-types.rs:36:5: 36:31
    let mut _40: bool;                   // in scope 0 at ui/deriving/deriving-associated-types.rs:37:5: 37:39
    let mut _41: &std::option::Option<<B as DeclaredTrait>::Type>; // in scope 0 at ui/deriving/deriving-associated-types.rs:37:5: 37:39
    let mut _42: &std::option::Option<<B as DeclaredTrait>::Type>; // in scope 0 at ui/deriving/deriving-associated-types.rs:37:5: 37:39
    let mut _43: bool;                   // in scope 0 at ui/deriving/deriving-associated-types.rs:38:5: 38:6
    let mut _44: &C;                     // in scope 0 at ui/deriving/deriving-associated-types.rs:38:5: 38:6
    let mut _45: &C;                     // in scope 0 at ui/deriving/deriving-associated-types.rs:38:5: 38:6
    let mut _46: bool;                   // in scope 0 at ui/deriving/deriving-associated-types.rs:39:5: 39:12
    let mut _47: &<C as WhereTrait>::Type; // in scope 0 at ui/deriving/deriving-associated-types.rs:39:5: 39:12
    let mut _48: &<C as WhereTrait>::Type; // in scope 0 at ui/deriving/deriving-associated-types.rs:39:5: 39:12
    let mut _49: bool;                   // in scope 0 at ui/deriving/deriving-associated-types.rs:40:5: 40:20
    let mut _50: &std::option::Option<<C as WhereTrait>::Type>; // in scope 0 at ui/deriving/deriving-associated-types.rs:40:5: 40:20
    let mut _51: &std::option::Option<<C as WhereTrait>::Type>; // in scope 0 at ui/deriving/deriving-associated-types.rs:40:5: 40:20
    let mut _52: bool;                   // in scope 0 at ui/deriving/deriving-associated-types.rs:41:5: 41:28
    let mut _53: &<C as WhereTrait>::Type; // in scope 0 at ui/deriving/deriving-associated-types.rs:41:5: 41:28
    let mut _54: &<C as WhereTrait>::Type; // in scope 0 at ui/deriving/deriving-associated-types.rs:41:5: 41:28
    let mut _55: bool;                   // in scope 0 at ui/deriving/deriving-associated-types.rs:42:5: 42:36
    let mut _56: &std::option::Option<<C as WhereTrait>::Type>; // in scope 0 at ui/deriving/deriving-associated-types.rs:42:5: 42:36
    let mut _57: &std::option::Option<<C as WhereTrait>::Type>; // in scope 0 at ui/deriving/deriving-associated-types.rs:42:5: 42:36
    let mut _58: bool;                   // in scope 0 at ui/deriving/deriving-associated-types.rs:43:5: 43:33
    let mut _59: i32;                    // in scope 0 at ui/deriving/deriving-associated-types.rs:43:5: 43:33
    let mut _60: i32;                    // in scope 0 at ui/deriving/deriving-associated-types.rs:43:5: 43:33

    bb0: {
        _17 = ((*_1).0: i32);            // scope 0 at ui/deriving/deriving-associated-types.rs:29:5: 29:17
        _18 = ((*_2).0: i32);            // scope 0 at ui/deriving/deriving-associated-types.rs:29:5: 29:17
        _16 = Eq(move _17, move _18);    // scope 0 at ui/deriving/deriving-associated-types.rs:29:5: 29:17
        switchInt(move _16) -> [0: bb40, otherwise: bb41]; // scope 0 at ui/deriving/deriving-associated-types.rs:30:5: 30:25
    }

    bb1: {
        _0 = const false;                // scope 0 at ui/deriving/deriving-associated-types.rs:43:5: 43:33
        goto -> bb3;                     // scope 0 at ui/deriving/deriving-associated-types.rs:43:5: 43:33
    }

    bb2: {
        _59 = ((*_1).14: i32);           // scope 0 at ui/deriving/deriving-associated-types.rs:43:5: 43:33
        _60 = ((*_2).14: i32);           // scope 0 at ui/deriving/deriving-associated-types.rs:43:5: 43:33
        _58 = Eq(move _59, move _60);    // scope 0 at ui/deriving/deriving-associated-types.rs:43:5: 43:33
        _0 = move _58;                   // scope 0 at ui/deriving/deriving-associated-types.rs:43:5: 43:33
        goto -> bb3;                     // scope 0 at ui/deriving/deriving-associated-types.rs:43:5: 43:33
    }

    bb3: {
        return;                          // scope 0 at ui/deriving/deriving-associated-types.rs:27:19: 27:19
    }

    bb4: {
        _3 = const false;                // scope 0 at ui/deriving/deriving-associated-types.rs:42:5: 42:36
        goto -> bb6;                     // scope 0 at ui/deriving/deriving-associated-types.rs:42:5: 42:36
    }

    bb5: {
        _56 = &((*_1).13: std::option::Option<<C as WhereTrait>::Type>); // scope 0 at ui/deriving/deriving-associated-types.rs:42:5: 42:36
        _57 = &((*_2).13: std::option::Option<<C as WhereTrait>::Type>); // scope 0 at ui/deriving/deriving-associated-types.rs:42:5: 42:36
        _55 = <Option<<C as WhereTrait>::Type> as PartialEq>::eq(move _56, move _57) -> bb55; // scope 0 at ui/deriving/deriving-associated-types.rs:42:5: 42:36
                                         // mir::Constant
                                         // + span: ui/deriving/deriving-associated-types.rs:42:5: 42:36
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a Option<<C as WhereTrait>::Type>, &'b Option<<C as WhereTrait>::Type>) -> bool {<Option<<C as WhereTrait>::Type> as PartialEq>::eq}, val: Value(<ZST>) }
    }

    bb6: {
        switchInt(move _3) -> [0: bb1, otherwise: bb2]; // scope 0 at ui/deriving/deriving-associated-types.rs:43:5: 43:33
    }

    bb7: {
        _4 = const false;                // scope 0 at ui/deriving/deriving-associated-types.rs:41:5: 41:28
        goto -> bb9;                     // scope 0 at ui/deriving/deriving-associated-types.rs:41:5: 41:28
    }

    bb8: {
        _53 = &((*_1).12: <C as WhereTrait>::Type); // scope 0 at ui/deriving/deriving-associated-types.rs:41:5: 41:28
        _54 = &((*_2).12: <C as WhereTrait>::Type); // scope 0 at ui/deriving/deriving-associated-types.rs:41:5: 41:28
        _52 = <<C as WhereTrait>::Type as PartialEq>::eq(move _53, move _54) -> bb54; // scope 0 at ui/deriving/deriving-associated-types.rs:41:5: 41:28
                                         // mir::Constant
                                         // + span: ui/deriving/deriving-associated-types.rs:41:5: 41:28
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a <C as WhereTrait>::Type, &'b <C as WhereTrait>::Type) -> bool {<<C as WhereTrait>::Type as PartialEq>::eq}, val: Value(<ZST>) }
    }

    bb9: {
        switchInt(move _4) -> [0: bb4, otherwise: bb5]; // scope 0 at ui/deriving/deriving-associated-types.rs:42:5: 42:36
    }

    bb10: {
        _5 = const false;                // scope 0 at ui/deriving/deriving-associated-types.rs:40:5: 40:20
        goto -> bb12;                    // scope 0 at ui/deriving/deriving-associated-types.rs:40:5: 40:20
    }

    bb11: {
        _50 = &((*_1).11: std::option::Option<<C as WhereTrait>::Type>); // scope 0 at ui/deriving/deriving-associated-types.rs:40:5: 40:20
        _51 = &((*_2).11: std::option::Option<<C as WhereTrait>::Type>); // scope 0 at ui/deriving/deriving-associated-types.rs:40:5: 40:20
        _49 = <Option<<C as WhereTrait>::Type> as PartialEq>::eq(move _50, move _51) -> bb53; // scope 0 at ui/deriving/deriving-associated-types.rs:40:5: 40:20
                                         // mir::Constant
                                         // + span: ui/deriving/deriving-associated-types.rs:40:5: 40:20
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a Option<<C as WhereTrait>::Type>, &'b Option<<C as WhereTrait>::Type>) -> bool {<Option<<C as WhereTrait>::Type> as PartialEq>::eq}, val: Value(<ZST>) }
    }

    bb12: {
        switchInt(move _5) -> [0: bb7, otherwise: bb8]; // scope 0 at ui/deriving/deriving-associated-types.rs:41:5: 41:28
    }

    bb13: {
        _6 = const false;                // scope 0 at ui/deriving/deriving-associated-types.rs:39:5: 39:12
        goto -> bb15;                    // scope 0 at ui/deriving/deriving-associated-types.rs:39:5: 39:12
    }

    bb14: {
        _47 = &((*_1).10: <C as WhereTrait>::Type); // scope 0 at ui/deriving/deriving-associated-types.rs:39:5: 39:12
        _48 = &((*_2).10: <C as WhereTrait>::Type); // scope 0 at ui/deriving/deriving-associated-types.rs:39:5: 39:12
        _46 = <<C as WhereTrait>::Type as PartialEq>::eq(move _47, move _48) -> bb52; // scope 0 at ui/deriving/deriving-associated-types.rs:39:5: 39:12
                                         // mir::Constant
                                         // + span: ui/deriving/deriving-associated-types.rs:39:5: 39:12
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a <C as WhereTrait>::Type, &'b <C as WhereTrait>::Type) -> bool {<<C as WhereTrait>::Type as PartialEq>::eq}, val: Value(<ZST>) }
    }

    bb15: {
        switchInt(move _6) -> [0: bb10, otherwise: bb11]; // scope 0 at ui/deriving/deriving-associated-types.rs:40:5: 40:20
    }

    bb16: {
        _7 = const false;                // scope 0 at ui/deriving/deriving-associated-types.rs:38:5: 38:6
        goto -> bb18;                    // scope 0 at ui/deriving/deriving-associated-types.rs:38:5: 38:6
    }

    bb17: {
        _44 = &((*_1).9: C);             // scope 0 at ui/deriving/deriving-associated-types.rs:38:5: 38:6
        _45 = &((*_2).9: C);             // scope 0 at ui/deriving/deriving-associated-types.rs:38:5: 38:6
        _43 = <C as PartialEq>::eq(move _44, move _45) -> bb51; // scope 0 at ui/deriving/deriving-associated-types.rs:38:5: 38:6
                                         // mir::Constant
                                         // + span: ui/deriving/deriving-associated-types.rs:38:5: 38:6
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a C, &'b C) -> bool {<C as PartialEq>::eq}, val: Value(<ZST>) }
    }

    bb18: {
        switchInt(move _7) -> [0: bb13, otherwise: bb14]; // scope 0 at ui/deriving/deriving-associated-types.rs:39:5: 39:12
    }

    bb19: {
        _8 = const false;                // scope 0 at ui/deriving/deriving-associated-types.rs:37:5: 37:39
        goto -> bb21;                    // scope 0 at ui/deriving/deriving-associated-types.rs:37:5: 37:39
    }

    bb20: {
        _41 = &((*_1).8: std::option::Option<<B as DeclaredTrait>::Type>); // scope 0 at ui/deriving/deriving-associated-types.rs:37:5: 37:39
        _42 = &((*_2).8: std::option::Option<<B as DeclaredTrait>::Type>); // scope 0 at ui/deriving/deriving-associated-types.rs:37:5: 37:39
        _40 = <Option<<B as DeclaredTrait>::Type> as PartialEq>::eq(move _41, move _42) -> bb50; // scope 0 at ui/deriving/deriving-associated-types.rs:37:5: 37:39
                                         // mir::Constant
                                         // + span: ui/deriving/deriving-associated-types.rs:37:5: 37:39
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a Option<<B as DeclaredTrait>::Type>, &'b Option<<B as DeclaredTrait>::Type>) -> bool {<Option<<B as DeclaredTrait>::Type> as PartialEq>::eq}, val: Value(<ZST>) }
    }

    bb21: {
        switchInt(move _8) -> [0: bb16, otherwise: bb17]; // scope 0 at ui/deriving/deriving-associated-types.rs:38:5: 38:6
    }

    bb22: {
        _9 = const false;                // scope 0 at ui/deriving/deriving-associated-types.rs:36:5: 36:31
        goto -> bb24;                    // scope 0 at ui/deriving/deriving-associated-types.rs:36:5: 36:31
    }

    bb23: {
        _38 = &((*_1).7: <B as DeclaredTrait>::Type); // scope 0 at ui/deriving/deriving-associated-types.rs:36:5: 36:31
        _39 = &((*_2).7: <B as DeclaredTrait>::Type); // scope 0 at ui/deriving/deriving-associated-types.rs:36:5: 36:31
        _37 = <<B as DeclaredTrait>::Type as PartialEq>::eq(move _38, move _39) -> bb49; // scope 0 at ui/deriving/deriving-associated-types.rs:36:5: 36:31
                                         // mir::Constant
                                         // + span: ui/deriving/deriving-associated-types.rs:36:5: 36:31
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a <B as DeclaredTrait>::Type, &'b <B as DeclaredTrait>::Type) -> bool {<<B as DeclaredTrait>::Type as PartialEq>::eq}, val: Value(<ZST>) }
    }

    bb24: {
        switchInt(move _9) -> [0: bb19, otherwise: bb20]; // scope 0 at ui/deriving/deriving-associated-types.rs:37:5: 37:39
    }

    bb25: {
        _10 = const false;               // scope 0 at ui/deriving/deriving-associated-types.rs:35:5: 35:20
        goto -> bb27;                    // scope 0 at ui/deriving/deriving-associated-types.rs:35:5: 35:20
    }

    bb26: {
        _35 = &((*_1).6: std::option::Option<<B as DeclaredTrait>::Type>); // scope 0 at ui/deriving/deriving-associated-types.rs:35:5: 35:20
        _36 = &((*_2).6: std::option::Option<<B as DeclaredTrait>::Type>); // scope 0 at ui/deriving/deriving-associated-types.rs:35:5: 35:20
        _34 = <Option<<B as DeclaredTrait>::Type> as PartialEq>::eq(move _35, move _36) -> bb48; // scope 0 at ui/deriving/deriving-associated-types.rs:35:5: 35:20
                                         // mir::Constant
                                         // + span: ui/deriving/deriving-associated-types.rs:35:5: 35:20
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a Option<<B as DeclaredTrait>::Type>, &'b Option<<B as DeclaredTrait>::Type>) -> bool {<Option<<B as DeclaredTrait>::Type> as PartialEq>::eq}, val: Value(<ZST>) }
    }

    bb27: {
        switchInt(move _10) -> [0: bb22, otherwise: bb23]; // scope 0 at ui/deriving/deriving-associated-types.rs:36:5: 36:31
    }

    bb28: {
        _11 = const false;               // scope 0 at ui/deriving/deriving-associated-types.rs:34:5: 34:12
        goto -> bb30;                    // scope 0 at ui/deriving/deriving-associated-types.rs:34:5: 34:12
    }

    bb29: {
        _32 = &((*_1).5: <B as DeclaredTrait>::Type); // scope 0 at ui/deriving/deriving-associated-types.rs:34:5: 34:12
        _33 = &((*_2).5: <B as DeclaredTrait>::Type); // scope 0 at ui/deriving/deriving-associated-types.rs:34:5: 34:12
        _31 = <<B as DeclaredTrait>::Type as PartialEq>::eq(move _32, move _33) -> bb47; // scope 0 at ui/deriving/deriving-associated-types.rs:34:5: 34:12
                                         // mir::Constant
                                         // + span: ui/deriving/deriving-associated-types.rs:34:5: 34:12
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a <B as DeclaredTrait>::Type, &'b <B as DeclaredTrait>::Type) -> bool {<<B as DeclaredTrait>::Type as PartialEq>::eq}, val: Value(<ZST>) }
    }

    bb30: {
        switchInt(move _11) -> [0: bb25, otherwise: bb26]; // scope 0 at ui/deriving/deriving-associated-types.rs:35:5: 35:20
    }

    bb31: {
        _12 = const false;               // scope 0 at ui/deriving/deriving-associated-types.rs:33:5: 33:6
        goto -> bb33;                    // scope 0 at ui/deriving/deriving-associated-types.rs:33:5: 33:6
    }

    bb32: {
        _29 = &((*_1).4: B);             // scope 0 at ui/deriving/deriving-associated-types.rs:33:5: 33:6
        _30 = &((*_2).4: B);             // scope 0 at ui/deriving/deriving-associated-types.rs:33:5: 33:6
        _28 = <B as PartialEq>::eq(move _29, move _30) -> bb46; // scope 0 at ui/deriving/deriving-associated-types.rs:33:5: 33:6
                                         // mir::Constant
                                         // + span: ui/deriving/deriving-associated-types.rs:33:5: 33:6
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a B, &'b B) -> bool {<B as PartialEq>::eq}, val: Value(<ZST>) }
    }

    bb33: {
        switchInt(move _12) -> [0: bb28, otherwise: bb29]; // scope 0 at ui/deriving/deriving-associated-types.rs:34:5: 34:12
    }

    bb34: {
        _13 = const false;               // scope 0 at ui/deriving/deriving-associated-types.rs:32:5: 32:21
        goto -> bb36;                    // scope 0 at ui/deriving/deriving-associated-types.rs:32:5: 32:21
    }

    bb35: {
        _26 = &((*_1).3: PrivateStruct<A>); // scope 0 at ui/deriving/deriving-associated-types.rs:32:5: 32:21
        _27 = &((*_2).3: PrivateStruct<A>); // scope 0 at ui/deriving/deriving-associated-types.rs:32:5: 32:21
        _25 = <PrivateStruct<A> as PartialEq>::eq(move _26, move _27) -> bb45; // scope 0 at ui/deriving/deriving-associated-types.rs:32:5: 32:21
                                         // mir::Constant
                                         // + span: ui/deriving/deriving-associated-types.rs:32:5: 32:21
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a PrivateStruct<A>, &'b PrivateStruct<A>) -> bool {<PrivateStruct<A> as PartialEq>::eq}, val: Value(<ZST>) }
    }

    bb36: {
        switchInt(move _13) -> [0: bb31, otherwise: bb32]; // scope 0 at ui/deriving/deriving-associated-types.rs:33:5: 33:6
    }

    bb37: {
        _14 = const false;               // scope 0 at ui/deriving/deriving-associated-types.rs:31:5: 31:6
        goto -> bb39;                    // scope 0 at ui/deriving/deriving-associated-types.rs:31:5: 31:6
    }

    bb38: {
        _23 = &((*_1).2: A);             // scope 0 at ui/deriving/deriving-associated-types.rs:31:5: 31:6
        _24 = &((*_2).2: A);             // scope 0 at ui/deriving/deriving-associated-types.rs:31:5: 31:6
        _22 = <A as PartialEq>::eq(move _23, move _24) -> bb44; // scope 0 at ui/deriving/deriving-associated-types.rs:31:5: 31:6
                                         // mir::Constant
                                         // + span: ui/deriving/deriving-associated-types.rs:31:5: 31:6
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a A, &'b A) -> bool {<A as PartialEq>::eq}, val: Value(<ZST>) }
    }

    bb39: {
        switchInt(move _14) -> [0: bb34, otherwise: bb35]; // scope 0 at ui/deriving/deriving-associated-types.rs:32:5: 32:21
    }

    bb40: {
        _15 = const false;               // scope 0 at ui/deriving/deriving-associated-types.rs:30:5: 30:25
        goto -> bb42;                    // scope 0 at ui/deriving/deriving-associated-types.rs:30:5: 30:25
    }

    bb41: {
        _20 = &((*_1).1: std::option::Option<i32>); // scope 0 at ui/deriving/deriving-associated-types.rs:30:5: 30:25
        _21 = &((*_2).1: std::option::Option<i32>); // scope 0 at ui/deriving/deriving-associated-types.rs:30:5: 30:25
        _19 = <Option<i32> as PartialEq>::eq(move _20, move _21) -> bb43; // scope 0 at ui/deriving/deriving-associated-types.rs:30:5: 30:25
                                         // mir::Constant
                                         // + span: ui/deriving/deriving-associated-types.rs:30:5: 30:25
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a Option<i32>, &'b Option<i32>) -> bool {<Option<i32> as PartialEq>::eq}, val: Value(<ZST>) }
    }

    bb42: {
        switchInt(move _15) -> [0: bb37, otherwise: bb38]; // scope 0 at ui/deriving/deriving-associated-types.rs:31:5: 31:6
    }

    bb43: {
        _15 = move _19;                  // scope 0 at ui/deriving/deriving-associated-types.rs:30:5: 30:25
        goto -> bb42;                    // scope 0 at ui/deriving/deriving-associated-types.rs:30:5: 30:25
    }

    bb44: {
        _14 = move _22;                  // scope 0 at ui/deriving/deriving-associated-types.rs:31:5: 31:6
        goto -> bb39;                    // scope 0 at ui/deriving/deriving-associated-types.rs:31:5: 31:6
    }

    bb45: {
        _13 = move _25;                  // scope 0 at ui/deriving/deriving-associated-types.rs:32:5: 32:21
        goto -> bb36;                    // scope 0 at ui/deriving/deriving-associated-types.rs:32:5: 32:21
    }

    bb46: {
        _12 = move _28;                  // scope 0 at ui/deriving/deriving-associated-types.rs:33:5: 33:6
        goto -> bb33;                    // scope 0 at ui/deriving/deriving-associated-types.rs:33:5: 33:6
    }

    bb47: {
        _11 = move _31;                  // scope 0 at ui/deriving/deriving-associated-types.rs:34:5: 34:12
        goto -> bb30;                    // scope 0 at ui/deriving/deriving-associated-types.rs:34:5: 34:12
    }

    bb48: {
        _10 = move _34;                  // scope 0 at ui/deriving/deriving-associated-types.rs:35:5: 35:20
        goto -> bb27;                    // scope 0 at ui/deriving/deriving-associated-types.rs:35:5: 35:20
    }

    bb49: {
        _9 = move _37;                   // scope 0 at ui/deriving/deriving-associated-types.rs:36:5: 36:31
        goto -> bb24;                    // scope 0 at ui/deriving/deriving-associated-types.rs:36:5: 36:31
    }

    bb50: {
        _8 = move _40;                   // scope 0 at ui/deriving/deriving-associated-types.rs:37:5: 37:39
        goto -> bb21;                    // scope 0 at ui/deriving/deriving-associated-types.rs:37:5: 37:39
    }

    bb51: {
        _7 = move _43;                   // scope 0 at ui/deriving/deriving-associated-types.rs:38:5: 38:6
        goto -> bb18;                    // scope 0 at ui/deriving/deriving-associated-types.rs:38:5: 38:6
    }

    bb52: {
        _6 = move _46;                   // scope 0 at ui/deriving/deriving-associated-types.rs:39:5: 39:12
        goto -> bb15;                    // scope 0 at ui/deriving/deriving-associated-types.rs:39:5: 39:12
    }

    bb53: {
        _5 = move _49;                   // scope 0 at ui/deriving/deriving-associated-types.rs:40:5: 40:20
        goto -> bb12;                    // scope 0 at ui/deriving/deriving-associated-types.rs:40:5: 40:20
    }

    bb54: {
        _4 = move _52;                   // scope 0 at ui/deriving/deriving-associated-types.rs:41:5: 41:28
        goto -> bb9;                     // scope 0 at ui/deriving/deriving-associated-types.rs:41:5: 41:28
    }

    bb55: {
        _3 = move _55;                   // scope 0 at ui/deriving/deriving-associated-types.rs:42:5: 42:36
        goto -> bb6;                     // scope 0 at ui/deriving/deriving-associated-types.rs:42:5: 42:36
    }
}

fn <impl at ui/deriving/deriving-associated-types.rs:27:21: 27:26>::fmt(_1: &TupleStruct<A, B, C>, _2: &mut Formatter<'_>) -> Result<(), std::fmt::Error> {
    debug self => _1;                    // in scope 0 at ui/deriving/deriving-associated-types.rs:27:21: 27:26
    debug f => _2;                       // in scope 0 at ui/deriving/deriving-associated-types.rs:27:21: 27:26
    let mut _0: std::result::Result<(), std::fmt::Error>; // return place in scope 0 at ui/deriving/deriving-associated-types.rs:27:21: 27:26
    let _3: &[&dyn std::fmt::Debug];     // in scope 0 at ui/deriving/deriving-associated-types.rs:27:21: 27:26
    let mut _4: &[&dyn std::fmt::Debug; 15]; // in scope 0 at ui/deriving/deriving-associated-types.rs:27:21: 27:26
    let _5: &[&dyn std::fmt::Debug; 15]; // in scope 0 at ui/deriving/deriving-associated-types.rs:27:21: 27:26
    let _6: [&dyn std::fmt::Debug; 15];  // in scope 0 at ui/deriving/deriving-associated-types.rs:27:21: 27:26
    let mut _7: &dyn std::fmt::Debug;    // in scope 0 at ui/deriving/deriving-associated-types.rs:29:5: 29:17
    let mut _8: &i32;                    // in scope 0 at ui/deriving/deriving-associated-types.rs:29:5: 29:17
    let _9: &i32;                        // in scope 0 at ui/deriving/deriving-associated-types.rs:29:5: 29:17
    let mut _10: &dyn std::fmt::Debug;   // in scope 0 at ui/deriving/deriving-associated-types.rs:30:5: 30:25
    let mut _11: &std::option::Option<i32>; // in scope 0 at ui/deriving/deriving-associated-types.rs:30:5: 30:25
    let _12: &std::option::Option<i32>;  // in scope 0 at ui/deriving/deriving-associated-types.rs:30:5: 30:25
    let mut _13: &dyn std::fmt::Debug;   // in scope 0 at ui/deriving/deriving-associated-types.rs:31:5: 31:6
    let mut _14: &A;                     // in scope 0 at ui/deriving/deriving-associated-types.rs:31:5: 31:6
    let _15: &A;                         // in scope 0 at ui/deriving/deriving-associated-types.rs:31:5: 31:6
    let mut _16: &dyn std::fmt::Debug;   // in scope 0 at ui/deriving/deriving-associated-types.rs:32:5: 32:21
    let mut _17: &PrivateStruct<A>;      // in scope 0 at ui/deriving/deriving-associated-types.rs:32:5: 32:21
    let _18: &PrivateStruct<A>;          // in scope 0 at ui/deriving/deriving-associated-types.rs:32:5: 32:21
    let mut _19: &dyn std::fmt::Debug;   // in scope 0 at ui/deriving/deriving-associated-types.rs:33:5: 33:6
    let mut _20: &B;                     // in scope 0 at ui/deriving/deriving-associated-types.rs:33:5: 33:6
    let _21: &B;                         // in scope 0 at ui/deriving/deriving-associated-types.rs:33:5: 33:6
    let mut _22: &dyn std::fmt::Debug;   // in scope 0 at ui/deriving/deriving-associated-types.rs:34:5: 34:12
    let mut _23: &<B as DeclaredTrait>::Type; // in scope 0 at ui/deriving/deriving-associated-types.rs:34:5: 34:12
    let _24: &<B as DeclaredTrait>::Type; // in scope 0 at ui/deriving/deriving-associated-types.rs:34:5: 34:12
    let mut _25: &dyn std::fmt::Debug;   // in scope 0 at ui/deriving/deriving-associated-types.rs:35:5: 35:20
    let mut _26: &std::option::Option<<B as DeclaredTrait>::Type>; // in scope 0 at ui/deriving/deriving-associated-types.rs:35:5: 35:20
    let _27: &std::option::Option<<B as DeclaredTrait>::Type>; // in scope 0 at ui/deriving/deriving-associated-types.rs:35:5: 35:20
    let mut _28: &dyn std::fmt::Debug;   // in scope 0 at ui/deriving/deriving-associated-types.rs:36:5: 36:31
    let mut _29: &<B as DeclaredTrait>::Type; // in scope 0 at ui/deriving/deriving-associated-types.rs:36:5: 36:31
    let _30: &<B as DeclaredTrait>::Type; // in scope 0 at ui/deriving/deriving-associated-types.rs:36:5: 36:31
    let mut _31: &dyn std::fmt::Debug;   // in scope 0 at ui/deriving/deriving-associated-types.rs:37:5: 37:39
    let mut _32: &std::option::Option<<B as DeclaredTrait>::Type>; // in scope 0 at ui/deriving/deriving-associated-types.rs:37:5: 37:39
    let _33: &std::option::Option<<B as DeclaredTrait>::Type>; // in scope 0 at ui/deriving/deriving-associated-types.rs:37:5: 37:39
    let mut _34: &dyn std::fmt::Debug;   // in scope 0 at ui/deriving/deriving-associated-types.rs:38:5: 38:6
    let mut _35: &C;                     // in scope 0 at ui/deriving/deriving-associated-types.rs:38:5: 38:6
    let _36: &C;                         // in scope 0 at ui/deriving/deriving-associated-types.rs:38:5: 38:6
    let mut _37: &dyn std::fmt::Debug;   // in scope 0 at ui/deriving/deriving-associated-types.rs:39:5: 39:12
    let mut _38: &<C as WhereTrait>::Type; // in scope 0 at ui/deriving/deriving-associated-types.rs:39:5: 39:12
    let _39: &<C as WhereTrait>::Type;   // in scope 0 at ui/deriving/deriving-associated-types.rs:39:5: 39:12
    let mut _40: &dyn std::fmt::Debug;   // in scope 0 at ui/deriving/deriving-associated-types.rs:40:5: 40:20
    let mut _41: &std::option::Option<<C as WhereTrait>::Type>; // in scope 0 at ui/deriving/deriving-associated-types.rs:40:5: 40:20
    let _42: &std::option::Option<<C as WhereTrait>::Type>; // in scope 0 at ui/deriving/deriving-associated-types.rs:40:5: 40:20
    let mut _43: &dyn std::fmt::Debug;   // in scope 0 at ui/deriving/deriving-associated-types.rs:41:5: 41:28
    let mut _44: &<C as WhereTrait>::Type; // in scope 0 at ui/deriving/deriving-associated-types.rs:41:5: 41:28
    let _45: &<C as WhereTrait>::Type;   // in scope 0 at ui/deriving/deriving-associated-types.rs:41:5: 41:28
    let mut _46: &dyn std::fmt::Debug;   // in scope 0 at ui/deriving/deriving-associated-types.rs:42:5: 42:36
    let mut _47: &std::option::Option<<C as WhereTrait>::Type>; // in scope 0 at ui/deriving/deriving-associated-types.rs:42:5: 42:36
    let _48: &std::option::Option<<C as WhereTrait>::Type>; // in scope 0 at ui/deriving/deriving-associated-types.rs:42:5: 42:36
    let mut _49: &dyn std::fmt::Debug;   // in scope 0 at ui/deriving/deriving-associated-types.rs:43:5: 43:33
    let mut _50: &&i32;                  // in scope 0 at ui/deriving/deriving-associated-types.rs:43:5: 43:33
    let _51: &&i32;                      // in scope 0 at ui/deriving/deriving-associated-types.rs:43:5: 43:33
    let _52: &i32;                       // in scope 0 at ui/deriving/deriving-associated-types.rs:43:5: 43:33
    let mut _53: &mut std::fmt::Formatter<'_>; // in scope 0 at ui/deriving/deriving-associated-types.rs:27:21: 27:26
    let mut _54: &str;                   // in scope 0 at ui/deriving/deriving-associated-types.rs:27:21: 27:26
    let _55: &str;                       // in scope 0 at ui/deriving/deriving-associated-types.rs:27:21: 27:26
    let mut _56: &[&dyn std::fmt::Debug]; // in scope 0 at ui/deriving/deriving-associated-types.rs:27:21: 27:26
    scope 1 {
        debug values => _3;              // in scope 1 at ui/deriving/deriving-associated-types.rs:27:21: 27:26
    }

    bb0: {
        _9 = &((*_1).0: i32);            // scope 0 at ui/deriving/deriving-associated-types.rs:29:5: 29:17
        _8 = _9;                         // scope 0 at ui/deriving/deriving-associated-types.rs:29:5: 29:17
        _7 = move _8 as &dyn std::fmt::Debug (Pointer(Unsize)); // scope 0 at ui/deriving/deriving-associated-types.rs:29:5: 29:17
        _12 = &((*_1).1: std::option::Option<i32>); // scope 0 at ui/deriving/deriving-associated-types.rs:30:5: 30:25
        _11 = _12;                       // scope 0 at ui/deriving/deriving-associated-types.rs:30:5: 30:25
        _10 = move _11 as &dyn std::fmt::Debug (Pointer(Unsize)); // scope 0 at ui/deriving/deriving-associated-types.rs:30:5: 30:25
        _15 = &((*_1).2: A);             // scope 0 at ui/deriving/deriving-associated-types.rs:31:5: 31:6
        _14 = _15;                       // scope 0 at ui/deriving/deriving-associated-types.rs:31:5: 31:6
        _13 = move _14 as &dyn std::fmt::Debug (Pointer(Unsize)); // scope 0 at ui/deriving/deriving-associated-types.rs:31:5: 31:6
        _18 = &((*_1).3: PrivateStruct<A>); // scope 0 at ui/deriving/deriving-associated-types.rs:32:5: 32:21
        _17 = _18;                       // scope 0 at ui/deriving/deriving-associated-types.rs:32:5: 32:21
        _16 = move _17 as &dyn std::fmt::Debug (Pointer(Unsize)); // scope 0 at ui/deriving/deriving-associated-types.rs:32:5: 32:21
        _21 = &((*_1).4: B);             // scope 0 at ui/deriving/deriving-associated-types.rs:33:5: 33:6
        _20 = _21;                       // scope 0 at ui/deriving/deriving-associated-types.rs:33:5: 33:6
        _19 = move _20 as &dyn std::fmt::Debug (Pointer(Unsize)); // scope 0 at ui/deriving/deriving-associated-types.rs:33:5: 33:6
        _24 = &((*_1).5: <B as DeclaredTrait>::Type); // scope 0 at ui/deriving/deriving-associated-types.rs:34:5: 34:12
        _23 = _24;                       // scope 0 at ui/deriving/deriving-associated-types.rs:34:5: 34:12
        _22 = move _23 as &dyn std::fmt::Debug (Pointer(Unsize)); // scope 0 at ui/deriving/deriving-associated-types.rs:34:5: 34:12
        _27 = &((*_1).6: std::option::Option<<B as DeclaredTrait>::Type>); // scope 0 at ui/deriving/deriving-associated-types.rs:35:5: 35:20
        _26 = _27;                       // scope 0 at ui/deriving/deriving-associated-types.rs:35:5: 35:20
        _25 = move _26 as &dyn std::fmt::Debug (Pointer(Unsize)); // scope 0 at ui/deriving/deriving-associated-types.rs:35:5: 35:20
        _30 = &((*_1).7: <B as DeclaredTrait>::Type); // scope 0 at ui/deriving/deriving-associated-types.rs:36:5: 36:31
        _29 = _30;                       // scope 0 at ui/deriving/deriving-associated-types.rs:36:5: 36:31
        _28 = move _29 as &dyn std::fmt::Debug (Pointer(Unsize)); // scope 0 at ui/deriving/deriving-associated-types.rs:36:5: 36:31
        _33 = &((*_1).8: std::option::Option<<B as DeclaredTrait>::Type>); // scope 0 at ui/deriving/deriving-associated-types.rs:37:5: 37:39
        _32 = _33;                       // scope 0 at ui/deriving/deriving-associated-types.rs:37:5: 37:39
        _31 = move _32 as &dyn std::fmt::Debug (Pointer(Unsize)); // scope 0 at ui/deriving/deriving-associated-types.rs:37:5: 37:39
        _36 = &((*_1).9: C);             // scope 0 at ui/deriving/deriving-associated-types.rs:38:5: 38:6
        _35 = _36;                       // scope 0 at ui/deriving/deriving-associated-types.rs:38:5: 38:6
        _34 = move _35 as &dyn std::fmt::Debug (Pointer(Unsize)); // scope 0 at ui/deriving/deriving-associated-types.rs:38:5: 38:6
        _39 = &((*_1).10: <C as WhereTrait>::Type); // scope 0 at ui/deriving/deriving-associated-types.rs:39:5: 39:12
        _38 = _39;                       // scope 0 at ui/deriving/deriving-associated-types.rs:39:5: 39:12
        _37 = move _38 as &dyn std::fmt::Debug (Pointer(Unsize)); // scope 0 at ui/deriving/deriving-associated-types.rs:39:5: 39:12
        _42 = &((*_1).11: std::option::Option<<C as WhereTrait>::Type>); // scope 0 at ui/deriving/deriving-associated-types.rs:40:5: 40:20
        _41 = _42;                       // scope 0 at ui/deriving/deriving-associated-types.rs:40:5: 40:20
        _40 = move _41 as &dyn std::fmt::Debug (Pointer(Unsize)); // scope 0 at ui/deriving/deriving-associated-types.rs:40:5: 40:20
        _45 = &((*_1).12: <C as WhereTrait>::Type); // scope 0 at ui/deriving/deriving-associated-types.rs:41:5: 41:28
        _44 = _45;                       // scope 0 at ui/deriving/deriving-associated-types.rs:41:5: 41:28
        _43 = move _44 as &dyn std::fmt::Debug (Pointer(Unsize)); // scope 0 at ui/deriving/deriving-associated-types.rs:41:5: 41:28
        _48 = &((*_1).13: std::option::Option<<C as WhereTrait>::Type>); // scope 0 at ui/deriving/deriving-associated-types.rs:42:5: 42:36
        _47 = _48;                       // scope 0 at ui/deriving/deriving-associated-types.rs:42:5: 42:36
        _46 = move _47 as &dyn std::fmt::Debug (Pointer(Unsize)); // scope 0 at ui/deriving/deriving-associated-types.rs:42:5: 42:36
        _52 = &((*_1).14: i32);          // scope 0 at ui/deriving/deriving-associated-types.rs:43:5: 43:33
        _51 = &_52;                      // scope 0 at ui/deriving/deriving-associated-types.rs:43:5: 43:33
        _50 = _51;                       // scope 0 at ui/deriving/deriving-associated-types.rs:43:5: 43:33
        _49 = move _50 as &dyn std::fmt::Debug (Pointer(Unsize)); // scope 0 at ui/deriving/deriving-associated-types.rs:43:5: 43:33
        _6 = [move _7, move _10, move _13, move _16, move _19, move _22, move _25, move _28, move _31, move _34, move _37, move _40, move _43, move _46, move _49]; // scope 0 at ui/deriving/deriving-associated-types.rs:27:21: 27:26
        _5 = &_6;                        // scope 0 at ui/deriving/deriving-associated-types.rs:27:21: 27:26
        _4 = _5;                         // scope 0 at ui/deriving/deriving-associated-types.rs:27:21: 27:26
        _3 = move _4 as &[&dyn std::fmt::Debug] (Pointer(Unsize)); // scope 0 at ui/deriving/deriving-associated-types.rs:27:21: 27:26
        _53 = &mut (*_2);                // scope 1 at ui/deriving/deriving-associated-types.rs:27:21: 27:26
        _55 = const "TupleStruct";       // scope 1 at ui/deriving/deriving-associated-types.rs:27:21: 27:26
                                         // mir::Constant
                                         // + span: ui/deriving/deriving-associated-types.rs:27:21: 27:26
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _54 = _55;                       // scope 1 at ui/deriving/deriving-associated-types.rs:27:21: 27:26
        _56 = _3;                        // scope 1 at ui/deriving/deriving-associated-types.rs:27:21: 27:26
        _0 = Formatter::<'_>::debug_tuple_fields_finish(move _53, move _54, move _56) -> bb1; // scope 1 at ui/deriving/deriving-associated-types.rs:27:21: 27:26
                                         // mir::Constant
                                         // + span: ui/deriving/deriving-associated-types.rs:27:21: 27:26
                                         // + user_ty: UserType(2)
                                         // + literal: Const { ty: for<'b, 'a, 'c, 'd> fn(&'b mut Formatter<'_>, &'a str, &'c [&'d (dyn Debug + 'd)]) -> Result<(), std::fmt::Error> {Formatter::<'_>::debug_tuple_fields_finish}, val: Value(<ZST>) }
    }

    bb1: {
        return;                          // scope 0 at ui/deriving/deriving-associated-types.rs:27:26: 27:26
    }
}

fn <impl at ui/deriving/deriving-associated-types.rs:46:10: 46:19>::eq(_1: &Struct<A, B, C>, _2: &Struct<A, B, C>) -> bool {
    debug self => _1;                    // in scope 0 at ui/deriving/deriving-associated-types.rs:46:10: 46:19
    debug other => _2;                   // in scope 0 at ui/deriving/deriving-associated-types.rs:46:10: 46:19
    let mut _0: bool;                    // return place in scope 0 at ui/deriving/deriving-associated-types.rs:46:10: 46:19
    let mut _3: bool;                    // in scope 0 at ui/deriving/deriving-associated-types.rs:61:5: 61:40
    let mut _4: bool;                    // in scope 0 at ui/deriving/deriving-associated-types.rs:60:5: 60:32
    let mut _5: bool;                    // in scope 0 at ui/deriving/deriving-associated-types.rs:59:5: 59:24
    let mut _6: bool;                    // in scope 0 at ui/deriving/deriving-associated-types.rs:58:5: 58:16
    let mut _7: bool;                    // in scope 0 at ui/deriving/deriving-associated-types.rs:57:5: 57:9
    let mut _8: bool;                    // in scope 0 at ui/deriving/deriving-associated-types.rs:56:5: 56:43
    let mut _9: bool;                    // in scope 0 at ui/deriving/deriving-associated-types.rs:55:5: 55:35
    let mut _10: bool;                   // in scope 0 at ui/deriving/deriving-associated-types.rs:54:5: 54:24
    let mut _11: bool;                   // in scope 0 at ui/deriving/deriving-associated-types.rs:53:5: 53:16
    let mut _12: bool;                   // in scope 0 at ui/deriving/deriving-associated-types.rs:52:5: 52:9
    let mut _13: bool;                   // in scope 0 at ui/deriving/deriving-associated-types.rs:51:5: 51:25
    let mut _14: bool;                   // in scope 0 at ui/deriving/deriving-associated-types.rs:50:5: 50:10
    let mut _15: bool;                   // in scope 0 at ui/deriving/deriving-associated-types.rs:49:5: 49:29
    let mut _16: bool;                   // in scope 0 at ui/deriving/deriving-associated-types.rs:48:5: 48:21
    let mut _17: i32;                    // in scope 0 at ui/deriving/deriving-associated-types.rs:48:5: 48:21
    let mut _18: i32;                    // in scope 0 at ui/deriving/deriving-associated-types.rs:48:5: 48:21
    let mut _19: bool;                   // in scope 0 at ui/deriving/deriving-associated-types.rs:49:5: 49:29
    let mut _20: &std::option::Option<i32>; // in scope 0 at ui/deriving/deriving-associated-types.rs:49:5: 49:29
    let mut _21: &std::option::Option<i32>; // in scope 0 at ui/deriving/deriving-associated-types.rs:49:5: 49:29
    let mut _22: bool;                   // in scope 0 at ui/deriving/deriving-associated-types.rs:50:5: 50:10
    let mut _23: &A;                     // in scope 0 at ui/deriving/deriving-associated-types.rs:50:5: 50:10
    let mut _24: &A;                     // in scope 0 at ui/deriving/deriving-associated-types.rs:50:5: 50:10
    let mut _25: bool;                   // in scope 0 at ui/deriving/deriving-associated-types.rs:51:5: 51:25
    let mut _26: &PrivateStruct<A>;      // in scope 0 at ui/deriving/deriving-associated-types.rs:51:5: 51:25
    let mut _27: &PrivateStruct<A>;      // in scope 0 at ui/deriving/deriving-associated-types.rs:51:5: 51:25
    let mut _28: bool;                   // in scope 0 at ui/deriving/deriving-associated-types.rs:52:5: 52:9
    let mut _29: &B;                     // in scope 0 at ui/deriving/deriving-associated-types.rs:52:5: 52:9
    let mut _30: &B;                     // in scope 0 at ui/deriving/deriving-associated-types.rs:52:5: 52:9
    let mut _31: bool;                   // in scope 0 at ui/deriving/deriving-associated-types.rs:53:5: 53:16
    let mut _32: &<B as DeclaredTrait>::Type; // in scope 0 at ui/deriving/deriving-associated-types.rs:53:5: 53:16
    let mut _33: &<B as DeclaredTrait>::Type; // in scope 0 at ui/deriving/deriving-associated-types.rs:53:5: 53:16
    let mut _34: bool;                   // in scope 0 at ui/deriving/deriving-associated-types.rs:54:5: 54:24
    let mut _35: &std::option::Option<<B as DeclaredTrait>::Type>; // in scope 0 at ui/deriving/deriving-associated-types.rs:54:5: 54:24
    let mut _36: &std::option::Option<<B as DeclaredTrait>::Type>; // in scope 0 at ui/deriving/deriving-associated-types.rs:54:5: 54:24
    let mut _37: bool;                   // in scope 0 at ui/deriving/deriving-associated-types.rs:55:5: 55:35
    let mut _38: &<B as DeclaredTrait>::Type; // in scope 0 at ui/deriving/deriving-associated-types.rs:55:5: 55:35
    let mut _39: &<B as DeclaredTrait>::Type; // in scope 0 at ui/deriving/deriving-associated-types.rs:55:5: 55:35
    let mut _40: bool;                   // in scope 0 at ui/deriving/deriving-associated-types.rs:56:5: 56:43
    let mut _41: &std::option::Option<<B as DeclaredTrait>::Type>; // in scope 0 at ui/deriving/deriving-associated-types.rs:56:5: 56:43
    let mut _42: &std::option::Option<<B as DeclaredTrait>::Type>; // in scope 0 at ui/deriving/deriving-associated-types.rs:56:5: 56:43
    let mut _43: bool;                   // in scope 0 at ui/deriving/deriving-associated-types.rs:57:5: 57:9
    let mut _44: &C;                     // in scope 0 at ui/deriving/deriving-associated-types.rs:57:5: 57:9
    let mut _45: &C;                     // in scope 0 at ui/deriving/deriving-associated-types.rs:57:5: 57:9
    let mut _46: bool;                   // in scope 0 at ui/deriving/deriving-associated-types.rs:58:5: 58:16
    let mut _47: &<C as WhereTrait>::Type; // in scope 0 at ui/deriving/deriving-associated-types.rs:58:5: 58:16
    let mut _48: &<C as WhereTrait>::Type; // in scope 0 at ui/deriving/deriving-associated-types.rs:58:5: 58:16
    let mut _49: bool;                   // in scope 0 at ui/deriving/deriving-associated-types.rs:59:5: 59:24
    let mut _50: &std::option::Option<<C as WhereTrait>::Type>; // in scope 0 at ui/deriving/deriving-associated-types.rs:59:5: 59:24
    let mut _51: &std::option::Option<<C as WhereTrait>::Type>; // in scope 0 at ui/deriving/deriving-associated-types.rs:59:5: 59:24
    let mut _52: bool;                   // in scope 0 at ui/deriving/deriving-associated-types.rs:60:5: 60:32
    let mut _53: &<C as WhereTrait>::Type; // in scope 0 at ui/deriving/deriving-associated-types.rs:60:5: 60:32
    let mut _54: &<C as WhereTrait>::Type; // in scope 0 at ui/deriving/deriving-associated-types.rs:60:5: 60:32
    let mut _55: bool;                   // in scope 0 at ui/deriving/deriving-associated-types.rs:61:5: 61:40
    let mut _56: &std::option::Option<<C as WhereTrait>::Type>; // in scope 0 at ui/deriving/deriving-associated-types.rs:61:5: 61:40
    let mut _57: &std::option::Option<<C as WhereTrait>::Type>; // in scope 0 at ui/deriving/deriving-associated-types.rs:61:5: 61:40
    let mut _58: bool;                   // in scope 0 at ui/deriving/deriving-associated-types.rs:62:5: 62:36
    let mut _59: i32;                    // in scope 0 at ui/deriving/deriving-associated-types.rs:62:5: 62:36
    let mut _60: i32;                    // in scope 0 at ui/deriving/deriving-associated-types.rs:62:5: 62:36

    bb0: {
        _17 = ((*_1).0: i32);            // scope 0 at ui/deriving/deriving-associated-types.rs:48:5: 48:21
        _18 = ((*_2).0: i32);            // scope 0 at ui/deriving/deriving-associated-types.rs:48:5: 48:21
        _16 = Eq(move _17, move _18);    // scope 0 at ui/deriving/deriving-associated-types.rs:48:5: 48:21
        switchInt(move _16) -> [0: bb40, otherwise: bb41]; // scope 0 at ui/deriving/deriving-associated-types.rs:49:5: 49:29
    }

    bb1: {
        _0 = const false;                // scope 0 at ui/deriving/deriving-associated-types.rs:62:5: 62:36
        goto -> bb3;                     // scope 0 at ui/deriving/deriving-associated-types.rs:62:5: 62:36
    }

    bb2: {
        _59 = ((*_1).14: i32);           // scope 0 at ui/deriving/deriving-associated-types.rs:62:5: 62:36
        _60 = ((*_2).14: i32);           // scope 0 at ui/deriving/deriving-associated-types.rs:62:5: 62:36
        _58 = Eq(move _59, move _60);    // scope 0 at ui/deriving/deriving-associated-types.rs:62:5: 62:36
        _0 = move _58;                   // scope 0 at ui/deriving/deriving-associated-types.rs:62:5: 62:36
        goto -> bb3;                     // scope 0 at ui/deriving/deriving-associated-types.rs:62:5: 62:36
    }

    bb3: {
        return;                          // scope 0 at ui/deriving/deriving-associated-types.rs:46:19: 46:19
    }

    bb4: {
        _3 = const false;                // scope 0 at ui/deriving/deriving-associated-types.rs:61:5: 61:40
        goto -> bb6;                     // scope 0 at ui/deriving/deriving-associated-types.rs:61:5: 61:40
    }

    bb5: {
        _56 = &((*_1).13: std::option::Option<<C as WhereTrait>::Type>); // scope 0 at ui/deriving/deriving-associated-types.rs:61:5: 61:40
        _57 = &((*_2).13: std::option::Option<<C as WhereTrait>::Type>); // scope 0 at ui/deriving/deriving-associated-types.rs:61:5: 61:40
        _55 = <Option<<C as WhereTrait>::Type> as PartialEq>::eq(move _56, move _57) -> bb55; // scope 0 at ui/deriving/deriving-associated-types.rs:61:5: 61:40
                                         // mir::Constant
                                         // + span: ui/deriving/deriving-associated-types.rs:61:5: 61:40
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a Option<<C as WhereTrait>::Type>, &'b Option<<C as WhereTrait>::Type>) -> bool {<Option<<C as WhereTrait>::Type> as PartialEq>::eq}, val: Value(<ZST>) }
    }

    bb6: {
        switchInt(move _3) -> [0: bb1, otherwise: bb2]; // scope 0 at ui/deriving/deriving-associated-types.rs:62:5: 62:36
    }

    bb7: {
        _4 = const false;                // scope 0 at ui/deriving/deriving-associated-types.rs:60:5: 60:32
        goto -> bb9;                     // scope 0 at ui/deriving/deriving-associated-types.rs:60:5: 60:32
    }

    bb8: {
        _53 = &((*_1).12: <C as WhereTrait>::Type); // scope 0 at ui/deriving/deriving-associated-types.rs:60:5: 60:32
        _54 = &((*_2).12: <C as WhereTrait>::Type); // scope 0 at ui/deriving/deriving-associated-types.rs:60:5: 60:32
        _52 = <<C as WhereTrait>::Type as PartialEq>::eq(move _53, move _54) -> bb54; // scope 0 at ui/deriving/deriving-associated-types.rs:60:5: 60:32
                                         // mir::Constant
                                         // + span: ui/deriving/deriving-associated-types.rs:60:5: 60:32
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a <C as WhereTrait>::Type, &'b <C as WhereTrait>::Type) -> bool {<<C as WhereTrait>::Type as PartialEq>::eq}, val: Value(<ZST>) }
    }

    bb9: {
        switchInt(move _4) -> [0: bb4, otherwise: bb5]; // scope 0 at ui/deriving/deriving-associated-types.rs:61:5: 61:40
    }

    bb10: {
        _5 = const false;                // scope 0 at ui/deriving/deriving-associated-types.rs:59:5: 59:24
        goto -> bb12;                    // scope 0 at ui/deriving/deriving-associated-types.rs:59:5: 59:24
    }

    bb11: {
        _50 = &((*_1).11: std::option::Option<<C as WhereTrait>::Type>); // scope 0 at ui/deriving/deriving-associated-types.rs:59:5: 59:24
        _51 = &((*_2).11: std::option::Option<<C as WhereTrait>::Type>); // scope 0 at ui/deriving/deriving-associated-types.rs:59:5: 59:24
        _49 = <Option<<C as WhereTrait>::Type> as PartialEq>::eq(move _50, move _51) -> bb53; // scope 0 at ui/deriving/deriving-associated-types.rs:59:5: 59:24
                                         // mir::Constant
                                         // + span: ui/deriving/deriving-associated-types.rs:59:5: 59:24
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a Option<<C as WhereTrait>::Type>, &'b Option<<C as WhereTrait>::Type>) -> bool {<Option<<C as WhereTrait>::Type> as PartialEq>::eq}, val: Value(<ZST>) }
    }

    bb12: {
        switchInt(move _5) -> [0: bb7, otherwise: bb8]; // scope 0 at ui/deriving/deriving-associated-types.rs:60:5: 60:32
    }

    bb13: {
        _6 = const false;                // scope 0 at ui/deriving/deriving-associated-types.rs:58:5: 58:16
        goto -> bb15;                    // scope 0 at ui/deriving/deriving-associated-types.rs:58:5: 58:16
    }

    bb14: {
        _47 = &((*_1).10: <C as WhereTrait>::Type); // scope 0 at ui/deriving/deriving-associated-types.rs:58:5: 58:16
        _48 = &((*_2).10: <C as WhereTrait>::Type); // scope 0 at ui/deriving/deriving-associated-types.rs:58:5: 58:16
        _46 = <<C as WhereTrait>::Type as PartialEq>::eq(move _47, move _48) -> bb52; // scope 0 at ui/deriving/deriving-associated-types.rs:58:5: 58:16
                                         // mir::Constant
                                         // + span: ui/deriving/deriving-associated-types.rs:58:5: 58:16
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a <C as WhereTrait>::Type, &'b <C as WhereTrait>::Type) -> bool {<<C as WhereTrait>::Type as PartialEq>::eq}, val: Value(<ZST>) }
    }

    bb15: {
        switchInt(move _6) -> [0: bb10, otherwise: bb11]; // scope 0 at ui/deriving/deriving-associated-types.rs:59:5: 59:24
    }

    bb16: {
        _7 = const false;                // scope 0 at ui/deriving/deriving-associated-types.rs:57:5: 57:9
        goto -> bb18;                    // scope 0 at ui/deriving/deriving-associated-types.rs:57:5: 57:9
    }

    bb17: {
        _44 = &((*_1).9: C);             // scope 0 at ui/deriving/deriving-associated-types.rs:57:5: 57:9
        _45 = &((*_2).9: C);             // scope 0 at ui/deriving/deriving-associated-types.rs:57:5: 57:9
        _43 = <C as PartialEq>::eq(move _44, move _45) -> bb51; // scope 0 at ui/deriving/deriving-associated-types.rs:57:5: 57:9
                                         // mir::Constant
                                         // + span: ui/deriving/deriving-associated-types.rs:57:5: 57:9
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a C, &'b C) -> bool {<C as PartialEq>::eq}, val: Value(<ZST>) }
    }

    bb18: {
        switchInt(move _7) -> [0: bb13, otherwise: bb14]; // scope 0 at ui/deriving/deriving-associated-types.rs:58:5: 58:16
    }

    bb19: {
        _8 = const false;                // scope 0 at ui/deriving/deriving-associated-types.rs:56:5: 56:43
        goto -> bb21;                    // scope 0 at ui/deriving/deriving-associated-types.rs:56:5: 56:43
    }

    bb20: {
        _41 = &((*_1).8: std::option::Option<<B as DeclaredTrait>::Type>); // scope 0 at ui/deriving/deriving-associated-types.rs:56:5: 56:43
        _42 = &((*_2).8: std::option::Option<<B as DeclaredTrait>::Type>); // scope 0 at ui/deriving/deriving-associated-types.rs:56:5: 56:43
        _40 = <Option<<B as DeclaredTrait>::Type> as PartialEq>::eq(move _41, move _42) -> bb50; // scope 0 at ui/deriving/deriving-associated-types.rs:56:5: 56:43
                                         // mir::Constant
                                         // + span: ui/deriving/deriving-associated-types.rs:56:5: 56:43
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a Option<<B as DeclaredTrait>::Type>, &'b Option<<B as DeclaredTrait>::Type>) -> bool {<Option<<B as DeclaredTrait>::Type> as PartialEq>::eq}, val: Value(<ZST>) }
    }

    bb21: {
        switchInt(move _8) -> [0: bb16, otherwise: bb17]; // scope 0 at ui/deriving/deriving-associated-types.rs:57:5: 57:9
    }

    bb22: {
        _9 = const false;                // scope 0 at ui/deriving/deriving-associated-types.rs:55:5: 55:35
        goto -> bb24;                    // scope 0 at ui/deriving/deriving-associated-types.rs:55:5: 55:35
    }

    bb23: {
        _38 = &((*_1).7: <B as DeclaredTrait>::Type); // scope 0 at ui/deriving/deriving-associated-types.rs:55:5: 55:35
        _39 = &((*_2).7: <B as DeclaredTrait>::Type); // scope 0 at ui/deriving/deriving-associated-types.rs:55:5: 55:35
        _37 = <<B as DeclaredTrait>::Type as PartialEq>::eq(move _38, move _39) -> bb49; // scope 0 at ui/deriving/deriving-associated-types.rs:55:5: 55:35
                                         // mir::Constant
                                         // + span: ui/deriving/deriving-associated-types.rs:55:5: 55:35
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a <B as DeclaredTrait>::Type, &'b <B as DeclaredTrait>::Type) -> bool {<<B as DeclaredTrait>::Type as PartialEq>::eq}, val: Value(<ZST>) }
    }

    bb24: {
        switchInt(move _9) -> [0: bb19, otherwise: bb20]; // scope 0 at ui/deriving/deriving-associated-types.rs:56:5: 56:43
    }

    bb25: {
        _10 = const false;               // scope 0 at ui/deriving/deriving-associated-types.rs:54:5: 54:24
        goto -> bb27;                    // scope 0 at ui/deriving/deriving-associated-types.rs:54:5: 54:24
    }

    bb26: {
        _35 = &((*_1).6: std::option::Option<<B as DeclaredTrait>::Type>); // scope 0 at ui/deriving/deriving-associated-types.rs:54:5: 54:24
        _36 = &((*_2).6: std::option::Option<<B as DeclaredTrait>::Type>); // scope 0 at ui/deriving/deriving-associated-types.rs:54:5: 54:24
        _34 = <Option<<B as DeclaredTrait>::Type> as PartialEq>::eq(move _35, move _36) -> bb48; // scope 0 at ui/deriving/deriving-associated-types.rs:54:5: 54:24
                                         // mir::Constant
                                         // + span: ui/deriving/deriving-associated-types.rs:54:5: 54:24
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a Option<<B as DeclaredTrait>::Type>, &'b Option<<B as DeclaredTrait>::Type>) -> bool {<Option<<B as DeclaredTrait>::Type> as PartialEq>::eq}, val: Value(<ZST>) }
    }

    bb27: {
        switchInt(move _10) -> [0: bb22, otherwise: bb23]; // scope 0 at ui/deriving/deriving-associated-types.rs:55:5: 55:35
    }

    bb28: {
        _11 = const false;               // scope 0 at ui/deriving/deriving-associated-types.rs:53:5: 53:16
        goto -> bb30;                    // scope 0 at ui/deriving/deriving-associated-types.rs:53:5: 53:16
    }

    bb29: {
        _32 = &((*_1).5: <B as DeclaredTrait>::Type); // scope 0 at ui/deriving/deriving-associated-types.rs:53:5: 53:16
        _33 = &((*_2).5: <B as DeclaredTrait>::Type); // scope 0 at ui/deriving/deriving-associated-types.rs:53:5: 53:16
        _31 = <<B as DeclaredTrait>::Type as PartialEq>::eq(move _32, move _33) -> bb47; // scope 0 at ui/deriving/deriving-associated-types.rs:53:5: 53:16
                                         // mir::Constant
                                         // + span: ui/deriving/deriving-associated-types.rs:53:5: 53:16
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a <B as DeclaredTrait>::Type, &'b <B as DeclaredTrait>::Type) -> bool {<<B as DeclaredTrait>::Type as PartialEq>::eq}, val: Value(<ZST>) }
    }

    bb30: {
        switchInt(move _11) -> [0: bb25, otherwise: bb26]; // scope 0 at ui/deriving/deriving-associated-types.rs:54:5: 54:24
    }

    bb31: {
        _12 = const false;               // scope 0 at ui/deriving/deriving-associated-types.rs:52:5: 52:9
        goto -> bb33;                    // scope 0 at ui/deriving/deriving-associated-types.rs:52:5: 52:9
    }

    bb32: {
        _29 = &((*_1).4: B);             // scope 0 at ui/deriving/deriving-associated-types.rs:52:5: 52:9
        _30 = &((*_2).4: B);             // scope 0 at ui/deriving/deriving-associated-types.rs:52:5: 52:9
        _28 = <B as PartialEq>::eq(move _29, move _30) -> bb46; // scope 0 at ui/deriving/deriving-associated-types.rs:52:5: 52:9
                                         // mir::Constant
                                         // + span: ui/deriving/deriving-associated-types.rs:52:5: 52:9
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a B, &'b B) -> bool {<B as PartialEq>::eq}, val: Value(<ZST>) }
    }

    bb33: {
        switchInt(move _12) -> [0: bb28, otherwise: bb29]; // scope 0 at ui/deriving/deriving-associated-types.rs:53:5: 53:16
    }

    bb34: {
        _13 = const false;               // scope 0 at ui/deriving/deriving-associated-types.rs:51:5: 51:25
        goto -> bb36;                    // scope 0 at ui/deriving/deriving-associated-types.rs:51:5: 51:25
    }

    bb35: {
        _26 = &((*_1).3: PrivateStruct<A>); // scope 0 at ui/deriving/deriving-associated-types.rs:51:5: 51:25
        _27 = &((*_2).3: PrivateStruct<A>); // scope 0 at ui/deriving/deriving-associated-types.rs:51:5: 51:25
        _25 = <PrivateStruct<A> as PartialEq>::eq(move _26, move _27) -> bb45; // scope 0 at ui/deriving/deriving-associated-types.rs:51:5: 51:25
                                         // mir::Constant
                                         // + span: ui/deriving/deriving-associated-types.rs:51:5: 51:25
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a PrivateStruct<A>, &'b PrivateStruct<A>) -> bool {<PrivateStruct<A> as PartialEq>::eq}, val: Value(<ZST>) }
    }

    bb36: {
        switchInt(move _13) -> [0: bb31, otherwise: bb32]; // scope 0 at ui/deriving/deriving-associated-types.rs:52:5: 52:9
    }

    bb37: {
        _14 = const false;               // scope 0 at ui/deriving/deriving-associated-types.rs:50:5: 50:10
        goto -> bb39;                    // scope 0 at ui/deriving/deriving-associated-types.rs:50:5: 50:10
    }

    bb38: {
        _23 = &((*_1).2: A);             // scope 0 at ui/deriving/deriving-associated-types.rs:50:5: 50:10
        _24 = &((*_2).2: A);             // scope 0 at ui/deriving/deriving-associated-types.rs:50:5: 50:10
        _22 = <A as PartialEq>::eq(move _23, move _24) -> bb44; // scope 0 at ui/deriving/deriving-associated-types.rs:50:5: 50:10
                                         // mir::Constant
                                         // + span: ui/deriving/deriving-associated-types.rs:50:5: 50:10
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a A, &'b A) -> bool {<A as PartialEq>::eq}, val: Value(<ZST>) }
    }

    bb39: {
        switchInt(move _14) -> [0: bb34, otherwise: bb35]; // scope 0 at ui/deriving/deriving-associated-types.rs:51:5: 51:25
    }

    bb40: {
        _15 = const false;               // scope 0 at ui/deriving/deriving-associated-types.rs:49:5: 49:29
        goto -> bb42;                    // scope 0 at ui/deriving/deriving-associated-types.rs:49:5: 49:29
    }

    bb41: {
        _20 = &((*_1).1: std::option::Option<i32>); // scope 0 at ui/deriving/deriving-associated-types.rs:49:5: 49:29
        _21 = &((*_2).1: std::option::Option<i32>); // scope 0 at ui/deriving/deriving-associated-types.rs:49:5: 49:29
        _19 = <Option<i32> as PartialEq>::eq(move _20, move _21) -> bb43; // scope 0 at ui/deriving/deriving-associated-types.rs:49:5: 49:29
                                         // mir::Constant
                                         // + span: ui/deriving/deriving-associated-types.rs:49:5: 49:29
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a Option<i32>, &'b Option<i32>) -> bool {<Option<i32> as PartialEq>::eq}, val: Value(<ZST>) }
    }

    bb42: {
        switchInt(move _15) -> [0: bb37, otherwise: bb38]; // scope 0 at ui/deriving/deriving-associated-types.rs:50:5: 50:10
    }

    bb43: {
        _15 = move _19;                  // scope 0 at ui/deriving/deriving-associated-types.rs:49:5: 49:29
        goto -> bb42;                    // scope 0 at ui/deriving/deriving-associated-types.rs:49:5: 49:29
    }

    bb44: {
        _14 = move _22;                  // scope 0 at ui/deriving/deriving-associated-types.rs:50:5: 50:10
        goto -> bb39;                    // scope 0 at ui/deriving/deriving-associated-types.rs:50:5: 50:10
    }

    bb45: {
        _13 = move _25;                  // scope 0 at ui/deriving/deriving-associated-types.rs:51:5: 51:25
        goto -> bb36;                    // scope 0 at ui/deriving/deriving-associated-types.rs:51:5: 51:25
    }

    bb46: {
        _12 = move _28;                  // scope 0 at ui/deriving/deriving-associated-types.rs:52:5: 52:9
        goto -> bb33;                    // scope 0 at ui/deriving/deriving-associated-types.rs:52:5: 52:9
    }

    bb47: {
        _11 = move _31;                  // scope 0 at ui/deriving/deriving-associated-types.rs:53:5: 53:16
        goto -> bb30;                    // scope 0 at ui/deriving/deriving-associated-types.rs:53:5: 53:16
    }

    bb48: {
        _10 = move _34;                  // scope 0 at ui/deriving/deriving-associated-types.rs:54:5: 54:24
        goto -> bb27;                    // scope 0 at ui/deriving/deriving-associated-types.rs:54:5: 54:24
    }

    bb49: {
        _9 = move _37;                   // scope 0 at ui/deriving/deriving-associated-types.rs:55:5: 55:35
        goto -> bb24;                    // scope 0 at ui/deriving/deriving-associated-types.rs:55:5: 55:35
    }

    bb50: {
        _8 = move _40;                   // scope 0 at ui/deriving/deriving-associated-types.rs:56:5: 56:43
        goto -> bb21;                    // scope 0 at ui/deriving/deriving-associated-types.rs:56:5: 56:43
    }

    bb51: {
        _7 = move _43;                   // scope 0 at ui/deriving/deriving-associated-types.rs:57:5: 57:9
        goto -> bb18;                    // scope 0 at ui/deriving/deriving-associated-types.rs:57:5: 57:9
    }

    bb52: {
        _6 = move _46;                   // scope 0 at ui/deriving/deriving-associated-types.rs:58:5: 58:16
        goto -> bb15;                    // scope 0 at ui/deriving/deriving-associated-types.rs:58:5: 58:16
    }

    bb53: {
        _5 = move _49;                   // scope 0 at ui/deriving/deriving-associated-types.rs:59:5: 59:24
        goto -> bb12;                    // scope 0 at ui/deriving/deriving-associated-types.rs:59:5: 59:24
    }

    bb54: {
        _4 = move _52;                   // scope 0 at ui/deriving/deriving-associated-types.rs:60:5: 60:32
        goto -> bb9;                     // scope 0 at ui/deriving/deriving-associated-types.rs:60:5: 60:32
    }

    bb55: {
        _3 = move _55;                   // scope 0 at ui/deriving/deriving-associated-types.rs:61:5: 61:40
        goto -> bb6;                     // scope 0 at ui/deriving/deriving-associated-types.rs:61:5: 61:40
    }
}

fn <impl at ui/deriving/deriving-associated-types.rs:46:21: 46:26>::fmt(_1: &Struct<A, B, C>, _2: &mut Formatter<'_>) -> Result<(), std::fmt::Error> {
    debug self => _1;                    // in scope 0 at ui/deriving/deriving-associated-types.rs:46:21: 46:26
    debug f => _2;                       // in scope 0 at ui/deriving/deriving-associated-types.rs:46:21: 46:26
    let mut _0: std::result::Result<(), std::fmt::Error>; // return place in scope 0 at ui/deriving/deriving-associated-types.rs:46:21: 46:26
    let _3: &[&str; 15];                 // in scope 0 at ui/deriving/deriving-associated-types.rs:46:21: 46:26
    let _4: &[&str; 15];                 // in scope 0 at ui/deriving/deriving-associated-types.rs:46:21: 46:26
    let mut _6: &[&dyn std::fmt::Debug; 15]; // in scope 0 at ui/deriving/deriving-associated-types.rs:46:21: 46:26
    let _7: &[&dyn std::fmt::Debug; 15]; // in scope 0 at ui/deriving/deriving-associated-types.rs:46:21: 46:26
    let _8: [&dyn std::fmt::Debug; 15];  // in scope 0 at ui/deriving/deriving-associated-types.rs:46:21: 46:26
    let mut _9: &dyn std::fmt::Debug;    // in scope 0 at ui/deriving/deriving-associated-types.rs:48:5: 48:21
    let mut _10: &i32;                   // in scope 0 at ui/deriving/deriving-associated-types.rs:48:5: 48:21
    let _11: &i32;                       // in scope 0 at ui/deriving/deriving-associated-types.rs:48:5: 48:21
    let mut _12: &dyn std::fmt::Debug;   // in scope 0 at ui/deriving/deriving-associated-types.rs:49:5: 49:29
    let mut _13: &std::option::Option<i32>; // in scope 0 at ui/deriving/deriving-associated-types.rs:49:5: 49:29
    let _14: &std::option::Option<i32>;  // in scope 0 at ui/deriving/deriving-associated-types.rs:49:5: 49:29
    let mut _15: &dyn std::fmt::Debug;   // in scope 0 at ui/deriving/deriving-associated-types.rs:50:5: 50:10
    let mut _16: &A;                     // in scope 0 at ui/deriving/deriving-associated-types.rs:50:5: 50:10
    let _17: &A;                         // in scope 0 at ui/deriving/deriving-associated-types.rs:50:5: 50:10
    let mut _18: &dyn std::fmt::Debug;   // in scope 0 at ui/deriving/deriving-associated-types.rs:51:5: 51:25
    let mut _19: &PrivateStruct<A>;      // in scope 0 at ui/deriving/deriving-associated-types.rs:51:5: 51:25
    let _20: &PrivateStruct<A>;          // in scope 0 at ui/deriving/deriving-associated-types.rs:51:5: 51:25
    let mut _21: &dyn std::fmt::Debug;   // in scope 0 at ui/deriving/deriving-associated-types.rs:52:5: 52:9
    let mut _22: &B;                     // in scope 0 at ui/deriving/deriving-associated-types.rs:52:5: 52:9
    let _23: &B;                         // in scope 0 at ui/deriving/deriving-associated-types.rs:52:5: 52:9
    let mut _24: &dyn std::fmt::Debug;   // in scope 0 at ui/deriving/deriving-associated-types.rs:53:5: 53:16
    let mut _25: &<B as DeclaredTrait>::Type; // in scope 0 at ui/deriving/deriving-associated-types.rs:53:5: 53:16
    let _26: &<B as DeclaredTrait>::Type; // in scope 0 at ui/deriving/deriving-associated-types.rs:53:5: 53:16
    let mut _27: &dyn std::fmt::Debug;   // in scope 0 at ui/deriving/deriving-associated-types.rs:54:5: 54:24
    let mut _28: &std::option::Option<<B as DeclaredTrait>::Type>; // in scope 0 at ui/deriving/deriving-associated-types.rs:54:5: 54:24
    let _29: &std::option::Option<<B as DeclaredTrait>::Type>; // in scope 0 at ui/deriving/deriving-associated-types.rs:54:5: 54:24
    let mut _30: &dyn std::fmt::Debug;   // in scope 0 at ui/deriving/deriving-associated-types.rs:55:5: 55:35
    let mut _31: &<B as DeclaredTrait>::Type; // in scope 0 at ui/deriving/deriving-associated-types.rs:55:5: 55:35
    let _32: &<B as DeclaredTrait>::Type; // in scope 0 at ui/deriving/deriving-associated-types.rs:55:5: 55:35
    let mut _33: &dyn std::fmt::Debug;   // in scope 0 at ui/deriving/deriving-associated-types.rs:56:5: 56:43
    let mut _34: &std::option::Option<<B as DeclaredTrait>::Type>; // in scope 0 at ui/deriving/deriving-associated-types.rs:56:5: 56:43
    let _35: &std::option::Option<<B as DeclaredTrait>::Type>; // in scope 0 at ui/deriving/deriving-associated-types.rs:56:5: 56:43
    let mut _36: &dyn std::fmt::Debug;   // in scope 0 at ui/deriving/deriving-associated-types.rs:57:5: 57:9
    let mut _37: &C;                     // in scope 0 at ui/deriving/deriving-associated-types.rs:57:5: 57:9
    let _38: &C;                         // in scope 0 at ui/deriving/deriving-associated-types.rs:57:5: 57:9
    let mut _39: &dyn std::fmt::Debug;   // in scope 0 at ui/deriving/deriving-associated-types.rs:58:5: 58:16
    let mut _40: &<C as WhereTrait>::Type; // in scope 0 at ui/deriving/deriving-associated-types.rs:58:5: 58:16
    let _41: &<C as WhereTrait>::Type;   // in scope 0 at ui/deriving/deriving-associated-types.rs:58:5: 58:16
    let mut _42: &dyn std::fmt::Debug;   // in scope 0 at ui/deriving/deriving-associated-types.rs:59:5: 59:24
    let mut _43: &std::option::Option<<C as WhereTrait>::Type>; // in scope 0 at ui/deriving/deriving-associated-types.rs:59:5: 59:24
    let _44: &std::option::Option<<C as WhereTrait>::Type>; // in scope 0 at ui/deriving/deriving-associated-types.rs:59:5: 59:24
    let mut _45: &dyn std::fmt::Debug;   // in scope 0 at ui/deriving/deriving-associated-types.rs:60:5: 60:32
    let mut _46: &<C as WhereTrait>::Type; // in scope 0 at ui/deriving/deriving-associated-types.rs:60:5: 60:32
    let _47: &<C as WhereTrait>::Type;   // in scope 0 at ui/deriving/deriving-associated-types.rs:60:5: 60:32
    let mut _48: &dyn std::fmt::Debug;   // in scope 0 at ui/deriving/deriving-associated-types.rs:61:5: 61:40
    let mut _49: &std::option::Option<<C as WhereTrait>::Type>; // in scope 0 at ui/deriving/deriving-associated-types.rs:61:5: 61:40
    let _50: &std::option::Option<<C as WhereTrait>::Type>; // in scope 0 at ui/deriving/deriving-associated-types.rs:61:5: 61:40
    let mut _51: &dyn std::fmt::Debug;   // in scope 0 at ui/deriving/deriving-associated-types.rs:62:5: 62:36
    let mut _52: &&i32;                  // in scope 0 at ui/deriving/deriving-associated-types.rs:62:5: 62:36
    let _53: &&i32;                      // in scope 0 at ui/deriving/deriving-associated-types.rs:62:5: 62:36
    let _54: &i32;                       // in scope 0 at ui/deriving/deriving-associated-types.rs:62:5: 62:36
    let mut _55: &mut std::fmt::Formatter<'_>; // in scope 0 at ui/deriving/deriving-associated-types.rs:46:21: 46:26
    let mut _56: &str;                   // in scope 0 at ui/deriving/deriving-associated-types.rs:46:21: 46:26
    let _57: &str;                       // in scope 0 at ui/deriving/deriving-associated-types.rs:46:21: 46:26
    let mut _58: &[&str];                // in scope 0 at ui/deriving/deriving-associated-types.rs:46:21: 46:26
    let mut _59: &[&str; 15];            // in scope 0 at ui/deriving/deriving-associated-types.rs:46:21: 46:26
    let mut _60: &[&dyn std::fmt::Debug]; // in scope 0 at ui/deriving/deriving-associated-types.rs:46:21: 46:26
    let mut _61: &[&str; 15];            // in scope 0 at ui/deriving/deriving-associated-types.rs:46:21: 46:26
    scope 1 {
        debug names => _3;               // in scope 1 at ui/deriving/deriving-associated-types.rs:46:21: 46:26
        let _5: &[&dyn std::fmt::Debug]; // in scope 1 at ui/deriving/deriving-associated-types.rs:46:21: 46:26
        scope 2 {
            debug values => _5;          // in scope 2 at ui/deriving/deriving-associated-types.rs:46:21: 46:26
        }
    }

    bb0: {
        _61 = const _;                   // scope 0 at ui/deriving/deriving-associated-types.rs:46:21: 46:26
                                         // mir::Constant
                                         // + span: ui/deriving/deriving-associated-types.rs:46:21: 46:26
                                         // + literal: Const { ty: &[&str; 15], val: Unevaluated(<Struct<A, B, C> as Debug>::fmt, [A, B, C], Some(promoted[0])) }
        _4 = _61;                        // scope 0 at ui/deriving/deriving-associated-types.rs:46:21: 46:26
        _3 = _4;                         // scope 0 at ui/deriving/deriving-associated-types.rs:46:21: 46:26
        _11 = &((*_1).0: i32);           // scope 1 at ui/deriving/deriving-associated-types.rs:48:5: 48:21
        _10 = _11;                       // scope 1 at ui/deriving/deriving-associated-types.rs:48:5: 48:21
        _9 = move _10 as &dyn std::fmt::Debug (Pointer(Unsize)); // scope 1 at ui/deriving/deriving-associated-types.rs:48:5: 48:21
        _14 = &((*_1).1: std::option::Option<i32>); // scope 1 at ui/deriving/deriving-associated-types.rs:49:5: 49:29
        _13 = _14;                       // scope 1 at ui/deriving/deriving-associated-types.rs:49:5: 49:29
        _12 = move _13 as &dyn std::fmt::Debug (Pointer(Unsize)); // scope 1 at ui/deriving/deriving-associated-types.rs:49:5: 49:29
        _17 = &((*_1).2: A);             // scope 1 at ui/deriving/deriving-associated-types.rs:50:5: 50:10
        _16 = _17;                       // scope 1 at ui/deriving/deriving-associated-types.rs:50:5: 50:10
        _15 = move _16 as &dyn std::fmt::Debug (Pointer(Unsize)); // scope 1 at ui/deriving/deriving-associated-types.rs:50:5: 50:10
        _20 = &((*_1).3: PrivateStruct<A>); // scope 1 at ui/deriving/deriving-associated-types.rs:51:5: 51:25
        _19 = _20;                       // scope 1 at ui/deriving/deriving-associated-types.rs:51:5: 51:25
        _18 = move _19 as &dyn std::fmt::Debug (Pointer(Unsize)); // scope 1 at ui/deriving/deriving-associated-types.rs:51:5: 51:25
        _23 = &((*_1).4: B);             // scope 1 at ui/deriving/deriving-associated-types.rs:52:5: 52:9
        _22 = _23;                       // scope 1 at ui/deriving/deriving-associated-types.rs:52:5: 52:9
        _21 = move _22 as &dyn std::fmt::Debug (Pointer(Unsize)); // scope 1 at ui/deriving/deriving-associated-types.rs:52:5: 52:9
        _26 = &((*_1).5: <B as DeclaredTrait>::Type); // scope 1 at ui/deriving/deriving-associated-types.rs:53:5: 53:16
        _25 = _26;                       // scope 1 at ui/deriving/deriving-associated-types.rs:53:5: 53:16
        _24 = move _25 as &dyn std::fmt::Debug (Pointer(Unsize)); // scope 1 at ui/deriving/deriving-associated-types.rs:53:5: 53:16
        _29 = &((*_1).6: std::option::Option<<B as DeclaredTrait>::Type>); // scope 1 at ui/deriving/deriving-associated-types.rs:54:5: 54:24
        _28 = _29;                       // scope 1 at ui/deriving/deriving-associated-types.rs:54:5: 54:24
        _27 = move _28 as &dyn std::fmt::Debug (Pointer(Unsize)); // scope 1 at ui/deriving/deriving-associated-types.rs:54:5: 54:24
        _32 = &((*_1).7: <B as DeclaredTrait>::Type); // scope 1 at ui/deriving/deriving-associated-types.rs:55:5: 55:35
        _31 = _32;                       // scope 1 at ui/deriving/deriving-associated-types.rs:55:5: 55:35
        _30 = move _31 as &dyn std::fmt::Debug (Pointer(Unsize)); // scope 1 at ui/deriving/deriving-associated-types.rs:55:5: 55:35
        _35 = &((*_1).8: std::option::Option<<B as DeclaredTrait>::Type>); // scope 1 at ui/deriving/deriving-associated-types.rs:56:5: 56:43
        _34 = _35;                       // scope 1 at ui/deriving/deriving-associated-types.rs:56:5: 56:43
        _33 = move _34 as &dyn std::fmt::Debug (Pointer(Unsize)); // scope 1 at ui/deriving/deriving-associated-types.rs:56:5: 56:43
        _38 = &((*_1).9: C);             // scope 1 at ui/deriving/deriving-associated-types.rs:57:5: 57:9
        _37 = _38;                       // scope 1 at ui/deriving/deriving-associated-types.rs:57:5: 57:9
        _36 = move _37 as &dyn std::fmt::Debug (Pointer(Unsize)); // scope 1 at ui/deriving/deriving-associated-types.rs:57:5: 57:9
        _41 = &((*_1).10: <C as WhereTrait>::Type); // scope 1 at ui/deriving/deriving-associated-types.rs:58:5: 58:16
        _40 = _41;                       // scope 1 at ui/deriving/deriving-associated-types.rs:58:5: 58:16
        _39 = move _40 as &dyn std::fmt::Debug (Pointer(Unsize)); // scope 1 at ui/deriving/deriving-associated-types.rs:58:5: 58:16
        _44 = &((*_1).11: std::option::Option<<C as WhereTrait>::Type>); // scope 1 at ui/deriving/deriving-associated-types.rs:59:5: 59:24
        _43 = _44;                       // scope 1 at ui/deriving/deriving-associated-types.rs:59:5: 59:24
        _42 = move _43 as &dyn std::fmt::Debug (Pointer(Unsize)); // scope 1 at ui/deriving/deriving-associated-types.rs:59:5: 59:24
        _47 = &((*_1).12: <C as WhereTrait>::Type); // scope 1 at ui/deriving/deriving-associated-types.rs:60:5: 60:32
        _46 = _47;                       // scope 1 at ui/deriving/deriving-associated-types.rs:60:5: 60:32
        _45 = move _46 as &dyn std::fmt::Debug (Pointer(Unsize)); // scope 1 at ui/deriving/deriving-associated-types.rs:60:5: 60:32
        _50 = &((*_1).13: std::option::Option<<C as WhereTrait>::Type>); // scope 1 at ui/deriving/deriving-associated-types.rs:61:5: 61:40
        _49 = _50;                       // scope 1 at ui/deriving/deriving-associated-types.rs:61:5: 61:40
        _48 = move _49 as &dyn std::fmt::Debug (Pointer(Unsize)); // scope 1 at ui/deriving/deriving-associated-types.rs:61:5: 61:40
        _54 = &((*_1).14: i32);          // scope 1 at ui/deriving/deriving-associated-types.rs:62:5: 62:36
        _53 = &_54;                      // scope 1 at ui/deriving/deriving-associated-types.rs:62:5: 62:36
        _52 = _53;                       // scope 1 at ui/deriving/deriving-associated-types.rs:62:5: 62:36
        _51 = move _52 as &dyn std::fmt::Debug (Pointer(Unsize)); // scope 1 at ui/deriving/deriving-associated-types.rs:62:5: 62:36
        _8 = [move _9, move _12, move _15, move _18, move _21, move _24, move _27, move _30, move _33, move _36, move _39, move _42, move _45, move _48, move _51]; // scope 1 at ui/deriving/deriving-associated-types.rs:46:21: 46:26
        _7 = &_8;                        // scope 1 at ui/deriving/deriving-associated-types.rs:46:21: 46:26
        _6 = _7;                         // scope 1 at ui/deriving/deriving-associated-types.rs:46:21: 46:26
        _5 = move _6 as &[&dyn std::fmt::Debug] (Pointer(Unsize)); // scope 1 at ui/deriving/deriving-associated-types.rs:46:21: 46:26
        _55 = &mut (*_2);                // scope 2 at ui/deriving/deriving-associated-types.rs:46:21: 46:26
        _57 = const "Struct";            // scope 2 at ui/deriving/deriving-associated-types.rs:46:21: 46:26
                                         // mir::Constant
                                         // + span: ui/deriving/deriving-associated-types.rs:46:21: 46:26
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _56 = _57;                       // scope 2 at ui/deriving/deriving-associated-types.rs:46:21: 46:26
        _59 = _3;                        // scope 2 at ui/deriving/deriving-associated-types.rs:46:21: 46:26
        _58 = move _59 as &[&str] (Pointer(Unsize)); // scope 2 at ui/deriving/deriving-associated-types.rs:46:21: 46:26
        _60 = _5;                        // scope 2 at ui/deriving/deriving-associated-types.rs:46:21: 46:26
        _0 = Formatter::<'_>::debug_struct_fields_finish(move _55, move _56, move _58, move _60) -> bb1; // scope 2 at ui/deriving/deriving-associated-types.rs:46:21: 46:26
                                         // mir::Constant
                                         // + span: ui/deriving/deriving-associated-types.rs:46:21: 46:26
                                         // + user_ty: UserType(4)
                                         // + literal: Const { ty: for<'b, 'a, 'c, 'd, 'e, 'f> fn(&'b mut Formatter<'_>, &'a str, &'c [&'d str], &'e [&'f (dyn Debug + 'f)]) -> Result<(), std::fmt::Error> {Formatter::<'_>::debug_struct_fields_finish}, val: Value(<ZST>) }
    }

    bb1: {
        return;                          // scope 0 at ui/deriving/deriving-associated-types.rs:46:26: 46:26
    }
}

promoted[0] in <impl at ui/deriving/deriving-associated-types.rs:46:21: 46:26>::fmt: &[&str; 15] = {
    let mut _0: &[&str; 15];             // return place in scope 0 at ui/deriving/deriving-associated-types.rs:46:21: 46:26
    let mut _1: [&str; 15];              // in scope 0 at ui/deriving/deriving-associated-types.rs:46:21: 46:26
    let mut _2: &str;                    // in scope 0 at ui/deriving/deriving-associated-types.rs:49:5: 49:29
    let mut _3: &str;                    // in scope 0 at ui/deriving/deriving-associated-types.rs:49:5: 49:29
    let mut _4: &str;                    // in scope 0 at ui/deriving/deriving-associated-types.rs:50:5: 50:10
    let mut _5: &str;                    // in scope 0 at ui/deriving/deriving-associated-types.rs:50:5: 50:10
    let mut _6: &str;                    // in scope 0 at ui/deriving/deriving-associated-types.rs:51:5: 51:25
    let mut _7: &str;                    // in scope 0 at ui/deriving/deriving-associated-types.rs:51:5: 51:25
    let mut _8: &str;                    // in scope 0 at ui/deriving/deriving-associated-types.rs:52:5: 52:9
    let mut _9: &str;                    // in scope 0 at ui/deriving/deriving-associated-types.rs:52:5: 52:9
    let mut _10: &str;                   // in scope 0 at ui/deriving/deriving-associated-types.rs:53:5: 53:16
    let mut _11: &str;                   // in scope 0 at ui/deriving/deriving-associated-types.rs:53:5: 53:16
    let mut _12: &str;                   // in scope 0 at ui/deriving/deriving-associated-types.rs:54:5: 54:24
    let mut _13: &str;                   // in scope 0 at ui/deriving/deriving-associated-types.rs:54:5: 54:24
    let mut _14: &str;                   // in scope 0 at ui/deriving/deriving-associated-types.rs:55:5: 55:35
    let mut _15: &str;                   // in scope 0 at ui/deriving/deriving-associated-types.rs:55:5: 55:35
    let mut _16: &str;                   // in scope 0 at ui/deriving/deriving-associated-types.rs:56:5: 56:43
    let mut _17: &str;                   // in scope 0 at ui/deriving/deriving-associated-types.rs:56:5: 56:43
    let mut _18: &str;                   // in scope 0 at ui/deriving/deriving-associated-types.rs:57:5: 57:9
    let mut _19: &str;                   // in scope 0 at ui/deriving/deriving-associated-types.rs:57:5: 57:9
    let mut _20: &str;                   // in scope 0 at ui/deriving/deriving-associated-types.rs:58:5: 58:16
    let mut _21: &str;                   // in scope 0 at ui/deriving/deriving-associated-types.rs:58:5: 58:16
    let mut _22: &str;                   // in scope 0 at ui/deriving/deriving-associated-types.rs:59:5: 59:24
    let mut _23: &str;                   // in scope 0 at ui/deriving/deriving-associated-types.rs:59:5: 59:24
    let mut _24: &str;                   // in scope 0 at ui/deriving/deriving-associated-types.rs:60:5: 60:32
    let mut _25: &str;                   // in scope 0 at ui/deriving/deriving-associated-types.rs:60:5: 60:32
    let mut _26: &str;                   // in scope 0 at ui/deriving/deriving-associated-types.rs:61:5: 61:40
    let mut _27: &str;                   // in scope 0 at ui/deriving/deriving-associated-types.rs:61:5: 61:40
    let mut _28: &str;                   // in scope 0 at ui/deriving/deriving-associated-types.rs:62:5: 62:36
    let mut _29: &str;                   // in scope 0 at ui/deriving/deriving-associated-types.rs:62:5: 62:36

    bb0: {
        _3 = const "m2";                 // scope 0 at ui/deriving/deriving-associated-types.rs:49:5: 49:29
                                         // mir::Constant
                                         // + span: ui/deriving/deriving-associated-types.rs:49:5: 49:29
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _2 = &(*_3);                     // scope 0 at ui/deriving/deriving-associated-types.rs:49:5: 49:29
        _5 = const "a1";                 // scope 0 at ui/deriving/deriving-associated-types.rs:50:5: 50:10
                                         // mir::Constant
                                         // + span: ui/deriving/deriving-associated-types.rs:50:5: 50:10
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _4 = &(*_5);                     // scope 0 at ui/deriving/deriving-associated-types.rs:50:5: 50:10
        _7 = const "a2";                 // scope 0 at ui/deriving/deriving-associated-types.rs:51:5: 51:25
                                         // mir::Constant
                                         // + span: ui/deriving/deriving-associated-types.rs:51:5: 51:25
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _6 = &(*_7);                     // scope 0 at ui/deriving/deriving-associated-types.rs:51:5: 51:25
        _9 = const "b";                  // scope 0 at ui/deriving/deriving-associated-types.rs:52:5: 52:9
                                         // mir::Constant
                                         // + span: ui/deriving/deriving-associated-types.rs:52:5: 52:9
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _8 = &(*_9);                     // scope 0 at ui/deriving/deriving-associated-types.rs:52:5: 52:9
        _11 = const "b1";                // scope 0 at ui/deriving/deriving-associated-types.rs:53:5: 53:16
                                         // mir::Constant
                                         // + span: ui/deriving/deriving-associated-types.rs:53:5: 53:16
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _10 = &(*_11);                   // scope 0 at ui/deriving/deriving-associated-types.rs:53:5: 53:16
        _13 = const "b2";                // scope 0 at ui/deriving/deriving-associated-types.rs:54:5: 54:24
                                         // mir::Constant
                                         // + span: ui/deriving/deriving-associated-types.rs:54:5: 54:24
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _12 = &(*_13);                   // scope 0 at ui/deriving/deriving-associated-types.rs:54:5: 54:24
        _15 = const "b3";                // scope 0 at ui/deriving/deriving-associated-types.rs:55:5: 55:35
                                         // mir::Constant
                                         // + span: ui/deriving/deriving-associated-types.rs:55:5: 55:35
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _14 = &(*_15);                   // scope 0 at ui/deriving/deriving-associated-types.rs:55:5: 55:35
        _17 = const "b4";                // scope 0 at ui/deriving/deriving-associated-types.rs:56:5: 56:43
                                         // mir::Constant
                                         // + span: ui/deriving/deriving-associated-types.rs:56:5: 56:43
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _16 = &(*_17);                   // scope 0 at ui/deriving/deriving-associated-types.rs:56:5: 56:43
        _19 = const "c";                 // scope 0 at ui/deriving/deriving-associated-types.rs:57:5: 57:9
                                         // mir::Constant
                                         // + span: ui/deriving/deriving-associated-types.rs:57:5: 57:9
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _18 = &(*_19);                   // scope 0 at ui/deriving/deriving-associated-types.rs:57:5: 57:9
        _21 = const "c1";                // scope 0 at ui/deriving/deriving-associated-types.rs:58:5: 58:16
                                         // mir::Constant
                                         // + span: ui/deriving/deriving-associated-types.rs:58:5: 58:16
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _20 = &(*_21);                   // scope 0 at ui/deriving/deriving-associated-types.rs:58:5: 58:16
        _23 = const "c2";                // scope 0 at ui/deriving/deriving-associated-types.rs:59:5: 59:24
                                         // mir::Constant
                                         // + span: ui/deriving/deriving-associated-types.rs:59:5: 59:24
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _22 = &(*_23);                   // scope 0 at ui/deriving/deriving-associated-types.rs:59:5: 59:24
        _25 = const "c3";                // scope 0 at ui/deriving/deriving-associated-types.rs:60:5: 60:32
                                         // mir::Constant
                                         // + span: ui/deriving/deriving-associated-types.rs:60:5: 60:32
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _24 = &(*_25);                   // scope 0 at ui/deriving/deriving-associated-types.rs:60:5: 60:32
        _27 = const "c4";                // scope 0 at ui/deriving/deriving-associated-types.rs:61:5: 61:40
                                         // mir::Constant
                                         // + span: ui/deriving/deriving-associated-types.rs:61:5: 61:40
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _26 = &(*_27);                   // scope 0 at ui/deriving/deriving-associated-types.rs:61:5: 61:40
        _29 = const "d";                 // scope 0 at ui/deriving/deriving-associated-types.rs:62:5: 62:36
                                         // mir::Constant
                                         // + span: ui/deriving/deriving-associated-types.rs:62:5: 62:36
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _28 = &(*_29);                   // scope 0 at ui/deriving/deriving-associated-types.rs:62:5: 62:36
        _1 = [const "m1", move _2, move _4, move _6, move _8, move _10, move _12, move _14, move _16, move _18, move _20, move _22, move _24, move _26, move _28]; // scope 0 at ui/deriving/deriving-associated-types.rs:46:21: 46:26
                                         // mir::Constant
                                         // + span: ui/deriving/deriving-associated-types.rs:48:5: 48:21
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at ui/deriving/deriving-associated-types.rs:46:21: 46:26
        return;                          // scope 0 at ui/deriving/deriving-associated-types.rs:46:21: 46:26
    }
}

fn <impl at ui/deriving/deriving-associated-types.rs:65:10: 65:19>::eq(_1: &Enum<A, B, C>, _2: &Enum<A, B, C>) -> bool {
    debug self => _1;                    // in scope 0 at ui/deriving/deriving-associated-types.rs:65:10: 65:19
    debug other => _2;                   // in scope 0 at ui/deriving/deriving-associated-types.rs:65:10: 65:19
    let mut _0: bool;                    // return place in scope 0 at ui/deriving/deriving-associated-types.rs:65:10: 65:19
    let _3: isize;                       // in scope 0 at ui/deriving/deriving-associated-types.rs:65:10: 65:19
    let mut _4: &Enum<A, B, C>;          // in scope 0 at ui/deriving/deriving-associated-types.rs:65:10: 65:19
    let mut _6: &Enum<A, B, C>;          // in scope 0 at ui/deriving/deriving-associated-types.rs:65:10: 65:19
    let mut _7: bool;                    // in scope 0 at ui/deriving/deriving-associated-types.rs:65:10: 65:19
    let mut _8: isize;                   // in scope 0 at ui/deriving/deriving-associated-types.rs:65:10: 65:19
    let mut _9: isize;                   // in scope 0 at ui/deriving/deriving-associated-types.rs:65:10: 65:19
    let mut _10: bool;                   // in scope 0 at ui/deriving/deriving-associated-types.rs:65:10: 65:19
    let mut _11: (&Enum<A, B, C>, &Enum<A, B, C>); // in scope 0 at ui/deriving/deriving-associated-types.rs:65:10: 65:19
    let mut _12: &Enum<A, B, C>;         // in scope 0 at ui/deriving/deriving-associated-types.rs:65:10: 65:19
    let mut _13: &Enum<A, B, C>;         // in scope 0 at ui/deriving/deriving-associated-types.rs:65:10: 65:19
    let mut _14: isize;                  // in scope 0 at ui/deriving/deriving-associated-types.rs:65:10: 65:19
    let mut _15: isize;                  // in scope 0 at ui/deriving/deriving-associated-types.rs:65:10: 65:19
    let mut _16: isize;                  // in scope 0 at ui/deriving/deriving-associated-types.rs:65:10: 65:19
    let mut _47: bool;                   // in scope 0 at ui/deriving/deriving-associated-types.rs:82:9: 82:40
    let mut _48: bool;                   // in scope 0 at ui/deriving/deriving-associated-types.rs:81:9: 81:32
    let mut _49: bool;                   // in scope 0 at ui/deriving/deriving-associated-types.rs:80:9: 80:24
    let mut _50: bool;                   // in scope 0 at ui/deriving/deriving-associated-types.rs:79:9: 79:16
    let mut _51: bool;                   // in scope 0 at ui/deriving/deriving-associated-types.rs:78:9: 78:10
    let mut _52: bool;                   // in scope 0 at ui/deriving/deriving-associated-types.rs:77:9: 77:43
    let mut _53: bool;                   // in scope 0 at ui/deriving/deriving-associated-types.rs:76:9: 76:35
    let mut _54: bool;                   // in scope 0 at ui/deriving/deriving-associated-types.rs:75:9: 75:24
    let mut _55: bool;                   // in scope 0 at ui/deriving/deriving-associated-types.rs:74:9: 74:16
    let mut _56: bool;                   // in scope 0 at ui/deriving/deriving-associated-types.rs:73:9: 73:10
    let mut _57: bool;                   // in scope 0 at ui/deriving/deriving-associated-types.rs:72:9: 72:25
    let mut _58: bool;                   // in scope 0 at ui/deriving/deriving-associated-types.rs:71:9: 71:10
    let mut _59: bool;                   // in scope 0 at ui/deriving/deriving-associated-types.rs:70:9: 70:29
    let mut _60: bool;                   // in scope 0 at ui/deriving/deriving-associated-types.rs:69:9: 69:21
    let mut _61: i32;                    // in scope 0 at ui/deriving/deriving-associated-types.rs:69:9: 69:21
    let mut _62: i32;                    // in scope 0 at ui/deriving/deriving-associated-types.rs:69:9: 69:21
    let mut _63: bool;                   // in scope 0 at ui/deriving/deriving-associated-types.rs:70:9: 70:29
    let mut _64: &std::option::Option<i32>; // in scope 0 at ui/deriving/deriving-associated-types.rs:70:9: 70:29
    let mut _65: &std::option::Option<i32>; // in scope 0 at ui/deriving/deriving-associated-types.rs:70:9: 70:29
    let mut _66: bool;                   // in scope 0 at ui/deriving/deriving-associated-types.rs:71:9: 71:10
    let mut _67: &A;                     // in scope 0 at ui/deriving/deriving-associated-types.rs:71:9: 71:10
    let mut _68: &A;                     // in scope 0 at ui/deriving/deriving-associated-types.rs:71:9: 71:10
    let mut _69: bool;                   // in scope 0 at ui/deriving/deriving-associated-types.rs:72:9: 72:25
    let mut _70: &PrivateStruct<A>;      // in scope 0 at ui/deriving/deriving-associated-types.rs:72:9: 72:25
    let mut _71: &PrivateStruct<A>;      // in scope 0 at ui/deriving/deriving-associated-types.rs:72:9: 72:25
    let mut _72: bool;                   // in scope 0 at ui/deriving/deriving-associated-types.rs:73:9: 73:10
    let mut _73: &B;                     // in scope 0 at ui/deriving/deriving-associated-types.rs:73:9: 73:10
    let mut _74: &B;                     // in scope 0 at ui/deriving/deriving-associated-types.rs:73:9: 73:10
    let mut _75: bool;                   // in scope 0 at ui/deriving/deriving-associated-types.rs:74:9: 74:16
    let mut _76: &<B as DeclaredTrait>::Type; // in scope 0 at ui/deriving/deriving-associated-types.rs:74:9: 74:16
    let mut _77: &<B as DeclaredTrait>::Type; // in scope 0 at ui/deriving/deriving-associated-types.rs:74:9: 74:16
    let mut _78: bool;                   // in scope 0 at ui/deriving/deriving-associated-types.rs:75:9: 75:24
    let mut _79: &std::option::Option<<B as DeclaredTrait>::Type>; // in scope 0 at ui/deriving/deriving-associated-types.rs:75:9: 75:24
    let mut _80: &std::option::Option<<B as DeclaredTrait>::Type>; // in scope 0 at ui/deriving/deriving-associated-types.rs:75:9: 75:24
    let mut _81: bool;                   // in scope 0 at ui/deriving/deriving-associated-types.rs:76:9: 76:35
    let mut _82: &<B as DeclaredTrait>::Type; // in scope 0 at ui/deriving/deriving-associated-types.rs:76:9: 76:35
    let mut _83: &<B as DeclaredTrait>::Type; // in scope 0 at ui/deriving/deriving-associated-types.rs:76:9: 76:35
    let mut _84: bool;                   // in scope 0 at ui/deriving/deriving-associated-types.rs:77:9: 77:43
    let mut _85: &std::option::Option<<B as DeclaredTrait>::Type>; // in scope 0 at ui/deriving/deriving-associated-types.rs:77:9: 77:43
    let mut _86: &std::option::Option<<B as DeclaredTrait>::Type>; // in scope 0 at ui/deriving/deriving-associated-types.rs:77:9: 77:43
    let mut _87: bool;                   // in scope 0 at ui/deriving/deriving-associated-types.rs:78:9: 78:10
    let mut _88: &C;                     // in scope 0 at ui/deriving/deriving-associated-types.rs:78:9: 78:10
    let mut _89: &C;                     // in scope 0 at ui/deriving/deriving-associated-types.rs:78:9: 78:10
    let mut _90: bool;                   // in scope 0 at ui/deriving/deriving-associated-types.rs:79:9: 79:16
    let mut _91: &<C as WhereTrait>::Type; // in scope 0 at ui/deriving/deriving-associated-types.rs:79:9: 79:16
    let mut _92: &<C as WhereTrait>::Type; // in scope 0 at ui/deriving/deriving-associated-types.rs:79:9: 79:16
    let mut _93: bool;                   // in scope 0 at ui/deriving/deriving-associated-types.rs:80:9: 80:24
    let mut _94: &std::option::Option<<C as WhereTrait>::Type>; // in scope 0 at ui/deriving/deriving-associated-types.rs:80:9: 80:24
    let mut _95: &std::option::Option<<C as WhereTrait>::Type>; // in scope 0 at ui/deriving/deriving-associated-types.rs:80:9: 80:24
    let mut _96: bool;                   // in scope 0 at ui/deriving/deriving-associated-types.rs:81:9: 81:32
    let mut _97: &<C as WhereTrait>::Type; // in scope 0 at ui/deriving/deriving-associated-types.rs:81:9: 81:32
    let mut _98: &<C as WhereTrait>::Type; // in scope 0 at ui/deriving/deriving-associated-types.rs:81:9: 81:32
    let mut _99: bool;                   // in scope 0 at ui/deriving/deriving-associated-types.rs:82:9: 82:40
    let mut _100: &std::option::Option<<C as WhereTrait>::Type>; // in scope 0 at ui/deriving/deriving-associated-types.rs:82:9: 82:40
    let mut _101: &std::option::Option<<C as WhereTrait>::Type>; // in scope 0 at ui/deriving/deriving-associated-types.rs:82:9: 82:40
    let mut _102: bool;                  // in scope 0 at ui/deriving/deriving-associated-types.rs:83:9: 83:37
    let mut _103: i32;                   // in scope 0 at ui/deriving/deriving-associated-types.rs:83:9: 83:37
    let mut _104: i32;                   // in scope 0 at ui/deriving/deriving-associated-types.rs:83:9: 83:37
    let mut _135: bool;                  // in scope 0 at ui/deriving/deriving-associated-types.rs:99:9: 99:44
    let mut _136: bool;                  // in scope 0 at ui/deriving/deriving-associated-types.rs:98:9: 98:36
    let mut _137: bool;                  // in scope 0 at ui/deriving/deriving-associated-types.rs:97:9: 97:28
    let mut _138: bool;                  // in scope 0 at ui/deriving/deriving-associated-types.rs:96:9: 96:20
    let mut _139: bool;                  // in scope 0 at ui/deriving/deriving-associated-types.rs:95:9: 95:13
    let mut _140: bool;                  // in scope 0 at ui/deriving/deriving-associated-types.rs:94:9: 94:47
    let mut _141: bool;                  // in scope 0 at ui/deriving/deriving-associated-types.rs:93:9: 93:39
    let mut _142: bool;                  // in scope 0 at ui/deriving/deriving-associated-types.rs:92:9: 92:28
    let mut _143: bool;                  // in scope 0 at ui/deriving/deriving-associated-types.rs:91:9: 91:20
    let mut _144: bool;                  // in scope 0 at ui/deriving/deriving-associated-types.rs:90:9: 90:13
    let mut _145: bool;                  // in scope 0 at ui/deriving/deriving-associated-types.rs:89:9: 89:29
    let mut _146: bool;                  // in scope 0 at ui/deriving/deriving-associated-types.rs:88:9: 88:14
    let mut _147: bool;                  // in scope 0 at ui/deriving/deriving-associated-types.rs:87:9: 87:33
    let mut _148: bool;                  // in scope 0 at ui/deriving/deriving-associated-types.rs:86:9: 86:25
    let mut _149: i32;                   // in scope 0 at ui/deriving/deriving-associated-types.rs:86:9: 86:25
    let mut _150: i32;                   // in scope 0 at ui/deriving/deriving-associated-types.rs:86:9: 86:25
    let mut _151: bool;                  // in scope 0 at ui/deriving/deriving-associated-types.rs:87:9: 87:33
    let mut _152: &std::option::Option<i32>; // in scope 0 at ui/deriving/deriving-associated-types.rs:87:9: 87:33
    let mut _153: &std::option::Option<i32>; // in scope 0 at ui/deriving/deriving-associated-types.rs:87:9: 87:33
    let mut _154: bool;                  // in scope 0 at ui/deriving/deriving-associated-types.rs:88:9: 88:14
    let mut _155: &A;                    // in scope 0 at ui/deriving/deriving-associated-types.rs:88:9: 88:14
    let mut _156: &A;                    // in scope 0 at ui/deriving/deriving-associated-types.rs:88:9: 88:14
    let mut _157: bool;                  // in scope 0 at ui/deriving/deriving-associated-types.rs:89:9: 89:29
    let mut _158: &PrivateStruct<A>;     // in scope 0 at ui/deriving/deriving-associated-types.rs:89:9: 89:29
    let mut _159: &PrivateStruct<A>;     // in scope 0 at ui/deriving/deriving-associated-types.rs:89:9: 89:29
    let mut _160: bool;                  // in scope 0 at ui/deriving/deriving-associated-types.rs:90:9: 90:13
    let mut _161: &B;                    // in scope 0 at ui/deriving/deriving-associated-types.rs:90:9: 90:13
    let mut _162: &B;                    // in scope 0 at ui/deriving/deriving-associated-types.rs:90:9: 90:13
    let mut _163: bool;                  // in scope 0 at ui/deriving/deriving-associated-types.rs:91:9: 91:20
    let mut _164: &<B as DeclaredTrait>::Type; // in scope 0 at ui/deriving/deriving-associated-types.rs:91:9: 91:20
    let mut _165: &<B as DeclaredTrait>::Type; // in scope 0 at ui/deriving/deriving-associated-types.rs:91:9: 91:20
    let mut _166: bool;                  // in scope 0 at ui/deriving/deriving-associated-types.rs:92:9: 92:28
    let mut _167: &std::option::Option<<B as DeclaredTrait>::Type>; // in scope 0 at ui/deriving/deriving-associated-types.rs:92:9: 92:28
    let mut _168: &std::option::Option<<B as DeclaredTrait>::Type>; // in scope 0 at ui/deriving/deriving-associated-types.rs:92:9: 92:28
    let mut _169: bool;                  // in scope 0 at ui/deriving/deriving-associated-types.rs:93:9: 93:39
    let mut _170: &<B as DeclaredTrait>::Type; // in scope 0 at ui/deriving/deriving-associated-types.rs:93:9: 93:39
    let mut _171: &<B as DeclaredTrait>::Type; // in scope 0 at ui/deriving/deriving-associated-types.rs:93:9: 93:39
    let mut _172: bool;                  // in scope 0 at ui/deriving/deriving-associated-types.rs:94:9: 94:47
    let mut _173: &std::option::Option<<B as DeclaredTrait>::Type>; // in scope 0 at ui/deriving/deriving-associated-types.rs:94:9: 94:47
    let mut _174: &std::option::Option<<B as DeclaredTrait>::Type>; // in scope 0 at ui/deriving/deriving-associated-types.rs:94:9: 94:47
    let mut _175: bool;                  // in scope 0 at ui/deriving/deriving-associated-types.rs:95:9: 95:13
    let mut _176: &C;                    // in scope 0 at ui/deriving/deriving-associated-types.rs:95:9: 95:13
    let mut _177: &C;                    // in scope 0 at ui/deriving/deriving-associated-types.rs:95:9: 95:13
    let mut _178: bool;                  // in scope 0 at ui/deriving/deriving-associated-types.rs:96:9: 96:20
    let mut _179: &<C as WhereTrait>::Type; // in scope 0 at ui/deriving/deriving-associated-types.rs:96:9: 96:20
    let mut _180: &<C as WhereTrait>::Type; // in scope 0 at ui/deriving/deriving-associated-types.rs:96:9: 96:20
    let mut _181: bool;                  // in scope 0 at ui/deriving/deriving-associated-types.rs:97:9: 97:28
    let mut _182: &std::option::Option<<C as WhereTrait>::Type>; // in scope 0 at ui/deriving/deriving-associated-types.rs:97:9: 97:28
    let mut _183: &std::option::Option<<C as WhereTrait>::Type>; // in scope 0 at ui/deriving/deriving-associated-types.rs:97:9: 97:28
    let mut _184: bool;                  // in scope 0 at ui/deriving/deriving-associated-types.rs:98:9: 98:36
    let mut _185: &<C as WhereTrait>::Type; // in scope 0 at ui/deriving/deriving-associated-types.rs:98:9: 98:36
    let mut _186: &<C as WhereTrait>::Type; // in scope 0 at ui/deriving/deriving-associated-types.rs:98:9: 98:36
    let mut _187: bool;                  // in scope 0 at ui/deriving/deriving-associated-types.rs:99:9: 99:44
    let mut _188: &std::option::Option<<C as WhereTrait>::Type>; // in scope 0 at ui/deriving/deriving-associated-types.rs:99:9: 99:44
    let mut _189: &std::option::Option<<C as WhereTrait>::Type>; // in scope 0 at ui/deriving/deriving-associated-types.rs:99:9: 99:44
    let mut _190: bool;                  // in scope 0 at ui/deriving/deriving-associated-types.rs:100:9: 100:40
    let mut _191: i32;                   // in scope 0 at ui/deriving/deriving-associated-types.rs:100:9: 100:40
    let mut _192: i32;                   // in scope 0 at ui/deriving/deriving-associated-types.rs:100:9: 100:40
    let mut _193: &Enum<A, B, C>;        // in scope 0 at ui/deriving/deriving-associated-types.rs:65:10: 65:19
    let mut _194: &Enum<A, B, C>;        // in scope 0 at ui/deriving/deriving-associated-types.rs:65:10: 65:19
    let mut _195: &Enum<A, B, C>;        // in scope 0 at ui/deriving/deriving-associated-types.rs:65:10: 65:19
    let mut _196: &Enum<A, B, C>;        // in scope 0 at ui/deriving/deriving-associated-types.rs:65:10: 65:19
    let mut _197: &Enum<A, B, C>;        // in scope 0 at ui/deriving/deriving-associated-types.rs:65:10: 65:19
    let mut _198: &Enum<A, B, C>;        // in scope 0 at ui/deriving/deriving-associated-types.rs:65:10: 65:19
    let mut _199: &Enum<A, B, C>;        // in scope 0 at ui/deriving/deriving-associated-types.rs:65:10: 65:19
    let mut _200: &Enum<A, B, C>;        // in scope 0 at ui/deriving/deriving-associated-types.rs:65:10: 65:19
    let mut _201: &Enum<A, B, C>;        // in scope 0 at ui/deriving/deriving-associated-types.rs:65:10: 65:19
    let mut _202: &Enum<A, B, C>;        // in scope 0 at ui/deriving/deriving-associated-types.rs:65:10: 65:19
    let mut _203: &Enum<A, B, C>;        // in scope 0 at ui/deriving/deriving-associated-types.rs:65:10: 65:19
    let mut _204: &Enum<A, B, C>;        // in scope 0 at ui/deriving/deriving-associated-types.rs:65:10: 65:19
    let mut _205: &Enum<A, B, C>;        // in scope 0 at ui/deriving/deriving-associated-types.rs:65:10: 65:19
    let mut _206: &Enum<A, B, C>;        // in scope 0 at ui/deriving/deriving-associated-types.rs:65:10: 65:19
    let mut _207: &Enum<A, B, C>;        // in scope 0 at ui/deriving/deriving-associated-types.rs:65:10: 65:19
    let mut _208: &Enum<A, B, C>;        // in scope 0 at ui/deriving/deriving-associated-types.rs:65:10: 65:19
    let mut _209: &Enum<A, B, C>;        // in scope 0 at ui/deriving/deriving-associated-types.rs:65:10: 65:19
    let mut _210: &Enum<A, B, C>;        // in scope 0 at ui/deriving/deriving-associated-types.rs:65:10: 65:19
    let mut _211: &Enum<A, B, C>;        // in scope 0 at ui/deriving/deriving-associated-types.rs:65:10: 65:19
    let mut _212: &Enum<A, B, C>;        // in scope 0 at ui/deriving/deriving-associated-types.rs:65:10: 65:19
    let mut _213: &Enum<A, B, C>;        // in scope 0 at ui/deriving/deriving-associated-types.rs:65:10: 65:19
    let mut _214: &Enum<A, B, C>;        // in scope 0 at ui/deriving/deriving-associated-types.rs:65:10: 65:19
    let mut _215: &Enum<A, B, C>;        // in scope 0 at ui/deriving/deriving-associated-types.rs:65:10: 65:19
    let mut _216: &Enum<A, B, C>;        // in scope 0 at ui/deriving/deriving-associated-types.rs:65:10: 65:19
    let mut _217: &Enum<A, B, C>;        // in scope 0 at ui/deriving/deriving-associated-types.rs:65:10: 65:19
    let mut _218: &Enum<A, B, C>;        // in scope 0 at ui/deriving/deriving-associated-types.rs:65:10: 65:19
    let mut _219: &Enum<A, B, C>;        // in scope 0 at ui/deriving/deriving-associated-types.rs:65:10: 65:19
    let mut _220: &Enum<A, B, C>;        // in scope 0 at ui/deriving/deriving-associated-types.rs:65:10: 65:19
    let mut _221: &Enum<A, B, C>;        // in scope 0 at ui/deriving/deriving-associated-types.rs:65:10: 65:19
    let mut _222: &Enum<A, B, C>;        // in scope 0 at ui/deriving/deriving-associated-types.rs:65:10: 65:19
    let mut _223: &Enum<A, B, C>;        // in scope 0 at ui/deriving/deriving-associated-types.rs:65:10: 65:19
    let mut _224: &Enum<A, B, C>;        // in scope 0 at ui/deriving/deriving-associated-types.rs:65:10: 65:19
    let mut _225: &Enum<A, B, C>;        // in scope 0 at ui/deriving/deriving-associated-types.rs:65:10: 65:19
    let mut _226: &Enum<A, B, C>;        // in scope 0 at ui/deriving/deriving-associated-types.rs:65:10: 65:19
    let mut _227: &Enum<A, B, C>;        // in scope 0 at ui/deriving/deriving-associated-types.rs:65:10: 65:19
    let mut _228: &Enum<A, B, C>;        // in scope 0 at ui/deriving/deriving-associated-types.rs:65:10: 65:19
    let mut _229: &Enum<A, B, C>;        // in scope 0 at ui/deriving/deriving-associated-types.rs:65:10: 65:19
    let mut _230: &Enum<A, B, C>;        // in scope 0 at ui/deriving/deriving-associated-types.rs:65:10: 65:19
    let mut _231: &Enum<A, B, C>;        // in scope 0 at ui/deriving/deriving-associated-types.rs:65:10: 65:19
    let mut _232: &Enum<A, B, C>;        // in scope 0 at ui/deriving/deriving-associated-types.rs:65:10: 65:19
    let mut _233: &Enum<A, B, C>;        // in scope 0 at ui/deriving/deriving-associated-types.rs:65:10: 65:19
    let mut _234: &Enum<A, B, C>;        // in scope 0 at ui/deriving/deriving-associated-types.rs:65:10: 65:19
    let mut _235: &Enum<A, B, C>;        // in scope 0 at ui/deriving/deriving-associated-types.rs:65:10: 65:19
    let mut _236: &Enum<A, B, C>;        // in scope 0 at ui/deriving/deriving-associated-types.rs:65:10: 65:19
    let mut _237: &Enum<A, B, C>;        // in scope 0 at ui/deriving/deriving-associated-types.rs:65:10: 65:19
    let mut _238: &Enum<A, B, C>;        // in scope 0 at ui/deriving/deriving-associated-types.rs:65:10: 65:19
    let mut _239: &Enum<A, B, C>;        // in scope 0 at ui/deriving/deriving-associated-types.rs:65:10: 65:19
    let mut _240: &Enum<A, B, C>;        // in scope 0 at ui/deriving/deriving-associated-types.rs:65:10: 65:19
    let mut _241: &Enum<A, B, C>;        // in scope 0 at ui/deriving/deriving-associated-types.rs:65:10: 65:19
    let mut _242: &Enum<A, B, C>;        // in scope 0 at ui/deriving/deriving-associated-types.rs:65:10: 65:19
    let mut _243: &Enum<A, B, C>;        // in scope 0 at ui/deriving/deriving-associated-types.rs:65:10: 65:19
    let mut _244: &Enum<A, B, C>;        // in scope 0 at ui/deriving/deriving-associated-types.rs:65:10: 65:19
    let mut _245: &Enum<A, B, C>;        // in scope 0 at ui/deriving/deriving-associated-types.rs:65:10: 65:19
    let mut _246: &Enum<A, B, C>;        // in scope 0 at ui/deriving/deriving-associated-types.rs:65:10: 65:19
    let mut _247: &Enum<A, B, C>;        // in scope 0 at ui/deriving/deriving-associated-types.rs:65:10: 65:19
    let mut _248: &Enum<A, B, C>;        // in scope 0 at ui/deriving/deriving-associated-types.rs:65:10: 65:19
    let mut _249: &Enum<A, B, C>;        // in scope 0 at ui/deriving/deriving-associated-types.rs:65:10: 65:19
    let mut _250: &Enum<A, B, C>;        // in scope 0 at ui/deriving/deriving-associated-types.rs:65:10: 65:19
    let mut _251: &Enum<A, B, C>;        // in scope 0 at ui/deriving/deriving-associated-types.rs:65:10: 65:19
    let mut _252: &Enum<A, B, C>;        // in scope 0 at ui/deriving/deriving-associated-types.rs:65:10: 65:19
    let mut _253: &Enum<A, B, C>;        // in scope 0 at ui/deriving/deriving-associated-types.rs:65:10: 65:19
    let mut _254: &Enum<A, B, C>;        // in scope 0 at ui/deriving/deriving-associated-types.rs:65:10: 65:19
    let mut _255: &Enum<A, B, C>;        // in scope 0 at ui/deriving/deriving-associated-types.rs:65:10: 65:19
    scope 1 {
        debug __self_tag => _3;          // in scope 1 at ui/deriving/deriving-associated-types.rs:65:10: 65:19
        let _5: isize;                   // in scope 1 at ui/deriving/deriving-associated-types.rs:65:10: 65:19
        scope 2 {
            debug __arg1_tag => _5;      // in scope 2 at ui/deriving/deriving-associated-types.rs:65:10: 65:19
            let _17: &i32;               // in scope 2 at ui/deriving/deriving-associated-types.rs:69:9: 69:21
            let _18: &std::option::Option<i32>; // in scope 2 at ui/deriving/deriving-associated-types.rs:70:9: 70:29
            let _19: &A;                 // in scope 2 at ui/deriving/deriving-associated-types.rs:71:9: 71:10
            let _20: &PrivateStruct<A>;  // in scope 2 at ui/deriving/deriving-associated-types.rs:72:9: 72:25
            let _21: &B;                 // in scope 2 at ui/deriving/deriving-associated-types.rs:73:9: 73:10
            let _22: &<B as DeclaredTrait>::Type; // in scope 2 at ui/deriving/deriving-associated-types.rs:74:9: 74:16
            let _23: &std::option::Option<<B as DeclaredTrait>::Type>; // in scope 2 at ui/deriving/deriving-associated-types.rs:75:9: 75:24
            let _24: &<B as DeclaredTrait>::Type; // in scope 2 at ui/deriving/deriving-associated-types.rs:76:9: 76:35
            let _25: &std::option::Option<<B as DeclaredTrait>::Type>; // in scope 2 at ui/deriving/deriving-associated-types.rs:77:9: 77:43
            let _26: &C;                 // in scope 2 at ui/deriving/deriving-associated-types.rs:78:9: 78:10
            let _27: &<C as WhereTrait>::Type; // in scope 2 at ui/deriving/deriving-associated-types.rs:79:9: 79:16
            let _28: &std::option::Option<<C as WhereTrait>::Type>; // in scope 2 at ui/deriving/deriving-associated-types.rs:80:9: 80:24
            let _29: &<C as WhereTrait>::Type; // in scope 2 at ui/deriving/deriving-associated-types.rs:81:9: 81:32
            let _30: &std::option::Option<<C as WhereTrait>::Type>; // in scope 2 at ui/deriving/deriving-associated-types.rs:82:9: 82:40
            let _31: &i32;               // in scope 2 at ui/deriving/deriving-associated-types.rs:83:9: 83:37
            let _32: &i32;               // in scope 2 at ui/deriving/deriving-associated-types.rs:69:9: 69:21
            let _33: &std::option::Option<i32>; // in scope 2 at ui/deriving/deriving-associated-types.rs:70:9: 70:29
            let _34: &A;                 // in scope 2 at ui/deriving/deriving-associated-types.rs:71:9: 71:10
            let _35: &PrivateStruct<A>;  // in scope 2 at ui/deriving/deriving-associated-types.rs:72:9: 72:25
            let _36: &B;                 // in scope 2 at ui/deriving/deriving-associated-types.rs:73:9: 73:10
            let _37: &<B as DeclaredTrait>::Type; // in scope 2 at ui/deriving/deriving-associated-types.rs:74:9: 74:16
            let _38: &std::option::Option<<B as DeclaredTrait>::Type>; // in scope 2 at ui/deriving/deriving-associated-types.rs:75:9: 75:24
            let _39: &<B as DeclaredTrait>::Type; // in scope 2 at ui/deriving/deriving-associated-types.rs:76:9: 76:35
            let _40: &std::option::Option<<B as DeclaredTrait>::Type>; // in scope 2 at ui/deriving/deriving-associated-types.rs:77:9: 77:43
            let _41: &C;                 // in scope 2 at ui/deriving/deriving-associated-types.rs:78:9: 78:10
            let _42: &<C as WhereTrait>::Type; // in scope 2 at ui/deriving/deriving-associated-types.rs:79:9: 79:16
            let _43: &std::option::Option<<C as WhereTrait>::Type>; // in scope 2 at ui/deriving/deriving-associated-types.rs:80:9: 80:24
            let _44: &<C as WhereTrait>::Type; // in scope 2 at ui/deriving/deriving-associated-types.rs:81:9: 81:32
            let _45: &std::option::Option<<C as WhereTrait>::Type>; // in scope 2 at ui/deriving/deriving-associated-types.rs:82:9: 82:40
            let _46: &i32;               // in scope 2 at ui/deriving/deriving-associated-types.rs:83:9: 83:37
            let _105: &i32;              // in scope 2 at ui/deriving/deriving-associated-types.rs:86:9: 86:25
            let _106: &std::option::Option<i32>; // in scope 2 at ui/deriving/deriving-associated-types.rs:87:9: 87:33
            let _107: &A;                // in scope 2 at ui/deriving/deriving-associated-types.rs:88:9: 88:14
            let _108: &PrivateStruct<A>; // in scope 2 at ui/deriving/deriving-associated-types.rs:89:9: 89:29
            let _109: &B;                // in scope 2 at ui/deriving/deriving-associated-types.rs:90:9: 90:13
            let _110: &<B as DeclaredTrait>::Type; // in scope 2 at ui/deriving/deriving-associated-types.rs:91:9: 91:20
            let _111: &std::option::Option<<B as DeclaredTrait>::Type>; // in scope 2 at ui/deriving/deriving-associated-types.rs:92:9: 92:28
            let _112: &<B as DeclaredTrait>::Type; // in scope 2 at ui/deriving/deriving-associated-types.rs:93:9: 93:39
            let _113: &std::option::Option<<B as DeclaredTrait>::Type>; // in scope 2 at ui/deriving/deriving-associated-types.rs:94:9: 94:47
            let _114: &C;                // in scope 2 at ui/deriving/deriving-associated-types.rs:95:9: 95:13
            let _115: &<C as WhereTrait>::Type; // in scope 2 at ui/deriving/deriving-associated-types.rs:96:9: 96:20
            let _116: &std::option::Option<<C as WhereTrait>::Type>; // in scope 2 at ui/deriving/deriving-associated-types.rs:97:9: 97:28
            let _117: &<C as WhereTrait>::Type; // in scope 2 at ui/deriving/deriving-associated-types.rs:98:9: 98:36
            let _118: &std::option::Option<<C as WhereTrait>::Type>; // in scope 2 at ui/deriving/deriving-associated-types.rs:99:9: 99:44
            let _119: &i32;              // in scope 2 at ui/deriving/deriving-associated-types.rs:100:9: 100:40
            let _120: &i32;              // in scope 2 at ui/deriving/deriving-associated-types.rs:86:9: 86:25
            let _121: &std::option::Option<i32>; // in scope 2 at ui/deriving/deriving-associated-types.rs:87:9: 87:33
            let _122: &A;                // in scope 2 at ui/deriving/deriving-associated-types.rs:88:9: 88:14
            let _123: &PrivateStruct<A>; // in scope 2 at ui/deriving/deriving-associated-types.rs:89:9: 89:29
            let _124: &B;                // in scope 2 at ui/deriving/deriving-associated-types.rs:90:9: 90:13
            let _125: &<B as DeclaredTrait>::Type; // in scope 2 at ui/deriving/deriving-associated-types.rs:91:9: 91:20
            let _126: &std::option::Option<<B as DeclaredTrait>::Type>; // in scope 2 at ui/deriving/deriving-associated-types.rs:92:9: 92:28
            let _127: &<B as DeclaredTrait>::Type; // in scope 2 at ui/deriving/deriving-associated-types.rs:93:9: 93:39
            let _128: &std::option::Option<<B as DeclaredTrait>::Type>; // in scope 2 at ui/deriving/deriving-associated-types.rs:94:9: 94:47
            let _129: &C;                // in scope 2 at ui/deriving/deriving-associated-types.rs:95:9: 95:13
            let _130: &<C as WhereTrait>::Type; // in scope 2 at ui/deriving/deriving-associated-types.rs:96:9: 96:20
            let _131: &std::option::Option<<C as WhereTrait>::Type>; // in scope 2 at ui/deriving/deriving-associated-types.rs:97:9: 97:28
            let _132: &<C as WhereTrait>::Type; // in scope 2 at ui/deriving/deriving-associated-types.rs:98:9: 98:36
            let _133: &std::option::Option<<C as WhereTrait>::Type>; // in scope 2 at ui/deriving/deriving-associated-types.rs:99:9: 99:44
            let _134: &i32;              // in scope 2 at ui/deriving/deriving-associated-types.rs:100:9: 100:40
            scope 3 {
                debug __self_0 => _17;   // in scope 3 at ui/deriving/deriving-associated-types.rs:69:9: 69:21
                debug __self_1 => _18;   // in scope 3 at ui/deriving/deriving-associated-types.rs:70:9: 70:29
                debug __self_2 => _19;   // in scope 3 at ui/deriving/deriving-associated-types.rs:71:9: 71:10
                debug __self_3 => _20;   // in scope 3 at ui/deriving/deriving-associated-types.rs:72:9: 72:25
                debug __self_4 => _21;   // in scope 3 at ui/deriving/deriving-associated-types.rs:73:9: 73:10
                debug __self_5 => _22;   // in scope 3 at ui/deriving/deriving-associated-types.rs:74:9: 74:16
                debug __self_6 => _23;   // in scope 3 at ui/deriving/deriving-associated-types.rs:75:9: 75:24
                debug __self_7 => _24;   // in scope 3 at ui/deriving/deriving-associated-types.rs:76:9: 76:35
                debug __self_8 => _25;   // in scope 3 at ui/deriving/deriving-associated-types.rs:77:9: 77:43
                debug __self_9 => _26;   // in scope 3 at ui/deriving/deriving-associated-types.rs:78:9: 78:10
                debug __self_10 => _27;  // in scope 3 at ui/deriving/deriving-associated-types.rs:79:9: 79:16
                debug __self_11 => _28;  // in scope 3 at ui/deriving/deriving-associated-types.rs:80:9: 80:24
                debug __self_12 => _29;  // in scope 3 at ui/deriving/deriving-associated-types.rs:81:9: 81:32
                debug __self_13 => _30;  // in scope 3 at ui/deriving/deriving-associated-types.rs:82:9: 82:40
                debug __self_14 => _31;  // in scope 3 at ui/deriving/deriving-associated-types.rs:83:9: 83:37
                debug __arg1_0 => _32;   // in scope 3 at ui/deriving/deriving-associated-types.rs:69:9: 69:21
                debug __arg1_1 => _33;   // in scope 3 at ui/deriving/deriving-associated-types.rs:70:9: 70:29
                debug __arg1_2 => _34;   // in scope 3 at ui/deriving/deriving-associated-types.rs:71:9: 71:10
                debug __arg1_3 => _35;   // in scope 3 at ui/deriving/deriving-associated-types.rs:72:9: 72:25
                debug __arg1_4 => _36;   // in scope 3 at ui/deriving/deriving-associated-types.rs:73:9: 73:10
                debug __arg1_5 => _37;   // in scope 3 at ui/deriving/deriving-associated-types.rs:74:9: 74:16
                debug __arg1_6 => _38;   // in scope 3 at ui/deriving/deriving-associated-types.rs:75:9: 75:24
                debug __arg1_7 => _39;   // in scope 3 at ui/deriving/deriving-associated-types.rs:76:9: 76:35
                debug __arg1_8 => _40;   // in scope 3 at ui/deriving/deriving-associated-types.rs:77:9: 77:43
                debug __arg1_9 => _41;   // in scope 3 at ui/deriving/deriving-associated-types.rs:78:9: 78:10
                debug __arg1_10 => _42;  // in scope 3 at ui/deriving/deriving-associated-types.rs:79:9: 79:16
                debug __arg1_11 => _43;  // in scope 3 at ui/deriving/deriving-associated-types.rs:80:9: 80:24
                debug __arg1_12 => _44;  // in scope 3 at ui/deriving/deriving-associated-types.rs:81:9: 81:32
                debug __arg1_13 => _45;  // in scope 3 at ui/deriving/deriving-associated-types.rs:82:9: 82:40
                debug __arg1_14 => _46;  // in scope 3 at ui/deriving/deriving-associated-types.rs:83:9: 83:37
            }
            scope 4 {
                debug __self_0 => _105;  // in scope 4 at ui/deriving/deriving-associated-types.rs:86:9: 86:25
                debug __self_1 => _106;  // in scope 4 at ui/deriving/deriving-associated-types.rs:87:9: 87:33
                debug __self_2 => _107;  // in scope 4 at ui/deriving/deriving-associated-types.rs:88:9: 88:14
                debug __self_3 => _108;  // in scope 4 at ui/deriving/deriving-associated-types.rs:89:9: 89:29
                debug __self_4 => _109;  // in scope 4 at ui/deriving/deriving-associated-types.rs:90:9: 90:13
                debug __self_5 => _110;  // in scope 4 at ui/deriving/deriving-associated-types.rs:91:9: 91:20
                debug __self_6 => _111;  // in scope 4 at ui/deriving/deriving-associated-types.rs:92:9: 92:28
                debug __self_7 => _112;  // in scope 4 at ui/deriving/deriving-associated-types.rs:93:9: 93:39
                debug __self_8 => _113;  // in scope 4 at ui/deriving/deriving-associated-types.rs:94:9: 94:47
                debug __self_9 => _114;  // in scope 4 at ui/deriving/deriving-associated-types.rs:95:9: 95:13
                debug __self_10 => _115; // in scope 4 at ui/deriving/deriving-associated-types.rs:96:9: 96:20
                debug __self_11 => _116; // in scope 4 at ui/deriving/deriving-associated-types.rs:97:9: 97:28
                debug __self_12 => _117; // in scope 4 at ui/deriving/deriving-associated-types.rs:98:9: 98:36
                debug __self_13 => _118; // in scope 4 at ui/deriving/deriving-associated-types.rs:99:9: 99:44
                debug __self_14 => _119; // in scope 4 at ui/deriving/deriving-associated-types.rs:100:9: 100:40
                debug __arg1_0 => _120;  // in scope 4 at ui/deriving/deriving-associated-types.rs:86:9: 86:25
                debug __arg1_1 => _121;  // in scope 4 at ui/deriving/deriving-associated-types.rs:87:9: 87:33
                debug __arg1_2 => _122;  // in scope 4 at ui/deriving/deriving-associated-types.rs:88:9: 88:14
                debug __arg1_3 => _123;  // in scope 4 at ui/deriving/deriving-associated-types.rs:89:9: 89:29
                debug __arg1_4 => _124;  // in scope 4 at ui/deriving/deriving-associated-types.rs:90:9: 90:13
                debug __arg1_5 => _125;  // in scope 4 at ui/deriving/deriving-associated-types.rs:91:9: 91:20
                debug __arg1_6 => _126;  // in scope 4 at ui/deriving/deriving-associated-types.rs:92:9: 92:28
                debug __arg1_7 => _127;  // in scope 4 at ui/deriving/deriving-associated-types.rs:93:9: 93:39
                debug __arg1_8 => _128;  // in scope 4 at ui/deriving/deriving-associated-types.rs:94:9: 94:47
                debug __arg1_9 => _129;  // in scope 4 at ui/deriving/deriving-associated-types.rs:95:9: 95:13
                debug __arg1_10 => _130; // in scope 4 at ui/deriving/deriving-associated-types.rs:96:9: 96:20
                debug __arg1_11 => _131; // in scope 4 at ui/deriving/deriving-associated-types.rs:97:9: 97:28
                debug __arg1_12 => _132; // in scope 4 at ui/deriving/deriving-associated-types.rs:98:9: 98:36
                debug __arg1_13 => _133; // in scope 4 at ui/deriving/deriving-associated-types.rs:99:9: 99:44
                debug __arg1_14 => _134; // in scope 4 at ui/deriving/deriving-associated-types.rs:100:9: 100:40
            }
        }
    }

    bb0: {
        _4 = _1;                         // scope 0 at ui/deriving/deriving-associated-types.rs:65:10: 65:19
        _3 = discriminant((*_4));        // scope 0 at ui/deriving/deriving-associated-types.rs:65:10: 65:19
        _6 = _2;                         // scope 1 at ui/deriving/deriving-associated-types.rs:65:10: 65:19
        _5 = discriminant((*_6));        // scope 1 at ui/deriving/deriving-associated-types.rs:65:10: 65:19
        _8 = _3;                         // scope 2 at ui/deriving/deriving-associated-types.rs:65:10: 65:19
        _9 = _5;                         // scope 2 at ui/deriving/deriving-associated-types.rs:65:10: 65:19
        _7 = Eq(move _8, move _9);       // scope 2 at ui/deriving/deriving-associated-types.rs:65:10: 65:19
        switchInt(move _7) -> [0: bb1, otherwise: bb2]; // scope 2 at ui/deriving/deriving-associated-types.rs:65:10: 65:19
    }

    bb1: {
        _0 = const false;                // scope 2 at ui/deriving/deriving-associated-types.rs:65:10: 65:19
        goto -> bb3;                     // scope 2 at ui/deriving/deriving-associated-types.rs:65:10: 65:19
    }

    bb2: {
        _12 = _1;                        // scope 2 at ui/deriving/deriving-associated-types.rs:65:10: 65:19
        _13 = _2;                        // scope 2 at ui/deriving/deriving-associated-types.rs:65:10: 65:19
        _11 = (move _12, move _13);      // scope 2 at ui/deriving/deriving-associated-types.rs:65:10: 65:19
        _193 = deref_copy (_11.0: &Enum<A, B, C>); // scope 2 at ui/deriving/deriving-associated-types.rs:65:10: 65:19
        _16 = discriminant((*_193));     // scope 2 at ui/deriving/deriving-associated-types.rs:65:10: 65:19
        switchInt(move _16) -> [1: bb5, 2: bb6, otherwise: bb4]; // scope 2 at ui/deriving/deriving-associated-types.rs:65:10: 65:19
    }

    bb3: {
        return;                          // scope 0 at ui/deriving/deriving-associated-types.rs:65:19: 65:19
    }

    bb4: {
        _10 = const true;                // scope 2 at ui/deriving/deriving-associated-types.rs:65:10: 65:19
        goto -> bb117;                   // scope 2 at ui/deriving/deriving-associated-types.rs:65:10: 65:19
    }

    bb5: {
        _194 = deref_copy (_11.1: &Enum<A, B, C>); // scope 2 at ui/deriving/deriving-associated-types.rs:65:10: 65:19
        _14 = discriminant((*_194));     // scope 2 at ui/deriving/deriving-associated-types.rs:65:10: 65:19
        switchInt(move _14) -> [1: bb7, otherwise: bb4]; // scope 2 at ui/deriving/deriving-associated-types.rs:65:10: 65:19
    }

    bb6: {
        _195 = deref_copy (_11.1: &Enum<A, B, C>); // scope 2 at ui/deriving/deriving-associated-types.rs:65:10: 65:19
        _15 = discriminant((*_195));     // scope 2 at ui/deriving/deriving-associated-types.rs:65:10: 65:19
        switchInt(move _15) -> [2: bb62, otherwise: bb4]; // scope 2 at ui/deriving/deriving-associated-types.rs:65:10: 65:19
    }

    bb7: {
        _196 = deref_copy (_11.0: &Enum<A, B, C>); // scope 2 at ui/deriving/deriving-associated-types.rs:69:9: 69:21
        _17 = &(((*_196) as Seq).0: i32); // scope 2 at ui/deriving/deriving-associated-types.rs:69:9: 69:21
        _197 = deref_copy (_11.0: &Enum<A, B, C>); // scope 2 at ui/deriving/deriving-associated-types.rs:70:9: 70:29
        _18 = &(((*_197) as Seq).1: std::option::Option<i32>); // scope 2 at ui/deriving/deriving-associated-types.rs:70:9: 70:29
        _198 = deref_copy (_11.0: &Enum<A, B, C>); // scope 2 at ui/deriving/deriving-associated-types.rs:71:9: 71:10
        _19 = &(((*_198) as Seq).2: A);  // scope 2 at ui/deriving/deriving-associated-types.rs:71:9: 71:10
        _199 = deref_copy (_11.0: &Enum<A, B, C>); // scope 2 at ui/deriving/deriving-associated-types.rs:72:9: 72:25
        _20 = &(((*_199) as Seq).3: PrivateStruct<A>); // scope 2 at ui/deriving/deriving-associated-types.rs:72:9: 72:25
        _200 = deref_copy (_11.0: &Enum<A, B, C>); // scope 2 at ui/deriving/deriving-associated-types.rs:73:9: 73:10
        _21 = &(((*_200) as Seq).4: B);  // scope 2 at ui/deriving/deriving-associated-types.rs:73:9: 73:10
        _201 = deref_copy (_11.0: &Enum<A, B, C>); // scope 2 at ui/deriving/deriving-associated-types.rs:74:9: 74:16
        _22 = &(((*_201) as Seq).5: <B as DeclaredTrait>::Type); // scope 2 at ui/deriving/deriving-associated-types.rs:74:9: 74:16
        _202 = deref_copy (_11.0: &Enum<A, B, C>); // scope 2 at ui/deriving/deriving-associated-types.rs:75:9: 75:24
        _23 = &(((*_202) as Seq).6: std::option::Option<<B as DeclaredTrait>::Type>); // scope 2 at ui/deriving/deriving-associated-types.rs:75:9: 75:24
        _203 = deref_copy (_11.0: &Enum<A, B, C>); // scope 2 at ui/deriving/deriving-associated-types.rs:76:9: 76:35
        _24 = &(((*_203) as Seq).7: <B as DeclaredTrait>::Type); // scope 2 at ui/deriving/deriving-associated-types.rs:76:9: 76:35
        _204 = deref_copy (_11.0: &Enum<A, B, C>); // scope 2 at ui/deriving/deriving-associated-types.rs:77:9: 77:43
        _25 = &(((*_204) as Seq).8: std::option::Option<<B as DeclaredTrait>::Type>); // scope 2 at ui/deriving/deriving-associated-types.rs:77:9: 77:43
        _205 = deref_copy (_11.0: &Enum<A, B, C>); // scope 2 at ui/deriving/deriving-associated-types.rs:78:9: 78:10
        _26 = &(((*_205) as Seq).9: C);  // scope 2 at ui/deriving/deriving-associated-types.rs:78:9: 78:10
        _206 = deref_copy (_11.0: &Enum<A, B, C>); // scope 2 at ui/deriving/deriving-associated-types.rs:79:9: 79:16
        _27 = &(((*_206) as Seq).10: <C as WhereTrait>::Type); // scope 2 at ui/deriving/deriving-associated-types.rs:79:9: 79:16
        _207 = deref_copy (_11.0: &Enum<A, B, C>); // scope 2 at ui/deriving/deriving-associated-types.rs:80:9: 80:24
        _28 = &(((*_207) as Seq).11: std::option::Option<<C as WhereTrait>::Type>); // scope 2 at ui/deriving/deriving-associated-types.rs:80:9: 80:24
        _208 = deref_copy (_11.0: &Enum<A, B, C>); // scope 2 at ui/deriving/deriving-associated-types.rs:81:9: 81:32
        _29 = &(((*_208) as Seq).12: <C as WhereTrait>::Type); // scope 2 at ui/deriving/deriving-associated-types.rs:81:9: 81:32
        _209 = deref_copy (_11.0: &Enum<A, B, C>); // scope 2 at ui/deriving/deriving-associated-types.rs:82:9: 82:40
        _30 = &(((*_209) as Seq).13: std::option::Option<<C as WhereTrait>::Type>); // scope 2 at ui/deriving/deriving-associated-types.rs:82:9: 82:40
        _210 = deref_copy (_11.0: &Enum<A, B, C>); // scope 2 at ui/deriving/deriving-associated-types.rs:83:9: 83:37
        _31 = &(((*_210) as Seq).14: i32); // scope 2 at ui/deriving/deriving-associated-types.rs:83:9: 83:37
        _211 = deref_copy (_11.1: &Enum<A, B, C>); // scope 2 at ui/deriving/deriving-associated-types.rs:69:9: 69:21
        _32 = &(((*_211) as Seq).0: i32); // scope 2 at ui/deriving/deriving-associated-types.rs:69:9: 69:21
        _212 = deref_copy (_11.1: &Enum<A, B, C>); // scope 2 at ui/deriving/deriving-associated-types.rs:70:9: 70:29
        _33 = &(((*_212) as Seq).1: std::option::Option<i32>); // scope 2 at ui/deriving/deriving-associated-types.rs:70:9: 70:29
        _213 = deref_copy (_11.1: &Enum<A, B, C>); // scope 2 at ui/deriving/deriving-associated-types.rs:71:9: 71:10
        _34 = &(((*_213) as Seq).2: A);  // scope 2 at ui/deriving/deriving-associated-types.rs:71:9: 71:10
        _214 = deref_copy (_11.1: &Enum<A, B, C>); // scope 2 at ui/deriving/deriving-associated-types.rs:72:9: 72:25
        _35 = &(((*_214) as Seq).3: PrivateStruct<A>); // scope 2 at ui/deriving/deriving-associated-types.rs:72:9: 72:25
        _215 = deref_copy (_11.1: &Enum<A, B, C>); // scope 2 at ui/deriving/deriving-associated-types.rs:73:9: 73:10
        _36 = &(((*_215) as Seq).4: B);  // scope 2 at ui/deriving/deriving-associated-types.rs:73:9: 73:10
        _216 = deref_copy (_11.1: &Enum<A, B, C>); // scope 2 at ui/deriving/deriving-associated-types.rs:74:9: 74:16
        _37 = &(((*_216) as Seq).5: <B as DeclaredTrait>::Type); // scope 2 at ui/deriving/deriving-associated-types.rs:74:9: 74:16
        _217 = deref_copy (_11.1: &Enum<A, B, C>); // scope 2 at ui/deriving/deriving-associated-types.rs:75:9: 75:24
        _38 = &(((*_217) as Seq).6: std::option::Option<<B as DeclaredTrait>::Type>); // scope 2 at ui/deriving/deriving-associated-types.rs:75:9: 75:24
        _218 = deref_copy (_11.1: &Enum<A, B, C>); // scope 2 at ui/deriving/deriving-associated-types.rs:76:9: 76:35
        _39 = &(((*_218) as Seq).7: <B as DeclaredTrait>::Type); // scope 2 at ui/deriving/deriving-associated-types.rs:76:9: 76:35
        _219 = deref_copy (_11.1: &Enum<A, B, C>); // scope 2 at ui/deriving/deriving-associated-types.rs:77:9: 77:43
        _40 = &(((*_219) as Seq).8: std::option::Option<<B as DeclaredTrait>::Type>); // scope 2 at ui/deriving/deriving-associated-types.rs:77:9: 77:43
        _220 = deref_copy (_11.1: &Enum<A, B, C>); // scope 2 at ui/deriving/deriving-associated-types.rs:78:9: 78:10
        _41 = &(((*_220) as Seq).9: C);  // scope 2 at ui/deriving/deriving-associated-types.rs:78:9: 78:10
        _221 = deref_copy (_11.1: &Enum<A, B, C>); // scope 2 at ui/deriving/deriving-associated-types.rs:79:9: 79:16
        _42 = &(((*_221) as Seq).10: <C as WhereTrait>::Type); // scope 2 at ui/deriving/deriving-associated-types.rs:79:9: 79:16
        _222 = deref_copy (_11.1: &Enum<A, B, C>); // scope 2 at ui/deriving/deriving-associated-types.rs:80:9: 80:24
        _43 = &(((*_222) as Seq).11: std::option::Option<<C as WhereTrait>::Type>); // scope 2 at ui/deriving/deriving-associated-types.rs:80:9: 80:24
        _223 = deref_copy (_11.1: &Enum<A, B, C>); // scope 2 at ui/deriving/deriving-associated-types.rs:81:9: 81:32
        _44 = &(((*_223) as Seq).12: <C as WhereTrait>::Type); // scope 2 at ui/deriving/deriving-associated-types.rs:81:9: 81:32
        _224 = deref_copy (_11.1: &Enum<A, B, C>); // scope 2 at ui/deriving/deriving-associated-types.rs:82:9: 82:40
        _45 = &(((*_224) as Seq).13: std::option::Option<<C as WhereTrait>::Type>); // scope 2 at ui/deriving/deriving-associated-types.rs:82:9: 82:40
        _225 = deref_copy (_11.1: &Enum<A, B, C>); // scope 2 at ui/deriving/deriving-associated-types.rs:83:9: 83:37
        _46 = &(((*_225) as Seq).14: i32); // scope 2 at ui/deriving/deriving-associated-types.rs:83:9: 83:37
        _61 = (*_17);                    // scope 3 at ui/deriving/deriving-associated-types.rs:69:9: 69:21
        _62 = (*_32);                    // scope 3 at ui/deriving/deriving-associated-types.rs:69:9: 69:21
        _60 = Eq(move _61, move _62);    // scope 3 at ui/deriving/deriving-associated-types.rs:69:9: 69:21
        switchInt(move _60) -> [0: bb46, otherwise: bb47]; // scope 3 at ui/deriving/deriving-associated-types.rs:70:9: 70:29
    }

    bb8: {
        _10 = const false;               // scope 3 at ui/deriving/deriving-associated-types.rs:83:9: 83:37
        goto -> bb117;                   // scope 3 at ui/deriving/deriving-associated-types.rs:83:9: 83:37
    }

    bb9: {
        _103 = (*_31);                   // scope 3 at ui/deriving/deriving-associated-types.rs:83:9: 83:37
        _104 = (*_46);                   // scope 3 at ui/deriving/deriving-associated-types.rs:83:9: 83:37
        _102 = Eq(move _103, move _104); // scope 3 at ui/deriving/deriving-associated-types.rs:83:9: 83:37
        _10 = move _102;                 // scope 3 at ui/deriving/deriving-associated-types.rs:83:9: 83:37
        goto -> bb117;                   // scope 3 at ui/deriving/deriving-associated-types.rs:83:9: 83:37
    }

    bb10: {
        _47 = const false;               // scope 3 at ui/deriving/deriving-associated-types.rs:82:9: 82:40
        goto -> bb12;                    // scope 3 at ui/deriving/deriving-associated-types.rs:82:9: 82:40
    }

    bb11: {
        _100 = _30;                      // scope 3 at ui/deriving/deriving-associated-types.rs:82:9: 82:40
        _101 = _45;                      // scope 3 at ui/deriving/deriving-associated-types.rs:82:9: 82:40
        _99 = <Option<<C as WhereTrait>::Type> as PartialEq>::eq(move _100, move _101) -> bb61; // scope 3 at ui/deriving/deriving-associated-types.rs:82:9: 82:40
                                         // mir::Constant
                                         // + span: ui/deriving/deriving-associated-types.rs:82:9: 82:40
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a Option<<C as WhereTrait>::Type>, &'b Option<<C as WhereTrait>::Type>) -> bool {<Option<<C as WhereTrait>::Type> as PartialEq>::eq}, val: Value(<ZST>) }
    }

    bb12: {
        switchInt(move _47) -> [0: bb8, otherwise: bb9]; // scope 3 at ui/deriving/deriving-associated-types.rs:83:9: 83:37
    }

    bb13: {
        _48 = const false;               // scope 3 at ui/deriving/deriving-associated-types.rs:81:9: 81:32
        goto -> bb15;                    // scope 3 at ui/deriving/deriving-associated-types.rs:81:9: 81:32
    }

    bb14: {
        _97 = _29;                       // scope 3 at ui/deriving/deriving-associated-types.rs:81:9: 81:32
        _98 = _44;                       // scope 3 at ui/deriving/deriving-associated-types.rs:81:9: 81:32
        _96 = <<C as WhereTrait>::Type as PartialEq>::eq(move _97, move _98) -> bb60; // scope 3 at ui/deriving/deriving-associated-types.rs:81:9: 81:32
                                         // mir::Constant
                                         // + span: ui/deriving/deriving-associated-types.rs:81:9: 81:32
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a <C as WhereTrait>::Type, &'b <C as WhereTrait>::Type) -> bool {<<C as WhereTrait>::Type as PartialEq>::eq}, val: Value(<ZST>) }
    }

    bb15: {
        switchInt(move _48) -> [0: bb10, otherwise: bb11]; // scope 3 at ui/deriving/deriving-associated-types.rs:82:9: 82:40
    }

    bb16: {
        _49 = const false;               // scope 3 at ui/deriving/deriving-associated-types.rs:80:9: 80:24
        goto -> bb18;                    // scope 3 at ui/deriving/deriving-associated-types.rs:80:9: 80:24
    }

    bb17: {
        _94 = _28;                       // scope 3 at ui/deriving/deriving-associated-types.rs:80:9: 80:24
        _95 = _43;                       // scope 3 at ui/deriving/deriving-associated-types.rs:80:9: 80:24
        _93 = <Option<<C as WhereTrait>::Type> as PartialEq>::eq(move _94, move _95) -> bb59; // scope 3 at ui/deriving/deriving-associated-types.rs:80:9: 80:24
                                         // mir::Constant
                                         // + span: ui/deriving/deriving-associated-types.rs:80:9: 80:24
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a Option<<C as WhereTrait>::Type>, &'b Option<<C as WhereTrait>::Type>) -> bool {<Option<<C as WhereTrait>::Type> as PartialEq>::eq}, val: Value(<ZST>) }
    }

    bb18: {
        switchInt(move _49) -> [0: bb13, otherwise: bb14]; // scope 3 at ui/deriving/deriving-associated-types.rs:81:9: 81:32
    }

    bb19: {
        _50 = const false;               // scope 3 at ui/deriving/deriving-associated-types.rs:79:9: 79:16
        goto -> bb21;                    // scope 3 at ui/deriving/deriving-associated-types.rs:79:9: 79:16
    }

    bb20: {
        _91 = _27;                       // scope 3 at ui/deriving/deriving-associated-types.rs:79:9: 79:16
        _92 = _42;                       // scope 3 at ui/deriving/deriving-associated-types.rs:79:9: 79:16
        _90 = <<C as WhereTrait>::Type as PartialEq>::eq(move _91, move _92) -> bb58; // scope 3 at ui/deriving/deriving-associated-types.rs:79:9: 79:16
                                         // mir::Constant
                                         // + span: ui/deriving/deriving-associated-types.rs:79:9: 79:16
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a <C as WhereTrait>::Type, &'b <C as WhereTrait>::Type) -> bool {<<C as WhereTrait>::Type as PartialEq>::eq}, val: Value(<ZST>) }
    }

    bb21: {
        switchInt(move _50) -> [0: bb16, otherwise: bb17]; // scope 3 at ui/deriving/deriving-associated-types.rs:80:9: 80:24
    }

    bb22: {
        _51 = const false;               // scope 3 at ui/deriving/deriving-associated-types.rs:78:9: 78:10
        goto -> bb24;                    // scope 3 at ui/deriving/deriving-associated-types.rs:78:9: 78:10
    }

    bb23: {
        _88 = _26;                       // scope 3 at ui/deriving/deriving-associated-types.rs:78:9: 78:10
        _89 = _41;                       // scope 3 at ui/deriving/deriving-associated-types.rs:78:9: 78:10
        _87 = <C as PartialEq>::eq(move _88, move _89) -> bb57; // scope 3 at ui/deriving/deriving-associated-types.rs:78:9: 78:10
                                         // mir::Constant
                                         // + span: ui/deriving/deriving-associated-types.rs:78:9: 78:10
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a C, &'b C) -> bool {<C as PartialEq>::eq}, val: Value(<ZST>) }
    }

    bb24: {
        switchInt(move _51) -> [0: bb19, otherwise: bb20]; // scope 3 at ui/deriving/deriving-associated-types.rs:79:9: 79:16
    }

    bb25: {
        _52 = const false;               // scope 3 at ui/deriving/deriving-associated-types.rs:77:9: 77:43
        goto -> bb27;                    // scope 3 at ui/deriving/deriving-associated-types.rs:77:9: 77:43
    }

    bb26: {
        _85 = _25;                       // scope 3 at ui/deriving/deriving-associated-types.rs:77:9: 77:43
        _86 = _40;                       // scope 3 at ui/deriving/deriving-associated-types.rs:77:9: 77:43
        _84 = <Option<<B as DeclaredTrait>::Type> as PartialEq>::eq(move _85, move _86) -> bb56; // scope 3 at ui/deriving/deriving-associated-types.rs:77:9: 77:43
                                         // mir::Constant
                                         // + span: ui/deriving/deriving-associated-types.rs:77:9: 77:43
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a Option<<B as DeclaredTrait>::Type>, &'b Option<<B as DeclaredTrait>::Type>) -> bool {<Option<<B as DeclaredTrait>::Type> as PartialEq>::eq}, val: Value(<ZST>) }
    }

    bb27: {
        switchInt(move _52) -> [0: bb22, otherwise: bb23]; // scope 3 at ui/deriving/deriving-associated-types.rs:78:9: 78:10
    }

    bb28: {
        _53 = const false;               // scope 3 at ui/deriving/deriving-associated-types.rs:76:9: 76:35
        goto -> bb30;                    // scope 3 at ui/deriving/deriving-associated-types.rs:76:9: 76:35
    }

    bb29: {
        _82 = _24;                       // scope 3 at ui/deriving/deriving-associated-types.rs:76:9: 76:35
        _83 = _39;                       // scope 3 at ui/deriving/deriving-associated-types.rs:76:9: 76:35
        _81 = <<B as DeclaredTrait>::Type as PartialEq>::eq(move _82, move _83) -> bb55; // scope 3 at ui/deriving/deriving-associated-types.rs:76:9: 76:35
                                         // mir::Constant
                                         // + span: ui/deriving/deriving-associated-types.rs:76:9: 76:35
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a <B as DeclaredTrait>::Type, &'b <B as DeclaredTrait>::Type) -> bool {<<B as DeclaredTrait>::Type as PartialEq>::eq}, val: Value(<ZST>) }
    }

    bb30: {
        switchInt(move _53) -> [0: bb25, otherwise: bb26]; // scope 3 at ui/deriving/deriving-associated-types.rs:77:9: 77:43
    }

    bb31: {
        _54 = const false;               // scope 3 at ui/deriving/deriving-associated-types.rs:75:9: 75:24
        goto -> bb33;                    // scope 3 at ui/deriving/deriving-associated-types.rs:75:9: 75:24
    }

    bb32: {
        _79 = _23;                       // scope 3 at ui/deriving/deriving-associated-types.rs:75:9: 75:24
        _80 = _38;                       // scope 3 at ui/deriving/deriving-associated-types.rs:75:9: 75:24
        _78 = <Option<<B as DeclaredTrait>::Type> as PartialEq>::eq(move _79, move _80) -> bb54; // scope 3 at ui/deriving/deriving-associated-types.rs:75:9: 75:24
                                         // mir::Constant
                                         // + span: ui/deriving/deriving-associated-types.rs:75:9: 75:24
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a Option<<B as DeclaredTrait>::Type>, &'b Option<<B as DeclaredTrait>::Type>) -> bool {<Option<<B as DeclaredTrait>::Type> as PartialEq>::eq}, val: Value(<ZST>) }
    }

    bb33: {
        switchInt(move _54) -> [0: bb28, otherwise: bb29]; // scope 3 at ui/deriving/deriving-associated-types.rs:76:9: 76:35
    }

    bb34: {
        _55 = const false;               // scope 3 at ui/deriving/deriving-associated-types.rs:74:9: 74:16
        goto -> bb36;                    // scope 3 at ui/deriving/deriving-associated-types.rs:74:9: 74:16
    }

    bb35: {
        _76 = _22;                       // scope 3 at ui/deriving/deriving-associated-types.rs:74:9: 74:16
        _77 = _37;                       // scope 3 at ui/deriving/deriving-associated-types.rs:74:9: 74:16
        _75 = <<B as DeclaredTrait>::Type as PartialEq>::eq(move _76, move _77) -> bb53; // scope 3 at ui/deriving/deriving-associated-types.rs:74:9: 74:16
                                         // mir::Constant
                                         // + span: ui/deriving/deriving-associated-types.rs:74:9: 74:16
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a <B as DeclaredTrait>::Type, &'b <B as DeclaredTrait>::Type) -> bool {<<B as DeclaredTrait>::Type as PartialEq>::eq}, val: Value(<ZST>) }
    }

    bb36: {
        switchInt(move _55) -> [0: bb31, otherwise: bb32]; // scope 3 at ui/deriving/deriving-associated-types.rs:75:9: 75:24
    }

    bb37: {
        _56 = const false;               // scope 3 at ui/deriving/deriving-associated-types.rs:73:9: 73:10
        goto -> bb39;                    // scope 3 at ui/deriving/deriving-associated-types.rs:73:9: 73:10
    }

    bb38: {
        _73 = _21;                       // scope 3 at ui/deriving/deriving-associated-types.rs:73:9: 73:10
        _74 = _36;                       // scope 3 at ui/deriving/deriving-associated-types.rs:73:9: 73:10
        _72 = <B as PartialEq>::eq(move _73, move _74) -> bb52; // scope 3 at ui/deriving/deriving-associated-types.rs:73:9: 73:10
                                         // mir::Constant
                                         // + span: ui/deriving/deriving-associated-types.rs:73:9: 73:10
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a B, &'b B) -> bool {<B as PartialEq>::eq}, val: Value(<ZST>) }
    }

    bb39: {
        switchInt(move _56) -> [0: bb34, otherwise: bb35]; // scope 3 at ui/deriving/deriving-associated-types.rs:74:9: 74:16
    }

    bb40: {
        _57 = const false;               // scope 3 at ui/deriving/deriving-associated-types.rs:72:9: 72:25
        goto -> bb42;                    // scope 3 at ui/deriving/deriving-associated-types.rs:72:9: 72:25
    }

    bb41: {
        _70 = _20;                       // scope 3 at ui/deriving/deriving-associated-types.rs:72:9: 72:25
        _71 = _35;                       // scope 3 at ui/deriving/deriving-associated-types.rs:72:9: 72:25
        _69 = <PrivateStruct<A> as PartialEq>::eq(move _70, move _71) -> bb51; // scope 3 at ui/deriving/deriving-associated-types.rs:72:9: 72:25
                                         // mir::Constant
                                         // + span: ui/deriving/deriving-associated-types.rs:72:9: 72:25
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a PrivateStruct<A>, &'b PrivateStruct<A>) -> bool {<PrivateStruct<A> as PartialEq>::eq}, val: Value(<ZST>) }
    }

    bb42: {
        switchInt(move _57) -> [0: bb37, otherwise: bb38]; // scope 3 at ui/deriving/deriving-associated-types.rs:73:9: 73:10
    }

    bb43: {
        _58 = const false;               // scope 3 at ui/deriving/deriving-associated-types.rs:71:9: 71:10
        goto -> bb45;                    // scope 3 at ui/deriving/deriving-associated-types.rs:71:9: 71:10
    }

    bb44: {
        _67 = _19;                       // scope 3 at ui/deriving/deriving-associated-types.rs:71:9: 71:10
        _68 = _34;                       // scope 3 at ui/deriving/deriving-associated-types.rs:71:9: 71:10
        _66 = <A as PartialEq>::eq(move _67, move _68) -> bb50; // scope 3 at ui/deriving/deriving-associated-types.rs:71:9: 71:10
                                         // mir::Constant
                                         // + span: ui/deriving/deriving-associated-types.rs:71:9: 71:10
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a A, &'b A) -> bool {<A as PartialEq>::eq}, val: Value(<ZST>) }
    }

    bb45: {
        switchInt(move _58) -> [0: bb40, otherwise: bb41]; // scope 3 at ui/deriving/deriving-associated-types.rs:72:9: 72:25
    }

    bb46: {
        _59 = const false;               // scope 3 at ui/deriving/deriving-associated-types.rs:70:9: 70:29
        goto -> bb48;                    // scope 3 at ui/deriving/deriving-associated-types.rs:70:9: 70:29
    }

    bb47: {
        _64 = _18;                       // scope 3 at ui/deriving/deriving-associated-types.rs:70:9: 70:29
        _65 = _33;                       // scope 3 at ui/deriving/deriving-associated-types.rs:70:9: 70:29
        _63 = <Option<i32> as PartialEq>::eq(move _64, move _65) -> bb49; // scope 3 at ui/deriving/deriving-associated-types.rs:70:9: 70:29
                                         // mir::Constant
                                         // + span: ui/deriving/deriving-associated-types.rs:70:9: 70:29
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a Option<i32>, &'b Option<i32>) -> bool {<Option<i32> as PartialEq>::eq}, val: Value(<ZST>) }
    }

    bb48: {
        switchInt(move _59) -> [0: bb43, otherwise: bb44]; // scope 3 at ui/deriving/deriving-associated-types.rs:71:9: 71:10
    }

    bb49: {
        _59 = move _63;                  // scope 3 at ui/deriving/deriving-associated-types.rs:70:9: 70:29
        goto -> bb48;                    // scope 3 at ui/deriving/deriving-associated-types.rs:70:9: 70:29
    }

    bb50: {
        _58 = move _66;                  // scope 3 at ui/deriving/deriving-associated-types.rs:71:9: 71:10
        goto -> bb45;                    // scope 3 at ui/deriving/deriving-associated-types.rs:71:9: 71:10
    }

    bb51: {
        _57 = move _69;                  // scope 3 at ui/deriving/deriving-associated-types.rs:72:9: 72:25
        goto -> bb42;                    // scope 3 at ui/deriving/deriving-associated-types.rs:72:9: 72:25
    }

    bb52: {
        _56 = move _72;                  // scope 3 at ui/deriving/deriving-associated-types.rs:73:9: 73:10
        goto -> bb39;                    // scope 3 at ui/deriving/deriving-associated-types.rs:73:9: 73:10
    }

    bb53: {
        _55 = move _75;                  // scope 3 at ui/deriving/deriving-associated-types.rs:74:9: 74:16
        goto -> bb36;                    // scope 3 at ui/deriving/deriving-associated-types.rs:74:9: 74:16
    }

    bb54: {
        _54 = move _78;                  // scope 3 at ui/deriving/deriving-associated-types.rs:75:9: 75:24
        goto -> bb33;                    // scope 3 at ui/deriving/deriving-associated-types.rs:75:9: 75:24
    }

    bb55: {
        _53 = move _81;                  // scope 3 at ui/deriving/deriving-associated-types.rs:76:9: 76:35
        goto -> bb30;                    // scope 3 at ui/deriving/deriving-associated-types.rs:76:9: 76:35
    }

    bb56: {
        _52 = move _84;                  // scope 3 at ui/deriving/deriving-associated-types.rs:77:9: 77:43
        goto -> bb27;                    // scope 3 at ui/deriving/deriving-associated-types.rs:77:9: 77:43
    }

    bb57: {
        _51 = move _87;                  // scope 3 at ui/deriving/deriving-associated-types.rs:78:9: 78:10
        goto -> bb24;                    // scope 3 at ui/deriving/deriving-associated-types.rs:78:9: 78:10
    }

    bb58: {
        _50 = move _90;                  // scope 3 at ui/deriving/deriving-associated-types.rs:79:9: 79:16
        goto -> bb21;                    // scope 3 at ui/deriving/deriving-associated-types.rs:79:9: 79:16
    }

    bb59: {
        _49 = move _93;                  // scope 3 at ui/deriving/deriving-associated-types.rs:80:9: 80:24
        goto -> bb18;                    // scope 3 at ui/deriving/deriving-associated-types.rs:80:9: 80:24
    }

    bb60: {
        _48 = move _96;                  // scope 3 at ui/deriving/deriving-associated-types.rs:81:9: 81:32
        goto -> bb15;                    // scope 3 at ui/deriving/deriving-associated-types.rs:81:9: 81:32
    }

    bb61: {
        _47 = move _99;                  // scope 3 at ui/deriving/deriving-associated-types.rs:82:9: 82:40
        goto -> bb12;                    // scope 3 at ui/deriving/deriving-associated-types.rs:82:9: 82:40
    }

    bb62: {
        _226 = deref_copy (_11.0: &Enum<A, B, C>); // scope 2 at ui/deriving/deriving-associated-types.rs:86:9: 86:25
        _105 = &(((*_226) as Map).0: i32); // scope 2 at ui/deriving/deriving-associated-types.rs:86:9: 86:25
        _227 = deref_copy (_11.0: &Enum<A, B, C>); // scope 2 at ui/deriving/deriving-associated-types.rs:87:9: 87:33
        _106 = &(((*_227) as Map).1: std::option::Option<i32>); // scope 2 at ui/deriving/deriving-associated-types.rs:87:9: 87:33
        _228 = deref_copy (_11.0: &Enum<A, B, C>); // scope 2 at ui/deriving/deriving-associated-types.rs:88:9: 88:14
        _107 = &(((*_228) as Map).2: A); // scope 2 at ui/deriving/deriving-associated-types.rs:88:9: 88:14
        _229 = deref_copy (_11.0: &Enum<A, B, C>); // scope 2 at ui/deriving/deriving-associated-types.rs:89:9: 89:29
        _108 = &(((*_229) as Map).3: PrivateStruct<A>); // scope 2 at ui/deriving/deriving-associated-types.rs:89:9: 89:29
        _230 = deref_copy (_11.0: &Enum<A, B, C>); // scope 2 at ui/deriving/deriving-associated-types.rs:90:9: 90:13
        _109 = &(((*_230) as Map).4: B); // scope 2 at ui/deriving/deriving-associated-types.rs:90:9: 90:13
        _231 = deref_copy (_11.0: &Enum<A, B, C>); // scope 2 at ui/deriving/deriving-associated-types.rs:91:9: 91:20
        _110 = &(((*_231) as Map).5: <B as DeclaredTrait>::Type); // scope 2 at ui/deriving/deriving-associated-types.rs:91:9: 91:20
        _232 = deref_copy (_11.0: &Enum<A, B, C>); // scope 2 at ui/deriving/deriving-associated-types.rs:92:9: 92:28
        _111 = &(((*_232) as Map).6: std::option::Option<<B as DeclaredTrait>::Type>); // scope 2 at ui/deriving/deriving-associated-types.rs:92:9: 92:28
        _233 = deref_copy (_11.0: &Enum<A, B, C>); // scope 2 at ui/deriving/deriving-associated-types.rs:93:9: 93:39
        _112 = &(((*_233) as Map).7: <B as DeclaredTrait>::Type); // scope 2 at ui/deriving/deriving-associated-types.rs:93:9: 93:39
        _234 = deref_copy (_11.0: &Enum<A, B, C>); // scope 2 at ui/deriving/deriving-associated-types.rs:94:9: 94:47
        _113 = &(((*_234) as Map).8: std::option::Option<<B as DeclaredTrait>::Type>); // scope 2 at ui/deriving/deriving-associated-types.rs:94:9: 94:47
        _235 = deref_copy (_11.0: &Enum<A, B, C>); // scope 2 at ui/deriving/deriving-associated-types.rs:95:9: 95:13
        _114 = &(((*_235) as Map).9: C); // scope 2 at ui/deriving/deriving-associated-types.rs:95:9: 95:13
        _236 = deref_copy (_11.0: &Enum<A, B, C>); // scope 2 at ui/deriving/deriving-associated-types.rs:96:9: 96:20
        _115 = &(((*_236) as Map).10: <C as WhereTrait>::Type); // scope 2 at ui/deriving/deriving-associated-types.rs:96:9: 96:20
        _237 = deref_copy (_11.0: &Enum<A, B, C>); // scope 2 at ui/deriving/deriving-associated-types.rs:97:9: 97:28
        _116 = &(((*_237) as Map).11: std::option::Option<<C as WhereTrait>::Type>); // scope 2 at ui/deriving/deriving-associated-types.rs:97:9: 97:28
        _238 = deref_copy (_11.0: &Enum<A, B, C>); // scope 2 at ui/deriving/deriving-associated-types.rs:98:9: 98:36
        _117 = &(((*_238) as Map).12: <C as WhereTrait>::Type); // scope 2 at ui/deriving/deriving-associated-types.rs:98:9: 98:36
        _239 = deref_copy (_11.0: &Enum<A, B, C>); // scope 2 at ui/deriving/deriving-associated-types.rs:99:9: 99:44
        _118 = &(((*_239) as Map).13: std::option::Option<<C as WhereTrait>::Type>); // scope 2 at ui/deriving/deriving-associated-types.rs:99:9: 99:44
        _240 = deref_copy (_11.0: &Enum<A, B, C>); // scope 2 at ui/deriving/deriving-associated-types.rs:100:9: 100:40
        _119 = &(((*_240) as Map).14: i32); // scope 2 at ui/deriving/deriving-associated-types.rs:100:9: 100:40
        _241 = deref_copy (_11.1: &Enum<A, B, C>); // scope 2 at ui/deriving/deriving-associated-types.rs:86:9: 86:25
        _120 = &(((*_241) as Map).0: i32); // scope 2 at ui/deriving/deriving-associated-types.rs:86:9: 86:25
        _242 = deref_copy (_11.1: &Enum<A, B, C>); // scope 2 at ui/deriving/deriving-associated-types.rs:87:9: 87:33
        _121 = &(((*_242) as Map).1: std::option::Option<i32>); // scope 2 at ui/deriving/deriving-associated-types.rs:87:9: 87:33
        _243 = deref_copy (_11.1: &Enum<A, B, C>); // scope 2 at ui/deriving/deriving-associated-types.rs:88:9: 88:14
        _122 = &(((*_243) as Map).2: A); // scope 2 at ui/deriving/deriving-associated-types.rs:88:9: 88:14
        _244 = deref_copy (_11.1: &Enum<A, B, C>); // scope 2 at ui/deriving/deriving-associated-types.rs:89:9: 89:29
        _123 = &(((*_244) as Map).3: PrivateStruct<A>); // scope 2 at ui/deriving/deriving-associated-types.rs:89:9: 89:29
        _245 = deref_copy (_11.1: &Enum<A, B, C>); // scope 2 at ui/deriving/deriving-associated-types.rs:90:9: 90:13
        _124 = &(((*_245) as Map).4: B); // scope 2 at ui/deriving/deriving-associated-types.rs:90:9: 90:13
        _246 = deref_copy (_11.1: &Enum<A, B, C>); // scope 2 at ui/deriving/deriving-associated-types.rs:91:9: 91:20
        _125 = &(((*_246) as Map).5: <B as DeclaredTrait>::Type); // scope 2 at ui/deriving/deriving-associated-types.rs:91:9: 91:20
        _247 = deref_copy (_11.1: &Enum<A, B, C>); // scope 2 at ui/deriving/deriving-associated-types.rs:92:9: 92:28
        _126 = &(((*_247) as Map).6: std::option::Option<<B as DeclaredTrait>::Type>); // scope 2 at ui/deriving/deriving-associated-types.rs:92:9: 92:28
        _248 = deref_copy (_11.1: &Enum<A, B, C>); // scope 2 at ui/deriving/deriving-associated-types.rs:93:9: 93:39
        _127 = &(((*_248) as Map).7: <B as DeclaredTrait>::Type); // scope 2 at ui/deriving/deriving-associated-types.rs:93:9: 93:39
        _249 = deref_copy (_11.1: &Enum<A, B, C>); // scope 2 at ui/deriving/deriving-associated-types.rs:94:9: 94:47
        _128 = &(((*_249) as Map).8: std::option::Option<<B as DeclaredTrait>::Type>); // scope 2 at ui/deriving/deriving-associated-types.rs:94:9: 94:47
        _250 = deref_copy (_11.1: &Enum<A, B, C>); // scope 2 at ui/deriving/deriving-associated-types.rs:95:9: 95:13
        _129 = &(((*_250) as Map).9: C); // scope 2 at ui/deriving/deriving-associated-types.rs:95:9: 95:13
        _251 = deref_copy (_11.1: &Enum<A, B, C>); // scope 2 at ui/deriving/deriving-associated-types.rs:96:9: 96:20
        _130 = &(((*_251) as Map).10: <C as WhereTrait>::Type); // scope 2 at ui/deriving/deriving-associated-types.rs:96:9: 96:20
        _252 = deref_copy (_11.1: &Enum<A, B, C>); // scope 2 at ui/deriving/deriving-associated-types.rs:97:9: 97:28
        _131 = &(((*_252) as Map).11: std::option::Option<<C as WhereTrait>::Type>); // scope 2 at ui/deriving/deriving-associated-types.rs:97:9: 97:28
        _253 = deref_copy (_11.1: &Enum<A, B, C>); // scope 2 at ui/deriving/deriving-associated-types.rs:98:9: 98:36
        _132 = &(((*_253) as Map).12: <C as WhereTrait>::Type); // scope 2 at ui/deriving/deriving-associated-types.rs:98:9: 98:36
        _254 = deref_copy (_11.1: &Enum<A, B, C>); // scope 2 at ui/deriving/deriving-associated-types.rs:99:9: 99:44
        _133 = &(((*_254) as Map).13: std::option::Option<<C as WhereTrait>::Type>); // scope 2 at ui/deriving/deriving-associated-types.rs:99:9: 99:44
        _255 = deref_copy (_11.1: &Enum<A, B, C>); // scope 2 at ui/deriving/deriving-associated-types.rs:100:9: 100:40
        _134 = &(((*_255) as Map).14: i32); // scope 2 at ui/deriving/deriving-associated-types.rs:100:9: 100:40
        _149 = (*_105);                  // scope 4 at ui/deriving/deriving-associated-types.rs:86:9: 86:25
        _150 = (*_120);                  // scope 4 at ui/deriving/deriving-associated-types.rs:86:9: 86:25
        _148 = Eq(move _149, move _150); // scope 4 at ui/deriving/deriving-associated-types.rs:86:9: 86:25
        switchInt(move _148) -> [0: bb101, otherwise: bb102]; // scope 4 at ui/deriving/deriving-associated-types.rs:87:9: 87:33
    }

    bb63: {
        _10 = const false;               // scope 4 at ui/deriving/deriving-associated-types.rs:100:9: 100:40
        goto -> bb117;                   // scope 4 at ui/deriving/deriving-associated-types.rs:100:9: 100:40
    }

    bb64: {
        _191 = (*_119);                  // scope 4 at ui/deriving/deriving-associated-types.rs:100:9: 100:40
        _192 = (*_134);                  // scope 4 at ui/deriving/deriving-associated-types.rs:100:9: 100:40
        _190 = Eq(move _191, move _192); // scope 4 at ui/deriving/deriving-associated-types.rs:100:9: 100:40
        _10 = move _190;                 // scope 4 at ui/deriving/deriving-associated-types.rs:100:9: 100:40
        goto -> bb117;                   // scope 4 at ui/deriving/deriving-associated-types.rs:100:9: 100:40
    }

    bb65: {
        _135 = const false;              // scope 4 at ui/deriving/deriving-associated-types.rs:99:9: 99:44
        goto -> bb67;                    // scope 4 at ui/deriving/deriving-associated-types.rs:99:9: 99:44
    }

    bb66: {
        _188 = _118;                     // scope 4 at ui/deriving/deriving-associated-types.rs:99:9: 99:44
        _189 = _133;                     // scope 4 at ui/deriving/deriving-associated-types.rs:99:9: 99:44
        _187 = <Option<<C as WhereTrait>::Type> as PartialEq>::eq(move _188, move _189) -> bb116; // scope 4 at ui/deriving/deriving-associated-types.rs:99:9: 99:44
                                         // mir::Constant
                                         // + span: ui/deriving/deriving-associated-types.rs:99:9: 99:44
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a Option<<C as WhereTrait>::Type>, &'b Option<<C as WhereTrait>::Type>) -> bool {<Option<<C as WhereTrait>::Type> as PartialEq>::eq}, val: Value(<ZST>) }
    }

    bb67: {
        switchInt(move _135) -> [0: bb63, otherwise: bb64]; // scope 4 at ui/deriving/deriving-associated-types.rs:100:9: 100:40
    }

    bb68: {
        _136 = const false;              // scope 4 at ui/deriving/deriving-associated-types.rs:98:9: 98:36
        goto -> bb70;                    // scope 4 at ui/deriving/deriving-associated-types.rs:98:9: 98:36
    }

    bb69: {
        _185 = _117;                     // scope 4 at ui/deriving/deriving-associated-types.rs:98:9: 98:36
        _186 = _132;                     // scope 4 at ui/deriving/deriving-associated-types.rs:98:9: 98:36
        _184 = <<C as WhereTrait>::Type as PartialEq>::eq(move _185, move _186) -> bb115; // scope 4 at ui/deriving/deriving-associated-types.rs:98:9: 98:36
                                         // mir::Constant
                                         // + span: ui/deriving/deriving-associated-types.rs:98:9: 98:36
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a <C as WhereTrait>::Type, &'b <C as WhereTrait>::Type) -> bool {<<C as WhereTrait>::Type as PartialEq>::eq}, val: Value(<ZST>) }
    }

    bb70: {
        switchInt(move _136) -> [0: bb65, otherwise: bb66]; // scope 4 at ui/deriving/deriving-associated-types.rs:99:9: 99:44
    }

    bb71: {
        _137 = const false;              // scope 4 at ui/deriving/deriving-associated-types.rs:97:9: 97:28
        goto -> bb73;                    // scope 4 at ui/deriving/deriving-associated-types.rs:97:9: 97:28
    }

    bb72: {
        _182 = _116;                     // scope 4 at ui/deriving/deriving-associated-types.rs:97:9: 97:28
        _183 = _131;                     // scope 4 at ui/deriving/deriving-associated-types.rs:97:9: 97:28
        _181 = <Option<<C as WhereTrait>::Type> as PartialEq>::eq(move _182, move _183) -> bb114; // scope 4 at ui/deriving/deriving-associated-types.rs:97:9: 97:28
                                         // mir::Constant
                                         // + span: ui/deriving/deriving-associated-types.rs:97:9: 97:28
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a Option<<C as WhereTrait>::Type>, &'b Option<<C as WhereTrait>::Type>) -> bool {<Option<<C as WhereTrait>::Type> as PartialEq>::eq}, val: Value(<ZST>) }
    }

    bb73: {
        switchInt(move _137) -> [0: bb68, otherwise: bb69]; // scope 4 at ui/deriving/deriving-associated-types.rs:98:9: 98:36
    }

    bb74: {
        _138 = const false;              // scope 4 at ui/deriving/deriving-associated-types.rs:96:9: 96:20
        goto -> bb76;                    // scope 4 at ui/deriving/deriving-associated-types.rs:96:9: 96:20
    }

    bb75: {
        _179 = _115;                     // scope 4 at ui/deriving/deriving-associated-types.rs:96:9: 96:20
        _180 = _130;                     // scope 4 at ui/deriving/deriving-associated-types.rs:96:9: 96:20
        _178 = <<C as WhereTrait>::Type as PartialEq>::eq(move _179, move _180) -> bb113; // scope 4 at ui/deriving/deriving-associated-types.rs:96:9: 96:20
                                         // mir::Constant
                                         // + span: ui/deriving/deriving-associated-types.rs:96:9: 96:20
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a <C as WhereTrait>::Type, &'b <C as WhereTrait>::Type) -> bool {<<C as WhereTrait>::Type as PartialEq>::eq}, val: Value(<ZST>) }
    }

    bb76: {
        switchInt(move _138) -> [0: bb71, otherwise: bb72]; // scope 4 at ui/deriving/deriving-associated-types.rs:97:9: 97:28
    }

    bb77: {
        _139 = const false;              // scope 4 at ui/deriving/deriving-associated-types.rs:95:9: 95:13
        goto -> bb79;                    // scope 4 at ui/deriving/deriving-associated-types.rs:95:9: 95:13
    }

    bb78: {
        _176 = _114;                     // scope 4 at ui/deriving/deriving-associated-types.rs:95:9: 95:13
        _177 = _129;                     // scope 4 at ui/deriving/deriving-associated-types.rs:95:9: 95:13
        _175 = <C as PartialEq>::eq(move _176, move _177) -> bb112; // scope 4 at ui/deriving/deriving-associated-types.rs:95:9: 95:13
                                         // mir::Constant
                                         // + span: ui/deriving/deriving-associated-types.rs:95:9: 95:13
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a C, &'b C) -> bool {<C as PartialEq>::eq}, val: Value(<ZST>) }
    }

    bb79: {
        switchInt(move _139) -> [0: bb74, otherwise: bb75]; // scope 4 at ui/deriving/deriving-associated-types.rs:96:9: 96:20
    }

    bb80: {
        _140 = const false;              // scope 4 at ui/deriving/deriving-associated-types.rs:94:9: 94:47
        goto -> bb82;                    // scope 4 at ui/deriving/deriving-associated-types.rs:94:9: 94:47
    }

    bb81: {
        _173 = _113;                     // scope 4 at ui/deriving/deriving-associated-types.rs:94:9: 94:47
        _174 = _128;                     // scope 4 at ui/deriving/deriving-associated-types.rs:94:9: 94:47
        _172 = <Option<<B as DeclaredTrait>::Type> as PartialEq>::eq(move _173, move _174) -> bb111; // scope 4 at ui/deriving/deriving-associated-types.rs:94:9: 94:47
                                         // mir::Constant
                                         // + span: ui/deriving/deriving-associated-types.rs:94:9: 94:47
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a Option<<B as DeclaredTrait>::Type>, &'b Option<<B as DeclaredTrait>::Type>) -> bool {<Option<<B as DeclaredTrait>::Type> as PartialEq>::eq}, val: Value(<ZST>) }
    }

    bb82: {
        switchInt(move _140) -> [0: bb77, otherwise: bb78]; // scope 4 at ui/deriving/deriving-associated-types.rs:95:9: 95:13
    }

    bb83: {
        _141 = const false;              // scope 4 at ui/deriving/deriving-associated-types.rs:93:9: 93:39
        goto -> bb85;                    // scope 4 at ui/deriving/deriving-associated-types.rs:93:9: 93:39
    }

    bb84: {
        _170 = _112;                     // scope 4 at ui/deriving/deriving-associated-types.rs:93:9: 93:39
        _171 = _127;                     // scope 4 at ui/deriving/deriving-associated-types.rs:93:9: 93:39
        _169 = <<B as DeclaredTrait>::Type as PartialEq>::eq(move _170, move _171) -> bb110; // scope 4 at ui/deriving/deriving-associated-types.rs:93:9: 93:39
                                         // mir::Constant
                                         // + span: ui/deriving/deriving-associated-types.rs:93:9: 93:39
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a <B as DeclaredTrait>::Type, &'b <B as DeclaredTrait>::Type) -> bool {<<B as DeclaredTrait>::Type as PartialEq>::eq}, val: Value(<ZST>) }
    }

    bb85: {
        switchInt(move _141) -> [0: bb80, otherwise: bb81]; // scope 4 at ui/deriving/deriving-associated-types.rs:94:9: 94:47
    }

    bb86: {
        _142 = const false;              // scope 4 at ui/deriving/deriving-associated-types.rs:92:9: 92:28
        goto -> bb88;                    // scope 4 at ui/deriving/deriving-associated-types.rs:92:9: 92:28
    }

    bb87: {
        _167 = _111;                     // scope 4 at ui/deriving/deriving-associated-types.rs:92:9: 92:28
        _168 = _126;                     // scope 4 at ui/deriving/deriving-associated-types.rs:92:9: 92:28
        _166 = <Option<<B as DeclaredTrait>::Type> as PartialEq>::eq(move _167, move _168) -> bb109; // scope 4 at ui/deriving/deriving-associated-types.rs:92:9: 92:28
                                         // mir::Constant
                                         // + span: ui/deriving/deriving-associated-types.rs:92:9: 92:28
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a Option<<B as DeclaredTrait>::Type>, &'b Option<<B as DeclaredTrait>::Type>) -> bool {<Option<<B as DeclaredTrait>::Type> as PartialEq>::eq}, val: Value(<ZST>) }
    }

    bb88: {
        switchInt(move _142) -> [0: bb83, otherwise: bb84]; // scope 4 at ui/deriving/deriving-associated-types.rs:93:9: 93:39
    }

    bb89: {
        _143 = const false;              // scope 4 at ui/deriving/deriving-associated-types.rs:91:9: 91:20
        goto -> bb91;                    // scope 4 at ui/deriving/deriving-associated-types.rs:91:9: 91:20
    }

    bb90: {
        _164 = _110;                     // scope 4 at ui/deriving/deriving-associated-types.rs:91:9: 91:20
        _165 = _125;                     // scope 4 at ui/deriving/deriving-associated-types.rs:91:9: 91:20
        _163 = <<B as DeclaredTrait>::Type as PartialEq>::eq(move _164, move _165) -> bb108; // scope 4 at ui/deriving/deriving-associated-types.rs:91:9: 91:20
                                         // mir::Constant
                                         // + span: ui/deriving/deriving-associated-types.rs:91:9: 91:20
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a <B as DeclaredTrait>::Type, &'b <B as DeclaredTrait>::Type) -> bool {<<B as DeclaredTrait>::Type as PartialEq>::eq}, val: Value(<ZST>) }
    }

    bb91: {
        switchInt(move _143) -> [0: bb86, otherwise: bb87]; // scope 4 at ui/deriving/deriving-associated-types.rs:92:9: 92:28
    }

    bb92: {
        _144 = const false;              // scope 4 at ui/deriving/deriving-associated-types.rs:90:9: 90:13
        goto -> bb94;                    // scope 4 at ui/deriving/deriving-associated-types.rs:90:9: 90:13
    }

    bb93: {
        _161 = _109;                     // scope 4 at ui/deriving/deriving-associated-types.rs:90:9: 90:13
        _162 = _124;                     // scope 4 at ui/deriving/deriving-associated-types.rs:90:9: 90:13
        _160 = <B as PartialEq>::eq(move _161, move _162) -> bb107; // scope 4 at ui/deriving/deriving-associated-types.rs:90:9: 90:13
                                         // mir::Constant
                                         // + span: ui/deriving/deriving-associated-types.rs:90:9: 90:13
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a B, &'b B) -> bool {<B as PartialEq>::eq}, val: Value(<ZST>) }
    }

    bb94: {
        switchInt(move _144) -> [0: bb89, otherwise: bb90]; // scope 4 at ui/deriving/deriving-associated-types.rs:91:9: 91:20
    }

    bb95: {
        _145 = const false;              // scope 4 at ui/deriving/deriving-associated-types.rs:89:9: 89:29
        goto -> bb97;                    // scope 4 at ui/deriving/deriving-associated-types.rs:89:9: 89:29
    }

    bb96: {
        _158 = _108;                     // scope 4 at ui/deriving/deriving-associated-types.rs:89:9: 89:29
        _159 = _123;                     // scope 4 at ui/deriving/deriving-associated-types.rs:89:9: 89:29
        _157 = <PrivateStruct<A> as PartialEq>::eq(move _158, move _159) -> bb106; // scope 4 at ui/deriving/deriving-associated-types.rs:89:9: 89:29
                                         // mir::Constant
                                         // + span: ui/deriving/deriving-associated-types.rs:89:9: 89:29
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a PrivateStruct<A>, &'b PrivateStruct<A>) -> bool {<PrivateStruct<A> as PartialEq>::eq}, val: Value(<ZST>) }
    }

    bb97: {
        switchInt(move _145) -> [0: bb92, otherwise: bb93]; // scope 4 at ui/deriving/deriving-associated-types.rs:90:9: 90:13
    }

    bb98: {
        _146 = const false;              // scope 4 at ui/deriving/deriving-associated-types.rs:88:9: 88:14
        goto -> bb100;                   // scope 4 at ui/deriving/deriving-associated-types.rs:88:9: 88:14
    }

    bb99: {
        _155 = _107;                     // scope 4 at ui/deriving/deriving-associated-types.rs:88:9: 88:14
        _156 = _122;                     // scope 4 at ui/deriving/deriving-associated-types.rs:88:9: 88:14
        _154 = <A as PartialEq>::eq(move _155, move _156) -> bb105; // scope 4 at ui/deriving/deriving-associated-types.rs:88:9: 88:14
                                         // mir::Constant
                                         // + span: ui/deriving/deriving-associated-types.rs:88:9: 88:14
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a A, &'b A) -> bool {<A as PartialEq>::eq}, val: Value(<ZST>) }
    }

    bb100: {
        switchInt(move _146) -> [0: bb95, otherwise: bb96]; // scope 4 at ui/deriving/deriving-associated-types.rs:89:9: 89:29
    }

    bb101: {
        _147 = const false;              // scope 4 at ui/deriving/deriving-associated-types.rs:87:9: 87:33
        goto -> bb103;                   // scope 4 at ui/deriving/deriving-associated-types.rs:87:9: 87:33
    }

    bb102: {
        _152 = _106;                     // scope 4 at ui/deriving/deriving-associated-types.rs:87:9: 87:33
        _153 = _121;                     // scope 4 at ui/deriving/deriving-associated-types.rs:87:9: 87:33
        _151 = <Option<i32> as PartialEq>::eq(move _152, move _153) -> bb104; // scope 4 at ui/deriving/deriving-associated-types.rs:87:9: 87:33
                                         // mir::Constant
                                         // + span: ui/deriving/deriving-associated-types.rs:87:9: 87:33
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a Option<i32>, &'b Option<i32>) -> bool {<Option<i32> as PartialEq>::eq}, val: Value(<ZST>) }
    }

    bb103: {
        switchInt(move _147) -> [0: bb98, otherwise: bb99]; // scope 4 at ui/deriving/deriving-associated-types.rs:88:9: 88:14
    }

    bb104: {
        _147 = move _151;                // scope 4 at ui/deriving/deriving-associated-types.rs:87:9: 87:33
        goto -> bb103;                   // scope 4 at ui/deriving/deriving-associated-types.rs:87:9: 87:33
    }

    bb105: {
        _146 = move _154;                // scope 4 at ui/deriving/deriving-associated-types.rs:88:9: 88:14
        goto -> bb100;                   // scope 4 at ui/deriving/deriving-associated-types.rs:88:9: 88:14
    }

    bb106: {
        _145 = move _157;                // scope 4 at ui/deriving/deriving-associated-types.rs:89:9: 89:29
        goto -> bb97;                    // scope 4 at ui/deriving/deriving-associated-types.rs:89:9: 89:29
    }

    bb107: {
        _144 = move _160;                // scope 4 at ui/deriving/deriving-associated-types.rs:90:9: 90:13
        goto -> bb94;                    // scope 4 at ui/deriving/deriving-associated-types.rs:90:9: 90:13
    }

    bb108: {
        _143 = move _163;                // scope 4 at ui/deriving/deriving-associated-types.rs:91:9: 91:20
        goto -> bb91;                    // scope 4 at ui/deriving/deriving-associated-types.rs:91:9: 91:20
    }

    bb109: {
        _142 = move _166;                // scope 4 at ui/deriving/deriving-associated-types.rs:92:9: 92:28
        goto -> bb88;                    // scope 4 at ui/deriving/deriving-associated-types.rs:92:9: 92:28
    }

    bb110: {
        _141 = move _169;                // scope 4 at ui/deriving/deriving-associated-types.rs:93:9: 93:39
        goto -> bb85;                    // scope 4 at ui/deriving/deriving-associated-types.rs:93:9: 93:39
    }

    bb111: {
        _140 = move _172;                // scope 4 at ui/deriving/deriving-associated-types.rs:94:9: 94:47
        goto -> bb82;                    // scope 4 at ui/deriving/deriving-associated-types.rs:94:9: 94:47
    }

    bb112: {
        _139 = move _175;                // scope 4 at ui/deriving/deriving-associated-types.rs:95:9: 95:13
        goto -> bb79;                    // scope 4 at ui/deriving/deriving-associated-types.rs:95:9: 95:13
    }

    bb113: {
        _138 = move _178;                // scope 4 at ui/deriving/deriving-associated-types.rs:96:9: 96:20
        goto -> bb76;                    // scope 4 at ui/deriving/deriving-associated-types.rs:96:9: 96:20
    }

    bb114: {
        _137 = move _181;                // scope 4 at ui/deriving/deriving-associated-types.rs:97:9: 97:28
        goto -> bb73;                    // scope 4 at ui/deriving/deriving-associated-types.rs:97:9: 97:28
    }

    bb115: {
        _136 = move _184;                // scope 4 at ui/deriving/deriving-associated-types.rs:98:9: 98:36
        goto -> bb70;                    // scope 4 at ui/deriving/deriving-associated-types.rs:98:9: 98:36
    }

    bb116: {
        _135 = move _187;                // scope 4 at ui/deriving/deriving-associated-types.rs:99:9: 99:44
        goto -> bb67;                    // scope 4 at ui/deriving/deriving-associated-types.rs:99:9: 99:44
    }

    bb117: {
        _0 = move _10;                   // scope 2 at ui/deriving/deriving-associated-types.rs:65:10: 65:19
        goto -> bb3;                     // scope 2 at ui/deriving/deriving-associated-types.rs:65:10: 65:19
    }
}

fn <impl at ui/deriving/deriving-associated-types.rs:65:21: 65:26>::fmt(_1: &Enum<A, B, C>, _2: &mut Formatter<'_>) -> Result<(), std::fmt::Error> {
    debug self => _1;                    // in scope 0 at ui/deriving/deriving-associated-types.rs:65:21: 65:26
    debug f => _2;                       // in scope 0 at ui/deriving/deriving-associated-types.rs:65:21: 65:26
    let mut _0: std::result::Result<(), std::fmt::Error>; // return place in scope 0 at ui/deriving/deriving-associated-types.rs:65:21: 65:26
    let mut _3: isize;                   // in scope 0 at ui/deriving/deriving-associated-types.rs:65:21: 65:26
    let mut _4: &mut std::fmt::Formatter<'_>; // in scope 0 at ui/deriving/deriving-associated-types.rs:65:21: 65:26
    let mut _5: &str;                    // in scope 0 at ui/deriving/deriving-associated-types.rs:65:21: 65:26
    let _6: &str;                        // in scope 0 at ui/deriving/deriving-associated-types.rs:65:21: 65:26
    let _7: &i32;                        // in scope 0 at ui/deriving/deriving-associated-types.rs:69:9: 69:21
    let _8: &std::option::Option<i32>;   // in scope 0 at ui/deriving/deriving-associated-types.rs:70:9: 70:29
    let _9: &A;                          // in scope 0 at ui/deriving/deriving-associated-types.rs:71:9: 71:10
    let _10: &PrivateStruct<A>;          // in scope 0 at ui/deriving/deriving-associated-types.rs:72:9: 72:25
    let _11: &B;                         // in scope 0 at ui/deriving/deriving-associated-types.rs:73:9: 73:10
    let _12: &<B as DeclaredTrait>::Type; // in scope 0 at ui/deriving/deriving-associated-types.rs:74:9: 74:16
    let _13: &std::option::Option<<B as DeclaredTrait>::Type>; // in scope 0 at ui/deriving/deriving-associated-types.rs:75:9: 75:24
    let _14: &<B as DeclaredTrait>::Type; // in scope 0 at ui/deriving/deriving-associated-types.rs:76:9: 76:35
    let _15: &std::option::Option<<B as DeclaredTrait>::Type>; // in scope 0 at ui/deriving/deriving-associated-types.rs:77:9: 77:43
    let _16: &C;                         // in scope 0 at ui/deriving/deriving-associated-types.rs:78:9: 78:10
    let _17: &<C as WhereTrait>::Type;   // in scope 0 at ui/deriving/deriving-associated-types.rs:79:9: 79:16
    let _18: &std::option::Option<<C as WhereTrait>::Type>; // in scope 0 at ui/deriving/deriving-associated-types.rs:80:9: 80:24
    let _19: &<C as WhereTrait>::Type;   // in scope 0 at ui/deriving/deriving-associated-types.rs:81:9: 81:32
    let _20: &std::option::Option<<C as WhereTrait>::Type>; // in scope 0 at ui/deriving/deriving-associated-types.rs:82:9: 82:40
    let _21: &i32;                       // in scope 0 at ui/deriving/deriving-associated-types.rs:83:9: 83:37
    let mut _23: &[&dyn std::fmt::Debug; 15]; // in scope 0 at ui/deriving/deriving-associated-types.rs:65:21: 65:26
    let _24: &[&dyn std::fmt::Debug; 15]; // in scope 0 at ui/deriving/deriving-associated-types.rs:65:21: 65:26
    let _25: [&dyn std::fmt::Debug; 15]; // in scope 0 at ui/deriving/deriving-associated-types.rs:65:21: 65:26
    let mut _26: &dyn std::fmt::Debug;   // in scope 0 at ui/deriving/deriving-associated-types.rs:69:9: 69:21
    let mut _27: &i32;                   // in scope 0 at ui/deriving/deriving-associated-types.rs:69:9: 69:21
    let mut _28: &dyn std::fmt::Debug;   // in scope 0 at ui/deriving/deriving-associated-types.rs:70:9: 70:29
    let mut _29: &std::option::Option<i32>; // in scope 0 at ui/deriving/deriving-associated-types.rs:70:9: 70:29
    let mut _30: &dyn std::fmt::Debug;   // in scope 0 at ui/deriving/deriving-associated-types.rs:71:9: 71:10
    let mut _31: &A;                     // in scope 0 at ui/deriving/deriving-associated-types.rs:71:9: 71:10
    let mut _32: &dyn std::fmt::Debug;   // in scope 0 at ui/deriving/deriving-associated-types.rs:72:9: 72:25
    let mut _33: &PrivateStruct<A>;      // in scope 0 at ui/deriving/deriving-associated-types.rs:72:9: 72:25
    let mut _34: &dyn std::fmt::Debug;   // in scope 0 at ui/deriving/deriving-associated-types.rs:73:9: 73:10
    let mut _35: &B;                     // in scope 0 at ui/deriving/deriving-associated-types.rs:73:9: 73:10
    let mut _36: &dyn std::fmt::Debug;   // in scope 0 at ui/deriving/deriving-associated-types.rs:74:9: 74:16
    let mut _37: &<B as DeclaredTrait>::Type; // in scope 0 at ui/deriving/deriving-associated-types.rs:74:9: 74:16
    let mut _38: &dyn std::fmt::Debug;   // in scope 0 at ui/deriving/deriving-associated-types.rs:75:9: 75:24
    let mut _39: &std::option::Option<<B as DeclaredTrait>::Type>; // in scope 0 at ui/deriving/deriving-associated-types.rs:75:9: 75:24
    let mut _40: &dyn std::fmt::Debug;   // in scope 0 at ui/deriving/deriving-associated-types.rs:76:9: 76:35
    let mut _41: &<B as DeclaredTrait>::Type; // in scope 0 at ui/deriving/deriving-associated-types.rs:76:9: 76:35
    let mut _42: &dyn std::fmt::Debug;   // in scope 0 at ui/deriving/deriving-associated-types.rs:77:9: 77:43
    let mut _43: &std::option::Option<<B as DeclaredTrait>::Type>; // in scope 0 at ui/deriving/deriving-associated-types.rs:77:9: 77:43
    let mut _44: &dyn std::fmt::Debug;   // in scope 0 at ui/deriving/deriving-associated-types.rs:78:9: 78:10
    let mut _45: &C;                     // in scope 0 at ui/deriving/deriving-associated-types.rs:78:9: 78:10
    let mut _46: &dyn std::fmt::Debug;   // in scope 0 at ui/deriving/deriving-associated-types.rs:79:9: 79:16
    let mut _47: &<C as WhereTrait>::Type; // in scope 0 at ui/deriving/deriving-associated-types.rs:79:9: 79:16
    let mut _48: &dyn std::fmt::Debug;   // in scope 0 at ui/deriving/deriving-associated-types.rs:80:9: 80:24
    let mut _49: &std::option::Option<<C as WhereTrait>::Type>; // in scope 0 at ui/deriving/deriving-associated-types.rs:80:9: 80:24
    let mut _50: &dyn std::fmt::Debug;   // in scope 0 at ui/deriving/deriving-associated-types.rs:81:9: 81:32
    let mut _51: &<C as WhereTrait>::Type; // in scope 0 at ui/deriving/deriving-associated-types.rs:81:9: 81:32
    let mut _52: &dyn std::fmt::Debug;   // in scope 0 at ui/deriving/deriving-associated-types.rs:82:9: 82:40
    let mut _53: &std::option::Option<<C as WhereTrait>::Type>; // in scope 0 at ui/deriving/deriving-associated-types.rs:82:9: 82:40
    let mut _54: &dyn std::fmt::Debug;   // in scope 0 at ui/deriving/deriving-associated-types.rs:83:9: 83:37
    let mut _55: &&i32;                  // in scope 0 at ui/deriving/deriving-associated-types.rs:83:9: 83:37
    let _56: &&i32;                      // in scope 0 at ui/deriving/deriving-associated-types.rs:83:9: 83:37
    let mut _57: &mut std::fmt::Formatter<'_>; // in scope 0 at ui/deriving/deriving-associated-types.rs:65:21: 65:26
    let mut _58: &str;                   // in scope 0 at ui/deriving/deriving-associated-types.rs:65:21: 65:26
    let _59: &str;                       // in scope 0 at ui/deriving/deriving-associated-types.rs:65:21: 65:26
    let mut _60: &[&dyn std::fmt::Debug]; // in scope 0 at ui/deriving/deriving-associated-types.rs:65:21: 65:26
    let _61: &i32;                       // in scope 0 at ui/deriving/deriving-associated-types.rs:86:9: 86:25
    let _62: &std::option::Option<i32>;  // in scope 0 at ui/deriving/deriving-associated-types.rs:87:9: 87:33
    let _63: &A;                         // in scope 0 at ui/deriving/deriving-associated-types.rs:88:9: 88:14
    let _64: &PrivateStruct<A>;          // in scope 0 at ui/deriving/deriving-associated-types.rs:89:9: 89:29
    let _65: &B;                         // in scope 0 at ui/deriving/deriving-associated-types.rs:90:9: 90:13
    let _66: &<B as DeclaredTrait>::Type; // in scope 0 at ui/deriving/deriving-associated-types.rs:91:9: 91:20
    let _67: &std::option::Option<<B as DeclaredTrait>::Type>; // in scope 0 at ui/deriving/deriving-associated-types.rs:92:9: 92:28
    let _68: &<B as DeclaredTrait>::Type; // in scope 0 at ui/deriving/deriving-associated-types.rs:93:9: 93:39
    let _69: &std::option::Option<<B as DeclaredTrait>::Type>; // in scope 0 at ui/deriving/deriving-associated-types.rs:94:9: 94:47
    let _70: &C;                         // in scope 0 at ui/deriving/deriving-associated-types.rs:95:9: 95:13
    let _71: &<C as WhereTrait>::Type;   // in scope 0 at ui/deriving/deriving-associated-types.rs:96:9: 96:20
    let _72: &std::option::Option<<C as WhereTrait>::Type>; // in scope 0 at ui/deriving/deriving-associated-types.rs:97:9: 97:28
    let _73: &<C as WhereTrait>::Type;   // in scope 0 at ui/deriving/deriving-associated-types.rs:98:9: 98:36
    let _74: &std::option::Option<<C as WhereTrait>::Type>; // in scope 0 at ui/deriving/deriving-associated-types.rs:99:9: 99:44
    let _75: &i32;                       // in scope 0 at ui/deriving/deriving-associated-types.rs:100:9: 100:40
    let _77: &[&str; 15];                // in scope 0 at ui/deriving/deriving-associated-types.rs:65:21: 65:26
    let mut _79: &[&dyn std::fmt::Debug; 15]; // in scope 0 at ui/deriving/deriving-associated-types.rs:65:21: 65:26
    let _80: &[&dyn std::fmt::Debug; 15]; // in scope 0 at ui/deriving/deriving-associated-types.rs:65:21: 65:26
    let _81: [&dyn std::fmt::Debug; 15]; // in scope 0 at ui/deriving/deriving-associated-types.rs:65:21: 65:26
    let mut _82: &dyn std::fmt::Debug;   // in scope 0 at ui/deriving/deriving-associated-types.rs:86:9: 86:25
    let mut _83: &i32;                   // in scope 0 at ui/deriving/deriving-associated-types.rs:86:9: 86:25
    let mut _84: &dyn std::fmt::Debug;   // in scope 0 at ui/deriving/deriving-associated-types.rs:87:9: 87:33
    let mut _85: &std::option::Option<i32>; // in scope 0 at ui/deriving/deriving-associated-types.rs:87:9: 87:33
    let mut _86: &dyn std::fmt::Debug;   // in scope 0 at ui/deriving/deriving-associated-types.rs:88:9: 88:14
    let mut _87: &A;                     // in scope 0 at ui/deriving/deriving-associated-types.rs:88:9: 88:14
    let mut _88: &dyn std::fmt::Debug;   // in scope 0 at ui/deriving/deriving-associated-types.rs:89:9: 89:29
    let mut _89: &PrivateStruct<A>;      // in scope 0 at ui/deriving/deriving-associated-types.rs:89:9: 89:29
    let mut _90: &dyn std::fmt::Debug;   // in scope 0 at ui/deriving/deriving-associated-types.rs:90:9: 90:13
    let mut _91: &B;                     // in scope 0 at ui/deriving/deriving-associated-types.rs:90:9: 90:13
    let mut _92: &dyn std::fmt::Debug;   // in scope 0 at ui/deriving/deriving-associated-types.rs:91:9: 91:20
    let mut _93: &<B as DeclaredTrait>::Type; // in scope 0 at ui/deriving/deriving-associated-types.rs:91:9: 91:20
    let mut _94: &dyn std::fmt::Debug;   // in scope 0 at ui/deriving/deriving-associated-types.rs:92:9: 92:28
    let mut _95: &std::option::Option<<B as DeclaredTrait>::Type>; // in scope 0 at ui/deriving/deriving-associated-types.rs:92:9: 92:28
    let mut _96: &dyn std::fmt::Debug;   // in scope 0 at ui/deriving/deriving-associated-types.rs:93:9: 93:39
    let mut _97: &<B as DeclaredTrait>::Type; // in scope 0 at ui/deriving/deriving-associated-types.rs:93:9: 93:39
    let mut _98: &dyn std::fmt::Debug;   // in scope 0 at ui/deriving/deriving-associated-types.rs:94:9: 94:47
    let mut _99: &std::option::Option<<B as DeclaredTrait>::Type>; // in scope 0 at ui/deriving/deriving-associated-types.rs:94:9: 94:47
    let mut _100: &dyn std::fmt::Debug;  // in scope 0 at ui/deriving/deriving-associated-types.rs:95:9: 95:13
    let mut _101: &C;                    // in scope 0 at ui/deriving/deriving-associated-types.rs:95:9: 95:13
    let mut _102: &dyn std::fmt::Debug;  // in scope 0 at ui/deriving/deriving-associated-types.rs:96:9: 96:20
    let mut _103: &<C as WhereTrait>::Type; // in scope 0 at ui/deriving/deriving-associated-types.rs:96:9: 96:20
    let mut _104: &dyn std::fmt::Debug;  // in scope 0 at ui/deriving/deriving-associated-types.rs:97:9: 97:28
    let mut _105: &std::option::Option<<C as WhereTrait>::Type>; // in scope 0 at ui/deriving/deriving-associated-types.rs:97:9: 97:28
    let mut _106: &dyn std::fmt::Debug;  // in scope 0 at ui/deriving/deriving-associated-types.rs:98:9: 98:36
    let mut _107: &<C as WhereTrait>::Type; // in scope 0 at ui/deriving/deriving-associated-types.rs:98:9: 98:36
    let mut _108: &dyn std::fmt::Debug;  // in scope 0 at ui/deriving/deriving-associated-types.rs:99:9: 99:44
    let mut _109: &std::option::Option<<C as WhereTrait>::Type>; // in scope 0 at ui/deriving/deriving-associated-types.rs:99:9: 99:44
    let mut _110: &dyn std::fmt::Debug;  // in scope 0 at ui/deriving/deriving-associated-types.rs:100:9: 100:40
    let mut _111: &&i32;                 // in scope 0 at ui/deriving/deriving-associated-types.rs:100:9: 100:40
    let _112: &&i32;                     // in scope 0 at ui/deriving/deriving-associated-types.rs:100:9: 100:40
    let mut _113: &mut std::fmt::Formatter<'_>; // in scope 0 at ui/deriving/deriving-associated-types.rs:65:21: 65:26
    let mut _114: &str;                  // in scope 0 at ui/deriving/deriving-associated-types.rs:65:21: 65:26
    let _115: &str;                      // in scope 0 at ui/deriving/deriving-associated-types.rs:65:21: 65:26
    let mut _116: &[&str];               // in scope 0 at ui/deriving/deriving-associated-types.rs:65:21: 65:26
    let mut _117: &[&str; 15];           // in scope 0 at ui/deriving/deriving-associated-types.rs:65:21: 65:26
    let mut _118: &[&dyn std::fmt::Debug]; // in scope 0 at ui/deriving/deriving-associated-types.rs:65:21: 65:26
    scope 1 {
        debug __self_0 => _7;            // in scope 1 at ui/deriving/deriving-associated-types.rs:69:9: 69:21
        debug __self_1 => _8;            // in scope 1 at ui/deriving/deriving-associated-types.rs:70:9: 70:29
        debug __self_2 => _9;            // in scope 1 at ui/deriving/deriving-associated-types.rs:71:9: 71:10
        debug __self_3 => _10;           // in scope 1 at ui/deriving/deriving-associated-types.rs:72:9: 72:25
        debug __self_4 => _11;           // in scope 1 at ui/deriving/deriving-associated-types.rs:73:9: 73:10
        debug __self_5 => _12;           // in scope 1 at ui/deriving/deriving-associated-types.rs:74:9: 74:16
        debug __self_6 => _13;           // in scope 1 at ui/deriving/deriving-associated-types.rs:75:9: 75:24
        debug __self_7 => _14;           // in scope 1 at ui/deriving/deriving-associated-types.rs:76:9: 76:35
        debug __self_8 => _15;           // in scope 1 at ui/deriving/deriving-associated-types.rs:77:9: 77:43
        debug __self_9 => _16;           // in scope 1 at ui/deriving/deriving-associated-types.rs:78:9: 78:10
        debug __self_10 => _17;          // in scope 1 at ui/deriving/deriving-associated-types.rs:79:9: 79:16
        debug __self_11 => _18;          // in scope 1 at ui/deriving/deriving-associated-types.rs:80:9: 80:24
        debug __self_12 => _19;          // in scope 1 at ui/deriving/deriving-associated-types.rs:81:9: 81:32
        debug __self_13 => _20;          // in scope 1 at ui/deriving/deriving-associated-types.rs:82:9: 82:40
        debug __self_14 => _21;          // in scope 1 at ui/deriving/deriving-associated-types.rs:83:9: 83:37
        let _22: &[&dyn std::fmt::Debug]; // in scope 1 at ui/deriving/deriving-associated-types.rs:65:21: 65:26
        scope 2 {
            debug values => _22;         // in scope 2 at ui/deriving/deriving-associated-types.rs:65:21: 65:26
        }
    }
    scope 3 {
        debug __self_0 => _61;           // in scope 3 at ui/deriving/deriving-associated-types.rs:86:9: 86:25
        debug __self_1 => _62;           // in scope 3 at ui/deriving/deriving-associated-types.rs:87:9: 87:33
        debug __self_2 => _63;           // in scope 3 at ui/deriving/deriving-associated-types.rs:88:9: 88:14
        debug __self_3 => _64;           // in scope 3 at ui/deriving/deriving-associated-types.rs:89:9: 89:29
        debug __self_4 => _65;           // in scope 3 at ui/deriving/deriving-associated-types.rs:90:9: 90:13
        debug __self_5 => _66;           // in scope 3 at ui/deriving/deriving-associated-types.rs:91:9: 91:20
        debug __self_6 => _67;           // in scope 3 at ui/deriving/deriving-associated-types.rs:92:9: 92:28
        debug __self_7 => _68;           // in scope 3 at ui/deriving/deriving-associated-types.rs:93:9: 93:39
        debug __self_8 => _69;           // in scope 3 at ui/deriving/deriving-associated-types.rs:94:9: 94:47
        debug __self_9 => _70;           // in scope 3 at ui/deriving/deriving-associated-types.rs:95:9: 95:13
        debug __self_10 => _71;          // in scope 3 at ui/deriving/deriving-associated-types.rs:96:9: 96:20
        debug __self_11 => _72;          // in scope 3 at ui/deriving/deriving-associated-types.rs:97:9: 97:28
        debug __self_12 => _73;          // in scope 3 at ui/deriving/deriving-associated-types.rs:98:9: 98:36
        debug __self_13 => _74;          // in scope 3 at ui/deriving/deriving-associated-types.rs:99:9: 99:44
        debug __self_14 => _75;          // in scope 3 at ui/deriving/deriving-associated-types.rs:100:9: 100:40
        let _76: &[&str; 15];            // in scope 3 at ui/deriving/deriving-associated-types.rs:65:21: 65:26
        let mut _119: &[&str; 15];       // in scope 3 at ui/deriving/deriving-associated-types.rs:65:21: 65:26
        scope 4 {
            debug names => _76;          // in scope 4 at ui/deriving/deriving-associated-types.rs:65:21: 65:26
            let _78: &[&dyn std::fmt::Debug]; // in scope 4 at ui/deriving/deriving-associated-types.rs:65:21: 65:26
            scope 5 {
                debug values => _78;     // in scope 5 at ui/deriving/deriving-associated-types.rs:65:21: 65:26
            }
        }
    }

    bb0: {
        _3 = discriminant((*_1));        // scope 0 at ui/deriving/deriving-associated-types.rs:65:21: 65:26
        switchInt(move _3) -> [0: bb3, 1: bb4, 2: bb1, otherwise: bb2]; // scope 0 at ui/deriving/deriving-associated-types.rs:65:21: 65:26
    }

    bb1: {
        _61 = &(((*_1) as Map).0: i32);  // scope 0 at ui/deriving/deriving-associated-types.rs:86:9: 86:25
        _62 = &(((*_1) as Map).1: std::option::Option<i32>); // scope 0 at ui/deriving/deriving-associated-types.rs:87:9: 87:33
        _63 = &(((*_1) as Map).2: A);    // scope 0 at ui/deriving/deriving-associated-types.rs:88:9: 88:14
        _64 = &(((*_1) as Map).3: PrivateStruct<A>); // scope 0 at ui/deriving/deriving-associated-types.rs:89:9: 89:29
        _65 = &(((*_1) as Map).4: B);    // scope 0 at ui/deriving/deriving-associated-types.rs:90:9: 90:13
        _66 = &(((*_1) as Map).5: <B as DeclaredTrait>::Type); // scope 0 at ui/deriving/deriving-associated-types.rs:91:9: 91:20
        _67 = &(((*_1) as Map).6: std::option::Option<<B as DeclaredTrait>::Type>); // scope 0 at ui/deriving/deriving-associated-types.rs:92:9: 92:28
        _68 = &(((*_1) as Map).7: <B as DeclaredTrait>::Type); // scope 0 at ui/deriving/deriving-associated-types.rs:93:9: 93:39
        _69 = &(((*_1) as Map).8: std::option::Option<<B as DeclaredTrait>::Type>); // scope 0 at ui/deriving/deriving-associated-types.rs:94:9: 94:47
        _70 = &(((*_1) as Map).9: C);    // scope 0 at ui/deriving/deriving-associated-types.rs:95:9: 95:13
        _71 = &(((*_1) as Map).10: <C as WhereTrait>::Type); // scope 0 at ui/deriving/deriving-associated-types.rs:96:9: 96:20
        _72 = &(((*_1) as Map).11: std::option::Option<<C as WhereTrait>::Type>); // scope 0 at ui/deriving/deriving-associated-types.rs:97:9: 97:28
        _73 = &(((*_1) as Map).12: <C as WhereTrait>::Type); // scope 0 at ui/deriving/deriving-associated-types.rs:98:9: 98:36
        _74 = &(((*_1) as Map).13: std::option::Option<<C as WhereTrait>::Type>); // scope 0 at ui/deriving/deriving-associated-types.rs:99:9: 99:44
        _75 = &(((*_1) as Map).14: i32); // scope 0 at ui/deriving/deriving-associated-types.rs:100:9: 100:40
        _119 = const _;                  // scope 3 at ui/deriving/deriving-associated-types.rs:65:21: 65:26
                                         // mir::Constant
                                         // + span: ui/deriving/deriving-associated-types.rs:65:21: 65:26
                                         // + literal: Const { ty: &[&str; 15], val: Unevaluated(<Enum<A, B, C> as Debug>::fmt, [A, B, C], Some(promoted[0])) }
        _77 = _119;                      // scope 3 at ui/deriving/deriving-associated-types.rs:65:21: 65:26
        _76 = _77;                       // scope 3 at ui/deriving/deriving-associated-types.rs:65:21: 65:26
        _83 = _61;                       // scope 4 at ui/deriving/deriving-associated-types.rs:86:9: 86:25
        _82 = move _83 as &dyn std::fmt::Debug (Pointer(Unsize)); // scope 4 at ui/deriving/deriving-associated-types.rs:86:9: 86:25
        _85 = _62;                       // scope 4 at ui/deriving/deriving-associated-types.rs:87:9: 87:33
        _84 = move _85 as &dyn std::fmt::Debug (Pointer(Unsize)); // scope 4 at ui/deriving/deriving-associated-types.rs:87:9: 87:33
        _87 = _63;                       // scope 4 at ui/deriving/deriving-associated-types.rs:88:9: 88:14
        _86 = move _87 as &dyn std::fmt::Debug (Pointer(Unsize)); // scope 4 at ui/deriving/deriving-associated-types.rs:88:9: 88:14
        _89 = _64;                       // scope 4 at ui/deriving/deriving-associated-types.rs:89:9: 89:29
        _88 = move _89 as &dyn std::fmt::Debug (Pointer(Unsize)); // scope 4 at ui/deriving/deriving-associated-types.rs:89:9: 89:29
        _91 = _65;                       // scope 4 at ui/deriving/deriving-associated-types.rs:90:9: 90:13
        _90 = move _91 as &dyn std::fmt::Debug (Pointer(Unsize)); // scope 4 at ui/deriving/deriving-associated-types.rs:90:9: 90:13
        _93 = _66;                       // scope 4 at ui/deriving/deriving-associated-types.rs:91:9: 91:20
        _92 = move _93 as &dyn std::fmt::Debug (Pointer(Unsize)); // scope 4 at ui/deriving/deriving-associated-types.rs:91:9: 91:20
        _95 = _67;                       // scope 4 at ui/deriving/deriving-associated-types.rs:92:9: 92:28
        _94 = move _95 as &dyn std::fmt::Debug (Pointer(Unsize)); // scope 4 at ui/deriving/deriving-associated-types.rs:92:9: 92:28
        _97 = _68;                       // scope 4 at ui/deriving/deriving-associated-types.rs:93:9: 93:39
        _96 = move _97 as &dyn std::fmt::Debug (Pointer(Unsize)); // scope 4 at ui/deriving/deriving-associated-types.rs:93:9: 93:39
        _99 = _69;                       // scope 4 at ui/deriving/deriving-associated-types.rs:94:9: 94:47
        _98 = move _99 as &dyn std::fmt::Debug (Pointer(Unsize)); // scope 4 at ui/deriving/deriving-associated-types.rs:94:9: 94:47
        _101 = _70;                      // scope 4 at ui/deriving/deriving-associated-types.rs:95:9: 95:13
        _100 = move _101 as &dyn std::fmt::Debug (Pointer(Unsize)); // scope 4 at ui/deriving/deriving-associated-types.rs:95:9: 95:13
        _103 = _71;                      // scope 4 at ui/deriving/deriving-associated-types.rs:96:9: 96:20
        _102 = move _103 as &dyn std::fmt::Debug (Pointer(Unsize)); // scope 4 at ui/deriving/deriving-associated-types.rs:96:9: 96:20
        _105 = _72;                      // scope 4 at ui/deriving/deriving-associated-types.rs:97:9: 97:28
        _104 = move _105 as &dyn std::fmt::Debug (Pointer(Unsize)); // scope 4 at ui/deriving/deriving-associated-types.rs:97:9: 97:28
        _107 = _73;                      // scope 4 at ui/deriving/deriving-associated-types.rs:98:9: 98:36
        _106 = move _107 as &dyn std::fmt::Debug (Pointer(Unsize)); // scope 4 at ui/deriving/deriving-associated-types.rs:98:9: 98:36
        _109 = _74;                      // scope 4 at ui/deriving/deriving-associated-types.rs:99:9: 99:44
        _108 = move _109 as &dyn std::fmt::Debug (Pointer(Unsize)); // scope 4 at ui/deriving/deriving-associated-types.rs:99:9: 99:44
        _112 = &_75;                     // scope 4 at ui/deriving/deriving-associated-types.rs:100:9: 100:40
        _111 = _112;                     // scope 4 at ui/deriving/deriving-associated-types.rs:100:9: 100:40
        _110 = move _111 as &dyn std::fmt::Debug (Pointer(Unsize)); // scope 4 at ui/deriving/deriving-associated-types.rs:100:9: 100:40
        _81 = [move _82, move _84, move _86, move _88, move _90, move _92, move _94, move _96, move _98, move _100, move _102, move _104, move _106, move _108, move _110]; // scope 4 at ui/deriving/deriving-associated-types.rs:65:21: 65:26
        _80 = &_81;                      // scope 4 at ui/deriving/deriving-associated-types.rs:65:21: 65:26
        _79 = _80;                       // scope 4 at ui/deriving/deriving-associated-types.rs:65:21: 65:26
        _78 = move _79 as &[&dyn std::fmt::Debug] (Pointer(Unsize)); // scope 4 at ui/deriving/deriving-associated-types.rs:65:21: 65:26
        _113 = &mut (*_2);               // scope 5 at ui/deriving/deriving-associated-types.rs:65:21: 65:26
        _115 = const "Map";              // scope 5 at ui/deriving/deriving-associated-types.rs:65:21: 65:26
                                         // mir::Constant
                                         // + span: ui/deriving/deriving-associated-types.rs:65:21: 65:26
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _114 = _115;                     // scope 5 at ui/deriving/deriving-associated-types.rs:65:21: 65:26
        _117 = _76;                      // scope 5 at ui/deriving/deriving-associated-types.rs:65:21: 65:26
        _116 = move _117 as &[&str] (Pointer(Unsize)); // scope 5 at ui/deriving/deriving-associated-types.rs:65:21: 65:26
        _118 = _78;                      // scope 5 at ui/deriving/deriving-associated-types.rs:65:21: 65:26
        _0 = Formatter::<'_>::debug_struct_fields_finish(move _113, move _114, move _116, move _118) -> bb5; // scope 5 at ui/deriving/deriving-associated-types.rs:65:21: 65:26
                                         // mir::Constant
                                         // + span: ui/deriving/deriving-associated-types.rs:65:21: 65:26
                                         // + user_ty: UserType(8)
                                         // + literal: Const { ty: for<'b, 'a, 'c, 'd, 'e, 'f> fn(&'b mut Formatter<'_>, &'a str, &'c [&'d str], &'e [&'f (dyn Debug + 'f)]) -> Result<(), std::fmt::Error> {Formatter::<'_>::debug_struct_fields_finish}, val: Value(<ZST>) }
    }

    bb2: {
        unreachable;                     // scope 0 at ui/deriving/deriving-associated-types.rs:65:21: 65:26
    }

    bb3: {
        _4 = &mut (*_2);                 // scope 0 at ui/deriving/deriving-associated-types.rs:65:21: 65:26
        _6 = const "Unit";               // scope 0 at ui/deriving/deriving-associated-types.rs:65:21: 65:26
                                         // mir::Constant
                                         // + span: ui/deriving/deriving-associated-types.rs:65:21: 65:26
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _5 = _6;                         // scope 0 at ui/deriving/deriving-associated-types.rs:65:21: 65:26
        _0 = Formatter::<'_>::write_str(move _4, move _5) -> bb5; // scope 0 at ui/deriving/deriving-associated-types.rs:65:21: 65:26
                                         // mir::Constant
                                         // + span: ui/deriving/deriving-associated-types.rs:65:21: 65:26
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a mut Formatter<'_>, &'b str) -> Result<(), std::fmt::Error> {Formatter::<'_>::write_str}, val: Value(<ZST>) }
    }

    bb4: {
        _7 = &(((*_1) as Seq).0: i32);   // scope 0 at ui/deriving/deriving-associated-types.rs:69:9: 69:21
        _8 = &(((*_1) as Seq).1: std::option::Option<i32>); // scope 0 at ui/deriving/deriving-associated-types.rs:70:9: 70:29
        _9 = &(((*_1) as Seq).2: A);     // scope 0 at ui/deriving/deriving-associated-types.rs:71:9: 71:10
        _10 = &(((*_1) as Seq).3: PrivateStruct<A>); // scope 0 at ui/deriving/deriving-associated-types.rs:72:9: 72:25
        _11 = &(((*_1) as Seq).4: B);    // scope 0 at ui/deriving/deriving-associated-types.rs:73:9: 73:10
        _12 = &(((*_1) as Seq).5: <B as DeclaredTrait>::Type); // scope 0 at ui/deriving/deriving-associated-types.rs:74:9: 74:16
        _13 = &(((*_1) as Seq).6: std::option::Option<<B as DeclaredTrait>::Type>); // scope 0 at ui/deriving/deriving-associated-types.rs:75:9: 75:24
        _14 = &(((*_1) as Seq).7: <B as DeclaredTrait>::Type); // scope 0 at ui/deriving/deriving-associated-types.rs:76:9: 76:35
        _15 = &(((*_1) as Seq).8: std::option::Option<<B as DeclaredTrait>::Type>); // scope 0 at ui/deriving/deriving-associated-types.rs:77:9: 77:43
        _16 = &(((*_1) as Seq).9: C);    // scope 0 at ui/deriving/deriving-associated-types.rs:78:9: 78:10
        _17 = &(((*_1) as Seq).10: <C as WhereTrait>::Type); // scope 0 at ui/deriving/deriving-associated-types.rs:79:9: 79:16
        _18 = &(((*_1) as Seq).11: std::option::Option<<C as WhereTrait>::Type>); // scope 0 at ui/deriving/deriving-associated-types.rs:80:9: 80:24
        _19 = &(((*_1) as Seq).12: <C as WhereTrait>::Type); // scope 0 at ui/deriving/deriving-associated-types.rs:81:9: 81:32
        _20 = &(((*_1) as Seq).13: std::option::Option<<C as WhereTrait>::Type>); // scope 0 at ui/deriving/deriving-associated-types.rs:82:9: 82:40
        _21 = &(((*_1) as Seq).14: i32); // scope 0 at ui/deriving/deriving-associated-types.rs:83:9: 83:37
        _27 = _7;                        // scope 1 at ui/deriving/deriving-associated-types.rs:69:9: 69:21
        _26 = move _27 as &dyn std::fmt::Debug (Pointer(Unsize)); // scope 1 at ui/deriving/deriving-associated-types.rs:69:9: 69:21
        _29 = _8;                        // scope 1 at ui/deriving/deriving-associated-types.rs:70:9: 70:29
        _28 = move _29 as &dyn std::fmt::Debug (Pointer(Unsize)); // scope 1 at ui/deriving/deriving-associated-types.rs:70:9: 70:29
        _31 = _9;                        // scope 1 at ui/deriving/deriving-associated-types.rs:71:9: 71:10
        _30 = move _31 as &dyn std::fmt::Debug (Pointer(Unsize)); // scope 1 at ui/deriving/deriving-associated-types.rs:71:9: 71:10
        _33 = _10;                       // scope 1 at ui/deriving/deriving-associated-types.rs:72:9: 72:25
        _32 = move _33 as &dyn std::fmt::Debug (Pointer(Unsize)); // scope 1 at ui/deriving/deriving-associated-types.rs:72:9: 72:25
        _35 = _11;                       // scope 1 at ui/deriving/deriving-associated-types.rs:73:9: 73:10
        _34 = move _35 as &dyn std::fmt::Debug (Pointer(Unsize)); // scope 1 at ui/deriving/deriving-associated-types.rs:73:9: 73:10
        _37 = _12;                       // scope 1 at ui/deriving/deriving-associated-types.rs:74:9: 74:16
        _36 = move _37 as &dyn std::fmt::Debug (Pointer(Unsize)); // scope 1 at ui/deriving/deriving-associated-types.rs:74:9: 74:16
        _39 = _13;                       // scope 1 at ui/deriving/deriving-associated-types.rs:75:9: 75:24
        _38 = move _39 as &dyn std::fmt::Debug (Pointer(Unsize)); // scope 1 at ui/deriving/deriving-associated-types.rs:75:9: 75:24
        _41 = _14;                       // scope 1 at ui/deriving/deriving-associated-types.rs:76:9: 76:35
        _40 = move _41 as &dyn std::fmt::Debug (Pointer(Unsize)); // scope 1 at ui/deriving/deriving-associated-types.rs:76:9: 76:35
        _43 = _15;                       // scope 1 at ui/deriving/deriving-associated-types.rs:77:9: 77:43
        _42 = move _43 as &dyn std::fmt::Debug (Pointer(Unsize)); // scope 1 at ui/deriving/deriving-associated-types.rs:77:9: 77:43
        _45 = _16;                       // scope 1 at ui/deriving/deriving-associated-types.rs:78:9: 78:10
        _44 = move _45 as &dyn std::fmt::Debug (Pointer(Unsize)); // scope 1 at ui/deriving/deriving-associated-types.rs:78:9: 78:10
        _47 = _17;                       // scope 1 at ui/deriving/deriving-associated-types.rs:79:9: 79:16
        _46 = move _47 as &dyn std::fmt::Debug (Pointer(Unsize)); // scope 1 at ui/deriving/deriving-associated-types.rs:79:9: 79:16
        _49 = _18;                       // scope 1 at ui/deriving/deriving-associated-types.rs:80:9: 80:24
        _48 = move _49 as &dyn std::fmt::Debug (Pointer(Unsize)); // scope 1 at ui/deriving/deriving-associated-types.rs:80:9: 80:24
        _51 = _19;                       // scope 1 at ui/deriving/deriving-associated-types.rs:81:9: 81:32
        _50 = move _51 as &dyn std::fmt::Debug (Pointer(Unsize)); // scope 1 at ui/deriving/deriving-associated-types.rs:81:9: 81:32
        _53 = _20;                       // scope 1 at ui/deriving/deriving-associated-types.rs:82:9: 82:40
        _52 = move _53 as &dyn std::fmt::Debug (Pointer(Unsize)); // scope 1 at ui/deriving/deriving-associated-types.rs:82:9: 82:40
        _56 = &_21;                      // scope 1 at ui/deriving/deriving-associated-types.rs:83:9: 83:37
        _55 = _56;                       // scope 1 at ui/deriving/deriving-associated-types.rs:83:9: 83:37
        _54 = move _55 as &dyn std::fmt::Debug (Pointer(Unsize)); // scope 1 at ui/deriving/deriving-associated-types.rs:83:9: 83:37
        _25 = [move _26, move _28, move _30, move _32, move _34, move _36, move _38, move _40, move _42, move _44, move _46, move _48, move _50, move _52, move _54]; // scope 1 at ui/deriving/deriving-associated-types.rs:65:21: 65:26
        _24 = &_25;                      // scope 1 at ui/deriving/deriving-associated-types.rs:65:21: 65:26
        _23 = _24;                       // scope 1 at ui/deriving/deriving-associated-types.rs:65:21: 65:26
        _22 = move _23 as &[&dyn std::fmt::Debug] (Pointer(Unsize)); // scope 1 at ui/deriving/deriving-associated-types.rs:65:21: 65:26
        _57 = &mut (*_2);                // scope 2 at ui/deriving/deriving-associated-types.rs:65:21: 65:26
        _59 = const "Seq";               // scope 2 at ui/deriving/deriving-associated-types.rs:65:21: 65:26
                                         // mir::Constant
                                         // + span: ui/deriving/deriving-associated-types.rs:65:21: 65:26
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _58 = _59;                       // scope 2 at ui/deriving/deriving-associated-types.rs:65:21: 65:26
        _60 = _22;                       // scope 2 at ui/deriving/deriving-associated-types.rs:65:21: 65:26
        _0 = Formatter::<'_>::debug_tuple_fields_finish(move _57, move _58, move _60) -> bb5; // scope 2 at ui/deriving/deriving-associated-types.rs:65:21: 65:26
                                         // mir::Constant
                                         // + span: ui/deriving/deriving-associated-types.rs:65:21: 65:26
                                         // + user_ty: UserType(3)
                                         // + literal: Const { ty: for<'b, 'a, 'c, 'd> fn(&'b mut Formatter<'_>, &'a str, &'c [&'d (dyn Debug + 'd)]) -> Result<(), std::fmt::Error> {Formatter::<'_>::debug_tuple_fields_finish}, val: Value(<ZST>) }
    }

    bb5: {
        return;                          // scope 0 at ui/deriving/deriving-associated-types.rs:65:26: 65:26
    }
}

promoted[0] in <impl at ui/deriving/deriving-associated-types.rs:65:21: 65:26>::fmt: &[&str; 15] = {
    let mut _0: &[&str; 15];             // return place in scope 0 at ui/deriving/deriving-associated-types.rs:65:21: 65:26
    let mut _1: [&str; 15];              // in scope 0 at ui/deriving/deriving-associated-types.rs:65:21: 65:26
    let mut _2: &str;                    // in scope 0 at ui/deriving/deriving-associated-types.rs:87:9: 87:33
    let mut _3: &str;                    // in scope 0 at ui/deriving/deriving-associated-types.rs:87:9: 87:33
    let mut _4: &str;                    // in scope 0 at ui/deriving/deriving-associated-types.rs:88:9: 88:14
    let mut _5: &str;                    // in scope 0 at ui/deriving/deriving-associated-types.rs:88:9: 88:14
    let mut _6: &str;                    // in scope 0 at ui/deriving/deriving-associated-types.rs:89:9: 89:29
    let mut _7: &str;                    // in scope 0 at ui/deriving/deriving-associated-types.rs:89:9: 89:29
    let mut _8: &str;                    // in scope 0 at ui/deriving/deriving-associated-types.rs:90:9: 90:13
    let mut _9: &str;                    // in scope 0 at ui/deriving/deriving-associated-types.rs:90:9: 90:13
    let mut _10: &str;                   // in scope 0 at ui/deriving/deriving-associated-types.rs:91:9: 91:20
    let mut _11: &str;                   // in scope 0 at ui/deriving/deriving-associated-types.rs:91:9: 91:20
    let mut _12: &str;                   // in scope 0 at ui/deriving/deriving-associated-types.rs:92:9: 92:28
    let mut _13: &str;                   // in scope 0 at ui/deriving/deriving-associated-types.rs:92:9: 92:28
    let mut _14: &str;                   // in scope 0 at ui/deriving/deriving-associated-types.rs:93:9: 93:39
    let mut _15: &str;                   // in scope 0 at ui/deriving/deriving-associated-types.rs:93:9: 93:39
    let mut _16: &str;                   // in scope 0 at ui/deriving/deriving-associated-types.rs:94:9: 94:47
    let mut _17: &str;                   // in scope 0 at ui/deriving/deriving-associated-types.rs:94:9: 94:47
    let mut _18: &str;                   // in scope 0 at ui/deriving/deriving-associated-types.rs:95:9: 95:13
    let mut _19: &str;                   // in scope 0 at ui/deriving/deriving-associated-types.rs:95:9: 95:13
    let mut _20: &str;                   // in scope 0 at ui/deriving/deriving-associated-types.rs:96:9: 96:20
    let mut _21: &str;                   // in scope 0 at ui/deriving/deriving-associated-types.rs:96:9: 96:20
    let mut _22: &str;                   // in scope 0 at ui/deriving/deriving-associated-types.rs:97:9: 97:28
    let mut _23: &str;                   // in scope 0 at ui/deriving/deriving-associated-types.rs:97:9: 97:28
    let mut _24: &str;                   // in scope 0 at ui/deriving/deriving-associated-types.rs:98:9: 98:36
    let mut _25: &str;                   // in scope 0 at ui/deriving/deriving-associated-types.rs:98:9: 98:36
    let mut _26: &str;                   // in scope 0 at ui/deriving/deriving-associated-types.rs:99:9: 99:44
    let mut _27: &str;                   // in scope 0 at ui/deriving/deriving-associated-types.rs:99:9: 99:44
    let mut _28: &str;                   // in scope 0 at ui/deriving/deriving-associated-types.rs:100:9: 100:40
    let mut _29: &str;                   // in scope 0 at ui/deriving/deriving-associated-types.rs:100:9: 100:40

    bb0: {
        _3 = const "m2";                 // scope 0 at ui/deriving/deriving-associated-types.rs:87:9: 87:33
                                         // mir::Constant
                                         // + span: ui/deriving/deriving-associated-types.rs:87:9: 87:33
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _2 = &(*_3);                     // scope 0 at ui/deriving/deriving-associated-types.rs:87:9: 87:33
        _5 = const "a1";                 // scope 0 at ui/deriving/deriving-associated-types.rs:88:9: 88:14
                                         // mir::Constant
                                         // + span: ui/deriving/deriving-associated-types.rs:88:9: 88:14
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _4 = &(*_5);                     // scope 0 at ui/deriving/deriving-associated-types.rs:88:9: 88:14
        _7 = const "a2";                 // scope 0 at ui/deriving/deriving-associated-types.rs:89:9: 89:29
                                         // mir::Constant
                                         // + span: ui/deriving/deriving-associated-types.rs:89:9: 89:29
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _6 = &(*_7);                     // scope 0 at ui/deriving/deriving-associated-types.rs:89:9: 89:29
        _9 = const "b";                  // scope 0 at ui/deriving/deriving-associated-types.rs:90:9: 90:13
                                         // mir::Constant
                                         // + span: ui/deriving/deriving-associated-types.rs:90:9: 90:13
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _8 = &(*_9);                     // scope 0 at ui/deriving/deriving-associated-types.rs:90:9: 90:13
        _11 = const "b1";                // scope 0 at ui/deriving/deriving-associated-types.rs:91:9: 91:20
                                         // mir::Constant
                                         // + span: ui/deriving/deriving-associated-types.rs:91:9: 91:20
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _10 = &(*_11);                   // scope 0 at ui/deriving/deriving-associated-types.rs:91:9: 91:20
        _13 = const "b2";                // scope 0 at ui/deriving/deriving-associated-types.rs:92:9: 92:28
                                         // mir::Constant
                                         // + span: ui/deriving/deriving-associated-types.rs:92:9: 92:28
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _12 = &(*_13);                   // scope 0 at ui/deriving/deriving-associated-types.rs:92:9: 92:28
        _15 = const "b3";                // scope 0 at ui/deriving/deriving-associated-types.rs:93:9: 93:39
                                         // mir::Constant
                                         // + span: ui/deriving/deriving-associated-types.rs:93:9: 93:39
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _14 = &(*_15);                   // scope 0 at ui/deriving/deriving-associated-types.rs:93:9: 93:39
        _17 = const "b4";                // scope 0 at ui/deriving/deriving-associated-types.rs:94:9: 94:47
                                         // mir::Constant
                                         // + span: ui/deriving/deriving-associated-types.rs:94:9: 94:47
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _16 = &(*_17);                   // scope 0 at ui/deriving/deriving-associated-types.rs:94:9: 94:47
        _19 = const "c";                 // scope 0 at ui/deriving/deriving-associated-types.rs:95:9: 95:13
                                         // mir::Constant
                                         // + span: ui/deriving/deriving-associated-types.rs:95:9: 95:13
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _18 = &(*_19);                   // scope 0 at ui/deriving/deriving-associated-types.rs:95:9: 95:13
        _21 = const "c1";                // scope 0 at ui/deriving/deriving-associated-types.rs:96:9: 96:20
                                         // mir::Constant
                                         // + span: ui/deriving/deriving-associated-types.rs:96:9: 96:20
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _20 = &(*_21);                   // scope 0 at ui/deriving/deriving-associated-types.rs:96:9: 96:20
        _23 = const "c2";                // scope 0 at ui/deriving/deriving-associated-types.rs:97:9: 97:28
                                         // mir::Constant
                                         // + span: ui/deriving/deriving-associated-types.rs:97:9: 97:28
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _22 = &(*_23);                   // scope 0 at ui/deriving/deriving-associated-types.rs:97:9: 97:28
        _25 = const "c3";                // scope 0 at ui/deriving/deriving-associated-types.rs:98:9: 98:36
                                         // mir::Constant
                                         // + span: ui/deriving/deriving-associated-types.rs:98:9: 98:36
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _24 = &(*_25);                   // scope 0 at ui/deriving/deriving-associated-types.rs:98:9: 98:36
        _27 = const "c4";                // scope 0 at ui/deriving/deriving-associated-types.rs:99:9: 99:44
                                         // mir::Constant
                                         // + span: ui/deriving/deriving-associated-types.rs:99:9: 99:44
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _26 = &(*_27);                   // scope 0 at ui/deriving/deriving-associated-types.rs:99:9: 99:44
        _29 = const "d";                 // scope 0 at ui/deriving/deriving-associated-types.rs:100:9: 100:40
                                         // mir::Constant
                                         // + span: ui/deriving/deriving-associated-types.rs:100:9: 100:40
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _28 = &(*_29);                   // scope 0 at ui/deriving/deriving-associated-types.rs:100:9: 100:40
        _1 = [const "m1", move _2, move _4, move _6, move _8, move _10, move _12, move _14, move _16, move _18, move _20, move _22, move _24, move _26, move _28]; // scope 0 at ui/deriving/deriving-associated-types.rs:65:21: 65:26
                                         // mir::Constant
                                         // + span: ui/deriving/deriving-associated-types.rs:86:9: 86:25
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at ui/deriving/deriving-associated-types.rs:65:21: 65:26
        return;                          // scope 0 at ui/deriving/deriving-associated-types.rs:65:21: 65:26
    }
}

fn main() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/deriving/deriving-associated-types.rs:104:11: 104:11
    let _1: TupleStruct<i32, i32, i32>;  // in scope 0 at ui/deriving/deriving-associated-types.rs:105:9: 105:10
    let mut _2: std::option::Option<i32>; // in scope 0 at ui/deriving/deriving-associated-types.rs:111:9: 111:13
    let mut _3: PrivateStruct<i32>;      // in scope 0 at ui/deriving/deriving-associated-types.rs:113:9: 113:25
    let mut _4: std::option::Option<i32>; // in scope 0 at ui/deriving/deriving-associated-types.rs:116:9: 116:13
    let mut _5: std::option::Option<i32>; // in scope 0 at ui/deriving/deriving-associated-types.rs:118:9: 118:13
    let mut _6: std::option::Option<i32>; // in scope 0 at ui/deriving/deriving-associated-types.rs:121:9: 121:13
    let mut _7: std::option::Option<i32>; // in scope 0 at ui/deriving/deriving-associated-types.rs:123:9: 123:13
    let mut _8: (&TupleStruct<i32, i32, i32>, &TupleStruct<i32, i32, i32>); // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _9: &TupleStruct<i32, i32, i32>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let mut _10: &TupleStruct<i32, i32, i32>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _13: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    let mut _14: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
    let mut _15: &TupleStruct<i32, i32, i32>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
    let mut _16: &TupleStruct<i32, i32, i32>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
    let _18: !;                          // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
    let mut _19: core::panicking::AssertKind; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
    let mut _20: &TupleStruct<i32, i32, i32>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let _21: &TupleStruct<i32, i32, i32>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let mut _22: &TupleStruct<i32, i32, i32>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let _23: &TupleStruct<i32, i32, i32>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let mut _24: std::option::Option<std::fmt::Arguments<'_>>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
    let mut _26: std::option::Option<i32>; // in scope 0 at ui/deriving/deriving-associated-types.rs:134:13: 134:17
    let mut _27: PrivateStruct<i32>;     // in scope 0 at ui/deriving/deriving-associated-types.rs:136:13: 136:29
    let mut _28: std::option::Option<i32>; // in scope 0 at ui/deriving/deriving-associated-types.rs:139:13: 139:17
    let mut _29: std::option::Option<i32>; // in scope 0 at ui/deriving/deriving-associated-types.rs:141:13: 141:17
    let mut _30: std::option::Option<i32>; // in scope 0 at ui/deriving/deriving-associated-types.rs:144:13: 144:17
    let mut _31: std::option::Option<i32>; // in scope 0 at ui/deriving/deriving-associated-types.rs:146:13: 146:17
    let mut _32: (&Struct<i32, i32, i32>, &Struct<i32, i32, i32>); // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _33: &Struct<i32, i32, i32>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let mut _34: &Struct<i32, i32, i32>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _37: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    let mut _38: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
    let mut _39: &Struct<i32, i32, i32>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
    let mut _40: &Struct<i32, i32, i32>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
    let _42: !;                          // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
    let mut _43: core::panicking::AssertKind; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
    let mut _44: &Struct<i32, i32, i32>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let _45: &Struct<i32, i32, i32>;     // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let mut _46: &Struct<i32, i32, i32>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let _47: &Struct<i32, i32, i32>;     // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let mut _48: std::option::Option<std::fmt::Arguments<'_>>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
    let mut _50: (&Enum<i32, i32, i32>, &Enum<i32, i32, i32>); // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _51: &Enum<i32, i32, i32>;   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let mut _52: &Enum<i32, i32, i32>;   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _55: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    let mut _56: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
    let mut _57: &Enum<i32, i32, i32>;   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
    let mut _58: &Enum<i32, i32, i32>;   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
    let _60: !;                          // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
    let mut _61: core::panicking::AssertKind; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
    let mut _62: &Enum<i32, i32, i32>;   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let _63: &Enum<i32, i32, i32>;       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let mut _64: &Enum<i32, i32, i32>;   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let _65: &Enum<i32, i32, i32>;       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let mut _66: std::option::Option<std::fmt::Arguments<'_>>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
    let mut _68: std::option::Option<i32>; // in scope 0 at ui/deriving/deriving-associated-types.rs:160:9: 160:13
    let mut _69: PrivateStruct<i32>;     // in scope 0 at ui/deriving/deriving-associated-types.rs:162:9: 162:25
    let mut _70: std::option::Option<i32>; // in scope 0 at ui/deriving/deriving-associated-types.rs:165:9: 165:13
    let mut _71: std::option::Option<i32>; // in scope 0 at ui/deriving/deriving-associated-types.rs:167:9: 167:13
    let mut _72: std::option::Option<i32>; // in scope 0 at ui/deriving/deriving-associated-types.rs:170:9: 170:13
    let mut _73: std::option::Option<i32>; // in scope 0 at ui/deriving/deriving-associated-types.rs:172:9: 172:13
    let mut _74: (&Enum<i32, i32, i32>, &Enum<i32, i32, i32>); // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _75: &Enum<i32, i32, i32>;   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let mut _76: &Enum<i32, i32, i32>;   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _79: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    let mut _80: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
    let mut _81: &Enum<i32, i32, i32>;   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
    let mut _82: &Enum<i32, i32, i32>;   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
    let _84: !;                          // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
    let mut _85: core::panicking::AssertKind; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
    let mut _86: &Enum<i32, i32, i32>;   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let _87: &Enum<i32, i32, i32>;       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let mut _88: &Enum<i32, i32, i32>;   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let _89: &Enum<i32, i32, i32>;       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let mut _90: std::option::Option<std::fmt::Arguments<'_>>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
    let mut _92: std::option::Option<i32>; // in scope 0 at ui/deriving/deriving-associated-types.rs:183:13: 183:17
    let mut _93: PrivateStruct<i32>;     // in scope 0 at ui/deriving/deriving-associated-types.rs:185:13: 185:29
    let mut _94: std::option::Option<i32>; // in scope 0 at ui/deriving/deriving-associated-types.rs:188:13: 188:17
    let mut _95: std::option::Option<i32>; // in scope 0 at ui/deriving/deriving-associated-types.rs:190:13: 190:17
    let mut _96: std::option::Option<i32>; // in scope 0 at ui/deriving/deriving-associated-types.rs:193:13: 193:17
    let mut _97: std::option::Option<i32>; // in scope 0 at ui/deriving/deriving-associated-types.rs:195:13: 195:17
    let mut _98: (&Enum<i32, i32, i32>, &Enum<i32, i32, i32>); // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _99: &Enum<i32, i32, i32>;   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let mut _100: &Enum<i32, i32, i32>;  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _103: bool;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    let mut _104: bool;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
    let mut _105: &Enum<i32, i32, i32>;  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
    let mut _106: &Enum<i32, i32, i32>;  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
    let _108: !;                         // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
    let mut _109: core::panicking::AssertKind; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
    let mut _110: &Enum<i32, i32, i32>;  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let _111: &Enum<i32, i32, i32>;      // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let mut _112: &Enum<i32, i32, i32>;  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let _113: &Enum<i32, i32, i32>;      // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let mut _114: std::option::Option<std::fmt::Arguments<'_>>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
    scope 1 {
        debug e => _1;                   // in scope 1 at ui/deriving/deriving-associated-types.rs:105:9: 105:10
        let _11: &TupleStruct<i32, i32, i32>; // in scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        let _12: &TupleStruct<i32, i32, i32>; // in scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        let _25: Struct<i32, i32, i32>;  // in scope 1 at ui/deriving/deriving-associated-types.rs:128:9: 128:10
        scope 2 {
            debug left_val => _11;       // in scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
            debug right_val => _12;      // in scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
            let _17: core::panicking::AssertKind; // in scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
            scope 3 {
                debug kind => _17;       // in scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
            }
        }
        scope 4 {
            debug e => _25;              // in scope 4 at ui/deriving/deriving-associated-types.rs:128:9: 128:10
            let _35: &Struct<i32, i32, i32>; // in scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
            let _36: &Struct<i32, i32, i32>; // in scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
            let _49: Enum<i32, i32, i32>; // in scope 4 at ui/deriving/deriving-associated-types.rs:151:9: 151:10
            scope 5 {
                debug left_val => _35;   // in scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
                debug right_val => _36;  // in scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
                let _41: core::panicking::AssertKind; // in scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                scope 6 {
                    debug kind => _41;   // in scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                }
            }
            scope 7 {
                debug e => _49;          // in scope 7 at ui/deriving/deriving-associated-types.rs:151:9: 151:10
                let _53: &Enum<i32, i32, i32>; // in scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
                let _54: &Enum<i32, i32, i32>; // in scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
                let _67: Enum<i32, i32, i32>; // in scope 7 at ui/deriving/deriving-associated-types.rs:154:9: 154:10
                scope 8 {
                    debug left_val => _53; // in scope 8 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
                    debug right_val => _54; // in scope 8 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
                    let _59: core::panicking::AssertKind; // in scope 8 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                    scope 9 {
                        debug kind => _59; // in scope 9 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                    }
                }
                scope 10 {
                    debug e => _67;      // in scope 10 at ui/deriving/deriving-associated-types.rs:154:9: 154:10
                    let _77: &Enum<i32, i32, i32>; // in scope 10 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
                    let _78: &Enum<i32, i32, i32>; // in scope 10 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
                    let _91: Enum<i32, i32, i32>; // in scope 10 at ui/deriving/deriving-associated-types.rs:177:9: 177:10
                    scope 11 {
                        debug left_val => _77; // in scope 11 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
                        debug right_val => _78; // in scope 11 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
                        let _83: core::panicking::AssertKind; // in scope 11 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                        scope 12 {
                            debug kind => _83; // in scope 12 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                        }
                    }
                    scope 13 {
                        debug e => _91;  // in scope 13 at ui/deriving/deriving-associated-types.rs:177:9: 177:10
                        let _101: &Enum<i32, i32, i32>; // in scope 13 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
                        let _102: &Enum<i32, i32, i32>; // in scope 13 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
                        scope 14 {
                            debug left_val => _101; // in scope 14 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
                            debug right_val => _102; // in scope 14 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
                            let _107: core::panicking::AssertKind; // in scope 14 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                            scope 15 {
                                debug kind => _107; // in scope 15 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                            }
                        }
                    }
                }
            }
        }
    }

    bb0: {
        _2 = Option::<i32>::None;        // scope 0 at ui/deriving/deriving-associated-types.rs:111:9: 111:13
        _3 = const PrivateStruct::<i32>(0_i32); // scope 0 at ui/deriving/deriving-associated-types.rs:113:9: 113:25
                                         // mir::Constant
                                         // + span: ui/deriving/deriving-associated-types.rs:113:9: 113:25
                                         // + literal: Const { ty: PrivateStruct<i32>, val: Value(Scalar(0x00000000)) }
        _4 = Option::<i32>::None;        // scope 0 at ui/deriving/deriving-associated-types.rs:116:9: 116:13
        _5 = Option::<i32>::None;        // scope 0 at ui/deriving/deriving-associated-types.rs:118:9: 118:13
        _6 = Option::<i32>::None;        // scope 0 at ui/deriving/deriving-associated-types.rs:121:9: 121:13
        _7 = Option::<i32>::None;        // scope 0 at ui/deriving/deriving-associated-types.rs:123:9: 123:13
        _1 = TupleStruct::<i32, i32, i32>(const 0_i32, move _2, const 0_i32, move _3, const 0_i32, const 0_i32, move _4, const 0_i32, move _5, const 0_i32, const 0_i32, move _6, const 0_i32, move _7, const 0_i32); // scope 0 at ui/deriving/deriving-associated-types.rs:109:9: 125:6
        _9 = &_1;                        // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _10 = &_1;                       // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _8 = (move _9, move _10);        // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _11 = (_8.0: &TupleStruct<i32, i32, i32>); // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _12 = (_8.1: &TupleStruct<i32, i32, i32>); // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _15 = _11;                       // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
        _16 = _12;                       // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
        _14 = <TupleStruct<i32, i32, i32> as PartialEq>::eq(move _15, move _16) -> bb1; // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a TupleStruct<i32, i32, i32>, &'b TupleStruct<i32, i32, i32>) -> bool {<TupleStruct<i32, i32, i32> as PartialEq>::eq}, val: Value(<ZST>) }
    }

    bb1: {
        _13 = Not(move _14);             // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
        switchInt(move _13) -> [0: bb3, otherwise: bb2]; // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    }

    bb2: {
        _17 = const core::panicking::AssertKind::Eq; // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _19 = const core::panicking::AssertKind::Eq; // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _21 = _11;                       // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _20 = _21;                       // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _23 = _12;                       // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _22 = _23;                       // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _24 = Option::<Arguments<'_>>::None; // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
        _18 = core::panicking::assert_failed::<TupleStruct<i32, i32, i32>, TupleStruct<i32, i32, i32>>(move _19, move _20, move _22, move _24); // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:53
                                         // + literal: Const { ty: for<'a, 'b, 'c> fn(core::panicking::AssertKind, &'a TupleStruct<i32, i32, i32>, &'b TupleStruct<i32, i32, i32>, Option<Arguments<'c>>) -> ! {core::panicking::assert_failed::<TupleStruct<i32, i32, i32>, TupleStruct<i32, i32, i32>>}, val: Value(<ZST>) }
    }

    bb3: {
        _26 = Option::<i32>::None;       // scope 1 at ui/deriving/deriving-associated-types.rs:134:13: 134:17
        _27 = const PrivateStruct::<i32>(0_i32); // scope 1 at ui/deriving/deriving-associated-types.rs:136:13: 136:29
                                         // mir::Constant
                                         // + span: ui/deriving/deriving-associated-types.rs:136:13: 136:29
                                         // + literal: Const { ty: PrivateStruct<i32>, val: Value(Scalar(0x00000000)) }
        _28 = Option::<i32>::None;       // scope 1 at ui/deriving/deriving-associated-types.rs:139:13: 139:17
        _29 = Option::<i32>::None;       // scope 1 at ui/deriving/deriving-associated-types.rs:141:13: 141:17
        _30 = Option::<i32>::None;       // scope 1 at ui/deriving/deriving-associated-types.rs:144:13: 144:17
        _31 = Option::<i32>::None;       // scope 1 at ui/deriving/deriving-associated-types.rs:146:13: 146:17
        _25 = Struct::<i32, i32, i32> { m1: const 0_i32, m2: move _26, a1: const 0_i32, a2: move _27, b: const 0_i32, b1: const 0_i32, b2: move _28, b3: const 0_i32, b4: move _29, c: const 0_i32, c1: const 0_i32, c2: move _30, c3: const 0_i32, c4: move _31, d: const 0_i32 }; // scope 1 at ui/deriving/deriving-associated-types.rs:132:9: 148:6
        _33 = &_25;                      // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _34 = &_25;                      // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _32 = (move _33, move _34);      // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _35 = (_32.0: &Struct<i32, i32, i32>); // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _36 = (_32.1: &Struct<i32, i32, i32>); // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _39 = _35;                       // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
        _40 = _36;                       // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
        _38 = <Struct<i32, i32, i32> as PartialEq>::eq(move _39, move _40) -> bb4; // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a Struct<i32, i32, i32>, &'b Struct<i32, i32, i32>) -> bool {<Struct<i32, i32, i32> as PartialEq>::eq}, val: Value(<ZST>) }
    }

    bb4: {
        _37 = Not(move _38);             // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
        switchInt(move _37) -> [0: bb6, otherwise: bb5]; // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    }

    bb5: {
        _41 = const core::panicking::AssertKind::Eq; // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _43 = const core::panicking::AssertKind::Eq; // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _45 = _35;                       // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _44 = _45;                       // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _47 = _36;                       // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _46 = _47;                       // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _48 = Option::<Arguments<'_>>::None; // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
        _42 = core::panicking::assert_failed::<Struct<i32, i32, i32>, Struct<i32, i32, i32>>(move _43, move _44, move _46, move _48); // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:53
                                         // + literal: Const { ty: for<'a, 'b, 'c> fn(core::panicking::AssertKind, &'a Struct<i32, i32, i32>, &'b Struct<i32, i32, i32>, Option<Arguments<'c>>) -> ! {core::panicking::assert_failed::<Struct<i32, i32, i32>, Struct<i32, i32, i32>>}, val: Value(<ZST>) }
    }

    bb6: {
        _49 = Enum::<i32, i32, i32>::Unit; // scope 4 at ui/deriving/deriving-associated-types.rs:151:13: 151:40
        _51 = &_49;                      // scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _52 = &_49;                      // scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _50 = (move _51, move _52);      // scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _53 = (_50.0: &Enum<i32, i32, i32>); // scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _54 = (_50.1: &Enum<i32, i32, i32>); // scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _57 = _53;                       // scope 8 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
        _58 = _54;                       // scope 8 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
        _56 = <Enum<i32, i32, i32> as PartialEq>::eq(move _57, move _58) -> bb7; // scope 8 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a Enum<i32, i32, i32>, &'b Enum<i32, i32, i32>) -> bool {<Enum<i32, i32, i32> as PartialEq>::eq}, val: Value(<ZST>) }
    }

    bb7: {
        _55 = Not(move _56);             // scope 8 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
        switchInt(move _55) -> [0: bb9, otherwise: bb8]; // scope 8 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    }

    bb8: {
        _59 = const core::panicking::AssertKind::Eq; // scope 8 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _61 = const core::panicking::AssertKind::Eq; // scope 9 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _63 = _53;                       // scope 9 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _62 = _63;                       // scope 9 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _65 = _54;                       // scope 9 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _64 = _65;                       // scope 9 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _66 = Option::<Arguments<'_>>::None; // scope 9 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
        _60 = core::panicking::assert_failed::<Enum<i32, i32, i32>, Enum<i32, i32, i32>>(move _61, move _62, move _64, move _66); // scope 9 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:53
                                         // + literal: Const { ty: for<'a, 'b, 'c> fn(core::panicking::AssertKind, &'a Enum<i32, i32, i32>, &'b Enum<i32, i32, i32>, Option<Arguments<'c>>) -> ! {core::panicking::assert_failed::<Enum<i32, i32, i32>, Enum<i32, i32, i32>>}, val: Value(<ZST>) }
    }

    bb9: {
        _68 = Option::<i32>::None;       // scope 7 at ui/deriving/deriving-associated-types.rs:160:9: 160:13
        _69 = const PrivateStruct::<i32>(0_i32); // scope 7 at ui/deriving/deriving-associated-types.rs:162:9: 162:25
                                         // mir::Constant
                                         // + span: ui/deriving/deriving-associated-types.rs:162:9: 162:25
                                         // + literal: Const { ty: PrivateStruct<i32>, val: Value(Scalar(0x00000000)) }
        _70 = Option::<i32>::None;       // scope 7 at ui/deriving/deriving-associated-types.rs:165:9: 165:13
        _71 = Option::<i32>::None;       // scope 7 at ui/deriving/deriving-associated-types.rs:167:9: 167:13
        _72 = Option::<i32>::None;       // scope 7 at ui/deriving/deriving-associated-types.rs:170:9: 170:13
        _73 = Option::<i32>::None;       // scope 7 at ui/deriving/deriving-associated-types.rs:172:9: 172:13
        _67 = Enum::<i32, i32, i32>::Seq(const 0_i32, move _68, const 0_i32, move _69, const 0_i32, const 0_i32, move _70, const 0_i32, move _71, const 0_i32, const 0_i32, move _72, const 0_i32, move _73, const 0_i32); // scope 7 at ui/deriving/deriving-associated-types.rs:158:9: 174:6
        _75 = &_67;                      // scope 10 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _76 = &_67;                      // scope 10 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _74 = (move _75, move _76);      // scope 10 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _77 = (_74.0: &Enum<i32, i32, i32>); // scope 10 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _78 = (_74.1: &Enum<i32, i32, i32>); // scope 10 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _81 = _77;                       // scope 11 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
        _82 = _78;                       // scope 11 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
        _80 = <Enum<i32, i32, i32> as PartialEq>::eq(move _81, move _82) -> bb10; // scope 11 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a Enum<i32, i32, i32>, &'b Enum<i32, i32, i32>) -> bool {<Enum<i32, i32, i32> as PartialEq>::eq}, val: Value(<ZST>) }
    }

    bb10: {
        _79 = Not(move _80);             // scope 11 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
        switchInt(move _79) -> [0: bb12, otherwise: bb11]; // scope 11 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    }

    bb11: {
        _83 = const core::panicking::AssertKind::Eq; // scope 11 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _85 = const core::panicking::AssertKind::Eq; // scope 12 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _87 = _77;                       // scope 12 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _86 = _87;                       // scope 12 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _89 = _78;                       // scope 12 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _88 = _89;                       // scope 12 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _90 = Option::<Arguments<'_>>::None; // scope 12 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
        _84 = core::panicking::assert_failed::<Enum<i32, i32, i32>, Enum<i32, i32, i32>>(move _85, move _86, move _88, move _90); // scope 12 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:53
                                         // + literal: Const { ty: for<'a, 'b, 'c> fn(core::panicking::AssertKind, &'a Enum<i32, i32, i32>, &'b Enum<i32, i32, i32>, Option<Arguments<'c>>) -> ! {core::panicking::assert_failed::<Enum<i32, i32, i32>, Enum<i32, i32, i32>>}, val: Value(<ZST>) }
    }

    bb12: {
        _92 = Option::<i32>::None;       // scope 10 at ui/deriving/deriving-associated-types.rs:183:13: 183:17
        _93 = const PrivateStruct::<i32>(0_i32); // scope 10 at ui/deriving/deriving-associated-types.rs:185:13: 185:29
                                         // mir::Constant
                                         // + span: ui/deriving/deriving-associated-types.rs:185:13: 185:29
                                         // + literal: Const { ty: PrivateStruct<i32>, val: Value(Scalar(0x00000000)) }
        _94 = Option::<i32>::None;       // scope 10 at ui/deriving/deriving-associated-types.rs:188:13: 188:17
        _95 = Option::<i32>::None;       // scope 10 at ui/deriving/deriving-associated-types.rs:190:13: 190:17
        _96 = Option::<i32>::None;       // scope 10 at ui/deriving/deriving-associated-types.rs:193:13: 193:17
        _97 = Option::<i32>::None;       // scope 10 at ui/deriving/deriving-associated-types.rs:195:13: 195:17
        _91 = Enum::<i32, i32, i32>::Map { m1: const 0_i32, m2: move _92, a1: const 0_i32, a2: move _93, b: const 0_i32, b1: const 0_i32, b2: move _94, b3: const 0_i32, b4: move _95, c: const 0_i32, c1: const 0_i32, c2: move _96, c3: const 0_i32, c4: move _97, d: const 0_i32 }; // scope 10 at ui/deriving/deriving-associated-types.rs:181:9: 197:6
        _99 = &_91;                      // scope 13 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _100 = &_91;                     // scope 13 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _98 = (move _99, move _100);     // scope 13 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _101 = (_98.0: &Enum<i32, i32, i32>); // scope 13 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _102 = (_98.1: &Enum<i32, i32, i32>); // scope 13 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _105 = _101;                     // scope 14 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
        _106 = _102;                     // scope 14 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
        _104 = <Enum<i32, i32, i32> as PartialEq>::eq(move _105, move _106) -> bb13; // scope 14 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a Enum<i32, i32, i32>, &'b Enum<i32, i32, i32>) -> bool {<Enum<i32, i32, i32> as PartialEq>::eq}, val: Value(<ZST>) }
    }

    bb13: {
        _103 = Not(move _104);           // scope 14 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
        switchInt(move _103) -> [0: bb15, otherwise: bb14]; // scope 14 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    }

    bb14: {
        _107 = const core::panicking::AssertKind::Eq; // scope 14 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _109 = const core::panicking::AssertKind::Eq; // scope 15 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _111 = _101;                     // scope 15 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _110 = _111;                     // scope 15 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _113 = _102;                     // scope 15 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _112 = _113;                     // scope 15 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _114 = Option::<Arguments<'_>>::None; // scope 15 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
        _108 = core::panicking::assert_failed::<Enum<i32, i32, i32>, Enum<i32, i32, i32>>(move _109, move _110, move _112, move _114); // scope 15 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:53
                                         // + literal: Const { ty: for<'a, 'b, 'c> fn(core::panicking::AssertKind, &'a Enum<i32, i32, i32>, &'b Enum<i32, i32, i32>, Option<Arguments<'c>>) -> ! {core::panicking::assert_failed::<Enum<i32, i32, i32>, Enum<i32, i32, i32>>}, val: Value(<ZST>) }
    }

    bb15: {
        return;                          // scope 0 at ui/deriving/deriving-associated-types.rs:199:2: 199:2
    }
}

fn PrivateStruct(_1: T) -> PrivateStruct<T> {
    let mut _0: PrivateStruct<T>;        // return place in scope 0 at ui/deriving/deriving-associated-types.rs:25:1: 25:24

    bb0: {
        _0 = PrivateStruct::<T>(move _1); // scope 0 at ui/deriving/deriving-associated-types.rs:25:1: 25:24
        return;                          // scope 0 at ui/deriving/deriving-associated-types.rs:25:1: 25:24
    }
}

// MIR FOR CTFE
fn PrivateStruct(_1: T) -> PrivateStruct<T> {
    let mut _0: PrivateStruct<T>;        // return place in scope 0 at ui/deriving/deriving-associated-types.rs:25:1: 25:24

    bb0: {
        _0 = PrivateStruct::<T>(move _1); // scope 0 at ui/deriving/deriving-associated-types.rs:25:1: 25:24
        return;                          // scope 0 at ui/deriving/deriving-associated-types.rs:25:1: 25:24
    }
}

fn TupleStruct(_1: i32, _2: Option<i32>, _3: A, _4: PrivateStruct<A>, _5: B, _6: <B as DeclaredTrait>::Type, _7: Option<<B as DeclaredTrait>::Type>, _8: <B as DeclaredTrait>::Type, _9: Option<<B as DeclaredTrait>::Type>, _10: C, _11: <C as WhereTrait>::Type, _12: Option<<C as WhereTrait>::Type>, _13: <C as WhereTrait>::Type, _14: Option<<C as WhereTrait>::Type>, _15: i32) -> TupleStruct<A, B, C> {
    let mut _0: TupleStruct<A, B, C>;    // return place in scope 0 at ui/deriving/deriving-associated-types.rs:28:1: 28:43

    bb0: {
        _0 = TupleStruct::<A, B, C>(move _1, move _2, move _3, move _4, move _5, move _6, move _7, move _8, move _9, move _10, move _11, move _12, move _13, move _14, move _15); // scope 0 at ui/deriving/deriving-associated-types.rs:28:1: 28:43
        return;                          // scope 0 at ui/deriving/deriving-associated-types.rs:28:1: 28:43
    }
}

// MIR FOR CTFE
fn TupleStruct(_1: i32, _2: Option<i32>, _3: A, _4: PrivateStruct<A>, _5: B, _6: <B as DeclaredTrait>::Type, _7: Option<<B as DeclaredTrait>::Type>, _8: <B as DeclaredTrait>::Type, _9: Option<<B as DeclaredTrait>::Type>, _10: C, _11: <C as WhereTrait>::Type, _12: Option<<C as WhereTrait>::Type>, _13: <C as WhereTrait>::Type, _14: Option<<C as WhereTrait>::Type>, _15: i32) -> TupleStruct<A, B, C> {
    let mut _0: TupleStruct<A, B, C>;    // return place in scope 0 at ui/deriving/deriving-associated-types.rs:28:1: 28:43

    bb0: {
        _0 = TupleStruct::<A, B, C>(move _1, move _2, move _3, move _4, move _5, move _6, move _7, move _8, move _9, move _10, move _11, move _12, move _13, move _14, move _15); // scope 0 at ui/deriving/deriving-associated-types.rs:28:1: 28:43
        return;                          // scope 0 at ui/deriving/deriving-associated-types.rs:28:1: 28:43
    }
}

fn Enum::Seq(_1: i32, _2: Option<i32>, _3: A, _4: PrivateStruct<A>, _5: B, _6: <B as DeclaredTrait>::Type, _7: Option<<B as DeclaredTrait>::Type>, _8: <B as DeclaredTrait>::Type, _9: Option<<B as DeclaredTrait>::Type>, _10: C, _11: <C as WhereTrait>::Type, _12: Option<<C as WhereTrait>::Type>, _13: <C as WhereTrait>::Type, _14: Option<<C as WhereTrait>::Type>, _15: i32) -> Enum<A, B, C> {
    let mut _0: Enum<A, B, C>;           // return place in scope 0 at ui/deriving/deriving-associated-types.rs:68:5: 68:8

    bb0: {
        _0 = Enum::<A, B, C>::Seq(move _1, move _2, move _3, move _4, move _5, move _6, move _7, move _8, move _9, move _10, move _11, move _12, move _13, move _14, move _15); // scope 0 at ui/deriving/deriving-associated-types.rs:68:5: 68:8
        return;                          // scope 0 at ui/deriving/deriving-associated-types.rs:68:5: 68:8
    }
}

// MIR FOR CTFE
fn Enum::Seq(_1: i32, _2: Option<i32>, _3: A, _4: PrivateStruct<A>, _5: B, _6: <B as DeclaredTrait>::Type, _7: Option<<B as DeclaredTrait>::Type>, _8: <B as DeclaredTrait>::Type, _9: Option<<B as DeclaredTrait>::Type>, _10: C, _11: <C as WhereTrait>::Type, _12: Option<<C as WhereTrait>::Type>, _13: <C as WhereTrait>::Type, _14: Option<<C as WhereTrait>::Type>, _15: i32) -> Enum<A, B, C> {
    let mut _0: Enum<A, B, C>;           // return place in scope 0 at ui/deriving/deriving-associated-types.rs:68:5: 68:8

    bb0: {
        _0 = Enum::<A, B, C>::Seq(move _1, move _2, move _3, move _4, move _5, move _6, move _7, move _8, move _9, move _10, move _11, move _12, move _13, move _14, move _15); // scope 0 at ui/deriving/deriving-associated-types.rs:68:5: 68:8
        return;                          // scope 0 at ui/deriving/deriving-associated-types.rs:68:5: 68:8
    }
}
