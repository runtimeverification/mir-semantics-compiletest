// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
fn main() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/deriving/issue-58319.rs:2:11: 2:11

    bb0: {
        return;                          // scope 0 at ui/deriving/issue-58319.rs:2:13: 2:13
    }
}

fn <impl at ui/deriving/issue-58319.rs:3:10: 3:15>::clone(_1: &Little) -> Little {
    debug self => _1;                    // in scope 0 at ui/deriving/issue-58319.rs:3:10: 3:15
    let mut _0: Little;                  // return place in scope 0 at ui/deriving/issue-58319.rs:3:10: 3:15

    bb0: {
        return;                          // scope 0 at ui/deriving/issue-58319.rs:3:15: 3:15
    }
}

fn <impl at ui/deriving/issue-58319.rs:5:10: 5:15>::clone(_1: &Big) -> Big {
    debug self => _1;                    // in scope 0 at ui/deriving/issue-58319.rs:5:10: 5:15
    let mut _0: Big;                     // return place in scope 0 at ui/deriving/issue-58319.rs:5:10: 5:15
    let mut _2: Little;                  // in scope 0 at ui/deriving/issue-58319.rs:8:5: 8:11
    let mut _3: &Little;                 // in scope 0 at ui/deriving/issue-58319.rs:8:5: 8:11
    let _4: &Little;                     // in scope 0 at ui/deriving/issue-58319.rs:8:5: 8:11
    let mut _5: Little;                  // in scope 0 at ui/deriving/issue-58319.rs:9:5: 9:11
    let mut _6: &Little;                 // in scope 0 at ui/deriving/issue-58319.rs:9:5: 9:11
    let _7: &Little;                     // in scope 0 at ui/deriving/issue-58319.rs:9:5: 9:11
    let mut _8: Little;                  // in scope 0 at ui/deriving/issue-58319.rs:10:5: 10:11
    let mut _9: &Little;                 // in scope 0 at ui/deriving/issue-58319.rs:10:5: 10:11
    let _10: &Little;                    // in scope 0 at ui/deriving/issue-58319.rs:10:5: 10:11
    let mut _11: Little;                 // in scope 0 at ui/deriving/issue-58319.rs:11:5: 11:11
    let mut _12: &Little;                // in scope 0 at ui/deriving/issue-58319.rs:11:5: 11:11
    let _13: &Little;                    // in scope 0 at ui/deriving/issue-58319.rs:11:5: 11:11
    let mut _14: Little;                 // in scope 0 at ui/deriving/issue-58319.rs:12:5: 12:11
    let mut _15: &Little;                // in scope 0 at ui/deriving/issue-58319.rs:12:5: 12:11
    let _16: &Little;                    // in scope 0 at ui/deriving/issue-58319.rs:12:5: 12:11
    let mut _17: Little;                 // in scope 0 at ui/deriving/issue-58319.rs:13:5: 13:11
    let mut _18: &Little;                // in scope 0 at ui/deriving/issue-58319.rs:13:5: 13:11
    let _19: &Little;                    // in scope 0 at ui/deriving/issue-58319.rs:13:5: 13:11
    let mut _20: Little;                 // in scope 0 at ui/deriving/issue-58319.rs:14:5: 14:11
    let mut _21: &Little;                // in scope 0 at ui/deriving/issue-58319.rs:14:5: 14:11
    let _22: &Little;                    // in scope 0 at ui/deriving/issue-58319.rs:14:5: 14:11
    let mut _23: Little;                 // in scope 0 at ui/deriving/issue-58319.rs:15:5: 15:11
    let mut _24: &Little;                // in scope 0 at ui/deriving/issue-58319.rs:15:5: 15:11
    let _25: &Little;                    // in scope 0 at ui/deriving/issue-58319.rs:15:5: 15:11
    let mut _26: Little;                 // in scope 0 at ui/deriving/issue-58319.rs:16:5: 16:11
    let mut _27: &Little;                // in scope 0 at ui/deriving/issue-58319.rs:16:5: 16:11
    let _28: &Little;                    // in scope 0 at ui/deriving/issue-58319.rs:16:5: 16:11
    let mut _29: Little;                 // in scope 0 at ui/deriving/issue-58319.rs:17:5: 17:11
    let mut _30: &Little;                // in scope 0 at ui/deriving/issue-58319.rs:17:5: 17:11
    let _31: &Little;                    // in scope 0 at ui/deriving/issue-58319.rs:17:5: 17:11
    let mut _32: Little;                 // in scope 0 at ui/deriving/issue-58319.rs:18:5: 18:11
    let mut _33: &Little;                // in scope 0 at ui/deriving/issue-58319.rs:18:5: 18:11
    let _34: &Little;                    // in scope 0 at ui/deriving/issue-58319.rs:18:5: 18:11
    let mut _35: Little;                 // in scope 0 at ui/deriving/issue-58319.rs:19:5: 19:11
    let mut _36: &Little;                // in scope 0 at ui/deriving/issue-58319.rs:19:5: 19:11
    let _37: &Little;                    // in scope 0 at ui/deriving/issue-58319.rs:19:5: 19:11
    let mut _38: Little;                 // in scope 0 at ui/deriving/issue-58319.rs:20:5: 20:11
    let mut _39: &Little;                // in scope 0 at ui/deriving/issue-58319.rs:20:5: 20:11
    let _40: &Little;                    // in scope 0 at ui/deriving/issue-58319.rs:20:5: 20:11
    let mut _41: Little;                 // in scope 0 at ui/deriving/issue-58319.rs:21:5: 21:11
    let mut _42: &Little;                // in scope 0 at ui/deriving/issue-58319.rs:21:5: 21:11
    let _43: &Little;                    // in scope 0 at ui/deriving/issue-58319.rs:21:5: 21:11
    let mut _44: Little;                 // in scope 0 at ui/deriving/issue-58319.rs:22:5: 22:11
    let mut _45: &Little;                // in scope 0 at ui/deriving/issue-58319.rs:22:5: 22:11
    let _46: &Little;                    // in scope 0 at ui/deriving/issue-58319.rs:22:5: 22:11
    let mut _47: Little;                 // in scope 0 at ui/deriving/issue-58319.rs:23:5: 23:11
    let mut _48: &Little;                // in scope 0 at ui/deriving/issue-58319.rs:23:5: 23:11
    let _49: &Little;                    // in scope 0 at ui/deriving/issue-58319.rs:23:5: 23:11
    let mut _50: Little;                 // in scope 0 at ui/deriving/issue-58319.rs:24:5: 24:11
    let mut _51: &Little;                // in scope 0 at ui/deriving/issue-58319.rs:24:5: 24:11
    let _52: &Little;                    // in scope 0 at ui/deriving/issue-58319.rs:24:5: 24:11
    let mut _53: Little;                 // in scope 0 at ui/deriving/issue-58319.rs:25:5: 25:11
    let mut _54: &Little;                // in scope 0 at ui/deriving/issue-58319.rs:25:5: 25:11
    let _55: &Little;                    // in scope 0 at ui/deriving/issue-58319.rs:25:5: 25:11
    let mut _56: Little;                 // in scope 0 at ui/deriving/issue-58319.rs:26:5: 26:11
    let mut _57: &Little;                // in scope 0 at ui/deriving/issue-58319.rs:26:5: 26:11
    let _58: &Little;                    // in scope 0 at ui/deriving/issue-58319.rs:26:5: 26:11
    let mut _59: Little;                 // in scope 0 at ui/deriving/issue-58319.rs:27:5: 27:11
    let mut _60: &Little;                // in scope 0 at ui/deriving/issue-58319.rs:27:5: 27:11
    let _61: &Little;                    // in scope 0 at ui/deriving/issue-58319.rs:27:5: 27:11
    let mut _62: Little;                 // in scope 0 at ui/deriving/issue-58319.rs:28:5: 28:11
    let mut _63: &Little;                // in scope 0 at ui/deriving/issue-58319.rs:28:5: 28:11
    let _64: &Little;                    // in scope 0 at ui/deriving/issue-58319.rs:28:5: 28:11
    let mut _65: Little;                 // in scope 0 at ui/deriving/issue-58319.rs:29:5: 29:11
    let mut _66: &Little;                // in scope 0 at ui/deriving/issue-58319.rs:29:5: 29:11
    let _67: &Little;                    // in scope 0 at ui/deriving/issue-58319.rs:29:5: 29:11
    let mut _68: Little;                 // in scope 0 at ui/deriving/issue-58319.rs:30:5: 30:11
    let mut _69: &Little;                // in scope 0 at ui/deriving/issue-58319.rs:30:5: 30:11
    let _70: &Little;                    // in scope 0 at ui/deriving/issue-58319.rs:30:5: 30:11
    let mut _71: Little;                 // in scope 0 at ui/deriving/issue-58319.rs:31:5: 31:11
    let mut _72: &Little;                // in scope 0 at ui/deriving/issue-58319.rs:31:5: 31:11
    let _73: &Little;                    // in scope 0 at ui/deriving/issue-58319.rs:31:5: 31:11
    let mut _74: Little;                 // in scope 0 at ui/deriving/issue-58319.rs:32:5: 32:11
    let mut _75: &Little;                // in scope 0 at ui/deriving/issue-58319.rs:32:5: 32:11
    let _76: &Little;                    // in scope 0 at ui/deriving/issue-58319.rs:32:5: 32:11
    let mut _77: Little;                 // in scope 0 at ui/deriving/issue-58319.rs:33:5: 33:11
    let mut _78: &Little;                // in scope 0 at ui/deriving/issue-58319.rs:33:5: 33:11
    let _79: &Little;                    // in scope 0 at ui/deriving/issue-58319.rs:33:5: 33:11
    let mut _80: Little;                 // in scope 0 at ui/deriving/issue-58319.rs:34:5: 34:11
    let mut _81: &Little;                // in scope 0 at ui/deriving/issue-58319.rs:34:5: 34:11
    let _82: &Little;                    // in scope 0 at ui/deriving/issue-58319.rs:34:5: 34:11
    let mut _83: Little;                 // in scope 0 at ui/deriving/issue-58319.rs:35:5: 35:11
    let mut _84: &Little;                // in scope 0 at ui/deriving/issue-58319.rs:35:5: 35:11
    let _85: &Little;                    // in scope 0 at ui/deriving/issue-58319.rs:35:5: 35:11
    let mut _86: Little;                 // in scope 0 at ui/deriving/issue-58319.rs:36:5: 36:11
    let mut _87: &Little;                // in scope 0 at ui/deriving/issue-58319.rs:36:5: 36:11
    let _88: &Little;                    // in scope 0 at ui/deriving/issue-58319.rs:36:5: 36:11
    let mut _89: Little;                 // in scope 0 at ui/deriving/issue-58319.rs:37:5: 37:11
    let mut _90: &Little;                // in scope 0 at ui/deriving/issue-58319.rs:37:5: 37:11
    let _91: &Little;                    // in scope 0 at ui/deriving/issue-58319.rs:37:5: 37:11
    let mut _92: Little;                 // in scope 0 at ui/deriving/issue-58319.rs:38:5: 38:11
    let mut _93: &Little;                // in scope 0 at ui/deriving/issue-58319.rs:38:5: 38:11
    let _94: &Little;                    // in scope 0 at ui/deriving/issue-58319.rs:38:5: 38:11
    let mut _95: Little;                 // in scope 0 at ui/deriving/issue-58319.rs:39:5: 39:11
    let mut _96: &Little;                // in scope 0 at ui/deriving/issue-58319.rs:39:5: 39:11
    let _97: &Little;                    // in scope 0 at ui/deriving/issue-58319.rs:39:5: 39:11
    let mut _98: Little;                 // in scope 0 at ui/deriving/issue-58319.rs:40:5: 40:11
    let mut _99: &Little;                // in scope 0 at ui/deriving/issue-58319.rs:40:5: 40:11
    let _100: &Little;                   // in scope 0 at ui/deriving/issue-58319.rs:40:5: 40:11
    let mut _101: Little;                // in scope 0 at ui/deriving/issue-58319.rs:41:5: 41:11
    let mut _102: &Little;               // in scope 0 at ui/deriving/issue-58319.rs:41:5: 41:11
    let _103: &Little;                   // in scope 0 at ui/deriving/issue-58319.rs:41:5: 41:11
    let mut _104: Little;                // in scope 0 at ui/deriving/issue-58319.rs:42:5: 42:11
    let mut _105: &Little;               // in scope 0 at ui/deriving/issue-58319.rs:42:5: 42:11
    let _106: &Little;                   // in scope 0 at ui/deriving/issue-58319.rs:42:5: 42:11
    let mut _107: Little;                // in scope 0 at ui/deriving/issue-58319.rs:43:5: 43:11
    let mut _108: &Little;               // in scope 0 at ui/deriving/issue-58319.rs:43:5: 43:11
    let _109: &Little;                   // in scope 0 at ui/deriving/issue-58319.rs:43:5: 43:11
    let mut _110: Little;                // in scope 0 at ui/deriving/issue-58319.rs:44:5: 44:11
    let mut _111: &Little;               // in scope 0 at ui/deriving/issue-58319.rs:44:5: 44:11
    let _112: &Little;                   // in scope 0 at ui/deriving/issue-58319.rs:44:5: 44:11
    let mut _113: Little;                // in scope 0 at ui/deriving/issue-58319.rs:45:5: 45:11
    let mut _114: &Little;               // in scope 0 at ui/deriving/issue-58319.rs:45:5: 45:11
    let _115: &Little;                   // in scope 0 at ui/deriving/issue-58319.rs:45:5: 45:11
    let mut _116: Little;                // in scope 0 at ui/deriving/issue-58319.rs:46:5: 46:11
    let mut _117: &Little;               // in scope 0 at ui/deriving/issue-58319.rs:46:5: 46:11
    let _118: &Little;                   // in scope 0 at ui/deriving/issue-58319.rs:46:5: 46:11
    let mut _119: Little;                // in scope 0 at ui/deriving/issue-58319.rs:47:5: 47:11
    let mut _120: &Little;               // in scope 0 at ui/deriving/issue-58319.rs:47:5: 47:11
    let _121: &Little;                   // in scope 0 at ui/deriving/issue-58319.rs:47:5: 47:11
    let mut _122: Little;                // in scope 0 at ui/deriving/issue-58319.rs:48:5: 48:11
    let mut _123: &Little;               // in scope 0 at ui/deriving/issue-58319.rs:48:5: 48:11
    let _124: &Little;                   // in scope 0 at ui/deriving/issue-58319.rs:48:5: 48:11
    let mut _125: Little;                // in scope 0 at ui/deriving/issue-58319.rs:49:5: 49:11
    let mut _126: &Little;               // in scope 0 at ui/deriving/issue-58319.rs:49:5: 49:11
    let _127: &Little;                   // in scope 0 at ui/deriving/issue-58319.rs:49:5: 49:11
    let mut _128: Little;                // in scope 0 at ui/deriving/issue-58319.rs:50:5: 50:11
    let mut _129: &Little;               // in scope 0 at ui/deriving/issue-58319.rs:50:5: 50:11
    let _130: &Little;                   // in scope 0 at ui/deriving/issue-58319.rs:50:5: 50:11
    let mut _131: Little;                // in scope 0 at ui/deriving/issue-58319.rs:51:5: 51:11
    let mut _132: &Little;               // in scope 0 at ui/deriving/issue-58319.rs:51:5: 51:11
    let _133: &Little;                   // in scope 0 at ui/deriving/issue-58319.rs:51:5: 51:11
    let mut _134: Little;                // in scope 0 at ui/deriving/issue-58319.rs:52:5: 52:11
    let mut _135: &Little;               // in scope 0 at ui/deriving/issue-58319.rs:52:5: 52:11
    let _136: &Little;                   // in scope 0 at ui/deriving/issue-58319.rs:52:5: 52:11
    let mut _137: Little;                // in scope 0 at ui/deriving/issue-58319.rs:53:5: 53:11
    let mut _138: &Little;               // in scope 0 at ui/deriving/issue-58319.rs:53:5: 53:11
    let _139: &Little;                   // in scope 0 at ui/deriving/issue-58319.rs:53:5: 53:11
    let mut _140: Little;                // in scope 0 at ui/deriving/issue-58319.rs:54:5: 54:11
    let mut _141: &Little;               // in scope 0 at ui/deriving/issue-58319.rs:54:5: 54:11
    let _142: &Little;                   // in scope 0 at ui/deriving/issue-58319.rs:54:5: 54:11
    let mut _143: Little;                // in scope 0 at ui/deriving/issue-58319.rs:55:5: 55:11
    let mut _144: &Little;               // in scope 0 at ui/deriving/issue-58319.rs:55:5: 55:11
    let _145: &Little;                   // in scope 0 at ui/deriving/issue-58319.rs:55:5: 55:11
    let mut _146: Little;                // in scope 0 at ui/deriving/issue-58319.rs:56:5: 56:11
    let mut _147: &Little;               // in scope 0 at ui/deriving/issue-58319.rs:56:5: 56:11
    let _148: &Little;                   // in scope 0 at ui/deriving/issue-58319.rs:56:5: 56:11
    let mut _149: Little;                // in scope 0 at ui/deriving/issue-58319.rs:57:5: 57:11
    let mut _150: &Little;               // in scope 0 at ui/deriving/issue-58319.rs:57:5: 57:11
    let _151: &Little;                   // in scope 0 at ui/deriving/issue-58319.rs:57:5: 57:11
    let mut _152: Little;                // in scope 0 at ui/deriving/issue-58319.rs:58:5: 58:11
    let mut _153: &Little;               // in scope 0 at ui/deriving/issue-58319.rs:58:5: 58:11
    let _154: &Little;                   // in scope 0 at ui/deriving/issue-58319.rs:58:5: 58:11
    let mut _155: Little;                // in scope 0 at ui/deriving/issue-58319.rs:59:5: 59:11
    let mut _156: &Little;               // in scope 0 at ui/deriving/issue-58319.rs:59:5: 59:11
    let _157: &Little;                   // in scope 0 at ui/deriving/issue-58319.rs:59:5: 59:11
    let mut _158: Little;                // in scope 0 at ui/deriving/issue-58319.rs:60:5: 60:11
    let mut _159: &Little;               // in scope 0 at ui/deriving/issue-58319.rs:60:5: 60:11
    let _160: &Little;                   // in scope 0 at ui/deriving/issue-58319.rs:60:5: 60:11
    let mut _161: Little;                // in scope 0 at ui/deriving/issue-58319.rs:61:5: 61:11
    let mut _162: &Little;               // in scope 0 at ui/deriving/issue-58319.rs:61:5: 61:11
    let _163: &Little;                   // in scope 0 at ui/deriving/issue-58319.rs:61:5: 61:11
    let mut _164: Little;                // in scope 0 at ui/deriving/issue-58319.rs:62:5: 62:11
    let mut _165: &Little;               // in scope 0 at ui/deriving/issue-58319.rs:62:5: 62:11
    let _166: &Little;                   // in scope 0 at ui/deriving/issue-58319.rs:62:5: 62:11
    let mut _167: Little;                // in scope 0 at ui/deriving/issue-58319.rs:63:5: 63:11
    let mut _168: &Little;               // in scope 0 at ui/deriving/issue-58319.rs:63:5: 63:11
    let _169: &Little;                   // in scope 0 at ui/deriving/issue-58319.rs:63:5: 63:11
    let mut _170: Little;                // in scope 0 at ui/deriving/issue-58319.rs:64:5: 64:11
    let mut _171: &Little;               // in scope 0 at ui/deriving/issue-58319.rs:64:5: 64:11
    let _172: &Little;                   // in scope 0 at ui/deriving/issue-58319.rs:64:5: 64:11
    let mut _173: Little;                // in scope 0 at ui/deriving/issue-58319.rs:65:5: 65:11
    let mut _174: &Little;               // in scope 0 at ui/deriving/issue-58319.rs:65:5: 65:11
    let _175: &Little;                   // in scope 0 at ui/deriving/issue-58319.rs:65:5: 65:11
    let mut _176: Little;                // in scope 0 at ui/deriving/issue-58319.rs:66:5: 66:11
    let mut _177: &Little;               // in scope 0 at ui/deriving/issue-58319.rs:66:5: 66:11
    let _178: &Little;                   // in scope 0 at ui/deriving/issue-58319.rs:66:5: 66:11
    let mut _179: Little;                // in scope 0 at ui/deriving/issue-58319.rs:67:5: 67:11
    let mut _180: &Little;               // in scope 0 at ui/deriving/issue-58319.rs:67:5: 67:11
    let _181: &Little;                   // in scope 0 at ui/deriving/issue-58319.rs:67:5: 67:11
    let mut _182: Little;                // in scope 0 at ui/deriving/issue-58319.rs:68:5: 68:11
    let mut _183: &Little;               // in scope 0 at ui/deriving/issue-58319.rs:68:5: 68:11
    let _184: &Little;                   // in scope 0 at ui/deriving/issue-58319.rs:68:5: 68:11
    let mut _185: Little;                // in scope 0 at ui/deriving/issue-58319.rs:69:5: 69:11
    let mut _186: &Little;               // in scope 0 at ui/deriving/issue-58319.rs:69:5: 69:11
    let _187: &Little;                   // in scope 0 at ui/deriving/issue-58319.rs:69:5: 69:11
    let mut _188: Little;                // in scope 0 at ui/deriving/issue-58319.rs:70:5: 70:11
    let mut _189: &Little;               // in scope 0 at ui/deriving/issue-58319.rs:70:5: 70:11
    let _190: &Little;                   // in scope 0 at ui/deriving/issue-58319.rs:70:5: 70:11
    let mut _191: Little;                // in scope 0 at ui/deriving/issue-58319.rs:71:5: 71:11
    let mut _192: &Little;               // in scope 0 at ui/deriving/issue-58319.rs:71:5: 71:11
    let _193: &Little;                   // in scope 0 at ui/deriving/issue-58319.rs:71:5: 71:11
    let mut _194: Little;                // in scope 0 at ui/deriving/issue-58319.rs:72:5: 72:11
    let mut _195: &Little;               // in scope 0 at ui/deriving/issue-58319.rs:72:5: 72:11
    let _196: &Little;                   // in scope 0 at ui/deriving/issue-58319.rs:72:5: 72:11
    let mut _197: Little;                // in scope 0 at ui/deriving/issue-58319.rs:73:5: 73:11
    let mut _198: &Little;               // in scope 0 at ui/deriving/issue-58319.rs:73:5: 73:11
    let _199: &Little;                   // in scope 0 at ui/deriving/issue-58319.rs:73:5: 73:11
    let mut _200: Little;                // in scope 0 at ui/deriving/issue-58319.rs:74:5: 74:11
    let mut _201: &Little;               // in scope 0 at ui/deriving/issue-58319.rs:74:5: 74:11
    let _202: &Little;                   // in scope 0 at ui/deriving/issue-58319.rs:74:5: 74:11
    let mut _203: Little;                // in scope 0 at ui/deriving/issue-58319.rs:75:5: 75:11
    let mut _204: &Little;               // in scope 0 at ui/deriving/issue-58319.rs:75:5: 75:11
    let _205: &Little;                   // in scope 0 at ui/deriving/issue-58319.rs:75:5: 75:11
    let mut _206: Little;                // in scope 0 at ui/deriving/issue-58319.rs:76:5: 76:11
    let mut _207: &Little;               // in scope 0 at ui/deriving/issue-58319.rs:76:5: 76:11
    let _208: &Little;                   // in scope 0 at ui/deriving/issue-58319.rs:76:5: 76:11
    let mut _209: Little;                // in scope 0 at ui/deriving/issue-58319.rs:77:5: 77:11
    let mut _210: &Little;               // in scope 0 at ui/deriving/issue-58319.rs:77:5: 77:11
    let _211: &Little;                   // in scope 0 at ui/deriving/issue-58319.rs:77:5: 77:11
    let mut _212: Little;                // in scope 0 at ui/deriving/issue-58319.rs:78:5: 78:11
    let mut _213: &Little;               // in scope 0 at ui/deriving/issue-58319.rs:78:5: 78:11
    let _214: &Little;                   // in scope 0 at ui/deriving/issue-58319.rs:78:5: 78:11
    let mut _215: Little;                // in scope 0 at ui/deriving/issue-58319.rs:79:5: 79:11
    let mut _216: &Little;               // in scope 0 at ui/deriving/issue-58319.rs:79:5: 79:11
    let _217: &Little;                   // in scope 0 at ui/deriving/issue-58319.rs:79:5: 79:11
    let mut _218: Little;                // in scope 0 at ui/deriving/issue-58319.rs:80:5: 80:11
    let mut _219: &Little;               // in scope 0 at ui/deriving/issue-58319.rs:80:5: 80:11
    let _220: &Little;                   // in scope 0 at ui/deriving/issue-58319.rs:80:5: 80:11
    let mut _221: Little;                // in scope 0 at ui/deriving/issue-58319.rs:81:5: 81:11
    let mut _222: &Little;               // in scope 0 at ui/deriving/issue-58319.rs:81:5: 81:11
    let _223: &Little;                   // in scope 0 at ui/deriving/issue-58319.rs:81:5: 81:11
    let mut _224: Little;                // in scope 0 at ui/deriving/issue-58319.rs:82:5: 82:11
    let mut _225: &Little;               // in scope 0 at ui/deriving/issue-58319.rs:82:5: 82:11
    let _226: &Little;                   // in scope 0 at ui/deriving/issue-58319.rs:82:5: 82:11
    let mut _227: Little;                // in scope 0 at ui/deriving/issue-58319.rs:83:5: 83:11
    let mut _228: &Little;               // in scope 0 at ui/deriving/issue-58319.rs:83:5: 83:11
    let _229: &Little;                   // in scope 0 at ui/deriving/issue-58319.rs:83:5: 83:11
    let mut _230: Little;                // in scope 0 at ui/deriving/issue-58319.rs:84:5: 84:11
    let mut _231: &Little;               // in scope 0 at ui/deriving/issue-58319.rs:84:5: 84:11
    let _232: &Little;                   // in scope 0 at ui/deriving/issue-58319.rs:84:5: 84:11
    let mut _233: Little;                // in scope 0 at ui/deriving/issue-58319.rs:85:5: 85:11
    let mut _234: &Little;               // in scope 0 at ui/deriving/issue-58319.rs:85:5: 85:11
    let _235: &Little;                   // in scope 0 at ui/deriving/issue-58319.rs:85:5: 85:11
    let mut _236: Little;                // in scope 0 at ui/deriving/issue-58319.rs:86:5: 86:11
    let mut _237: &Little;               // in scope 0 at ui/deriving/issue-58319.rs:86:5: 86:11
    let _238: &Little;                   // in scope 0 at ui/deriving/issue-58319.rs:86:5: 86:11
    let mut _239: Little;                // in scope 0 at ui/deriving/issue-58319.rs:87:5: 87:11
    let mut _240: &Little;               // in scope 0 at ui/deriving/issue-58319.rs:87:5: 87:11
    let _241: &Little;                   // in scope 0 at ui/deriving/issue-58319.rs:87:5: 87:11
    let mut _242: Little;                // in scope 0 at ui/deriving/issue-58319.rs:88:5: 88:11
    let mut _243: &Little;               // in scope 0 at ui/deriving/issue-58319.rs:88:5: 88:11
    let _244: &Little;                   // in scope 0 at ui/deriving/issue-58319.rs:88:5: 88:11
    let mut _245: Little;                // in scope 0 at ui/deriving/issue-58319.rs:89:5: 89:11
    let mut _246: &Little;               // in scope 0 at ui/deriving/issue-58319.rs:89:5: 89:11
    let _247: &Little;                   // in scope 0 at ui/deriving/issue-58319.rs:89:5: 89:11
    let mut _248: Little;                // in scope 0 at ui/deriving/issue-58319.rs:90:5: 90:11
    let mut _249: &Little;               // in scope 0 at ui/deriving/issue-58319.rs:90:5: 90:11
    let _250: &Little;                   // in scope 0 at ui/deriving/issue-58319.rs:90:5: 90:11
    let mut _251: Little;                // in scope 0 at ui/deriving/issue-58319.rs:91:5: 91:11
    let mut _252: &Little;               // in scope 0 at ui/deriving/issue-58319.rs:91:5: 91:11
    let _253: &Little;                   // in scope 0 at ui/deriving/issue-58319.rs:91:5: 91:11
    let mut _254: Little;                // in scope 0 at ui/deriving/issue-58319.rs:92:5: 92:11
    let mut _255: &Little;               // in scope 0 at ui/deriving/issue-58319.rs:92:5: 92:11
    let _256: &Little;                   // in scope 0 at ui/deriving/issue-58319.rs:92:5: 92:11
    let mut _257: Little;                // in scope 0 at ui/deriving/issue-58319.rs:93:5: 93:11
    let mut _258: &Little;               // in scope 0 at ui/deriving/issue-58319.rs:93:5: 93:11
    let _259: &Little;                   // in scope 0 at ui/deriving/issue-58319.rs:93:5: 93:11
    let mut _260: Little;                // in scope 0 at ui/deriving/issue-58319.rs:94:5: 94:11
    let mut _261: &Little;               // in scope 0 at ui/deriving/issue-58319.rs:94:5: 94:11
    let _262: &Little;                   // in scope 0 at ui/deriving/issue-58319.rs:94:5: 94:11
    let mut _263: Little;                // in scope 0 at ui/deriving/issue-58319.rs:95:5: 95:11
    let mut _264: &Little;               // in scope 0 at ui/deriving/issue-58319.rs:95:5: 95:11
    let _265: &Little;                   // in scope 0 at ui/deriving/issue-58319.rs:95:5: 95:11
    let mut _266: Little;                // in scope 0 at ui/deriving/issue-58319.rs:96:5: 96:11
    let mut _267: &Little;               // in scope 0 at ui/deriving/issue-58319.rs:96:5: 96:11
    let _268: &Little;                   // in scope 0 at ui/deriving/issue-58319.rs:96:5: 96:11
    let mut _269: Little;                // in scope 0 at ui/deriving/issue-58319.rs:97:5: 97:11
    let mut _270: &Little;               // in scope 0 at ui/deriving/issue-58319.rs:97:5: 97:11
    let _271: &Little;                   // in scope 0 at ui/deriving/issue-58319.rs:97:5: 97:11
    let mut _272: Little;                // in scope 0 at ui/deriving/issue-58319.rs:98:5: 98:11
    let mut _273: &Little;               // in scope 0 at ui/deriving/issue-58319.rs:98:5: 98:11
    let _274: &Little;                   // in scope 0 at ui/deriving/issue-58319.rs:98:5: 98:11
    let mut _275: Little;                // in scope 0 at ui/deriving/issue-58319.rs:99:5: 99:11
    let mut _276: &Little;               // in scope 0 at ui/deriving/issue-58319.rs:99:5: 99:11
    let _277: &Little;                   // in scope 0 at ui/deriving/issue-58319.rs:99:5: 99:11
    let mut _278: Little;                // in scope 0 at ui/deriving/issue-58319.rs:100:5: 100:11
    let mut _279: &Little;               // in scope 0 at ui/deriving/issue-58319.rs:100:5: 100:11
    let _280: &Little;                   // in scope 0 at ui/deriving/issue-58319.rs:100:5: 100:11
    let mut _281: Little;                // in scope 0 at ui/deriving/issue-58319.rs:101:5: 101:11
    let mut _282: &Little;               // in scope 0 at ui/deriving/issue-58319.rs:101:5: 101:11
    let _283: &Little;                   // in scope 0 at ui/deriving/issue-58319.rs:101:5: 101:11
    let mut _284: Little;                // in scope 0 at ui/deriving/issue-58319.rs:102:5: 102:11
    let mut _285: &Little;               // in scope 0 at ui/deriving/issue-58319.rs:102:5: 102:11
    let _286: &Little;                   // in scope 0 at ui/deriving/issue-58319.rs:102:5: 102:11
    let mut _287: Little;                // in scope 0 at ui/deriving/issue-58319.rs:103:5: 103:11
    let mut _288: &Little;               // in scope 0 at ui/deriving/issue-58319.rs:103:5: 103:11
    let _289: &Little;                   // in scope 0 at ui/deriving/issue-58319.rs:103:5: 103:11
    let mut _290: Little;                // in scope 0 at ui/deriving/issue-58319.rs:104:5: 104:11
    let mut _291: &Little;               // in scope 0 at ui/deriving/issue-58319.rs:104:5: 104:11
    let _292: &Little;                   // in scope 0 at ui/deriving/issue-58319.rs:104:5: 104:11
    let mut _293: Little;                // in scope 0 at ui/deriving/issue-58319.rs:105:5: 105:11
    let mut _294: &Little;               // in scope 0 at ui/deriving/issue-58319.rs:105:5: 105:11
    let _295: &Little;                   // in scope 0 at ui/deriving/issue-58319.rs:105:5: 105:11
    let mut _296: Little;                // in scope 0 at ui/deriving/issue-58319.rs:106:5: 106:11
    let mut _297: &Little;               // in scope 0 at ui/deriving/issue-58319.rs:106:5: 106:11
    let _298: &Little;                   // in scope 0 at ui/deriving/issue-58319.rs:106:5: 106:11
    let mut _299: Little;                // in scope 0 at ui/deriving/issue-58319.rs:107:5: 107:11
    let mut _300: &Little;               // in scope 0 at ui/deriving/issue-58319.rs:107:5: 107:11
    let _301: &Little;                   // in scope 0 at ui/deriving/issue-58319.rs:107:5: 107:11
    let mut _302: Little;                // in scope 0 at ui/deriving/issue-58319.rs:108:5: 108:11
    let mut _303: &Little;               // in scope 0 at ui/deriving/issue-58319.rs:108:5: 108:11
    let _304: &Little;                   // in scope 0 at ui/deriving/issue-58319.rs:108:5: 108:11
    let mut _305: Little;                // in scope 0 at ui/deriving/issue-58319.rs:109:5: 109:11
    let mut _306: &Little;               // in scope 0 at ui/deriving/issue-58319.rs:109:5: 109:11
    let _307: &Little;                   // in scope 0 at ui/deriving/issue-58319.rs:109:5: 109:11
    let mut _308: Little;                // in scope 0 at ui/deriving/issue-58319.rs:110:5: 110:11
    let mut _309: &Little;               // in scope 0 at ui/deriving/issue-58319.rs:110:5: 110:11
    let _310: &Little;                   // in scope 0 at ui/deriving/issue-58319.rs:110:5: 110:11
    let mut _311: Little;                // in scope 0 at ui/deriving/issue-58319.rs:111:5: 111:11
    let mut _312: &Little;               // in scope 0 at ui/deriving/issue-58319.rs:111:5: 111:11
    let _313: &Little;                   // in scope 0 at ui/deriving/issue-58319.rs:111:5: 111:11
    let mut _314: Little;                // in scope 0 at ui/deriving/issue-58319.rs:112:5: 112:11
    let mut _315: &Little;               // in scope 0 at ui/deriving/issue-58319.rs:112:5: 112:11
    let _316: &Little;                   // in scope 0 at ui/deriving/issue-58319.rs:112:5: 112:11
    let mut _317: Little;                // in scope 0 at ui/deriving/issue-58319.rs:113:5: 113:11
    let mut _318: &Little;               // in scope 0 at ui/deriving/issue-58319.rs:113:5: 113:11
    let _319: &Little;                   // in scope 0 at ui/deriving/issue-58319.rs:113:5: 113:11
    let mut _320: Little;                // in scope 0 at ui/deriving/issue-58319.rs:114:5: 114:11
    let mut _321: &Little;               // in scope 0 at ui/deriving/issue-58319.rs:114:5: 114:11
    let _322: &Little;                   // in scope 0 at ui/deriving/issue-58319.rs:114:5: 114:11
    let mut _323: Little;                // in scope 0 at ui/deriving/issue-58319.rs:115:5: 115:11
    let mut _324: &Little;               // in scope 0 at ui/deriving/issue-58319.rs:115:5: 115:11
    let _325: &Little;                   // in scope 0 at ui/deriving/issue-58319.rs:115:5: 115:11
    let mut _326: Little;                // in scope 0 at ui/deriving/issue-58319.rs:116:5: 116:11
    let mut _327: &Little;               // in scope 0 at ui/deriving/issue-58319.rs:116:5: 116:11
    let _328: &Little;                   // in scope 0 at ui/deriving/issue-58319.rs:116:5: 116:11
    let mut _329: Little;                // in scope 0 at ui/deriving/issue-58319.rs:117:5: 117:11
    let mut _330: &Little;               // in scope 0 at ui/deriving/issue-58319.rs:117:5: 117:11
    let _331: &Little;                   // in scope 0 at ui/deriving/issue-58319.rs:117:5: 117:11
    let mut _332: Little;                // in scope 0 at ui/deriving/issue-58319.rs:118:5: 118:11
    let mut _333: &Little;               // in scope 0 at ui/deriving/issue-58319.rs:118:5: 118:11
    let _334: &Little;                   // in scope 0 at ui/deriving/issue-58319.rs:118:5: 118:11
    let mut _335: Little;                // in scope 0 at ui/deriving/issue-58319.rs:119:5: 119:11
    let mut _336: &Little;               // in scope 0 at ui/deriving/issue-58319.rs:119:5: 119:11
    let _337: &Little;                   // in scope 0 at ui/deriving/issue-58319.rs:119:5: 119:11
    let mut _338: Little;                // in scope 0 at ui/deriving/issue-58319.rs:120:5: 120:11
    let mut _339: &Little;               // in scope 0 at ui/deriving/issue-58319.rs:120:5: 120:11
    let _340: &Little;                   // in scope 0 at ui/deriving/issue-58319.rs:120:5: 120:11
    let mut _341: Little;                // in scope 0 at ui/deriving/issue-58319.rs:121:5: 121:11
    let mut _342: &Little;               // in scope 0 at ui/deriving/issue-58319.rs:121:5: 121:11
    let _343: &Little;                   // in scope 0 at ui/deriving/issue-58319.rs:121:5: 121:11
    let mut _344: Little;                // in scope 0 at ui/deriving/issue-58319.rs:122:5: 122:11
    let mut _345: &Little;               // in scope 0 at ui/deriving/issue-58319.rs:122:5: 122:11
    let _346: &Little;                   // in scope 0 at ui/deriving/issue-58319.rs:122:5: 122:11
    let mut _347: Little;                // in scope 0 at ui/deriving/issue-58319.rs:123:5: 123:11
    let mut _348: &Little;               // in scope 0 at ui/deriving/issue-58319.rs:123:5: 123:11
    let _349: &Little;                   // in scope 0 at ui/deriving/issue-58319.rs:123:5: 123:11
    let mut _350: Little;                // in scope 0 at ui/deriving/issue-58319.rs:124:5: 124:11
    let mut _351: &Little;               // in scope 0 at ui/deriving/issue-58319.rs:124:5: 124:11
    let _352: &Little;                   // in scope 0 at ui/deriving/issue-58319.rs:124:5: 124:11
    let mut _353: Little;                // in scope 0 at ui/deriving/issue-58319.rs:125:5: 125:11
    let mut _354: &Little;               // in scope 0 at ui/deriving/issue-58319.rs:125:5: 125:11
    let _355: &Little;                   // in scope 0 at ui/deriving/issue-58319.rs:125:5: 125:11
    let mut _356: Little;                // in scope 0 at ui/deriving/issue-58319.rs:126:5: 126:11
    let mut _357: &Little;               // in scope 0 at ui/deriving/issue-58319.rs:126:5: 126:11
    let _358: &Little;                   // in scope 0 at ui/deriving/issue-58319.rs:126:5: 126:11
    let mut _359: Little;                // in scope 0 at ui/deriving/issue-58319.rs:127:5: 127:11
    let mut _360: &Little;               // in scope 0 at ui/deriving/issue-58319.rs:127:5: 127:11
    let _361: &Little;                   // in scope 0 at ui/deriving/issue-58319.rs:127:5: 127:11
    let mut _362: Little;                // in scope 0 at ui/deriving/issue-58319.rs:128:5: 128:11
    let mut _363: &Little;               // in scope 0 at ui/deriving/issue-58319.rs:128:5: 128:11
    let _364: &Little;                   // in scope 0 at ui/deriving/issue-58319.rs:128:5: 128:11
    let mut _365: Little;                // in scope 0 at ui/deriving/issue-58319.rs:129:5: 129:11
    let mut _366: &Little;               // in scope 0 at ui/deriving/issue-58319.rs:129:5: 129:11
    let _367: &Little;                   // in scope 0 at ui/deriving/issue-58319.rs:129:5: 129:11
    let mut _368: Little;                // in scope 0 at ui/deriving/issue-58319.rs:130:5: 130:11
    let mut _369: &Little;               // in scope 0 at ui/deriving/issue-58319.rs:130:5: 130:11
    let _370: &Little;                   // in scope 0 at ui/deriving/issue-58319.rs:130:5: 130:11
    let mut _371: Little;                // in scope 0 at ui/deriving/issue-58319.rs:131:5: 131:11
    let mut _372: &Little;               // in scope 0 at ui/deriving/issue-58319.rs:131:5: 131:11
    let _373: &Little;                   // in scope 0 at ui/deriving/issue-58319.rs:131:5: 131:11
    let mut _374: Little;                // in scope 0 at ui/deriving/issue-58319.rs:132:5: 132:11
    let mut _375: &Little;               // in scope 0 at ui/deriving/issue-58319.rs:132:5: 132:11
    let _376: &Little;                   // in scope 0 at ui/deriving/issue-58319.rs:132:5: 132:11
    let mut _377: Little;                // in scope 0 at ui/deriving/issue-58319.rs:133:5: 133:11
    let mut _378: &Little;               // in scope 0 at ui/deriving/issue-58319.rs:133:5: 133:11
    let _379: &Little;                   // in scope 0 at ui/deriving/issue-58319.rs:133:5: 133:11
    let mut _380: Little;                // in scope 0 at ui/deriving/issue-58319.rs:134:5: 134:11
    let mut _381: &Little;               // in scope 0 at ui/deriving/issue-58319.rs:134:5: 134:11
    let _382: &Little;                   // in scope 0 at ui/deriving/issue-58319.rs:134:5: 134:11
    let mut _383: Little;                // in scope 0 at ui/deriving/issue-58319.rs:135:5: 135:11
    let mut _384: &Little;               // in scope 0 at ui/deriving/issue-58319.rs:135:5: 135:11
    let _385: &Little;                   // in scope 0 at ui/deriving/issue-58319.rs:135:5: 135:11
    let mut _386: Little;                // in scope 0 at ui/deriving/issue-58319.rs:136:5: 136:11
    let mut _387: &Little;               // in scope 0 at ui/deriving/issue-58319.rs:136:5: 136:11
    let _388: &Little;                   // in scope 0 at ui/deriving/issue-58319.rs:136:5: 136:11
    let mut _389: Little;                // in scope 0 at ui/deriving/issue-58319.rs:137:5: 137:11
    let mut _390: &Little;               // in scope 0 at ui/deriving/issue-58319.rs:137:5: 137:11
    let _391: &Little;                   // in scope 0 at ui/deriving/issue-58319.rs:137:5: 137:11
    let mut _392: Little;                // in scope 0 at ui/deriving/issue-58319.rs:138:5: 138:11
    let mut _393: &Little;               // in scope 0 at ui/deriving/issue-58319.rs:138:5: 138:11
    let _394: &Little;                   // in scope 0 at ui/deriving/issue-58319.rs:138:5: 138:11
    let mut _395: Little;                // in scope 0 at ui/deriving/issue-58319.rs:139:5: 139:11
    let mut _396: &Little;               // in scope 0 at ui/deriving/issue-58319.rs:139:5: 139:11
    let _397: &Little;                   // in scope 0 at ui/deriving/issue-58319.rs:139:5: 139:11
    let mut _398: Little;                // in scope 0 at ui/deriving/issue-58319.rs:140:5: 140:11
    let mut _399: &Little;               // in scope 0 at ui/deriving/issue-58319.rs:140:5: 140:11
    let _400: &Little;                   // in scope 0 at ui/deriving/issue-58319.rs:140:5: 140:11
    let mut _401: Little;                // in scope 0 at ui/deriving/issue-58319.rs:141:5: 141:11
    let mut _402: &Little;               // in scope 0 at ui/deriving/issue-58319.rs:141:5: 141:11
    let _403: &Little;                   // in scope 0 at ui/deriving/issue-58319.rs:141:5: 141:11
    let mut _404: Little;                // in scope 0 at ui/deriving/issue-58319.rs:142:5: 142:11
    let mut _405: &Little;               // in scope 0 at ui/deriving/issue-58319.rs:142:5: 142:11
    let _406: &Little;                   // in scope 0 at ui/deriving/issue-58319.rs:142:5: 142:11
    let mut _407: Little;                // in scope 0 at ui/deriving/issue-58319.rs:143:5: 143:11
    let mut _408: &Little;               // in scope 0 at ui/deriving/issue-58319.rs:143:5: 143:11
    let _409: &Little;                   // in scope 0 at ui/deriving/issue-58319.rs:143:5: 143:11
    let mut _410: Little;                // in scope 0 at ui/deriving/issue-58319.rs:144:5: 144:11
    let mut _411: &Little;               // in scope 0 at ui/deriving/issue-58319.rs:144:5: 144:11
    let _412: &Little;                   // in scope 0 at ui/deriving/issue-58319.rs:144:5: 144:11
    let mut _413: Little;                // in scope 0 at ui/deriving/issue-58319.rs:145:5: 145:11
    let mut _414: &Little;               // in scope 0 at ui/deriving/issue-58319.rs:145:5: 145:11
    let _415: &Little;                   // in scope 0 at ui/deriving/issue-58319.rs:145:5: 145:11
    let mut _416: Little;                // in scope 0 at ui/deriving/issue-58319.rs:146:5: 146:11
    let mut _417: &Little;               // in scope 0 at ui/deriving/issue-58319.rs:146:5: 146:11
    let _418: &Little;                   // in scope 0 at ui/deriving/issue-58319.rs:146:5: 146:11
    let mut _419: Little;                // in scope 0 at ui/deriving/issue-58319.rs:147:5: 147:11
    let mut _420: &Little;               // in scope 0 at ui/deriving/issue-58319.rs:147:5: 147:11
    let _421: &Little;                   // in scope 0 at ui/deriving/issue-58319.rs:147:5: 147:11
    let mut _422: Little;                // in scope 0 at ui/deriving/issue-58319.rs:148:5: 148:11
    let mut _423: &Little;               // in scope 0 at ui/deriving/issue-58319.rs:148:5: 148:11
    let _424: &Little;                   // in scope 0 at ui/deriving/issue-58319.rs:148:5: 148:11
    let mut _425: Little;                // in scope 0 at ui/deriving/issue-58319.rs:149:5: 149:11
    let mut _426: &Little;               // in scope 0 at ui/deriving/issue-58319.rs:149:5: 149:11
    let _427: &Little;                   // in scope 0 at ui/deriving/issue-58319.rs:149:5: 149:11
    let mut _428: Little;                // in scope 0 at ui/deriving/issue-58319.rs:150:5: 150:11
    let mut _429: &Little;               // in scope 0 at ui/deriving/issue-58319.rs:150:5: 150:11
    let _430: &Little;                   // in scope 0 at ui/deriving/issue-58319.rs:150:5: 150:11
    let mut _431: Little;                // in scope 0 at ui/deriving/issue-58319.rs:151:5: 151:11
    let mut _432: &Little;               // in scope 0 at ui/deriving/issue-58319.rs:151:5: 151:11
    let _433: &Little;                   // in scope 0 at ui/deriving/issue-58319.rs:151:5: 151:11
    let mut _434: Little;                // in scope 0 at ui/deriving/issue-58319.rs:152:5: 152:11
    let mut _435: &Little;               // in scope 0 at ui/deriving/issue-58319.rs:152:5: 152:11
    let _436: &Little;                   // in scope 0 at ui/deriving/issue-58319.rs:152:5: 152:11
    let mut _437: Little;                // in scope 0 at ui/deriving/issue-58319.rs:153:5: 153:11
    let mut _438: &Little;               // in scope 0 at ui/deriving/issue-58319.rs:153:5: 153:11
    let _439: &Little;                   // in scope 0 at ui/deriving/issue-58319.rs:153:5: 153:11
    let mut _440: Little;                // in scope 0 at ui/deriving/issue-58319.rs:154:5: 154:11
    let mut _441: &Little;               // in scope 0 at ui/deriving/issue-58319.rs:154:5: 154:11
    let _442: &Little;                   // in scope 0 at ui/deriving/issue-58319.rs:154:5: 154:11
    let mut _443: Little;                // in scope 0 at ui/deriving/issue-58319.rs:155:5: 155:11
    let mut _444: &Little;               // in scope 0 at ui/deriving/issue-58319.rs:155:5: 155:11
    let _445: &Little;                   // in scope 0 at ui/deriving/issue-58319.rs:155:5: 155:11
    let mut _446: Little;                // in scope 0 at ui/deriving/issue-58319.rs:156:5: 156:11
    let mut _447: &Little;               // in scope 0 at ui/deriving/issue-58319.rs:156:5: 156:11
    let _448: &Little;                   // in scope 0 at ui/deriving/issue-58319.rs:156:5: 156:11
    let mut _449: Little;                // in scope 0 at ui/deriving/issue-58319.rs:157:5: 157:11
    let mut _450: &Little;               // in scope 0 at ui/deriving/issue-58319.rs:157:5: 157:11
    let _451: &Little;                   // in scope 0 at ui/deriving/issue-58319.rs:157:5: 157:11
    let mut _452: Little;                // in scope 0 at ui/deriving/issue-58319.rs:158:5: 158:11
    let mut _453: &Little;               // in scope 0 at ui/deriving/issue-58319.rs:158:5: 158:11
    let _454: &Little;                   // in scope 0 at ui/deriving/issue-58319.rs:158:5: 158:11
    let mut _455: Little;                // in scope 0 at ui/deriving/issue-58319.rs:159:5: 159:11
    let mut _456: &Little;               // in scope 0 at ui/deriving/issue-58319.rs:159:5: 159:11
    let _457: &Little;                   // in scope 0 at ui/deriving/issue-58319.rs:159:5: 159:11
    let mut _458: Little;                // in scope 0 at ui/deriving/issue-58319.rs:160:5: 160:11
    let mut _459: &Little;               // in scope 0 at ui/deriving/issue-58319.rs:160:5: 160:11
    let _460: &Little;                   // in scope 0 at ui/deriving/issue-58319.rs:160:5: 160:11
    let mut _461: Little;                // in scope 0 at ui/deriving/issue-58319.rs:161:5: 161:11
    let mut _462: &Little;               // in scope 0 at ui/deriving/issue-58319.rs:161:5: 161:11
    let _463: &Little;                   // in scope 0 at ui/deriving/issue-58319.rs:161:5: 161:11
    let mut _464: Little;                // in scope 0 at ui/deriving/issue-58319.rs:162:5: 162:11
    let mut _465: &Little;               // in scope 0 at ui/deriving/issue-58319.rs:162:5: 162:11
    let _466: &Little;                   // in scope 0 at ui/deriving/issue-58319.rs:162:5: 162:11
    let mut _467: Little;                // in scope 0 at ui/deriving/issue-58319.rs:163:5: 163:11
    let mut _468: &Little;               // in scope 0 at ui/deriving/issue-58319.rs:163:5: 163:11
    let _469: &Little;                   // in scope 0 at ui/deriving/issue-58319.rs:163:5: 163:11
    let mut _470: Little;                // in scope 0 at ui/deriving/issue-58319.rs:164:5: 164:11
    let mut _471: &Little;               // in scope 0 at ui/deriving/issue-58319.rs:164:5: 164:11
    let _472: &Little;                   // in scope 0 at ui/deriving/issue-58319.rs:164:5: 164:11
    let mut _473: Little;                // in scope 0 at ui/deriving/issue-58319.rs:165:5: 165:11
    let mut _474: &Little;               // in scope 0 at ui/deriving/issue-58319.rs:165:5: 165:11
    let _475: &Little;                   // in scope 0 at ui/deriving/issue-58319.rs:165:5: 165:11
    let mut _476: Little;                // in scope 0 at ui/deriving/issue-58319.rs:166:5: 166:11
    let mut _477: &Little;               // in scope 0 at ui/deriving/issue-58319.rs:166:5: 166:11
    let _478: &Little;                   // in scope 0 at ui/deriving/issue-58319.rs:166:5: 166:11
    let mut _479: Little;                // in scope 0 at ui/deriving/issue-58319.rs:167:5: 167:11
    let mut _480: &Little;               // in scope 0 at ui/deriving/issue-58319.rs:167:5: 167:11
    let _481: &Little;                   // in scope 0 at ui/deriving/issue-58319.rs:167:5: 167:11
    let mut _482: Little;                // in scope 0 at ui/deriving/issue-58319.rs:168:5: 168:11
    let mut _483: &Little;               // in scope 0 at ui/deriving/issue-58319.rs:168:5: 168:11
    let _484: &Little;                   // in scope 0 at ui/deriving/issue-58319.rs:168:5: 168:11
    let mut _485: Little;                // in scope 0 at ui/deriving/issue-58319.rs:169:5: 169:11
    let mut _486: &Little;               // in scope 0 at ui/deriving/issue-58319.rs:169:5: 169:11
    let _487: &Little;                   // in scope 0 at ui/deriving/issue-58319.rs:169:5: 169:11
    let mut _488: Little;                // in scope 0 at ui/deriving/issue-58319.rs:170:5: 170:11
    let mut _489: &Little;               // in scope 0 at ui/deriving/issue-58319.rs:170:5: 170:11
    let _490: &Little;                   // in scope 0 at ui/deriving/issue-58319.rs:170:5: 170:11
    let mut _491: Little;                // in scope 0 at ui/deriving/issue-58319.rs:171:5: 171:11
    let mut _492: &Little;               // in scope 0 at ui/deriving/issue-58319.rs:171:5: 171:11
    let _493: &Little;                   // in scope 0 at ui/deriving/issue-58319.rs:171:5: 171:11
    let mut _494: Little;                // in scope 0 at ui/deriving/issue-58319.rs:172:5: 172:11
    let mut _495: &Little;               // in scope 0 at ui/deriving/issue-58319.rs:172:5: 172:11
    let _496: &Little;                   // in scope 0 at ui/deriving/issue-58319.rs:172:5: 172:11
    let mut _497: Little;                // in scope 0 at ui/deriving/issue-58319.rs:173:5: 173:11
    let mut _498: &Little;               // in scope 0 at ui/deriving/issue-58319.rs:173:5: 173:11
    let _499: &Little;                   // in scope 0 at ui/deriving/issue-58319.rs:173:5: 173:11
    let mut _500: Little;                // in scope 0 at ui/deriving/issue-58319.rs:174:5: 174:11
    let mut _501: &Little;               // in scope 0 at ui/deriving/issue-58319.rs:174:5: 174:11
    let _502: &Little;                   // in scope 0 at ui/deriving/issue-58319.rs:174:5: 174:11
    let mut _503: Little;                // in scope 0 at ui/deriving/issue-58319.rs:175:5: 175:11
    let mut _504: &Little;               // in scope 0 at ui/deriving/issue-58319.rs:175:5: 175:11
    let _505: &Little;                   // in scope 0 at ui/deriving/issue-58319.rs:175:5: 175:11
    let mut _506: Little;                // in scope 0 at ui/deriving/issue-58319.rs:176:5: 176:11
    let mut _507: &Little;               // in scope 0 at ui/deriving/issue-58319.rs:176:5: 176:11
    let _508: &Little;                   // in scope 0 at ui/deriving/issue-58319.rs:176:5: 176:11
    let mut _509: Little;                // in scope 0 at ui/deriving/issue-58319.rs:177:5: 177:11
    let mut _510: &Little;               // in scope 0 at ui/deriving/issue-58319.rs:177:5: 177:11
    let _511: &Little;                   // in scope 0 at ui/deriving/issue-58319.rs:177:5: 177:11
    let mut _512: Little;                // in scope 0 at ui/deriving/issue-58319.rs:178:5: 178:11
    let mut _513: &Little;               // in scope 0 at ui/deriving/issue-58319.rs:178:5: 178:11
    let _514: &Little;                   // in scope 0 at ui/deriving/issue-58319.rs:178:5: 178:11
    let mut _515: Little;                // in scope 0 at ui/deriving/issue-58319.rs:179:5: 179:11
    let mut _516: &Little;               // in scope 0 at ui/deriving/issue-58319.rs:179:5: 179:11
    let _517: &Little;                   // in scope 0 at ui/deriving/issue-58319.rs:179:5: 179:11
    let mut _518: Little;                // in scope 0 at ui/deriving/issue-58319.rs:180:5: 180:11
    let mut _519: &Little;               // in scope 0 at ui/deriving/issue-58319.rs:180:5: 180:11
    let _520: &Little;                   // in scope 0 at ui/deriving/issue-58319.rs:180:5: 180:11
    let mut _521: Little;                // in scope 0 at ui/deriving/issue-58319.rs:181:5: 181:11
    let mut _522: &Little;               // in scope 0 at ui/deriving/issue-58319.rs:181:5: 181:11
    let _523: &Little;                   // in scope 0 at ui/deriving/issue-58319.rs:181:5: 181:11
    let mut _524: Little;                // in scope 0 at ui/deriving/issue-58319.rs:182:5: 182:11
    let mut _525: &Little;               // in scope 0 at ui/deriving/issue-58319.rs:182:5: 182:11
    let _526: &Little;                   // in scope 0 at ui/deriving/issue-58319.rs:182:5: 182:11
    let mut _527: Little;                // in scope 0 at ui/deriving/issue-58319.rs:183:5: 183:11
    let mut _528: &Little;               // in scope 0 at ui/deriving/issue-58319.rs:183:5: 183:11
    let _529: &Little;                   // in scope 0 at ui/deriving/issue-58319.rs:183:5: 183:11
    let mut _530: Little;                // in scope 0 at ui/deriving/issue-58319.rs:184:5: 184:11
    let mut _531: &Little;               // in scope 0 at ui/deriving/issue-58319.rs:184:5: 184:11
    let _532: &Little;                   // in scope 0 at ui/deriving/issue-58319.rs:184:5: 184:11
    let mut _533: Little;                // in scope 0 at ui/deriving/issue-58319.rs:185:5: 185:11
    let mut _534: &Little;               // in scope 0 at ui/deriving/issue-58319.rs:185:5: 185:11
    let _535: &Little;                   // in scope 0 at ui/deriving/issue-58319.rs:185:5: 185:11
    let mut _536: Little;                // in scope 0 at ui/deriving/issue-58319.rs:186:5: 186:11
    let mut _537: &Little;               // in scope 0 at ui/deriving/issue-58319.rs:186:5: 186:11
    let _538: &Little;                   // in scope 0 at ui/deriving/issue-58319.rs:186:5: 186:11
    let mut _539: Little;                // in scope 0 at ui/deriving/issue-58319.rs:187:5: 187:11
    let mut _540: &Little;               // in scope 0 at ui/deriving/issue-58319.rs:187:5: 187:11
    let _541: &Little;                   // in scope 0 at ui/deriving/issue-58319.rs:187:5: 187:11
    let mut _542: Little;                // in scope 0 at ui/deriving/issue-58319.rs:188:5: 188:11
    let mut _543: &Little;               // in scope 0 at ui/deriving/issue-58319.rs:188:5: 188:11
    let _544: &Little;                   // in scope 0 at ui/deriving/issue-58319.rs:188:5: 188:11
    let mut _545: Little;                // in scope 0 at ui/deriving/issue-58319.rs:189:5: 189:11
    let mut _546: &Little;               // in scope 0 at ui/deriving/issue-58319.rs:189:5: 189:11
    let _547: &Little;                   // in scope 0 at ui/deriving/issue-58319.rs:189:5: 189:11
    let mut _548: Little;                // in scope 0 at ui/deriving/issue-58319.rs:190:5: 190:11
    let mut _549: &Little;               // in scope 0 at ui/deriving/issue-58319.rs:190:5: 190:11
    let _550: &Little;                   // in scope 0 at ui/deriving/issue-58319.rs:190:5: 190:11
    let mut _551: Little;                // in scope 0 at ui/deriving/issue-58319.rs:191:5: 191:11
    let mut _552: &Little;               // in scope 0 at ui/deriving/issue-58319.rs:191:5: 191:11
    let _553: &Little;                   // in scope 0 at ui/deriving/issue-58319.rs:191:5: 191:11
    let mut _554: Little;                // in scope 0 at ui/deriving/issue-58319.rs:192:5: 192:11
    let mut _555: &Little;               // in scope 0 at ui/deriving/issue-58319.rs:192:5: 192:11
    let _556: &Little;                   // in scope 0 at ui/deriving/issue-58319.rs:192:5: 192:11
    let mut _557: Little;                // in scope 0 at ui/deriving/issue-58319.rs:193:5: 193:11
    let mut _558: &Little;               // in scope 0 at ui/deriving/issue-58319.rs:193:5: 193:11
    let _559: &Little;                   // in scope 0 at ui/deriving/issue-58319.rs:193:5: 193:11
    let mut _560: Little;                // in scope 0 at ui/deriving/issue-58319.rs:194:5: 194:11
    let mut _561: &Little;               // in scope 0 at ui/deriving/issue-58319.rs:194:5: 194:11
    let _562: &Little;                   // in scope 0 at ui/deriving/issue-58319.rs:194:5: 194:11
    let mut _563: Little;                // in scope 0 at ui/deriving/issue-58319.rs:195:5: 195:11
    let mut _564: &Little;               // in scope 0 at ui/deriving/issue-58319.rs:195:5: 195:11
    let _565: &Little;                   // in scope 0 at ui/deriving/issue-58319.rs:195:5: 195:11
    let mut _566: Little;                // in scope 0 at ui/deriving/issue-58319.rs:196:5: 196:11
    let mut _567: &Little;               // in scope 0 at ui/deriving/issue-58319.rs:196:5: 196:11
    let _568: &Little;                   // in scope 0 at ui/deriving/issue-58319.rs:196:5: 196:11
    let mut _569: Little;                // in scope 0 at ui/deriving/issue-58319.rs:197:5: 197:11
    let mut _570: &Little;               // in scope 0 at ui/deriving/issue-58319.rs:197:5: 197:11
    let _571: &Little;                   // in scope 0 at ui/deriving/issue-58319.rs:197:5: 197:11
    let mut _572: Little;                // in scope 0 at ui/deriving/issue-58319.rs:198:5: 198:11
    let mut _573: &Little;               // in scope 0 at ui/deriving/issue-58319.rs:198:5: 198:11
    let _574: &Little;                   // in scope 0 at ui/deriving/issue-58319.rs:198:5: 198:11
    let mut _575: Little;                // in scope 0 at ui/deriving/issue-58319.rs:199:5: 199:11
    let mut _576: &Little;               // in scope 0 at ui/deriving/issue-58319.rs:199:5: 199:11
    let _577: &Little;                   // in scope 0 at ui/deriving/issue-58319.rs:199:5: 199:11
    let mut _578: Little;                // in scope 0 at ui/deriving/issue-58319.rs:200:5: 200:11
    let mut _579: &Little;               // in scope 0 at ui/deriving/issue-58319.rs:200:5: 200:11
    let _580: &Little;                   // in scope 0 at ui/deriving/issue-58319.rs:200:5: 200:11
    let mut _581: Little;                // in scope 0 at ui/deriving/issue-58319.rs:201:5: 201:11
    let mut _582: &Little;               // in scope 0 at ui/deriving/issue-58319.rs:201:5: 201:11
    let _583: &Little;                   // in scope 0 at ui/deriving/issue-58319.rs:201:5: 201:11
    let mut _584: Little;                // in scope 0 at ui/deriving/issue-58319.rs:202:5: 202:11
    let mut _585: &Little;               // in scope 0 at ui/deriving/issue-58319.rs:202:5: 202:11
    let _586: &Little;                   // in scope 0 at ui/deriving/issue-58319.rs:202:5: 202:11
    let mut _587: Little;                // in scope 0 at ui/deriving/issue-58319.rs:203:5: 203:11
    let mut _588: &Little;               // in scope 0 at ui/deriving/issue-58319.rs:203:5: 203:11
    let _589: &Little;                   // in scope 0 at ui/deriving/issue-58319.rs:203:5: 203:11
    let mut _590: Little;                // in scope 0 at ui/deriving/issue-58319.rs:204:5: 204:11
    let mut _591: &Little;               // in scope 0 at ui/deriving/issue-58319.rs:204:5: 204:11
    let _592: &Little;                   // in scope 0 at ui/deriving/issue-58319.rs:204:5: 204:11
    let mut _593: Little;                // in scope 0 at ui/deriving/issue-58319.rs:205:5: 205:11
    let mut _594: &Little;               // in scope 0 at ui/deriving/issue-58319.rs:205:5: 205:11
    let _595: &Little;                   // in scope 0 at ui/deriving/issue-58319.rs:205:5: 205:11
    let mut _596: Little;                // in scope 0 at ui/deriving/issue-58319.rs:206:5: 206:11
    let mut _597: &Little;               // in scope 0 at ui/deriving/issue-58319.rs:206:5: 206:11
    let _598: &Little;                   // in scope 0 at ui/deriving/issue-58319.rs:206:5: 206:11
    let mut _599: Little;                // in scope 0 at ui/deriving/issue-58319.rs:207:5: 207:11
    let mut _600: &Little;               // in scope 0 at ui/deriving/issue-58319.rs:207:5: 207:11
    let _601: &Little;                   // in scope 0 at ui/deriving/issue-58319.rs:207:5: 207:11
    let mut _602: Little;                // in scope 0 at ui/deriving/issue-58319.rs:208:5: 208:11
    let mut _603: &Little;               // in scope 0 at ui/deriving/issue-58319.rs:208:5: 208:11
    let _604: &Little;                   // in scope 0 at ui/deriving/issue-58319.rs:208:5: 208:11
    let mut _605: Little;                // in scope 0 at ui/deriving/issue-58319.rs:209:5: 209:11
    let mut _606: &Little;               // in scope 0 at ui/deriving/issue-58319.rs:209:5: 209:11
    let _607: &Little;                   // in scope 0 at ui/deriving/issue-58319.rs:209:5: 209:11
    let mut _608: Little;                // in scope 0 at ui/deriving/issue-58319.rs:210:5: 210:11
    let mut _609: &Little;               // in scope 0 at ui/deriving/issue-58319.rs:210:5: 210:11
    let _610: &Little;                   // in scope 0 at ui/deriving/issue-58319.rs:210:5: 210:11
    let mut _611: Little;                // in scope 0 at ui/deriving/issue-58319.rs:211:5: 211:11
    let mut _612: &Little;               // in scope 0 at ui/deriving/issue-58319.rs:211:5: 211:11
    let _613: &Little;                   // in scope 0 at ui/deriving/issue-58319.rs:211:5: 211:11
    let mut _614: Little;                // in scope 0 at ui/deriving/issue-58319.rs:212:5: 212:11
    let mut _615: &Little;               // in scope 0 at ui/deriving/issue-58319.rs:212:5: 212:11
    let _616: &Little;                   // in scope 0 at ui/deriving/issue-58319.rs:212:5: 212:11
    let mut _617: Little;                // in scope 0 at ui/deriving/issue-58319.rs:213:5: 213:11
    let mut _618: &Little;               // in scope 0 at ui/deriving/issue-58319.rs:213:5: 213:11
    let _619: &Little;                   // in scope 0 at ui/deriving/issue-58319.rs:213:5: 213:11
    let mut _620: Little;                // in scope 0 at ui/deriving/issue-58319.rs:214:5: 214:11
    let mut _621: &Little;               // in scope 0 at ui/deriving/issue-58319.rs:214:5: 214:11
    let _622: &Little;                   // in scope 0 at ui/deriving/issue-58319.rs:214:5: 214:11
    let mut _623: Little;                // in scope 0 at ui/deriving/issue-58319.rs:215:5: 215:11
    let mut _624: &Little;               // in scope 0 at ui/deriving/issue-58319.rs:215:5: 215:11
    let _625: &Little;                   // in scope 0 at ui/deriving/issue-58319.rs:215:5: 215:11
    let mut _626: Little;                // in scope 0 at ui/deriving/issue-58319.rs:216:5: 216:11
    let mut _627: &Little;               // in scope 0 at ui/deriving/issue-58319.rs:216:5: 216:11
    let _628: &Little;                   // in scope 0 at ui/deriving/issue-58319.rs:216:5: 216:11
    let mut _629: Little;                // in scope 0 at ui/deriving/issue-58319.rs:217:5: 217:11
    let mut _630: &Little;               // in scope 0 at ui/deriving/issue-58319.rs:217:5: 217:11
    let _631: &Little;                   // in scope 0 at ui/deriving/issue-58319.rs:217:5: 217:11
    let mut _632: Little;                // in scope 0 at ui/deriving/issue-58319.rs:218:5: 218:11
    let mut _633: &Little;               // in scope 0 at ui/deriving/issue-58319.rs:218:5: 218:11
    let _634: &Little;                   // in scope 0 at ui/deriving/issue-58319.rs:218:5: 218:11
    let mut _635: Little;                // in scope 0 at ui/deriving/issue-58319.rs:219:5: 219:11
    let mut _636: &Little;               // in scope 0 at ui/deriving/issue-58319.rs:219:5: 219:11
    let _637: &Little;                   // in scope 0 at ui/deriving/issue-58319.rs:219:5: 219:11
    let mut _638: Little;                // in scope 0 at ui/deriving/issue-58319.rs:220:5: 220:11
    let mut _639: &Little;               // in scope 0 at ui/deriving/issue-58319.rs:220:5: 220:11
    let _640: &Little;                   // in scope 0 at ui/deriving/issue-58319.rs:220:5: 220:11
    let mut _641: Little;                // in scope 0 at ui/deriving/issue-58319.rs:221:5: 221:11
    let mut _642: &Little;               // in scope 0 at ui/deriving/issue-58319.rs:221:5: 221:11
    let _643: &Little;                   // in scope 0 at ui/deriving/issue-58319.rs:221:5: 221:11
    let mut _644: Little;                // in scope 0 at ui/deriving/issue-58319.rs:222:5: 222:11
    let mut _645: &Little;               // in scope 0 at ui/deriving/issue-58319.rs:222:5: 222:11
    let _646: &Little;                   // in scope 0 at ui/deriving/issue-58319.rs:222:5: 222:11
    let mut _647: Little;                // in scope 0 at ui/deriving/issue-58319.rs:223:5: 223:11
    let mut _648: &Little;               // in scope 0 at ui/deriving/issue-58319.rs:223:5: 223:11
    let _649: &Little;                   // in scope 0 at ui/deriving/issue-58319.rs:223:5: 223:11
    let mut _650: Little;                // in scope 0 at ui/deriving/issue-58319.rs:224:5: 224:11
    let mut _651: &Little;               // in scope 0 at ui/deriving/issue-58319.rs:224:5: 224:11
    let _652: &Little;                   // in scope 0 at ui/deriving/issue-58319.rs:224:5: 224:11
    let mut _653: Little;                // in scope 0 at ui/deriving/issue-58319.rs:225:5: 225:11
    let mut _654: &Little;               // in scope 0 at ui/deriving/issue-58319.rs:225:5: 225:11
    let _655: &Little;                   // in scope 0 at ui/deriving/issue-58319.rs:225:5: 225:11
    let mut _656: Little;                // in scope 0 at ui/deriving/issue-58319.rs:226:5: 226:11
    let mut _657: &Little;               // in scope 0 at ui/deriving/issue-58319.rs:226:5: 226:11
    let _658: &Little;                   // in scope 0 at ui/deriving/issue-58319.rs:226:5: 226:11
    let mut _659: Little;                // in scope 0 at ui/deriving/issue-58319.rs:227:5: 227:11
    let mut _660: &Little;               // in scope 0 at ui/deriving/issue-58319.rs:227:5: 227:11
    let _661: &Little;                   // in scope 0 at ui/deriving/issue-58319.rs:227:5: 227:11
    let mut _662: Little;                // in scope 0 at ui/deriving/issue-58319.rs:228:5: 228:11
    let mut _663: &Little;               // in scope 0 at ui/deriving/issue-58319.rs:228:5: 228:11
    let _664: &Little;                   // in scope 0 at ui/deriving/issue-58319.rs:228:5: 228:11
    let mut _665: Little;                // in scope 0 at ui/deriving/issue-58319.rs:229:5: 229:11
    let mut _666: &Little;               // in scope 0 at ui/deriving/issue-58319.rs:229:5: 229:11
    let _667: &Little;                   // in scope 0 at ui/deriving/issue-58319.rs:229:5: 229:11
    let mut _668: Little;                // in scope 0 at ui/deriving/issue-58319.rs:230:5: 230:11
    let mut _669: &Little;               // in scope 0 at ui/deriving/issue-58319.rs:230:5: 230:11
    let _670: &Little;                   // in scope 0 at ui/deriving/issue-58319.rs:230:5: 230:11
    let mut _671: Little;                // in scope 0 at ui/deriving/issue-58319.rs:231:5: 231:11
    let mut _672: &Little;               // in scope 0 at ui/deriving/issue-58319.rs:231:5: 231:11
    let _673: &Little;                   // in scope 0 at ui/deriving/issue-58319.rs:231:5: 231:11
    let mut _674: Little;                // in scope 0 at ui/deriving/issue-58319.rs:232:5: 232:11
    let mut _675: &Little;               // in scope 0 at ui/deriving/issue-58319.rs:232:5: 232:11
    let _676: &Little;                   // in scope 0 at ui/deriving/issue-58319.rs:232:5: 232:11
    let mut _677: Little;                // in scope 0 at ui/deriving/issue-58319.rs:233:5: 233:11
    let mut _678: &Little;               // in scope 0 at ui/deriving/issue-58319.rs:233:5: 233:11
    let _679: &Little;                   // in scope 0 at ui/deriving/issue-58319.rs:233:5: 233:11
    let mut _680: Little;                // in scope 0 at ui/deriving/issue-58319.rs:234:5: 234:11
    let mut _681: &Little;               // in scope 0 at ui/deriving/issue-58319.rs:234:5: 234:11
    let _682: &Little;                   // in scope 0 at ui/deriving/issue-58319.rs:234:5: 234:11
    let mut _683: Little;                // in scope 0 at ui/deriving/issue-58319.rs:235:5: 235:11
    let mut _684: &Little;               // in scope 0 at ui/deriving/issue-58319.rs:235:5: 235:11
    let _685: &Little;                   // in scope 0 at ui/deriving/issue-58319.rs:235:5: 235:11
    let mut _686: Little;                // in scope 0 at ui/deriving/issue-58319.rs:236:5: 236:11
    let mut _687: &Little;               // in scope 0 at ui/deriving/issue-58319.rs:236:5: 236:11
    let _688: &Little;                   // in scope 0 at ui/deriving/issue-58319.rs:236:5: 236:11
    let mut _689: Little;                // in scope 0 at ui/deriving/issue-58319.rs:237:5: 237:11
    let mut _690: &Little;               // in scope 0 at ui/deriving/issue-58319.rs:237:5: 237:11
    let _691: &Little;                   // in scope 0 at ui/deriving/issue-58319.rs:237:5: 237:11
    let mut _692: Little;                // in scope 0 at ui/deriving/issue-58319.rs:238:5: 238:11
    let mut _693: &Little;               // in scope 0 at ui/deriving/issue-58319.rs:238:5: 238:11
    let _694: &Little;                   // in scope 0 at ui/deriving/issue-58319.rs:238:5: 238:11
    let mut _695: Little;                // in scope 0 at ui/deriving/issue-58319.rs:239:5: 239:11
    let mut _696: &Little;               // in scope 0 at ui/deriving/issue-58319.rs:239:5: 239:11
    let _697: &Little;                   // in scope 0 at ui/deriving/issue-58319.rs:239:5: 239:11
    let mut _698: Little;                // in scope 0 at ui/deriving/issue-58319.rs:240:5: 240:11
    let mut _699: &Little;               // in scope 0 at ui/deriving/issue-58319.rs:240:5: 240:11
    let _700: &Little;                   // in scope 0 at ui/deriving/issue-58319.rs:240:5: 240:11
    let mut _701: Little;                // in scope 0 at ui/deriving/issue-58319.rs:241:5: 241:11
    let mut _702: &Little;               // in scope 0 at ui/deriving/issue-58319.rs:241:5: 241:11
    let _703: &Little;                   // in scope 0 at ui/deriving/issue-58319.rs:241:5: 241:11
    let mut _704: Little;                // in scope 0 at ui/deriving/issue-58319.rs:242:5: 242:11
    let mut _705: &Little;               // in scope 0 at ui/deriving/issue-58319.rs:242:5: 242:11
    let _706: &Little;                   // in scope 0 at ui/deriving/issue-58319.rs:242:5: 242:11
    let mut _707: Little;                // in scope 0 at ui/deriving/issue-58319.rs:243:5: 243:11
    let mut _708: &Little;               // in scope 0 at ui/deriving/issue-58319.rs:243:5: 243:11
    let _709: &Little;                   // in scope 0 at ui/deriving/issue-58319.rs:243:5: 243:11
    let mut _710: Little;                // in scope 0 at ui/deriving/issue-58319.rs:244:5: 244:11
    let mut _711: &Little;               // in scope 0 at ui/deriving/issue-58319.rs:244:5: 244:11
    let _712: &Little;                   // in scope 0 at ui/deriving/issue-58319.rs:244:5: 244:11
    let mut _713: Little;                // in scope 0 at ui/deriving/issue-58319.rs:245:5: 245:11
    let mut _714: &Little;               // in scope 0 at ui/deriving/issue-58319.rs:245:5: 245:11
    let _715: &Little;                   // in scope 0 at ui/deriving/issue-58319.rs:245:5: 245:11
    let mut _716: Little;                // in scope 0 at ui/deriving/issue-58319.rs:246:5: 246:11
    let mut _717: &Little;               // in scope 0 at ui/deriving/issue-58319.rs:246:5: 246:11
    let _718: &Little;                   // in scope 0 at ui/deriving/issue-58319.rs:246:5: 246:11
    let mut _719: Little;                // in scope 0 at ui/deriving/issue-58319.rs:247:5: 247:11
    let mut _720: &Little;               // in scope 0 at ui/deriving/issue-58319.rs:247:5: 247:11
    let _721: &Little;                   // in scope 0 at ui/deriving/issue-58319.rs:247:5: 247:11
    let mut _722: Little;                // in scope 0 at ui/deriving/issue-58319.rs:248:5: 248:11
    let mut _723: &Little;               // in scope 0 at ui/deriving/issue-58319.rs:248:5: 248:11
    let _724: &Little;                   // in scope 0 at ui/deriving/issue-58319.rs:248:5: 248:11
    let mut _725: Little;                // in scope 0 at ui/deriving/issue-58319.rs:249:5: 249:11
    let mut _726: &Little;               // in scope 0 at ui/deriving/issue-58319.rs:249:5: 249:11
    let _727: &Little;                   // in scope 0 at ui/deriving/issue-58319.rs:249:5: 249:11
    let mut _728: Little;                // in scope 0 at ui/deriving/issue-58319.rs:250:5: 250:11
    let mut _729: &Little;               // in scope 0 at ui/deriving/issue-58319.rs:250:5: 250:11
    let _730: &Little;                   // in scope 0 at ui/deriving/issue-58319.rs:250:5: 250:11
    let mut _731: Little;                // in scope 0 at ui/deriving/issue-58319.rs:251:5: 251:11
    let mut _732: &Little;               // in scope 0 at ui/deriving/issue-58319.rs:251:5: 251:11
    let _733: &Little;                   // in scope 0 at ui/deriving/issue-58319.rs:251:5: 251:11
    let mut _734: Little;                // in scope 0 at ui/deriving/issue-58319.rs:252:5: 252:11
    let mut _735: &Little;               // in scope 0 at ui/deriving/issue-58319.rs:252:5: 252:11
    let _736: &Little;                   // in scope 0 at ui/deriving/issue-58319.rs:252:5: 252:11
    let mut _737: Little;                // in scope 0 at ui/deriving/issue-58319.rs:253:5: 253:11
    let mut _738: &Little;               // in scope 0 at ui/deriving/issue-58319.rs:253:5: 253:11
    let _739: &Little;                   // in scope 0 at ui/deriving/issue-58319.rs:253:5: 253:11
    let mut _740: Little;                // in scope 0 at ui/deriving/issue-58319.rs:254:5: 254:11
    let mut _741: &Little;               // in scope 0 at ui/deriving/issue-58319.rs:254:5: 254:11
    let _742: &Little;                   // in scope 0 at ui/deriving/issue-58319.rs:254:5: 254:11
    let mut _743: Little;                // in scope 0 at ui/deriving/issue-58319.rs:255:5: 255:11
    let mut _744: &Little;               // in scope 0 at ui/deriving/issue-58319.rs:255:5: 255:11
    let _745: &Little;                   // in scope 0 at ui/deriving/issue-58319.rs:255:5: 255:11
    let mut _746: Little;                // in scope 0 at ui/deriving/issue-58319.rs:256:5: 256:11
    let mut _747: &Little;               // in scope 0 at ui/deriving/issue-58319.rs:256:5: 256:11
    let _748: &Little;                   // in scope 0 at ui/deriving/issue-58319.rs:256:5: 256:11
    let mut _749: Little;                // in scope 0 at ui/deriving/issue-58319.rs:257:5: 257:11
    let mut _750: &Little;               // in scope 0 at ui/deriving/issue-58319.rs:257:5: 257:11
    let _751: &Little;                   // in scope 0 at ui/deriving/issue-58319.rs:257:5: 257:11
    let mut _752: Little;                // in scope 0 at ui/deriving/issue-58319.rs:258:5: 258:11
    let mut _753: &Little;               // in scope 0 at ui/deriving/issue-58319.rs:258:5: 258:11
    let _754: &Little;                   // in scope 0 at ui/deriving/issue-58319.rs:258:5: 258:11
    let mut _755: Little;                // in scope 0 at ui/deriving/issue-58319.rs:259:5: 259:11
    let mut _756: &Little;               // in scope 0 at ui/deriving/issue-58319.rs:259:5: 259:11
    let _757: &Little;                   // in scope 0 at ui/deriving/issue-58319.rs:259:5: 259:11
    let mut _758: Little;                // in scope 0 at ui/deriving/issue-58319.rs:260:5: 260:11
    let mut _759: &Little;               // in scope 0 at ui/deriving/issue-58319.rs:260:5: 260:11
    let _760: &Little;                   // in scope 0 at ui/deriving/issue-58319.rs:260:5: 260:11
    let mut _761: Little;                // in scope 0 at ui/deriving/issue-58319.rs:261:5: 261:11
    let mut _762: &Little;               // in scope 0 at ui/deriving/issue-58319.rs:261:5: 261:11
    let _763: &Little;                   // in scope 0 at ui/deriving/issue-58319.rs:261:5: 261:11
    let mut _764: Little;                // in scope 0 at ui/deriving/issue-58319.rs:262:5: 262:11
    let mut _765: &Little;               // in scope 0 at ui/deriving/issue-58319.rs:262:5: 262:11
    let _766: &Little;                   // in scope 0 at ui/deriving/issue-58319.rs:262:5: 262:11
    let mut _767: Little;                // in scope 0 at ui/deriving/issue-58319.rs:263:5: 263:11
    let mut _768: &Little;               // in scope 0 at ui/deriving/issue-58319.rs:263:5: 263:11
    let _769: &Little;                   // in scope 0 at ui/deriving/issue-58319.rs:263:5: 263:11
    let mut _770: Little;                // in scope 0 at ui/deriving/issue-58319.rs:264:5: 264:11
    let mut _771: &Little;               // in scope 0 at ui/deriving/issue-58319.rs:264:5: 264:11
    let _772: &Little;                   // in scope 0 at ui/deriving/issue-58319.rs:264:5: 264:11
    let mut _773: Little;                // in scope 0 at ui/deriving/issue-58319.rs:265:5: 265:11
    let mut _774: &Little;               // in scope 0 at ui/deriving/issue-58319.rs:265:5: 265:11
    let _775: &Little;                   // in scope 0 at ui/deriving/issue-58319.rs:265:5: 265:11
    let mut _776: Little;                // in scope 0 at ui/deriving/issue-58319.rs:266:5: 266:11
    let mut _777: &Little;               // in scope 0 at ui/deriving/issue-58319.rs:266:5: 266:11
    let _778: &Little;                   // in scope 0 at ui/deriving/issue-58319.rs:266:5: 266:11
    let mut _779: Little;                // in scope 0 at ui/deriving/issue-58319.rs:267:5: 267:11
    let mut _780: &Little;               // in scope 0 at ui/deriving/issue-58319.rs:267:5: 267:11
    let _781: &Little;                   // in scope 0 at ui/deriving/issue-58319.rs:267:5: 267:11
    let mut _782: Little;                // in scope 0 at ui/deriving/issue-58319.rs:268:5: 268:11
    let mut _783: &Little;               // in scope 0 at ui/deriving/issue-58319.rs:268:5: 268:11
    let _784: &Little;                   // in scope 0 at ui/deriving/issue-58319.rs:268:5: 268:11
    let mut _785: Little;                // in scope 0 at ui/deriving/issue-58319.rs:269:5: 269:11
    let mut _786: &Little;               // in scope 0 at ui/deriving/issue-58319.rs:269:5: 269:11
    let _787: &Little;                   // in scope 0 at ui/deriving/issue-58319.rs:269:5: 269:11
    let mut _788: Little;                // in scope 0 at ui/deriving/issue-58319.rs:270:5: 270:11
    let mut _789: &Little;               // in scope 0 at ui/deriving/issue-58319.rs:270:5: 270:11
    let _790: &Little;                   // in scope 0 at ui/deriving/issue-58319.rs:270:5: 270:11
    let mut _791: Little;                // in scope 0 at ui/deriving/issue-58319.rs:271:5: 271:11
    let mut _792: &Little;               // in scope 0 at ui/deriving/issue-58319.rs:271:5: 271:11
    let _793: &Little;                   // in scope 0 at ui/deriving/issue-58319.rs:271:5: 271:11
    let mut _794: Little;                // in scope 0 at ui/deriving/issue-58319.rs:272:5: 272:11
    let mut _795: &Little;               // in scope 0 at ui/deriving/issue-58319.rs:272:5: 272:11
    let _796: &Little;                   // in scope 0 at ui/deriving/issue-58319.rs:272:5: 272:11
    let mut _797: Little;                // in scope 0 at ui/deriving/issue-58319.rs:273:5: 273:11
    let mut _798: &Little;               // in scope 0 at ui/deriving/issue-58319.rs:273:5: 273:11
    let _799: &Little;                   // in scope 0 at ui/deriving/issue-58319.rs:273:5: 273:11
    let mut _800: Little;                // in scope 0 at ui/deriving/issue-58319.rs:274:5: 274:11
    let mut _801: &Little;               // in scope 0 at ui/deriving/issue-58319.rs:274:5: 274:11
    let _802: &Little;                   // in scope 0 at ui/deriving/issue-58319.rs:274:5: 274:11
    let mut _803: Little;                // in scope 0 at ui/deriving/issue-58319.rs:275:5: 275:11
    let mut _804: &Little;               // in scope 0 at ui/deriving/issue-58319.rs:275:5: 275:11
    let _805: &Little;                   // in scope 0 at ui/deriving/issue-58319.rs:275:5: 275:11
    let mut _806: Little;                // in scope 0 at ui/deriving/issue-58319.rs:276:5: 276:11
    let mut _807: &Little;               // in scope 0 at ui/deriving/issue-58319.rs:276:5: 276:11
    let _808: &Little;                   // in scope 0 at ui/deriving/issue-58319.rs:276:5: 276:11
    let mut _809: Little;                // in scope 0 at ui/deriving/issue-58319.rs:277:5: 277:11
    let mut _810: &Little;               // in scope 0 at ui/deriving/issue-58319.rs:277:5: 277:11
    let _811: &Little;                   // in scope 0 at ui/deriving/issue-58319.rs:277:5: 277:11
    let mut _812: Little;                // in scope 0 at ui/deriving/issue-58319.rs:278:5: 278:11
    let mut _813: &Little;               // in scope 0 at ui/deriving/issue-58319.rs:278:5: 278:11
    let _814: &Little;                   // in scope 0 at ui/deriving/issue-58319.rs:278:5: 278:11
    let mut _815: Little;                // in scope 0 at ui/deriving/issue-58319.rs:279:5: 279:11
    let mut _816: &Little;               // in scope 0 at ui/deriving/issue-58319.rs:279:5: 279:11
    let _817: &Little;                   // in scope 0 at ui/deriving/issue-58319.rs:279:5: 279:11
    let mut _818: Little;                // in scope 0 at ui/deriving/issue-58319.rs:280:5: 280:11
    let mut _819: &Little;               // in scope 0 at ui/deriving/issue-58319.rs:280:5: 280:11
    let _820: &Little;                   // in scope 0 at ui/deriving/issue-58319.rs:280:5: 280:11
    let mut _821: Little;                // in scope 0 at ui/deriving/issue-58319.rs:281:5: 281:11
    let mut _822: &Little;               // in scope 0 at ui/deriving/issue-58319.rs:281:5: 281:11
    let _823: &Little;                   // in scope 0 at ui/deriving/issue-58319.rs:281:5: 281:11
    let mut _824: Little;                // in scope 0 at ui/deriving/issue-58319.rs:282:5: 282:11
    let mut _825: &Little;               // in scope 0 at ui/deriving/issue-58319.rs:282:5: 282:11
    let _826: &Little;                   // in scope 0 at ui/deriving/issue-58319.rs:282:5: 282:11
    let mut _827: Little;                // in scope 0 at ui/deriving/issue-58319.rs:283:5: 283:11
    let mut _828: &Little;               // in scope 0 at ui/deriving/issue-58319.rs:283:5: 283:11
    let _829: &Little;                   // in scope 0 at ui/deriving/issue-58319.rs:283:5: 283:11
    let mut _830: Little;                // in scope 0 at ui/deriving/issue-58319.rs:284:5: 284:11
    let mut _831: &Little;               // in scope 0 at ui/deriving/issue-58319.rs:284:5: 284:11
    let _832: &Little;                   // in scope 0 at ui/deriving/issue-58319.rs:284:5: 284:11
    let mut _833: Little;                // in scope 0 at ui/deriving/issue-58319.rs:285:5: 285:11
    let mut _834: &Little;               // in scope 0 at ui/deriving/issue-58319.rs:285:5: 285:11
    let _835: &Little;                   // in scope 0 at ui/deriving/issue-58319.rs:285:5: 285:11
    let mut _836: Little;                // in scope 0 at ui/deriving/issue-58319.rs:286:5: 286:11
    let mut _837: &Little;               // in scope 0 at ui/deriving/issue-58319.rs:286:5: 286:11
    let _838: &Little;                   // in scope 0 at ui/deriving/issue-58319.rs:286:5: 286:11
    let mut _839: Little;                // in scope 0 at ui/deriving/issue-58319.rs:287:5: 287:11
    let mut _840: &Little;               // in scope 0 at ui/deriving/issue-58319.rs:287:5: 287:11
    let _841: &Little;                   // in scope 0 at ui/deriving/issue-58319.rs:287:5: 287:11
    let mut _842: Little;                // in scope 0 at ui/deriving/issue-58319.rs:288:5: 288:11
    let mut _843: &Little;               // in scope 0 at ui/deriving/issue-58319.rs:288:5: 288:11
    let _844: &Little;                   // in scope 0 at ui/deriving/issue-58319.rs:288:5: 288:11
    let mut _845: Little;                // in scope 0 at ui/deriving/issue-58319.rs:289:5: 289:11
    let mut _846: &Little;               // in scope 0 at ui/deriving/issue-58319.rs:289:5: 289:11
    let _847: &Little;                   // in scope 0 at ui/deriving/issue-58319.rs:289:5: 289:11
    let mut _848: Little;                // in scope 0 at ui/deriving/issue-58319.rs:290:5: 290:11
    let mut _849: &Little;               // in scope 0 at ui/deriving/issue-58319.rs:290:5: 290:11
    let _850: &Little;                   // in scope 0 at ui/deriving/issue-58319.rs:290:5: 290:11
    let mut _851: Little;                // in scope 0 at ui/deriving/issue-58319.rs:291:5: 291:11
    let mut _852: &Little;               // in scope 0 at ui/deriving/issue-58319.rs:291:5: 291:11
    let _853: &Little;                   // in scope 0 at ui/deriving/issue-58319.rs:291:5: 291:11
    let mut _854: Little;                // in scope 0 at ui/deriving/issue-58319.rs:292:5: 292:11
    let mut _855: &Little;               // in scope 0 at ui/deriving/issue-58319.rs:292:5: 292:11
    let _856: &Little;                   // in scope 0 at ui/deriving/issue-58319.rs:292:5: 292:11
    let mut _857: Little;                // in scope 0 at ui/deriving/issue-58319.rs:293:5: 293:11
    let mut _858: &Little;               // in scope 0 at ui/deriving/issue-58319.rs:293:5: 293:11
    let _859: &Little;                   // in scope 0 at ui/deriving/issue-58319.rs:293:5: 293:11
    let mut _860: Little;                // in scope 0 at ui/deriving/issue-58319.rs:294:5: 294:11
    let mut _861: &Little;               // in scope 0 at ui/deriving/issue-58319.rs:294:5: 294:11
    let _862: &Little;                   // in scope 0 at ui/deriving/issue-58319.rs:294:5: 294:11
    let mut _863: Little;                // in scope 0 at ui/deriving/issue-58319.rs:295:5: 295:11
    let mut _864: &Little;               // in scope 0 at ui/deriving/issue-58319.rs:295:5: 295:11
    let _865: &Little;                   // in scope 0 at ui/deriving/issue-58319.rs:295:5: 295:11
    let mut _866: Little;                // in scope 0 at ui/deriving/issue-58319.rs:296:5: 296:11
    let mut _867: &Little;               // in scope 0 at ui/deriving/issue-58319.rs:296:5: 296:11
    let _868: &Little;                   // in scope 0 at ui/deriving/issue-58319.rs:296:5: 296:11
    let mut _869: Little;                // in scope 0 at ui/deriving/issue-58319.rs:297:5: 297:11
    let mut _870: &Little;               // in scope 0 at ui/deriving/issue-58319.rs:297:5: 297:11
    let _871: &Little;                   // in scope 0 at ui/deriving/issue-58319.rs:297:5: 297:11
    let mut _872: Little;                // in scope 0 at ui/deriving/issue-58319.rs:298:5: 298:11
    let mut _873: &Little;               // in scope 0 at ui/deriving/issue-58319.rs:298:5: 298:11
    let _874: &Little;                   // in scope 0 at ui/deriving/issue-58319.rs:298:5: 298:11
    let mut _875: Little;                // in scope 0 at ui/deriving/issue-58319.rs:299:5: 299:11
    let mut _876: &Little;               // in scope 0 at ui/deriving/issue-58319.rs:299:5: 299:11
    let _877: &Little;                   // in scope 0 at ui/deriving/issue-58319.rs:299:5: 299:11
    let mut _878: Little;                // in scope 0 at ui/deriving/issue-58319.rs:300:5: 300:11
    let mut _879: &Little;               // in scope 0 at ui/deriving/issue-58319.rs:300:5: 300:11
    let _880: &Little;                   // in scope 0 at ui/deriving/issue-58319.rs:300:5: 300:11
    let mut _881: Little;                // in scope 0 at ui/deriving/issue-58319.rs:301:5: 301:11
    let mut _882: &Little;               // in scope 0 at ui/deriving/issue-58319.rs:301:5: 301:11
    let _883: &Little;                   // in scope 0 at ui/deriving/issue-58319.rs:301:5: 301:11
    let mut _884: Little;                // in scope 0 at ui/deriving/issue-58319.rs:302:5: 302:11
    let mut _885: &Little;               // in scope 0 at ui/deriving/issue-58319.rs:302:5: 302:11
    let _886: &Little;                   // in scope 0 at ui/deriving/issue-58319.rs:302:5: 302:11
    let mut _887: Little;                // in scope 0 at ui/deriving/issue-58319.rs:303:5: 303:11
    let mut _888: &Little;               // in scope 0 at ui/deriving/issue-58319.rs:303:5: 303:11
    let _889: &Little;                   // in scope 0 at ui/deriving/issue-58319.rs:303:5: 303:11
    let mut _890: Little;                // in scope 0 at ui/deriving/issue-58319.rs:304:5: 304:11
    let mut _891: &Little;               // in scope 0 at ui/deriving/issue-58319.rs:304:5: 304:11
    let _892: &Little;                   // in scope 0 at ui/deriving/issue-58319.rs:304:5: 304:11
    let mut _893: Little;                // in scope 0 at ui/deriving/issue-58319.rs:305:5: 305:11
    let mut _894: &Little;               // in scope 0 at ui/deriving/issue-58319.rs:305:5: 305:11
    let _895: &Little;                   // in scope 0 at ui/deriving/issue-58319.rs:305:5: 305:11
    let mut _896: Little;                // in scope 0 at ui/deriving/issue-58319.rs:306:5: 306:11
    let mut _897: &Little;               // in scope 0 at ui/deriving/issue-58319.rs:306:5: 306:11
    let _898: &Little;                   // in scope 0 at ui/deriving/issue-58319.rs:306:5: 306:11
    let mut _899: Little;                // in scope 0 at ui/deriving/issue-58319.rs:307:5: 307:11
    let mut _900: &Little;               // in scope 0 at ui/deriving/issue-58319.rs:307:5: 307:11
    let _901: &Little;                   // in scope 0 at ui/deriving/issue-58319.rs:307:5: 307:11
    let mut _902: Little;                // in scope 0 at ui/deriving/issue-58319.rs:308:5: 308:11
    let mut _903: &Little;               // in scope 0 at ui/deriving/issue-58319.rs:308:5: 308:11
    let _904: &Little;                   // in scope 0 at ui/deriving/issue-58319.rs:308:5: 308:11
    let mut _905: Little;                // in scope 0 at ui/deriving/issue-58319.rs:309:5: 309:11
    let mut _906: &Little;               // in scope 0 at ui/deriving/issue-58319.rs:309:5: 309:11
    let _907: &Little;                   // in scope 0 at ui/deriving/issue-58319.rs:309:5: 309:11
    let mut _908: Little;                // in scope 0 at ui/deriving/issue-58319.rs:310:5: 310:11
    let mut _909: &Little;               // in scope 0 at ui/deriving/issue-58319.rs:310:5: 310:11
    let _910: &Little;                   // in scope 0 at ui/deriving/issue-58319.rs:310:5: 310:11
    let mut _911: Little;                // in scope 0 at ui/deriving/issue-58319.rs:311:5: 311:11
    let mut _912: &Little;               // in scope 0 at ui/deriving/issue-58319.rs:311:5: 311:11
    let _913: &Little;                   // in scope 0 at ui/deriving/issue-58319.rs:311:5: 311:11
    let mut _914: Little;                // in scope 0 at ui/deriving/issue-58319.rs:312:5: 312:11
    let mut _915: &Little;               // in scope 0 at ui/deriving/issue-58319.rs:312:5: 312:11
    let _916: &Little;                   // in scope 0 at ui/deriving/issue-58319.rs:312:5: 312:11
    let mut _917: Little;                // in scope 0 at ui/deriving/issue-58319.rs:313:5: 313:11
    let mut _918: &Little;               // in scope 0 at ui/deriving/issue-58319.rs:313:5: 313:11
    let _919: &Little;                   // in scope 0 at ui/deriving/issue-58319.rs:313:5: 313:11
    let mut _920: Little;                // in scope 0 at ui/deriving/issue-58319.rs:314:5: 314:11
    let mut _921: &Little;               // in scope 0 at ui/deriving/issue-58319.rs:314:5: 314:11
    let _922: &Little;                   // in scope 0 at ui/deriving/issue-58319.rs:314:5: 314:11
    let mut _923: Little;                // in scope 0 at ui/deriving/issue-58319.rs:315:5: 315:11
    let mut _924: &Little;               // in scope 0 at ui/deriving/issue-58319.rs:315:5: 315:11
    let _925: &Little;                   // in scope 0 at ui/deriving/issue-58319.rs:315:5: 315:11
    let mut _926: Little;                // in scope 0 at ui/deriving/issue-58319.rs:316:5: 316:11
    let mut _927: &Little;               // in scope 0 at ui/deriving/issue-58319.rs:316:5: 316:11
    let _928: &Little;                   // in scope 0 at ui/deriving/issue-58319.rs:316:5: 316:11
    let mut _929: Little;                // in scope 0 at ui/deriving/issue-58319.rs:317:5: 317:11
    let mut _930: &Little;               // in scope 0 at ui/deriving/issue-58319.rs:317:5: 317:11
    let _931: &Little;                   // in scope 0 at ui/deriving/issue-58319.rs:317:5: 317:11
    let mut _932: Little;                // in scope 0 at ui/deriving/issue-58319.rs:318:5: 318:11
    let mut _933: &Little;               // in scope 0 at ui/deriving/issue-58319.rs:318:5: 318:11
    let _934: &Little;                   // in scope 0 at ui/deriving/issue-58319.rs:318:5: 318:11
    let mut _935: Little;                // in scope 0 at ui/deriving/issue-58319.rs:319:5: 319:11
    let mut _936: &Little;               // in scope 0 at ui/deriving/issue-58319.rs:319:5: 319:11
    let _937: &Little;                   // in scope 0 at ui/deriving/issue-58319.rs:319:5: 319:11
    let mut _938: Little;                // in scope 0 at ui/deriving/issue-58319.rs:320:5: 320:11
    let mut _939: &Little;               // in scope 0 at ui/deriving/issue-58319.rs:320:5: 320:11
    let _940: &Little;                   // in scope 0 at ui/deriving/issue-58319.rs:320:5: 320:11
    let mut _941: Little;                // in scope 0 at ui/deriving/issue-58319.rs:321:5: 321:11
    let mut _942: &Little;               // in scope 0 at ui/deriving/issue-58319.rs:321:5: 321:11
    let _943: &Little;                   // in scope 0 at ui/deriving/issue-58319.rs:321:5: 321:11
    let mut _944: Little;                // in scope 0 at ui/deriving/issue-58319.rs:322:5: 322:11
    let mut _945: &Little;               // in scope 0 at ui/deriving/issue-58319.rs:322:5: 322:11
    let _946: &Little;                   // in scope 0 at ui/deriving/issue-58319.rs:322:5: 322:11
    let mut _947: Little;                // in scope 0 at ui/deriving/issue-58319.rs:323:5: 323:11
    let mut _948: &Little;               // in scope 0 at ui/deriving/issue-58319.rs:323:5: 323:11
    let _949: &Little;                   // in scope 0 at ui/deriving/issue-58319.rs:323:5: 323:11
    let mut _950: Little;                // in scope 0 at ui/deriving/issue-58319.rs:324:5: 324:11
    let mut _951: &Little;               // in scope 0 at ui/deriving/issue-58319.rs:324:5: 324:11
    let _952: &Little;                   // in scope 0 at ui/deriving/issue-58319.rs:324:5: 324:11
    let mut _953: Little;                // in scope 0 at ui/deriving/issue-58319.rs:325:5: 325:11
    let mut _954: &Little;               // in scope 0 at ui/deriving/issue-58319.rs:325:5: 325:11
    let _955: &Little;                   // in scope 0 at ui/deriving/issue-58319.rs:325:5: 325:11
    let mut _956: Little;                // in scope 0 at ui/deriving/issue-58319.rs:326:5: 326:11
    let mut _957: &Little;               // in scope 0 at ui/deriving/issue-58319.rs:326:5: 326:11
    let _958: &Little;                   // in scope 0 at ui/deriving/issue-58319.rs:326:5: 326:11
    let mut _959: Little;                // in scope 0 at ui/deriving/issue-58319.rs:327:5: 327:11
    let mut _960: &Little;               // in scope 0 at ui/deriving/issue-58319.rs:327:5: 327:11
    let _961: &Little;                   // in scope 0 at ui/deriving/issue-58319.rs:327:5: 327:11
    let mut _962: Little;                // in scope 0 at ui/deriving/issue-58319.rs:328:5: 328:11
    let mut _963: &Little;               // in scope 0 at ui/deriving/issue-58319.rs:328:5: 328:11
    let _964: &Little;                   // in scope 0 at ui/deriving/issue-58319.rs:328:5: 328:11
    let mut _965: Little;                // in scope 0 at ui/deriving/issue-58319.rs:329:5: 329:11
    let mut _966: &Little;               // in scope 0 at ui/deriving/issue-58319.rs:329:5: 329:11
    let _967: &Little;                   // in scope 0 at ui/deriving/issue-58319.rs:329:5: 329:11
    let mut _968: Little;                // in scope 0 at ui/deriving/issue-58319.rs:330:5: 330:11
    let mut _969: &Little;               // in scope 0 at ui/deriving/issue-58319.rs:330:5: 330:11
    let _970: &Little;                   // in scope 0 at ui/deriving/issue-58319.rs:330:5: 330:11
    let mut _971: Little;                // in scope 0 at ui/deriving/issue-58319.rs:331:5: 331:11
    let mut _972: &Little;               // in scope 0 at ui/deriving/issue-58319.rs:331:5: 331:11
    let _973: &Little;                   // in scope 0 at ui/deriving/issue-58319.rs:331:5: 331:11
    let mut _974: Little;                // in scope 0 at ui/deriving/issue-58319.rs:332:5: 332:11
    let mut _975: &Little;               // in scope 0 at ui/deriving/issue-58319.rs:332:5: 332:11
    let _976: &Little;                   // in scope 0 at ui/deriving/issue-58319.rs:332:5: 332:11
    let mut _977: Little;                // in scope 0 at ui/deriving/issue-58319.rs:333:5: 333:11
    let mut _978: &Little;               // in scope 0 at ui/deriving/issue-58319.rs:333:5: 333:11
    let _979: &Little;                   // in scope 0 at ui/deriving/issue-58319.rs:333:5: 333:11
    let mut _980: Little;                // in scope 0 at ui/deriving/issue-58319.rs:334:5: 334:11
    let mut _981: &Little;               // in scope 0 at ui/deriving/issue-58319.rs:334:5: 334:11
    let _982: &Little;                   // in scope 0 at ui/deriving/issue-58319.rs:334:5: 334:11
    let mut _983: Little;                // in scope 0 at ui/deriving/issue-58319.rs:335:5: 335:11
    let mut _984: &Little;               // in scope 0 at ui/deriving/issue-58319.rs:335:5: 335:11
    let _985: &Little;                   // in scope 0 at ui/deriving/issue-58319.rs:335:5: 335:11
    let mut _986: Little;                // in scope 0 at ui/deriving/issue-58319.rs:336:5: 336:11
    let mut _987: &Little;               // in scope 0 at ui/deriving/issue-58319.rs:336:5: 336:11
    let _988: &Little;                   // in scope 0 at ui/deriving/issue-58319.rs:336:5: 336:11
    let mut _989: Little;                // in scope 0 at ui/deriving/issue-58319.rs:337:5: 337:11
    let mut _990: &Little;               // in scope 0 at ui/deriving/issue-58319.rs:337:5: 337:11
    let _991: &Little;                   // in scope 0 at ui/deriving/issue-58319.rs:337:5: 337:11
    let mut _992: Little;                // in scope 0 at ui/deriving/issue-58319.rs:338:5: 338:11
    let mut _993: &Little;               // in scope 0 at ui/deriving/issue-58319.rs:338:5: 338:11
    let _994: &Little;                   // in scope 0 at ui/deriving/issue-58319.rs:338:5: 338:11
    let mut _995: Little;                // in scope 0 at ui/deriving/issue-58319.rs:339:5: 339:11
    let mut _996: &Little;               // in scope 0 at ui/deriving/issue-58319.rs:339:5: 339:11
    let _997: &Little;                   // in scope 0 at ui/deriving/issue-58319.rs:339:5: 339:11
    let mut _998: Little;                // in scope 0 at ui/deriving/issue-58319.rs:340:5: 340:11
    let mut _999: &Little;               // in scope 0 at ui/deriving/issue-58319.rs:340:5: 340:11
    let _1000: &Little;                  // in scope 0 at ui/deriving/issue-58319.rs:340:5: 340:11
    let mut _1001: Little;               // in scope 0 at ui/deriving/issue-58319.rs:341:5: 341:11
    let mut _1002: &Little;              // in scope 0 at ui/deriving/issue-58319.rs:341:5: 341:11
    let _1003: &Little;                  // in scope 0 at ui/deriving/issue-58319.rs:341:5: 341:11
    let mut _1004: Little;               // in scope 0 at ui/deriving/issue-58319.rs:342:5: 342:11
    let mut _1005: &Little;              // in scope 0 at ui/deriving/issue-58319.rs:342:5: 342:11
    let _1006: &Little;                  // in scope 0 at ui/deriving/issue-58319.rs:342:5: 342:11
    let mut _1007: Little;               // in scope 0 at ui/deriving/issue-58319.rs:343:5: 343:11
    let mut _1008: &Little;              // in scope 0 at ui/deriving/issue-58319.rs:343:5: 343:11
    let _1009: &Little;                  // in scope 0 at ui/deriving/issue-58319.rs:343:5: 343:11
    let mut _1010: Little;               // in scope 0 at ui/deriving/issue-58319.rs:344:5: 344:11
    let mut _1011: &Little;              // in scope 0 at ui/deriving/issue-58319.rs:344:5: 344:11
    let _1012: &Little;                  // in scope 0 at ui/deriving/issue-58319.rs:344:5: 344:11
    let mut _1013: Little;               // in scope 0 at ui/deriving/issue-58319.rs:345:5: 345:11
    let mut _1014: &Little;              // in scope 0 at ui/deriving/issue-58319.rs:345:5: 345:11
    let _1015: &Little;                  // in scope 0 at ui/deriving/issue-58319.rs:345:5: 345:11
    let mut _1016: Little;               // in scope 0 at ui/deriving/issue-58319.rs:346:5: 346:11
    let mut _1017: &Little;              // in scope 0 at ui/deriving/issue-58319.rs:346:5: 346:11
    let _1018: &Little;                  // in scope 0 at ui/deriving/issue-58319.rs:346:5: 346:11
    let mut _1019: Little;               // in scope 0 at ui/deriving/issue-58319.rs:347:5: 347:11
    let mut _1020: &Little;              // in scope 0 at ui/deriving/issue-58319.rs:347:5: 347:11
    let _1021: &Little;                  // in scope 0 at ui/deriving/issue-58319.rs:347:5: 347:11
    let mut _1022: Little;               // in scope 0 at ui/deriving/issue-58319.rs:348:5: 348:11
    let mut _1023: &Little;              // in scope 0 at ui/deriving/issue-58319.rs:348:5: 348:11
    let _1024: &Little;                  // in scope 0 at ui/deriving/issue-58319.rs:348:5: 348:11
    let mut _1025: Little;               // in scope 0 at ui/deriving/issue-58319.rs:349:5: 349:11
    let mut _1026: &Little;              // in scope 0 at ui/deriving/issue-58319.rs:349:5: 349:11
    let _1027: &Little;                  // in scope 0 at ui/deriving/issue-58319.rs:349:5: 349:11
    let mut _1028: Little;               // in scope 0 at ui/deriving/issue-58319.rs:350:5: 350:11
    let mut _1029: &Little;              // in scope 0 at ui/deriving/issue-58319.rs:350:5: 350:11
    let _1030: &Little;                  // in scope 0 at ui/deriving/issue-58319.rs:350:5: 350:11
    let mut _1031: Little;               // in scope 0 at ui/deriving/issue-58319.rs:351:5: 351:11
    let mut _1032: &Little;              // in scope 0 at ui/deriving/issue-58319.rs:351:5: 351:11
    let _1033: &Little;                  // in scope 0 at ui/deriving/issue-58319.rs:351:5: 351:11
    let mut _1034: Little;               // in scope 0 at ui/deriving/issue-58319.rs:352:5: 352:11
    let mut _1035: &Little;              // in scope 0 at ui/deriving/issue-58319.rs:352:5: 352:11
    let _1036: &Little;                  // in scope 0 at ui/deriving/issue-58319.rs:352:5: 352:11
    let mut _1037: Little;               // in scope 0 at ui/deriving/issue-58319.rs:353:5: 353:11
    let mut _1038: &Little;              // in scope 0 at ui/deriving/issue-58319.rs:353:5: 353:11
    let _1039: &Little;                  // in scope 0 at ui/deriving/issue-58319.rs:353:5: 353:11
    let mut _1040: Little;               // in scope 0 at ui/deriving/issue-58319.rs:354:5: 354:11
    let mut _1041: &Little;              // in scope 0 at ui/deriving/issue-58319.rs:354:5: 354:11
    let _1042: &Little;                  // in scope 0 at ui/deriving/issue-58319.rs:354:5: 354:11
    let mut _1043: Little;               // in scope 0 at ui/deriving/issue-58319.rs:355:5: 355:11
    let mut _1044: &Little;              // in scope 0 at ui/deriving/issue-58319.rs:355:5: 355:11
    let _1045: &Little;                  // in scope 0 at ui/deriving/issue-58319.rs:355:5: 355:11
    let mut _1046: Little;               // in scope 0 at ui/deriving/issue-58319.rs:356:5: 356:11
    let mut _1047: &Little;              // in scope 0 at ui/deriving/issue-58319.rs:356:5: 356:11
    let _1048: &Little;                  // in scope 0 at ui/deriving/issue-58319.rs:356:5: 356:11
    let mut _1049: Little;               // in scope 0 at ui/deriving/issue-58319.rs:357:5: 357:11
    let mut _1050: &Little;              // in scope 0 at ui/deriving/issue-58319.rs:357:5: 357:11
    let _1051: &Little;                  // in scope 0 at ui/deriving/issue-58319.rs:357:5: 357:11
    let mut _1052: Little;               // in scope 0 at ui/deriving/issue-58319.rs:358:5: 358:11
    let mut _1053: &Little;              // in scope 0 at ui/deriving/issue-58319.rs:358:5: 358:11
    let _1054: &Little;                  // in scope 0 at ui/deriving/issue-58319.rs:358:5: 358:11
    let mut _1055: Little;               // in scope 0 at ui/deriving/issue-58319.rs:359:5: 359:11
    let mut _1056: &Little;              // in scope 0 at ui/deriving/issue-58319.rs:359:5: 359:11
    let _1057: &Little;                  // in scope 0 at ui/deriving/issue-58319.rs:359:5: 359:11
    let mut _1058: Little;               // in scope 0 at ui/deriving/issue-58319.rs:360:5: 360:11
    let mut _1059: &Little;              // in scope 0 at ui/deriving/issue-58319.rs:360:5: 360:11
    let _1060: &Little;                  // in scope 0 at ui/deriving/issue-58319.rs:360:5: 360:11
    let mut _1061: Little;               // in scope 0 at ui/deriving/issue-58319.rs:361:5: 361:11
    let mut _1062: &Little;              // in scope 0 at ui/deriving/issue-58319.rs:361:5: 361:11
    let _1063: &Little;                  // in scope 0 at ui/deriving/issue-58319.rs:361:5: 361:11
    let mut _1064: Little;               // in scope 0 at ui/deriving/issue-58319.rs:362:5: 362:11
    let mut _1065: &Little;              // in scope 0 at ui/deriving/issue-58319.rs:362:5: 362:11
    let _1066: &Little;                  // in scope 0 at ui/deriving/issue-58319.rs:362:5: 362:11
    let mut _1067: Little;               // in scope 0 at ui/deriving/issue-58319.rs:363:5: 363:11
    let mut _1068: &Little;              // in scope 0 at ui/deriving/issue-58319.rs:363:5: 363:11
    let _1069: &Little;                  // in scope 0 at ui/deriving/issue-58319.rs:363:5: 363:11
    let mut _1070: Little;               // in scope 0 at ui/deriving/issue-58319.rs:364:5: 364:11
    let mut _1071: &Little;              // in scope 0 at ui/deriving/issue-58319.rs:364:5: 364:11
    let _1072: &Little;                  // in scope 0 at ui/deriving/issue-58319.rs:364:5: 364:11
    let mut _1073: Little;               // in scope 0 at ui/deriving/issue-58319.rs:365:5: 365:11
    let mut _1074: &Little;              // in scope 0 at ui/deriving/issue-58319.rs:365:5: 365:11
    let _1075: &Little;                  // in scope 0 at ui/deriving/issue-58319.rs:365:5: 365:11
    let mut _1076: Little;               // in scope 0 at ui/deriving/issue-58319.rs:366:5: 366:11
    let mut _1077: &Little;              // in scope 0 at ui/deriving/issue-58319.rs:366:5: 366:11
    let _1078: &Little;                  // in scope 0 at ui/deriving/issue-58319.rs:366:5: 366:11
    let mut _1079: Little;               // in scope 0 at ui/deriving/issue-58319.rs:367:5: 367:11
    let mut _1080: &Little;              // in scope 0 at ui/deriving/issue-58319.rs:367:5: 367:11
    let _1081: &Little;                  // in scope 0 at ui/deriving/issue-58319.rs:367:5: 367:11
    let mut _1082: Little;               // in scope 0 at ui/deriving/issue-58319.rs:368:5: 368:11
    let mut _1083: &Little;              // in scope 0 at ui/deriving/issue-58319.rs:368:5: 368:11
    let _1084: &Little;                  // in scope 0 at ui/deriving/issue-58319.rs:368:5: 368:11
    let mut _1085: Little;               // in scope 0 at ui/deriving/issue-58319.rs:369:5: 369:11
    let mut _1086: &Little;              // in scope 0 at ui/deriving/issue-58319.rs:369:5: 369:11
    let _1087: &Little;                  // in scope 0 at ui/deriving/issue-58319.rs:369:5: 369:11
    let mut _1088: Little;               // in scope 0 at ui/deriving/issue-58319.rs:370:5: 370:11
    let mut _1089: &Little;              // in scope 0 at ui/deriving/issue-58319.rs:370:5: 370:11
    let _1090: &Little;                  // in scope 0 at ui/deriving/issue-58319.rs:370:5: 370:11
    let mut _1091: Little;               // in scope 0 at ui/deriving/issue-58319.rs:371:5: 371:11
    let mut _1092: &Little;              // in scope 0 at ui/deriving/issue-58319.rs:371:5: 371:11
    let _1093: &Little;                  // in scope 0 at ui/deriving/issue-58319.rs:371:5: 371:11
    let mut _1094: Little;               // in scope 0 at ui/deriving/issue-58319.rs:372:5: 372:11
    let mut _1095: &Little;              // in scope 0 at ui/deriving/issue-58319.rs:372:5: 372:11
    let _1096: &Little;                  // in scope 0 at ui/deriving/issue-58319.rs:372:5: 372:11
    let mut _1097: Little;               // in scope 0 at ui/deriving/issue-58319.rs:373:5: 373:11
    let mut _1098: &Little;              // in scope 0 at ui/deriving/issue-58319.rs:373:5: 373:11
    let _1099: &Little;                  // in scope 0 at ui/deriving/issue-58319.rs:373:5: 373:11
    let mut _1100: Little;               // in scope 0 at ui/deriving/issue-58319.rs:374:5: 374:11
    let mut _1101: &Little;              // in scope 0 at ui/deriving/issue-58319.rs:374:5: 374:11
    let _1102: &Little;                  // in scope 0 at ui/deriving/issue-58319.rs:374:5: 374:11
    let mut _1103: Little;               // in scope 0 at ui/deriving/issue-58319.rs:375:5: 375:11
    let mut _1104: &Little;              // in scope 0 at ui/deriving/issue-58319.rs:375:5: 375:11
    let _1105: &Little;                  // in scope 0 at ui/deriving/issue-58319.rs:375:5: 375:11
    let mut _1106: Little;               // in scope 0 at ui/deriving/issue-58319.rs:376:5: 376:11
    let mut _1107: &Little;              // in scope 0 at ui/deriving/issue-58319.rs:376:5: 376:11
    let _1108: &Little;                  // in scope 0 at ui/deriving/issue-58319.rs:376:5: 376:11
    let mut _1109: Little;               // in scope 0 at ui/deriving/issue-58319.rs:377:5: 377:11
    let mut _1110: &Little;              // in scope 0 at ui/deriving/issue-58319.rs:377:5: 377:11
    let _1111: &Little;                  // in scope 0 at ui/deriving/issue-58319.rs:377:5: 377:11
    let mut _1112: Little;               // in scope 0 at ui/deriving/issue-58319.rs:378:5: 378:11
    let mut _1113: &Little;              // in scope 0 at ui/deriving/issue-58319.rs:378:5: 378:11
    let _1114: &Little;                  // in scope 0 at ui/deriving/issue-58319.rs:378:5: 378:11
    let mut _1115: Little;               // in scope 0 at ui/deriving/issue-58319.rs:379:5: 379:11
    let mut _1116: &Little;              // in scope 0 at ui/deriving/issue-58319.rs:379:5: 379:11
    let _1117: &Little;                  // in scope 0 at ui/deriving/issue-58319.rs:379:5: 379:11
    let mut _1118: Little;               // in scope 0 at ui/deriving/issue-58319.rs:380:5: 380:11
    let mut _1119: &Little;              // in scope 0 at ui/deriving/issue-58319.rs:380:5: 380:11
    let _1120: &Little;                  // in scope 0 at ui/deriving/issue-58319.rs:380:5: 380:11
    let mut _1121: Little;               // in scope 0 at ui/deriving/issue-58319.rs:381:5: 381:11
    let mut _1122: &Little;              // in scope 0 at ui/deriving/issue-58319.rs:381:5: 381:11
    let _1123: &Little;                  // in scope 0 at ui/deriving/issue-58319.rs:381:5: 381:11
    let mut _1124: Little;               // in scope 0 at ui/deriving/issue-58319.rs:382:5: 382:11
    let mut _1125: &Little;              // in scope 0 at ui/deriving/issue-58319.rs:382:5: 382:11
    let _1126: &Little;                  // in scope 0 at ui/deriving/issue-58319.rs:382:5: 382:11
    let mut _1127: Little;               // in scope 0 at ui/deriving/issue-58319.rs:383:5: 383:11
    let mut _1128: &Little;              // in scope 0 at ui/deriving/issue-58319.rs:383:5: 383:11
    let _1129: &Little;                  // in scope 0 at ui/deriving/issue-58319.rs:383:5: 383:11
    let mut _1130: Little;               // in scope 0 at ui/deriving/issue-58319.rs:384:5: 384:11
    let mut _1131: &Little;              // in scope 0 at ui/deriving/issue-58319.rs:384:5: 384:11
    let _1132: &Little;                  // in scope 0 at ui/deriving/issue-58319.rs:384:5: 384:11
    let mut _1133: Little;               // in scope 0 at ui/deriving/issue-58319.rs:385:5: 385:11
    let mut _1134: &Little;              // in scope 0 at ui/deriving/issue-58319.rs:385:5: 385:11
    let _1135: &Little;                  // in scope 0 at ui/deriving/issue-58319.rs:385:5: 385:11
    let mut _1136: Little;               // in scope 0 at ui/deriving/issue-58319.rs:386:5: 386:11
    let mut _1137: &Little;              // in scope 0 at ui/deriving/issue-58319.rs:386:5: 386:11
    let _1138: &Little;                  // in scope 0 at ui/deriving/issue-58319.rs:386:5: 386:11
    let mut _1139: Little;               // in scope 0 at ui/deriving/issue-58319.rs:387:5: 387:11
    let mut _1140: &Little;              // in scope 0 at ui/deriving/issue-58319.rs:387:5: 387:11
    let _1141: &Little;                  // in scope 0 at ui/deriving/issue-58319.rs:387:5: 387:11
    let mut _1142: Little;               // in scope 0 at ui/deriving/issue-58319.rs:388:5: 388:11
    let mut _1143: &Little;              // in scope 0 at ui/deriving/issue-58319.rs:388:5: 388:11
    let _1144: &Little;                  // in scope 0 at ui/deriving/issue-58319.rs:388:5: 388:11
    let mut _1145: Little;               // in scope 0 at ui/deriving/issue-58319.rs:389:5: 389:11
    let mut _1146: &Little;              // in scope 0 at ui/deriving/issue-58319.rs:389:5: 389:11
    let _1147: &Little;                  // in scope 0 at ui/deriving/issue-58319.rs:389:5: 389:11
    let mut _1148: Little;               // in scope 0 at ui/deriving/issue-58319.rs:390:5: 390:11
    let mut _1149: &Little;              // in scope 0 at ui/deriving/issue-58319.rs:390:5: 390:11
    let _1150: &Little;                  // in scope 0 at ui/deriving/issue-58319.rs:390:5: 390:11
    let mut _1151: Little;               // in scope 0 at ui/deriving/issue-58319.rs:391:5: 391:11
    let mut _1152: &Little;              // in scope 0 at ui/deriving/issue-58319.rs:391:5: 391:11
    let _1153: &Little;                  // in scope 0 at ui/deriving/issue-58319.rs:391:5: 391:11
    let mut _1154: Little;               // in scope 0 at ui/deriving/issue-58319.rs:392:5: 392:11
    let mut _1155: &Little;              // in scope 0 at ui/deriving/issue-58319.rs:392:5: 392:11
    let _1156: &Little;                  // in scope 0 at ui/deriving/issue-58319.rs:392:5: 392:11
    let mut _1157: Little;               // in scope 0 at ui/deriving/issue-58319.rs:393:5: 393:11
    let mut _1158: &Little;              // in scope 0 at ui/deriving/issue-58319.rs:393:5: 393:11
    let _1159: &Little;                  // in scope 0 at ui/deriving/issue-58319.rs:393:5: 393:11
    let mut _1160: Little;               // in scope 0 at ui/deriving/issue-58319.rs:394:5: 394:11
    let mut _1161: &Little;              // in scope 0 at ui/deriving/issue-58319.rs:394:5: 394:11
    let _1162: &Little;                  // in scope 0 at ui/deriving/issue-58319.rs:394:5: 394:11
    let mut _1163: Little;               // in scope 0 at ui/deriving/issue-58319.rs:395:5: 395:11
    let mut _1164: &Little;              // in scope 0 at ui/deriving/issue-58319.rs:395:5: 395:11
    let _1165: &Little;                  // in scope 0 at ui/deriving/issue-58319.rs:395:5: 395:11
    let mut _1166: Little;               // in scope 0 at ui/deriving/issue-58319.rs:396:5: 396:11
    let mut _1167: &Little;              // in scope 0 at ui/deriving/issue-58319.rs:396:5: 396:11
    let _1168: &Little;                  // in scope 0 at ui/deriving/issue-58319.rs:396:5: 396:11
    let mut _1169: Little;               // in scope 0 at ui/deriving/issue-58319.rs:397:5: 397:11
    let mut _1170: &Little;              // in scope 0 at ui/deriving/issue-58319.rs:397:5: 397:11
    let _1171: &Little;                  // in scope 0 at ui/deriving/issue-58319.rs:397:5: 397:11
    let mut _1172: Little;               // in scope 0 at ui/deriving/issue-58319.rs:398:5: 398:11
    let mut _1173: &Little;              // in scope 0 at ui/deriving/issue-58319.rs:398:5: 398:11
    let _1174: &Little;                  // in scope 0 at ui/deriving/issue-58319.rs:398:5: 398:11
    let mut _1175: Little;               // in scope 0 at ui/deriving/issue-58319.rs:399:5: 399:11
    let mut _1176: &Little;              // in scope 0 at ui/deriving/issue-58319.rs:399:5: 399:11
    let _1177: &Little;                  // in scope 0 at ui/deriving/issue-58319.rs:399:5: 399:11
    let mut _1178: Little;               // in scope 0 at ui/deriving/issue-58319.rs:400:5: 400:11
    let mut _1179: &Little;              // in scope 0 at ui/deriving/issue-58319.rs:400:5: 400:11
    let _1180: &Little;                  // in scope 0 at ui/deriving/issue-58319.rs:400:5: 400:11
    let mut _1181: Little;               // in scope 0 at ui/deriving/issue-58319.rs:401:5: 401:11
    let mut _1182: &Little;              // in scope 0 at ui/deriving/issue-58319.rs:401:5: 401:11
    let _1183: &Little;                  // in scope 0 at ui/deriving/issue-58319.rs:401:5: 401:11
    let mut _1184: Little;               // in scope 0 at ui/deriving/issue-58319.rs:402:5: 402:11
    let mut _1185: &Little;              // in scope 0 at ui/deriving/issue-58319.rs:402:5: 402:11
    let _1186: &Little;                  // in scope 0 at ui/deriving/issue-58319.rs:402:5: 402:11
    let mut _1187: Little;               // in scope 0 at ui/deriving/issue-58319.rs:403:5: 403:11
    let mut _1188: &Little;              // in scope 0 at ui/deriving/issue-58319.rs:403:5: 403:11
    let _1189: &Little;                  // in scope 0 at ui/deriving/issue-58319.rs:403:5: 403:11
    let mut _1190: Little;               // in scope 0 at ui/deriving/issue-58319.rs:404:5: 404:11
    let mut _1191: &Little;              // in scope 0 at ui/deriving/issue-58319.rs:404:5: 404:11
    let _1192: &Little;                  // in scope 0 at ui/deriving/issue-58319.rs:404:5: 404:11
    let mut _1193: Little;               // in scope 0 at ui/deriving/issue-58319.rs:405:5: 405:11
    let mut _1194: &Little;              // in scope 0 at ui/deriving/issue-58319.rs:405:5: 405:11
    let _1195: &Little;                  // in scope 0 at ui/deriving/issue-58319.rs:405:5: 405:11
    let mut _1196: Little;               // in scope 0 at ui/deriving/issue-58319.rs:406:5: 406:11
    let mut _1197: &Little;              // in scope 0 at ui/deriving/issue-58319.rs:406:5: 406:11
    let _1198: &Little;                  // in scope 0 at ui/deriving/issue-58319.rs:406:5: 406:11
    let mut _1199: Little;               // in scope 0 at ui/deriving/issue-58319.rs:407:5: 407:11
    let mut _1200: &Little;              // in scope 0 at ui/deriving/issue-58319.rs:407:5: 407:11
    let _1201: &Little;                  // in scope 0 at ui/deriving/issue-58319.rs:407:5: 407:11
    let mut _1202: Little;               // in scope 0 at ui/deriving/issue-58319.rs:408:5: 408:11
    let mut _1203: &Little;              // in scope 0 at ui/deriving/issue-58319.rs:408:5: 408:11
    let _1204: &Little;                  // in scope 0 at ui/deriving/issue-58319.rs:408:5: 408:11
    let mut _1205: Little;               // in scope 0 at ui/deriving/issue-58319.rs:409:5: 409:11
    let mut _1206: &Little;              // in scope 0 at ui/deriving/issue-58319.rs:409:5: 409:11
    let _1207: &Little;                  // in scope 0 at ui/deriving/issue-58319.rs:409:5: 409:11
    let mut _1208: Little;               // in scope 0 at ui/deriving/issue-58319.rs:410:5: 410:11
    let mut _1209: &Little;              // in scope 0 at ui/deriving/issue-58319.rs:410:5: 410:11
    let _1210: &Little;                  // in scope 0 at ui/deriving/issue-58319.rs:410:5: 410:11
    let mut _1211: Little;               // in scope 0 at ui/deriving/issue-58319.rs:411:5: 411:11
    let mut _1212: &Little;              // in scope 0 at ui/deriving/issue-58319.rs:411:5: 411:11
    let _1213: &Little;                  // in scope 0 at ui/deriving/issue-58319.rs:411:5: 411:11
    let mut _1214: Little;               // in scope 0 at ui/deriving/issue-58319.rs:412:5: 412:11
    let mut _1215: &Little;              // in scope 0 at ui/deriving/issue-58319.rs:412:5: 412:11
    let _1216: &Little;                  // in scope 0 at ui/deriving/issue-58319.rs:412:5: 412:11
    let mut _1217: Little;               // in scope 0 at ui/deriving/issue-58319.rs:413:5: 413:11
    let mut _1218: &Little;              // in scope 0 at ui/deriving/issue-58319.rs:413:5: 413:11
    let _1219: &Little;                  // in scope 0 at ui/deriving/issue-58319.rs:413:5: 413:11
    let mut _1220: Little;               // in scope 0 at ui/deriving/issue-58319.rs:414:5: 414:11
    let mut _1221: &Little;              // in scope 0 at ui/deriving/issue-58319.rs:414:5: 414:11
    let _1222: &Little;                  // in scope 0 at ui/deriving/issue-58319.rs:414:5: 414:11
    let mut _1223: Little;               // in scope 0 at ui/deriving/issue-58319.rs:415:5: 415:11
    let mut _1224: &Little;              // in scope 0 at ui/deriving/issue-58319.rs:415:5: 415:11
    let _1225: &Little;                  // in scope 0 at ui/deriving/issue-58319.rs:415:5: 415:11
    let mut _1226: Little;               // in scope 0 at ui/deriving/issue-58319.rs:416:5: 416:11
    let mut _1227: &Little;              // in scope 0 at ui/deriving/issue-58319.rs:416:5: 416:11
    let _1228: &Little;                  // in scope 0 at ui/deriving/issue-58319.rs:416:5: 416:11
    let mut _1229: Little;               // in scope 0 at ui/deriving/issue-58319.rs:417:5: 417:11
    let mut _1230: &Little;              // in scope 0 at ui/deriving/issue-58319.rs:417:5: 417:11
    let _1231: &Little;                  // in scope 0 at ui/deriving/issue-58319.rs:417:5: 417:11
    let mut _1232: Little;               // in scope 0 at ui/deriving/issue-58319.rs:418:5: 418:11
    let mut _1233: &Little;              // in scope 0 at ui/deriving/issue-58319.rs:418:5: 418:11
    let _1234: &Little;                  // in scope 0 at ui/deriving/issue-58319.rs:418:5: 418:11
    let mut _1235: Little;               // in scope 0 at ui/deriving/issue-58319.rs:419:5: 419:11
    let mut _1236: &Little;              // in scope 0 at ui/deriving/issue-58319.rs:419:5: 419:11
    let _1237: &Little;                  // in scope 0 at ui/deriving/issue-58319.rs:419:5: 419:11
    let mut _1238: Little;               // in scope 0 at ui/deriving/issue-58319.rs:420:5: 420:11
    let mut _1239: &Little;              // in scope 0 at ui/deriving/issue-58319.rs:420:5: 420:11
    let _1240: &Little;                  // in scope 0 at ui/deriving/issue-58319.rs:420:5: 420:11
    let mut _1241: Little;               // in scope 0 at ui/deriving/issue-58319.rs:421:5: 421:11
    let mut _1242: &Little;              // in scope 0 at ui/deriving/issue-58319.rs:421:5: 421:11
    let _1243: &Little;                  // in scope 0 at ui/deriving/issue-58319.rs:421:5: 421:11
    let mut _1244: Little;               // in scope 0 at ui/deriving/issue-58319.rs:422:5: 422:11
    let mut _1245: &Little;              // in scope 0 at ui/deriving/issue-58319.rs:422:5: 422:11
    let _1246: &Little;                  // in scope 0 at ui/deriving/issue-58319.rs:422:5: 422:11
    let mut _1247: Little;               // in scope 0 at ui/deriving/issue-58319.rs:423:5: 423:11
    let mut _1248: &Little;              // in scope 0 at ui/deriving/issue-58319.rs:423:5: 423:11
    let _1249: &Little;                  // in scope 0 at ui/deriving/issue-58319.rs:423:5: 423:11
    let mut _1250: Little;               // in scope 0 at ui/deriving/issue-58319.rs:424:5: 424:11
    let mut _1251: &Little;              // in scope 0 at ui/deriving/issue-58319.rs:424:5: 424:11
    let _1252: &Little;                  // in scope 0 at ui/deriving/issue-58319.rs:424:5: 424:11
    let mut _1253: Little;               // in scope 0 at ui/deriving/issue-58319.rs:425:5: 425:11
    let mut _1254: &Little;              // in scope 0 at ui/deriving/issue-58319.rs:425:5: 425:11
    let _1255: &Little;                  // in scope 0 at ui/deriving/issue-58319.rs:425:5: 425:11
    let mut _1256: Little;               // in scope 0 at ui/deriving/issue-58319.rs:426:5: 426:11
    let mut _1257: &Little;              // in scope 0 at ui/deriving/issue-58319.rs:426:5: 426:11
    let _1258: &Little;                  // in scope 0 at ui/deriving/issue-58319.rs:426:5: 426:11
    let mut _1259: Little;               // in scope 0 at ui/deriving/issue-58319.rs:427:5: 427:11
    let mut _1260: &Little;              // in scope 0 at ui/deriving/issue-58319.rs:427:5: 427:11
    let _1261: &Little;                  // in scope 0 at ui/deriving/issue-58319.rs:427:5: 427:11
    let mut _1262: Little;               // in scope 0 at ui/deriving/issue-58319.rs:428:5: 428:11
    let mut _1263: &Little;              // in scope 0 at ui/deriving/issue-58319.rs:428:5: 428:11
    let _1264: &Little;                  // in scope 0 at ui/deriving/issue-58319.rs:428:5: 428:11
    let mut _1265: Little;               // in scope 0 at ui/deriving/issue-58319.rs:429:5: 429:11
    let mut _1266: &Little;              // in scope 0 at ui/deriving/issue-58319.rs:429:5: 429:11
    let _1267: &Little;                  // in scope 0 at ui/deriving/issue-58319.rs:429:5: 429:11
    let mut _1268: Little;               // in scope 0 at ui/deriving/issue-58319.rs:430:5: 430:11
    let mut _1269: &Little;              // in scope 0 at ui/deriving/issue-58319.rs:430:5: 430:11
    let _1270: &Little;                  // in scope 0 at ui/deriving/issue-58319.rs:430:5: 430:11
    let mut _1271: Little;               // in scope 0 at ui/deriving/issue-58319.rs:431:5: 431:11
    let mut _1272: &Little;              // in scope 0 at ui/deriving/issue-58319.rs:431:5: 431:11
    let _1273: &Little;                  // in scope 0 at ui/deriving/issue-58319.rs:431:5: 431:11
    let mut _1274: Little;               // in scope 0 at ui/deriving/issue-58319.rs:432:5: 432:11
    let mut _1275: &Little;              // in scope 0 at ui/deriving/issue-58319.rs:432:5: 432:11
    let _1276: &Little;                  // in scope 0 at ui/deriving/issue-58319.rs:432:5: 432:11
    let mut _1277: Little;               // in scope 0 at ui/deriving/issue-58319.rs:433:5: 433:11
    let mut _1278: &Little;              // in scope 0 at ui/deriving/issue-58319.rs:433:5: 433:11
    let _1279: &Little;                  // in scope 0 at ui/deriving/issue-58319.rs:433:5: 433:11
    let mut _1280: Little;               // in scope 0 at ui/deriving/issue-58319.rs:434:5: 434:11
    let mut _1281: &Little;              // in scope 0 at ui/deriving/issue-58319.rs:434:5: 434:11
    let _1282: &Little;                  // in scope 0 at ui/deriving/issue-58319.rs:434:5: 434:11
    let mut _1283: Little;               // in scope 0 at ui/deriving/issue-58319.rs:435:5: 435:11
    let mut _1284: &Little;              // in scope 0 at ui/deriving/issue-58319.rs:435:5: 435:11
    let _1285: &Little;                  // in scope 0 at ui/deriving/issue-58319.rs:435:5: 435:11
    let mut _1286: Little;               // in scope 0 at ui/deriving/issue-58319.rs:436:5: 436:11
    let mut _1287: &Little;              // in scope 0 at ui/deriving/issue-58319.rs:436:5: 436:11
    let _1288: &Little;                  // in scope 0 at ui/deriving/issue-58319.rs:436:5: 436:11
    let mut _1289: Little;               // in scope 0 at ui/deriving/issue-58319.rs:437:5: 437:11
    let mut _1290: &Little;              // in scope 0 at ui/deriving/issue-58319.rs:437:5: 437:11
    let _1291: &Little;                  // in scope 0 at ui/deriving/issue-58319.rs:437:5: 437:11
    let mut _1292: Little;               // in scope 0 at ui/deriving/issue-58319.rs:438:5: 438:11
    let mut _1293: &Little;              // in scope 0 at ui/deriving/issue-58319.rs:438:5: 438:11
    let _1294: &Little;                  // in scope 0 at ui/deriving/issue-58319.rs:438:5: 438:11
    let mut _1295: Little;               // in scope 0 at ui/deriving/issue-58319.rs:439:5: 439:11
    let mut _1296: &Little;              // in scope 0 at ui/deriving/issue-58319.rs:439:5: 439:11
    let _1297: &Little;                  // in scope 0 at ui/deriving/issue-58319.rs:439:5: 439:11
    let mut _1298: Little;               // in scope 0 at ui/deriving/issue-58319.rs:440:5: 440:11
    let mut _1299: &Little;              // in scope 0 at ui/deriving/issue-58319.rs:440:5: 440:11
    let _1300: &Little;                  // in scope 0 at ui/deriving/issue-58319.rs:440:5: 440:11
    let mut _1301: Little;               // in scope 0 at ui/deriving/issue-58319.rs:441:5: 441:11
    let mut _1302: &Little;              // in scope 0 at ui/deriving/issue-58319.rs:441:5: 441:11
    let _1303: &Little;                  // in scope 0 at ui/deriving/issue-58319.rs:441:5: 441:11
    let mut _1304: Little;               // in scope 0 at ui/deriving/issue-58319.rs:442:5: 442:11
    let mut _1305: &Little;              // in scope 0 at ui/deriving/issue-58319.rs:442:5: 442:11
    let _1306: &Little;                  // in scope 0 at ui/deriving/issue-58319.rs:442:5: 442:11
    let mut _1307: Little;               // in scope 0 at ui/deriving/issue-58319.rs:443:5: 443:11
    let mut _1308: &Little;              // in scope 0 at ui/deriving/issue-58319.rs:443:5: 443:11
    let _1309: &Little;                  // in scope 0 at ui/deriving/issue-58319.rs:443:5: 443:11
    let mut _1310: Little;               // in scope 0 at ui/deriving/issue-58319.rs:444:5: 444:11
    let mut _1311: &Little;              // in scope 0 at ui/deriving/issue-58319.rs:444:5: 444:11
    let _1312: &Little;                  // in scope 0 at ui/deriving/issue-58319.rs:444:5: 444:11
    let mut _1313: Little;               // in scope 0 at ui/deriving/issue-58319.rs:445:5: 445:11
    let mut _1314: &Little;              // in scope 0 at ui/deriving/issue-58319.rs:445:5: 445:11
    let _1315: &Little;                  // in scope 0 at ui/deriving/issue-58319.rs:445:5: 445:11
    let mut _1316: Little;               // in scope 0 at ui/deriving/issue-58319.rs:446:5: 446:11
    let mut _1317: &Little;              // in scope 0 at ui/deriving/issue-58319.rs:446:5: 446:11
    let _1318: &Little;                  // in scope 0 at ui/deriving/issue-58319.rs:446:5: 446:11
    let mut _1319: Little;               // in scope 0 at ui/deriving/issue-58319.rs:447:5: 447:11
    let mut _1320: &Little;              // in scope 0 at ui/deriving/issue-58319.rs:447:5: 447:11
    let _1321: &Little;                  // in scope 0 at ui/deriving/issue-58319.rs:447:5: 447:11
    let mut _1322: Little;               // in scope 0 at ui/deriving/issue-58319.rs:448:5: 448:11
    let mut _1323: &Little;              // in scope 0 at ui/deriving/issue-58319.rs:448:5: 448:11
    let _1324: &Little;                  // in scope 0 at ui/deriving/issue-58319.rs:448:5: 448:11
    let mut _1325: Little;               // in scope 0 at ui/deriving/issue-58319.rs:449:5: 449:11
    let mut _1326: &Little;              // in scope 0 at ui/deriving/issue-58319.rs:449:5: 449:11
    let _1327: &Little;                  // in scope 0 at ui/deriving/issue-58319.rs:449:5: 449:11
    let mut _1328: Little;               // in scope 0 at ui/deriving/issue-58319.rs:450:5: 450:11
    let mut _1329: &Little;              // in scope 0 at ui/deriving/issue-58319.rs:450:5: 450:11
    let _1330: &Little;                  // in scope 0 at ui/deriving/issue-58319.rs:450:5: 450:11
    let mut _1331: Little;               // in scope 0 at ui/deriving/issue-58319.rs:451:5: 451:11
    let mut _1332: &Little;              // in scope 0 at ui/deriving/issue-58319.rs:451:5: 451:11
    let _1333: &Little;                  // in scope 0 at ui/deriving/issue-58319.rs:451:5: 451:11
    let mut _1334: Little;               // in scope 0 at ui/deriving/issue-58319.rs:452:5: 452:11
    let mut _1335: &Little;              // in scope 0 at ui/deriving/issue-58319.rs:452:5: 452:11
    let _1336: &Little;                  // in scope 0 at ui/deriving/issue-58319.rs:452:5: 452:11
    let mut _1337: Little;               // in scope 0 at ui/deriving/issue-58319.rs:453:5: 453:11
    let mut _1338: &Little;              // in scope 0 at ui/deriving/issue-58319.rs:453:5: 453:11
    let _1339: &Little;                  // in scope 0 at ui/deriving/issue-58319.rs:453:5: 453:11
    let mut _1340: Little;               // in scope 0 at ui/deriving/issue-58319.rs:454:5: 454:11
    let mut _1341: &Little;              // in scope 0 at ui/deriving/issue-58319.rs:454:5: 454:11
    let _1342: &Little;                  // in scope 0 at ui/deriving/issue-58319.rs:454:5: 454:11
    let mut _1343: Little;               // in scope 0 at ui/deriving/issue-58319.rs:455:5: 455:11
    let mut _1344: &Little;              // in scope 0 at ui/deriving/issue-58319.rs:455:5: 455:11
    let _1345: &Little;                  // in scope 0 at ui/deriving/issue-58319.rs:455:5: 455:11
    let mut _1346: Little;               // in scope 0 at ui/deriving/issue-58319.rs:456:5: 456:11
    let mut _1347: &Little;              // in scope 0 at ui/deriving/issue-58319.rs:456:5: 456:11
    let _1348: &Little;                  // in scope 0 at ui/deriving/issue-58319.rs:456:5: 456:11
    let mut _1349: Little;               // in scope 0 at ui/deriving/issue-58319.rs:457:5: 457:11
    let mut _1350: &Little;              // in scope 0 at ui/deriving/issue-58319.rs:457:5: 457:11
    let _1351: &Little;                  // in scope 0 at ui/deriving/issue-58319.rs:457:5: 457:11
    let mut _1352: Little;               // in scope 0 at ui/deriving/issue-58319.rs:458:5: 458:11
    let mut _1353: &Little;              // in scope 0 at ui/deriving/issue-58319.rs:458:5: 458:11
    let _1354: &Little;                  // in scope 0 at ui/deriving/issue-58319.rs:458:5: 458:11
    let mut _1355: Little;               // in scope 0 at ui/deriving/issue-58319.rs:459:5: 459:11
    let mut _1356: &Little;              // in scope 0 at ui/deriving/issue-58319.rs:459:5: 459:11
    let _1357: &Little;                  // in scope 0 at ui/deriving/issue-58319.rs:459:5: 459:11
    let mut _1358: Little;               // in scope 0 at ui/deriving/issue-58319.rs:460:5: 460:11
    let mut _1359: &Little;              // in scope 0 at ui/deriving/issue-58319.rs:460:5: 460:11
    let _1360: &Little;                  // in scope 0 at ui/deriving/issue-58319.rs:460:5: 460:11
    let mut _1361: Little;               // in scope 0 at ui/deriving/issue-58319.rs:461:5: 461:11
    let mut _1362: &Little;              // in scope 0 at ui/deriving/issue-58319.rs:461:5: 461:11
    let _1363: &Little;                  // in scope 0 at ui/deriving/issue-58319.rs:461:5: 461:11
    let mut _1364: Little;               // in scope 0 at ui/deriving/issue-58319.rs:462:5: 462:11
    let mut _1365: &Little;              // in scope 0 at ui/deriving/issue-58319.rs:462:5: 462:11
    let _1366: &Little;                  // in scope 0 at ui/deriving/issue-58319.rs:462:5: 462:11
    let mut _1367: Little;               // in scope 0 at ui/deriving/issue-58319.rs:463:5: 463:11
    let mut _1368: &Little;              // in scope 0 at ui/deriving/issue-58319.rs:463:5: 463:11
    let _1369: &Little;                  // in scope 0 at ui/deriving/issue-58319.rs:463:5: 463:11
    let mut _1370: Little;               // in scope 0 at ui/deriving/issue-58319.rs:464:5: 464:11
    let mut _1371: &Little;              // in scope 0 at ui/deriving/issue-58319.rs:464:5: 464:11
    let _1372: &Little;                  // in scope 0 at ui/deriving/issue-58319.rs:464:5: 464:11
    let mut _1373: Little;               // in scope 0 at ui/deriving/issue-58319.rs:465:5: 465:11
    let mut _1374: &Little;              // in scope 0 at ui/deriving/issue-58319.rs:465:5: 465:11
    let _1375: &Little;                  // in scope 0 at ui/deriving/issue-58319.rs:465:5: 465:11
    let mut _1376: Little;               // in scope 0 at ui/deriving/issue-58319.rs:466:5: 466:11
    let mut _1377: &Little;              // in scope 0 at ui/deriving/issue-58319.rs:466:5: 466:11
    let _1378: &Little;                  // in scope 0 at ui/deriving/issue-58319.rs:466:5: 466:11
    let mut _1379: Little;               // in scope 0 at ui/deriving/issue-58319.rs:467:5: 467:11
    let mut _1380: &Little;              // in scope 0 at ui/deriving/issue-58319.rs:467:5: 467:11
    let _1381: &Little;                  // in scope 0 at ui/deriving/issue-58319.rs:467:5: 467:11
    let mut _1382: Little;               // in scope 0 at ui/deriving/issue-58319.rs:468:5: 468:11
    let mut _1383: &Little;              // in scope 0 at ui/deriving/issue-58319.rs:468:5: 468:11
    let _1384: &Little;                  // in scope 0 at ui/deriving/issue-58319.rs:468:5: 468:11
    let mut _1385: Little;               // in scope 0 at ui/deriving/issue-58319.rs:469:5: 469:11
    let mut _1386: &Little;              // in scope 0 at ui/deriving/issue-58319.rs:469:5: 469:11
    let _1387: &Little;                  // in scope 0 at ui/deriving/issue-58319.rs:469:5: 469:11
    let mut _1388: Little;               // in scope 0 at ui/deriving/issue-58319.rs:470:5: 470:11
    let mut _1389: &Little;              // in scope 0 at ui/deriving/issue-58319.rs:470:5: 470:11
    let _1390: &Little;                  // in scope 0 at ui/deriving/issue-58319.rs:470:5: 470:11
    let mut _1391: Little;               // in scope 0 at ui/deriving/issue-58319.rs:471:5: 471:11
    let mut _1392: &Little;              // in scope 0 at ui/deriving/issue-58319.rs:471:5: 471:11
    let _1393: &Little;                  // in scope 0 at ui/deriving/issue-58319.rs:471:5: 471:11
    let mut _1394: Little;               // in scope 0 at ui/deriving/issue-58319.rs:472:5: 472:11
    let mut _1395: &Little;              // in scope 0 at ui/deriving/issue-58319.rs:472:5: 472:11
    let _1396: &Little;                  // in scope 0 at ui/deriving/issue-58319.rs:472:5: 472:11
    let mut _1397: Little;               // in scope 0 at ui/deriving/issue-58319.rs:473:5: 473:11
    let mut _1398: &Little;              // in scope 0 at ui/deriving/issue-58319.rs:473:5: 473:11
    let _1399: &Little;                  // in scope 0 at ui/deriving/issue-58319.rs:473:5: 473:11
    let mut _1400: Little;               // in scope 0 at ui/deriving/issue-58319.rs:474:5: 474:11
    let mut _1401: &Little;              // in scope 0 at ui/deriving/issue-58319.rs:474:5: 474:11
    let _1402: &Little;                  // in scope 0 at ui/deriving/issue-58319.rs:474:5: 474:11
    let mut _1403: Little;               // in scope 0 at ui/deriving/issue-58319.rs:475:5: 475:11
    let mut _1404: &Little;              // in scope 0 at ui/deriving/issue-58319.rs:475:5: 475:11
    let _1405: &Little;                  // in scope 0 at ui/deriving/issue-58319.rs:475:5: 475:11
    let mut _1406: Little;               // in scope 0 at ui/deriving/issue-58319.rs:476:5: 476:11
    let mut _1407: &Little;              // in scope 0 at ui/deriving/issue-58319.rs:476:5: 476:11
    let _1408: &Little;                  // in scope 0 at ui/deriving/issue-58319.rs:476:5: 476:11
    let mut _1409: Little;               // in scope 0 at ui/deriving/issue-58319.rs:477:5: 477:11
    let mut _1410: &Little;              // in scope 0 at ui/deriving/issue-58319.rs:477:5: 477:11
    let _1411: &Little;                  // in scope 0 at ui/deriving/issue-58319.rs:477:5: 477:11
    let mut _1412: Little;               // in scope 0 at ui/deriving/issue-58319.rs:478:5: 478:11
    let mut _1413: &Little;              // in scope 0 at ui/deriving/issue-58319.rs:478:5: 478:11
    let _1414: &Little;                  // in scope 0 at ui/deriving/issue-58319.rs:478:5: 478:11
    let mut _1415: Little;               // in scope 0 at ui/deriving/issue-58319.rs:479:5: 479:11
    let mut _1416: &Little;              // in scope 0 at ui/deriving/issue-58319.rs:479:5: 479:11
    let _1417: &Little;                  // in scope 0 at ui/deriving/issue-58319.rs:479:5: 479:11
    let mut _1418: Little;               // in scope 0 at ui/deriving/issue-58319.rs:480:5: 480:11
    let mut _1419: &Little;              // in scope 0 at ui/deriving/issue-58319.rs:480:5: 480:11
    let _1420: &Little;                  // in scope 0 at ui/deriving/issue-58319.rs:480:5: 480:11
    let mut _1421: Little;               // in scope 0 at ui/deriving/issue-58319.rs:481:5: 481:11
    let mut _1422: &Little;              // in scope 0 at ui/deriving/issue-58319.rs:481:5: 481:11
    let _1423: &Little;                  // in scope 0 at ui/deriving/issue-58319.rs:481:5: 481:11
    let mut _1424: Little;               // in scope 0 at ui/deriving/issue-58319.rs:482:5: 482:11
    let mut _1425: &Little;              // in scope 0 at ui/deriving/issue-58319.rs:482:5: 482:11
    let _1426: &Little;                  // in scope 0 at ui/deriving/issue-58319.rs:482:5: 482:11
    let mut _1427: Little;               // in scope 0 at ui/deriving/issue-58319.rs:483:5: 483:11
    let mut _1428: &Little;              // in scope 0 at ui/deriving/issue-58319.rs:483:5: 483:11
    let _1429: &Little;                  // in scope 0 at ui/deriving/issue-58319.rs:483:5: 483:11
    let mut _1430: Little;               // in scope 0 at ui/deriving/issue-58319.rs:484:5: 484:11
    let mut _1431: &Little;              // in scope 0 at ui/deriving/issue-58319.rs:484:5: 484:11
    let _1432: &Little;                  // in scope 0 at ui/deriving/issue-58319.rs:484:5: 484:11
    let mut _1433: Little;               // in scope 0 at ui/deriving/issue-58319.rs:485:5: 485:11
    let mut _1434: &Little;              // in scope 0 at ui/deriving/issue-58319.rs:485:5: 485:11
    let _1435: &Little;                  // in scope 0 at ui/deriving/issue-58319.rs:485:5: 485:11
    let mut _1436: Little;               // in scope 0 at ui/deriving/issue-58319.rs:486:5: 486:11
    let mut _1437: &Little;              // in scope 0 at ui/deriving/issue-58319.rs:486:5: 486:11
    let _1438: &Little;                  // in scope 0 at ui/deriving/issue-58319.rs:486:5: 486:11
    let mut _1439: Little;               // in scope 0 at ui/deriving/issue-58319.rs:487:5: 487:11
    let mut _1440: &Little;              // in scope 0 at ui/deriving/issue-58319.rs:487:5: 487:11
    let _1441: &Little;                  // in scope 0 at ui/deriving/issue-58319.rs:487:5: 487:11
    let mut _1442: Little;               // in scope 0 at ui/deriving/issue-58319.rs:488:5: 488:11
    let mut _1443: &Little;              // in scope 0 at ui/deriving/issue-58319.rs:488:5: 488:11
    let _1444: &Little;                  // in scope 0 at ui/deriving/issue-58319.rs:488:5: 488:11
    let mut _1445: Little;               // in scope 0 at ui/deriving/issue-58319.rs:489:5: 489:11
    let mut _1446: &Little;              // in scope 0 at ui/deriving/issue-58319.rs:489:5: 489:11
    let _1447: &Little;                  // in scope 0 at ui/deriving/issue-58319.rs:489:5: 489:11
    let mut _1448: Little;               // in scope 0 at ui/deriving/issue-58319.rs:490:5: 490:11
    let mut _1449: &Little;              // in scope 0 at ui/deriving/issue-58319.rs:490:5: 490:11
    let _1450: &Little;                  // in scope 0 at ui/deriving/issue-58319.rs:490:5: 490:11
    let mut _1451: Little;               // in scope 0 at ui/deriving/issue-58319.rs:491:5: 491:11
    let mut _1452: &Little;              // in scope 0 at ui/deriving/issue-58319.rs:491:5: 491:11
    let _1453: &Little;                  // in scope 0 at ui/deriving/issue-58319.rs:491:5: 491:11
    let mut _1454: Little;               // in scope 0 at ui/deriving/issue-58319.rs:492:5: 492:11
    let mut _1455: &Little;              // in scope 0 at ui/deriving/issue-58319.rs:492:5: 492:11
    let _1456: &Little;                  // in scope 0 at ui/deriving/issue-58319.rs:492:5: 492:11
    let mut _1457: Little;               // in scope 0 at ui/deriving/issue-58319.rs:493:5: 493:11
    let mut _1458: &Little;              // in scope 0 at ui/deriving/issue-58319.rs:493:5: 493:11
    let _1459: &Little;                  // in scope 0 at ui/deriving/issue-58319.rs:493:5: 493:11
    let mut _1460: Little;               // in scope 0 at ui/deriving/issue-58319.rs:494:5: 494:11
    let mut _1461: &Little;              // in scope 0 at ui/deriving/issue-58319.rs:494:5: 494:11
    let _1462: &Little;                  // in scope 0 at ui/deriving/issue-58319.rs:494:5: 494:11
    let mut _1463: Little;               // in scope 0 at ui/deriving/issue-58319.rs:495:5: 495:11
    let mut _1464: &Little;              // in scope 0 at ui/deriving/issue-58319.rs:495:5: 495:11
    let _1465: &Little;                  // in scope 0 at ui/deriving/issue-58319.rs:495:5: 495:11
    let mut _1466: Little;               // in scope 0 at ui/deriving/issue-58319.rs:496:5: 496:11
    let mut _1467: &Little;              // in scope 0 at ui/deriving/issue-58319.rs:496:5: 496:11
    let _1468: &Little;                  // in scope 0 at ui/deriving/issue-58319.rs:496:5: 496:11
    let mut _1469: Little;               // in scope 0 at ui/deriving/issue-58319.rs:497:5: 497:11
    let mut _1470: &Little;              // in scope 0 at ui/deriving/issue-58319.rs:497:5: 497:11
    let _1471: &Little;                  // in scope 0 at ui/deriving/issue-58319.rs:497:5: 497:11
    let mut _1472: Little;               // in scope 0 at ui/deriving/issue-58319.rs:498:5: 498:11
    let mut _1473: &Little;              // in scope 0 at ui/deriving/issue-58319.rs:498:5: 498:11
    let _1474: &Little;                  // in scope 0 at ui/deriving/issue-58319.rs:498:5: 498:11
    let mut _1475: Little;               // in scope 0 at ui/deriving/issue-58319.rs:499:5: 499:11
    let mut _1476: &Little;              // in scope 0 at ui/deriving/issue-58319.rs:499:5: 499:11
    let _1477: &Little;                  // in scope 0 at ui/deriving/issue-58319.rs:499:5: 499:11
    let mut _1478: Little;               // in scope 0 at ui/deriving/issue-58319.rs:500:5: 500:11
    let mut _1479: &Little;              // in scope 0 at ui/deriving/issue-58319.rs:500:5: 500:11
    let _1480: &Little;                  // in scope 0 at ui/deriving/issue-58319.rs:500:5: 500:11
    let mut _1481: Little;               // in scope 0 at ui/deriving/issue-58319.rs:501:5: 501:11
    let mut _1482: &Little;              // in scope 0 at ui/deriving/issue-58319.rs:501:5: 501:11
    let _1483: &Little;                  // in scope 0 at ui/deriving/issue-58319.rs:501:5: 501:11
    let mut _1484: Little;               // in scope 0 at ui/deriving/issue-58319.rs:502:5: 502:11
    let mut _1485: &Little;              // in scope 0 at ui/deriving/issue-58319.rs:502:5: 502:11
    let _1486: &Little;                  // in scope 0 at ui/deriving/issue-58319.rs:502:5: 502:11
    let mut _1487: Little;               // in scope 0 at ui/deriving/issue-58319.rs:503:5: 503:11
    let mut _1488: &Little;              // in scope 0 at ui/deriving/issue-58319.rs:503:5: 503:11
    let _1489: &Little;                  // in scope 0 at ui/deriving/issue-58319.rs:503:5: 503:11
    let mut _1490: Little;               // in scope 0 at ui/deriving/issue-58319.rs:504:5: 504:11
    let mut _1491: &Little;              // in scope 0 at ui/deriving/issue-58319.rs:504:5: 504:11
    let _1492: &Little;                  // in scope 0 at ui/deriving/issue-58319.rs:504:5: 504:11
    let mut _1493: Little;               // in scope 0 at ui/deriving/issue-58319.rs:505:5: 505:11
    let mut _1494: &Little;              // in scope 0 at ui/deriving/issue-58319.rs:505:5: 505:11
    let _1495: &Little;                  // in scope 0 at ui/deriving/issue-58319.rs:505:5: 505:11
    let mut _1496: Little;               // in scope 0 at ui/deriving/issue-58319.rs:506:5: 506:11
    let mut _1497: &Little;              // in scope 0 at ui/deriving/issue-58319.rs:506:5: 506:11
    let _1498: &Little;                  // in scope 0 at ui/deriving/issue-58319.rs:506:5: 506:11
    let mut _1499: Little;               // in scope 0 at ui/deriving/issue-58319.rs:507:5: 507:11
    let mut _1500: &Little;              // in scope 0 at ui/deriving/issue-58319.rs:507:5: 507:11
    let _1501: &Little;                  // in scope 0 at ui/deriving/issue-58319.rs:507:5: 507:11
    let mut _1502: Little;               // in scope 0 at ui/deriving/issue-58319.rs:508:5: 508:11
    let mut _1503: &Little;              // in scope 0 at ui/deriving/issue-58319.rs:508:5: 508:11
    let _1504: &Little;                  // in scope 0 at ui/deriving/issue-58319.rs:508:5: 508:11
    let mut _1505: Little;               // in scope 0 at ui/deriving/issue-58319.rs:509:5: 509:11
    let mut _1506: &Little;              // in scope 0 at ui/deriving/issue-58319.rs:509:5: 509:11
    let _1507: &Little;                  // in scope 0 at ui/deriving/issue-58319.rs:509:5: 509:11
    let mut _1508: Little;               // in scope 0 at ui/deriving/issue-58319.rs:510:5: 510:11
    let mut _1509: &Little;              // in scope 0 at ui/deriving/issue-58319.rs:510:5: 510:11
    let _1510: &Little;                  // in scope 0 at ui/deriving/issue-58319.rs:510:5: 510:11
    let mut _1511: Little;               // in scope 0 at ui/deriving/issue-58319.rs:511:5: 511:11
    let mut _1512: &Little;              // in scope 0 at ui/deriving/issue-58319.rs:511:5: 511:11
    let _1513: &Little;                  // in scope 0 at ui/deriving/issue-58319.rs:511:5: 511:11
    let mut _1514: Little;               // in scope 0 at ui/deriving/issue-58319.rs:512:5: 512:11
    let mut _1515: &Little;              // in scope 0 at ui/deriving/issue-58319.rs:512:5: 512:11
    let _1516: &Little;                  // in scope 0 at ui/deriving/issue-58319.rs:512:5: 512:11
    let mut _1517: Little;               // in scope 0 at ui/deriving/issue-58319.rs:513:5: 513:11
    let mut _1518: &Little;              // in scope 0 at ui/deriving/issue-58319.rs:513:5: 513:11
    let _1519: &Little;                  // in scope 0 at ui/deriving/issue-58319.rs:513:5: 513:11
    let mut _1520: Little;               // in scope 0 at ui/deriving/issue-58319.rs:514:5: 514:11
    let mut _1521: &Little;              // in scope 0 at ui/deriving/issue-58319.rs:514:5: 514:11
    let _1522: &Little;                  // in scope 0 at ui/deriving/issue-58319.rs:514:5: 514:11
    let mut _1523: Little;               // in scope 0 at ui/deriving/issue-58319.rs:515:5: 515:11
    let mut _1524: &Little;              // in scope 0 at ui/deriving/issue-58319.rs:515:5: 515:11
    let _1525: &Little;                  // in scope 0 at ui/deriving/issue-58319.rs:515:5: 515:11
    let mut _1526: Little;               // in scope 0 at ui/deriving/issue-58319.rs:516:5: 516:11
    let mut _1527: &Little;              // in scope 0 at ui/deriving/issue-58319.rs:516:5: 516:11
    let _1528: &Little;                  // in scope 0 at ui/deriving/issue-58319.rs:516:5: 516:11
    let mut _1529: Little;               // in scope 0 at ui/deriving/issue-58319.rs:517:5: 517:11
    let mut _1530: &Little;              // in scope 0 at ui/deriving/issue-58319.rs:517:5: 517:11
    let _1531: &Little;                  // in scope 0 at ui/deriving/issue-58319.rs:517:5: 517:11
    let mut _1532: Little;               // in scope 0 at ui/deriving/issue-58319.rs:518:5: 518:11
    let mut _1533: &Little;              // in scope 0 at ui/deriving/issue-58319.rs:518:5: 518:11
    let _1534: &Little;                  // in scope 0 at ui/deriving/issue-58319.rs:518:5: 518:11
    let mut _1535: Little;               // in scope 0 at ui/deriving/issue-58319.rs:519:5: 519:11
    let mut _1536: &Little;              // in scope 0 at ui/deriving/issue-58319.rs:519:5: 519:11
    let _1537: &Little;                  // in scope 0 at ui/deriving/issue-58319.rs:519:5: 519:11
    let mut _1538: Little;               // in scope 0 at ui/deriving/issue-58319.rs:520:5: 520:11
    let mut _1539: &Little;              // in scope 0 at ui/deriving/issue-58319.rs:520:5: 520:11
    let _1540: &Little;                  // in scope 0 at ui/deriving/issue-58319.rs:520:5: 520:11
    let mut _1541: Little;               // in scope 0 at ui/deriving/issue-58319.rs:521:5: 521:11
    let mut _1542: &Little;              // in scope 0 at ui/deriving/issue-58319.rs:521:5: 521:11
    let _1543: &Little;                  // in scope 0 at ui/deriving/issue-58319.rs:521:5: 521:11
    let mut _1544: Little;               // in scope 0 at ui/deriving/issue-58319.rs:522:5: 522:11
    let mut _1545: &Little;              // in scope 0 at ui/deriving/issue-58319.rs:522:5: 522:11
    let _1546: &Little;                  // in scope 0 at ui/deriving/issue-58319.rs:522:5: 522:11
    let mut _1547: Little;               // in scope 0 at ui/deriving/issue-58319.rs:523:5: 523:11
    let mut _1548: &Little;              // in scope 0 at ui/deriving/issue-58319.rs:523:5: 523:11
    let _1549: &Little;                  // in scope 0 at ui/deriving/issue-58319.rs:523:5: 523:11
    let mut _1550: Little;               // in scope 0 at ui/deriving/issue-58319.rs:524:5: 524:11
    let mut _1551: &Little;              // in scope 0 at ui/deriving/issue-58319.rs:524:5: 524:11
    let _1552: &Little;                  // in scope 0 at ui/deriving/issue-58319.rs:524:5: 524:11
    let mut _1553: Little;               // in scope 0 at ui/deriving/issue-58319.rs:525:5: 525:11
    let mut _1554: &Little;              // in scope 0 at ui/deriving/issue-58319.rs:525:5: 525:11
    let _1555: &Little;                  // in scope 0 at ui/deriving/issue-58319.rs:525:5: 525:11
    let mut _1556: Little;               // in scope 0 at ui/deriving/issue-58319.rs:526:5: 526:11
    let mut _1557: &Little;              // in scope 0 at ui/deriving/issue-58319.rs:526:5: 526:11
    let _1558: &Little;                  // in scope 0 at ui/deriving/issue-58319.rs:526:5: 526:11
    let mut _1559: Little;               // in scope 0 at ui/deriving/issue-58319.rs:527:5: 527:11
    let mut _1560: &Little;              // in scope 0 at ui/deriving/issue-58319.rs:527:5: 527:11
    let _1561: &Little;                  // in scope 0 at ui/deriving/issue-58319.rs:527:5: 527:11
    let mut _1562: Little;               // in scope 0 at ui/deriving/issue-58319.rs:528:5: 528:11
    let mut _1563: &Little;              // in scope 0 at ui/deriving/issue-58319.rs:528:5: 528:11
    let _1564: &Little;                  // in scope 0 at ui/deriving/issue-58319.rs:528:5: 528:11
    let mut _1565: Little;               // in scope 0 at ui/deriving/issue-58319.rs:529:5: 529:11
    let mut _1566: &Little;              // in scope 0 at ui/deriving/issue-58319.rs:529:5: 529:11
    let _1567: &Little;                  // in scope 0 at ui/deriving/issue-58319.rs:529:5: 529:11
    let mut _1568: Little;               // in scope 0 at ui/deriving/issue-58319.rs:530:5: 530:11
    let mut _1569: &Little;              // in scope 0 at ui/deriving/issue-58319.rs:530:5: 530:11
    let _1570: &Little;                  // in scope 0 at ui/deriving/issue-58319.rs:530:5: 530:11
    let mut _1571: Little;               // in scope 0 at ui/deriving/issue-58319.rs:531:5: 531:11
    let mut _1572: &Little;              // in scope 0 at ui/deriving/issue-58319.rs:531:5: 531:11
    let _1573: &Little;                  // in scope 0 at ui/deriving/issue-58319.rs:531:5: 531:11
    let mut _1574: Little;               // in scope 0 at ui/deriving/issue-58319.rs:532:5: 532:11
    let mut _1575: &Little;              // in scope 0 at ui/deriving/issue-58319.rs:532:5: 532:11
    let _1576: &Little;                  // in scope 0 at ui/deriving/issue-58319.rs:532:5: 532:11
    let mut _1577: Little;               // in scope 0 at ui/deriving/issue-58319.rs:533:5: 533:11
    let mut _1578: &Little;              // in scope 0 at ui/deriving/issue-58319.rs:533:5: 533:11
    let _1579: &Little;                  // in scope 0 at ui/deriving/issue-58319.rs:533:5: 533:11
    let mut _1580: Little;               // in scope 0 at ui/deriving/issue-58319.rs:534:5: 534:11
    let mut _1581: &Little;              // in scope 0 at ui/deriving/issue-58319.rs:534:5: 534:11
    let _1582: &Little;                  // in scope 0 at ui/deriving/issue-58319.rs:534:5: 534:11
    let mut _1583: Little;               // in scope 0 at ui/deriving/issue-58319.rs:535:5: 535:11
    let mut _1584: &Little;              // in scope 0 at ui/deriving/issue-58319.rs:535:5: 535:11
    let _1585: &Little;                  // in scope 0 at ui/deriving/issue-58319.rs:535:5: 535:11
    let mut _1586: Little;               // in scope 0 at ui/deriving/issue-58319.rs:536:5: 536:11
    let mut _1587: &Little;              // in scope 0 at ui/deriving/issue-58319.rs:536:5: 536:11
    let _1588: &Little;                  // in scope 0 at ui/deriving/issue-58319.rs:536:5: 536:11
    let mut _1589: Little;               // in scope 0 at ui/deriving/issue-58319.rs:537:5: 537:11
    let mut _1590: &Little;              // in scope 0 at ui/deriving/issue-58319.rs:537:5: 537:11
    let _1591: &Little;                  // in scope 0 at ui/deriving/issue-58319.rs:537:5: 537:11
    let mut _1592: Little;               // in scope 0 at ui/deriving/issue-58319.rs:538:5: 538:11
    let mut _1593: &Little;              // in scope 0 at ui/deriving/issue-58319.rs:538:5: 538:11
    let _1594: &Little;                  // in scope 0 at ui/deriving/issue-58319.rs:538:5: 538:11
    let mut _1595: Little;               // in scope 0 at ui/deriving/issue-58319.rs:539:5: 539:11
    let mut _1596: &Little;              // in scope 0 at ui/deriving/issue-58319.rs:539:5: 539:11
    let _1597: &Little;                  // in scope 0 at ui/deriving/issue-58319.rs:539:5: 539:11
    let mut _1598: Little;               // in scope 0 at ui/deriving/issue-58319.rs:540:5: 540:11
    let mut _1599: &Little;              // in scope 0 at ui/deriving/issue-58319.rs:540:5: 540:11
    let _1600: &Little;                  // in scope 0 at ui/deriving/issue-58319.rs:540:5: 540:11
    let mut _1601: Little;               // in scope 0 at ui/deriving/issue-58319.rs:541:5: 541:11
    let mut _1602: &Little;              // in scope 0 at ui/deriving/issue-58319.rs:541:5: 541:11
    let _1603: &Little;                  // in scope 0 at ui/deriving/issue-58319.rs:541:5: 541:11
    let mut _1604: Little;               // in scope 0 at ui/deriving/issue-58319.rs:542:5: 542:11
    let mut _1605: &Little;              // in scope 0 at ui/deriving/issue-58319.rs:542:5: 542:11
    let _1606: &Little;                  // in scope 0 at ui/deriving/issue-58319.rs:542:5: 542:11
    let mut _1607: Little;               // in scope 0 at ui/deriving/issue-58319.rs:543:5: 543:11
    let mut _1608: &Little;              // in scope 0 at ui/deriving/issue-58319.rs:543:5: 543:11
    let _1609: &Little;                  // in scope 0 at ui/deriving/issue-58319.rs:543:5: 543:11
    let mut _1610: Little;               // in scope 0 at ui/deriving/issue-58319.rs:544:5: 544:11
    let mut _1611: &Little;              // in scope 0 at ui/deriving/issue-58319.rs:544:5: 544:11
    let _1612: &Little;                  // in scope 0 at ui/deriving/issue-58319.rs:544:5: 544:11
    let mut _1613: Little;               // in scope 0 at ui/deriving/issue-58319.rs:545:5: 545:11
    let mut _1614: &Little;              // in scope 0 at ui/deriving/issue-58319.rs:545:5: 545:11
    let _1615: &Little;                  // in scope 0 at ui/deriving/issue-58319.rs:545:5: 545:11
    let mut _1616: Little;               // in scope 0 at ui/deriving/issue-58319.rs:546:5: 546:11
    let mut _1617: &Little;              // in scope 0 at ui/deriving/issue-58319.rs:546:5: 546:11
    let _1618: &Little;                  // in scope 0 at ui/deriving/issue-58319.rs:546:5: 546:11
    let mut _1619: Little;               // in scope 0 at ui/deriving/issue-58319.rs:547:5: 547:11
    let mut _1620: &Little;              // in scope 0 at ui/deriving/issue-58319.rs:547:5: 547:11
    let _1621: &Little;                  // in scope 0 at ui/deriving/issue-58319.rs:547:5: 547:11
    let mut _1622: Little;               // in scope 0 at ui/deriving/issue-58319.rs:548:5: 548:11
    let mut _1623: &Little;              // in scope 0 at ui/deriving/issue-58319.rs:548:5: 548:11
    let _1624: &Little;                  // in scope 0 at ui/deriving/issue-58319.rs:548:5: 548:11
    let mut _1625: Little;               // in scope 0 at ui/deriving/issue-58319.rs:549:5: 549:11
    let mut _1626: &Little;              // in scope 0 at ui/deriving/issue-58319.rs:549:5: 549:11
    let _1627: &Little;                  // in scope 0 at ui/deriving/issue-58319.rs:549:5: 549:11
    let mut _1628: Little;               // in scope 0 at ui/deriving/issue-58319.rs:550:5: 550:11
    let mut _1629: &Little;              // in scope 0 at ui/deriving/issue-58319.rs:550:5: 550:11
    let _1630: &Little;                  // in scope 0 at ui/deriving/issue-58319.rs:550:5: 550:11
    let mut _1631: Little;               // in scope 0 at ui/deriving/issue-58319.rs:551:5: 551:11
    let mut _1632: &Little;              // in scope 0 at ui/deriving/issue-58319.rs:551:5: 551:11
    let _1633: &Little;                  // in scope 0 at ui/deriving/issue-58319.rs:551:5: 551:11
    let mut _1634: Little;               // in scope 0 at ui/deriving/issue-58319.rs:552:5: 552:11
    let mut _1635: &Little;              // in scope 0 at ui/deriving/issue-58319.rs:552:5: 552:11
    let _1636: &Little;                  // in scope 0 at ui/deriving/issue-58319.rs:552:5: 552:11
    let mut _1637: Little;               // in scope 0 at ui/deriving/issue-58319.rs:553:5: 553:11
    let mut _1638: &Little;              // in scope 0 at ui/deriving/issue-58319.rs:553:5: 553:11
    let _1639: &Little;                  // in scope 0 at ui/deriving/issue-58319.rs:553:5: 553:11
    let mut _1640: Little;               // in scope 0 at ui/deriving/issue-58319.rs:554:5: 554:11
    let mut _1641: &Little;              // in scope 0 at ui/deriving/issue-58319.rs:554:5: 554:11
    let _1642: &Little;                  // in scope 0 at ui/deriving/issue-58319.rs:554:5: 554:11
    let mut _1643: Little;               // in scope 0 at ui/deriving/issue-58319.rs:555:5: 555:11
    let mut _1644: &Little;              // in scope 0 at ui/deriving/issue-58319.rs:555:5: 555:11
    let _1645: &Little;                  // in scope 0 at ui/deriving/issue-58319.rs:555:5: 555:11
    let mut _1646: Little;               // in scope 0 at ui/deriving/issue-58319.rs:556:5: 556:11
    let mut _1647: &Little;              // in scope 0 at ui/deriving/issue-58319.rs:556:5: 556:11
    let _1648: &Little;                  // in scope 0 at ui/deriving/issue-58319.rs:556:5: 556:11
    let mut _1649: Little;               // in scope 0 at ui/deriving/issue-58319.rs:557:5: 557:11
    let mut _1650: &Little;              // in scope 0 at ui/deriving/issue-58319.rs:557:5: 557:11
    let _1651: &Little;                  // in scope 0 at ui/deriving/issue-58319.rs:557:5: 557:11
    let mut _1652: Little;               // in scope 0 at ui/deriving/issue-58319.rs:558:5: 558:11
    let mut _1653: &Little;              // in scope 0 at ui/deriving/issue-58319.rs:558:5: 558:11
    let _1654: &Little;                  // in scope 0 at ui/deriving/issue-58319.rs:558:5: 558:11
    let mut _1655: Little;               // in scope 0 at ui/deriving/issue-58319.rs:559:5: 559:11
    let mut _1656: &Little;              // in scope 0 at ui/deriving/issue-58319.rs:559:5: 559:11
    let _1657: &Little;                  // in scope 0 at ui/deriving/issue-58319.rs:559:5: 559:11
    let mut _1658: Little;               // in scope 0 at ui/deriving/issue-58319.rs:560:5: 560:11
    let mut _1659: &Little;              // in scope 0 at ui/deriving/issue-58319.rs:560:5: 560:11
    let _1660: &Little;                  // in scope 0 at ui/deriving/issue-58319.rs:560:5: 560:11
    let mut _1661: Little;               // in scope 0 at ui/deriving/issue-58319.rs:561:5: 561:11
    let mut _1662: &Little;              // in scope 0 at ui/deriving/issue-58319.rs:561:5: 561:11
    let _1663: &Little;                  // in scope 0 at ui/deriving/issue-58319.rs:561:5: 561:11
    let mut _1664: Little;               // in scope 0 at ui/deriving/issue-58319.rs:562:5: 562:11
    let mut _1665: &Little;              // in scope 0 at ui/deriving/issue-58319.rs:562:5: 562:11
    let _1666: &Little;                  // in scope 0 at ui/deriving/issue-58319.rs:562:5: 562:11
    let mut _1667: Little;               // in scope 0 at ui/deriving/issue-58319.rs:563:5: 563:11
    let mut _1668: &Little;              // in scope 0 at ui/deriving/issue-58319.rs:563:5: 563:11
    let _1669: &Little;                  // in scope 0 at ui/deriving/issue-58319.rs:563:5: 563:11
    let mut _1670: Little;               // in scope 0 at ui/deriving/issue-58319.rs:564:5: 564:11
    let mut _1671: &Little;              // in scope 0 at ui/deriving/issue-58319.rs:564:5: 564:11
    let _1672: &Little;                  // in scope 0 at ui/deriving/issue-58319.rs:564:5: 564:11
    let mut _1673: Little;               // in scope 0 at ui/deriving/issue-58319.rs:565:5: 565:11
    let mut _1674: &Little;              // in scope 0 at ui/deriving/issue-58319.rs:565:5: 565:11
    let _1675: &Little;                  // in scope 0 at ui/deriving/issue-58319.rs:565:5: 565:11
    let mut _1676: Little;               // in scope 0 at ui/deriving/issue-58319.rs:566:5: 566:11
    let mut _1677: &Little;              // in scope 0 at ui/deriving/issue-58319.rs:566:5: 566:11
    let _1678: &Little;                  // in scope 0 at ui/deriving/issue-58319.rs:566:5: 566:11
    let mut _1679: Little;               // in scope 0 at ui/deriving/issue-58319.rs:567:5: 567:11
    let mut _1680: &Little;              // in scope 0 at ui/deriving/issue-58319.rs:567:5: 567:11
    let _1681: &Little;                  // in scope 0 at ui/deriving/issue-58319.rs:567:5: 567:11
    let mut _1682: Little;               // in scope 0 at ui/deriving/issue-58319.rs:568:5: 568:11
    let mut _1683: &Little;              // in scope 0 at ui/deriving/issue-58319.rs:568:5: 568:11
    let _1684: &Little;                  // in scope 0 at ui/deriving/issue-58319.rs:568:5: 568:11
    let mut _1685: Little;               // in scope 0 at ui/deriving/issue-58319.rs:569:5: 569:11
    let mut _1686: &Little;              // in scope 0 at ui/deriving/issue-58319.rs:569:5: 569:11
    let _1687: &Little;                  // in scope 0 at ui/deriving/issue-58319.rs:569:5: 569:11
    let mut _1688: Little;               // in scope 0 at ui/deriving/issue-58319.rs:570:5: 570:11
    let mut _1689: &Little;              // in scope 0 at ui/deriving/issue-58319.rs:570:5: 570:11
    let _1690: &Little;                  // in scope 0 at ui/deriving/issue-58319.rs:570:5: 570:11
    let mut _1691: Little;               // in scope 0 at ui/deriving/issue-58319.rs:571:5: 571:11
    let mut _1692: &Little;              // in scope 0 at ui/deriving/issue-58319.rs:571:5: 571:11
    let _1693: &Little;                  // in scope 0 at ui/deriving/issue-58319.rs:571:5: 571:11
    let mut _1694: Little;               // in scope 0 at ui/deriving/issue-58319.rs:572:5: 572:11
    let mut _1695: &Little;              // in scope 0 at ui/deriving/issue-58319.rs:572:5: 572:11
    let _1696: &Little;                  // in scope 0 at ui/deriving/issue-58319.rs:572:5: 572:11
    let mut _1697: Little;               // in scope 0 at ui/deriving/issue-58319.rs:573:5: 573:11
    let mut _1698: &Little;              // in scope 0 at ui/deriving/issue-58319.rs:573:5: 573:11
    let _1699: &Little;                  // in scope 0 at ui/deriving/issue-58319.rs:573:5: 573:11
    let mut _1700: Little;               // in scope 0 at ui/deriving/issue-58319.rs:574:5: 574:11
    let mut _1701: &Little;              // in scope 0 at ui/deriving/issue-58319.rs:574:5: 574:11
    let _1702: &Little;                  // in scope 0 at ui/deriving/issue-58319.rs:574:5: 574:11
    let mut _1703: Little;               // in scope 0 at ui/deriving/issue-58319.rs:575:5: 575:11
    let mut _1704: &Little;              // in scope 0 at ui/deriving/issue-58319.rs:575:5: 575:11
    let _1705: &Little;                  // in scope 0 at ui/deriving/issue-58319.rs:575:5: 575:11
    let mut _1706: Little;               // in scope 0 at ui/deriving/issue-58319.rs:576:5: 576:11
    let mut _1707: &Little;              // in scope 0 at ui/deriving/issue-58319.rs:576:5: 576:11
    let _1708: &Little;                  // in scope 0 at ui/deriving/issue-58319.rs:576:5: 576:11
    let mut _1709: Little;               // in scope 0 at ui/deriving/issue-58319.rs:577:5: 577:11
    let mut _1710: &Little;              // in scope 0 at ui/deriving/issue-58319.rs:577:5: 577:11
    let _1711: &Little;                  // in scope 0 at ui/deriving/issue-58319.rs:577:5: 577:11
    let mut _1712: Little;               // in scope 0 at ui/deriving/issue-58319.rs:578:5: 578:11
    let mut _1713: &Little;              // in scope 0 at ui/deriving/issue-58319.rs:578:5: 578:11
    let _1714: &Little;                  // in scope 0 at ui/deriving/issue-58319.rs:578:5: 578:11
    let mut _1715: Little;               // in scope 0 at ui/deriving/issue-58319.rs:579:5: 579:11
    let mut _1716: &Little;              // in scope 0 at ui/deriving/issue-58319.rs:579:5: 579:11
    let _1717: &Little;                  // in scope 0 at ui/deriving/issue-58319.rs:579:5: 579:11
    let mut _1718: Little;               // in scope 0 at ui/deriving/issue-58319.rs:580:5: 580:11
    let mut _1719: &Little;              // in scope 0 at ui/deriving/issue-58319.rs:580:5: 580:11
    let _1720: &Little;                  // in scope 0 at ui/deriving/issue-58319.rs:580:5: 580:11
    let mut _1721: Little;               // in scope 0 at ui/deriving/issue-58319.rs:581:5: 581:11
    let mut _1722: &Little;              // in scope 0 at ui/deriving/issue-58319.rs:581:5: 581:11
    let _1723: &Little;                  // in scope 0 at ui/deriving/issue-58319.rs:581:5: 581:11
    let mut _1724: Little;               // in scope 0 at ui/deriving/issue-58319.rs:582:5: 582:11
    let mut _1725: &Little;              // in scope 0 at ui/deriving/issue-58319.rs:582:5: 582:11
    let _1726: &Little;                  // in scope 0 at ui/deriving/issue-58319.rs:582:5: 582:11
    let mut _1727: Little;               // in scope 0 at ui/deriving/issue-58319.rs:583:5: 583:11
    let mut _1728: &Little;              // in scope 0 at ui/deriving/issue-58319.rs:583:5: 583:11
    let _1729: &Little;                  // in scope 0 at ui/deriving/issue-58319.rs:583:5: 583:11
    let mut _1730: Little;               // in scope 0 at ui/deriving/issue-58319.rs:584:5: 584:11
    let mut _1731: &Little;              // in scope 0 at ui/deriving/issue-58319.rs:584:5: 584:11
    let _1732: &Little;                  // in scope 0 at ui/deriving/issue-58319.rs:584:5: 584:11
    let mut _1733: Little;               // in scope 0 at ui/deriving/issue-58319.rs:585:5: 585:11
    let mut _1734: &Little;              // in scope 0 at ui/deriving/issue-58319.rs:585:5: 585:11
    let _1735: &Little;                  // in scope 0 at ui/deriving/issue-58319.rs:585:5: 585:11
    let mut _1736: Little;               // in scope 0 at ui/deriving/issue-58319.rs:586:5: 586:11
    let mut _1737: &Little;              // in scope 0 at ui/deriving/issue-58319.rs:586:5: 586:11
    let _1738: &Little;                  // in scope 0 at ui/deriving/issue-58319.rs:586:5: 586:11
    let mut _1739: Little;               // in scope 0 at ui/deriving/issue-58319.rs:587:5: 587:11
    let mut _1740: &Little;              // in scope 0 at ui/deriving/issue-58319.rs:587:5: 587:11
    let _1741: &Little;                  // in scope 0 at ui/deriving/issue-58319.rs:587:5: 587:11
    let mut _1742: Little;               // in scope 0 at ui/deriving/issue-58319.rs:588:5: 588:11
    let mut _1743: &Little;              // in scope 0 at ui/deriving/issue-58319.rs:588:5: 588:11
    let _1744: &Little;                  // in scope 0 at ui/deriving/issue-58319.rs:588:5: 588:11
    let mut _1745: Little;               // in scope 0 at ui/deriving/issue-58319.rs:589:5: 589:11
    let mut _1746: &Little;              // in scope 0 at ui/deriving/issue-58319.rs:589:5: 589:11
    let _1747: &Little;                  // in scope 0 at ui/deriving/issue-58319.rs:589:5: 589:11
    let mut _1748: Little;               // in scope 0 at ui/deriving/issue-58319.rs:590:5: 590:11
    let mut _1749: &Little;              // in scope 0 at ui/deriving/issue-58319.rs:590:5: 590:11
    let _1750: &Little;                  // in scope 0 at ui/deriving/issue-58319.rs:590:5: 590:11
    let mut _1751: Little;               // in scope 0 at ui/deriving/issue-58319.rs:591:5: 591:11
    let mut _1752: &Little;              // in scope 0 at ui/deriving/issue-58319.rs:591:5: 591:11
    let _1753: &Little;                  // in scope 0 at ui/deriving/issue-58319.rs:591:5: 591:11
    let mut _1754: Little;               // in scope 0 at ui/deriving/issue-58319.rs:592:5: 592:11
    let mut _1755: &Little;              // in scope 0 at ui/deriving/issue-58319.rs:592:5: 592:11
    let _1756: &Little;                  // in scope 0 at ui/deriving/issue-58319.rs:592:5: 592:11
    let mut _1757: Little;               // in scope 0 at ui/deriving/issue-58319.rs:593:5: 593:11
    let mut _1758: &Little;              // in scope 0 at ui/deriving/issue-58319.rs:593:5: 593:11
    let _1759: &Little;                  // in scope 0 at ui/deriving/issue-58319.rs:593:5: 593:11
    let mut _1760: Little;               // in scope 0 at ui/deriving/issue-58319.rs:594:5: 594:11
    let mut _1761: &Little;              // in scope 0 at ui/deriving/issue-58319.rs:594:5: 594:11
    let _1762: &Little;                  // in scope 0 at ui/deriving/issue-58319.rs:594:5: 594:11
    let mut _1763: Little;               // in scope 0 at ui/deriving/issue-58319.rs:595:5: 595:11
    let mut _1764: &Little;              // in scope 0 at ui/deriving/issue-58319.rs:595:5: 595:11
    let _1765: &Little;                  // in scope 0 at ui/deriving/issue-58319.rs:595:5: 595:11
    let mut _1766: Little;               // in scope 0 at ui/deriving/issue-58319.rs:596:5: 596:11
    let mut _1767: &Little;              // in scope 0 at ui/deriving/issue-58319.rs:596:5: 596:11
    let _1768: &Little;                  // in scope 0 at ui/deriving/issue-58319.rs:596:5: 596:11
    let mut _1769: Little;               // in scope 0 at ui/deriving/issue-58319.rs:597:5: 597:11
    let mut _1770: &Little;              // in scope 0 at ui/deriving/issue-58319.rs:597:5: 597:11
    let _1771: &Little;                  // in scope 0 at ui/deriving/issue-58319.rs:597:5: 597:11
    let mut _1772: Little;               // in scope 0 at ui/deriving/issue-58319.rs:598:5: 598:11
    let mut _1773: &Little;              // in scope 0 at ui/deriving/issue-58319.rs:598:5: 598:11
    let _1774: &Little;                  // in scope 0 at ui/deriving/issue-58319.rs:598:5: 598:11
    let mut _1775: Little;               // in scope 0 at ui/deriving/issue-58319.rs:599:5: 599:11
    let mut _1776: &Little;              // in scope 0 at ui/deriving/issue-58319.rs:599:5: 599:11
    let _1777: &Little;                  // in scope 0 at ui/deriving/issue-58319.rs:599:5: 599:11
    let mut _1778: Little;               // in scope 0 at ui/deriving/issue-58319.rs:600:5: 600:11
    let mut _1779: &Little;              // in scope 0 at ui/deriving/issue-58319.rs:600:5: 600:11
    let _1780: &Little;                  // in scope 0 at ui/deriving/issue-58319.rs:600:5: 600:11
    let mut _1781: Little;               // in scope 0 at ui/deriving/issue-58319.rs:601:5: 601:11
    let mut _1782: &Little;              // in scope 0 at ui/deriving/issue-58319.rs:601:5: 601:11
    let _1783: &Little;                  // in scope 0 at ui/deriving/issue-58319.rs:601:5: 601:11
    let mut _1784: Little;               // in scope 0 at ui/deriving/issue-58319.rs:602:5: 602:11
    let mut _1785: &Little;              // in scope 0 at ui/deriving/issue-58319.rs:602:5: 602:11
    let _1786: &Little;                  // in scope 0 at ui/deriving/issue-58319.rs:602:5: 602:11
    let mut _1787: Little;               // in scope 0 at ui/deriving/issue-58319.rs:603:5: 603:11
    let mut _1788: &Little;              // in scope 0 at ui/deriving/issue-58319.rs:603:5: 603:11
    let _1789: &Little;                  // in scope 0 at ui/deriving/issue-58319.rs:603:5: 603:11
    let mut _1790: Little;               // in scope 0 at ui/deriving/issue-58319.rs:604:5: 604:11
    let mut _1791: &Little;              // in scope 0 at ui/deriving/issue-58319.rs:604:5: 604:11
    let _1792: &Little;                  // in scope 0 at ui/deriving/issue-58319.rs:604:5: 604:11
    let mut _1793: Little;               // in scope 0 at ui/deriving/issue-58319.rs:605:5: 605:11
    let mut _1794: &Little;              // in scope 0 at ui/deriving/issue-58319.rs:605:5: 605:11
    let _1795: &Little;                  // in scope 0 at ui/deriving/issue-58319.rs:605:5: 605:11
    let mut _1796: Little;               // in scope 0 at ui/deriving/issue-58319.rs:606:5: 606:11
    let mut _1797: &Little;              // in scope 0 at ui/deriving/issue-58319.rs:606:5: 606:11
    let _1798: &Little;                  // in scope 0 at ui/deriving/issue-58319.rs:606:5: 606:11
    let mut _1799: Little;               // in scope 0 at ui/deriving/issue-58319.rs:607:5: 607:11
    let mut _1800: &Little;              // in scope 0 at ui/deriving/issue-58319.rs:607:5: 607:11
    let _1801: &Little;                  // in scope 0 at ui/deriving/issue-58319.rs:607:5: 607:11
    let mut _1802: Little;               // in scope 0 at ui/deriving/issue-58319.rs:608:5: 608:11
    let mut _1803: &Little;              // in scope 0 at ui/deriving/issue-58319.rs:608:5: 608:11
    let _1804: &Little;                  // in scope 0 at ui/deriving/issue-58319.rs:608:5: 608:11
    let mut _1805: Little;               // in scope 0 at ui/deriving/issue-58319.rs:609:5: 609:11
    let mut _1806: &Little;              // in scope 0 at ui/deriving/issue-58319.rs:609:5: 609:11
    let _1807: &Little;                  // in scope 0 at ui/deriving/issue-58319.rs:609:5: 609:11
    let mut _1808: Little;               // in scope 0 at ui/deriving/issue-58319.rs:610:5: 610:11
    let mut _1809: &Little;              // in scope 0 at ui/deriving/issue-58319.rs:610:5: 610:11
    let _1810: &Little;                  // in scope 0 at ui/deriving/issue-58319.rs:610:5: 610:11
    let mut _1811: Little;               // in scope 0 at ui/deriving/issue-58319.rs:611:5: 611:11
    let mut _1812: &Little;              // in scope 0 at ui/deriving/issue-58319.rs:611:5: 611:11
    let _1813: &Little;                  // in scope 0 at ui/deriving/issue-58319.rs:611:5: 611:11
    let mut _1814: Little;               // in scope 0 at ui/deriving/issue-58319.rs:612:5: 612:11
    let mut _1815: &Little;              // in scope 0 at ui/deriving/issue-58319.rs:612:5: 612:11
    let _1816: &Little;                  // in scope 0 at ui/deriving/issue-58319.rs:612:5: 612:11
    let mut _1817: Little;               // in scope 0 at ui/deriving/issue-58319.rs:613:5: 613:11
    let mut _1818: &Little;              // in scope 0 at ui/deriving/issue-58319.rs:613:5: 613:11
    let _1819: &Little;                  // in scope 0 at ui/deriving/issue-58319.rs:613:5: 613:11
    let mut _1820: Little;               // in scope 0 at ui/deriving/issue-58319.rs:614:5: 614:11
    let mut _1821: &Little;              // in scope 0 at ui/deriving/issue-58319.rs:614:5: 614:11
    let _1822: &Little;                  // in scope 0 at ui/deriving/issue-58319.rs:614:5: 614:11
    let mut _1823: Little;               // in scope 0 at ui/deriving/issue-58319.rs:615:5: 615:11
    let mut _1824: &Little;              // in scope 0 at ui/deriving/issue-58319.rs:615:5: 615:11
    let _1825: &Little;                  // in scope 0 at ui/deriving/issue-58319.rs:615:5: 615:11
    let mut _1826: Little;               // in scope 0 at ui/deriving/issue-58319.rs:616:5: 616:11
    let mut _1827: &Little;              // in scope 0 at ui/deriving/issue-58319.rs:616:5: 616:11
    let _1828: &Little;                  // in scope 0 at ui/deriving/issue-58319.rs:616:5: 616:11
    let mut _1829: Little;               // in scope 0 at ui/deriving/issue-58319.rs:617:5: 617:11
    let mut _1830: &Little;              // in scope 0 at ui/deriving/issue-58319.rs:617:5: 617:11
    let _1831: &Little;                  // in scope 0 at ui/deriving/issue-58319.rs:617:5: 617:11
    let mut _1832: Little;               // in scope 0 at ui/deriving/issue-58319.rs:618:5: 618:11
    let mut _1833: &Little;              // in scope 0 at ui/deriving/issue-58319.rs:618:5: 618:11
    let _1834: &Little;                  // in scope 0 at ui/deriving/issue-58319.rs:618:5: 618:11
    let mut _1835: Little;               // in scope 0 at ui/deriving/issue-58319.rs:619:5: 619:11
    let mut _1836: &Little;              // in scope 0 at ui/deriving/issue-58319.rs:619:5: 619:11
    let _1837: &Little;                  // in scope 0 at ui/deriving/issue-58319.rs:619:5: 619:11
    let mut _1838: Little;               // in scope 0 at ui/deriving/issue-58319.rs:620:5: 620:11
    let mut _1839: &Little;              // in scope 0 at ui/deriving/issue-58319.rs:620:5: 620:11
    let _1840: &Little;                  // in scope 0 at ui/deriving/issue-58319.rs:620:5: 620:11
    let mut _1841: Little;               // in scope 0 at ui/deriving/issue-58319.rs:621:5: 621:11
    let mut _1842: &Little;              // in scope 0 at ui/deriving/issue-58319.rs:621:5: 621:11
    let _1843: &Little;                  // in scope 0 at ui/deriving/issue-58319.rs:621:5: 621:11

    bb0: {
        _4 = &((*_1).0: Little);         // scope 0 at ui/deriving/issue-58319.rs:8:5: 8:11
        _3 = _4;                         // scope 0 at ui/deriving/issue-58319.rs:8:5: 8:11
        _2 = <Little as Clone>::clone(move _3) -> bb1; // scope 0 at ui/deriving/issue-58319.rs:8:5: 8:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:8:5: 8:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb1: {
        _7 = &((*_1).1: Little);         // scope 0 at ui/deriving/issue-58319.rs:9:5: 9:11
        _6 = _7;                         // scope 0 at ui/deriving/issue-58319.rs:9:5: 9:11
        _5 = <Little as Clone>::clone(move _6) -> bb2; // scope 0 at ui/deriving/issue-58319.rs:9:5: 9:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:9:5: 9:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb2: {
        _10 = &((*_1).2: Little);        // scope 0 at ui/deriving/issue-58319.rs:10:5: 10:11
        _9 = _10;                        // scope 0 at ui/deriving/issue-58319.rs:10:5: 10:11
        _8 = <Little as Clone>::clone(move _9) -> bb3; // scope 0 at ui/deriving/issue-58319.rs:10:5: 10:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:10:5: 10:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb3: {
        _13 = &((*_1).3: Little);        // scope 0 at ui/deriving/issue-58319.rs:11:5: 11:11
        _12 = _13;                       // scope 0 at ui/deriving/issue-58319.rs:11:5: 11:11
        _11 = <Little as Clone>::clone(move _12) -> bb4; // scope 0 at ui/deriving/issue-58319.rs:11:5: 11:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:11:5: 11:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb4: {
        _16 = &((*_1).4: Little);        // scope 0 at ui/deriving/issue-58319.rs:12:5: 12:11
        _15 = _16;                       // scope 0 at ui/deriving/issue-58319.rs:12:5: 12:11
        _14 = <Little as Clone>::clone(move _15) -> bb5; // scope 0 at ui/deriving/issue-58319.rs:12:5: 12:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:12:5: 12:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb5: {
        _19 = &((*_1).5: Little);        // scope 0 at ui/deriving/issue-58319.rs:13:5: 13:11
        _18 = _19;                       // scope 0 at ui/deriving/issue-58319.rs:13:5: 13:11
        _17 = <Little as Clone>::clone(move _18) -> bb6; // scope 0 at ui/deriving/issue-58319.rs:13:5: 13:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:13:5: 13:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb6: {
        _22 = &((*_1).6: Little);        // scope 0 at ui/deriving/issue-58319.rs:14:5: 14:11
        _21 = _22;                       // scope 0 at ui/deriving/issue-58319.rs:14:5: 14:11
        _20 = <Little as Clone>::clone(move _21) -> bb7; // scope 0 at ui/deriving/issue-58319.rs:14:5: 14:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:14:5: 14:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb7: {
        _25 = &((*_1).7: Little);        // scope 0 at ui/deriving/issue-58319.rs:15:5: 15:11
        _24 = _25;                       // scope 0 at ui/deriving/issue-58319.rs:15:5: 15:11
        _23 = <Little as Clone>::clone(move _24) -> bb8; // scope 0 at ui/deriving/issue-58319.rs:15:5: 15:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:15:5: 15:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb8: {
        _28 = &((*_1).8: Little);        // scope 0 at ui/deriving/issue-58319.rs:16:5: 16:11
        _27 = _28;                       // scope 0 at ui/deriving/issue-58319.rs:16:5: 16:11
        _26 = <Little as Clone>::clone(move _27) -> bb9; // scope 0 at ui/deriving/issue-58319.rs:16:5: 16:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:16:5: 16:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb9: {
        _31 = &((*_1).9: Little);        // scope 0 at ui/deriving/issue-58319.rs:17:5: 17:11
        _30 = _31;                       // scope 0 at ui/deriving/issue-58319.rs:17:5: 17:11
        _29 = <Little as Clone>::clone(move _30) -> bb10; // scope 0 at ui/deriving/issue-58319.rs:17:5: 17:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:17:5: 17:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb10: {
        _34 = &((*_1).10: Little);       // scope 0 at ui/deriving/issue-58319.rs:18:5: 18:11
        _33 = _34;                       // scope 0 at ui/deriving/issue-58319.rs:18:5: 18:11
        _32 = <Little as Clone>::clone(move _33) -> bb11; // scope 0 at ui/deriving/issue-58319.rs:18:5: 18:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:18:5: 18:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb11: {
        _37 = &((*_1).11: Little);       // scope 0 at ui/deriving/issue-58319.rs:19:5: 19:11
        _36 = _37;                       // scope 0 at ui/deriving/issue-58319.rs:19:5: 19:11
        _35 = <Little as Clone>::clone(move _36) -> bb12; // scope 0 at ui/deriving/issue-58319.rs:19:5: 19:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:19:5: 19:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb12: {
        _40 = &((*_1).12: Little);       // scope 0 at ui/deriving/issue-58319.rs:20:5: 20:11
        _39 = _40;                       // scope 0 at ui/deriving/issue-58319.rs:20:5: 20:11
        _38 = <Little as Clone>::clone(move _39) -> bb13; // scope 0 at ui/deriving/issue-58319.rs:20:5: 20:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:20:5: 20:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb13: {
        _43 = &((*_1).13: Little);       // scope 0 at ui/deriving/issue-58319.rs:21:5: 21:11
        _42 = _43;                       // scope 0 at ui/deriving/issue-58319.rs:21:5: 21:11
        _41 = <Little as Clone>::clone(move _42) -> bb14; // scope 0 at ui/deriving/issue-58319.rs:21:5: 21:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:21:5: 21:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb14: {
        _46 = &((*_1).14: Little);       // scope 0 at ui/deriving/issue-58319.rs:22:5: 22:11
        _45 = _46;                       // scope 0 at ui/deriving/issue-58319.rs:22:5: 22:11
        _44 = <Little as Clone>::clone(move _45) -> bb15; // scope 0 at ui/deriving/issue-58319.rs:22:5: 22:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:22:5: 22:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb15: {
        _49 = &((*_1).15: Little);       // scope 0 at ui/deriving/issue-58319.rs:23:5: 23:11
        _48 = _49;                       // scope 0 at ui/deriving/issue-58319.rs:23:5: 23:11
        _47 = <Little as Clone>::clone(move _48) -> bb16; // scope 0 at ui/deriving/issue-58319.rs:23:5: 23:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:23:5: 23:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb16: {
        _52 = &((*_1).16: Little);       // scope 0 at ui/deriving/issue-58319.rs:24:5: 24:11
        _51 = _52;                       // scope 0 at ui/deriving/issue-58319.rs:24:5: 24:11
        _50 = <Little as Clone>::clone(move _51) -> bb17; // scope 0 at ui/deriving/issue-58319.rs:24:5: 24:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:24:5: 24:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb17: {
        _55 = &((*_1).17: Little);       // scope 0 at ui/deriving/issue-58319.rs:25:5: 25:11
        _54 = _55;                       // scope 0 at ui/deriving/issue-58319.rs:25:5: 25:11
        _53 = <Little as Clone>::clone(move _54) -> bb18; // scope 0 at ui/deriving/issue-58319.rs:25:5: 25:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:25:5: 25:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb18: {
        _58 = &((*_1).18: Little);       // scope 0 at ui/deriving/issue-58319.rs:26:5: 26:11
        _57 = _58;                       // scope 0 at ui/deriving/issue-58319.rs:26:5: 26:11
        _56 = <Little as Clone>::clone(move _57) -> bb19; // scope 0 at ui/deriving/issue-58319.rs:26:5: 26:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:26:5: 26:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb19: {
        _61 = &((*_1).19: Little);       // scope 0 at ui/deriving/issue-58319.rs:27:5: 27:11
        _60 = _61;                       // scope 0 at ui/deriving/issue-58319.rs:27:5: 27:11
        _59 = <Little as Clone>::clone(move _60) -> bb20; // scope 0 at ui/deriving/issue-58319.rs:27:5: 27:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:27:5: 27:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb20: {
        _64 = &((*_1).20: Little);       // scope 0 at ui/deriving/issue-58319.rs:28:5: 28:11
        _63 = _64;                       // scope 0 at ui/deriving/issue-58319.rs:28:5: 28:11
        _62 = <Little as Clone>::clone(move _63) -> bb21; // scope 0 at ui/deriving/issue-58319.rs:28:5: 28:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:28:5: 28:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb21: {
        _67 = &((*_1).21: Little);       // scope 0 at ui/deriving/issue-58319.rs:29:5: 29:11
        _66 = _67;                       // scope 0 at ui/deriving/issue-58319.rs:29:5: 29:11
        _65 = <Little as Clone>::clone(move _66) -> bb22; // scope 0 at ui/deriving/issue-58319.rs:29:5: 29:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:29:5: 29:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb22: {
        _70 = &((*_1).22: Little);       // scope 0 at ui/deriving/issue-58319.rs:30:5: 30:11
        _69 = _70;                       // scope 0 at ui/deriving/issue-58319.rs:30:5: 30:11
        _68 = <Little as Clone>::clone(move _69) -> bb23; // scope 0 at ui/deriving/issue-58319.rs:30:5: 30:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:30:5: 30:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb23: {
        _73 = &((*_1).23: Little);       // scope 0 at ui/deriving/issue-58319.rs:31:5: 31:11
        _72 = _73;                       // scope 0 at ui/deriving/issue-58319.rs:31:5: 31:11
        _71 = <Little as Clone>::clone(move _72) -> bb24; // scope 0 at ui/deriving/issue-58319.rs:31:5: 31:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:31:5: 31:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb24: {
        _76 = &((*_1).24: Little);       // scope 0 at ui/deriving/issue-58319.rs:32:5: 32:11
        _75 = _76;                       // scope 0 at ui/deriving/issue-58319.rs:32:5: 32:11
        _74 = <Little as Clone>::clone(move _75) -> bb25; // scope 0 at ui/deriving/issue-58319.rs:32:5: 32:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:32:5: 32:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb25: {
        _79 = &((*_1).25: Little);       // scope 0 at ui/deriving/issue-58319.rs:33:5: 33:11
        _78 = _79;                       // scope 0 at ui/deriving/issue-58319.rs:33:5: 33:11
        _77 = <Little as Clone>::clone(move _78) -> bb26; // scope 0 at ui/deriving/issue-58319.rs:33:5: 33:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:33:5: 33:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb26: {
        _82 = &((*_1).26: Little);       // scope 0 at ui/deriving/issue-58319.rs:34:5: 34:11
        _81 = _82;                       // scope 0 at ui/deriving/issue-58319.rs:34:5: 34:11
        _80 = <Little as Clone>::clone(move _81) -> bb27; // scope 0 at ui/deriving/issue-58319.rs:34:5: 34:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:34:5: 34:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb27: {
        _85 = &((*_1).27: Little);       // scope 0 at ui/deriving/issue-58319.rs:35:5: 35:11
        _84 = _85;                       // scope 0 at ui/deriving/issue-58319.rs:35:5: 35:11
        _83 = <Little as Clone>::clone(move _84) -> bb28; // scope 0 at ui/deriving/issue-58319.rs:35:5: 35:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:35:5: 35:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb28: {
        _88 = &((*_1).28: Little);       // scope 0 at ui/deriving/issue-58319.rs:36:5: 36:11
        _87 = _88;                       // scope 0 at ui/deriving/issue-58319.rs:36:5: 36:11
        _86 = <Little as Clone>::clone(move _87) -> bb29; // scope 0 at ui/deriving/issue-58319.rs:36:5: 36:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:36:5: 36:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb29: {
        _91 = &((*_1).29: Little);       // scope 0 at ui/deriving/issue-58319.rs:37:5: 37:11
        _90 = _91;                       // scope 0 at ui/deriving/issue-58319.rs:37:5: 37:11
        _89 = <Little as Clone>::clone(move _90) -> bb30; // scope 0 at ui/deriving/issue-58319.rs:37:5: 37:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:37:5: 37:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb30: {
        _94 = &((*_1).30: Little);       // scope 0 at ui/deriving/issue-58319.rs:38:5: 38:11
        _93 = _94;                       // scope 0 at ui/deriving/issue-58319.rs:38:5: 38:11
        _92 = <Little as Clone>::clone(move _93) -> bb31; // scope 0 at ui/deriving/issue-58319.rs:38:5: 38:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:38:5: 38:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb31: {
        _97 = &((*_1).31: Little);       // scope 0 at ui/deriving/issue-58319.rs:39:5: 39:11
        _96 = _97;                       // scope 0 at ui/deriving/issue-58319.rs:39:5: 39:11
        _95 = <Little as Clone>::clone(move _96) -> bb32; // scope 0 at ui/deriving/issue-58319.rs:39:5: 39:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:39:5: 39:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb32: {
        _100 = &((*_1).32: Little);      // scope 0 at ui/deriving/issue-58319.rs:40:5: 40:11
        _99 = _100;                      // scope 0 at ui/deriving/issue-58319.rs:40:5: 40:11
        _98 = <Little as Clone>::clone(move _99) -> bb33; // scope 0 at ui/deriving/issue-58319.rs:40:5: 40:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:40:5: 40:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb33: {
        _103 = &((*_1).33: Little);      // scope 0 at ui/deriving/issue-58319.rs:41:5: 41:11
        _102 = _103;                     // scope 0 at ui/deriving/issue-58319.rs:41:5: 41:11
        _101 = <Little as Clone>::clone(move _102) -> bb34; // scope 0 at ui/deriving/issue-58319.rs:41:5: 41:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:41:5: 41:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb34: {
        _106 = &((*_1).34: Little);      // scope 0 at ui/deriving/issue-58319.rs:42:5: 42:11
        _105 = _106;                     // scope 0 at ui/deriving/issue-58319.rs:42:5: 42:11
        _104 = <Little as Clone>::clone(move _105) -> bb35; // scope 0 at ui/deriving/issue-58319.rs:42:5: 42:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:42:5: 42:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb35: {
        _109 = &((*_1).35: Little);      // scope 0 at ui/deriving/issue-58319.rs:43:5: 43:11
        _108 = _109;                     // scope 0 at ui/deriving/issue-58319.rs:43:5: 43:11
        _107 = <Little as Clone>::clone(move _108) -> bb36; // scope 0 at ui/deriving/issue-58319.rs:43:5: 43:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:43:5: 43:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb36: {
        _112 = &((*_1).36: Little);      // scope 0 at ui/deriving/issue-58319.rs:44:5: 44:11
        _111 = _112;                     // scope 0 at ui/deriving/issue-58319.rs:44:5: 44:11
        _110 = <Little as Clone>::clone(move _111) -> bb37; // scope 0 at ui/deriving/issue-58319.rs:44:5: 44:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:44:5: 44:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb37: {
        _115 = &((*_1).37: Little);      // scope 0 at ui/deriving/issue-58319.rs:45:5: 45:11
        _114 = _115;                     // scope 0 at ui/deriving/issue-58319.rs:45:5: 45:11
        _113 = <Little as Clone>::clone(move _114) -> bb38; // scope 0 at ui/deriving/issue-58319.rs:45:5: 45:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:45:5: 45:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb38: {
        _118 = &((*_1).38: Little);      // scope 0 at ui/deriving/issue-58319.rs:46:5: 46:11
        _117 = _118;                     // scope 0 at ui/deriving/issue-58319.rs:46:5: 46:11
        _116 = <Little as Clone>::clone(move _117) -> bb39; // scope 0 at ui/deriving/issue-58319.rs:46:5: 46:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:46:5: 46:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb39: {
        _121 = &((*_1).39: Little);      // scope 0 at ui/deriving/issue-58319.rs:47:5: 47:11
        _120 = _121;                     // scope 0 at ui/deriving/issue-58319.rs:47:5: 47:11
        _119 = <Little as Clone>::clone(move _120) -> bb40; // scope 0 at ui/deriving/issue-58319.rs:47:5: 47:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:47:5: 47:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb40: {
        _124 = &((*_1).40: Little);      // scope 0 at ui/deriving/issue-58319.rs:48:5: 48:11
        _123 = _124;                     // scope 0 at ui/deriving/issue-58319.rs:48:5: 48:11
        _122 = <Little as Clone>::clone(move _123) -> bb41; // scope 0 at ui/deriving/issue-58319.rs:48:5: 48:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:48:5: 48:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb41: {
        _127 = &((*_1).41: Little);      // scope 0 at ui/deriving/issue-58319.rs:49:5: 49:11
        _126 = _127;                     // scope 0 at ui/deriving/issue-58319.rs:49:5: 49:11
        _125 = <Little as Clone>::clone(move _126) -> bb42; // scope 0 at ui/deriving/issue-58319.rs:49:5: 49:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:49:5: 49:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb42: {
        _130 = &((*_1).42: Little);      // scope 0 at ui/deriving/issue-58319.rs:50:5: 50:11
        _129 = _130;                     // scope 0 at ui/deriving/issue-58319.rs:50:5: 50:11
        _128 = <Little as Clone>::clone(move _129) -> bb43; // scope 0 at ui/deriving/issue-58319.rs:50:5: 50:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:50:5: 50:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb43: {
        _133 = &((*_1).43: Little);      // scope 0 at ui/deriving/issue-58319.rs:51:5: 51:11
        _132 = _133;                     // scope 0 at ui/deriving/issue-58319.rs:51:5: 51:11
        _131 = <Little as Clone>::clone(move _132) -> bb44; // scope 0 at ui/deriving/issue-58319.rs:51:5: 51:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:51:5: 51:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb44: {
        _136 = &((*_1).44: Little);      // scope 0 at ui/deriving/issue-58319.rs:52:5: 52:11
        _135 = _136;                     // scope 0 at ui/deriving/issue-58319.rs:52:5: 52:11
        _134 = <Little as Clone>::clone(move _135) -> bb45; // scope 0 at ui/deriving/issue-58319.rs:52:5: 52:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:52:5: 52:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb45: {
        _139 = &((*_1).45: Little);      // scope 0 at ui/deriving/issue-58319.rs:53:5: 53:11
        _138 = _139;                     // scope 0 at ui/deriving/issue-58319.rs:53:5: 53:11
        _137 = <Little as Clone>::clone(move _138) -> bb46; // scope 0 at ui/deriving/issue-58319.rs:53:5: 53:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:53:5: 53:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb46: {
        _142 = &((*_1).46: Little);      // scope 0 at ui/deriving/issue-58319.rs:54:5: 54:11
        _141 = _142;                     // scope 0 at ui/deriving/issue-58319.rs:54:5: 54:11
        _140 = <Little as Clone>::clone(move _141) -> bb47; // scope 0 at ui/deriving/issue-58319.rs:54:5: 54:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:54:5: 54:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb47: {
        _145 = &((*_1).47: Little);      // scope 0 at ui/deriving/issue-58319.rs:55:5: 55:11
        _144 = _145;                     // scope 0 at ui/deriving/issue-58319.rs:55:5: 55:11
        _143 = <Little as Clone>::clone(move _144) -> bb48; // scope 0 at ui/deriving/issue-58319.rs:55:5: 55:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:55:5: 55:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb48: {
        _148 = &((*_1).48: Little);      // scope 0 at ui/deriving/issue-58319.rs:56:5: 56:11
        _147 = _148;                     // scope 0 at ui/deriving/issue-58319.rs:56:5: 56:11
        _146 = <Little as Clone>::clone(move _147) -> bb49; // scope 0 at ui/deriving/issue-58319.rs:56:5: 56:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:56:5: 56:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb49: {
        _151 = &((*_1).49: Little);      // scope 0 at ui/deriving/issue-58319.rs:57:5: 57:11
        _150 = _151;                     // scope 0 at ui/deriving/issue-58319.rs:57:5: 57:11
        _149 = <Little as Clone>::clone(move _150) -> bb50; // scope 0 at ui/deriving/issue-58319.rs:57:5: 57:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:57:5: 57:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb50: {
        _154 = &((*_1).50: Little);      // scope 0 at ui/deriving/issue-58319.rs:58:5: 58:11
        _153 = _154;                     // scope 0 at ui/deriving/issue-58319.rs:58:5: 58:11
        _152 = <Little as Clone>::clone(move _153) -> bb51; // scope 0 at ui/deriving/issue-58319.rs:58:5: 58:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:58:5: 58:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb51: {
        _157 = &((*_1).51: Little);      // scope 0 at ui/deriving/issue-58319.rs:59:5: 59:11
        _156 = _157;                     // scope 0 at ui/deriving/issue-58319.rs:59:5: 59:11
        _155 = <Little as Clone>::clone(move _156) -> bb52; // scope 0 at ui/deriving/issue-58319.rs:59:5: 59:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:59:5: 59:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb52: {
        _160 = &((*_1).52: Little);      // scope 0 at ui/deriving/issue-58319.rs:60:5: 60:11
        _159 = _160;                     // scope 0 at ui/deriving/issue-58319.rs:60:5: 60:11
        _158 = <Little as Clone>::clone(move _159) -> bb53; // scope 0 at ui/deriving/issue-58319.rs:60:5: 60:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:60:5: 60:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb53: {
        _163 = &((*_1).53: Little);      // scope 0 at ui/deriving/issue-58319.rs:61:5: 61:11
        _162 = _163;                     // scope 0 at ui/deriving/issue-58319.rs:61:5: 61:11
        _161 = <Little as Clone>::clone(move _162) -> bb54; // scope 0 at ui/deriving/issue-58319.rs:61:5: 61:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:61:5: 61:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb54: {
        _166 = &((*_1).54: Little);      // scope 0 at ui/deriving/issue-58319.rs:62:5: 62:11
        _165 = _166;                     // scope 0 at ui/deriving/issue-58319.rs:62:5: 62:11
        _164 = <Little as Clone>::clone(move _165) -> bb55; // scope 0 at ui/deriving/issue-58319.rs:62:5: 62:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:62:5: 62:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb55: {
        _169 = &((*_1).55: Little);      // scope 0 at ui/deriving/issue-58319.rs:63:5: 63:11
        _168 = _169;                     // scope 0 at ui/deriving/issue-58319.rs:63:5: 63:11
        _167 = <Little as Clone>::clone(move _168) -> bb56; // scope 0 at ui/deriving/issue-58319.rs:63:5: 63:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:63:5: 63:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb56: {
        _172 = &((*_1).56: Little);      // scope 0 at ui/deriving/issue-58319.rs:64:5: 64:11
        _171 = _172;                     // scope 0 at ui/deriving/issue-58319.rs:64:5: 64:11
        _170 = <Little as Clone>::clone(move _171) -> bb57; // scope 0 at ui/deriving/issue-58319.rs:64:5: 64:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:64:5: 64:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb57: {
        _175 = &((*_1).57: Little);      // scope 0 at ui/deriving/issue-58319.rs:65:5: 65:11
        _174 = _175;                     // scope 0 at ui/deriving/issue-58319.rs:65:5: 65:11
        _173 = <Little as Clone>::clone(move _174) -> bb58; // scope 0 at ui/deriving/issue-58319.rs:65:5: 65:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:65:5: 65:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb58: {
        _178 = &((*_1).58: Little);      // scope 0 at ui/deriving/issue-58319.rs:66:5: 66:11
        _177 = _178;                     // scope 0 at ui/deriving/issue-58319.rs:66:5: 66:11
        _176 = <Little as Clone>::clone(move _177) -> bb59; // scope 0 at ui/deriving/issue-58319.rs:66:5: 66:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:66:5: 66:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb59: {
        _181 = &((*_1).59: Little);      // scope 0 at ui/deriving/issue-58319.rs:67:5: 67:11
        _180 = _181;                     // scope 0 at ui/deriving/issue-58319.rs:67:5: 67:11
        _179 = <Little as Clone>::clone(move _180) -> bb60; // scope 0 at ui/deriving/issue-58319.rs:67:5: 67:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:67:5: 67:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb60: {
        _184 = &((*_1).60: Little);      // scope 0 at ui/deriving/issue-58319.rs:68:5: 68:11
        _183 = _184;                     // scope 0 at ui/deriving/issue-58319.rs:68:5: 68:11
        _182 = <Little as Clone>::clone(move _183) -> bb61; // scope 0 at ui/deriving/issue-58319.rs:68:5: 68:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:68:5: 68:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb61: {
        _187 = &((*_1).61: Little);      // scope 0 at ui/deriving/issue-58319.rs:69:5: 69:11
        _186 = _187;                     // scope 0 at ui/deriving/issue-58319.rs:69:5: 69:11
        _185 = <Little as Clone>::clone(move _186) -> bb62; // scope 0 at ui/deriving/issue-58319.rs:69:5: 69:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:69:5: 69:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb62: {
        _190 = &((*_1).62: Little);      // scope 0 at ui/deriving/issue-58319.rs:70:5: 70:11
        _189 = _190;                     // scope 0 at ui/deriving/issue-58319.rs:70:5: 70:11
        _188 = <Little as Clone>::clone(move _189) -> bb63; // scope 0 at ui/deriving/issue-58319.rs:70:5: 70:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:70:5: 70:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb63: {
        _193 = &((*_1).63: Little);      // scope 0 at ui/deriving/issue-58319.rs:71:5: 71:11
        _192 = _193;                     // scope 0 at ui/deriving/issue-58319.rs:71:5: 71:11
        _191 = <Little as Clone>::clone(move _192) -> bb64; // scope 0 at ui/deriving/issue-58319.rs:71:5: 71:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:71:5: 71:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb64: {
        _196 = &((*_1).64: Little);      // scope 0 at ui/deriving/issue-58319.rs:72:5: 72:11
        _195 = _196;                     // scope 0 at ui/deriving/issue-58319.rs:72:5: 72:11
        _194 = <Little as Clone>::clone(move _195) -> bb65; // scope 0 at ui/deriving/issue-58319.rs:72:5: 72:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:72:5: 72:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb65: {
        _199 = &((*_1).65: Little);      // scope 0 at ui/deriving/issue-58319.rs:73:5: 73:11
        _198 = _199;                     // scope 0 at ui/deriving/issue-58319.rs:73:5: 73:11
        _197 = <Little as Clone>::clone(move _198) -> bb66; // scope 0 at ui/deriving/issue-58319.rs:73:5: 73:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:73:5: 73:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb66: {
        _202 = &((*_1).66: Little);      // scope 0 at ui/deriving/issue-58319.rs:74:5: 74:11
        _201 = _202;                     // scope 0 at ui/deriving/issue-58319.rs:74:5: 74:11
        _200 = <Little as Clone>::clone(move _201) -> bb67; // scope 0 at ui/deriving/issue-58319.rs:74:5: 74:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:74:5: 74:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb67: {
        _205 = &((*_1).67: Little);      // scope 0 at ui/deriving/issue-58319.rs:75:5: 75:11
        _204 = _205;                     // scope 0 at ui/deriving/issue-58319.rs:75:5: 75:11
        _203 = <Little as Clone>::clone(move _204) -> bb68; // scope 0 at ui/deriving/issue-58319.rs:75:5: 75:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:75:5: 75:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb68: {
        _208 = &((*_1).68: Little);      // scope 0 at ui/deriving/issue-58319.rs:76:5: 76:11
        _207 = _208;                     // scope 0 at ui/deriving/issue-58319.rs:76:5: 76:11
        _206 = <Little as Clone>::clone(move _207) -> bb69; // scope 0 at ui/deriving/issue-58319.rs:76:5: 76:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:76:5: 76:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb69: {
        _211 = &((*_1).69: Little);      // scope 0 at ui/deriving/issue-58319.rs:77:5: 77:11
        _210 = _211;                     // scope 0 at ui/deriving/issue-58319.rs:77:5: 77:11
        _209 = <Little as Clone>::clone(move _210) -> bb70; // scope 0 at ui/deriving/issue-58319.rs:77:5: 77:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:77:5: 77:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb70: {
        _214 = &((*_1).70: Little);      // scope 0 at ui/deriving/issue-58319.rs:78:5: 78:11
        _213 = _214;                     // scope 0 at ui/deriving/issue-58319.rs:78:5: 78:11
        _212 = <Little as Clone>::clone(move _213) -> bb71; // scope 0 at ui/deriving/issue-58319.rs:78:5: 78:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:78:5: 78:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb71: {
        _217 = &((*_1).71: Little);      // scope 0 at ui/deriving/issue-58319.rs:79:5: 79:11
        _216 = _217;                     // scope 0 at ui/deriving/issue-58319.rs:79:5: 79:11
        _215 = <Little as Clone>::clone(move _216) -> bb72; // scope 0 at ui/deriving/issue-58319.rs:79:5: 79:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:79:5: 79:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb72: {
        _220 = &((*_1).72: Little);      // scope 0 at ui/deriving/issue-58319.rs:80:5: 80:11
        _219 = _220;                     // scope 0 at ui/deriving/issue-58319.rs:80:5: 80:11
        _218 = <Little as Clone>::clone(move _219) -> bb73; // scope 0 at ui/deriving/issue-58319.rs:80:5: 80:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:80:5: 80:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb73: {
        _223 = &((*_1).73: Little);      // scope 0 at ui/deriving/issue-58319.rs:81:5: 81:11
        _222 = _223;                     // scope 0 at ui/deriving/issue-58319.rs:81:5: 81:11
        _221 = <Little as Clone>::clone(move _222) -> bb74; // scope 0 at ui/deriving/issue-58319.rs:81:5: 81:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:81:5: 81:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb74: {
        _226 = &((*_1).74: Little);      // scope 0 at ui/deriving/issue-58319.rs:82:5: 82:11
        _225 = _226;                     // scope 0 at ui/deriving/issue-58319.rs:82:5: 82:11
        _224 = <Little as Clone>::clone(move _225) -> bb75; // scope 0 at ui/deriving/issue-58319.rs:82:5: 82:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:82:5: 82:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb75: {
        _229 = &((*_1).75: Little);      // scope 0 at ui/deriving/issue-58319.rs:83:5: 83:11
        _228 = _229;                     // scope 0 at ui/deriving/issue-58319.rs:83:5: 83:11
        _227 = <Little as Clone>::clone(move _228) -> bb76; // scope 0 at ui/deriving/issue-58319.rs:83:5: 83:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:83:5: 83:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb76: {
        _232 = &((*_1).76: Little);      // scope 0 at ui/deriving/issue-58319.rs:84:5: 84:11
        _231 = _232;                     // scope 0 at ui/deriving/issue-58319.rs:84:5: 84:11
        _230 = <Little as Clone>::clone(move _231) -> bb77; // scope 0 at ui/deriving/issue-58319.rs:84:5: 84:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:84:5: 84:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb77: {
        _235 = &((*_1).77: Little);      // scope 0 at ui/deriving/issue-58319.rs:85:5: 85:11
        _234 = _235;                     // scope 0 at ui/deriving/issue-58319.rs:85:5: 85:11
        _233 = <Little as Clone>::clone(move _234) -> bb78; // scope 0 at ui/deriving/issue-58319.rs:85:5: 85:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:85:5: 85:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb78: {
        _238 = &((*_1).78: Little);      // scope 0 at ui/deriving/issue-58319.rs:86:5: 86:11
        _237 = _238;                     // scope 0 at ui/deriving/issue-58319.rs:86:5: 86:11
        _236 = <Little as Clone>::clone(move _237) -> bb79; // scope 0 at ui/deriving/issue-58319.rs:86:5: 86:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:86:5: 86:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb79: {
        _241 = &((*_1).79: Little);      // scope 0 at ui/deriving/issue-58319.rs:87:5: 87:11
        _240 = _241;                     // scope 0 at ui/deriving/issue-58319.rs:87:5: 87:11
        _239 = <Little as Clone>::clone(move _240) -> bb80; // scope 0 at ui/deriving/issue-58319.rs:87:5: 87:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:87:5: 87:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb80: {
        _244 = &((*_1).80: Little);      // scope 0 at ui/deriving/issue-58319.rs:88:5: 88:11
        _243 = _244;                     // scope 0 at ui/deriving/issue-58319.rs:88:5: 88:11
        _242 = <Little as Clone>::clone(move _243) -> bb81; // scope 0 at ui/deriving/issue-58319.rs:88:5: 88:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:88:5: 88:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb81: {
        _247 = &((*_1).81: Little);      // scope 0 at ui/deriving/issue-58319.rs:89:5: 89:11
        _246 = _247;                     // scope 0 at ui/deriving/issue-58319.rs:89:5: 89:11
        _245 = <Little as Clone>::clone(move _246) -> bb82; // scope 0 at ui/deriving/issue-58319.rs:89:5: 89:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:89:5: 89:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb82: {
        _250 = &((*_1).82: Little);      // scope 0 at ui/deriving/issue-58319.rs:90:5: 90:11
        _249 = _250;                     // scope 0 at ui/deriving/issue-58319.rs:90:5: 90:11
        _248 = <Little as Clone>::clone(move _249) -> bb83; // scope 0 at ui/deriving/issue-58319.rs:90:5: 90:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:90:5: 90:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb83: {
        _253 = &((*_1).83: Little);      // scope 0 at ui/deriving/issue-58319.rs:91:5: 91:11
        _252 = _253;                     // scope 0 at ui/deriving/issue-58319.rs:91:5: 91:11
        _251 = <Little as Clone>::clone(move _252) -> bb84; // scope 0 at ui/deriving/issue-58319.rs:91:5: 91:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:91:5: 91:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb84: {
        _256 = &((*_1).84: Little);      // scope 0 at ui/deriving/issue-58319.rs:92:5: 92:11
        _255 = _256;                     // scope 0 at ui/deriving/issue-58319.rs:92:5: 92:11
        _254 = <Little as Clone>::clone(move _255) -> bb85; // scope 0 at ui/deriving/issue-58319.rs:92:5: 92:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:92:5: 92:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb85: {
        _259 = &((*_1).85: Little);      // scope 0 at ui/deriving/issue-58319.rs:93:5: 93:11
        _258 = _259;                     // scope 0 at ui/deriving/issue-58319.rs:93:5: 93:11
        _257 = <Little as Clone>::clone(move _258) -> bb86; // scope 0 at ui/deriving/issue-58319.rs:93:5: 93:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:93:5: 93:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb86: {
        _262 = &((*_1).86: Little);      // scope 0 at ui/deriving/issue-58319.rs:94:5: 94:11
        _261 = _262;                     // scope 0 at ui/deriving/issue-58319.rs:94:5: 94:11
        _260 = <Little as Clone>::clone(move _261) -> bb87; // scope 0 at ui/deriving/issue-58319.rs:94:5: 94:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:94:5: 94:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb87: {
        _265 = &((*_1).87: Little);      // scope 0 at ui/deriving/issue-58319.rs:95:5: 95:11
        _264 = _265;                     // scope 0 at ui/deriving/issue-58319.rs:95:5: 95:11
        _263 = <Little as Clone>::clone(move _264) -> bb88; // scope 0 at ui/deriving/issue-58319.rs:95:5: 95:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:95:5: 95:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb88: {
        _268 = &((*_1).88: Little);      // scope 0 at ui/deriving/issue-58319.rs:96:5: 96:11
        _267 = _268;                     // scope 0 at ui/deriving/issue-58319.rs:96:5: 96:11
        _266 = <Little as Clone>::clone(move _267) -> bb89; // scope 0 at ui/deriving/issue-58319.rs:96:5: 96:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:96:5: 96:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb89: {
        _271 = &((*_1).89: Little);      // scope 0 at ui/deriving/issue-58319.rs:97:5: 97:11
        _270 = _271;                     // scope 0 at ui/deriving/issue-58319.rs:97:5: 97:11
        _269 = <Little as Clone>::clone(move _270) -> bb90; // scope 0 at ui/deriving/issue-58319.rs:97:5: 97:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:97:5: 97:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb90: {
        _274 = &((*_1).90: Little);      // scope 0 at ui/deriving/issue-58319.rs:98:5: 98:11
        _273 = _274;                     // scope 0 at ui/deriving/issue-58319.rs:98:5: 98:11
        _272 = <Little as Clone>::clone(move _273) -> bb91; // scope 0 at ui/deriving/issue-58319.rs:98:5: 98:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:98:5: 98:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb91: {
        _277 = &((*_1).91: Little);      // scope 0 at ui/deriving/issue-58319.rs:99:5: 99:11
        _276 = _277;                     // scope 0 at ui/deriving/issue-58319.rs:99:5: 99:11
        _275 = <Little as Clone>::clone(move _276) -> bb92; // scope 0 at ui/deriving/issue-58319.rs:99:5: 99:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:99:5: 99:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb92: {
        _280 = &((*_1).92: Little);      // scope 0 at ui/deriving/issue-58319.rs:100:5: 100:11
        _279 = _280;                     // scope 0 at ui/deriving/issue-58319.rs:100:5: 100:11
        _278 = <Little as Clone>::clone(move _279) -> bb93; // scope 0 at ui/deriving/issue-58319.rs:100:5: 100:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:100:5: 100:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb93: {
        _283 = &((*_1).93: Little);      // scope 0 at ui/deriving/issue-58319.rs:101:5: 101:11
        _282 = _283;                     // scope 0 at ui/deriving/issue-58319.rs:101:5: 101:11
        _281 = <Little as Clone>::clone(move _282) -> bb94; // scope 0 at ui/deriving/issue-58319.rs:101:5: 101:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:101:5: 101:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb94: {
        _286 = &((*_1).94: Little);      // scope 0 at ui/deriving/issue-58319.rs:102:5: 102:11
        _285 = _286;                     // scope 0 at ui/deriving/issue-58319.rs:102:5: 102:11
        _284 = <Little as Clone>::clone(move _285) -> bb95; // scope 0 at ui/deriving/issue-58319.rs:102:5: 102:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:102:5: 102:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb95: {
        _289 = &((*_1).95: Little);      // scope 0 at ui/deriving/issue-58319.rs:103:5: 103:11
        _288 = _289;                     // scope 0 at ui/deriving/issue-58319.rs:103:5: 103:11
        _287 = <Little as Clone>::clone(move _288) -> bb96; // scope 0 at ui/deriving/issue-58319.rs:103:5: 103:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:103:5: 103:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb96: {
        _292 = &((*_1).96: Little);      // scope 0 at ui/deriving/issue-58319.rs:104:5: 104:11
        _291 = _292;                     // scope 0 at ui/deriving/issue-58319.rs:104:5: 104:11
        _290 = <Little as Clone>::clone(move _291) -> bb97; // scope 0 at ui/deriving/issue-58319.rs:104:5: 104:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:104:5: 104:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb97: {
        _295 = &((*_1).97: Little);      // scope 0 at ui/deriving/issue-58319.rs:105:5: 105:11
        _294 = _295;                     // scope 0 at ui/deriving/issue-58319.rs:105:5: 105:11
        _293 = <Little as Clone>::clone(move _294) -> bb98; // scope 0 at ui/deriving/issue-58319.rs:105:5: 105:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:105:5: 105:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb98: {
        _298 = &((*_1).98: Little);      // scope 0 at ui/deriving/issue-58319.rs:106:5: 106:11
        _297 = _298;                     // scope 0 at ui/deriving/issue-58319.rs:106:5: 106:11
        _296 = <Little as Clone>::clone(move _297) -> bb99; // scope 0 at ui/deriving/issue-58319.rs:106:5: 106:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:106:5: 106:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb99: {
        _301 = &((*_1).99: Little);      // scope 0 at ui/deriving/issue-58319.rs:107:5: 107:11
        _300 = _301;                     // scope 0 at ui/deriving/issue-58319.rs:107:5: 107:11
        _299 = <Little as Clone>::clone(move _300) -> bb100; // scope 0 at ui/deriving/issue-58319.rs:107:5: 107:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:107:5: 107:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb100: {
        _304 = &((*_1).100: Little);     // scope 0 at ui/deriving/issue-58319.rs:108:5: 108:11
        _303 = _304;                     // scope 0 at ui/deriving/issue-58319.rs:108:5: 108:11
        _302 = <Little as Clone>::clone(move _303) -> bb101; // scope 0 at ui/deriving/issue-58319.rs:108:5: 108:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:108:5: 108:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb101: {
        _307 = &((*_1).101: Little);     // scope 0 at ui/deriving/issue-58319.rs:109:5: 109:11
        _306 = _307;                     // scope 0 at ui/deriving/issue-58319.rs:109:5: 109:11
        _305 = <Little as Clone>::clone(move _306) -> bb102; // scope 0 at ui/deriving/issue-58319.rs:109:5: 109:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:109:5: 109:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb102: {
        _310 = &((*_1).102: Little);     // scope 0 at ui/deriving/issue-58319.rs:110:5: 110:11
        _309 = _310;                     // scope 0 at ui/deriving/issue-58319.rs:110:5: 110:11
        _308 = <Little as Clone>::clone(move _309) -> bb103; // scope 0 at ui/deriving/issue-58319.rs:110:5: 110:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:110:5: 110:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb103: {
        _313 = &((*_1).103: Little);     // scope 0 at ui/deriving/issue-58319.rs:111:5: 111:11
        _312 = _313;                     // scope 0 at ui/deriving/issue-58319.rs:111:5: 111:11
        _311 = <Little as Clone>::clone(move _312) -> bb104; // scope 0 at ui/deriving/issue-58319.rs:111:5: 111:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:111:5: 111:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb104: {
        _316 = &((*_1).104: Little);     // scope 0 at ui/deriving/issue-58319.rs:112:5: 112:11
        _315 = _316;                     // scope 0 at ui/deriving/issue-58319.rs:112:5: 112:11
        _314 = <Little as Clone>::clone(move _315) -> bb105; // scope 0 at ui/deriving/issue-58319.rs:112:5: 112:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:112:5: 112:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb105: {
        _319 = &((*_1).105: Little);     // scope 0 at ui/deriving/issue-58319.rs:113:5: 113:11
        _318 = _319;                     // scope 0 at ui/deriving/issue-58319.rs:113:5: 113:11
        _317 = <Little as Clone>::clone(move _318) -> bb106; // scope 0 at ui/deriving/issue-58319.rs:113:5: 113:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:113:5: 113:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb106: {
        _322 = &((*_1).106: Little);     // scope 0 at ui/deriving/issue-58319.rs:114:5: 114:11
        _321 = _322;                     // scope 0 at ui/deriving/issue-58319.rs:114:5: 114:11
        _320 = <Little as Clone>::clone(move _321) -> bb107; // scope 0 at ui/deriving/issue-58319.rs:114:5: 114:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:114:5: 114:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb107: {
        _325 = &((*_1).107: Little);     // scope 0 at ui/deriving/issue-58319.rs:115:5: 115:11
        _324 = _325;                     // scope 0 at ui/deriving/issue-58319.rs:115:5: 115:11
        _323 = <Little as Clone>::clone(move _324) -> bb108; // scope 0 at ui/deriving/issue-58319.rs:115:5: 115:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:115:5: 115:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb108: {
        _328 = &((*_1).108: Little);     // scope 0 at ui/deriving/issue-58319.rs:116:5: 116:11
        _327 = _328;                     // scope 0 at ui/deriving/issue-58319.rs:116:5: 116:11
        _326 = <Little as Clone>::clone(move _327) -> bb109; // scope 0 at ui/deriving/issue-58319.rs:116:5: 116:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:116:5: 116:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb109: {
        _331 = &((*_1).109: Little);     // scope 0 at ui/deriving/issue-58319.rs:117:5: 117:11
        _330 = _331;                     // scope 0 at ui/deriving/issue-58319.rs:117:5: 117:11
        _329 = <Little as Clone>::clone(move _330) -> bb110; // scope 0 at ui/deriving/issue-58319.rs:117:5: 117:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:117:5: 117:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb110: {
        _334 = &((*_1).110: Little);     // scope 0 at ui/deriving/issue-58319.rs:118:5: 118:11
        _333 = _334;                     // scope 0 at ui/deriving/issue-58319.rs:118:5: 118:11
        _332 = <Little as Clone>::clone(move _333) -> bb111; // scope 0 at ui/deriving/issue-58319.rs:118:5: 118:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:118:5: 118:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb111: {
        _337 = &((*_1).111: Little);     // scope 0 at ui/deriving/issue-58319.rs:119:5: 119:11
        _336 = _337;                     // scope 0 at ui/deriving/issue-58319.rs:119:5: 119:11
        _335 = <Little as Clone>::clone(move _336) -> bb112; // scope 0 at ui/deriving/issue-58319.rs:119:5: 119:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:119:5: 119:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb112: {
        _340 = &((*_1).112: Little);     // scope 0 at ui/deriving/issue-58319.rs:120:5: 120:11
        _339 = _340;                     // scope 0 at ui/deriving/issue-58319.rs:120:5: 120:11
        _338 = <Little as Clone>::clone(move _339) -> bb113; // scope 0 at ui/deriving/issue-58319.rs:120:5: 120:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:120:5: 120:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb113: {
        _343 = &((*_1).113: Little);     // scope 0 at ui/deriving/issue-58319.rs:121:5: 121:11
        _342 = _343;                     // scope 0 at ui/deriving/issue-58319.rs:121:5: 121:11
        _341 = <Little as Clone>::clone(move _342) -> bb114; // scope 0 at ui/deriving/issue-58319.rs:121:5: 121:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:121:5: 121:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb114: {
        _346 = &((*_1).114: Little);     // scope 0 at ui/deriving/issue-58319.rs:122:5: 122:11
        _345 = _346;                     // scope 0 at ui/deriving/issue-58319.rs:122:5: 122:11
        _344 = <Little as Clone>::clone(move _345) -> bb115; // scope 0 at ui/deriving/issue-58319.rs:122:5: 122:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:122:5: 122:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb115: {
        _349 = &((*_1).115: Little);     // scope 0 at ui/deriving/issue-58319.rs:123:5: 123:11
        _348 = _349;                     // scope 0 at ui/deriving/issue-58319.rs:123:5: 123:11
        _347 = <Little as Clone>::clone(move _348) -> bb116; // scope 0 at ui/deriving/issue-58319.rs:123:5: 123:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:123:5: 123:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb116: {
        _352 = &((*_1).116: Little);     // scope 0 at ui/deriving/issue-58319.rs:124:5: 124:11
        _351 = _352;                     // scope 0 at ui/deriving/issue-58319.rs:124:5: 124:11
        _350 = <Little as Clone>::clone(move _351) -> bb117; // scope 0 at ui/deriving/issue-58319.rs:124:5: 124:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:124:5: 124:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb117: {
        _355 = &((*_1).117: Little);     // scope 0 at ui/deriving/issue-58319.rs:125:5: 125:11
        _354 = _355;                     // scope 0 at ui/deriving/issue-58319.rs:125:5: 125:11
        _353 = <Little as Clone>::clone(move _354) -> bb118; // scope 0 at ui/deriving/issue-58319.rs:125:5: 125:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:125:5: 125:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb118: {
        _358 = &((*_1).118: Little);     // scope 0 at ui/deriving/issue-58319.rs:126:5: 126:11
        _357 = _358;                     // scope 0 at ui/deriving/issue-58319.rs:126:5: 126:11
        _356 = <Little as Clone>::clone(move _357) -> bb119; // scope 0 at ui/deriving/issue-58319.rs:126:5: 126:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:126:5: 126:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb119: {
        _361 = &((*_1).119: Little);     // scope 0 at ui/deriving/issue-58319.rs:127:5: 127:11
        _360 = _361;                     // scope 0 at ui/deriving/issue-58319.rs:127:5: 127:11
        _359 = <Little as Clone>::clone(move _360) -> bb120; // scope 0 at ui/deriving/issue-58319.rs:127:5: 127:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:127:5: 127:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb120: {
        _364 = &((*_1).120: Little);     // scope 0 at ui/deriving/issue-58319.rs:128:5: 128:11
        _363 = _364;                     // scope 0 at ui/deriving/issue-58319.rs:128:5: 128:11
        _362 = <Little as Clone>::clone(move _363) -> bb121; // scope 0 at ui/deriving/issue-58319.rs:128:5: 128:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:128:5: 128:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb121: {
        _367 = &((*_1).121: Little);     // scope 0 at ui/deriving/issue-58319.rs:129:5: 129:11
        _366 = _367;                     // scope 0 at ui/deriving/issue-58319.rs:129:5: 129:11
        _365 = <Little as Clone>::clone(move _366) -> bb122; // scope 0 at ui/deriving/issue-58319.rs:129:5: 129:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:129:5: 129:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb122: {
        _370 = &((*_1).122: Little);     // scope 0 at ui/deriving/issue-58319.rs:130:5: 130:11
        _369 = _370;                     // scope 0 at ui/deriving/issue-58319.rs:130:5: 130:11
        _368 = <Little as Clone>::clone(move _369) -> bb123; // scope 0 at ui/deriving/issue-58319.rs:130:5: 130:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:130:5: 130:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb123: {
        _373 = &((*_1).123: Little);     // scope 0 at ui/deriving/issue-58319.rs:131:5: 131:11
        _372 = _373;                     // scope 0 at ui/deriving/issue-58319.rs:131:5: 131:11
        _371 = <Little as Clone>::clone(move _372) -> bb124; // scope 0 at ui/deriving/issue-58319.rs:131:5: 131:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:131:5: 131:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb124: {
        _376 = &((*_1).124: Little);     // scope 0 at ui/deriving/issue-58319.rs:132:5: 132:11
        _375 = _376;                     // scope 0 at ui/deriving/issue-58319.rs:132:5: 132:11
        _374 = <Little as Clone>::clone(move _375) -> bb125; // scope 0 at ui/deriving/issue-58319.rs:132:5: 132:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:132:5: 132:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb125: {
        _379 = &((*_1).125: Little);     // scope 0 at ui/deriving/issue-58319.rs:133:5: 133:11
        _378 = _379;                     // scope 0 at ui/deriving/issue-58319.rs:133:5: 133:11
        _377 = <Little as Clone>::clone(move _378) -> bb126; // scope 0 at ui/deriving/issue-58319.rs:133:5: 133:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:133:5: 133:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb126: {
        _382 = &((*_1).126: Little);     // scope 0 at ui/deriving/issue-58319.rs:134:5: 134:11
        _381 = _382;                     // scope 0 at ui/deriving/issue-58319.rs:134:5: 134:11
        _380 = <Little as Clone>::clone(move _381) -> bb127; // scope 0 at ui/deriving/issue-58319.rs:134:5: 134:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:134:5: 134:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb127: {
        _385 = &((*_1).127: Little);     // scope 0 at ui/deriving/issue-58319.rs:135:5: 135:11
        _384 = _385;                     // scope 0 at ui/deriving/issue-58319.rs:135:5: 135:11
        _383 = <Little as Clone>::clone(move _384) -> bb128; // scope 0 at ui/deriving/issue-58319.rs:135:5: 135:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:135:5: 135:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb128: {
        _388 = &((*_1).128: Little);     // scope 0 at ui/deriving/issue-58319.rs:136:5: 136:11
        _387 = _388;                     // scope 0 at ui/deriving/issue-58319.rs:136:5: 136:11
        _386 = <Little as Clone>::clone(move _387) -> bb129; // scope 0 at ui/deriving/issue-58319.rs:136:5: 136:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:136:5: 136:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb129: {
        _391 = &((*_1).129: Little);     // scope 0 at ui/deriving/issue-58319.rs:137:5: 137:11
        _390 = _391;                     // scope 0 at ui/deriving/issue-58319.rs:137:5: 137:11
        _389 = <Little as Clone>::clone(move _390) -> bb130; // scope 0 at ui/deriving/issue-58319.rs:137:5: 137:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:137:5: 137:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb130: {
        _394 = &((*_1).130: Little);     // scope 0 at ui/deriving/issue-58319.rs:138:5: 138:11
        _393 = _394;                     // scope 0 at ui/deriving/issue-58319.rs:138:5: 138:11
        _392 = <Little as Clone>::clone(move _393) -> bb131; // scope 0 at ui/deriving/issue-58319.rs:138:5: 138:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:138:5: 138:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb131: {
        _397 = &((*_1).131: Little);     // scope 0 at ui/deriving/issue-58319.rs:139:5: 139:11
        _396 = _397;                     // scope 0 at ui/deriving/issue-58319.rs:139:5: 139:11
        _395 = <Little as Clone>::clone(move _396) -> bb132; // scope 0 at ui/deriving/issue-58319.rs:139:5: 139:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:139:5: 139:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb132: {
        _400 = &((*_1).132: Little);     // scope 0 at ui/deriving/issue-58319.rs:140:5: 140:11
        _399 = _400;                     // scope 0 at ui/deriving/issue-58319.rs:140:5: 140:11
        _398 = <Little as Clone>::clone(move _399) -> bb133; // scope 0 at ui/deriving/issue-58319.rs:140:5: 140:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:140:5: 140:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb133: {
        _403 = &((*_1).133: Little);     // scope 0 at ui/deriving/issue-58319.rs:141:5: 141:11
        _402 = _403;                     // scope 0 at ui/deriving/issue-58319.rs:141:5: 141:11
        _401 = <Little as Clone>::clone(move _402) -> bb134; // scope 0 at ui/deriving/issue-58319.rs:141:5: 141:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:141:5: 141:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb134: {
        _406 = &((*_1).134: Little);     // scope 0 at ui/deriving/issue-58319.rs:142:5: 142:11
        _405 = _406;                     // scope 0 at ui/deriving/issue-58319.rs:142:5: 142:11
        _404 = <Little as Clone>::clone(move _405) -> bb135; // scope 0 at ui/deriving/issue-58319.rs:142:5: 142:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:142:5: 142:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb135: {
        _409 = &((*_1).135: Little);     // scope 0 at ui/deriving/issue-58319.rs:143:5: 143:11
        _408 = _409;                     // scope 0 at ui/deriving/issue-58319.rs:143:5: 143:11
        _407 = <Little as Clone>::clone(move _408) -> bb136; // scope 0 at ui/deriving/issue-58319.rs:143:5: 143:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:143:5: 143:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb136: {
        _412 = &((*_1).136: Little);     // scope 0 at ui/deriving/issue-58319.rs:144:5: 144:11
        _411 = _412;                     // scope 0 at ui/deriving/issue-58319.rs:144:5: 144:11
        _410 = <Little as Clone>::clone(move _411) -> bb137; // scope 0 at ui/deriving/issue-58319.rs:144:5: 144:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:144:5: 144:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb137: {
        _415 = &((*_1).137: Little);     // scope 0 at ui/deriving/issue-58319.rs:145:5: 145:11
        _414 = _415;                     // scope 0 at ui/deriving/issue-58319.rs:145:5: 145:11
        _413 = <Little as Clone>::clone(move _414) -> bb138; // scope 0 at ui/deriving/issue-58319.rs:145:5: 145:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:145:5: 145:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb138: {
        _418 = &((*_1).138: Little);     // scope 0 at ui/deriving/issue-58319.rs:146:5: 146:11
        _417 = _418;                     // scope 0 at ui/deriving/issue-58319.rs:146:5: 146:11
        _416 = <Little as Clone>::clone(move _417) -> bb139; // scope 0 at ui/deriving/issue-58319.rs:146:5: 146:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:146:5: 146:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb139: {
        _421 = &((*_1).139: Little);     // scope 0 at ui/deriving/issue-58319.rs:147:5: 147:11
        _420 = _421;                     // scope 0 at ui/deriving/issue-58319.rs:147:5: 147:11
        _419 = <Little as Clone>::clone(move _420) -> bb140; // scope 0 at ui/deriving/issue-58319.rs:147:5: 147:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:147:5: 147:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb140: {
        _424 = &((*_1).140: Little);     // scope 0 at ui/deriving/issue-58319.rs:148:5: 148:11
        _423 = _424;                     // scope 0 at ui/deriving/issue-58319.rs:148:5: 148:11
        _422 = <Little as Clone>::clone(move _423) -> bb141; // scope 0 at ui/deriving/issue-58319.rs:148:5: 148:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:148:5: 148:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb141: {
        _427 = &((*_1).141: Little);     // scope 0 at ui/deriving/issue-58319.rs:149:5: 149:11
        _426 = _427;                     // scope 0 at ui/deriving/issue-58319.rs:149:5: 149:11
        _425 = <Little as Clone>::clone(move _426) -> bb142; // scope 0 at ui/deriving/issue-58319.rs:149:5: 149:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:149:5: 149:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb142: {
        _430 = &((*_1).142: Little);     // scope 0 at ui/deriving/issue-58319.rs:150:5: 150:11
        _429 = _430;                     // scope 0 at ui/deriving/issue-58319.rs:150:5: 150:11
        _428 = <Little as Clone>::clone(move _429) -> bb143; // scope 0 at ui/deriving/issue-58319.rs:150:5: 150:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:150:5: 150:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb143: {
        _433 = &((*_1).143: Little);     // scope 0 at ui/deriving/issue-58319.rs:151:5: 151:11
        _432 = _433;                     // scope 0 at ui/deriving/issue-58319.rs:151:5: 151:11
        _431 = <Little as Clone>::clone(move _432) -> bb144; // scope 0 at ui/deriving/issue-58319.rs:151:5: 151:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:151:5: 151:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb144: {
        _436 = &((*_1).144: Little);     // scope 0 at ui/deriving/issue-58319.rs:152:5: 152:11
        _435 = _436;                     // scope 0 at ui/deriving/issue-58319.rs:152:5: 152:11
        _434 = <Little as Clone>::clone(move _435) -> bb145; // scope 0 at ui/deriving/issue-58319.rs:152:5: 152:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:152:5: 152:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb145: {
        _439 = &((*_1).145: Little);     // scope 0 at ui/deriving/issue-58319.rs:153:5: 153:11
        _438 = _439;                     // scope 0 at ui/deriving/issue-58319.rs:153:5: 153:11
        _437 = <Little as Clone>::clone(move _438) -> bb146; // scope 0 at ui/deriving/issue-58319.rs:153:5: 153:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:153:5: 153:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb146: {
        _442 = &((*_1).146: Little);     // scope 0 at ui/deriving/issue-58319.rs:154:5: 154:11
        _441 = _442;                     // scope 0 at ui/deriving/issue-58319.rs:154:5: 154:11
        _440 = <Little as Clone>::clone(move _441) -> bb147; // scope 0 at ui/deriving/issue-58319.rs:154:5: 154:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:154:5: 154:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb147: {
        _445 = &((*_1).147: Little);     // scope 0 at ui/deriving/issue-58319.rs:155:5: 155:11
        _444 = _445;                     // scope 0 at ui/deriving/issue-58319.rs:155:5: 155:11
        _443 = <Little as Clone>::clone(move _444) -> bb148; // scope 0 at ui/deriving/issue-58319.rs:155:5: 155:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:155:5: 155:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb148: {
        _448 = &((*_1).148: Little);     // scope 0 at ui/deriving/issue-58319.rs:156:5: 156:11
        _447 = _448;                     // scope 0 at ui/deriving/issue-58319.rs:156:5: 156:11
        _446 = <Little as Clone>::clone(move _447) -> bb149; // scope 0 at ui/deriving/issue-58319.rs:156:5: 156:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:156:5: 156:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb149: {
        _451 = &((*_1).149: Little);     // scope 0 at ui/deriving/issue-58319.rs:157:5: 157:11
        _450 = _451;                     // scope 0 at ui/deriving/issue-58319.rs:157:5: 157:11
        _449 = <Little as Clone>::clone(move _450) -> bb150; // scope 0 at ui/deriving/issue-58319.rs:157:5: 157:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:157:5: 157:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb150: {
        _454 = &((*_1).150: Little);     // scope 0 at ui/deriving/issue-58319.rs:158:5: 158:11
        _453 = _454;                     // scope 0 at ui/deriving/issue-58319.rs:158:5: 158:11
        _452 = <Little as Clone>::clone(move _453) -> bb151; // scope 0 at ui/deriving/issue-58319.rs:158:5: 158:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:158:5: 158:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb151: {
        _457 = &((*_1).151: Little);     // scope 0 at ui/deriving/issue-58319.rs:159:5: 159:11
        _456 = _457;                     // scope 0 at ui/deriving/issue-58319.rs:159:5: 159:11
        _455 = <Little as Clone>::clone(move _456) -> bb152; // scope 0 at ui/deriving/issue-58319.rs:159:5: 159:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:159:5: 159:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb152: {
        _460 = &((*_1).152: Little);     // scope 0 at ui/deriving/issue-58319.rs:160:5: 160:11
        _459 = _460;                     // scope 0 at ui/deriving/issue-58319.rs:160:5: 160:11
        _458 = <Little as Clone>::clone(move _459) -> bb153; // scope 0 at ui/deriving/issue-58319.rs:160:5: 160:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:160:5: 160:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb153: {
        _463 = &((*_1).153: Little);     // scope 0 at ui/deriving/issue-58319.rs:161:5: 161:11
        _462 = _463;                     // scope 0 at ui/deriving/issue-58319.rs:161:5: 161:11
        _461 = <Little as Clone>::clone(move _462) -> bb154; // scope 0 at ui/deriving/issue-58319.rs:161:5: 161:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:161:5: 161:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb154: {
        _466 = &((*_1).154: Little);     // scope 0 at ui/deriving/issue-58319.rs:162:5: 162:11
        _465 = _466;                     // scope 0 at ui/deriving/issue-58319.rs:162:5: 162:11
        _464 = <Little as Clone>::clone(move _465) -> bb155; // scope 0 at ui/deriving/issue-58319.rs:162:5: 162:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:162:5: 162:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb155: {
        _469 = &((*_1).155: Little);     // scope 0 at ui/deriving/issue-58319.rs:163:5: 163:11
        _468 = _469;                     // scope 0 at ui/deriving/issue-58319.rs:163:5: 163:11
        _467 = <Little as Clone>::clone(move _468) -> bb156; // scope 0 at ui/deriving/issue-58319.rs:163:5: 163:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:163:5: 163:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb156: {
        _472 = &((*_1).156: Little);     // scope 0 at ui/deriving/issue-58319.rs:164:5: 164:11
        _471 = _472;                     // scope 0 at ui/deriving/issue-58319.rs:164:5: 164:11
        _470 = <Little as Clone>::clone(move _471) -> bb157; // scope 0 at ui/deriving/issue-58319.rs:164:5: 164:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:164:5: 164:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb157: {
        _475 = &((*_1).157: Little);     // scope 0 at ui/deriving/issue-58319.rs:165:5: 165:11
        _474 = _475;                     // scope 0 at ui/deriving/issue-58319.rs:165:5: 165:11
        _473 = <Little as Clone>::clone(move _474) -> bb158; // scope 0 at ui/deriving/issue-58319.rs:165:5: 165:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:165:5: 165:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb158: {
        _478 = &((*_1).158: Little);     // scope 0 at ui/deriving/issue-58319.rs:166:5: 166:11
        _477 = _478;                     // scope 0 at ui/deriving/issue-58319.rs:166:5: 166:11
        _476 = <Little as Clone>::clone(move _477) -> bb159; // scope 0 at ui/deriving/issue-58319.rs:166:5: 166:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:166:5: 166:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb159: {
        _481 = &((*_1).159: Little);     // scope 0 at ui/deriving/issue-58319.rs:167:5: 167:11
        _480 = _481;                     // scope 0 at ui/deriving/issue-58319.rs:167:5: 167:11
        _479 = <Little as Clone>::clone(move _480) -> bb160; // scope 0 at ui/deriving/issue-58319.rs:167:5: 167:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:167:5: 167:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb160: {
        _484 = &((*_1).160: Little);     // scope 0 at ui/deriving/issue-58319.rs:168:5: 168:11
        _483 = _484;                     // scope 0 at ui/deriving/issue-58319.rs:168:5: 168:11
        _482 = <Little as Clone>::clone(move _483) -> bb161; // scope 0 at ui/deriving/issue-58319.rs:168:5: 168:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:168:5: 168:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb161: {
        _487 = &((*_1).161: Little);     // scope 0 at ui/deriving/issue-58319.rs:169:5: 169:11
        _486 = _487;                     // scope 0 at ui/deriving/issue-58319.rs:169:5: 169:11
        _485 = <Little as Clone>::clone(move _486) -> bb162; // scope 0 at ui/deriving/issue-58319.rs:169:5: 169:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:169:5: 169:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb162: {
        _490 = &((*_1).162: Little);     // scope 0 at ui/deriving/issue-58319.rs:170:5: 170:11
        _489 = _490;                     // scope 0 at ui/deriving/issue-58319.rs:170:5: 170:11
        _488 = <Little as Clone>::clone(move _489) -> bb163; // scope 0 at ui/deriving/issue-58319.rs:170:5: 170:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:170:5: 170:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb163: {
        _493 = &((*_1).163: Little);     // scope 0 at ui/deriving/issue-58319.rs:171:5: 171:11
        _492 = _493;                     // scope 0 at ui/deriving/issue-58319.rs:171:5: 171:11
        _491 = <Little as Clone>::clone(move _492) -> bb164; // scope 0 at ui/deriving/issue-58319.rs:171:5: 171:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:171:5: 171:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb164: {
        _496 = &((*_1).164: Little);     // scope 0 at ui/deriving/issue-58319.rs:172:5: 172:11
        _495 = _496;                     // scope 0 at ui/deriving/issue-58319.rs:172:5: 172:11
        _494 = <Little as Clone>::clone(move _495) -> bb165; // scope 0 at ui/deriving/issue-58319.rs:172:5: 172:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:172:5: 172:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb165: {
        _499 = &((*_1).165: Little);     // scope 0 at ui/deriving/issue-58319.rs:173:5: 173:11
        _498 = _499;                     // scope 0 at ui/deriving/issue-58319.rs:173:5: 173:11
        _497 = <Little as Clone>::clone(move _498) -> bb166; // scope 0 at ui/deriving/issue-58319.rs:173:5: 173:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:173:5: 173:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb166: {
        _502 = &((*_1).166: Little);     // scope 0 at ui/deriving/issue-58319.rs:174:5: 174:11
        _501 = _502;                     // scope 0 at ui/deriving/issue-58319.rs:174:5: 174:11
        _500 = <Little as Clone>::clone(move _501) -> bb167; // scope 0 at ui/deriving/issue-58319.rs:174:5: 174:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:174:5: 174:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb167: {
        _505 = &((*_1).167: Little);     // scope 0 at ui/deriving/issue-58319.rs:175:5: 175:11
        _504 = _505;                     // scope 0 at ui/deriving/issue-58319.rs:175:5: 175:11
        _503 = <Little as Clone>::clone(move _504) -> bb168; // scope 0 at ui/deriving/issue-58319.rs:175:5: 175:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:175:5: 175:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb168: {
        _508 = &((*_1).168: Little);     // scope 0 at ui/deriving/issue-58319.rs:176:5: 176:11
        _507 = _508;                     // scope 0 at ui/deriving/issue-58319.rs:176:5: 176:11
        _506 = <Little as Clone>::clone(move _507) -> bb169; // scope 0 at ui/deriving/issue-58319.rs:176:5: 176:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:176:5: 176:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb169: {
        _511 = &((*_1).169: Little);     // scope 0 at ui/deriving/issue-58319.rs:177:5: 177:11
        _510 = _511;                     // scope 0 at ui/deriving/issue-58319.rs:177:5: 177:11
        _509 = <Little as Clone>::clone(move _510) -> bb170; // scope 0 at ui/deriving/issue-58319.rs:177:5: 177:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:177:5: 177:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb170: {
        _514 = &((*_1).170: Little);     // scope 0 at ui/deriving/issue-58319.rs:178:5: 178:11
        _513 = _514;                     // scope 0 at ui/deriving/issue-58319.rs:178:5: 178:11
        _512 = <Little as Clone>::clone(move _513) -> bb171; // scope 0 at ui/deriving/issue-58319.rs:178:5: 178:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:178:5: 178:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb171: {
        _517 = &((*_1).171: Little);     // scope 0 at ui/deriving/issue-58319.rs:179:5: 179:11
        _516 = _517;                     // scope 0 at ui/deriving/issue-58319.rs:179:5: 179:11
        _515 = <Little as Clone>::clone(move _516) -> bb172; // scope 0 at ui/deriving/issue-58319.rs:179:5: 179:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:179:5: 179:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb172: {
        _520 = &((*_1).172: Little);     // scope 0 at ui/deriving/issue-58319.rs:180:5: 180:11
        _519 = _520;                     // scope 0 at ui/deriving/issue-58319.rs:180:5: 180:11
        _518 = <Little as Clone>::clone(move _519) -> bb173; // scope 0 at ui/deriving/issue-58319.rs:180:5: 180:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:180:5: 180:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb173: {
        _523 = &((*_1).173: Little);     // scope 0 at ui/deriving/issue-58319.rs:181:5: 181:11
        _522 = _523;                     // scope 0 at ui/deriving/issue-58319.rs:181:5: 181:11
        _521 = <Little as Clone>::clone(move _522) -> bb174; // scope 0 at ui/deriving/issue-58319.rs:181:5: 181:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:181:5: 181:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb174: {
        _526 = &((*_1).174: Little);     // scope 0 at ui/deriving/issue-58319.rs:182:5: 182:11
        _525 = _526;                     // scope 0 at ui/deriving/issue-58319.rs:182:5: 182:11
        _524 = <Little as Clone>::clone(move _525) -> bb175; // scope 0 at ui/deriving/issue-58319.rs:182:5: 182:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:182:5: 182:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb175: {
        _529 = &((*_1).175: Little);     // scope 0 at ui/deriving/issue-58319.rs:183:5: 183:11
        _528 = _529;                     // scope 0 at ui/deriving/issue-58319.rs:183:5: 183:11
        _527 = <Little as Clone>::clone(move _528) -> bb176; // scope 0 at ui/deriving/issue-58319.rs:183:5: 183:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:183:5: 183:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb176: {
        _532 = &((*_1).176: Little);     // scope 0 at ui/deriving/issue-58319.rs:184:5: 184:11
        _531 = _532;                     // scope 0 at ui/deriving/issue-58319.rs:184:5: 184:11
        _530 = <Little as Clone>::clone(move _531) -> bb177; // scope 0 at ui/deriving/issue-58319.rs:184:5: 184:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:184:5: 184:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb177: {
        _535 = &((*_1).177: Little);     // scope 0 at ui/deriving/issue-58319.rs:185:5: 185:11
        _534 = _535;                     // scope 0 at ui/deriving/issue-58319.rs:185:5: 185:11
        _533 = <Little as Clone>::clone(move _534) -> bb178; // scope 0 at ui/deriving/issue-58319.rs:185:5: 185:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:185:5: 185:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb178: {
        _538 = &((*_1).178: Little);     // scope 0 at ui/deriving/issue-58319.rs:186:5: 186:11
        _537 = _538;                     // scope 0 at ui/deriving/issue-58319.rs:186:5: 186:11
        _536 = <Little as Clone>::clone(move _537) -> bb179; // scope 0 at ui/deriving/issue-58319.rs:186:5: 186:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:186:5: 186:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb179: {
        _541 = &((*_1).179: Little);     // scope 0 at ui/deriving/issue-58319.rs:187:5: 187:11
        _540 = _541;                     // scope 0 at ui/deriving/issue-58319.rs:187:5: 187:11
        _539 = <Little as Clone>::clone(move _540) -> bb180; // scope 0 at ui/deriving/issue-58319.rs:187:5: 187:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:187:5: 187:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb180: {
        _544 = &((*_1).180: Little);     // scope 0 at ui/deriving/issue-58319.rs:188:5: 188:11
        _543 = _544;                     // scope 0 at ui/deriving/issue-58319.rs:188:5: 188:11
        _542 = <Little as Clone>::clone(move _543) -> bb181; // scope 0 at ui/deriving/issue-58319.rs:188:5: 188:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:188:5: 188:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb181: {
        _547 = &((*_1).181: Little);     // scope 0 at ui/deriving/issue-58319.rs:189:5: 189:11
        _546 = _547;                     // scope 0 at ui/deriving/issue-58319.rs:189:5: 189:11
        _545 = <Little as Clone>::clone(move _546) -> bb182; // scope 0 at ui/deriving/issue-58319.rs:189:5: 189:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:189:5: 189:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb182: {
        _550 = &((*_1).182: Little);     // scope 0 at ui/deriving/issue-58319.rs:190:5: 190:11
        _549 = _550;                     // scope 0 at ui/deriving/issue-58319.rs:190:5: 190:11
        _548 = <Little as Clone>::clone(move _549) -> bb183; // scope 0 at ui/deriving/issue-58319.rs:190:5: 190:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:190:5: 190:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb183: {
        _553 = &((*_1).183: Little);     // scope 0 at ui/deriving/issue-58319.rs:191:5: 191:11
        _552 = _553;                     // scope 0 at ui/deriving/issue-58319.rs:191:5: 191:11
        _551 = <Little as Clone>::clone(move _552) -> bb184; // scope 0 at ui/deriving/issue-58319.rs:191:5: 191:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:191:5: 191:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb184: {
        _556 = &((*_1).184: Little);     // scope 0 at ui/deriving/issue-58319.rs:192:5: 192:11
        _555 = _556;                     // scope 0 at ui/deriving/issue-58319.rs:192:5: 192:11
        _554 = <Little as Clone>::clone(move _555) -> bb185; // scope 0 at ui/deriving/issue-58319.rs:192:5: 192:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:192:5: 192:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb185: {
        _559 = &((*_1).185: Little);     // scope 0 at ui/deriving/issue-58319.rs:193:5: 193:11
        _558 = _559;                     // scope 0 at ui/deriving/issue-58319.rs:193:5: 193:11
        _557 = <Little as Clone>::clone(move _558) -> bb186; // scope 0 at ui/deriving/issue-58319.rs:193:5: 193:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:193:5: 193:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb186: {
        _562 = &((*_1).186: Little);     // scope 0 at ui/deriving/issue-58319.rs:194:5: 194:11
        _561 = _562;                     // scope 0 at ui/deriving/issue-58319.rs:194:5: 194:11
        _560 = <Little as Clone>::clone(move _561) -> bb187; // scope 0 at ui/deriving/issue-58319.rs:194:5: 194:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:194:5: 194:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb187: {
        _565 = &((*_1).187: Little);     // scope 0 at ui/deriving/issue-58319.rs:195:5: 195:11
        _564 = _565;                     // scope 0 at ui/deriving/issue-58319.rs:195:5: 195:11
        _563 = <Little as Clone>::clone(move _564) -> bb188; // scope 0 at ui/deriving/issue-58319.rs:195:5: 195:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:195:5: 195:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb188: {
        _568 = &((*_1).188: Little);     // scope 0 at ui/deriving/issue-58319.rs:196:5: 196:11
        _567 = _568;                     // scope 0 at ui/deriving/issue-58319.rs:196:5: 196:11
        _566 = <Little as Clone>::clone(move _567) -> bb189; // scope 0 at ui/deriving/issue-58319.rs:196:5: 196:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:196:5: 196:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb189: {
        _571 = &((*_1).189: Little);     // scope 0 at ui/deriving/issue-58319.rs:197:5: 197:11
        _570 = _571;                     // scope 0 at ui/deriving/issue-58319.rs:197:5: 197:11
        _569 = <Little as Clone>::clone(move _570) -> bb190; // scope 0 at ui/deriving/issue-58319.rs:197:5: 197:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:197:5: 197:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb190: {
        _574 = &((*_1).190: Little);     // scope 0 at ui/deriving/issue-58319.rs:198:5: 198:11
        _573 = _574;                     // scope 0 at ui/deriving/issue-58319.rs:198:5: 198:11
        _572 = <Little as Clone>::clone(move _573) -> bb191; // scope 0 at ui/deriving/issue-58319.rs:198:5: 198:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:198:5: 198:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb191: {
        _577 = &((*_1).191: Little);     // scope 0 at ui/deriving/issue-58319.rs:199:5: 199:11
        _576 = _577;                     // scope 0 at ui/deriving/issue-58319.rs:199:5: 199:11
        _575 = <Little as Clone>::clone(move _576) -> bb192; // scope 0 at ui/deriving/issue-58319.rs:199:5: 199:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:199:5: 199:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb192: {
        _580 = &((*_1).192: Little);     // scope 0 at ui/deriving/issue-58319.rs:200:5: 200:11
        _579 = _580;                     // scope 0 at ui/deriving/issue-58319.rs:200:5: 200:11
        _578 = <Little as Clone>::clone(move _579) -> bb193; // scope 0 at ui/deriving/issue-58319.rs:200:5: 200:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:200:5: 200:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb193: {
        _583 = &((*_1).193: Little);     // scope 0 at ui/deriving/issue-58319.rs:201:5: 201:11
        _582 = _583;                     // scope 0 at ui/deriving/issue-58319.rs:201:5: 201:11
        _581 = <Little as Clone>::clone(move _582) -> bb194; // scope 0 at ui/deriving/issue-58319.rs:201:5: 201:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:201:5: 201:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb194: {
        _586 = &((*_1).194: Little);     // scope 0 at ui/deriving/issue-58319.rs:202:5: 202:11
        _585 = _586;                     // scope 0 at ui/deriving/issue-58319.rs:202:5: 202:11
        _584 = <Little as Clone>::clone(move _585) -> bb195; // scope 0 at ui/deriving/issue-58319.rs:202:5: 202:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:202:5: 202:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb195: {
        _589 = &((*_1).195: Little);     // scope 0 at ui/deriving/issue-58319.rs:203:5: 203:11
        _588 = _589;                     // scope 0 at ui/deriving/issue-58319.rs:203:5: 203:11
        _587 = <Little as Clone>::clone(move _588) -> bb196; // scope 0 at ui/deriving/issue-58319.rs:203:5: 203:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:203:5: 203:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb196: {
        _592 = &((*_1).196: Little);     // scope 0 at ui/deriving/issue-58319.rs:204:5: 204:11
        _591 = _592;                     // scope 0 at ui/deriving/issue-58319.rs:204:5: 204:11
        _590 = <Little as Clone>::clone(move _591) -> bb197; // scope 0 at ui/deriving/issue-58319.rs:204:5: 204:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:204:5: 204:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb197: {
        _595 = &((*_1).197: Little);     // scope 0 at ui/deriving/issue-58319.rs:205:5: 205:11
        _594 = _595;                     // scope 0 at ui/deriving/issue-58319.rs:205:5: 205:11
        _593 = <Little as Clone>::clone(move _594) -> bb198; // scope 0 at ui/deriving/issue-58319.rs:205:5: 205:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:205:5: 205:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb198: {
        _598 = &((*_1).198: Little);     // scope 0 at ui/deriving/issue-58319.rs:206:5: 206:11
        _597 = _598;                     // scope 0 at ui/deriving/issue-58319.rs:206:5: 206:11
        _596 = <Little as Clone>::clone(move _597) -> bb199; // scope 0 at ui/deriving/issue-58319.rs:206:5: 206:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:206:5: 206:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb199: {
        _601 = &((*_1).199: Little);     // scope 0 at ui/deriving/issue-58319.rs:207:5: 207:11
        _600 = _601;                     // scope 0 at ui/deriving/issue-58319.rs:207:5: 207:11
        _599 = <Little as Clone>::clone(move _600) -> bb200; // scope 0 at ui/deriving/issue-58319.rs:207:5: 207:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:207:5: 207:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb200: {
        _604 = &((*_1).200: Little);     // scope 0 at ui/deriving/issue-58319.rs:208:5: 208:11
        _603 = _604;                     // scope 0 at ui/deriving/issue-58319.rs:208:5: 208:11
        _602 = <Little as Clone>::clone(move _603) -> bb201; // scope 0 at ui/deriving/issue-58319.rs:208:5: 208:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:208:5: 208:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb201: {
        _607 = &((*_1).201: Little);     // scope 0 at ui/deriving/issue-58319.rs:209:5: 209:11
        _606 = _607;                     // scope 0 at ui/deriving/issue-58319.rs:209:5: 209:11
        _605 = <Little as Clone>::clone(move _606) -> bb202; // scope 0 at ui/deriving/issue-58319.rs:209:5: 209:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:209:5: 209:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb202: {
        _610 = &((*_1).202: Little);     // scope 0 at ui/deriving/issue-58319.rs:210:5: 210:11
        _609 = _610;                     // scope 0 at ui/deriving/issue-58319.rs:210:5: 210:11
        _608 = <Little as Clone>::clone(move _609) -> bb203; // scope 0 at ui/deriving/issue-58319.rs:210:5: 210:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:210:5: 210:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb203: {
        _613 = &((*_1).203: Little);     // scope 0 at ui/deriving/issue-58319.rs:211:5: 211:11
        _612 = _613;                     // scope 0 at ui/deriving/issue-58319.rs:211:5: 211:11
        _611 = <Little as Clone>::clone(move _612) -> bb204; // scope 0 at ui/deriving/issue-58319.rs:211:5: 211:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:211:5: 211:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb204: {
        _616 = &((*_1).204: Little);     // scope 0 at ui/deriving/issue-58319.rs:212:5: 212:11
        _615 = _616;                     // scope 0 at ui/deriving/issue-58319.rs:212:5: 212:11
        _614 = <Little as Clone>::clone(move _615) -> bb205; // scope 0 at ui/deriving/issue-58319.rs:212:5: 212:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:212:5: 212:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb205: {
        _619 = &((*_1).205: Little);     // scope 0 at ui/deriving/issue-58319.rs:213:5: 213:11
        _618 = _619;                     // scope 0 at ui/deriving/issue-58319.rs:213:5: 213:11
        _617 = <Little as Clone>::clone(move _618) -> bb206; // scope 0 at ui/deriving/issue-58319.rs:213:5: 213:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:213:5: 213:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb206: {
        _622 = &((*_1).206: Little);     // scope 0 at ui/deriving/issue-58319.rs:214:5: 214:11
        _621 = _622;                     // scope 0 at ui/deriving/issue-58319.rs:214:5: 214:11
        _620 = <Little as Clone>::clone(move _621) -> bb207; // scope 0 at ui/deriving/issue-58319.rs:214:5: 214:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:214:5: 214:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb207: {
        _625 = &((*_1).207: Little);     // scope 0 at ui/deriving/issue-58319.rs:215:5: 215:11
        _624 = _625;                     // scope 0 at ui/deriving/issue-58319.rs:215:5: 215:11
        _623 = <Little as Clone>::clone(move _624) -> bb208; // scope 0 at ui/deriving/issue-58319.rs:215:5: 215:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:215:5: 215:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb208: {
        _628 = &((*_1).208: Little);     // scope 0 at ui/deriving/issue-58319.rs:216:5: 216:11
        _627 = _628;                     // scope 0 at ui/deriving/issue-58319.rs:216:5: 216:11
        _626 = <Little as Clone>::clone(move _627) -> bb209; // scope 0 at ui/deriving/issue-58319.rs:216:5: 216:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:216:5: 216:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb209: {
        _631 = &((*_1).209: Little);     // scope 0 at ui/deriving/issue-58319.rs:217:5: 217:11
        _630 = _631;                     // scope 0 at ui/deriving/issue-58319.rs:217:5: 217:11
        _629 = <Little as Clone>::clone(move _630) -> bb210; // scope 0 at ui/deriving/issue-58319.rs:217:5: 217:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:217:5: 217:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb210: {
        _634 = &((*_1).210: Little);     // scope 0 at ui/deriving/issue-58319.rs:218:5: 218:11
        _633 = _634;                     // scope 0 at ui/deriving/issue-58319.rs:218:5: 218:11
        _632 = <Little as Clone>::clone(move _633) -> bb211; // scope 0 at ui/deriving/issue-58319.rs:218:5: 218:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:218:5: 218:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb211: {
        _637 = &((*_1).211: Little);     // scope 0 at ui/deriving/issue-58319.rs:219:5: 219:11
        _636 = _637;                     // scope 0 at ui/deriving/issue-58319.rs:219:5: 219:11
        _635 = <Little as Clone>::clone(move _636) -> bb212; // scope 0 at ui/deriving/issue-58319.rs:219:5: 219:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:219:5: 219:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb212: {
        _640 = &((*_1).212: Little);     // scope 0 at ui/deriving/issue-58319.rs:220:5: 220:11
        _639 = _640;                     // scope 0 at ui/deriving/issue-58319.rs:220:5: 220:11
        _638 = <Little as Clone>::clone(move _639) -> bb213; // scope 0 at ui/deriving/issue-58319.rs:220:5: 220:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:220:5: 220:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb213: {
        _643 = &((*_1).213: Little);     // scope 0 at ui/deriving/issue-58319.rs:221:5: 221:11
        _642 = _643;                     // scope 0 at ui/deriving/issue-58319.rs:221:5: 221:11
        _641 = <Little as Clone>::clone(move _642) -> bb214; // scope 0 at ui/deriving/issue-58319.rs:221:5: 221:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:221:5: 221:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb214: {
        _646 = &((*_1).214: Little);     // scope 0 at ui/deriving/issue-58319.rs:222:5: 222:11
        _645 = _646;                     // scope 0 at ui/deriving/issue-58319.rs:222:5: 222:11
        _644 = <Little as Clone>::clone(move _645) -> bb215; // scope 0 at ui/deriving/issue-58319.rs:222:5: 222:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:222:5: 222:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb215: {
        _649 = &((*_1).215: Little);     // scope 0 at ui/deriving/issue-58319.rs:223:5: 223:11
        _648 = _649;                     // scope 0 at ui/deriving/issue-58319.rs:223:5: 223:11
        _647 = <Little as Clone>::clone(move _648) -> bb216; // scope 0 at ui/deriving/issue-58319.rs:223:5: 223:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:223:5: 223:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb216: {
        _652 = &((*_1).216: Little);     // scope 0 at ui/deriving/issue-58319.rs:224:5: 224:11
        _651 = _652;                     // scope 0 at ui/deriving/issue-58319.rs:224:5: 224:11
        _650 = <Little as Clone>::clone(move _651) -> bb217; // scope 0 at ui/deriving/issue-58319.rs:224:5: 224:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:224:5: 224:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb217: {
        _655 = &((*_1).217: Little);     // scope 0 at ui/deriving/issue-58319.rs:225:5: 225:11
        _654 = _655;                     // scope 0 at ui/deriving/issue-58319.rs:225:5: 225:11
        _653 = <Little as Clone>::clone(move _654) -> bb218; // scope 0 at ui/deriving/issue-58319.rs:225:5: 225:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:225:5: 225:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb218: {
        _658 = &((*_1).218: Little);     // scope 0 at ui/deriving/issue-58319.rs:226:5: 226:11
        _657 = _658;                     // scope 0 at ui/deriving/issue-58319.rs:226:5: 226:11
        _656 = <Little as Clone>::clone(move _657) -> bb219; // scope 0 at ui/deriving/issue-58319.rs:226:5: 226:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:226:5: 226:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb219: {
        _661 = &((*_1).219: Little);     // scope 0 at ui/deriving/issue-58319.rs:227:5: 227:11
        _660 = _661;                     // scope 0 at ui/deriving/issue-58319.rs:227:5: 227:11
        _659 = <Little as Clone>::clone(move _660) -> bb220; // scope 0 at ui/deriving/issue-58319.rs:227:5: 227:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:227:5: 227:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb220: {
        _664 = &((*_1).220: Little);     // scope 0 at ui/deriving/issue-58319.rs:228:5: 228:11
        _663 = _664;                     // scope 0 at ui/deriving/issue-58319.rs:228:5: 228:11
        _662 = <Little as Clone>::clone(move _663) -> bb221; // scope 0 at ui/deriving/issue-58319.rs:228:5: 228:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:228:5: 228:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb221: {
        _667 = &((*_1).221: Little);     // scope 0 at ui/deriving/issue-58319.rs:229:5: 229:11
        _666 = _667;                     // scope 0 at ui/deriving/issue-58319.rs:229:5: 229:11
        _665 = <Little as Clone>::clone(move _666) -> bb222; // scope 0 at ui/deriving/issue-58319.rs:229:5: 229:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:229:5: 229:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb222: {
        _670 = &((*_1).222: Little);     // scope 0 at ui/deriving/issue-58319.rs:230:5: 230:11
        _669 = _670;                     // scope 0 at ui/deriving/issue-58319.rs:230:5: 230:11
        _668 = <Little as Clone>::clone(move _669) -> bb223; // scope 0 at ui/deriving/issue-58319.rs:230:5: 230:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:230:5: 230:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb223: {
        _673 = &((*_1).223: Little);     // scope 0 at ui/deriving/issue-58319.rs:231:5: 231:11
        _672 = _673;                     // scope 0 at ui/deriving/issue-58319.rs:231:5: 231:11
        _671 = <Little as Clone>::clone(move _672) -> bb224; // scope 0 at ui/deriving/issue-58319.rs:231:5: 231:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:231:5: 231:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb224: {
        _676 = &((*_1).224: Little);     // scope 0 at ui/deriving/issue-58319.rs:232:5: 232:11
        _675 = _676;                     // scope 0 at ui/deriving/issue-58319.rs:232:5: 232:11
        _674 = <Little as Clone>::clone(move _675) -> bb225; // scope 0 at ui/deriving/issue-58319.rs:232:5: 232:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:232:5: 232:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb225: {
        _679 = &((*_1).225: Little);     // scope 0 at ui/deriving/issue-58319.rs:233:5: 233:11
        _678 = _679;                     // scope 0 at ui/deriving/issue-58319.rs:233:5: 233:11
        _677 = <Little as Clone>::clone(move _678) -> bb226; // scope 0 at ui/deriving/issue-58319.rs:233:5: 233:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:233:5: 233:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb226: {
        _682 = &((*_1).226: Little);     // scope 0 at ui/deriving/issue-58319.rs:234:5: 234:11
        _681 = _682;                     // scope 0 at ui/deriving/issue-58319.rs:234:5: 234:11
        _680 = <Little as Clone>::clone(move _681) -> bb227; // scope 0 at ui/deriving/issue-58319.rs:234:5: 234:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:234:5: 234:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb227: {
        _685 = &((*_1).227: Little);     // scope 0 at ui/deriving/issue-58319.rs:235:5: 235:11
        _684 = _685;                     // scope 0 at ui/deriving/issue-58319.rs:235:5: 235:11
        _683 = <Little as Clone>::clone(move _684) -> bb228; // scope 0 at ui/deriving/issue-58319.rs:235:5: 235:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:235:5: 235:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb228: {
        _688 = &((*_1).228: Little);     // scope 0 at ui/deriving/issue-58319.rs:236:5: 236:11
        _687 = _688;                     // scope 0 at ui/deriving/issue-58319.rs:236:5: 236:11
        _686 = <Little as Clone>::clone(move _687) -> bb229; // scope 0 at ui/deriving/issue-58319.rs:236:5: 236:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:236:5: 236:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb229: {
        _691 = &((*_1).229: Little);     // scope 0 at ui/deriving/issue-58319.rs:237:5: 237:11
        _690 = _691;                     // scope 0 at ui/deriving/issue-58319.rs:237:5: 237:11
        _689 = <Little as Clone>::clone(move _690) -> bb230; // scope 0 at ui/deriving/issue-58319.rs:237:5: 237:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:237:5: 237:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb230: {
        _694 = &((*_1).230: Little);     // scope 0 at ui/deriving/issue-58319.rs:238:5: 238:11
        _693 = _694;                     // scope 0 at ui/deriving/issue-58319.rs:238:5: 238:11
        _692 = <Little as Clone>::clone(move _693) -> bb231; // scope 0 at ui/deriving/issue-58319.rs:238:5: 238:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:238:5: 238:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb231: {
        _697 = &((*_1).231: Little);     // scope 0 at ui/deriving/issue-58319.rs:239:5: 239:11
        _696 = _697;                     // scope 0 at ui/deriving/issue-58319.rs:239:5: 239:11
        _695 = <Little as Clone>::clone(move _696) -> bb232; // scope 0 at ui/deriving/issue-58319.rs:239:5: 239:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:239:5: 239:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb232: {
        _700 = &((*_1).232: Little);     // scope 0 at ui/deriving/issue-58319.rs:240:5: 240:11
        _699 = _700;                     // scope 0 at ui/deriving/issue-58319.rs:240:5: 240:11
        _698 = <Little as Clone>::clone(move _699) -> bb233; // scope 0 at ui/deriving/issue-58319.rs:240:5: 240:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:240:5: 240:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb233: {
        _703 = &((*_1).233: Little);     // scope 0 at ui/deriving/issue-58319.rs:241:5: 241:11
        _702 = _703;                     // scope 0 at ui/deriving/issue-58319.rs:241:5: 241:11
        _701 = <Little as Clone>::clone(move _702) -> bb234; // scope 0 at ui/deriving/issue-58319.rs:241:5: 241:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:241:5: 241:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb234: {
        _706 = &((*_1).234: Little);     // scope 0 at ui/deriving/issue-58319.rs:242:5: 242:11
        _705 = _706;                     // scope 0 at ui/deriving/issue-58319.rs:242:5: 242:11
        _704 = <Little as Clone>::clone(move _705) -> bb235; // scope 0 at ui/deriving/issue-58319.rs:242:5: 242:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:242:5: 242:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb235: {
        _709 = &((*_1).235: Little);     // scope 0 at ui/deriving/issue-58319.rs:243:5: 243:11
        _708 = _709;                     // scope 0 at ui/deriving/issue-58319.rs:243:5: 243:11
        _707 = <Little as Clone>::clone(move _708) -> bb236; // scope 0 at ui/deriving/issue-58319.rs:243:5: 243:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:243:5: 243:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb236: {
        _712 = &((*_1).236: Little);     // scope 0 at ui/deriving/issue-58319.rs:244:5: 244:11
        _711 = _712;                     // scope 0 at ui/deriving/issue-58319.rs:244:5: 244:11
        _710 = <Little as Clone>::clone(move _711) -> bb237; // scope 0 at ui/deriving/issue-58319.rs:244:5: 244:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:244:5: 244:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb237: {
        _715 = &((*_1).237: Little);     // scope 0 at ui/deriving/issue-58319.rs:245:5: 245:11
        _714 = _715;                     // scope 0 at ui/deriving/issue-58319.rs:245:5: 245:11
        _713 = <Little as Clone>::clone(move _714) -> bb238; // scope 0 at ui/deriving/issue-58319.rs:245:5: 245:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:245:5: 245:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb238: {
        _718 = &((*_1).238: Little);     // scope 0 at ui/deriving/issue-58319.rs:246:5: 246:11
        _717 = _718;                     // scope 0 at ui/deriving/issue-58319.rs:246:5: 246:11
        _716 = <Little as Clone>::clone(move _717) -> bb239; // scope 0 at ui/deriving/issue-58319.rs:246:5: 246:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:246:5: 246:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb239: {
        _721 = &((*_1).239: Little);     // scope 0 at ui/deriving/issue-58319.rs:247:5: 247:11
        _720 = _721;                     // scope 0 at ui/deriving/issue-58319.rs:247:5: 247:11
        _719 = <Little as Clone>::clone(move _720) -> bb240; // scope 0 at ui/deriving/issue-58319.rs:247:5: 247:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:247:5: 247:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb240: {
        _724 = &((*_1).240: Little);     // scope 0 at ui/deriving/issue-58319.rs:248:5: 248:11
        _723 = _724;                     // scope 0 at ui/deriving/issue-58319.rs:248:5: 248:11
        _722 = <Little as Clone>::clone(move _723) -> bb241; // scope 0 at ui/deriving/issue-58319.rs:248:5: 248:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:248:5: 248:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb241: {
        _727 = &((*_1).241: Little);     // scope 0 at ui/deriving/issue-58319.rs:249:5: 249:11
        _726 = _727;                     // scope 0 at ui/deriving/issue-58319.rs:249:5: 249:11
        _725 = <Little as Clone>::clone(move _726) -> bb242; // scope 0 at ui/deriving/issue-58319.rs:249:5: 249:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:249:5: 249:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb242: {
        _730 = &((*_1).242: Little);     // scope 0 at ui/deriving/issue-58319.rs:250:5: 250:11
        _729 = _730;                     // scope 0 at ui/deriving/issue-58319.rs:250:5: 250:11
        _728 = <Little as Clone>::clone(move _729) -> bb243; // scope 0 at ui/deriving/issue-58319.rs:250:5: 250:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:250:5: 250:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb243: {
        _733 = &((*_1).243: Little);     // scope 0 at ui/deriving/issue-58319.rs:251:5: 251:11
        _732 = _733;                     // scope 0 at ui/deriving/issue-58319.rs:251:5: 251:11
        _731 = <Little as Clone>::clone(move _732) -> bb244; // scope 0 at ui/deriving/issue-58319.rs:251:5: 251:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:251:5: 251:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb244: {
        _736 = &((*_1).244: Little);     // scope 0 at ui/deriving/issue-58319.rs:252:5: 252:11
        _735 = _736;                     // scope 0 at ui/deriving/issue-58319.rs:252:5: 252:11
        _734 = <Little as Clone>::clone(move _735) -> bb245; // scope 0 at ui/deriving/issue-58319.rs:252:5: 252:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:252:5: 252:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb245: {
        _739 = &((*_1).245: Little);     // scope 0 at ui/deriving/issue-58319.rs:253:5: 253:11
        _738 = _739;                     // scope 0 at ui/deriving/issue-58319.rs:253:5: 253:11
        _737 = <Little as Clone>::clone(move _738) -> bb246; // scope 0 at ui/deriving/issue-58319.rs:253:5: 253:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:253:5: 253:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb246: {
        _742 = &((*_1).246: Little);     // scope 0 at ui/deriving/issue-58319.rs:254:5: 254:11
        _741 = _742;                     // scope 0 at ui/deriving/issue-58319.rs:254:5: 254:11
        _740 = <Little as Clone>::clone(move _741) -> bb247; // scope 0 at ui/deriving/issue-58319.rs:254:5: 254:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:254:5: 254:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb247: {
        _745 = &((*_1).247: Little);     // scope 0 at ui/deriving/issue-58319.rs:255:5: 255:11
        _744 = _745;                     // scope 0 at ui/deriving/issue-58319.rs:255:5: 255:11
        _743 = <Little as Clone>::clone(move _744) -> bb248; // scope 0 at ui/deriving/issue-58319.rs:255:5: 255:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:255:5: 255:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb248: {
        _748 = &((*_1).248: Little);     // scope 0 at ui/deriving/issue-58319.rs:256:5: 256:11
        _747 = _748;                     // scope 0 at ui/deriving/issue-58319.rs:256:5: 256:11
        _746 = <Little as Clone>::clone(move _747) -> bb249; // scope 0 at ui/deriving/issue-58319.rs:256:5: 256:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:256:5: 256:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb249: {
        _751 = &((*_1).249: Little);     // scope 0 at ui/deriving/issue-58319.rs:257:5: 257:11
        _750 = _751;                     // scope 0 at ui/deriving/issue-58319.rs:257:5: 257:11
        _749 = <Little as Clone>::clone(move _750) -> bb250; // scope 0 at ui/deriving/issue-58319.rs:257:5: 257:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:257:5: 257:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb250: {
        _754 = &((*_1).250: Little);     // scope 0 at ui/deriving/issue-58319.rs:258:5: 258:11
        _753 = _754;                     // scope 0 at ui/deriving/issue-58319.rs:258:5: 258:11
        _752 = <Little as Clone>::clone(move _753) -> bb251; // scope 0 at ui/deriving/issue-58319.rs:258:5: 258:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:258:5: 258:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb251: {
        _757 = &((*_1).251: Little);     // scope 0 at ui/deriving/issue-58319.rs:259:5: 259:11
        _756 = _757;                     // scope 0 at ui/deriving/issue-58319.rs:259:5: 259:11
        _755 = <Little as Clone>::clone(move _756) -> bb252; // scope 0 at ui/deriving/issue-58319.rs:259:5: 259:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:259:5: 259:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb252: {
        _760 = &((*_1).252: Little);     // scope 0 at ui/deriving/issue-58319.rs:260:5: 260:11
        _759 = _760;                     // scope 0 at ui/deriving/issue-58319.rs:260:5: 260:11
        _758 = <Little as Clone>::clone(move _759) -> bb253; // scope 0 at ui/deriving/issue-58319.rs:260:5: 260:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:260:5: 260:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb253: {
        _763 = &((*_1).253: Little);     // scope 0 at ui/deriving/issue-58319.rs:261:5: 261:11
        _762 = _763;                     // scope 0 at ui/deriving/issue-58319.rs:261:5: 261:11
        _761 = <Little as Clone>::clone(move _762) -> bb254; // scope 0 at ui/deriving/issue-58319.rs:261:5: 261:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:261:5: 261:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb254: {
        _766 = &((*_1).254: Little);     // scope 0 at ui/deriving/issue-58319.rs:262:5: 262:11
        _765 = _766;                     // scope 0 at ui/deriving/issue-58319.rs:262:5: 262:11
        _764 = <Little as Clone>::clone(move _765) -> bb255; // scope 0 at ui/deriving/issue-58319.rs:262:5: 262:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:262:5: 262:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb255: {
        _769 = &((*_1).255: Little);     // scope 0 at ui/deriving/issue-58319.rs:263:5: 263:11
        _768 = _769;                     // scope 0 at ui/deriving/issue-58319.rs:263:5: 263:11
        _767 = <Little as Clone>::clone(move _768) -> bb256; // scope 0 at ui/deriving/issue-58319.rs:263:5: 263:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:263:5: 263:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb256: {
        _772 = &((*_1).256: Little);     // scope 0 at ui/deriving/issue-58319.rs:264:5: 264:11
        _771 = _772;                     // scope 0 at ui/deriving/issue-58319.rs:264:5: 264:11
        _770 = <Little as Clone>::clone(move _771) -> bb257; // scope 0 at ui/deriving/issue-58319.rs:264:5: 264:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:264:5: 264:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb257: {
        _775 = &((*_1).257: Little);     // scope 0 at ui/deriving/issue-58319.rs:265:5: 265:11
        _774 = _775;                     // scope 0 at ui/deriving/issue-58319.rs:265:5: 265:11
        _773 = <Little as Clone>::clone(move _774) -> bb258; // scope 0 at ui/deriving/issue-58319.rs:265:5: 265:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:265:5: 265:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb258: {
        _778 = &((*_1).258: Little);     // scope 0 at ui/deriving/issue-58319.rs:266:5: 266:11
        _777 = _778;                     // scope 0 at ui/deriving/issue-58319.rs:266:5: 266:11
        _776 = <Little as Clone>::clone(move _777) -> bb259; // scope 0 at ui/deriving/issue-58319.rs:266:5: 266:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:266:5: 266:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb259: {
        _781 = &((*_1).259: Little);     // scope 0 at ui/deriving/issue-58319.rs:267:5: 267:11
        _780 = _781;                     // scope 0 at ui/deriving/issue-58319.rs:267:5: 267:11
        _779 = <Little as Clone>::clone(move _780) -> bb260; // scope 0 at ui/deriving/issue-58319.rs:267:5: 267:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:267:5: 267:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb260: {
        _784 = &((*_1).260: Little);     // scope 0 at ui/deriving/issue-58319.rs:268:5: 268:11
        _783 = _784;                     // scope 0 at ui/deriving/issue-58319.rs:268:5: 268:11
        _782 = <Little as Clone>::clone(move _783) -> bb261; // scope 0 at ui/deriving/issue-58319.rs:268:5: 268:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:268:5: 268:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb261: {
        _787 = &((*_1).261: Little);     // scope 0 at ui/deriving/issue-58319.rs:269:5: 269:11
        _786 = _787;                     // scope 0 at ui/deriving/issue-58319.rs:269:5: 269:11
        _785 = <Little as Clone>::clone(move _786) -> bb262; // scope 0 at ui/deriving/issue-58319.rs:269:5: 269:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:269:5: 269:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb262: {
        _790 = &((*_1).262: Little);     // scope 0 at ui/deriving/issue-58319.rs:270:5: 270:11
        _789 = _790;                     // scope 0 at ui/deriving/issue-58319.rs:270:5: 270:11
        _788 = <Little as Clone>::clone(move _789) -> bb263; // scope 0 at ui/deriving/issue-58319.rs:270:5: 270:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:270:5: 270:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb263: {
        _793 = &((*_1).263: Little);     // scope 0 at ui/deriving/issue-58319.rs:271:5: 271:11
        _792 = _793;                     // scope 0 at ui/deriving/issue-58319.rs:271:5: 271:11
        _791 = <Little as Clone>::clone(move _792) -> bb264; // scope 0 at ui/deriving/issue-58319.rs:271:5: 271:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:271:5: 271:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb264: {
        _796 = &((*_1).264: Little);     // scope 0 at ui/deriving/issue-58319.rs:272:5: 272:11
        _795 = _796;                     // scope 0 at ui/deriving/issue-58319.rs:272:5: 272:11
        _794 = <Little as Clone>::clone(move _795) -> bb265; // scope 0 at ui/deriving/issue-58319.rs:272:5: 272:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:272:5: 272:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb265: {
        _799 = &((*_1).265: Little);     // scope 0 at ui/deriving/issue-58319.rs:273:5: 273:11
        _798 = _799;                     // scope 0 at ui/deriving/issue-58319.rs:273:5: 273:11
        _797 = <Little as Clone>::clone(move _798) -> bb266; // scope 0 at ui/deriving/issue-58319.rs:273:5: 273:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:273:5: 273:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb266: {
        _802 = &((*_1).266: Little);     // scope 0 at ui/deriving/issue-58319.rs:274:5: 274:11
        _801 = _802;                     // scope 0 at ui/deriving/issue-58319.rs:274:5: 274:11
        _800 = <Little as Clone>::clone(move _801) -> bb267; // scope 0 at ui/deriving/issue-58319.rs:274:5: 274:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:274:5: 274:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb267: {
        _805 = &((*_1).267: Little);     // scope 0 at ui/deriving/issue-58319.rs:275:5: 275:11
        _804 = _805;                     // scope 0 at ui/deriving/issue-58319.rs:275:5: 275:11
        _803 = <Little as Clone>::clone(move _804) -> bb268; // scope 0 at ui/deriving/issue-58319.rs:275:5: 275:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:275:5: 275:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb268: {
        _808 = &((*_1).268: Little);     // scope 0 at ui/deriving/issue-58319.rs:276:5: 276:11
        _807 = _808;                     // scope 0 at ui/deriving/issue-58319.rs:276:5: 276:11
        _806 = <Little as Clone>::clone(move _807) -> bb269; // scope 0 at ui/deriving/issue-58319.rs:276:5: 276:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:276:5: 276:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb269: {
        _811 = &((*_1).269: Little);     // scope 0 at ui/deriving/issue-58319.rs:277:5: 277:11
        _810 = _811;                     // scope 0 at ui/deriving/issue-58319.rs:277:5: 277:11
        _809 = <Little as Clone>::clone(move _810) -> bb270; // scope 0 at ui/deriving/issue-58319.rs:277:5: 277:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:277:5: 277:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb270: {
        _814 = &((*_1).270: Little);     // scope 0 at ui/deriving/issue-58319.rs:278:5: 278:11
        _813 = _814;                     // scope 0 at ui/deriving/issue-58319.rs:278:5: 278:11
        _812 = <Little as Clone>::clone(move _813) -> bb271; // scope 0 at ui/deriving/issue-58319.rs:278:5: 278:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:278:5: 278:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb271: {
        _817 = &((*_1).271: Little);     // scope 0 at ui/deriving/issue-58319.rs:279:5: 279:11
        _816 = _817;                     // scope 0 at ui/deriving/issue-58319.rs:279:5: 279:11
        _815 = <Little as Clone>::clone(move _816) -> bb272; // scope 0 at ui/deriving/issue-58319.rs:279:5: 279:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:279:5: 279:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb272: {
        _820 = &((*_1).272: Little);     // scope 0 at ui/deriving/issue-58319.rs:280:5: 280:11
        _819 = _820;                     // scope 0 at ui/deriving/issue-58319.rs:280:5: 280:11
        _818 = <Little as Clone>::clone(move _819) -> bb273; // scope 0 at ui/deriving/issue-58319.rs:280:5: 280:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:280:5: 280:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb273: {
        _823 = &((*_1).273: Little);     // scope 0 at ui/deriving/issue-58319.rs:281:5: 281:11
        _822 = _823;                     // scope 0 at ui/deriving/issue-58319.rs:281:5: 281:11
        _821 = <Little as Clone>::clone(move _822) -> bb274; // scope 0 at ui/deriving/issue-58319.rs:281:5: 281:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:281:5: 281:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb274: {
        _826 = &((*_1).274: Little);     // scope 0 at ui/deriving/issue-58319.rs:282:5: 282:11
        _825 = _826;                     // scope 0 at ui/deriving/issue-58319.rs:282:5: 282:11
        _824 = <Little as Clone>::clone(move _825) -> bb275; // scope 0 at ui/deriving/issue-58319.rs:282:5: 282:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:282:5: 282:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb275: {
        _829 = &((*_1).275: Little);     // scope 0 at ui/deriving/issue-58319.rs:283:5: 283:11
        _828 = _829;                     // scope 0 at ui/deriving/issue-58319.rs:283:5: 283:11
        _827 = <Little as Clone>::clone(move _828) -> bb276; // scope 0 at ui/deriving/issue-58319.rs:283:5: 283:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:283:5: 283:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb276: {
        _832 = &((*_1).276: Little);     // scope 0 at ui/deriving/issue-58319.rs:284:5: 284:11
        _831 = _832;                     // scope 0 at ui/deriving/issue-58319.rs:284:5: 284:11
        _830 = <Little as Clone>::clone(move _831) -> bb277; // scope 0 at ui/deriving/issue-58319.rs:284:5: 284:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:284:5: 284:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb277: {
        _835 = &((*_1).277: Little);     // scope 0 at ui/deriving/issue-58319.rs:285:5: 285:11
        _834 = _835;                     // scope 0 at ui/deriving/issue-58319.rs:285:5: 285:11
        _833 = <Little as Clone>::clone(move _834) -> bb278; // scope 0 at ui/deriving/issue-58319.rs:285:5: 285:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:285:5: 285:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb278: {
        _838 = &((*_1).278: Little);     // scope 0 at ui/deriving/issue-58319.rs:286:5: 286:11
        _837 = _838;                     // scope 0 at ui/deriving/issue-58319.rs:286:5: 286:11
        _836 = <Little as Clone>::clone(move _837) -> bb279; // scope 0 at ui/deriving/issue-58319.rs:286:5: 286:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:286:5: 286:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb279: {
        _841 = &((*_1).279: Little);     // scope 0 at ui/deriving/issue-58319.rs:287:5: 287:11
        _840 = _841;                     // scope 0 at ui/deriving/issue-58319.rs:287:5: 287:11
        _839 = <Little as Clone>::clone(move _840) -> bb280; // scope 0 at ui/deriving/issue-58319.rs:287:5: 287:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:287:5: 287:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb280: {
        _844 = &((*_1).280: Little);     // scope 0 at ui/deriving/issue-58319.rs:288:5: 288:11
        _843 = _844;                     // scope 0 at ui/deriving/issue-58319.rs:288:5: 288:11
        _842 = <Little as Clone>::clone(move _843) -> bb281; // scope 0 at ui/deriving/issue-58319.rs:288:5: 288:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:288:5: 288:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb281: {
        _847 = &((*_1).281: Little);     // scope 0 at ui/deriving/issue-58319.rs:289:5: 289:11
        _846 = _847;                     // scope 0 at ui/deriving/issue-58319.rs:289:5: 289:11
        _845 = <Little as Clone>::clone(move _846) -> bb282; // scope 0 at ui/deriving/issue-58319.rs:289:5: 289:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:289:5: 289:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb282: {
        _850 = &((*_1).282: Little);     // scope 0 at ui/deriving/issue-58319.rs:290:5: 290:11
        _849 = _850;                     // scope 0 at ui/deriving/issue-58319.rs:290:5: 290:11
        _848 = <Little as Clone>::clone(move _849) -> bb283; // scope 0 at ui/deriving/issue-58319.rs:290:5: 290:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:290:5: 290:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb283: {
        _853 = &((*_1).283: Little);     // scope 0 at ui/deriving/issue-58319.rs:291:5: 291:11
        _852 = _853;                     // scope 0 at ui/deriving/issue-58319.rs:291:5: 291:11
        _851 = <Little as Clone>::clone(move _852) -> bb284; // scope 0 at ui/deriving/issue-58319.rs:291:5: 291:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:291:5: 291:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb284: {
        _856 = &((*_1).284: Little);     // scope 0 at ui/deriving/issue-58319.rs:292:5: 292:11
        _855 = _856;                     // scope 0 at ui/deriving/issue-58319.rs:292:5: 292:11
        _854 = <Little as Clone>::clone(move _855) -> bb285; // scope 0 at ui/deriving/issue-58319.rs:292:5: 292:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:292:5: 292:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb285: {
        _859 = &((*_1).285: Little);     // scope 0 at ui/deriving/issue-58319.rs:293:5: 293:11
        _858 = _859;                     // scope 0 at ui/deriving/issue-58319.rs:293:5: 293:11
        _857 = <Little as Clone>::clone(move _858) -> bb286; // scope 0 at ui/deriving/issue-58319.rs:293:5: 293:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:293:5: 293:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb286: {
        _862 = &((*_1).286: Little);     // scope 0 at ui/deriving/issue-58319.rs:294:5: 294:11
        _861 = _862;                     // scope 0 at ui/deriving/issue-58319.rs:294:5: 294:11
        _860 = <Little as Clone>::clone(move _861) -> bb287; // scope 0 at ui/deriving/issue-58319.rs:294:5: 294:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:294:5: 294:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb287: {
        _865 = &((*_1).287: Little);     // scope 0 at ui/deriving/issue-58319.rs:295:5: 295:11
        _864 = _865;                     // scope 0 at ui/deriving/issue-58319.rs:295:5: 295:11
        _863 = <Little as Clone>::clone(move _864) -> bb288; // scope 0 at ui/deriving/issue-58319.rs:295:5: 295:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:295:5: 295:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb288: {
        _868 = &((*_1).288: Little);     // scope 0 at ui/deriving/issue-58319.rs:296:5: 296:11
        _867 = _868;                     // scope 0 at ui/deriving/issue-58319.rs:296:5: 296:11
        _866 = <Little as Clone>::clone(move _867) -> bb289; // scope 0 at ui/deriving/issue-58319.rs:296:5: 296:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:296:5: 296:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb289: {
        _871 = &((*_1).289: Little);     // scope 0 at ui/deriving/issue-58319.rs:297:5: 297:11
        _870 = _871;                     // scope 0 at ui/deriving/issue-58319.rs:297:5: 297:11
        _869 = <Little as Clone>::clone(move _870) -> bb290; // scope 0 at ui/deriving/issue-58319.rs:297:5: 297:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:297:5: 297:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb290: {
        _874 = &((*_1).290: Little);     // scope 0 at ui/deriving/issue-58319.rs:298:5: 298:11
        _873 = _874;                     // scope 0 at ui/deriving/issue-58319.rs:298:5: 298:11
        _872 = <Little as Clone>::clone(move _873) -> bb291; // scope 0 at ui/deriving/issue-58319.rs:298:5: 298:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:298:5: 298:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb291: {
        _877 = &((*_1).291: Little);     // scope 0 at ui/deriving/issue-58319.rs:299:5: 299:11
        _876 = _877;                     // scope 0 at ui/deriving/issue-58319.rs:299:5: 299:11
        _875 = <Little as Clone>::clone(move _876) -> bb292; // scope 0 at ui/deriving/issue-58319.rs:299:5: 299:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:299:5: 299:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb292: {
        _880 = &((*_1).292: Little);     // scope 0 at ui/deriving/issue-58319.rs:300:5: 300:11
        _879 = _880;                     // scope 0 at ui/deriving/issue-58319.rs:300:5: 300:11
        _878 = <Little as Clone>::clone(move _879) -> bb293; // scope 0 at ui/deriving/issue-58319.rs:300:5: 300:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:300:5: 300:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb293: {
        _883 = &((*_1).293: Little);     // scope 0 at ui/deriving/issue-58319.rs:301:5: 301:11
        _882 = _883;                     // scope 0 at ui/deriving/issue-58319.rs:301:5: 301:11
        _881 = <Little as Clone>::clone(move _882) -> bb294; // scope 0 at ui/deriving/issue-58319.rs:301:5: 301:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:301:5: 301:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb294: {
        _886 = &((*_1).294: Little);     // scope 0 at ui/deriving/issue-58319.rs:302:5: 302:11
        _885 = _886;                     // scope 0 at ui/deriving/issue-58319.rs:302:5: 302:11
        _884 = <Little as Clone>::clone(move _885) -> bb295; // scope 0 at ui/deriving/issue-58319.rs:302:5: 302:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:302:5: 302:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb295: {
        _889 = &((*_1).295: Little);     // scope 0 at ui/deriving/issue-58319.rs:303:5: 303:11
        _888 = _889;                     // scope 0 at ui/deriving/issue-58319.rs:303:5: 303:11
        _887 = <Little as Clone>::clone(move _888) -> bb296; // scope 0 at ui/deriving/issue-58319.rs:303:5: 303:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:303:5: 303:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb296: {
        _892 = &((*_1).296: Little);     // scope 0 at ui/deriving/issue-58319.rs:304:5: 304:11
        _891 = _892;                     // scope 0 at ui/deriving/issue-58319.rs:304:5: 304:11
        _890 = <Little as Clone>::clone(move _891) -> bb297; // scope 0 at ui/deriving/issue-58319.rs:304:5: 304:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:304:5: 304:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb297: {
        _895 = &((*_1).297: Little);     // scope 0 at ui/deriving/issue-58319.rs:305:5: 305:11
        _894 = _895;                     // scope 0 at ui/deriving/issue-58319.rs:305:5: 305:11
        _893 = <Little as Clone>::clone(move _894) -> bb298; // scope 0 at ui/deriving/issue-58319.rs:305:5: 305:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:305:5: 305:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb298: {
        _898 = &((*_1).298: Little);     // scope 0 at ui/deriving/issue-58319.rs:306:5: 306:11
        _897 = _898;                     // scope 0 at ui/deriving/issue-58319.rs:306:5: 306:11
        _896 = <Little as Clone>::clone(move _897) -> bb299; // scope 0 at ui/deriving/issue-58319.rs:306:5: 306:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:306:5: 306:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb299: {
        _901 = &((*_1).299: Little);     // scope 0 at ui/deriving/issue-58319.rs:307:5: 307:11
        _900 = _901;                     // scope 0 at ui/deriving/issue-58319.rs:307:5: 307:11
        _899 = <Little as Clone>::clone(move _900) -> bb300; // scope 0 at ui/deriving/issue-58319.rs:307:5: 307:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:307:5: 307:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb300: {
        _904 = &((*_1).300: Little);     // scope 0 at ui/deriving/issue-58319.rs:308:5: 308:11
        _903 = _904;                     // scope 0 at ui/deriving/issue-58319.rs:308:5: 308:11
        _902 = <Little as Clone>::clone(move _903) -> bb301; // scope 0 at ui/deriving/issue-58319.rs:308:5: 308:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:308:5: 308:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb301: {
        _907 = &((*_1).301: Little);     // scope 0 at ui/deriving/issue-58319.rs:309:5: 309:11
        _906 = _907;                     // scope 0 at ui/deriving/issue-58319.rs:309:5: 309:11
        _905 = <Little as Clone>::clone(move _906) -> bb302; // scope 0 at ui/deriving/issue-58319.rs:309:5: 309:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:309:5: 309:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb302: {
        _910 = &((*_1).302: Little);     // scope 0 at ui/deriving/issue-58319.rs:310:5: 310:11
        _909 = _910;                     // scope 0 at ui/deriving/issue-58319.rs:310:5: 310:11
        _908 = <Little as Clone>::clone(move _909) -> bb303; // scope 0 at ui/deriving/issue-58319.rs:310:5: 310:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:310:5: 310:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb303: {
        _913 = &((*_1).303: Little);     // scope 0 at ui/deriving/issue-58319.rs:311:5: 311:11
        _912 = _913;                     // scope 0 at ui/deriving/issue-58319.rs:311:5: 311:11
        _911 = <Little as Clone>::clone(move _912) -> bb304; // scope 0 at ui/deriving/issue-58319.rs:311:5: 311:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:311:5: 311:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb304: {
        _916 = &((*_1).304: Little);     // scope 0 at ui/deriving/issue-58319.rs:312:5: 312:11
        _915 = _916;                     // scope 0 at ui/deriving/issue-58319.rs:312:5: 312:11
        _914 = <Little as Clone>::clone(move _915) -> bb305; // scope 0 at ui/deriving/issue-58319.rs:312:5: 312:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:312:5: 312:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb305: {
        _919 = &((*_1).305: Little);     // scope 0 at ui/deriving/issue-58319.rs:313:5: 313:11
        _918 = _919;                     // scope 0 at ui/deriving/issue-58319.rs:313:5: 313:11
        _917 = <Little as Clone>::clone(move _918) -> bb306; // scope 0 at ui/deriving/issue-58319.rs:313:5: 313:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:313:5: 313:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb306: {
        _922 = &((*_1).306: Little);     // scope 0 at ui/deriving/issue-58319.rs:314:5: 314:11
        _921 = _922;                     // scope 0 at ui/deriving/issue-58319.rs:314:5: 314:11
        _920 = <Little as Clone>::clone(move _921) -> bb307; // scope 0 at ui/deriving/issue-58319.rs:314:5: 314:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:314:5: 314:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb307: {
        _925 = &((*_1).307: Little);     // scope 0 at ui/deriving/issue-58319.rs:315:5: 315:11
        _924 = _925;                     // scope 0 at ui/deriving/issue-58319.rs:315:5: 315:11
        _923 = <Little as Clone>::clone(move _924) -> bb308; // scope 0 at ui/deriving/issue-58319.rs:315:5: 315:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:315:5: 315:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb308: {
        _928 = &((*_1).308: Little);     // scope 0 at ui/deriving/issue-58319.rs:316:5: 316:11
        _927 = _928;                     // scope 0 at ui/deriving/issue-58319.rs:316:5: 316:11
        _926 = <Little as Clone>::clone(move _927) -> bb309; // scope 0 at ui/deriving/issue-58319.rs:316:5: 316:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:316:5: 316:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb309: {
        _931 = &((*_1).309: Little);     // scope 0 at ui/deriving/issue-58319.rs:317:5: 317:11
        _930 = _931;                     // scope 0 at ui/deriving/issue-58319.rs:317:5: 317:11
        _929 = <Little as Clone>::clone(move _930) -> bb310; // scope 0 at ui/deriving/issue-58319.rs:317:5: 317:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:317:5: 317:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb310: {
        _934 = &((*_1).310: Little);     // scope 0 at ui/deriving/issue-58319.rs:318:5: 318:11
        _933 = _934;                     // scope 0 at ui/deriving/issue-58319.rs:318:5: 318:11
        _932 = <Little as Clone>::clone(move _933) -> bb311; // scope 0 at ui/deriving/issue-58319.rs:318:5: 318:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:318:5: 318:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb311: {
        _937 = &((*_1).311: Little);     // scope 0 at ui/deriving/issue-58319.rs:319:5: 319:11
        _936 = _937;                     // scope 0 at ui/deriving/issue-58319.rs:319:5: 319:11
        _935 = <Little as Clone>::clone(move _936) -> bb312; // scope 0 at ui/deriving/issue-58319.rs:319:5: 319:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:319:5: 319:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb312: {
        _940 = &((*_1).312: Little);     // scope 0 at ui/deriving/issue-58319.rs:320:5: 320:11
        _939 = _940;                     // scope 0 at ui/deriving/issue-58319.rs:320:5: 320:11
        _938 = <Little as Clone>::clone(move _939) -> bb313; // scope 0 at ui/deriving/issue-58319.rs:320:5: 320:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:320:5: 320:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb313: {
        _943 = &((*_1).313: Little);     // scope 0 at ui/deriving/issue-58319.rs:321:5: 321:11
        _942 = _943;                     // scope 0 at ui/deriving/issue-58319.rs:321:5: 321:11
        _941 = <Little as Clone>::clone(move _942) -> bb314; // scope 0 at ui/deriving/issue-58319.rs:321:5: 321:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:321:5: 321:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb314: {
        _946 = &((*_1).314: Little);     // scope 0 at ui/deriving/issue-58319.rs:322:5: 322:11
        _945 = _946;                     // scope 0 at ui/deriving/issue-58319.rs:322:5: 322:11
        _944 = <Little as Clone>::clone(move _945) -> bb315; // scope 0 at ui/deriving/issue-58319.rs:322:5: 322:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:322:5: 322:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb315: {
        _949 = &((*_1).315: Little);     // scope 0 at ui/deriving/issue-58319.rs:323:5: 323:11
        _948 = _949;                     // scope 0 at ui/deriving/issue-58319.rs:323:5: 323:11
        _947 = <Little as Clone>::clone(move _948) -> bb316; // scope 0 at ui/deriving/issue-58319.rs:323:5: 323:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:323:5: 323:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb316: {
        _952 = &((*_1).316: Little);     // scope 0 at ui/deriving/issue-58319.rs:324:5: 324:11
        _951 = _952;                     // scope 0 at ui/deriving/issue-58319.rs:324:5: 324:11
        _950 = <Little as Clone>::clone(move _951) -> bb317; // scope 0 at ui/deriving/issue-58319.rs:324:5: 324:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:324:5: 324:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb317: {
        _955 = &((*_1).317: Little);     // scope 0 at ui/deriving/issue-58319.rs:325:5: 325:11
        _954 = _955;                     // scope 0 at ui/deriving/issue-58319.rs:325:5: 325:11
        _953 = <Little as Clone>::clone(move _954) -> bb318; // scope 0 at ui/deriving/issue-58319.rs:325:5: 325:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:325:5: 325:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb318: {
        _958 = &((*_1).318: Little);     // scope 0 at ui/deriving/issue-58319.rs:326:5: 326:11
        _957 = _958;                     // scope 0 at ui/deriving/issue-58319.rs:326:5: 326:11
        _956 = <Little as Clone>::clone(move _957) -> bb319; // scope 0 at ui/deriving/issue-58319.rs:326:5: 326:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:326:5: 326:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb319: {
        _961 = &((*_1).319: Little);     // scope 0 at ui/deriving/issue-58319.rs:327:5: 327:11
        _960 = _961;                     // scope 0 at ui/deriving/issue-58319.rs:327:5: 327:11
        _959 = <Little as Clone>::clone(move _960) -> bb320; // scope 0 at ui/deriving/issue-58319.rs:327:5: 327:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:327:5: 327:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb320: {
        _964 = &((*_1).320: Little);     // scope 0 at ui/deriving/issue-58319.rs:328:5: 328:11
        _963 = _964;                     // scope 0 at ui/deriving/issue-58319.rs:328:5: 328:11
        _962 = <Little as Clone>::clone(move _963) -> bb321; // scope 0 at ui/deriving/issue-58319.rs:328:5: 328:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:328:5: 328:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb321: {
        _967 = &((*_1).321: Little);     // scope 0 at ui/deriving/issue-58319.rs:329:5: 329:11
        _966 = _967;                     // scope 0 at ui/deriving/issue-58319.rs:329:5: 329:11
        _965 = <Little as Clone>::clone(move _966) -> bb322; // scope 0 at ui/deriving/issue-58319.rs:329:5: 329:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:329:5: 329:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb322: {
        _970 = &((*_1).322: Little);     // scope 0 at ui/deriving/issue-58319.rs:330:5: 330:11
        _969 = _970;                     // scope 0 at ui/deriving/issue-58319.rs:330:5: 330:11
        _968 = <Little as Clone>::clone(move _969) -> bb323; // scope 0 at ui/deriving/issue-58319.rs:330:5: 330:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:330:5: 330:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb323: {
        _973 = &((*_1).323: Little);     // scope 0 at ui/deriving/issue-58319.rs:331:5: 331:11
        _972 = _973;                     // scope 0 at ui/deriving/issue-58319.rs:331:5: 331:11
        _971 = <Little as Clone>::clone(move _972) -> bb324; // scope 0 at ui/deriving/issue-58319.rs:331:5: 331:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:331:5: 331:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb324: {
        _976 = &((*_1).324: Little);     // scope 0 at ui/deriving/issue-58319.rs:332:5: 332:11
        _975 = _976;                     // scope 0 at ui/deriving/issue-58319.rs:332:5: 332:11
        _974 = <Little as Clone>::clone(move _975) -> bb325; // scope 0 at ui/deriving/issue-58319.rs:332:5: 332:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:332:5: 332:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb325: {
        _979 = &((*_1).325: Little);     // scope 0 at ui/deriving/issue-58319.rs:333:5: 333:11
        _978 = _979;                     // scope 0 at ui/deriving/issue-58319.rs:333:5: 333:11
        _977 = <Little as Clone>::clone(move _978) -> bb326; // scope 0 at ui/deriving/issue-58319.rs:333:5: 333:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:333:5: 333:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb326: {
        _982 = &((*_1).326: Little);     // scope 0 at ui/deriving/issue-58319.rs:334:5: 334:11
        _981 = _982;                     // scope 0 at ui/deriving/issue-58319.rs:334:5: 334:11
        _980 = <Little as Clone>::clone(move _981) -> bb327; // scope 0 at ui/deriving/issue-58319.rs:334:5: 334:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:334:5: 334:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb327: {
        _985 = &((*_1).327: Little);     // scope 0 at ui/deriving/issue-58319.rs:335:5: 335:11
        _984 = _985;                     // scope 0 at ui/deriving/issue-58319.rs:335:5: 335:11
        _983 = <Little as Clone>::clone(move _984) -> bb328; // scope 0 at ui/deriving/issue-58319.rs:335:5: 335:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:335:5: 335:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb328: {
        _988 = &((*_1).328: Little);     // scope 0 at ui/deriving/issue-58319.rs:336:5: 336:11
        _987 = _988;                     // scope 0 at ui/deriving/issue-58319.rs:336:5: 336:11
        _986 = <Little as Clone>::clone(move _987) -> bb329; // scope 0 at ui/deriving/issue-58319.rs:336:5: 336:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:336:5: 336:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb329: {
        _991 = &((*_1).329: Little);     // scope 0 at ui/deriving/issue-58319.rs:337:5: 337:11
        _990 = _991;                     // scope 0 at ui/deriving/issue-58319.rs:337:5: 337:11
        _989 = <Little as Clone>::clone(move _990) -> bb330; // scope 0 at ui/deriving/issue-58319.rs:337:5: 337:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:337:5: 337:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb330: {
        _994 = &((*_1).330: Little);     // scope 0 at ui/deriving/issue-58319.rs:338:5: 338:11
        _993 = _994;                     // scope 0 at ui/deriving/issue-58319.rs:338:5: 338:11
        _992 = <Little as Clone>::clone(move _993) -> bb331; // scope 0 at ui/deriving/issue-58319.rs:338:5: 338:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:338:5: 338:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb331: {
        _997 = &((*_1).331: Little);     // scope 0 at ui/deriving/issue-58319.rs:339:5: 339:11
        _996 = _997;                     // scope 0 at ui/deriving/issue-58319.rs:339:5: 339:11
        _995 = <Little as Clone>::clone(move _996) -> bb332; // scope 0 at ui/deriving/issue-58319.rs:339:5: 339:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:339:5: 339:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb332: {
        _1000 = &((*_1).332: Little);    // scope 0 at ui/deriving/issue-58319.rs:340:5: 340:11
        _999 = _1000;                    // scope 0 at ui/deriving/issue-58319.rs:340:5: 340:11
        _998 = <Little as Clone>::clone(move _999) -> bb333; // scope 0 at ui/deriving/issue-58319.rs:340:5: 340:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:340:5: 340:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb333: {
        _1003 = &((*_1).333: Little);    // scope 0 at ui/deriving/issue-58319.rs:341:5: 341:11
        _1002 = _1003;                   // scope 0 at ui/deriving/issue-58319.rs:341:5: 341:11
        _1001 = <Little as Clone>::clone(move _1002) -> bb334; // scope 0 at ui/deriving/issue-58319.rs:341:5: 341:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:341:5: 341:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb334: {
        _1006 = &((*_1).334: Little);    // scope 0 at ui/deriving/issue-58319.rs:342:5: 342:11
        _1005 = _1006;                   // scope 0 at ui/deriving/issue-58319.rs:342:5: 342:11
        _1004 = <Little as Clone>::clone(move _1005) -> bb335; // scope 0 at ui/deriving/issue-58319.rs:342:5: 342:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:342:5: 342:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb335: {
        _1009 = &((*_1).335: Little);    // scope 0 at ui/deriving/issue-58319.rs:343:5: 343:11
        _1008 = _1009;                   // scope 0 at ui/deriving/issue-58319.rs:343:5: 343:11
        _1007 = <Little as Clone>::clone(move _1008) -> bb336; // scope 0 at ui/deriving/issue-58319.rs:343:5: 343:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:343:5: 343:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb336: {
        _1012 = &((*_1).336: Little);    // scope 0 at ui/deriving/issue-58319.rs:344:5: 344:11
        _1011 = _1012;                   // scope 0 at ui/deriving/issue-58319.rs:344:5: 344:11
        _1010 = <Little as Clone>::clone(move _1011) -> bb337; // scope 0 at ui/deriving/issue-58319.rs:344:5: 344:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:344:5: 344:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb337: {
        _1015 = &((*_1).337: Little);    // scope 0 at ui/deriving/issue-58319.rs:345:5: 345:11
        _1014 = _1015;                   // scope 0 at ui/deriving/issue-58319.rs:345:5: 345:11
        _1013 = <Little as Clone>::clone(move _1014) -> bb338; // scope 0 at ui/deriving/issue-58319.rs:345:5: 345:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:345:5: 345:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb338: {
        _1018 = &((*_1).338: Little);    // scope 0 at ui/deriving/issue-58319.rs:346:5: 346:11
        _1017 = _1018;                   // scope 0 at ui/deriving/issue-58319.rs:346:5: 346:11
        _1016 = <Little as Clone>::clone(move _1017) -> bb339; // scope 0 at ui/deriving/issue-58319.rs:346:5: 346:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:346:5: 346:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb339: {
        _1021 = &((*_1).339: Little);    // scope 0 at ui/deriving/issue-58319.rs:347:5: 347:11
        _1020 = _1021;                   // scope 0 at ui/deriving/issue-58319.rs:347:5: 347:11
        _1019 = <Little as Clone>::clone(move _1020) -> bb340; // scope 0 at ui/deriving/issue-58319.rs:347:5: 347:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:347:5: 347:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb340: {
        _1024 = &((*_1).340: Little);    // scope 0 at ui/deriving/issue-58319.rs:348:5: 348:11
        _1023 = _1024;                   // scope 0 at ui/deriving/issue-58319.rs:348:5: 348:11
        _1022 = <Little as Clone>::clone(move _1023) -> bb341; // scope 0 at ui/deriving/issue-58319.rs:348:5: 348:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:348:5: 348:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb341: {
        _1027 = &((*_1).341: Little);    // scope 0 at ui/deriving/issue-58319.rs:349:5: 349:11
        _1026 = _1027;                   // scope 0 at ui/deriving/issue-58319.rs:349:5: 349:11
        _1025 = <Little as Clone>::clone(move _1026) -> bb342; // scope 0 at ui/deriving/issue-58319.rs:349:5: 349:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:349:5: 349:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb342: {
        _1030 = &((*_1).342: Little);    // scope 0 at ui/deriving/issue-58319.rs:350:5: 350:11
        _1029 = _1030;                   // scope 0 at ui/deriving/issue-58319.rs:350:5: 350:11
        _1028 = <Little as Clone>::clone(move _1029) -> bb343; // scope 0 at ui/deriving/issue-58319.rs:350:5: 350:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:350:5: 350:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb343: {
        _1033 = &((*_1).343: Little);    // scope 0 at ui/deriving/issue-58319.rs:351:5: 351:11
        _1032 = _1033;                   // scope 0 at ui/deriving/issue-58319.rs:351:5: 351:11
        _1031 = <Little as Clone>::clone(move _1032) -> bb344; // scope 0 at ui/deriving/issue-58319.rs:351:5: 351:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:351:5: 351:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb344: {
        _1036 = &((*_1).344: Little);    // scope 0 at ui/deriving/issue-58319.rs:352:5: 352:11
        _1035 = _1036;                   // scope 0 at ui/deriving/issue-58319.rs:352:5: 352:11
        _1034 = <Little as Clone>::clone(move _1035) -> bb345; // scope 0 at ui/deriving/issue-58319.rs:352:5: 352:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:352:5: 352:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb345: {
        _1039 = &((*_1).345: Little);    // scope 0 at ui/deriving/issue-58319.rs:353:5: 353:11
        _1038 = _1039;                   // scope 0 at ui/deriving/issue-58319.rs:353:5: 353:11
        _1037 = <Little as Clone>::clone(move _1038) -> bb346; // scope 0 at ui/deriving/issue-58319.rs:353:5: 353:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:353:5: 353:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb346: {
        _1042 = &((*_1).346: Little);    // scope 0 at ui/deriving/issue-58319.rs:354:5: 354:11
        _1041 = _1042;                   // scope 0 at ui/deriving/issue-58319.rs:354:5: 354:11
        _1040 = <Little as Clone>::clone(move _1041) -> bb347; // scope 0 at ui/deriving/issue-58319.rs:354:5: 354:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:354:5: 354:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb347: {
        _1045 = &((*_1).347: Little);    // scope 0 at ui/deriving/issue-58319.rs:355:5: 355:11
        _1044 = _1045;                   // scope 0 at ui/deriving/issue-58319.rs:355:5: 355:11
        _1043 = <Little as Clone>::clone(move _1044) -> bb348; // scope 0 at ui/deriving/issue-58319.rs:355:5: 355:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:355:5: 355:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb348: {
        _1048 = &((*_1).348: Little);    // scope 0 at ui/deriving/issue-58319.rs:356:5: 356:11
        _1047 = _1048;                   // scope 0 at ui/deriving/issue-58319.rs:356:5: 356:11
        _1046 = <Little as Clone>::clone(move _1047) -> bb349; // scope 0 at ui/deriving/issue-58319.rs:356:5: 356:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:356:5: 356:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb349: {
        _1051 = &((*_1).349: Little);    // scope 0 at ui/deriving/issue-58319.rs:357:5: 357:11
        _1050 = _1051;                   // scope 0 at ui/deriving/issue-58319.rs:357:5: 357:11
        _1049 = <Little as Clone>::clone(move _1050) -> bb350; // scope 0 at ui/deriving/issue-58319.rs:357:5: 357:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:357:5: 357:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb350: {
        _1054 = &((*_1).350: Little);    // scope 0 at ui/deriving/issue-58319.rs:358:5: 358:11
        _1053 = _1054;                   // scope 0 at ui/deriving/issue-58319.rs:358:5: 358:11
        _1052 = <Little as Clone>::clone(move _1053) -> bb351; // scope 0 at ui/deriving/issue-58319.rs:358:5: 358:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:358:5: 358:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb351: {
        _1057 = &((*_1).351: Little);    // scope 0 at ui/deriving/issue-58319.rs:359:5: 359:11
        _1056 = _1057;                   // scope 0 at ui/deriving/issue-58319.rs:359:5: 359:11
        _1055 = <Little as Clone>::clone(move _1056) -> bb352; // scope 0 at ui/deriving/issue-58319.rs:359:5: 359:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:359:5: 359:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb352: {
        _1060 = &((*_1).352: Little);    // scope 0 at ui/deriving/issue-58319.rs:360:5: 360:11
        _1059 = _1060;                   // scope 0 at ui/deriving/issue-58319.rs:360:5: 360:11
        _1058 = <Little as Clone>::clone(move _1059) -> bb353; // scope 0 at ui/deriving/issue-58319.rs:360:5: 360:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:360:5: 360:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb353: {
        _1063 = &((*_1).353: Little);    // scope 0 at ui/deriving/issue-58319.rs:361:5: 361:11
        _1062 = _1063;                   // scope 0 at ui/deriving/issue-58319.rs:361:5: 361:11
        _1061 = <Little as Clone>::clone(move _1062) -> bb354; // scope 0 at ui/deriving/issue-58319.rs:361:5: 361:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:361:5: 361:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb354: {
        _1066 = &((*_1).354: Little);    // scope 0 at ui/deriving/issue-58319.rs:362:5: 362:11
        _1065 = _1066;                   // scope 0 at ui/deriving/issue-58319.rs:362:5: 362:11
        _1064 = <Little as Clone>::clone(move _1065) -> bb355; // scope 0 at ui/deriving/issue-58319.rs:362:5: 362:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:362:5: 362:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb355: {
        _1069 = &((*_1).355: Little);    // scope 0 at ui/deriving/issue-58319.rs:363:5: 363:11
        _1068 = _1069;                   // scope 0 at ui/deriving/issue-58319.rs:363:5: 363:11
        _1067 = <Little as Clone>::clone(move _1068) -> bb356; // scope 0 at ui/deriving/issue-58319.rs:363:5: 363:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:363:5: 363:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb356: {
        _1072 = &((*_1).356: Little);    // scope 0 at ui/deriving/issue-58319.rs:364:5: 364:11
        _1071 = _1072;                   // scope 0 at ui/deriving/issue-58319.rs:364:5: 364:11
        _1070 = <Little as Clone>::clone(move _1071) -> bb357; // scope 0 at ui/deriving/issue-58319.rs:364:5: 364:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:364:5: 364:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb357: {
        _1075 = &((*_1).357: Little);    // scope 0 at ui/deriving/issue-58319.rs:365:5: 365:11
        _1074 = _1075;                   // scope 0 at ui/deriving/issue-58319.rs:365:5: 365:11
        _1073 = <Little as Clone>::clone(move _1074) -> bb358; // scope 0 at ui/deriving/issue-58319.rs:365:5: 365:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:365:5: 365:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb358: {
        _1078 = &((*_1).358: Little);    // scope 0 at ui/deriving/issue-58319.rs:366:5: 366:11
        _1077 = _1078;                   // scope 0 at ui/deriving/issue-58319.rs:366:5: 366:11
        _1076 = <Little as Clone>::clone(move _1077) -> bb359; // scope 0 at ui/deriving/issue-58319.rs:366:5: 366:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:366:5: 366:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb359: {
        _1081 = &((*_1).359: Little);    // scope 0 at ui/deriving/issue-58319.rs:367:5: 367:11
        _1080 = _1081;                   // scope 0 at ui/deriving/issue-58319.rs:367:5: 367:11
        _1079 = <Little as Clone>::clone(move _1080) -> bb360; // scope 0 at ui/deriving/issue-58319.rs:367:5: 367:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:367:5: 367:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb360: {
        _1084 = &((*_1).360: Little);    // scope 0 at ui/deriving/issue-58319.rs:368:5: 368:11
        _1083 = _1084;                   // scope 0 at ui/deriving/issue-58319.rs:368:5: 368:11
        _1082 = <Little as Clone>::clone(move _1083) -> bb361; // scope 0 at ui/deriving/issue-58319.rs:368:5: 368:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:368:5: 368:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb361: {
        _1087 = &((*_1).361: Little);    // scope 0 at ui/deriving/issue-58319.rs:369:5: 369:11
        _1086 = _1087;                   // scope 0 at ui/deriving/issue-58319.rs:369:5: 369:11
        _1085 = <Little as Clone>::clone(move _1086) -> bb362; // scope 0 at ui/deriving/issue-58319.rs:369:5: 369:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:369:5: 369:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb362: {
        _1090 = &((*_1).362: Little);    // scope 0 at ui/deriving/issue-58319.rs:370:5: 370:11
        _1089 = _1090;                   // scope 0 at ui/deriving/issue-58319.rs:370:5: 370:11
        _1088 = <Little as Clone>::clone(move _1089) -> bb363; // scope 0 at ui/deriving/issue-58319.rs:370:5: 370:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:370:5: 370:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb363: {
        _1093 = &((*_1).363: Little);    // scope 0 at ui/deriving/issue-58319.rs:371:5: 371:11
        _1092 = _1093;                   // scope 0 at ui/deriving/issue-58319.rs:371:5: 371:11
        _1091 = <Little as Clone>::clone(move _1092) -> bb364; // scope 0 at ui/deriving/issue-58319.rs:371:5: 371:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:371:5: 371:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb364: {
        _1096 = &((*_1).364: Little);    // scope 0 at ui/deriving/issue-58319.rs:372:5: 372:11
        _1095 = _1096;                   // scope 0 at ui/deriving/issue-58319.rs:372:5: 372:11
        _1094 = <Little as Clone>::clone(move _1095) -> bb365; // scope 0 at ui/deriving/issue-58319.rs:372:5: 372:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:372:5: 372:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb365: {
        _1099 = &((*_1).365: Little);    // scope 0 at ui/deriving/issue-58319.rs:373:5: 373:11
        _1098 = _1099;                   // scope 0 at ui/deriving/issue-58319.rs:373:5: 373:11
        _1097 = <Little as Clone>::clone(move _1098) -> bb366; // scope 0 at ui/deriving/issue-58319.rs:373:5: 373:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:373:5: 373:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb366: {
        _1102 = &((*_1).366: Little);    // scope 0 at ui/deriving/issue-58319.rs:374:5: 374:11
        _1101 = _1102;                   // scope 0 at ui/deriving/issue-58319.rs:374:5: 374:11
        _1100 = <Little as Clone>::clone(move _1101) -> bb367; // scope 0 at ui/deriving/issue-58319.rs:374:5: 374:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:374:5: 374:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb367: {
        _1105 = &((*_1).367: Little);    // scope 0 at ui/deriving/issue-58319.rs:375:5: 375:11
        _1104 = _1105;                   // scope 0 at ui/deriving/issue-58319.rs:375:5: 375:11
        _1103 = <Little as Clone>::clone(move _1104) -> bb368; // scope 0 at ui/deriving/issue-58319.rs:375:5: 375:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:375:5: 375:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb368: {
        _1108 = &((*_1).368: Little);    // scope 0 at ui/deriving/issue-58319.rs:376:5: 376:11
        _1107 = _1108;                   // scope 0 at ui/deriving/issue-58319.rs:376:5: 376:11
        _1106 = <Little as Clone>::clone(move _1107) -> bb369; // scope 0 at ui/deriving/issue-58319.rs:376:5: 376:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:376:5: 376:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb369: {
        _1111 = &((*_1).369: Little);    // scope 0 at ui/deriving/issue-58319.rs:377:5: 377:11
        _1110 = _1111;                   // scope 0 at ui/deriving/issue-58319.rs:377:5: 377:11
        _1109 = <Little as Clone>::clone(move _1110) -> bb370; // scope 0 at ui/deriving/issue-58319.rs:377:5: 377:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:377:5: 377:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb370: {
        _1114 = &((*_1).370: Little);    // scope 0 at ui/deriving/issue-58319.rs:378:5: 378:11
        _1113 = _1114;                   // scope 0 at ui/deriving/issue-58319.rs:378:5: 378:11
        _1112 = <Little as Clone>::clone(move _1113) -> bb371; // scope 0 at ui/deriving/issue-58319.rs:378:5: 378:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:378:5: 378:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb371: {
        _1117 = &((*_1).371: Little);    // scope 0 at ui/deriving/issue-58319.rs:379:5: 379:11
        _1116 = _1117;                   // scope 0 at ui/deriving/issue-58319.rs:379:5: 379:11
        _1115 = <Little as Clone>::clone(move _1116) -> bb372; // scope 0 at ui/deriving/issue-58319.rs:379:5: 379:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:379:5: 379:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb372: {
        _1120 = &((*_1).372: Little);    // scope 0 at ui/deriving/issue-58319.rs:380:5: 380:11
        _1119 = _1120;                   // scope 0 at ui/deriving/issue-58319.rs:380:5: 380:11
        _1118 = <Little as Clone>::clone(move _1119) -> bb373; // scope 0 at ui/deriving/issue-58319.rs:380:5: 380:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:380:5: 380:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb373: {
        _1123 = &((*_1).373: Little);    // scope 0 at ui/deriving/issue-58319.rs:381:5: 381:11
        _1122 = _1123;                   // scope 0 at ui/deriving/issue-58319.rs:381:5: 381:11
        _1121 = <Little as Clone>::clone(move _1122) -> bb374; // scope 0 at ui/deriving/issue-58319.rs:381:5: 381:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:381:5: 381:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb374: {
        _1126 = &((*_1).374: Little);    // scope 0 at ui/deriving/issue-58319.rs:382:5: 382:11
        _1125 = _1126;                   // scope 0 at ui/deriving/issue-58319.rs:382:5: 382:11
        _1124 = <Little as Clone>::clone(move _1125) -> bb375; // scope 0 at ui/deriving/issue-58319.rs:382:5: 382:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:382:5: 382:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb375: {
        _1129 = &((*_1).375: Little);    // scope 0 at ui/deriving/issue-58319.rs:383:5: 383:11
        _1128 = _1129;                   // scope 0 at ui/deriving/issue-58319.rs:383:5: 383:11
        _1127 = <Little as Clone>::clone(move _1128) -> bb376; // scope 0 at ui/deriving/issue-58319.rs:383:5: 383:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:383:5: 383:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb376: {
        _1132 = &((*_1).376: Little);    // scope 0 at ui/deriving/issue-58319.rs:384:5: 384:11
        _1131 = _1132;                   // scope 0 at ui/deriving/issue-58319.rs:384:5: 384:11
        _1130 = <Little as Clone>::clone(move _1131) -> bb377; // scope 0 at ui/deriving/issue-58319.rs:384:5: 384:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:384:5: 384:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb377: {
        _1135 = &((*_1).377: Little);    // scope 0 at ui/deriving/issue-58319.rs:385:5: 385:11
        _1134 = _1135;                   // scope 0 at ui/deriving/issue-58319.rs:385:5: 385:11
        _1133 = <Little as Clone>::clone(move _1134) -> bb378; // scope 0 at ui/deriving/issue-58319.rs:385:5: 385:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:385:5: 385:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb378: {
        _1138 = &((*_1).378: Little);    // scope 0 at ui/deriving/issue-58319.rs:386:5: 386:11
        _1137 = _1138;                   // scope 0 at ui/deriving/issue-58319.rs:386:5: 386:11
        _1136 = <Little as Clone>::clone(move _1137) -> bb379; // scope 0 at ui/deriving/issue-58319.rs:386:5: 386:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:386:5: 386:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb379: {
        _1141 = &((*_1).379: Little);    // scope 0 at ui/deriving/issue-58319.rs:387:5: 387:11
        _1140 = _1141;                   // scope 0 at ui/deriving/issue-58319.rs:387:5: 387:11
        _1139 = <Little as Clone>::clone(move _1140) -> bb380; // scope 0 at ui/deriving/issue-58319.rs:387:5: 387:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:387:5: 387:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb380: {
        _1144 = &((*_1).380: Little);    // scope 0 at ui/deriving/issue-58319.rs:388:5: 388:11
        _1143 = _1144;                   // scope 0 at ui/deriving/issue-58319.rs:388:5: 388:11
        _1142 = <Little as Clone>::clone(move _1143) -> bb381; // scope 0 at ui/deriving/issue-58319.rs:388:5: 388:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:388:5: 388:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb381: {
        _1147 = &((*_1).381: Little);    // scope 0 at ui/deriving/issue-58319.rs:389:5: 389:11
        _1146 = _1147;                   // scope 0 at ui/deriving/issue-58319.rs:389:5: 389:11
        _1145 = <Little as Clone>::clone(move _1146) -> bb382; // scope 0 at ui/deriving/issue-58319.rs:389:5: 389:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:389:5: 389:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb382: {
        _1150 = &((*_1).382: Little);    // scope 0 at ui/deriving/issue-58319.rs:390:5: 390:11
        _1149 = _1150;                   // scope 0 at ui/deriving/issue-58319.rs:390:5: 390:11
        _1148 = <Little as Clone>::clone(move _1149) -> bb383; // scope 0 at ui/deriving/issue-58319.rs:390:5: 390:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:390:5: 390:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb383: {
        _1153 = &((*_1).383: Little);    // scope 0 at ui/deriving/issue-58319.rs:391:5: 391:11
        _1152 = _1153;                   // scope 0 at ui/deriving/issue-58319.rs:391:5: 391:11
        _1151 = <Little as Clone>::clone(move _1152) -> bb384; // scope 0 at ui/deriving/issue-58319.rs:391:5: 391:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:391:5: 391:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb384: {
        _1156 = &((*_1).384: Little);    // scope 0 at ui/deriving/issue-58319.rs:392:5: 392:11
        _1155 = _1156;                   // scope 0 at ui/deriving/issue-58319.rs:392:5: 392:11
        _1154 = <Little as Clone>::clone(move _1155) -> bb385; // scope 0 at ui/deriving/issue-58319.rs:392:5: 392:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:392:5: 392:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb385: {
        _1159 = &((*_1).385: Little);    // scope 0 at ui/deriving/issue-58319.rs:393:5: 393:11
        _1158 = _1159;                   // scope 0 at ui/deriving/issue-58319.rs:393:5: 393:11
        _1157 = <Little as Clone>::clone(move _1158) -> bb386; // scope 0 at ui/deriving/issue-58319.rs:393:5: 393:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:393:5: 393:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb386: {
        _1162 = &((*_1).386: Little);    // scope 0 at ui/deriving/issue-58319.rs:394:5: 394:11
        _1161 = _1162;                   // scope 0 at ui/deriving/issue-58319.rs:394:5: 394:11
        _1160 = <Little as Clone>::clone(move _1161) -> bb387; // scope 0 at ui/deriving/issue-58319.rs:394:5: 394:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:394:5: 394:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb387: {
        _1165 = &((*_1).387: Little);    // scope 0 at ui/deriving/issue-58319.rs:395:5: 395:11
        _1164 = _1165;                   // scope 0 at ui/deriving/issue-58319.rs:395:5: 395:11
        _1163 = <Little as Clone>::clone(move _1164) -> bb388; // scope 0 at ui/deriving/issue-58319.rs:395:5: 395:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:395:5: 395:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb388: {
        _1168 = &((*_1).388: Little);    // scope 0 at ui/deriving/issue-58319.rs:396:5: 396:11
        _1167 = _1168;                   // scope 0 at ui/deriving/issue-58319.rs:396:5: 396:11
        _1166 = <Little as Clone>::clone(move _1167) -> bb389; // scope 0 at ui/deriving/issue-58319.rs:396:5: 396:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:396:5: 396:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb389: {
        _1171 = &((*_1).389: Little);    // scope 0 at ui/deriving/issue-58319.rs:397:5: 397:11
        _1170 = _1171;                   // scope 0 at ui/deriving/issue-58319.rs:397:5: 397:11
        _1169 = <Little as Clone>::clone(move _1170) -> bb390; // scope 0 at ui/deriving/issue-58319.rs:397:5: 397:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:397:5: 397:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb390: {
        _1174 = &((*_1).390: Little);    // scope 0 at ui/deriving/issue-58319.rs:398:5: 398:11
        _1173 = _1174;                   // scope 0 at ui/deriving/issue-58319.rs:398:5: 398:11
        _1172 = <Little as Clone>::clone(move _1173) -> bb391; // scope 0 at ui/deriving/issue-58319.rs:398:5: 398:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:398:5: 398:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb391: {
        _1177 = &((*_1).391: Little);    // scope 0 at ui/deriving/issue-58319.rs:399:5: 399:11
        _1176 = _1177;                   // scope 0 at ui/deriving/issue-58319.rs:399:5: 399:11
        _1175 = <Little as Clone>::clone(move _1176) -> bb392; // scope 0 at ui/deriving/issue-58319.rs:399:5: 399:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:399:5: 399:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb392: {
        _1180 = &((*_1).392: Little);    // scope 0 at ui/deriving/issue-58319.rs:400:5: 400:11
        _1179 = _1180;                   // scope 0 at ui/deriving/issue-58319.rs:400:5: 400:11
        _1178 = <Little as Clone>::clone(move _1179) -> bb393; // scope 0 at ui/deriving/issue-58319.rs:400:5: 400:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:400:5: 400:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb393: {
        _1183 = &((*_1).393: Little);    // scope 0 at ui/deriving/issue-58319.rs:401:5: 401:11
        _1182 = _1183;                   // scope 0 at ui/deriving/issue-58319.rs:401:5: 401:11
        _1181 = <Little as Clone>::clone(move _1182) -> bb394; // scope 0 at ui/deriving/issue-58319.rs:401:5: 401:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:401:5: 401:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb394: {
        _1186 = &((*_1).394: Little);    // scope 0 at ui/deriving/issue-58319.rs:402:5: 402:11
        _1185 = _1186;                   // scope 0 at ui/deriving/issue-58319.rs:402:5: 402:11
        _1184 = <Little as Clone>::clone(move _1185) -> bb395; // scope 0 at ui/deriving/issue-58319.rs:402:5: 402:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:402:5: 402:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb395: {
        _1189 = &((*_1).395: Little);    // scope 0 at ui/deriving/issue-58319.rs:403:5: 403:11
        _1188 = _1189;                   // scope 0 at ui/deriving/issue-58319.rs:403:5: 403:11
        _1187 = <Little as Clone>::clone(move _1188) -> bb396; // scope 0 at ui/deriving/issue-58319.rs:403:5: 403:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:403:5: 403:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb396: {
        _1192 = &((*_1).396: Little);    // scope 0 at ui/deriving/issue-58319.rs:404:5: 404:11
        _1191 = _1192;                   // scope 0 at ui/deriving/issue-58319.rs:404:5: 404:11
        _1190 = <Little as Clone>::clone(move _1191) -> bb397; // scope 0 at ui/deriving/issue-58319.rs:404:5: 404:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:404:5: 404:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb397: {
        _1195 = &((*_1).397: Little);    // scope 0 at ui/deriving/issue-58319.rs:405:5: 405:11
        _1194 = _1195;                   // scope 0 at ui/deriving/issue-58319.rs:405:5: 405:11
        _1193 = <Little as Clone>::clone(move _1194) -> bb398; // scope 0 at ui/deriving/issue-58319.rs:405:5: 405:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:405:5: 405:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb398: {
        _1198 = &((*_1).398: Little);    // scope 0 at ui/deriving/issue-58319.rs:406:5: 406:11
        _1197 = _1198;                   // scope 0 at ui/deriving/issue-58319.rs:406:5: 406:11
        _1196 = <Little as Clone>::clone(move _1197) -> bb399; // scope 0 at ui/deriving/issue-58319.rs:406:5: 406:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:406:5: 406:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb399: {
        _1201 = &((*_1).399: Little);    // scope 0 at ui/deriving/issue-58319.rs:407:5: 407:11
        _1200 = _1201;                   // scope 0 at ui/deriving/issue-58319.rs:407:5: 407:11
        _1199 = <Little as Clone>::clone(move _1200) -> bb400; // scope 0 at ui/deriving/issue-58319.rs:407:5: 407:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:407:5: 407:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb400: {
        _1204 = &((*_1).400: Little);    // scope 0 at ui/deriving/issue-58319.rs:408:5: 408:11
        _1203 = _1204;                   // scope 0 at ui/deriving/issue-58319.rs:408:5: 408:11
        _1202 = <Little as Clone>::clone(move _1203) -> bb401; // scope 0 at ui/deriving/issue-58319.rs:408:5: 408:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:408:5: 408:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb401: {
        _1207 = &((*_1).401: Little);    // scope 0 at ui/deriving/issue-58319.rs:409:5: 409:11
        _1206 = _1207;                   // scope 0 at ui/deriving/issue-58319.rs:409:5: 409:11
        _1205 = <Little as Clone>::clone(move _1206) -> bb402; // scope 0 at ui/deriving/issue-58319.rs:409:5: 409:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:409:5: 409:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb402: {
        _1210 = &((*_1).402: Little);    // scope 0 at ui/deriving/issue-58319.rs:410:5: 410:11
        _1209 = _1210;                   // scope 0 at ui/deriving/issue-58319.rs:410:5: 410:11
        _1208 = <Little as Clone>::clone(move _1209) -> bb403; // scope 0 at ui/deriving/issue-58319.rs:410:5: 410:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:410:5: 410:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb403: {
        _1213 = &((*_1).403: Little);    // scope 0 at ui/deriving/issue-58319.rs:411:5: 411:11
        _1212 = _1213;                   // scope 0 at ui/deriving/issue-58319.rs:411:5: 411:11
        _1211 = <Little as Clone>::clone(move _1212) -> bb404; // scope 0 at ui/deriving/issue-58319.rs:411:5: 411:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:411:5: 411:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb404: {
        _1216 = &((*_1).404: Little);    // scope 0 at ui/deriving/issue-58319.rs:412:5: 412:11
        _1215 = _1216;                   // scope 0 at ui/deriving/issue-58319.rs:412:5: 412:11
        _1214 = <Little as Clone>::clone(move _1215) -> bb405; // scope 0 at ui/deriving/issue-58319.rs:412:5: 412:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:412:5: 412:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb405: {
        _1219 = &((*_1).405: Little);    // scope 0 at ui/deriving/issue-58319.rs:413:5: 413:11
        _1218 = _1219;                   // scope 0 at ui/deriving/issue-58319.rs:413:5: 413:11
        _1217 = <Little as Clone>::clone(move _1218) -> bb406; // scope 0 at ui/deriving/issue-58319.rs:413:5: 413:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:413:5: 413:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb406: {
        _1222 = &((*_1).406: Little);    // scope 0 at ui/deriving/issue-58319.rs:414:5: 414:11
        _1221 = _1222;                   // scope 0 at ui/deriving/issue-58319.rs:414:5: 414:11
        _1220 = <Little as Clone>::clone(move _1221) -> bb407; // scope 0 at ui/deriving/issue-58319.rs:414:5: 414:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:414:5: 414:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb407: {
        _1225 = &((*_1).407: Little);    // scope 0 at ui/deriving/issue-58319.rs:415:5: 415:11
        _1224 = _1225;                   // scope 0 at ui/deriving/issue-58319.rs:415:5: 415:11
        _1223 = <Little as Clone>::clone(move _1224) -> bb408; // scope 0 at ui/deriving/issue-58319.rs:415:5: 415:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:415:5: 415:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb408: {
        _1228 = &((*_1).408: Little);    // scope 0 at ui/deriving/issue-58319.rs:416:5: 416:11
        _1227 = _1228;                   // scope 0 at ui/deriving/issue-58319.rs:416:5: 416:11
        _1226 = <Little as Clone>::clone(move _1227) -> bb409; // scope 0 at ui/deriving/issue-58319.rs:416:5: 416:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:416:5: 416:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb409: {
        _1231 = &((*_1).409: Little);    // scope 0 at ui/deriving/issue-58319.rs:417:5: 417:11
        _1230 = _1231;                   // scope 0 at ui/deriving/issue-58319.rs:417:5: 417:11
        _1229 = <Little as Clone>::clone(move _1230) -> bb410; // scope 0 at ui/deriving/issue-58319.rs:417:5: 417:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:417:5: 417:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb410: {
        _1234 = &((*_1).410: Little);    // scope 0 at ui/deriving/issue-58319.rs:418:5: 418:11
        _1233 = _1234;                   // scope 0 at ui/deriving/issue-58319.rs:418:5: 418:11
        _1232 = <Little as Clone>::clone(move _1233) -> bb411; // scope 0 at ui/deriving/issue-58319.rs:418:5: 418:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:418:5: 418:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb411: {
        _1237 = &((*_1).411: Little);    // scope 0 at ui/deriving/issue-58319.rs:419:5: 419:11
        _1236 = _1237;                   // scope 0 at ui/deriving/issue-58319.rs:419:5: 419:11
        _1235 = <Little as Clone>::clone(move _1236) -> bb412; // scope 0 at ui/deriving/issue-58319.rs:419:5: 419:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:419:5: 419:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb412: {
        _1240 = &((*_1).412: Little);    // scope 0 at ui/deriving/issue-58319.rs:420:5: 420:11
        _1239 = _1240;                   // scope 0 at ui/deriving/issue-58319.rs:420:5: 420:11
        _1238 = <Little as Clone>::clone(move _1239) -> bb413; // scope 0 at ui/deriving/issue-58319.rs:420:5: 420:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:420:5: 420:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb413: {
        _1243 = &((*_1).413: Little);    // scope 0 at ui/deriving/issue-58319.rs:421:5: 421:11
        _1242 = _1243;                   // scope 0 at ui/deriving/issue-58319.rs:421:5: 421:11
        _1241 = <Little as Clone>::clone(move _1242) -> bb414; // scope 0 at ui/deriving/issue-58319.rs:421:5: 421:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:421:5: 421:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb414: {
        _1246 = &((*_1).414: Little);    // scope 0 at ui/deriving/issue-58319.rs:422:5: 422:11
        _1245 = _1246;                   // scope 0 at ui/deriving/issue-58319.rs:422:5: 422:11
        _1244 = <Little as Clone>::clone(move _1245) -> bb415; // scope 0 at ui/deriving/issue-58319.rs:422:5: 422:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:422:5: 422:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb415: {
        _1249 = &((*_1).415: Little);    // scope 0 at ui/deriving/issue-58319.rs:423:5: 423:11
        _1248 = _1249;                   // scope 0 at ui/deriving/issue-58319.rs:423:5: 423:11
        _1247 = <Little as Clone>::clone(move _1248) -> bb416; // scope 0 at ui/deriving/issue-58319.rs:423:5: 423:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:423:5: 423:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb416: {
        _1252 = &((*_1).416: Little);    // scope 0 at ui/deriving/issue-58319.rs:424:5: 424:11
        _1251 = _1252;                   // scope 0 at ui/deriving/issue-58319.rs:424:5: 424:11
        _1250 = <Little as Clone>::clone(move _1251) -> bb417; // scope 0 at ui/deriving/issue-58319.rs:424:5: 424:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:424:5: 424:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb417: {
        _1255 = &((*_1).417: Little);    // scope 0 at ui/deriving/issue-58319.rs:425:5: 425:11
        _1254 = _1255;                   // scope 0 at ui/deriving/issue-58319.rs:425:5: 425:11
        _1253 = <Little as Clone>::clone(move _1254) -> bb418; // scope 0 at ui/deriving/issue-58319.rs:425:5: 425:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:425:5: 425:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb418: {
        _1258 = &((*_1).418: Little);    // scope 0 at ui/deriving/issue-58319.rs:426:5: 426:11
        _1257 = _1258;                   // scope 0 at ui/deriving/issue-58319.rs:426:5: 426:11
        _1256 = <Little as Clone>::clone(move _1257) -> bb419; // scope 0 at ui/deriving/issue-58319.rs:426:5: 426:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:426:5: 426:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb419: {
        _1261 = &((*_1).419: Little);    // scope 0 at ui/deriving/issue-58319.rs:427:5: 427:11
        _1260 = _1261;                   // scope 0 at ui/deriving/issue-58319.rs:427:5: 427:11
        _1259 = <Little as Clone>::clone(move _1260) -> bb420; // scope 0 at ui/deriving/issue-58319.rs:427:5: 427:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:427:5: 427:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb420: {
        _1264 = &((*_1).420: Little);    // scope 0 at ui/deriving/issue-58319.rs:428:5: 428:11
        _1263 = _1264;                   // scope 0 at ui/deriving/issue-58319.rs:428:5: 428:11
        _1262 = <Little as Clone>::clone(move _1263) -> bb421; // scope 0 at ui/deriving/issue-58319.rs:428:5: 428:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:428:5: 428:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb421: {
        _1267 = &((*_1).421: Little);    // scope 0 at ui/deriving/issue-58319.rs:429:5: 429:11
        _1266 = _1267;                   // scope 0 at ui/deriving/issue-58319.rs:429:5: 429:11
        _1265 = <Little as Clone>::clone(move _1266) -> bb422; // scope 0 at ui/deriving/issue-58319.rs:429:5: 429:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:429:5: 429:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb422: {
        _1270 = &((*_1).422: Little);    // scope 0 at ui/deriving/issue-58319.rs:430:5: 430:11
        _1269 = _1270;                   // scope 0 at ui/deriving/issue-58319.rs:430:5: 430:11
        _1268 = <Little as Clone>::clone(move _1269) -> bb423; // scope 0 at ui/deriving/issue-58319.rs:430:5: 430:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:430:5: 430:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb423: {
        _1273 = &((*_1).423: Little);    // scope 0 at ui/deriving/issue-58319.rs:431:5: 431:11
        _1272 = _1273;                   // scope 0 at ui/deriving/issue-58319.rs:431:5: 431:11
        _1271 = <Little as Clone>::clone(move _1272) -> bb424; // scope 0 at ui/deriving/issue-58319.rs:431:5: 431:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:431:5: 431:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb424: {
        _1276 = &((*_1).424: Little);    // scope 0 at ui/deriving/issue-58319.rs:432:5: 432:11
        _1275 = _1276;                   // scope 0 at ui/deriving/issue-58319.rs:432:5: 432:11
        _1274 = <Little as Clone>::clone(move _1275) -> bb425; // scope 0 at ui/deriving/issue-58319.rs:432:5: 432:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:432:5: 432:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb425: {
        _1279 = &((*_1).425: Little);    // scope 0 at ui/deriving/issue-58319.rs:433:5: 433:11
        _1278 = _1279;                   // scope 0 at ui/deriving/issue-58319.rs:433:5: 433:11
        _1277 = <Little as Clone>::clone(move _1278) -> bb426; // scope 0 at ui/deriving/issue-58319.rs:433:5: 433:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:433:5: 433:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb426: {
        _1282 = &((*_1).426: Little);    // scope 0 at ui/deriving/issue-58319.rs:434:5: 434:11
        _1281 = _1282;                   // scope 0 at ui/deriving/issue-58319.rs:434:5: 434:11
        _1280 = <Little as Clone>::clone(move _1281) -> bb427; // scope 0 at ui/deriving/issue-58319.rs:434:5: 434:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:434:5: 434:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb427: {
        _1285 = &((*_1).427: Little);    // scope 0 at ui/deriving/issue-58319.rs:435:5: 435:11
        _1284 = _1285;                   // scope 0 at ui/deriving/issue-58319.rs:435:5: 435:11
        _1283 = <Little as Clone>::clone(move _1284) -> bb428; // scope 0 at ui/deriving/issue-58319.rs:435:5: 435:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:435:5: 435:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb428: {
        _1288 = &((*_1).428: Little);    // scope 0 at ui/deriving/issue-58319.rs:436:5: 436:11
        _1287 = _1288;                   // scope 0 at ui/deriving/issue-58319.rs:436:5: 436:11
        _1286 = <Little as Clone>::clone(move _1287) -> bb429; // scope 0 at ui/deriving/issue-58319.rs:436:5: 436:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:436:5: 436:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb429: {
        _1291 = &((*_1).429: Little);    // scope 0 at ui/deriving/issue-58319.rs:437:5: 437:11
        _1290 = _1291;                   // scope 0 at ui/deriving/issue-58319.rs:437:5: 437:11
        _1289 = <Little as Clone>::clone(move _1290) -> bb430; // scope 0 at ui/deriving/issue-58319.rs:437:5: 437:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:437:5: 437:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb430: {
        _1294 = &((*_1).430: Little);    // scope 0 at ui/deriving/issue-58319.rs:438:5: 438:11
        _1293 = _1294;                   // scope 0 at ui/deriving/issue-58319.rs:438:5: 438:11
        _1292 = <Little as Clone>::clone(move _1293) -> bb431; // scope 0 at ui/deriving/issue-58319.rs:438:5: 438:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:438:5: 438:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb431: {
        _1297 = &((*_1).431: Little);    // scope 0 at ui/deriving/issue-58319.rs:439:5: 439:11
        _1296 = _1297;                   // scope 0 at ui/deriving/issue-58319.rs:439:5: 439:11
        _1295 = <Little as Clone>::clone(move _1296) -> bb432; // scope 0 at ui/deriving/issue-58319.rs:439:5: 439:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:439:5: 439:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb432: {
        _1300 = &((*_1).432: Little);    // scope 0 at ui/deriving/issue-58319.rs:440:5: 440:11
        _1299 = _1300;                   // scope 0 at ui/deriving/issue-58319.rs:440:5: 440:11
        _1298 = <Little as Clone>::clone(move _1299) -> bb433; // scope 0 at ui/deriving/issue-58319.rs:440:5: 440:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:440:5: 440:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb433: {
        _1303 = &((*_1).433: Little);    // scope 0 at ui/deriving/issue-58319.rs:441:5: 441:11
        _1302 = _1303;                   // scope 0 at ui/deriving/issue-58319.rs:441:5: 441:11
        _1301 = <Little as Clone>::clone(move _1302) -> bb434; // scope 0 at ui/deriving/issue-58319.rs:441:5: 441:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:441:5: 441:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb434: {
        _1306 = &((*_1).434: Little);    // scope 0 at ui/deriving/issue-58319.rs:442:5: 442:11
        _1305 = _1306;                   // scope 0 at ui/deriving/issue-58319.rs:442:5: 442:11
        _1304 = <Little as Clone>::clone(move _1305) -> bb435; // scope 0 at ui/deriving/issue-58319.rs:442:5: 442:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:442:5: 442:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb435: {
        _1309 = &((*_1).435: Little);    // scope 0 at ui/deriving/issue-58319.rs:443:5: 443:11
        _1308 = _1309;                   // scope 0 at ui/deriving/issue-58319.rs:443:5: 443:11
        _1307 = <Little as Clone>::clone(move _1308) -> bb436; // scope 0 at ui/deriving/issue-58319.rs:443:5: 443:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:443:5: 443:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb436: {
        _1312 = &((*_1).436: Little);    // scope 0 at ui/deriving/issue-58319.rs:444:5: 444:11
        _1311 = _1312;                   // scope 0 at ui/deriving/issue-58319.rs:444:5: 444:11
        _1310 = <Little as Clone>::clone(move _1311) -> bb437; // scope 0 at ui/deriving/issue-58319.rs:444:5: 444:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:444:5: 444:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb437: {
        _1315 = &((*_1).437: Little);    // scope 0 at ui/deriving/issue-58319.rs:445:5: 445:11
        _1314 = _1315;                   // scope 0 at ui/deriving/issue-58319.rs:445:5: 445:11
        _1313 = <Little as Clone>::clone(move _1314) -> bb438; // scope 0 at ui/deriving/issue-58319.rs:445:5: 445:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:445:5: 445:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb438: {
        _1318 = &((*_1).438: Little);    // scope 0 at ui/deriving/issue-58319.rs:446:5: 446:11
        _1317 = _1318;                   // scope 0 at ui/deriving/issue-58319.rs:446:5: 446:11
        _1316 = <Little as Clone>::clone(move _1317) -> bb439; // scope 0 at ui/deriving/issue-58319.rs:446:5: 446:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:446:5: 446:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb439: {
        _1321 = &((*_1).439: Little);    // scope 0 at ui/deriving/issue-58319.rs:447:5: 447:11
        _1320 = _1321;                   // scope 0 at ui/deriving/issue-58319.rs:447:5: 447:11
        _1319 = <Little as Clone>::clone(move _1320) -> bb440; // scope 0 at ui/deriving/issue-58319.rs:447:5: 447:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:447:5: 447:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb440: {
        _1324 = &((*_1).440: Little);    // scope 0 at ui/deriving/issue-58319.rs:448:5: 448:11
        _1323 = _1324;                   // scope 0 at ui/deriving/issue-58319.rs:448:5: 448:11
        _1322 = <Little as Clone>::clone(move _1323) -> bb441; // scope 0 at ui/deriving/issue-58319.rs:448:5: 448:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:448:5: 448:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb441: {
        _1327 = &((*_1).441: Little);    // scope 0 at ui/deriving/issue-58319.rs:449:5: 449:11
        _1326 = _1327;                   // scope 0 at ui/deriving/issue-58319.rs:449:5: 449:11
        _1325 = <Little as Clone>::clone(move _1326) -> bb442; // scope 0 at ui/deriving/issue-58319.rs:449:5: 449:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:449:5: 449:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb442: {
        _1330 = &((*_1).442: Little);    // scope 0 at ui/deriving/issue-58319.rs:450:5: 450:11
        _1329 = _1330;                   // scope 0 at ui/deriving/issue-58319.rs:450:5: 450:11
        _1328 = <Little as Clone>::clone(move _1329) -> bb443; // scope 0 at ui/deriving/issue-58319.rs:450:5: 450:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:450:5: 450:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb443: {
        _1333 = &((*_1).443: Little);    // scope 0 at ui/deriving/issue-58319.rs:451:5: 451:11
        _1332 = _1333;                   // scope 0 at ui/deriving/issue-58319.rs:451:5: 451:11
        _1331 = <Little as Clone>::clone(move _1332) -> bb444; // scope 0 at ui/deriving/issue-58319.rs:451:5: 451:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:451:5: 451:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb444: {
        _1336 = &((*_1).444: Little);    // scope 0 at ui/deriving/issue-58319.rs:452:5: 452:11
        _1335 = _1336;                   // scope 0 at ui/deriving/issue-58319.rs:452:5: 452:11
        _1334 = <Little as Clone>::clone(move _1335) -> bb445; // scope 0 at ui/deriving/issue-58319.rs:452:5: 452:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:452:5: 452:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb445: {
        _1339 = &((*_1).445: Little);    // scope 0 at ui/deriving/issue-58319.rs:453:5: 453:11
        _1338 = _1339;                   // scope 0 at ui/deriving/issue-58319.rs:453:5: 453:11
        _1337 = <Little as Clone>::clone(move _1338) -> bb446; // scope 0 at ui/deriving/issue-58319.rs:453:5: 453:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:453:5: 453:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb446: {
        _1342 = &((*_1).446: Little);    // scope 0 at ui/deriving/issue-58319.rs:454:5: 454:11
        _1341 = _1342;                   // scope 0 at ui/deriving/issue-58319.rs:454:5: 454:11
        _1340 = <Little as Clone>::clone(move _1341) -> bb447; // scope 0 at ui/deriving/issue-58319.rs:454:5: 454:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:454:5: 454:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb447: {
        _1345 = &((*_1).447: Little);    // scope 0 at ui/deriving/issue-58319.rs:455:5: 455:11
        _1344 = _1345;                   // scope 0 at ui/deriving/issue-58319.rs:455:5: 455:11
        _1343 = <Little as Clone>::clone(move _1344) -> bb448; // scope 0 at ui/deriving/issue-58319.rs:455:5: 455:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:455:5: 455:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb448: {
        _1348 = &((*_1).448: Little);    // scope 0 at ui/deriving/issue-58319.rs:456:5: 456:11
        _1347 = _1348;                   // scope 0 at ui/deriving/issue-58319.rs:456:5: 456:11
        _1346 = <Little as Clone>::clone(move _1347) -> bb449; // scope 0 at ui/deriving/issue-58319.rs:456:5: 456:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:456:5: 456:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb449: {
        _1351 = &((*_1).449: Little);    // scope 0 at ui/deriving/issue-58319.rs:457:5: 457:11
        _1350 = _1351;                   // scope 0 at ui/deriving/issue-58319.rs:457:5: 457:11
        _1349 = <Little as Clone>::clone(move _1350) -> bb450; // scope 0 at ui/deriving/issue-58319.rs:457:5: 457:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:457:5: 457:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb450: {
        _1354 = &((*_1).450: Little);    // scope 0 at ui/deriving/issue-58319.rs:458:5: 458:11
        _1353 = _1354;                   // scope 0 at ui/deriving/issue-58319.rs:458:5: 458:11
        _1352 = <Little as Clone>::clone(move _1353) -> bb451; // scope 0 at ui/deriving/issue-58319.rs:458:5: 458:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:458:5: 458:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb451: {
        _1357 = &((*_1).451: Little);    // scope 0 at ui/deriving/issue-58319.rs:459:5: 459:11
        _1356 = _1357;                   // scope 0 at ui/deriving/issue-58319.rs:459:5: 459:11
        _1355 = <Little as Clone>::clone(move _1356) -> bb452; // scope 0 at ui/deriving/issue-58319.rs:459:5: 459:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:459:5: 459:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb452: {
        _1360 = &((*_1).452: Little);    // scope 0 at ui/deriving/issue-58319.rs:460:5: 460:11
        _1359 = _1360;                   // scope 0 at ui/deriving/issue-58319.rs:460:5: 460:11
        _1358 = <Little as Clone>::clone(move _1359) -> bb453; // scope 0 at ui/deriving/issue-58319.rs:460:5: 460:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:460:5: 460:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb453: {
        _1363 = &((*_1).453: Little);    // scope 0 at ui/deriving/issue-58319.rs:461:5: 461:11
        _1362 = _1363;                   // scope 0 at ui/deriving/issue-58319.rs:461:5: 461:11
        _1361 = <Little as Clone>::clone(move _1362) -> bb454; // scope 0 at ui/deriving/issue-58319.rs:461:5: 461:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:461:5: 461:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb454: {
        _1366 = &((*_1).454: Little);    // scope 0 at ui/deriving/issue-58319.rs:462:5: 462:11
        _1365 = _1366;                   // scope 0 at ui/deriving/issue-58319.rs:462:5: 462:11
        _1364 = <Little as Clone>::clone(move _1365) -> bb455; // scope 0 at ui/deriving/issue-58319.rs:462:5: 462:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:462:5: 462:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb455: {
        _1369 = &((*_1).455: Little);    // scope 0 at ui/deriving/issue-58319.rs:463:5: 463:11
        _1368 = _1369;                   // scope 0 at ui/deriving/issue-58319.rs:463:5: 463:11
        _1367 = <Little as Clone>::clone(move _1368) -> bb456; // scope 0 at ui/deriving/issue-58319.rs:463:5: 463:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:463:5: 463:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb456: {
        _1372 = &((*_1).456: Little);    // scope 0 at ui/deriving/issue-58319.rs:464:5: 464:11
        _1371 = _1372;                   // scope 0 at ui/deriving/issue-58319.rs:464:5: 464:11
        _1370 = <Little as Clone>::clone(move _1371) -> bb457; // scope 0 at ui/deriving/issue-58319.rs:464:5: 464:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:464:5: 464:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb457: {
        _1375 = &((*_1).457: Little);    // scope 0 at ui/deriving/issue-58319.rs:465:5: 465:11
        _1374 = _1375;                   // scope 0 at ui/deriving/issue-58319.rs:465:5: 465:11
        _1373 = <Little as Clone>::clone(move _1374) -> bb458; // scope 0 at ui/deriving/issue-58319.rs:465:5: 465:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:465:5: 465:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb458: {
        _1378 = &((*_1).458: Little);    // scope 0 at ui/deriving/issue-58319.rs:466:5: 466:11
        _1377 = _1378;                   // scope 0 at ui/deriving/issue-58319.rs:466:5: 466:11
        _1376 = <Little as Clone>::clone(move _1377) -> bb459; // scope 0 at ui/deriving/issue-58319.rs:466:5: 466:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:466:5: 466:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb459: {
        _1381 = &((*_1).459: Little);    // scope 0 at ui/deriving/issue-58319.rs:467:5: 467:11
        _1380 = _1381;                   // scope 0 at ui/deriving/issue-58319.rs:467:5: 467:11
        _1379 = <Little as Clone>::clone(move _1380) -> bb460; // scope 0 at ui/deriving/issue-58319.rs:467:5: 467:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:467:5: 467:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb460: {
        _1384 = &((*_1).460: Little);    // scope 0 at ui/deriving/issue-58319.rs:468:5: 468:11
        _1383 = _1384;                   // scope 0 at ui/deriving/issue-58319.rs:468:5: 468:11
        _1382 = <Little as Clone>::clone(move _1383) -> bb461; // scope 0 at ui/deriving/issue-58319.rs:468:5: 468:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:468:5: 468:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb461: {
        _1387 = &((*_1).461: Little);    // scope 0 at ui/deriving/issue-58319.rs:469:5: 469:11
        _1386 = _1387;                   // scope 0 at ui/deriving/issue-58319.rs:469:5: 469:11
        _1385 = <Little as Clone>::clone(move _1386) -> bb462; // scope 0 at ui/deriving/issue-58319.rs:469:5: 469:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:469:5: 469:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb462: {
        _1390 = &((*_1).462: Little);    // scope 0 at ui/deriving/issue-58319.rs:470:5: 470:11
        _1389 = _1390;                   // scope 0 at ui/deriving/issue-58319.rs:470:5: 470:11
        _1388 = <Little as Clone>::clone(move _1389) -> bb463; // scope 0 at ui/deriving/issue-58319.rs:470:5: 470:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:470:5: 470:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb463: {
        _1393 = &((*_1).463: Little);    // scope 0 at ui/deriving/issue-58319.rs:471:5: 471:11
        _1392 = _1393;                   // scope 0 at ui/deriving/issue-58319.rs:471:5: 471:11
        _1391 = <Little as Clone>::clone(move _1392) -> bb464; // scope 0 at ui/deriving/issue-58319.rs:471:5: 471:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:471:5: 471:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb464: {
        _1396 = &((*_1).464: Little);    // scope 0 at ui/deriving/issue-58319.rs:472:5: 472:11
        _1395 = _1396;                   // scope 0 at ui/deriving/issue-58319.rs:472:5: 472:11
        _1394 = <Little as Clone>::clone(move _1395) -> bb465; // scope 0 at ui/deriving/issue-58319.rs:472:5: 472:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:472:5: 472:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb465: {
        _1399 = &((*_1).465: Little);    // scope 0 at ui/deriving/issue-58319.rs:473:5: 473:11
        _1398 = _1399;                   // scope 0 at ui/deriving/issue-58319.rs:473:5: 473:11
        _1397 = <Little as Clone>::clone(move _1398) -> bb466; // scope 0 at ui/deriving/issue-58319.rs:473:5: 473:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:473:5: 473:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb466: {
        _1402 = &((*_1).466: Little);    // scope 0 at ui/deriving/issue-58319.rs:474:5: 474:11
        _1401 = _1402;                   // scope 0 at ui/deriving/issue-58319.rs:474:5: 474:11
        _1400 = <Little as Clone>::clone(move _1401) -> bb467; // scope 0 at ui/deriving/issue-58319.rs:474:5: 474:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:474:5: 474:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb467: {
        _1405 = &((*_1).467: Little);    // scope 0 at ui/deriving/issue-58319.rs:475:5: 475:11
        _1404 = _1405;                   // scope 0 at ui/deriving/issue-58319.rs:475:5: 475:11
        _1403 = <Little as Clone>::clone(move _1404) -> bb468; // scope 0 at ui/deriving/issue-58319.rs:475:5: 475:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:475:5: 475:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb468: {
        _1408 = &((*_1).468: Little);    // scope 0 at ui/deriving/issue-58319.rs:476:5: 476:11
        _1407 = _1408;                   // scope 0 at ui/deriving/issue-58319.rs:476:5: 476:11
        _1406 = <Little as Clone>::clone(move _1407) -> bb469; // scope 0 at ui/deriving/issue-58319.rs:476:5: 476:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:476:5: 476:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb469: {
        _1411 = &((*_1).469: Little);    // scope 0 at ui/deriving/issue-58319.rs:477:5: 477:11
        _1410 = _1411;                   // scope 0 at ui/deriving/issue-58319.rs:477:5: 477:11
        _1409 = <Little as Clone>::clone(move _1410) -> bb470; // scope 0 at ui/deriving/issue-58319.rs:477:5: 477:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:477:5: 477:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb470: {
        _1414 = &((*_1).470: Little);    // scope 0 at ui/deriving/issue-58319.rs:478:5: 478:11
        _1413 = _1414;                   // scope 0 at ui/deriving/issue-58319.rs:478:5: 478:11
        _1412 = <Little as Clone>::clone(move _1413) -> bb471; // scope 0 at ui/deriving/issue-58319.rs:478:5: 478:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:478:5: 478:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb471: {
        _1417 = &((*_1).471: Little);    // scope 0 at ui/deriving/issue-58319.rs:479:5: 479:11
        _1416 = _1417;                   // scope 0 at ui/deriving/issue-58319.rs:479:5: 479:11
        _1415 = <Little as Clone>::clone(move _1416) -> bb472; // scope 0 at ui/deriving/issue-58319.rs:479:5: 479:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:479:5: 479:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb472: {
        _1420 = &((*_1).472: Little);    // scope 0 at ui/deriving/issue-58319.rs:480:5: 480:11
        _1419 = _1420;                   // scope 0 at ui/deriving/issue-58319.rs:480:5: 480:11
        _1418 = <Little as Clone>::clone(move _1419) -> bb473; // scope 0 at ui/deriving/issue-58319.rs:480:5: 480:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:480:5: 480:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb473: {
        _1423 = &((*_1).473: Little);    // scope 0 at ui/deriving/issue-58319.rs:481:5: 481:11
        _1422 = _1423;                   // scope 0 at ui/deriving/issue-58319.rs:481:5: 481:11
        _1421 = <Little as Clone>::clone(move _1422) -> bb474; // scope 0 at ui/deriving/issue-58319.rs:481:5: 481:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:481:5: 481:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb474: {
        _1426 = &((*_1).474: Little);    // scope 0 at ui/deriving/issue-58319.rs:482:5: 482:11
        _1425 = _1426;                   // scope 0 at ui/deriving/issue-58319.rs:482:5: 482:11
        _1424 = <Little as Clone>::clone(move _1425) -> bb475; // scope 0 at ui/deriving/issue-58319.rs:482:5: 482:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:482:5: 482:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb475: {
        _1429 = &((*_1).475: Little);    // scope 0 at ui/deriving/issue-58319.rs:483:5: 483:11
        _1428 = _1429;                   // scope 0 at ui/deriving/issue-58319.rs:483:5: 483:11
        _1427 = <Little as Clone>::clone(move _1428) -> bb476; // scope 0 at ui/deriving/issue-58319.rs:483:5: 483:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:483:5: 483:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb476: {
        _1432 = &((*_1).476: Little);    // scope 0 at ui/deriving/issue-58319.rs:484:5: 484:11
        _1431 = _1432;                   // scope 0 at ui/deriving/issue-58319.rs:484:5: 484:11
        _1430 = <Little as Clone>::clone(move _1431) -> bb477; // scope 0 at ui/deriving/issue-58319.rs:484:5: 484:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:484:5: 484:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb477: {
        _1435 = &((*_1).477: Little);    // scope 0 at ui/deriving/issue-58319.rs:485:5: 485:11
        _1434 = _1435;                   // scope 0 at ui/deriving/issue-58319.rs:485:5: 485:11
        _1433 = <Little as Clone>::clone(move _1434) -> bb478; // scope 0 at ui/deriving/issue-58319.rs:485:5: 485:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:485:5: 485:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb478: {
        _1438 = &((*_1).478: Little);    // scope 0 at ui/deriving/issue-58319.rs:486:5: 486:11
        _1437 = _1438;                   // scope 0 at ui/deriving/issue-58319.rs:486:5: 486:11
        _1436 = <Little as Clone>::clone(move _1437) -> bb479; // scope 0 at ui/deriving/issue-58319.rs:486:5: 486:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:486:5: 486:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb479: {
        _1441 = &((*_1).479: Little);    // scope 0 at ui/deriving/issue-58319.rs:487:5: 487:11
        _1440 = _1441;                   // scope 0 at ui/deriving/issue-58319.rs:487:5: 487:11
        _1439 = <Little as Clone>::clone(move _1440) -> bb480; // scope 0 at ui/deriving/issue-58319.rs:487:5: 487:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:487:5: 487:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb480: {
        _1444 = &((*_1).480: Little);    // scope 0 at ui/deriving/issue-58319.rs:488:5: 488:11
        _1443 = _1444;                   // scope 0 at ui/deriving/issue-58319.rs:488:5: 488:11
        _1442 = <Little as Clone>::clone(move _1443) -> bb481; // scope 0 at ui/deriving/issue-58319.rs:488:5: 488:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:488:5: 488:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb481: {
        _1447 = &((*_1).481: Little);    // scope 0 at ui/deriving/issue-58319.rs:489:5: 489:11
        _1446 = _1447;                   // scope 0 at ui/deriving/issue-58319.rs:489:5: 489:11
        _1445 = <Little as Clone>::clone(move _1446) -> bb482; // scope 0 at ui/deriving/issue-58319.rs:489:5: 489:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:489:5: 489:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb482: {
        _1450 = &((*_1).482: Little);    // scope 0 at ui/deriving/issue-58319.rs:490:5: 490:11
        _1449 = _1450;                   // scope 0 at ui/deriving/issue-58319.rs:490:5: 490:11
        _1448 = <Little as Clone>::clone(move _1449) -> bb483; // scope 0 at ui/deriving/issue-58319.rs:490:5: 490:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:490:5: 490:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb483: {
        _1453 = &((*_1).483: Little);    // scope 0 at ui/deriving/issue-58319.rs:491:5: 491:11
        _1452 = _1453;                   // scope 0 at ui/deriving/issue-58319.rs:491:5: 491:11
        _1451 = <Little as Clone>::clone(move _1452) -> bb484; // scope 0 at ui/deriving/issue-58319.rs:491:5: 491:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:491:5: 491:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb484: {
        _1456 = &((*_1).484: Little);    // scope 0 at ui/deriving/issue-58319.rs:492:5: 492:11
        _1455 = _1456;                   // scope 0 at ui/deriving/issue-58319.rs:492:5: 492:11
        _1454 = <Little as Clone>::clone(move _1455) -> bb485; // scope 0 at ui/deriving/issue-58319.rs:492:5: 492:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:492:5: 492:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb485: {
        _1459 = &((*_1).485: Little);    // scope 0 at ui/deriving/issue-58319.rs:493:5: 493:11
        _1458 = _1459;                   // scope 0 at ui/deriving/issue-58319.rs:493:5: 493:11
        _1457 = <Little as Clone>::clone(move _1458) -> bb486; // scope 0 at ui/deriving/issue-58319.rs:493:5: 493:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:493:5: 493:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb486: {
        _1462 = &((*_1).486: Little);    // scope 0 at ui/deriving/issue-58319.rs:494:5: 494:11
        _1461 = _1462;                   // scope 0 at ui/deriving/issue-58319.rs:494:5: 494:11
        _1460 = <Little as Clone>::clone(move _1461) -> bb487; // scope 0 at ui/deriving/issue-58319.rs:494:5: 494:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:494:5: 494:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb487: {
        _1465 = &((*_1).487: Little);    // scope 0 at ui/deriving/issue-58319.rs:495:5: 495:11
        _1464 = _1465;                   // scope 0 at ui/deriving/issue-58319.rs:495:5: 495:11
        _1463 = <Little as Clone>::clone(move _1464) -> bb488; // scope 0 at ui/deriving/issue-58319.rs:495:5: 495:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:495:5: 495:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb488: {
        _1468 = &((*_1).488: Little);    // scope 0 at ui/deriving/issue-58319.rs:496:5: 496:11
        _1467 = _1468;                   // scope 0 at ui/deriving/issue-58319.rs:496:5: 496:11
        _1466 = <Little as Clone>::clone(move _1467) -> bb489; // scope 0 at ui/deriving/issue-58319.rs:496:5: 496:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:496:5: 496:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb489: {
        _1471 = &((*_1).489: Little);    // scope 0 at ui/deriving/issue-58319.rs:497:5: 497:11
        _1470 = _1471;                   // scope 0 at ui/deriving/issue-58319.rs:497:5: 497:11
        _1469 = <Little as Clone>::clone(move _1470) -> bb490; // scope 0 at ui/deriving/issue-58319.rs:497:5: 497:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:497:5: 497:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb490: {
        _1474 = &((*_1).490: Little);    // scope 0 at ui/deriving/issue-58319.rs:498:5: 498:11
        _1473 = _1474;                   // scope 0 at ui/deriving/issue-58319.rs:498:5: 498:11
        _1472 = <Little as Clone>::clone(move _1473) -> bb491; // scope 0 at ui/deriving/issue-58319.rs:498:5: 498:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:498:5: 498:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb491: {
        _1477 = &((*_1).491: Little);    // scope 0 at ui/deriving/issue-58319.rs:499:5: 499:11
        _1476 = _1477;                   // scope 0 at ui/deriving/issue-58319.rs:499:5: 499:11
        _1475 = <Little as Clone>::clone(move _1476) -> bb492; // scope 0 at ui/deriving/issue-58319.rs:499:5: 499:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:499:5: 499:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb492: {
        _1480 = &((*_1).492: Little);    // scope 0 at ui/deriving/issue-58319.rs:500:5: 500:11
        _1479 = _1480;                   // scope 0 at ui/deriving/issue-58319.rs:500:5: 500:11
        _1478 = <Little as Clone>::clone(move _1479) -> bb493; // scope 0 at ui/deriving/issue-58319.rs:500:5: 500:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:500:5: 500:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb493: {
        _1483 = &((*_1).493: Little);    // scope 0 at ui/deriving/issue-58319.rs:501:5: 501:11
        _1482 = _1483;                   // scope 0 at ui/deriving/issue-58319.rs:501:5: 501:11
        _1481 = <Little as Clone>::clone(move _1482) -> bb494; // scope 0 at ui/deriving/issue-58319.rs:501:5: 501:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:501:5: 501:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb494: {
        _1486 = &((*_1).494: Little);    // scope 0 at ui/deriving/issue-58319.rs:502:5: 502:11
        _1485 = _1486;                   // scope 0 at ui/deriving/issue-58319.rs:502:5: 502:11
        _1484 = <Little as Clone>::clone(move _1485) -> bb495; // scope 0 at ui/deriving/issue-58319.rs:502:5: 502:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:502:5: 502:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb495: {
        _1489 = &((*_1).495: Little);    // scope 0 at ui/deriving/issue-58319.rs:503:5: 503:11
        _1488 = _1489;                   // scope 0 at ui/deriving/issue-58319.rs:503:5: 503:11
        _1487 = <Little as Clone>::clone(move _1488) -> bb496; // scope 0 at ui/deriving/issue-58319.rs:503:5: 503:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:503:5: 503:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb496: {
        _1492 = &((*_1).496: Little);    // scope 0 at ui/deriving/issue-58319.rs:504:5: 504:11
        _1491 = _1492;                   // scope 0 at ui/deriving/issue-58319.rs:504:5: 504:11
        _1490 = <Little as Clone>::clone(move _1491) -> bb497; // scope 0 at ui/deriving/issue-58319.rs:504:5: 504:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:504:5: 504:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb497: {
        _1495 = &((*_1).497: Little);    // scope 0 at ui/deriving/issue-58319.rs:505:5: 505:11
        _1494 = _1495;                   // scope 0 at ui/deriving/issue-58319.rs:505:5: 505:11
        _1493 = <Little as Clone>::clone(move _1494) -> bb498; // scope 0 at ui/deriving/issue-58319.rs:505:5: 505:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:505:5: 505:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb498: {
        _1498 = &((*_1).498: Little);    // scope 0 at ui/deriving/issue-58319.rs:506:5: 506:11
        _1497 = _1498;                   // scope 0 at ui/deriving/issue-58319.rs:506:5: 506:11
        _1496 = <Little as Clone>::clone(move _1497) -> bb499; // scope 0 at ui/deriving/issue-58319.rs:506:5: 506:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:506:5: 506:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb499: {
        _1501 = &((*_1).499: Little);    // scope 0 at ui/deriving/issue-58319.rs:507:5: 507:11
        _1500 = _1501;                   // scope 0 at ui/deriving/issue-58319.rs:507:5: 507:11
        _1499 = <Little as Clone>::clone(move _1500) -> bb500; // scope 0 at ui/deriving/issue-58319.rs:507:5: 507:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:507:5: 507:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb500: {
        _1504 = &((*_1).500: Little);    // scope 0 at ui/deriving/issue-58319.rs:508:5: 508:11
        _1503 = _1504;                   // scope 0 at ui/deriving/issue-58319.rs:508:5: 508:11
        _1502 = <Little as Clone>::clone(move _1503) -> bb501; // scope 0 at ui/deriving/issue-58319.rs:508:5: 508:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:508:5: 508:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb501: {
        _1507 = &((*_1).501: Little);    // scope 0 at ui/deriving/issue-58319.rs:509:5: 509:11
        _1506 = _1507;                   // scope 0 at ui/deriving/issue-58319.rs:509:5: 509:11
        _1505 = <Little as Clone>::clone(move _1506) -> bb502; // scope 0 at ui/deriving/issue-58319.rs:509:5: 509:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:509:5: 509:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb502: {
        _1510 = &((*_1).502: Little);    // scope 0 at ui/deriving/issue-58319.rs:510:5: 510:11
        _1509 = _1510;                   // scope 0 at ui/deriving/issue-58319.rs:510:5: 510:11
        _1508 = <Little as Clone>::clone(move _1509) -> bb503; // scope 0 at ui/deriving/issue-58319.rs:510:5: 510:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:510:5: 510:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb503: {
        _1513 = &((*_1).503: Little);    // scope 0 at ui/deriving/issue-58319.rs:511:5: 511:11
        _1512 = _1513;                   // scope 0 at ui/deriving/issue-58319.rs:511:5: 511:11
        _1511 = <Little as Clone>::clone(move _1512) -> bb504; // scope 0 at ui/deriving/issue-58319.rs:511:5: 511:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:511:5: 511:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb504: {
        _1516 = &((*_1).504: Little);    // scope 0 at ui/deriving/issue-58319.rs:512:5: 512:11
        _1515 = _1516;                   // scope 0 at ui/deriving/issue-58319.rs:512:5: 512:11
        _1514 = <Little as Clone>::clone(move _1515) -> bb505; // scope 0 at ui/deriving/issue-58319.rs:512:5: 512:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:512:5: 512:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb505: {
        _1519 = &((*_1).505: Little);    // scope 0 at ui/deriving/issue-58319.rs:513:5: 513:11
        _1518 = _1519;                   // scope 0 at ui/deriving/issue-58319.rs:513:5: 513:11
        _1517 = <Little as Clone>::clone(move _1518) -> bb506; // scope 0 at ui/deriving/issue-58319.rs:513:5: 513:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:513:5: 513:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb506: {
        _1522 = &((*_1).506: Little);    // scope 0 at ui/deriving/issue-58319.rs:514:5: 514:11
        _1521 = _1522;                   // scope 0 at ui/deriving/issue-58319.rs:514:5: 514:11
        _1520 = <Little as Clone>::clone(move _1521) -> bb507; // scope 0 at ui/deriving/issue-58319.rs:514:5: 514:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:514:5: 514:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb507: {
        _1525 = &((*_1).507: Little);    // scope 0 at ui/deriving/issue-58319.rs:515:5: 515:11
        _1524 = _1525;                   // scope 0 at ui/deriving/issue-58319.rs:515:5: 515:11
        _1523 = <Little as Clone>::clone(move _1524) -> bb508; // scope 0 at ui/deriving/issue-58319.rs:515:5: 515:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:515:5: 515:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb508: {
        _1528 = &((*_1).508: Little);    // scope 0 at ui/deriving/issue-58319.rs:516:5: 516:11
        _1527 = _1528;                   // scope 0 at ui/deriving/issue-58319.rs:516:5: 516:11
        _1526 = <Little as Clone>::clone(move _1527) -> bb509; // scope 0 at ui/deriving/issue-58319.rs:516:5: 516:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:516:5: 516:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb509: {
        _1531 = &((*_1).509: Little);    // scope 0 at ui/deriving/issue-58319.rs:517:5: 517:11
        _1530 = _1531;                   // scope 0 at ui/deriving/issue-58319.rs:517:5: 517:11
        _1529 = <Little as Clone>::clone(move _1530) -> bb510; // scope 0 at ui/deriving/issue-58319.rs:517:5: 517:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:517:5: 517:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb510: {
        _1534 = &((*_1).510: Little);    // scope 0 at ui/deriving/issue-58319.rs:518:5: 518:11
        _1533 = _1534;                   // scope 0 at ui/deriving/issue-58319.rs:518:5: 518:11
        _1532 = <Little as Clone>::clone(move _1533) -> bb511; // scope 0 at ui/deriving/issue-58319.rs:518:5: 518:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:518:5: 518:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb511: {
        _1537 = &((*_1).511: Little);    // scope 0 at ui/deriving/issue-58319.rs:519:5: 519:11
        _1536 = _1537;                   // scope 0 at ui/deriving/issue-58319.rs:519:5: 519:11
        _1535 = <Little as Clone>::clone(move _1536) -> bb512; // scope 0 at ui/deriving/issue-58319.rs:519:5: 519:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:519:5: 519:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb512: {
        _1540 = &((*_1).512: Little);    // scope 0 at ui/deriving/issue-58319.rs:520:5: 520:11
        _1539 = _1540;                   // scope 0 at ui/deriving/issue-58319.rs:520:5: 520:11
        _1538 = <Little as Clone>::clone(move _1539) -> bb513; // scope 0 at ui/deriving/issue-58319.rs:520:5: 520:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:520:5: 520:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb513: {
        _1543 = &((*_1).513: Little);    // scope 0 at ui/deriving/issue-58319.rs:521:5: 521:11
        _1542 = _1543;                   // scope 0 at ui/deriving/issue-58319.rs:521:5: 521:11
        _1541 = <Little as Clone>::clone(move _1542) -> bb514; // scope 0 at ui/deriving/issue-58319.rs:521:5: 521:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:521:5: 521:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb514: {
        _1546 = &((*_1).514: Little);    // scope 0 at ui/deriving/issue-58319.rs:522:5: 522:11
        _1545 = _1546;                   // scope 0 at ui/deriving/issue-58319.rs:522:5: 522:11
        _1544 = <Little as Clone>::clone(move _1545) -> bb515; // scope 0 at ui/deriving/issue-58319.rs:522:5: 522:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:522:5: 522:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb515: {
        _1549 = &((*_1).515: Little);    // scope 0 at ui/deriving/issue-58319.rs:523:5: 523:11
        _1548 = _1549;                   // scope 0 at ui/deriving/issue-58319.rs:523:5: 523:11
        _1547 = <Little as Clone>::clone(move _1548) -> bb516; // scope 0 at ui/deriving/issue-58319.rs:523:5: 523:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:523:5: 523:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb516: {
        _1552 = &((*_1).516: Little);    // scope 0 at ui/deriving/issue-58319.rs:524:5: 524:11
        _1551 = _1552;                   // scope 0 at ui/deriving/issue-58319.rs:524:5: 524:11
        _1550 = <Little as Clone>::clone(move _1551) -> bb517; // scope 0 at ui/deriving/issue-58319.rs:524:5: 524:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:524:5: 524:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb517: {
        _1555 = &((*_1).517: Little);    // scope 0 at ui/deriving/issue-58319.rs:525:5: 525:11
        _1554 = _1555;                   // scope 0 at ui/deriving/issue-58319.rs:525:5: 525:11
        _1553 = <Little as Clone>::clone(move _1554) -> bb518; // scope 0 at ui/deriving/issue-58319.rs:525:5: 525:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:525:5: 525:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb518: {
        _1558 = &((*_1).518: Little);    // scope 0 at ui/deriving/issue-58319.rs:526:5: 526:11
        _1557 = _1558;                   // scope 0 at ui/deriving/issue-58319.rs:526:5: 526:11
        _1556 = <Little as Clone>::clone(move _1557) -> bb519; // scope 0 at ui/deriving/issue-58319.rs:526:5: 526:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:526:5: 526:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb519: {
        _1561 = &((*_1).519: Little);    // scope 0 at ui/deriving/issue-58319.rs:527:5: 527:11
        _1560 = _1561;                   // scope 0 at ui/deriving/issue-58319.rs:527:5: 527:11
        _1559 = <Little as Clone>::clone(move _1560) -> bb520; // scope 0 at ui/deriving/issue-58319.rs:527:5: 527:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:527:5: 527:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb520: {
        _1564 = &((*_1).520: Little);    // scope 0 at ui/deriving/issue-58319.rs:528:5: 528:11
        _1563 = _1564;                   // scope 0 at ui/deriving/issue-58319.rs:528:5: 528:11
        _1562 = <Little as Clone>::clone(move _1563) -> bb521; // scope 0 at ui/deriving/issue-58319.rs:528:5: 528:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:528:5: 528:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb521: {
        _1567 = &((*_1).521: Little);    // scope 0 at ui/deriving/issue-58319.rs:529:5: 529:11
        _1566 = _1567;                   // scope 0 at ui/deriving/issue-58319.rs:529:5: 529:11
        _1565 = <Little as Clone>::clone(move _1566) -> bb522; // scope 0 at ui/deriving/issue-58319.rs:529:5: 529:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:529:5: 529:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb522: {
        _1570 = &((*_1).522: Little);    // scope 0 at ui/deriving/issue-58319.rs:530:5: 530:11
        _1569 = _1570;                   // scope 0 at ui/deriving/issue-58319.rs:530:5: 530:11
        _1568 = <Little as Clone>::clone(move _1569) -> bb523; // scope 0 at ui/deriving/issue-58319.rs:530:5: 530:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:530:5: 530:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb523: {
        _1573 = &((*_1).523: Little);    // scope 0 at ui/deriving/issue-58319.rs:531:5: 531:11
        _1572 = _1573;                   // scope 0 at ui/deriving/issue-58319.rs:531:5: 531:11
        _1571 = <Little as Clone>::clone(move _1572) -> bb524; // scope 0 at ui/deriving/issue-58319.rs:531:5: 531:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:531:5: 531:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb524: {
        _1576 = &((*_1).524: Little);    // scope 0 at ui/deriving/issue-58319.rs:532:5: 532:11
        _1575 = _1576;                   // scope 0 at ui/deriving/issue-58319.rs:532:5: 532:11
        _1574 = <Little as Clone>::clone(move _1575) -> bb525; // scope 0 at ui/deriving/issue-58319.rs:532:5: 532:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:532:5: 532:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb525: {
        _1579 = &((*_1).525: Little);    // scope 0 at ui/deriving/issue-58319.rs:533:5: 533:11
        _1578 = _1579;                   // scope 0 at ui/deriving/issue-58319.rs:533:5: 533:11
        _1577 = <Little as Clone>::clone(move _1578) -> bb526; // scope 0 at ui/deriving/issue-58319.rs:533:5: 533:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:533:5: 533:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb526: {
        _1582 = &((*_1).526: Little);    // scope 0 at ui/deriving/issue-58319.rs:534:5: 534:11
        _1581 = _1582;                   // scope 0 at ui/deriving/issue-58319.rs:534:5: 534:11
        _1580 = <Little as Clone>::clone(move _1581) -> bb527; // scope 0 at ui/deriving/issue-58319.rs:534:5: 534:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:534:5: 534:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb527: {
        _1585 = &((*_1).527: Little);    // scope 0 at ui/deriving/issue-58319.rs:535:5: 535:11
        _1584 = _1585;                   // scope 0 at ui/deriving/issue-58319.rs:535:5: 535:11
        _1583 = <Little as Clone>::clone(move _1584) -> bb528; // scope 0 at ui/deriving/issue-58319.rs:535:5: 535:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:535:5: 535:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb528: {
        _1588 = &((*_1).528: Little);    // scope 0 at ui/deriving/issue-58319.rs:536:5: 536:11
        _1587 = _1588;                   // scope 0 at ui/deriving/issue-58319.rs:536:5: 536:11
        _1586 = <Little as Clone>::clone(move _1587) -> bb529; // scope 0 at ui/deriving/issue-58319.rs:536:5: 536:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:536:5: 536:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb529: {
        _1591 = &((*_1).529: Little);    // scope 0 at ui/deriving/issue-58319.rs:537:5: 537:11
        _1590 = _1591;                   // scope 0 at ui/deriving/issue-58319.rs:537:5: 537:11
        _1589 = <Little as Clone>::clone(move _1590) -> bb530; // scope 0 at ui/deriving/issue-58319.rs:537:5: 537:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:537:5: 537:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb530: {
        _1594 = &((*_1).530: Little);    // scope 0 at ui/deriving/issue-58319.rs:538:5: 538:11
        _1593 = _1594;                   // scope 0 at ui/deriving/issue-58319.rs:538:5: 538:11
        _1592 = <Little as Clone>::clone(move _1593) -> bb531; // scope 0 at ui/deriving/issue-58319.rs:538:5: 538:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:538:5: 538:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb531: {
        _1597 = &((*_1).531: Little);    // scope 0 at ui/deriving/issue-58319.rs:539:5: 539:11
        _1596 = _1597;                   // scope 0 at ui/deriving/issue-58319.rs:539:5: 539:11
        _1595 = <Little as Clone>::clone(move _1596) -> bb532; // scope 0 at ui/deriving/issue-58319.rs:539:5: 539:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:539:5: 539:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb532: {
        _1600 = &((*_1).532: Little);    // scope 0 at ui/deriving/issue-58319.rs:540:5: 540:11
        _1599 = _1600;                   // scope 0 at ui/deriving/issue-58319.rs:540:5: 540:11
        _1598 = <Little as Clone>::clone(move _1599) -> bb533; // scope 0 at ui/deriving/issue-58319.rs:540:5: 540:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:540:5: 540:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb533: {
        _1603 = &((*_1).533: Little);    // scope 0 at ui/deriving/issue-58319.rs:541:5: 541:11
        _1602 = _1603;                   // scope 0 at ui/deriving/issue-58319.rs:541:5: 541:11
        _1601 = <Little as Clone>::clone(move _1602) -> bb534; // scope 0 at ui/deriving/issue-58319.rs:541:5: 541:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:541:5: 541:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb534: {
        _1606 = &((*_1).534: Little);    // scope 0 at ui/deriving/issue-58319.rs:542:5: 542:11
        _1605 = _1606;                   // scope 0 at ui/deriving/issue-58319.rs:542:5: 542:11
        _1604 = <Little as Clone>::clone(move _1605) -> bb535; // scope 0 at ui/deriving/issue-58319.rs:542:5: 542:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:542:5: 542:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb535: {
        _1609 = &((*_1).535: Little);    // scope 0 at ui/deriving/issue-58319.rs:543:5: 543:11
        _1608 = _1609;                   // scope 0 at ui/deriving/issue-58319.rs:543:5: 543:11
        _1607 = <Little as Clone>::clone(move _1608) -> bb536; // scope 0 at ui/deriving/issue-58319.rs:543:5: 543:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:543:5: 543:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb536: {
        _1612 = &((*_1).536: Little);    // scope 0 at ui/deriving/issue-58319.rs:544:5: 544:11
        _1611 = _1612;                   // scope 0 at ui/deriving/issue-58319.rs:544:5: 544:11
        _1610 = <Little as Clone>::clone(move _1611) -> bb537; // scope 0 at ui/deriving/issue-58319.rs:544:5: 544:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:544:5: 544:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb537: {
        _1615 = &((*_1).537: Little);    // scope 0 at ui/deriving/issue-58319.rs:545:5: 545:11
        _1614 = _1615;                   // scope 0 at ui/deriving/issue-58319.rs:545:5: 545:11
        _1613 = <Little as Clone>::clone(move _1614) -> bb538; // scope 0 at ui/deriving/issue-58319.rs:545:5: 545:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:545:5: 545:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb538: {
        _1618 = &((*_1).538: Little);    // scope 0 at ui/deriving/issue-58319.rs:546:5: 546:11
        _1617 = _1618;                   // scope 0 at ui/deriving/issue-58319.rs:546:5: 546:11
        _1616 = <Little as Clone>::clone(move _1617) -> bb539; // scope 0 at ui/deriving/issue-58319.rs:546:5: 546:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:546:5: 546:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb539: {
        _1621 = &((*_1).539: Little);    // scope 0 at ui/deriving/issue-58319.rs:547:5: 547:11
        _1620 = _1621;                   // scope 0 at ui/deriving/issue-58319.rs:547:5: 547:11
        _1619 = <Little as Clone>::clone(move _1620) -> bb540; // scope 0 at ui/deriving/issue-58319.rs:547:5: 547:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:547:5: 547:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb540: {
        _1624 = &((*_1).540: Little);    // scope 0 at ui/deriving/issue-58319.rs:548:5: 548:11
        _1623 = _1624;                   // scope 0 at ui/deriving/issue-58319.rs:548:5: 548:11
        _1622 = <Little as Clone>::clone(move _1623) -> bb541; // scope 0 at ui/deriving/issue-58319.rs:548:5: 548:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:548:5: 548:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb541: {
        _1627 = &((*_1).541: Little);    // scope 0 at ui/deriving/issue-58319.rs:549:5: 549:11
        _1626 = _1627;                   // scope 0 at ui/deriving/issue-58319.rs:549:5: 549:11
        _1625 = <Little as Clone>::clone(move _1626) -> bb542; // scope 0 at ui/deriving/issue-58319.rs:549:5: 549:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:549:5: 549:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb542: {
        _1630 = &((*_1).542: Little);    // scope 0 at ui/deriving/issue-58319.rs:550:5: 550:11
        _1629 = _1630;                   // scope 0 at ui/deriving/issue-58319.rs:550:5: 550:11
        _1628 = <Little as Clone>::clone(move _1629) -> bb543; // scope 0 at ui/deriving/issue-58319.rs:550:5: 550:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:550:5: 550:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb543: {
        _1633 = &((*_1).543: Little);    // scope 0 at ui/deriving/issue-58319.rs:551:5: 551:11
        _1632 = _1633;                   // scope 0 at ui/deriving/issue-58319.rs:551:5: 551:11
        _1631 = <Little as Clone>::clone(move _1632) -> bb544; // scope 0 at ui/deriving/issue-58319.rs:551:5: 551:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:551:5: 551:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb544: {
        _1636 = &((*_1).544: Little);    // scope 0 at ui/deriving/issue-58319.rs:552:5: 552:11
        _1635 = _1636;                   // scope 0 at ui/deriving/issue-58319.rs:552:5: 552:11
        _1634 = <Little as Clone>::clone(move _1635) -> bb545; // scope 0 at ui/deriving/issue-58319.rs:552:5: 552:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:552:5: 552:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb545: {
        _1639 = &((*_1).545: Little);    // scope 0 at ui/deriving/issue-58319.rs:553:5: 553:11
        _1638 = _1639;                   // scope 0 at ui/deriving/issue-58319.rs:553:5: 553:11
        _1637 = <Little as Clone>::clone(move _1638) -> bb546; // scope 0 at ui/deriving/issue-58319.rs:553:5: 553:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:553:5: 553:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb546: {
        _1642 = &((*_1).546: Little);    // scope 0 at ui/deriving/issue-58319.rs:554:5: 554:11
        _1641 = _1642;                   // scope 0 at ui/deriving/issue-58319.rs:554:5: 554:11
        _1640 = <Little as Clone>::clone(move _1641) -> bb547; // scope 0 at ui/deriving/issue-58319.rs:554:5: 554:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:554:5: 554:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb547: {
        _1645 = &((*_1).547: Little);    // scope 0 at ui/deriving/issue-58319.rs:555:5: 555:11
        _1644 = _1645;                   // scope 0 at ui/deriving/issue-58319.rs:555:5: 555:11
        _1643 = <Little as Clone>::clone(move _1644) -> bb548; // scope 0 at ui/deriving/issue-58319.rs:555:5: 555:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:555:5: 555:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb548: {
        _1648 = &((*_1).548: Little);    // scope 0 at ui/deriving/issue-58319.rs:556:5: 556:11
        _1647 = _1648;                   // scope 0 at ui/deriving/issue-58319.rs:556:5: 556:11
        _1646 = <Little as Clone>::clone(move _1647) -> bb549; // scope 0 at ui/deriving/issue-58319.rs:556:5: 556:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:556:5: 556:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb549: {
        _1651 = &((*_1).549: Little);    // scope 0 at ui/deriving/issue-58319.rs:557:5: 557:11
        _1650 = _1651;                   // scope 0 at ui/deriving/issue-58319.rs:557:5: 557:11
        _1649 = <Little as Clone>::clone(move _1650) -> bb550; // scope 0 at ui/deriving/issue-58319.rs:557:5: 557:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:557:5: 557:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb550: {
        _1654 = &((*_1).550: Little);    // scope 0 at ui/deriving/issue-58319.rs:558:5: 558:11
        _1653 = _1654;                   // scope 0 at ui/deriving/issue-58319.rs:558:5: 558:11
        _1652 = <Little as Clone>::clone(move _1653) -> bb551; // scope 0 at ui/deriving/issue-58319.rs:558:5: 558:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:558:5: 558:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb551: {
        _1657 = &((*_1).551: Little);    // scope 0 at ui/deriving/issue-58319.rs:559:5: 559:11
        _1656 = _1657;                   // scope 0 at ui/deriving/issue-58319.rs:559:5: 559:11
        _1655 = <Little as Clone>::clone(move _1656) -> bb552; // scope 0 at ui/deriving/issue-58319.rs:559:5: 559:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:559:5: 559:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb552: {
        _1660 = &((*_1).552: Little);    // scope 0 at ui/deriving/issue-58319.rs:560:5: 560:11
        _1659 = _1660;                   // scope 0 at ui/deriving/issue-58319.rs:560:5: 560:11
        _1658 = <Little as Clone>::clone(move _1659) -> bb553; // scope 0 at ui/deriving/issue-58319.rs:560:5: 560:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:560:5: 560:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb553: {
        _1663 = &((*_1).553: Little);    // scope 0 at ui/deriving/issue-58319.rs:561:5: 561:11
        _1662 = _1663;                   // scope 0 at ui/deriving/issue-58319.rs:561:5: 561:11
        _1661 = <Little as Clone>::clone(move _1662) -> bb554; // scope 0 at ui/deriving/issue-58319.rs:561:5: 561:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:561:5: 561:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb554: {
        _1666 = &((*_1).554: Little);    // scope 0 at ui/deriving/issue-58319.rs:562:5: 562:11
        _1665 = _1666;                   // scope 0 at ui/deriving/issue-58319.rs:562:5: 562:11
        _1664 = <Little as Clone>::clone(move _1665) -> bb555; // scope 0 at ui/deriving/issue-58319.rs:562:5: 562:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:562:5: 562:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb555: {
        _1669 = &((*_1).555: Little);    // scope 0 at ui/deriving/issue-58319.rs:563:5: 563:11
        _1668 = _1669;                   // scope 0 at ui/deriving/issue-58319.rs:563:5: 563:11
        _1667 = <Little as Clone>::clone(move _1668) -> bb556; // scope 0 at ui/deriving/issue-58319.rs:563:5: 563:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:563:5: 563:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb556: {
        _1672 = &((*_1).556: Little);    // scope 0 at ui/deriving/issue-58319.rs:564:5: 564:11
        _1671 = _1672;                   // scope 0 at ui/deriving/issue-58319.rs:564:5: 564:11
        _1670 = <Little as Clone>::clone(move _1671) -> bb557; // scope 0 at ui/deriving/issue-58319.rs:564:5: 564:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:564:5: 564:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb557: {
        _1675 = &((*_1).557: Little);    // scope 0 at ui/deriving/issue-58319.rs:565:5: 565:11
        _1674 = _1675;                   // scope 0 at ui/deriving/issue-58319.rs:565:5: 565:11
        _1673 = <Little as Clone>::clone(move _1674) -> bb558; // scope 0 at ui/deriving/issue-58319.rs:565:5: 565:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:565:5: 565:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb558: {
        _1678 = &((*_1).558: Little);    // scope 0 at ui/deriving/issue-58319.rs:566:5: 566:11
        _1677 = _1678;                   // scope 0 at ui/deriving/issue-58319.rs:566:5: 566:11
        _1676 = <Little as Clone>::clone(move _1677) -> bb559; // scope 0 at ui/deriving/issue-58319.rs:566:5: 566:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:566:5: 566:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb559: {
        _1681 = &((*_1).559: Little);    // scope 0 at ui/deriving/issue-58319.rs:567:5: 567:11
        _1680 = _1681;                   // scope 0 at ui/deriving/issue-58319.rs:567:5: 567:11
        _1679 = <Little as Clone>::clone(move _1680) -> bb560; // scope 0 at ui/deriving/issue-58319.rs:567:5: 567:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:567:5: 567:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb560: {
        _1684 = &((*_1).560: Little);    // scope 0 at ui/deriving/issue-58319.rs:568:5: 568:11
        _1683 = _1684;                   // scope 0 at ui/deriving/issue-58319.rs:568:5: 568:11
        _1682 = <Little as Clone>::clone(move _1683) -> bb561; // scope 0 at ui/deriving/issue-58319.rs:568:5: 568:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:568:5: 568:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb561: {
        _1687 = &((*_1).561: Little);    // scope 0 at ui/deriving/issue-58319.rs:569:5: 569:11
        _1686 = _1687;                   // scope 0 at ui/deriving/issue-58319.rs:569:5: 569:11
        _1685 = <Little as Clone>::clone(move _1686) -> bb562; // scope 0 at ui/deriving/issue-58319.rs:569:5: 569:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:569:5: 569:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb562: {
        _1690 = &((*_1).562: Little);    // scope 0 at ui/deriving/issue-58319.rs:570:5: 570:11
        _1689 = _1690;                   // scope 0 at ui/deriving/issue-58319.rs:570:5: 570:11
        _1688 = <Little as Clone>::clone(move _1689) -> bb563; // scope 0 at ui/deriving/issue-58319.rs:570:5: 570:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:570:5: 570:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb563: {
        _1693 = &((*_1).563: Little);    // scope 0 at ui/deriving/issue-58319.rs:571:5: 571:11
        _1692 = _1693;                   // scope 0 at ui/deriving/issue-58319.rs:571:5: 571:11
        _1691 = <Little as Clone>::clone(move _1692) -> bb564; // scope 0 at ui/deriving/issue-58319.rs:571:5: 571:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:571:5: 571:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb564: {
        _1696 = &((*_1).564: Little);    // scope 0 at ui/deriving/issue-58319.rs:572:5: 572:11
        _1695 = _1696;                   // scope 0 at ui/deriving/issue-58319.rs:572:5: 572:11
        _1694 = <Little as Clone>::clone(move _1695) -> bb565; // scope 0 at ui/deriving/issue-58319.rs:572:5: 572:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:572:5: 572:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb565: {
        _1699 = &((*_1).565: Little);    // scope 0 at ui/deriving/issue-58319.rs:573:5: 573:11
        _1698 = _1699;                   // scope 0 at ui/deriving/issue-58319.rs:573:5: 573:11
        _1697 = <Little as Clone>::clone(move _1698) -> bb566; // scope 0 at ui/deriving/issue-58319.rs:573:5: 573:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:573:5: 573:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb566: {
        _1702 = &((*_1).566: Little);    // scope 0 at ui/deriving/issue-58319.rs:574:5: 574:11
        _1701 = _1702;                   // scope 0 at ui/deriving/issue-58319.rs:574:5: 574:11
        _1700 = <Little as Clone>::clone(move _1701) -> bb567; // scope 0 at ui/deriving/issue-58319.rs:574:5: 574:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:574:5: 574:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb567: {
        _1705 = &((*_1).567: Little);    // scope 0 at ui/deriving/issue-58319.rs:575:5: 575:11
        _1704 = _1705;                   // scope 0 at ui/deriving/issue-58319.rs:575:5: 575:11
        _1703 = <Little as Clone>::clone(move _1704) -> bb568; // scope 0 at ui/deriving/issue-58319.rs:575:5: 575:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:575:5: 575:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb568: {
        _1708 = &((*_1).568: Little);    // scope 0 at ui/deriving/issue-58319.rs:576:5: 576:11
        _1707 = _1708;                   // scope 0 at ui/deriving/issue-58319.rs:576:5: 576:11
        _1706 = <Little as Clone>::clone(move _1707) -> bb569; // scope 0 at ui/deriving/issue-58319.rs:576:5: 576:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:576:5: 576:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb569: {
        _1711 = &((*_1).569: Little);    // scope 0 at ui/deriving/issue-58319.rs:577:5: 577:11
        _1710 = _1711;                   // scope 0 at ui/deriving/issue-58319.rs:577:5: 577:11
        _1709 = <Little as Clone>::clone(move _1710) -> bb570; // scope 0 at ui/deriving/issue-58319.rs:577:5: 577:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:577:5: 577:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb570: {
        _1714 = &((*_1).570: Little);    // scope 0 at ui/deriving/issue-58319.rs:578:5: 578:11
        _1713 = _1714;                   // scope 0 at ui/deriving/issue-58319.rs:578:5: 578:11
        _1712 = <Little as Clone>::clone(move _1713) -> bb571; // scope 0 at ui/deriving/issue-58319.rs:578:5: 578:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:578:5: 578:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb571: {
        _1717 = &((*_1).571: Little);    // scope 0 at ui/deriving/issue-58319.rs:579:5: 579:11
        _1716 = _1717;                   // scope 0 at ui/deriving/issue-58319.rs:579:5: 579:11
        _1715 = <Little as Clone>::clone(move _1716) -> bb572; // scope 0 at ui/deriving/issue-58319.rs:579:5: 579:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:579:5: 579:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb572: {
        _1720 = &((*_1).572: Little);    // scope 0 at ui/deriving/issue-58319.rs:580:5: 580:11
        _1719 = _1720;                   // scope 0 at ui/deriving/issue-58319.rs:580:5: 580:11
        _1718 = <Little as Clone>::clone(move _1719) -> bb573; // scope 0 at ui/deriving/issue-58319.rs:580:5: 580:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:580:5: 580:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb573: {
        _1723 = &((*_1).573: Little);    // scope 0 at ui/deriving/issue-58319.rs:581:5: 581:11
        _1722 = _1723;                   // scope 0 at ui/deriving/issue-58319.rs:581:5: 581:11
        _1721 = <Little as Clone>::clone(move _1722) -> bb574; // scope 0 at ui/deriving/issue-58319.rs:581:5: 581:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:581:5: 581:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb574: {
        _1726 = &((*_1).574: Little);    // scope 0 at ui/deriving/issue-58319.rs:582:5: 582:11
        _1725 = _1726;                   // scope 0 at ui/deriving/issue-58319.rs:582:5: 582:11
        _1724 = <Little as Clone>::clone(move _1725) -> bb575; // scope 0 at ui/deriving/issue-58319.rs:582:5: 582:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:582:5: 582:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb575: {
        _1729 = &((*_1).575: Little);    // scope 0 at ui/deriving/issue-58319.rs:583:5: 583:11
        _1728 = _1729;                   // scope 0 at ui/deriving/issue-58319.rs:583:5: 583:11
        _1727 = <Little as Clone>::clone(move _1728) -> bb576; // scope 0 at ui/deriving/issue-58319.rs:583:5: 583:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:583:5: 583:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb576: {
        _1732 = &((*_1).576: Little);    // scope 0 at ui/deriving/issue-58319.rs:584:5: 584:11
        _1731 = _1732;                   // scope 0 at ui/deriving/issue-58319.rs:584:5: 584:11
        _1730 = <Little as Clone>::clone(move _1731) -> bb577; // scope 0 at ui/deriving/issue-58319.rs:584:5: 584:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:584:5: 584:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb577: {
        _1735 = &((*_1).577: Little);    // scope 0 at ui/deriving/issue-58319.rs:585:5: 585:11
        _1734 = _1735;                   // scope 0 at ui/deriving/issue-58319.rs:585:5: 585:11
        _1733 = <Little as Clone>::clone(move _1734) -> bb578; // scope 0 at ui/deriving/issue-58319.rs:585:5: 585:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:585:5: 585:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb578: {
        _1738 = &((*_1).578: Little);    // scope 0 at ui/deriving/issue-58319.rs:586:5: 586:11
        _1737 = _1738;                   // scope 0 at ui/deriving/issue-58319.rs:586:5: 586:11
        _1736 = <Little as Clone>::clone(move _1737) -> bb579; // scope 0 at ui/deriving/issue-58319.rs:586:5: 586:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:586:5: 586:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb579: {
        _1741 = &((*_1).579: Little);    // scope 0 at ui/deriving/issue-58319.rs:587:5: 587:11
        _1740 = _1741;                   // scope 0 at ui/deriving/issue-58319.rs:587:5: 587:11
        _1739 = <Little as Clone>::clone(move _1740) -> bb580; // scope 0 at ui/deriving/issue-58319.rs:587:5: 587:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:587:5: 587:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb580: {
        _1744 = &((*_1).580: Little);    // scope 0 at ui/deriving/issue-58319.rs:588:5: 588:11
        _1743 = _1744;                   // scope 0 at ui/deriving/issue-58319.rs:588:5: 588:11
        _1742 = <Little as Clone>::clone(move _1743) -> bb581; // scope 0 at ui/deriving/issue-58319.rs:588:5: 588:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:588:5: 588:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb581: {
        _1747 = &((*_1).581: Little);    // scope 0 at ui/deriving/issue-58319.rs:589:5: 589:11
        _1746 = _1747;                   // scope 0 at ui/deriving/issue-58319.rs:589:5: 589:11
        _1745 = <Little as Clone>::clone(move _1746) -> bb582; // scope 0 at ui/deriving/issue-58319.rs:589:5: 589:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:589:5: 589:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb582: {
        _1750 = &((*_1).582: Little);    // scope 0 at ui/deriving/issue-58319.rs:590:5: 590:11
        _1749 = _1750;                   // scope 0 at ui/deriving/issue-58319.rs:590:5: 590:11
        _1748 = <Little as Clone>::clone(move _1749) -> bb583; // scope 0 at ui/deriving/issue-58319.rs:590:5: 590:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:590:5: 590:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb583: {
        _1753 = &((*_1).583: Little);    // scope 0 at ui/deriving/issue-58319.rs:591:5: 591:11
        _1752 = _1753;                   // scope 0 at ui/deriving/issue-58319.rs:591:5: 591:11
        _1751 = <Little as Clone>::clone(move _1752) -> bb584; // scope 0 at ui/deriving/issue-58319.rs:591:5: 591:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:591:5: 591:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb584: {
        _1756 = &((*_1).584: Little);    // scope 0 at ui/deriving/issue-58319.rs:592:5: 592:11
        _1755 = _1756;                   // scope 0 at ui/deriving/issue-58319.rs:592:5: 592:11
        _1754 = <Little as Clone>::clone(move _1755) -> bb585; // scope 0 at ui/deriving/issue-58319.rs:592:5: 592:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:592:5: 592:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb585: {
        _1759 = &((*_1).585: Little);    // scope 0 at ui/deriving/issue-58319.rs:593:5: 593:11
        _1758 = _1759;                   // scope 0 at ui/deriving/issue-58319.rs:593:5: 593:11
        _1757 = <Little as Clone>::clone(move _1758) -> bb586; // scope 0 at ui/deriving/issue-58319.rs:593:5: 593:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:593:5: 593:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb586: {
        _1762 = &((*_1).586: Little);    // scope 0 at ui/deriving/issue-58319.rs:594:5: 594:11
        _1761 = _1762;                   // scope 0 at ui/deriving/issue-58319.rs:594:5: 594:11
        _1760 = <Little as Clone>::clone(move _1761) -> bb587; // scope 0 at ui/deriving/issue-58319.rs:594:5: 594:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:594:5: 594:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb587: {
        _1765 = &((*_1).587: Little);    // scope 0 at ui/deriving/issue-58319.rs:595:5: 595:11
        _1764 = _1765;                   // scope 0 at ui/deriving/issue-58319.rs:595:5: 595:11
        _1763 = <Little as Clone>::clone(move _1764) -> bb588; // scope 0 at ui/deriving/issue-58319.rs:595:5: 595:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:595:5: 595:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb588: {
        _1768 = &((*_1).588: Little);    // scope 0 at ui/deriving/issue-58319.rs:596:5: 596:11
        _1767 = _1768;                   // scope 0 at ui/deriving/issue-58319.rs:596:5: 596:11
        _1766 = <Little as Clone>::clone(move _1767) -> bb589; // scope 0 at ui/deriving/issue-58319.rs:596:5: 596:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:596:5: 596:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb589: {
        _1771 = &((*_1).589: Little);    // scope 0 at ui/deriving/issue-58319.rs:597:5: 597:11
        _1770 = _1771;                   // scope 0 at ui/deriving/issue-58319.rs:597:5: 597:11
        _1769 = <Little as Clone>::clone(move _1770) -> bb590; // scope 0 at ui/deriving/issue-58319.rs:597:5: 597:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:597:5: 597:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb590: {
        _1774 = &((*_1).590: Little);    // scope 0 at ui/deriving/issue-58319.rs:598:5: 598:11
        _1773 = _1774;                   // scope 0 at ui/deriving/issue-58319.rs:598:5: 598:11
        _1772 = <Little as Clone>::clone(move _1773) -> bb591; // scope 0 at ui/deriving/issue-58319.rs:598:5: 598:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:598:5: 598:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb591: {
        _1777 = &((*_1).591: Little);    // scope 0 at ui/deriving/issue-58319.rs:599:5: 599:11
        _1776 = _1777;                   // scope 0 at ui/deriving/issue-58319.rs:599:5: 599:11
        _1775 = <Little as Clone>::clone(move _1776) -> bb592; // scope 0 at ui/deriving/issue-58319.rs:599:5: 599:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:599:5: 599:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb592: {
        _1780 = &((*_1).592: Little);    // scope 0 at ui/deriving/issue-58319.rs:600:5: 600:11
        _1779 = _1780;                   // scope 0 at ui/deriving/issue-58319.rs:600:5: 600:11
        _1778 = <Little as Clone>::clone(move _1779) -> bb593; // scope 0 at ui/deriving/issue-58319.rs:600:5: 600:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:600:5: 600:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb593: {
        _1783 = &((*_1).593: Little);    // scope 0 at ui/deriving/issue-58319.rs:601:5: 601:11
        _1782 = _1783;                   // scope 0 at ui/deriving/issue-58319.rs:601:5: 601:11
        _1781 = <Little as Clone>::clone(move _1782) -> bb594; // scope 0 at ui/deriving/issue-58319.rs:601:5: 601:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:601:5: 601:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb594: {
        _1786 = &((*_1).594: Little);    // scope 0 at ui/deriving/issue-58319.rs:602:5: 602:11
        _1785 = _1786;                   // scope 0 at ui/deriving/issue-58319.rs:602:5: 602:11
        _1784 = <Little as Clone>::clone(move _1785) -> bb595; // scope 0 at ui/deriving/issue-58319.rs:602:5: 602:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:602:5: 602:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb595: {
        _1789 = &((*_1).595: Little);    // scope 0 at ui/deriving/issue-58319.rs:603:5: 603:11
        _1788 = _1789;                   // scope 0 at ui/deriving/issue-58319.rs:603:5: 603:11
        _1787 = <Little as Clone>::clone(move _1788) -> bb596; // scope 0 at ui/deriving/issue-58319.rs:603:5: 603:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:603:5: 603:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb596: {
        _1792 = &((*_1).596: Little);    // scope 0 at ui/deriving/issue-58319.rs:604:5: 604:11
        _1791 = _1792;                   // scope 0 at ui/deriving/issue-58319.rs:604:5: 604:11
        _1790 = <Little as Clone>::clone(move _1791) -> bb597; // scope 0 at ui/deriving/issue-58319.rs:604:5: 604:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:604:5: 604:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb597: {
        _1795 = &((*_1).597: Little);    // scope 0 at ui/deriving/issue-58319.rs:605:5: 605:11
        _1794 = _1795;                   // scope 0 at ui/deriving/issue-58319.rs:605:5: 605:11
        _1793 = <Little as Clone>::clone(move _1794) -> bb598; // scope 0 at ui/deriving/issue-58319.rs:605:5: 605:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:605:5: 605:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb598: {
        _1798 = &((*_1).598: Little);    // scope 0 at ui/deriving/issue-58319.rs:606:5: 606:11
        _1797 = _1798;                   // scope 0 at ui/deriving/issue-58319.rs:606:5: 606:11
        _1796 = <Little as Clone>::clone(move _1797) -> bb599; // scope 0 at ui/deriving/issue-58319.rs:606:5: 606:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:606:5: 606:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb599: {
        _1801 = &((*_1).599: Little);    // scope 0 at ui/deriving/issue-58319.rs:607:5: 607:11
        _1800 = _1801;                   // scope 0 at ui/deriving/issue-58319.rs:607:5: 607:11
        _1799 = <Little as Clone>::clone(move _1800) -> bb600; // scope 0 at ui/deriving/issue-58319.rs:607:5: 607:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:607:5: 607:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb600: {
        _1804 = &((*_1).600: Little);    // scope 0 at ui/deriving/issue-58319.rs:608:5: 608:11
        _1803 = _1804;                   // scope 0 at ui/deriving/issue-58319.rs:608:5: 608:11
        _1802 = <Little as Clone>::clone(move _1803) -> bb601; // scope 0 at ui/deriving/issue-58319.rs:608:5: 608:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:608:5: 608:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb601: {
        _1807 = &((*_1).601: Little);    // scope 0 at ui/deriving/issue-58319.rs:609:5: 609:11
        _1806 = _1807;                   // scope 0 at ui/deriving/issue-58319.rs:609:5: 609:11
        _1805 = <Little as Clone>::clone(move _1806) -> bb602; // scope 0 at ui/deriving/issue-58319.rs:609:5: 609:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:609:5: 609:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb602: {
        _1810 = &((*_1).602: Little);    // scope 0 at ui/deriving/issue-58319.rs:610:5: 610:11
        _1809 = _1810;                   // scope 0 at ui/deriving/issue-58319.rs:610:5: 610:11
        _1808 = <Little as Clone>::clone(move _1809) -> bb603; // scope 0 at ui/deriving/issue-58319.rs:610:5: 610:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:610:5: 610:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb603: {
        _1813 = &((*_1).603: Little);    // scope 0 at ui/deriving/issue-58319.rs:611:5: 611:11
        _1812 = _1813;                   // scope 0 at ui/deriving/issue-58319.rs:611:5: 611:11
        _1811 = <Little as Clone>::clone(move _1812) -> bb604; // scope 0 at ui/deriving/issue-58319.rs:611:5: 611:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:611:5: 611:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb604: {
        _1816 = &((*_1).604: Little);    // scope 0 at ui/deriving/issue-58319.rs:612:5: 612:11
        _1815 = _1816;                   // scope 0 at ui/deriving/issue-58319.rs:612:5: 612:11
        _1814 = <Little as Clone>::clone(move _1815) -> bb605; // scope 0 at ui/deriving/issue-58319.rs:612:5: 612:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:612:5: 612:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb605: {
        _1819 = &((*_1).605: Little);    // scope 0 at ui/deriving/issue-58319.rs:613:5: 613:11
        _1818 = _1819;                   // scope 0 at ui/deriving/issue-58319.rs:613:5: 613:11
        _1817 = <Little as Clone>::clone(move _1818) -> bb606; // scope 0 at ui/deriving/issue-58319.rs:613:5: 613:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:613:5: 613:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb606: {
        _1822 = &((*_1).606: Little);    // scope 0 at ui/deriving/issue-58319.rs:614:5: 614:11
        _1821 = _1822;                   // scope 0 at ui/deriving/issue-58319.rs:614:5: 614:11
        _1820 = <Little as Clone>::clone(move _1821) -> bb607; // scope 0 at ui/deriving/issue-58319.rs:614:5: 614:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:614:5: 614:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb607: {
        _1825 = &((*_1).607: Little);    // scope 0 at ui/deriving/issue-58319.rs:615:5: 615:11
        _1824 = _1825;                   // scope 0 at ui/deriving/issue-58319.rs:615:5: 615:11
        _1823 = <Little as Clone>::clone(move _1824) -> bb608; // scope 0 at ui/deriving/issue-58319.rs:615:5: 615:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:615:5: 615:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb608: {
        _1828 = &((*_1).608: Little);    // scope 0 at ui/deriving/issue-58319.rs:616:5: 616:11
        _1827 = _1828;                   // scope 0 at ui/deriving/issue-58319.rs:616:5: 616:11
        _1826 = <Little as Clone>::clone(move _1827) -> bb609; // scope 0 at ui/deriving/issue-58319.rs:616:5: 616:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:616:5: 616:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb609: {
        _1831 = &((*_1).609: Little);    // scope 0 at ui/deriving/issue-58319.rs:617:5: 617:11
        _1830 = _1831;                   // scope 0 at ui/deriving/issue-58319.rs:617:5: 617:11
        _1829 = <Little as Clone>::clone(move _1830) -> bb610; // scope 0 at ui/deriving/issue-58319.rs:617:5: 617:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:617:5: 617:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb610: {
        _1834 = &((*_1).610: Little);    // scope 0 at ui/deriving/issue-58319.rs:618:5: 618:11
        _1833 = _1834;                   // scope 0 at ui/deriving/issue-58319.rs:618:5: 618:11
        _1832 = <Little as Clone>::clone(move _1833) -> bb611; // scope 0 at ui/deriving/issue-58319.rs:618:5: 618:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:618:5: 618:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb611: {
        _1837 = &((*_1).611: Little);    // scope 0 at ui/deriving/issue-58319.rs:619:5: 619:11
        _1836 = _1837;                   // scope 0 at ui/deriving/issue-58319.rs:619:5: 619:11
        _1835 = <Little as Clone>::clone(move _1836) -> bb612; // scope 0 at ui/deriving/issue-58319.rs:619:5: 619:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:619:5: 619:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb612: {
        _1840 = &((*_1).612: Little);    // scope 0 at ui/deriving/issue-58319.rs:620:5: 620:11
        _1839 = _1840;                   // scope 0 at ui/deriving/issue-58319.rs:620:5: 620:11
        _1838 = <Little as Clone>::clone(move _1839) -> bb613; // scope 0 at ui/deriving/issue-58319.rs:620:5: 620:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:620:5: 620:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb613: {
        _1843 = &((*_1).613: Little);    // scope 0 at ui/deriving/issue-58319.rs:621:5: 621:11
        _1842 = _1843;                   // scope 0 at ui/deriving/issue-58319.rs:621:5: 621:11
        _1841 = <Little as Clone>::clone(move _1842) -> bb614; // scope 0 at ui/deriving/issue-58319.rs:621:5: 621:11
                                         // mir::Constant
                                         // + span: ui/deriving/issue-58319.rs:621:5: 621:11
                                         // + literal: Const { ty: for<'a> fn(&'a Little) -> Little {<Little as Clone>::clone}, val: Value(<ZST>) }
    }

    bb614: {
        return;                          // scope 0 at ui/deriving/issue-58319.rs:5:15: 5:15
    }
}

fn Big(_1: Little, _2: Little, _3: Little, _4: Little, _5: Little, _6: Little, _7: Little, _8: Little, _9: Little, _10: Little, _11: Little, _12: Little, _13: Little, _14: Little, _15: Little, _16: Little, _17: Little, _18: Little, _19: Little, _20: Little, _21: Little, _22: Little, _23: Little, _24: Little, _25: Little, _26: Little, _27: Little, _28: Little, _29: Little, _30: Little, _31: Little, _32: Little, _33: Little, _34: Little, _35: Little, _36: Little, _37: Little, _38: Little, _39: Little, _40: Little, _41: Little, _42: Little, _43: Little, _44: Little, _45: Little, _46: Little, _47: Little, _48: Little, _49: Little, _50: Little, _51: Little, _52: Little, _53: Little, _54: Little, _55: Little, _56: Little, _57: Little, _58: Little, _59: Little, _60: Little, _61: Little, _62: Little, _63: Little, _64: Little, _65: Little, _66: Little, _67: Little, _68: Little, _69: Little, _70: Little, _71: Little, _72: Little, _73: Little, _74: Little, _75: Little, _76: Little, _77: Little, _78: Little, _79: Little, _80: Little, _81: Little, _82: Little, _83: Little, _84: Little, _85: Little, _86: Little, _87: Little, _88: Little, _89: Little, _90: Little, _91: Little, _92: Little, _93: Little, _94: Little, _95: Little, _96: Little, _97: Little, _98: Little, _99: Little, _100: Little, _101: Little, _102: Little, _103: Little, _104: Little, _105: Little, _106: Little, _107: Little, _108: Little, _109: Little, _110: Little, _111: Little, _112: Little, _113: Little, _114: Little, _115: Little, _116: Little, _117: Little, _118: Little, _119: Little, _120: Little, _121: Little, _122: Little, _123: Little, _124: Little, _125: Little, _126: Little, _127: Little, _128: Little, _129: Little, _130: Little, _131: Little, _132: Little, _133: Little, _134: Little, _135: Little, _136: Little, _137: Little, _138: Little, _139: Little, _140: Little, _141: Little, _142: Little, _143: Little, _144: Little, _145: Little, _146: Little, _147: Little, _148: Little, _149: Little, _150: Little, _151: Little, _152: Little, _153: Little, _154: Little, _155: Little, _156: Little, _157: Little, _158: Little, _159: Little, _160: Little, _161: Little, _162: Little, _163: Little, _164: Little, _165: Little, _166: Little, _167: Little, _168: Little, _169: Little, _170: Little, _171: Little, _172: Little, _173: Little, _174: Little, _175: Little, _176: Little, _177: Little, _178: Little, _179: Little, _180: Little, _181: Little, _182: Little, _183: Little, _184: Little, _185: Little, _186: Little, _187: Little, _188: Little, _189: Little, _190: Little, _191: Little, _192: Little, _193: Little, _194: Little, _195: Little, _196: Little, _197: Little, _198: Little, _199: Little, _200: Little, _201: Little, _202: Little, _203: Little, _204: Little, _205: Little, _206: Little, _207: Little, _208: Little, _209: Little, _210: Little, _211: Little, _212: Little, _213: Little, _214: Little, _215: Little, _216: Little, _217: Little, _218: Little, _219: Little, _220: Little, _221: Little, _222: Little, _223: Little, _224: Little, _225: Little, _226: Little, _227: Little, _228: Little, _229: Little, _230: Little, _231: Little, _232: Little, _233: Little, _234: Little, _235: Little, _236: Little, _237: Little, _238: Little, _239: Little, _240: Little, _241: Little, _242: Little, _243: Little, _244: Little, _245: Little, _246: Little, _247: Little, _248: Little, _249: Little, _250: Little, _251: Little, _252: Little, _253: Little, _254: Little, _255: Little, _256: Little, _257: Little, _258: Little, _259: Little, _260: Little, _261: Little, _262: Little, _263: Little, _264: Little, _265: Little, _266: Little, _267: Little, _268: Little, _269: Little, _270: Little, _271: Little, _272: Little, _273: Little, _274: Little, _275: Little, _276: Little, _277: Little, _278: Little, _279: Little, _280: Little, _281: Little, _282: Little, _283: Little, _284: Little, _285: Little, _286: Little, _287: Little, _288: Little, _289: Little, _290: Little, _291: Little, _292: Little, _293: Little, _294: Little, _295: Little, _296: Little, _297: Little, _298: Little, _299: Little, _300: Little, _301: Little, _302: Little, _303: Little, _304: Little, _305: Little, _306: Little, _307: Little, _308: Little, _309: Little, _310: Little, _311: Little, _312: Little, _313: Little, _314: Little, _315: Little, _316: Little, _317: Little, _318: Little, _319: Little, _320: Little, _321: Little, _322: Little, _323: Little, _324: Little, _325: Little, _326: Little, _327: Little, _328: Little, _329: Little, _330: Little, _331: Little, _332: Little, _333: Little, _334: Little, _335: Little, _336: Little, _337: Little, _338: Little, _339: Little, _340: Little, _341: Little, _342: Little, _343: Little, _344: Little, _345: Little, _346: Little, _347: Little, _348: Little, _349: Little, _350: Little, _351: Little, _352: Little, _353: Little, _354: Little, _355: Little, _356: Little, _357: Little, _358: Little, _359: Little, _360: Little, _361: Little, _362: Little, _363: Little, _364: Little, _365: Little, _366: Little, _367: Little, _368: Little, _369: Little, _370: Little, _371: Little, _372: Little, _373: Little, _374: Little, _375: Little, _376: Little, _377: Little, _378: Little, _379: Little, _380: Little, _381: Little, _382: Little, _383: Little, _384: Little, _385: Little, _386: Little, _387: Little, _388: Little, _389: Little, _390: Little, _391: Little, _392: Little, _393: Little, _394: Little, _395: Little, _396: Little, _397: Little, _398: Little, _399: Little, _400: Little, _401: Little, _402: Little, _403: Little, _404: Little, _405: Little, _406: Little, _407: Little, _408: Little, _409: Little, _410: Little, _411: Little, _412: Little, _413: Little, _414: Little, _415: Little, _416: Little, _417: Little, _418: Little, _419: Little, _420: Little, _421: Little, _422: Little, _423: Little, _424: Little, _425: Little, _426: Little, _427: Little, _428: Little, _429: Little, _430: Little, _431: Little, _432: Little, _433: Little, _434: Little, _435: Little, _436: Little, _437: Little, _438: Little, _439: Little, _440: Little, _441: Little, _442: Little, _443: Little, _444: Little, _445: Little, _446: Little, _447: Little, _448: Little, _449: Little, _450: Little, _451: Little, _452: Little, _453: Little, _454: Little, _455: Little, _456: Little, _457: Little, _458: Little, _459: Little, _460: Little, _461: Little, _462: Little, _463: Little, _464: Little, _465: Little, _466: Little, _467: Little, _468: Little, _469: Little, _470: Little, _471: Little, _472: Little, _473: Little, _474: Little, _475: Little, _476: Little, _477: Little, _478: Little, _479: Little, _480: Little, _481: Little, _482: Little, _483: Little, _484: Little, _485: Little, _486: Little, _487: Little, _488: Little, _489: Little, _490: Little, _491: Little, _492: Little, _493: Little, _494: Little, _495: Little, _496: Little, _497: Little, _498: Little, _499: Little, _500: Little, _501: Little, _502: Little, _503: Little, _504: Little, _505: Little, _506: Little, _507: Little, _508: Little, _509: Little, _510: Little, _511: Little, _512: Little, _513: Little, _514: Little, _515: Little, _516: Little, _517: Little, _518: Little, _519: Little, _520: Little, _521: Little, _522: Little, _523: Little, _524: Little, _525: Little, _526: Little, _527: Little, _528: Little, _529: Little, _530: Little, _531: Little, _532: Little, _533: Little, _534: Little, _535: Little, _536: Little, _537: Little, _538: Little, _539: Little, _540: Little, _541: Little, _542: Little, _543: Little, _544: Little, _545: Little, _546: Little, _547: Little, _548: Little, _549: Little, _550: Little, _551: Little, _552: Little, _553: Little, _554: Little, _555: Little, _556: Little, _557: Little, _558: Little, _559: Little, _560: Little, _561: Little, _562: Little, _563: Little, _564: Little, _565: Little, _566: Little, _567: Little, _568: Little, _569: Little, _570: Little, _571: Little, _572: Little, _573: Little, _574: Little, _575: Little, _576: Little, _577: Little, _578: Little, _579: Little, _580: Little, _581: Little, _582: Little, _583: Little, _584: Little, _585: Little, _586: Little, _587: Little, _588: Little, _589: Little, _590: Little, _591: Little, _592: Little, _593: Little, _594: Little, _595: Little, _596: Little, _597: Little, _598: Little, _599: Little, _600: Little, _601: Little, _602: Little, _603: Little, _604: Little, _605: Little, _606: Little, _607: Little, _608: Little, _609: Little, _610: Little, _611: Little, _612: Little, _613: Little, _614: Little) -> Big {
    let mut _0: Big;                     // return place in scope 0 at ui/deriving/issue-58319.rs:7:1: 7:15

    bb0: {
        _0 = Big(move _1, move _2, move _3, move _4, move _5, move _6, move _7, move _8, move _9, move _10, move _11, move _12, move _13, move _14, move _15, move _16, move _17, move _18, move _19, move _20, move _21, move _22, move _23, move _24, move _25, move _26, move _27, move _28, move _29, move _30, move _31, move _32, move _33, move _34, move _35, move _36, move _37, move _38, move _39, move _40, move _41, move _42, move _43, move _44, move _45, move _46, move _47, move _48, move _49, move _50, move _51, move _52, move _53, move _54, move _55, move _56, move _57, move _58, move _59, move _60, move _61, move _62, move _63, move _64, move _65, move _66, move _67, move _68, move _69, move _70, move _71, move _72, move _73, move _74, move _75, move _76, move _77, move _78, move _79, move _80, move _81, move _82, move _83, move _84, move _85, move _86, move _87, move _88, move _89, move _90, move _91, move _92, move _93, move _94, move _95, move _96, move _97, move _98, move _99, move _100, move _101, move _102, move _103, move _104, move _105, move _106, move _107, move _108, move _109, move _110, move _111, move _112, move _113, move _114, move _115, move _116, move _117, move _118, move _119, move _120, move _121, move _122, move _123, move _124, move _125, move _126, move _127, move _128, move _129, move _130, move _131, move _132, move _133, move _134, move _135, move _136, move _137, move _138, move _139, move _140, move _141, move _142, move _143, move _144, move _145, move _146, move _147, move _148, move _149, move _150, move _151, move _152, move _153, move _154, move _155, move _156, move _157, move _158, move _159, move _160, move _161, move _162, move _163, move _164, move _165, move _166, move _167, move _168, move _169, move _170, move _171, move _172, move _173, move _174, move _175, move _176, move _177, move _178, move _179, move _180, move _181, move _182, move _183, move _184, move _185, move _186, move _187, move _188, move _189, move _190, move _191, move _192, move _193, move _194, move _195, move _196, move _197, move _198, move _199, move _200, move _201, move _202, move _203, move _204, move _205, move _206, move _207, move _208, move _209, move _210, move _211, move _212, move _213, move _214, move _215, move _216, move _217, move _218, move _219, move _220, move _221, move _222, move _223, move _224, move _225, move _226, move _227, move _228, move _229, move _230, move _231, move _232, move _233, move _234, move _235, move _236, move _237, move _238, move _239, move _240, move _241, move _242, move _243, move _244, move _245, move _246, move _247, move _248, move _249, move _250, move _251, move _252, move _253, move _254, move _255, move _256, move _257, move _258, move _259, move _260, move _261, move _262, move _263, move _264, move _265, move _266, move _267, move _268, move _269, move _270, move _271, move _272, move _273, move _274, move _275, move _276, move _277, move _278, move _279, move _280, move _281, move _282, move _283, move _284, move _285, move _286, move _287, move _288, move _289, move _290, move _291, move _292, move _293, move _294, move _295, move _296, move _297, move _298, move _299, move _300, move _301, move _302, move _303, move _304, move _305, move _306, move _307, move _308, move _309, move _310, move _311, move _312, move _313, move _314, move _315, move _316, move _317, move _318, move _319, move _320, move _321, move _322, move _323, move _324, move _325, move _326, move _327, move _328, move _329, move _330, move _331, move _332, move _333, move _334, move _335, move _336, move _337, move _338, move _339, move _340, move _341, move _342, move _343, move _344, move _345, move _346, move _347, move _348, move _349, move _350, move _351, move _352, move _353, move _354, move _355, move _356, move _357, move _358, move _359, move _360, move _361, move _362, move _363, move _364, move _365, move _366, move _367, move _368, move _369, move _370, move _371, move _372, move _373, move _374, move _375, move _376, move _377, move _378, move _379, move _380, move _381, move _382, move _383, move _384, move _385, move _386, move _387, move _388, move _389, move _390, move _391, move _392, move _393, move _394, move _395, move _396, move _397, move _398, move _399, move _400, move _401, move _402, move _403, move _404, move _405, move _406, move _407, move _408, move _409, move _410, move _411, move _412, move _413, move _414, move _415, move _416, move _417, move _418, move _419, move _420, move _421, move _422, move _423, move _424, move _425, move _426, move _427, move _428, move _429, move _430, move _431, move _432, move _433, move _434, move _435, move _436, move _437, move _438, move _439, move _440, move _441, move _442, move _443, move _444, move _445, move _446, move _447, move _448, move _449, move _450, move _451, move _452, move _453, move _454, move _455, move _456, move _457, move _458, move _459, move _460, move _461, move _462, move _463, move _464, move _465, move _466, move _467, move _468, move _469, move _470, move _471, move _472, move _473, move _474, move _475, move _476, move _477, move _478, move _479, move _480, move _481, move _482, move _483, move _484, move _485, move _486, move _487, move _488, move _489, move _490, move _491, move _492, move _493, move _494, move _495, move _496, move _497, move _498, move _499, move _500, move _501, move _502, move _503, move _504, move _505, move _506, move _507, move _508, move _509, move _510, move _511, move _512, move _513, move _514, move _515, move _516, move _517, move _518, move _519, move _520, move _521, move _522, move _523, move _524, move _525, move _526, move _527, move _528, move _529, move _530, move _531, move _532, move _533, move _534, move _535, move _536, move _537, move _538, move _539, move _540, move _541, move _542, move _543, move _544, move _545, move _546, move _547, move _548, move _549, move _550, move _551, move _552, move _553, move _554, move _555, move _556, move _557, move _558, move _559, move _560, move _561, move _562, move _563, move _564, move _565, move _566, move _567, move _568, move _569, move _570, move _571, move _572, move _573, move _574, move _575, move _576, move _577, move _578, move _579, move _580, move _581, move _582, move _583, move _584, move _585, move _586, move _587, move _588, move _589, move _590, move _591, move _592, move _593, move _594, move _595, move _596, move _597, move _598, move _599, move _600, move _601, move _602, move _603, move _604, move _605, move _606, move _607, move _608, move _609, move _610, move _611, move _612, move _613, move _614); // scope 0 at ui/deriving/issue-58319.rs:7:1: 7:15
        return;                          // scope 0 at ui/deriving/issue-58319.rs:7:1: 7:15
    }
}

// MIR FOR CTFE
fn Big(_1: Little, _2: Little, _3: Little, _4: Little, _5: Little, _6: Little, _7: Little, _8: Little, _9: Little, _10: Little, _11: Little, _12: Little, _13: Little, _14: Little, _15: Little, _16: Little, _17: Little, _18: Little, _19: Little, _20: Little, _21: Little, _22: Little, _23: Little, _24: Little, _25: Little, _26: Little, _27: Little, _28: Little, _29: Little, _30: Little, _31: Little, _32: Little, _33: Little, _34: Little, _35: Little, _36: Little, _37: Little, _38: Little, _39: Little, _40: Little, _41: Little, _42: Little, _43: Little, _44: Little, _45: Little, _46: Little, _47: Little, _48: Little, _49: Little, _50: Little, _51: Little, _52: Little, _53: Little, _54: Little, _55: Little, _56: Little, _57: Little, _58: Little, _59: Little, _60: Little, _61: Little, _62: Little, _63: Little, _64: Little, _65: Little, _66: Little, _67: Little, _68: Little, _69: Little, _70: Little, _71: Little, _72: Little, _73: Little, _74: Little, _75: Little, _76: Little, _77: Little, _78: Little, _79: Little, _80: Little, _81: Little, _82: Little, _83: Little, _84: Little, _85: Little, _86: Little, _87: Little, _88: Little, _89: Little, _90: Little, _91: Little, _92: Little, _93: Little, _94: Little, _95: Little, _96: Little, _97: Little, _98: Little, _99: Little, _100: Little, _101: Little, _102: Little, _103: Little, _104: Little, _105: Little, _106: Little, _107: Little, _108: Little, _109: Little, _110: Little, _111: Little, _112: Little, _113: Little, _114: Little, _115: Little, _116: Little, _117: Little, _118: Little, _119: Little, _120: Little, _121: Little, _122: Little, _123: Little, _124: Little, _125: Little, _126: Little, _127: Little, _128: Little, _129: Little, _130: Little, _131: Little, _132: Little, _133: Little, _134: Little, _135: Little, _136: Little, _137: Little, _138: Little, _139: Little, _140: Little, _141: Little, _142: Little, _143: Little, _144: Little, _145: Little, _146: Little, _147: Little, _148: Little, _149: Little, _150: Little, _151: Little, _152: Little, _153: Little, _154: Little, _155: Little, _156: Little, _157: Little, _158: Little, _159: Little, _160: Little, _161: Little, _162: Little, _163: Little, _164: Little, _165: Little, _166: Little, _167: Little, _168: Little, _169: Little, _170: Little, _171: Little, _172: Little, _173: Little, _174: Little, _175: Little, _176: Little, _177: Little, _178: Little, _179: Little, _180: Little, _181: Little, _182: Little, _183: Little, _184: Little, _185: Little, _186: Little, _187: Little, _188: Little, _189: Little, _190: Little, _191: Little, _192: Little, _193: Little, _194: Little, _195: Little, _196: Little, _197: Little, _198: Little, _199: Little, _200: Little, _201: Little, _202: Little, _203: Little, _204: Little, _205: Little, _206: Little, _207: Little, _208: Little, _209: Little, _210: Little, _211: Little, _212: Little, _213: Little, _214: Little, _215: Little, _216: Little, _217: Little, _218: Little, _219: Little, _220: Little, _221: Little, _222: Little, _223: Little, _224: Little, _225: Little, _226: Little, _227: Little, _228: Little, _229: Little, _230: Little, _231: Little, _232: Little, _233: Little, _234: Little, _235: Little, _236: Little, _237: Little, _238: Little, _239: Little, _240: Little, _241: Little, _242: Little, _243: Little, _244: Little, _245: Little, _246: Little, _247: Little, _248: Little, _249: Little, _250: Little, _251: Little, _252: Little, _253: Little, _254: Little, _255: Little, _256: Little, _257: Little, _258: Little, _259: Little, _260: Little, _261: Little, _262: Little, _263: Little, _264: Little, _265: Little, _266: Little, _267: Little, _268: Little, _269: Little, _270: Little, _271: Little, _272: Little, _273: Little, _274: Little, _275: Little, _276: Little, _277: Little, _278: Little, _279: Little, _280: Little, _281: Little, _282: Little, _283: Little, _284: Little, _285: Little, _286: Little, _287: Little, _288: Little, _289: Little, _290: Little, _291: Little, _292: Little, _293: Little, _294: Little, _295: Little, _296: Little, _297: Little, _298: Little, _299: Little, _300: Little, _301: Little, _302: Little, _303: Little, _304: Little, _305: Little, _306: Little, _307: Little, _308: Little, _309: Little, _310: Little, _311: Little, _312: Little, _313: Little, _314: Little, _315: Little, _316: Little, _317: Little, _318: Little, _319: Little, _320: Little, _321: Little, _322: Little, _323: Little, _324: Little, _325: Little, _326: Little, _327: Little, _328: Little, _329: Little, _330: Little, _331: Little, _332: Little, _333: Little, _334: Little, _335: Little, _336: Little, _337: Little, _338: Little, _339: Little, _340: Little, _341: Little, _342: Little, _343: Little, _344: Little, _345: Little, _346: Little, _347: Little, _348: Little, _349: Little, _350: Little, _351: Little, _352: Little, _353: Little, _354: Little, _355: Little, _356: Little, _357: Little, _358: Little, _359: Little, _360: Little, _361: Little, _362: Little, _363: Little, _364: Little, _365: Little, _366: Little, _367: Little, _368: Little, _369: Little, _370: Little, _371: Little, _372: Little, _373: Little, _374: Little, _375: Little, _376: Little, _377: Little, _378: Little, _379: Little, _380: Little, _381: Little, _382: Little, _383: Little, _384: Little, _385: Little, _386: Little, _387: Little, _388: Little, _389: Little, _390: Little, _391: Little, _392: Little, _393: Little, _394: Little, _395: Little, _396: Little, _397: Little, _398: Little, _399: Little, _400: Little, _401: Little, _402: Little, _403: Little, _404: Little, _405: Little, _406: Little, _407: Little, _408: Little, _409: Little, _410: Little, _411: Little, _412: Little, _413: Little, _414: Little, _415: Little, _416: Little, _417: Little, _418: Little, _419: Little, _420: Little, _421: Little, _422: Little, _423: Little, _424: Little, _425: Little, _426: Little, _427: Little, _428: Little, _429: Little, _430: Little, _431: Little, _432: Little, _433: Little, _434: Little, _435: Little, _436: Little, _437: Little, _438: Little, _439: Little, _440: Little, _441: Little, _442: Little, _443: Little, _444: Little, _445: Little, _446: Little, _447: Little, _448: Little, _449: Little, _450: Little, _451: Little, _452: Little, _453: Little, _454: Little, _455: Little, _456: Little, _457: Little, _458: Little, _459: Little, _460: Little, _461: Little, _462: Little, _463: Little, _464: Little, _465: Little, _466: Little, _467: Little, _468: Little, _469: Little, _470: Little, _471: Little, _472: Little, _473: Little, _474: Little, _475: Little, _476: Little, _477: Little, _478: Little, _479: Little, _480: Little, _481: Little, _482: Little, _483: Little, _484: Little, _485: Little, _486: Little, _487: Little, _488: Little, _489: Little, _490: Little, _491: Little, _492: Little, _493: Little, _494: Little, _495: Little, _496: Little, _497: Little, _498: Little, _499: Little, _500: Little, _501: Little, _502: Little, _503: Little, _504: Little, _505: Little, _506: Little, _507: Little, _508: Little, _509: Little, _510: Little, _511: Little, _512: Little, _513: Little, _514: Little, _515: Little, _516: Little, _517: Little, _518: Little, _519: Little, _520: Little, _521: Little, _522: Little, _523: Little, _524: Little, _525: Little, _526: Little, _527: Little, _528: Little, _529: Little, _530: Little, _531: Little, _532: Little, _533: Little, _534: Little, _535: Little, _536: Little, _537: Little, _538: Little, _539: Little, _540: Little, _541: Little, _542: Little, _543: Little, _544: Little, _545: Little, _546: Little, _547: Little, _548: Little, _549: Little, _550: Little, _551: Little, _552: Little, _553: Little, _554: Little, _555: Little, _556: Little, _557: Little, _558: Little, _559: Little, _560: Little, _561: Little, _562: Little, _563: Little, _564: Little, _565: Little, _566: Little, _567: Little, _568: Little, _569: Little, _570: Little, _571: Little, _572: Little, _573: Little, _574: Little, _575: Little, _576: Little, _577: Little, _578: Little, _579: Little, _580: Little, _581: Little, _582: Little, _583: Little, _584: Little, _585: Little, _586: Little, _587: Little, _588: Little, _589: Little, _590: Little, _591: Little, _592: Little, _593: Little, _594: Little, _595: Little, _596: Little, _597: Little, _598: Little, _599: Little, _600: Little, _601: Little, _602: Little, _603: Little, _604: Little, _605: Little, _606: Little, _607: Little, _608: Little, _609: Little, _610: Little, _611: Little, _612: Little, _613: Little, _614: Little) -> Big {
    let mut _0: Big;                     // return place in scope 0 at ui/deriving/issue-58319.rs:7:1: 7:15

    bb0: {
        _0 = Big(move _1, move _2, move _3, move _4, move _5, move _6, move _7, move _8, move _9, move _10, move _11, move _12, move _13, move _14, move _15, move _16, move _17, move _18, move _19, move _20, move _21, move _22, move _23, move _24, move _25, move _26, move _27, move _28, move _29, move _30, move _31, move _32, move _33, move _34, move _35, move _36, move _37, move _38, move _39, move _40, move _41, move _42, move _43, move _44, move _45, move _46, move _47, move _48, move _49, move _50, move _51, move _52, move _53, move _54, move _55, move _56, move _57, move _58, move _59, move _60, move _61, move _62, move _63, move _64, move _65, move _66, move _67, move _68, move _69, move _70, move _71, move _72, move _73, move _74, move _75, move _76, move _77, move _78, move _79, move _80, move _81, move _82, move _83, move _84, move _85, move _86, move _87, move _88, move _89, move _90, move _91, move _92, move _93, move _94, move _95, move _96, move _97, move _98, move _99, move _100, move _101, move _102, move _103, move _104, move _105, move _106, move _107, move _108, move _109, move _110, move _111, move _112, move _113, move _114, move _115, move _116, move _117, move _118, move _119, move _120, move _121, move _122, move _123, move _124, move _125, move _126, move _127, move _128, move _129, move _130, move _131, move _132, move _133, move _134, move _135, move _136, move _137, move _138, move _139, move _140, move _141, move _142, move _143, move _144, move _145, move _146, move _147, move _148, move _149, move _150, move _151, move _152, move _153, move _154, move _155, move _156, move _157, move _158, move _159, move _160, move _161, move _162, move _163, move _164, move _165, move _166, move _167, move _168, move _169, move _170, move _171, move _172, move _173, move _174, move _175, move _176, move _177, move _178, move _179, move _180, move _181, move _182, move _183, move _184, move _185, move _186, move _187, move _188, move _189, move _190, move _191, move _192, move _193, move _194, move _195, move _196, move _197, move _198, move _199, move _200, move _201, move _202, move _203, move _204, move _205, move _206, move _207, move _208, move _209, move _210, move _211, move _212, move _213, move _214, move _215, move _216, move _217, move _218, move _219, move _220, move _221, move _222, move _223, move _224, move _225, move _226, move _227, move _228, move _229, move _230, move _231, move _232, move _233, move _234, move _235, move _236, move _237, move _238, move _239, move _240, move _241, move _242, move _243, move _244, move _245, move _246, move _247, move _248, move _249, move _250, move _251, move _252, move _253, move _254, move _255, move _256, move _257, move _258, move _259, move _260, move _261, move _262, move _263, move _264, move _265, move _266, move _267, move _268, move _269, move _270, move _271, move _272, move _273, move _274, move _275, move _276, move _277, move _278, move _279, move _280, move _281, move _282, move _283, move _284, move _285, move _286, move _287, move _288, move _289, move _290, move _291, move _292, move _293, move _294, move _295, move _296, move _297, move _298, move _299, move _300, move _301, move _302, move _303, move _304, move _305, move _306, move _307, move _308, move _309, move _310, move _311, move _312, move _313, move _314, move _315, move _316, move _317, move _318, move _319, move _320, move _321, move _322, move _323, move _324, move _325, move _326, move _327, move _328, move _329, move _330, move _331, move _332, move _333, move _334, move _335, move _336, move _337, move _338, move _339, move _340, move _341, move _342, move _343, move _344, move _345, move _346, move _347, move _348, move _349, move _350, move _351, move _352, move _353, move _354, move _355, move _356, move _357, move _358, move _359, move _360, move _361, move _362, move _363, move _364, move _365, move _366, move _367, move _368, move _369, move _370, move _371, move _372, move _373, move _374, move _375, move _376, move _377, move _378, move _379, move _380, move _381, move _382, move _383, move _384, move _385, move _386, move _387, move _388, move _389, move _390, move _391, move _392, move _393, move _394, move _395, move _396, move _397, move _398, move _399, move _400, move _401, move _402, move _403, move _404, move _405, move _406, move _407, move _408, move _409, move _410, move _411, move _412, move _413, move _414, move _415, move _416, move _417, move _418, move _419, move _420, move _421, move _422, move _423, move _424, move _425, move _426, move _427, move _428, move _429, move _430, move _431, move _432, move _433, move _434, move _435, move _436, move _437, move _438, move _439, move _440, move _441, move _442, move _443, move _444, move _445, move _446, move _447, move _448, move _449, move _450, move _451, move _452, move _453, move _454, move _455, move _456, move _457, move _458, move _459, move _460, move _461, move _462, move _463, move _464, move _465, move _466, move _467, move _468, move _469, move _470, move _471, move _472, move _473, move _474, move _475, move _476, move _477, move _478, move _479, move _480, move _481, move _482, move _483, move _484, move _485, move _486, move _487, move _488, move _489, move _490, move _491, move _492, move _493, move _494, move _495, move _496, move _497, move _498, move _499, move _500, move _501, move _502, move _503, move _504, move _505, move _506, move _507, move _508, move _509, move _510, move _511, move _512, move _513, move _514, move _515, move _516, move _517, move _518, move _519, move _520, move _521, move _522, move _523, move _524, move _525, move _526, move _527, move _528, move _529, move _530, move _531, move _532, move _533, move _534, move _535, move _536, move _537, move _538, move _539, move _540, move _541, move _542, move _543, move _544, move _545, move _546, move _547, move _548, move _549, move _550, move _551, move _552, move _553, move _554, move _555, move _556, move _557, move _558, move _559, move _560, move _561, move _562, move _563, move _564, move _565, move _566, move _567, move _568, move _569, move _570, move _571, move _572, move _573, move _574, move _575, move _576, move _577, move _578, move _579, move _580, move _581, move _582, move _583, move _584, move _585, move _586, move _587, move _588, move _589, move _590, move _591, move _592, move _593, move _594, move _595, move _596, move _597, move _598, move _599, move _600, move _601, move _602, move _603, move _604, move _605, move _606, move _607, move _608, move _609, move _610, move _611, move _612, move _613, move _614); // scope 0 at ui/deriving/issue-58319.rs:7:1: 7:15
        return;                          // scope 0 at ui/deriving/issue-58319.rs:7:1: 7:15
    }
}
