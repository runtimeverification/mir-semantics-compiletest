// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
fn <impl at ui/deriving/deriving-cmp-generic-tuple-struct.rs:2:10: 2:19>::eq(_1: &TS<T>, _2: &TS<T>) -> bool {
    debug self => _1;                    // in scope 0 at ui/deriving/deriving-cmp-generic-tuple-struct.rs:2:10: 2:19
    debug other => _2;                   // in scope 0 at ui/deriving/deriving-cmp-generic-tuple-struct.rs:2:10: 2:19
    let mut _0: bool;                    // return place in scope 0 at ui/deriving/deriving-cmp-generic-tuple-struct.rs:2:10: 2:19
    let mut _3: bool;                    // in scope 0 at ui/deriving/deriving-cmp-generic-tuple-struct.rs:3:14: 3:15
    let mut _4: &T;                      // in scope 0 at ui/deriving/deriving-cmp-generic-tuple-struct.rs:3:14: 3:15
    let mut _5: &T;                      // in scope 0 at ui/deriving/deriving-cmp-generic-tuple-struct.rs:3:14: 3:15
    let mut _6: bool;                    // in scope 0 at ui/deriving/deriving-cmp-generic-tuple-struct.rs:3:16: 3:17
    let mut _7: &T;                      // in scope 0 at ui/deriving/deriving-cmp-generic-tuple-struct.rs:3:16: 3:17
    let mut _8: &T;                      // in scope 0 at ui/deriving/deriving-cmp-generic-tuple-struct.rs:3:16: 3:17

    bb0: {
        _4 = &((*_1).0: T);              // scope 0 at ui/deriving/deriving-cmp-generic-tuple-struct.rs:3:14: 3:15
        _5 = &((*_2).0: T);              // scope 0 at ui/deriving/deriving-cmp-generic-tuple-struct.rs:3:14: 3:15
        _3 = <T as PartialEq>::eq(move _4, move _5) -> bb4; // scope 0 at ui/deriving/deriving-cmp-generic-tuple-struct.rs:3:14: 3:15
                                         // mir::Constant
                                         // + span: ui/deriving/deriving-cmp-generic-tuple-struct.rs:3:14: 3:15
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a T, &'b T) -> bool {<T as PartialEq>::eq}, val: Value(<ZST>) }
    }

    bb1: {
        _0 = const false;                // scope 0 at ui/deriving/deriving-cmp-generic-tuple-struct.rs:3:16: 3:17
        goto -> bb3;                     // scope 0 at ui/deriving/deriving-cmp-generic-tuple-struct.rs:3:16: 3:17
    }

    bb2: {
        _7 = &((*_1).1: T);              // scope 0 at ui/deriving/deriving-cmp-generic-tuple-struct.rs:3:16: 3:17
        _8 = &((*_2).1: T);              // scope 0 at ui/deriving/deriving-cmp-generic-tuple-struct.rs:3:16: 3:17
        _6 = <T as PartialEq>::eq(move _7, move _8) -> bb5; // scope 0 at ui/deriving/deriving-cmp-generic-tuple-struct.rs:3:16: 3:17
                                         // mir::Constant
                                         // + span: ui/deriving/deriving-cmp-generic-tuple-struct.rs:3:16: 3:17
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a T, &'b T) -> bool {<T as PartialEq>::eq}, val: Value(<ZST>) }
    }

    bb3: {
        return;                          // scope 0 at ui/deriving/deriving-cmp-generic-tuple-struct.rs:2:19: 2:19
    }

    bb4: {
        switchInt(move _3) -> [0: bb1, otherwise: bb2]; // scope 0 at ui/deriving/deriving-cmp-generic-tuple-struct.rs:3:16: 3:17
    }

    bb5: {
        _0 = move _6;                    // scope 0 at ui/deriving/deriving-cmp-generic-tuple-struct.rs:3:16: 3:17
        goto -> bb3;                     // scope 0 at ui/deriving/deriving-cmp-generic-tuple-struct.rs:3:16: 3:17
    }
}

fn <impl at ui/deriving/deriving-cmp-generic-tuple-struct.rs:2:21: 2:23>::assert_receiver_is_total_eq(_1: &TS<T>) -> () {
    debug self => _1;                    // in scope 0 at ui/deriving/deriving-cmp-generic-tuple-struct.rs:2:21: 2:23
    let mut _0: ();                      // return place in scope 0 at ui/deriving/deriving-cmp-generic-tuple-struct.rs:2:21: 2:23
    scope 1 {
    }

    bb0: {
        return;                          // scope 0 at ui/deriving/deriving-cmp-generic-tuple-struct.rs:2:23: 2:23
    }
}

fn <impl at ui/deriving/deriving-cmp-generic-tuple-struct.rs:2:25: 2:35>::partial_cmp(_1: &TS<T>, _2: &TS<T>) -> Option<std::cmp::Ordering> {
    debug self => _1;                    // in scope 0 at ui/deriving/deriving-cmp-generic-tuple-struct.rs:2:25: 2:35
    debug other => _2;                   // in scope 0 at ui/deriving/deriving-cmp-generic-tuple-struct.rs:2:25: 2:35
    let mut _0: std::option::Option<std::cmp::Ordering>; // return place in scope 0 at ui/deriving/deriving-cmp-generic-tuple-struct.rs:2:25: 2:35
    let mut _3: std::option::Option<std::cmp::Ordering>; // in scope 0 at ui/deriving/deriving-cmp-generic-tuple-struct.rs:3:14: 3:15
    let mut _4: &T;                      // in scope 0 at ui/deriving/deriving-cmp-generic-tuple-struct.rs:3:14: 3:15
    let _5: &T;                          // in scope 0 at ui/deriving/deriving-cmp-generic-tuple-struct.rs:3:14: 3:15
    let mut _6: &T;                      // in scope 0 at ui/deriving/deriving-cmp-generic-tuple-struct.rs:3:14: 3:15
    let _7: &T;                          // in scope 0 at ui/deriving/deriving-cmp-generic-tuple-struct.rs:3:14: 3:15
    let mut _8: i8;                      // in scope 0 at ui/deriving/deriving-cmp-generic-tuple-struct.rs:3:14: 3:15
    let mut _9: isize;                   // in scope 0 at ui/deriving/deriving-cmp-generic-tuple-struct.rs:3:14: 3:15
    let mut _10: &T;                     // in scope 0 at ui/deriving/deriving-cmp-generic-tuple-struct.rs:3:16: 3:17
    let _11: &T;                         // in scope 0 at ui/deriving/deriving-cmp-generic-tuple-struct.rs:3:16: 3:17
    let mut _12: &T;                     // in scope 0 at ui/deriving/deriving-cmp-generic-tuple-struct.rs:3:16: 3:17
    let _13: &T;                         // in scope 0 at ui/deriving/deriving-cmp-generic-tuple-struct.rs:3:16: 3:17
    let _14: std::option::Option<std::cmp::Ordering>; // in scope 0 at ui/deriving/deriving-cmp-generic-tuple-struct.rs:3:14: 3:15
    scope 1 {
        debug cmp => _14;                // in scope 1 at ui/deriving/deriving-cmp-generic-tuple-struct.rs:3:14: 3:15
    }

    bb0: {
        _5 = &((*_1).0: T);              // scope 0 at ui/deriving/deriving-cmp-generic-tuple-struct.rs:3:14: 3:15
        _4 = _5;                         // scope 0 at ui/deriving/deriving-cmp-generic-tuple-struct.rs:3:14: 3:15
        _7 = &((*_2).0: T);              // scope 0 at ui/deriving/deriving-cmp-generic-tuple-struct.rs:3:14: 3:15
        _6 = _7;                         // scope 0 at ui/deriving/deriving-cmp-generic-tuple-struct.rs:3:14: 3:15
        _3 = <T as PartialOrd>::partial_cmp(move _4, move _6) -> bb1; // scope 0 at ui/deriving/deriving-cmp-generic-tuple-struct.rs:3:14: 3:15
                                         // mir::Constant
                                         // + span: ui/deriving/deriving-cmp-generic-tuple-struct.rs:3:14: 3:15
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a T, &'b T) -> Option<std::cmp::Ordering> {<T as PartialOrd>::partial_cmp}, val: Value(<ZST>) }
    }

    bb1: {
        _9 = discriminant(_3);           // scope 0 at ui/deriving/deriving-cmp-generic-tuple-struct.rs:3:14: 3:15
        switchInt(move _9) -> [1: bb3, otherwise: bb2]; // scope 0 at ui/deriving/deriving-cmp-generic-tuple-struct.rs:3:14: 3:15
    }

    bb2: {
        _14 = _3;                        // scope 0 at ui/deriving/deriving-cmp-generic-tuple-struct.rs:3:14: 3:15
        _0 = _14;                        // scope 1 at ui/deriving/deriving-cmp-generic-tuple-struct.rs:3:14: 3:15
        goto -> bb5;                     // scope 0 at ui/deriving/deriving-cmp-generic-tuple-struct.rs:3:14: 3:15
    }

    bb3: {
        _8 = discriminant(((_3 as Some).0: std::cmp::Ordering)); // scope 0 at ui/deriving/deriving-cmp-generic-tuple-struct.rs:3:14: 3:15
        switchInt(move _8) -> [0: bb4, otherwise: bb2]; // scope 0 at ui/deriving/deriving-cmp-generic-tuple-struct.rs:3:14: 3:15
    }

    bb4: {
        _11 = &((*_1).1: T);             // scope 0 at ui/deriving/deriving-cmp-generic-tuple-struct.rs:3:16: 3:17
        _10 = _11;                       // scope 0 at ui/deriving/deriving-cmp-generic-tuple-struct.rs:3:16: 3:17
        _13 = &((*_2).1: T);             // scope 0 at ui/deriving/deriving-cmp-generic-tuple-struct.rs:3:16: 3:17
        _12 = _13;                       // scope 0 at ui/deriving/deriving-cmp-generic-tuple-struct.rs:3:16: 3:17
        _0 = <T as PartialOrd>::partial_cmp(move _10, move _12) -> bb5; // scope 0 at ui/deriving/deriving-cmp-generic-tuple-struct.rs:3:16: 3:17
                                         // mir::Constant
                                         // + span: ui/deriving/deriving-cmp-generic-tuple-struct.rs:3:16: 3:17
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a T, &'b T) -> Option<std::cmp::Ordering> {<T as PartialOrd>::partial_cmp}, val: Value(<ZST>) }
    }

    bb5: {
        return;                          // scope 0 at ui/deriving/deriving-cmp-generic-tuple-struct.rs:2:35: 2:35
    }
}

fn <impl at ui/deriving/deriving-cmp-generic-tuple-struct.rs:2:37: 2:40>::cmp(_1: &TS<T>, _2: &TS<T>) -> std::cmp::Ordering {
    debug self => _1;                    // in scope 0 at ui/deriving/deriving-cmp-generic-tuple-struct.rs:2:37: 2:40
    debug other => _2;                   // in scope 0 at ui/deriving/deriving-cmp-generic-tuple-struct.rs:2:37: 2:40
    let mut _0: std::cmp::Ordering;      // return place in scope 0 at ui/deriving/deriving-cmp-generic-tuple-struct.rs:2:37: 2:40
    let mut _3: std::cmp::Ordering;      // in scope 0 at ui/deriving/deriving-cmp-generic-tuple-struct.rs:3:14: 3:15
    let mut _4: &T;                      // in scope 0 at ui/deriving/deriving-cmp-generic-tuple-struct.rs:3:14: 3:15
    let _5: &T;                          // in scope 0 at ui/deriving/deriving-cmp-generic-tuple-struct.rs:3:14: 3:15
    let mut _6: &T;                      // in scope 0 at ui/deriving/deriving-cmp-generic-tuple-struct.rs:3:14: 3:15
    let _7: &T;                          // in scope 0 at ui/deriving/deriving-cmp-generic-tuple-struct.rs:3:14: 3:15
    let mut _8: i8;                      // in scope 0 at ui/deriving/deriving-cmp-generic-tuple-struct.rs:3:14: 3:15
    let mut _9: &T;                      // in scope 0 at ui/deriving/deriving-cmp-generic-tuple-struct.rs:3:16: 3:17
    let _10: &T;                         // in scope 0 at ui/deriving/deriving-cmp-generic-tuple-struct.rs:3:16: 3:17
    let mut _11: &T;                     // in scope 0 at ui/deriving/deriving-cmp-generic-tuple-struct.rs:3:16: 3:17
    let _12: &T;                         // in scope 0 at ui/deriving/deriving-cmp-generic-tuple-struct.rs:3:16: 3:17
    let _13: std::cmp::Ordering;         // in scope 0 at ui/deriving/deriving-cmp-generic-tuple-struct.rs:3:14: 3:15
    scope 1 {
        debug cmp => _13;                // in scope 1 at ui/deriving/deriving-cmp-generic-tuple-struct.rs:3:14: 3:15
    }

    bb0: {
        _5 = &((*_1).0: T);              // scope 0 at ui/deriving/deriving-cmp-generic-tuple-struct.rs:3:14: 3:15
        _4 = _5;                         // scope 0 at ui/deriving/deriving-cmp-generic-tuple-struct.rs:3:14: 3:15
        _7 = &((*_2).0: T);              // scope 0 at ui/deriving/deriving-cmp-generic-tuple-struct.rs:3:14: 3:15
        _6 = _7;                         // scope 0 at ui/deriving/deriving-cmp-generic-tuple-struct.rs:3:14: 3:15
        _3 = <T as Ord>::cmp(move _4, move _6) -> bb1; // scope 0 at ui/deriving/deriving-cmp-generic-tuple-struct.rs:3:14: 3:15
                                         // mir::Constant
                                         // + span: ui/deriving/deriving-cmp-generic-tuple-struct.rs:3:14: 3:15
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a T, &'b T) -> std::cmp::Ordering {<T as Ord>::cmp}, val: Value(<ZST>) }
    }

    bb1: {
        _8 = discriminant(_3);           // scope 0 at ui/deriving/deriving-cmp-generic-tuple-struct.rs:3:14: 3:15
        switchInt(move _8) -> [0: bb3, otherwise: bb2]; // scope 0 at ui/deriving/deriving-cmp-generic-tuple-struct.rs:3:14: 3:15
    }

    bb2: {
        _13 = _3;                        // scope 0 at ui/deriving/deriving-cmp-generic-tuple-struct.rs:3:14: 3:15
        _0 = _13;                        // scope 1 at ui/deriving/deriving-cmp-generic-tuple-struct.rs:3:14: 3:15
        goto -> bb4;                     // scope 0 at ui/deriving/deriving-cmp-generic-tuple-struct.rs:3:14: 3:15
    }

    bb3: {
        _10 = &((*_1).1: T);             // scope 0 at ui/deriving/deriving-cmp-generic-tuple-struct.rs:3:16: 3:17
        _9 = _10;                        // scope 0 at ui/deriving/deriving-cmp-generic-tuple-struct.rs:3:16: 3:17
        _12 = &((*_2).1: T);             // scope 0 at ui/deriving/deriving-cmp-generic-tuple-struct.rs:3:16: 3:17
        _11 = _12;                       // scope 0 at ui/deriving/deriving-cmp-generic-tuple-struct.rs:3:16: 3:17
        _0 = <T as Ord>::cmp(move _9, move _11) -> bb4; // scope 0 at ui/deriving/deriving-cmp-generic-tuple-struct.rs:3:16: 3:17
                                         // mir::Constant
                                         // + span: ui/deriving/deriving-cmp-generic-tuple-struct.rs:3:16: 3:17
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a T, &'b T) -> std::cmp::Ordering {<T as Ord>::cmp}, val: Value(<ZST>) }
    }

    bb4: {
        return;                          // scope 0 at ui/deriving/deriving-cmp-generic-tuple-struct.rs:2:40: 2:40
    }
}

fn main() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/deriving/deriving-cmp-generic-tuple-struct.rs:6:15: 6:15
    let _1: TS<i32>;                     // in scope 0 at ui/deriving/deriving-cmp-generic-tuple-struct.rs:7:9: 7:12
    let mut _4: TS<i32>;                 // in scope 0 at ui/deriving/deriving-cmp-generic-tuple-struct.rs:11:16: 11:19
    let mut _5: TS<i32>;                 // in scope 0 at ui/deriving/deriving-cmp-generic-tuple-struct.rs:11:21: 11:24
    let mut _6: std::iter::Enumerate<std::slice::Iter<'_, TS<i32>>>; // in scope 0 at ui/deriving/deriving-cmp-generic-tuple-struct.rs:13:21: 13:43
    let mut _7: std::iter::Enumerate<std::slice::Iter<'_, TS<i32>>>; // in scope 0 at ui/deriving/deriving-cmp-generic-tuple-struct.rs:13:21: 13:43
    let mut _8: std::slice::Iter<'_, TS<i32>>; // in scope 0 at ui/deriving/deriving-cmp-generic-tuple-struct.rs:13:21: 13:31
    let mut _9: &[TS<i32>];              // in scope 0 at ui/deriving/deriving-cmp-generic-tuple-struct.rs:13:21: 13:31
    let mut _10: &[TS<i32>; 2];          // in scope 0 at ui/deriving/deriving-cmp-generic-tuple-struct.rs:13:21: 13:31
    let mut _12: std::option::Option<(usize, &TS<i32>)>; // in scope 0 at ui/deriving/deriving-cmp-generic-tuple-struct.rs:13:21: 13:43
    let mut _13: &mut std::iter::Enumerate<std::slice::Iter<'_, TS<i32>>>; // in scope 0 at ui/deriving/deriving-cmp-generic-tuple-struct.rs:13:21: 13:43
    let mut _14: &mut std::iter::Enumerate<std::slice::Iter<'_, TS<i32>>>; // in scope 0 at ui/deriving/deriving-cmp-generic-tuple-struct.rs:13:21: 13:43
    let mut _15: isize;                  // in scope 0 at ui/deriving/deriving-cmp-generic-tuple-struct.rs:13:5: 37:6
    let mut _18: std::iter::Enumerate<std::slice::Iter<'_, TS<i32>>>; // in scope 0 at ui/deriving/deriving-cmp-generic-tuple-struct.rs:14:25: 14:47
    let mut _19: std::iter::Enumerate<std::slice::Iter<'_, TS<i32>>>; // in scope 0 at ui/deriving/deriving-cmp-generic-tuple-struct.rs:14:25: 14:47
    let mut _20: std::slice::Iter<'_, TS<i32>>; // in scope 0 at ui/deriving/deriving-cmp-generic-tuple-struct.rs:14:25: 14:35
    let mut _21: &[TS<i32>];             // in scope 0 at ui/deriving/deriving-cmp-generic-tuple-struct.rs:14:25: 14:35
    let mut _22: &[TS<i32>; 2];          // in scope 0 at ui/deriving/deriving-cmp-generic-tuple-struct.rs:14:25: 14:35
    let mut _24: std::option::Option<(usize, &TS<i32>)>; // in scope 0 at ui/deriving/deriving-cmp-generic-tuple-struct.rs:14:25: 14:47
    let mut _25: &mut std::iter::Enumerate<std::slice::Iter<'_, TS<i32>>>; // in scope 0 at ui/deriving/deriving-cmp-generic-tuple-struct.rs:14:25: 14:47
    let mut _26: &mut std::iter::Enumerate<std::slice::Iter<'_, TS<i32>>>; // in scope 0 at ui/deriving/deriving-cmp-generic-tuple-struct.rs:14:25: 14:47
    let mut _27: isize;                  // in scope 0 at ui/deriving/deriving-cmp-generic-tuple-struct.rs:14:9: 36:10
    let mut _31: &usize;                 // in scope 0 at ui/deriving/deriving-cmp-generic-tuple-struct.rs:15:23: 15:32
    let mut _32: &usize;                 // in scope 0 at ui/deriving/deriving-cmp-generic-tuple-struct.rs:15:29: 15:31
    let _33: &usize;                     // in scope 0 at ui/deriving/deriving-cmp-generic-tuple-struct.rs:15:29: 15:31
    let mut _35: usize;                  // in scope 0 at ui/deriving/deriving-cmp-generic-tuple-struct.rs:17:22: 17:23
    let mut _36: usize;                  // in scope 0 at ui/deriving/deriving-cmp-generic-tuple-struct.rs:17:27: 17:28
    let mut _38: usize;                  // in scope 0 at ui/deriving/deriving-cmp-generic-tuple-struct.rs:18:22: 18:23
    let mut _39: usize;                  // in scope 0 at ui/deriving/deriving-cmp-generic-tuple-struct.rs:18:26: 18:27
    let mut _41: usize;                  // in scope 0 at ui/deriving/deriving-cmp-generic-tuple-struct.rs:19:22: 19:23
    let mut _42: usize;                  // in scope 0 at ui/deriving/deriving-cmp-generic-tuple-struct.rs:19:27: 19:28
    let mut _44: usize;                  // in scope 0 at ui/deriving/deriving-cmp-generic-tuple-struct.rs:20:22: 20:23
    let mut _45: usize;                  // in scope 0 at ui/deriving/deriving-cmp-generic-tuple-struct.rs:20:26: 20:27
    let mut _47: usize;                  // in scope 0 at ui/deriving/deriving-cmp-generic-tuple-struct.rs:21:22: 21:23
    let mut _48: usize;                  // in scope 0 at ui/deriving/deriving-cmp-generic-tuple-struct.rs:21:27: 21:28
    let mut _49: (&bool, &bool);         // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _50: &bool;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let _51: bool;                       // in scope 0 at ui/deriving/deriving-cmp-generic-tuple-struct.rs:24:24: 24:36
    let mut _52: &TS<i32>;               // in scope 0 at ui/deriving/deriving-cmp-generic-tuple-struct.rs:24:24: 24:28
    let mut _53: &TS<i32>;               // in scope 0 at ui/deriving/deriving-cmp-generic-tuple-struct.rs:24:32: 24:36
    let mut _54: &bool;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _57: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    let mut _58: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
    let mut _59: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
    let mut _60: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
    let _62: !;                          // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
    let mut _63: core::panicking::AssertKind; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
    let mut _64: &bool;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let _65: &bool;                      // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let mut _66: &bool;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let _67: &bool;                      // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let mut _68: std::option::Option<std::fmt::Arguments<'_>>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
    let mut _69: (&bool, &bool);         // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _70: &bool;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let _71: bool;                       // in scope 0 at ui/deriving/deriving-cmp-generic-tuple-struct.rs:25:24: 25:36
    let mut _72: &TS<i32>;               // in scope 0 at ui/deriving/deriving-cmp-generic-tuple-struct.rs:25:24: 25:28
    let mut _73: &TS<i32>;               // in scope 0 at ui/deriving/deriving-cmp-generic-tuple-struct.rs:25:32: 25:36
    let mut _74: &bool;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let _75: bool;                       // in scope 0 at ui/deriving/deriving-cmp-generic-tuple-struct.rs:25:38: 25:41
    let mut _76: bool;                   // in scope 0 at ui/deriving/deriving-cmp-generic-tuple-struct.rs:25:39: 25:41
    let mut _79: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    let mut _80: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
    let mut _81: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
    let mut _82: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
    let _84: !;                          // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
    let mut _85: core::panicking::AssertKind; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
    let mut _86: &bool;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let _87: &bool;                      // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let mut _88: &bool;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let _89: &bool;                      // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let mut _90: std::option::Option<std::fmt::Arguments<'_>>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
    let mut _91: (&bool, &bool);         // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _92: &bool;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let _93: bool;                       // in scope 0 at ui/deriving/deriving-cmp-generic-tuple-struct.rs:28:24: 28:35
    let mut _94: &TS<i32>;               // in scope 0 at ui/deriving/deriving-cmp-generic-tuple-struct.rs:28:24: 28:28
    let mut _95: &TS<i32>;               // in scope 0 at ui/deriving/deriving-cmp-generic-tuple-struct.rs:28:31: 28:35
    let mut _96: &bool;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _99: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    let mut _100: bool;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
    let mut _101: bool;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
    let mut _102: bool;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
    let _104: !;                         // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
    let mut _105: core::panicking::AssertKind; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
    let mut _106: &bool;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let _107: &bool;                     // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let mut _108: &bool;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let _109: &bool;                     // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let mut _110: std::option::Option<std::fmt::Arguments<'_>>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
    let mut _111: (&bool, &bool);        // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _112: &bool;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let _113: bool;                      // in scope 0 at ui/deriving/deriving-cmp-generic-tuple-struct.rs:29:24: 29:35
    let mut _114: &TS<i32>;              // in scope 0 at ui/deriving/deriving-cmp-generic-tuple-struct.rs:29:24: 29:28
    let mut _115: &TS<i32>;              // in scope 0 at ui/deriving/deriving-cmp-generic-tuple-struct.rs:29:31: 29:35
    let mut _116: &bool;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _119: bool;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    let mut _120: bool;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
    let mut _121: bool;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
    let mut _122: bool;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
    let _124: !;                         // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
    let mut _125: core::panicking::AssertKind; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
    let mut _126: &bool;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let _127: &bool;                     // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let mut _128: &bool;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let _129: &bool;                     // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let mut _130: std::option::Option<std::fmt::Arguments<'_>>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
    let mut _131: (&bool, &bool);        // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _132: &bool;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let _133: bool;                      // in scope 0 at ui/deriving/deriving-cmp-generic-tuple-struct.rs:31:24: 31:36
    let mut _134: &TS<i32>;              // in scope 0 at ui/deriving/deriving-cmp-generic-tuple-struct.rs:31:24: 31:28
    let mut _135: &TS<i32>;              // in scope 0 at ui/deriving/deriving-cmp-generic-tuple-struct.rs:31:32: 31:36
    let mut _136: &bool;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _139: bool;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    let mut _140: bool;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
    let mut _141: bool;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
    let mut _142: bool;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
    let _144: !;                         // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
    let mut _145: core::panicking::AssertKind; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
    let mut _146: &bool;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let _147: &bool;                     // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let mut _148: &bool;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let _149: &bool;                     // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let mut _150: std::option::Option<std::fmt::Arguments<'_>>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
    let mut _151: (&bool, &bool);        // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _152: &bool;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let _153: bool;                      // in scope 0 at ui/deriving/deriving-cmp-generic-tuple-struct.rs:32:24: 32:36
    let mut _154: &TS<i32>;              // in scope 0 at ui/deriving/deriving-cmp-generic-tuple-struct.rs:32:24: 32:28
    let mut _155: &TS<i32>;              // in scope 0 at ui/deriving/deriving-cmp-generic-tuple-struct.rs:32:32: 32:36
    let mut _156: &bool;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _159: bool;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    let mut _160: bool;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
    let mut _161: bool;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
    let mut _162: bool;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
    let _164: !;                         // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
    let mut _165: core::panicking::AssertKind; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
    let mut _166: &bool;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let _167: &bool;                     // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let mut _168: &bool;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let _169: &bool;                     // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let mut _170: std::option::Option<std::fmt::Arguments<'_>>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
    let mut _171: (&std::cmp::Ordering, &std::cmp::Ordering); // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _172: &std::cmp::Ordering;   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let _173: std::cmp::Ordering;        // in scope 0 at ui/deriving/deriving-cmp-generic-tuple-struct.rs:35:24: 35:36
    let mut _174: &TS<i32>;              // in scope 0 at ui/deriving/deriving-cmp-generic-tuple-struct.rs:35:24: 35:36
    let mut _175: &TS<i32>;              // in scope 0 at ui/deriving/deriving-cmp-generic-tuple-struct.rs:35:32: 35:35
    let mut _176: &std::cmp::Ordering;   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _179: bool;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    let mut _180: bool;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
    let mut _181: &std::cmp::Ordering;   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
    let mut _182: &std::cmp::Ordering;   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
    let _184: !;                         // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
    let mut _185: core::panicking::AssertKind; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
    let mut _186: &std::cmp::Ordering;   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let _187: &std::cmp::Ordering;       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let mut _188: &std::cmp::Ordering;   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let _189: &std::cmp::Ordering;       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let mut _190: std::option::Option<std::fmt::Arguments<'_>>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
    scope 1 {
        debug ts1 => _1;                 // in scope 1 at ui/deriving/deriving-cmp-generic-tuple-struct.rs:7:9: 7:12
        let _2: TS<i32>;                 // in scope 1 at ui/deriving/deriving-cmp-generic-tuple-struct.rs:8:9: 8:12
        scope 2 {
            debug ts2 => _2;             // in scope 2 at ui/deriving/deriving-cmp-generic-tuple-struct.rs:8:9: 8:12
            let _3: [TS<i32>; 2];        // in scope 2 at ui/deriving/deriving-cmp-generic-tuple-struct.rs:11:9: 11:12
            scope 3 {
                debug tss => _3;         // in scope 3 at ui/deriving/deriving-cmp-generic-tuple-struct.rs:11:9: 11:12
                let mut _11: std::iter::Enumerate<std::slice::Iter<'_, TS<i32>>>; // in scope 3 at ui/deriving/deriving-cmp-generic-tuple-struct.rs:13:21: 13:43
                scope 4 {
                    debug iter => _11;   // in scope 4 at ui/deriving/deriving-cmp-generic-tuple-struct.rs:13:21: 13:43
                    let _16: usize;      // in scope 4 at ui/deriving/deriving-cmp-generic-tuple-struct.rs:13:10: 13:11
                    let _17: &TS<i32>;   // in scope 4 at ui/deriving/deriving-cmp-generic-tuple-struct.rs:13:13: 13:16
                    scope 5 {
                        debug i => _16;  // in scope 5 at ui/deriving/deriving-cmp-generic-tuple-struct.rs:13:10: 13:11
                        debug ts1 => _17; // in scope 5 at ui/deriving/deriving-cmp-generic-tuple-struct.rs:13:13: 13:16
                        let mut _23: std::iter::Enumerate<std::slice::Iter<'_, TS<i32>>>; // in scope 5 at ui/deriving/deriving-cmp-generic-tuple-struct.rs:14:25: 14:47
                        scope 6 {
                            debug iter => _23; // in scope 6 at ui/deriving/deriving-cmp-generic-tuple-struct.rs:14:25: 14:47
                            let _28: usize; // in scope 6 at ui/deriving/deriving-cmp-generic-tuple-struct.rs:14:14: 14:15
                            let _29: &TS<i32>; // in scope 6 at ui/deriving/deriving-cmp-generic-tuple-struct.rs:14:17: 14:20
                            scope 7 {
                                debug j => _28; // in scope 7 at ui/deriving/deriving-cmp-generic-tuple-struct.rs:14:14: 14:15
                                debug ts2 => _29; // in scope 7 at ui/deriving/deriving-cmp-generic-tuple-struct.rs:14:17: 14:20
                                let _30: std::cmp::Ordering; // in scope 7 at ui/deriving/deriving-cmp-generic-tuple-struct.rs:15:17: 15:20
                                scope 8 {
                                    debug ord => _30; // in scope 8 at ui/deriving/deriving-cmp-generic-tuple-struct.rs:15:17: 15:20
                                    let _34: bool; // in scope 8 at ui/deriving/deriving-cmp-generic-tuple-struct.rs:17:17: 17:19
                                    scope 9 {
                                        debug eq => _34; // in scope 9 at ui/deriving/deriving-cmp-generic-tuple-struct.rs:17:17: 17:19
                                        let _37: bool; // in scope 9 at ui/deriving/deriving-cmp-generic-tuple-struct.rs:18:17: 18:19
                                        scope 10 {
                                            debug lt => _37; // in scope 10 at ui/deriving/deriving-cmp-generic-tuple-struct.rs:18:17: 18:19
                                            let _40: bool; // in scope 10 at ui/deriving/deriving-cmp-generic-tuple-struct.rs:19:17: 19:19
                                            scope 11 {
                                                debug le => _40; // in scope 11 at ui/deriving/deriving-cmp-generic-tuple-struct.rs:19:17: 19:19
                                                let _43: bool; // in scope 11 at ui/deriving/deriving-cmp-generic-tuple-struct.rs:20:17: 20:19
                                                scope 12 {
                                                    debug gt => _43; // in scope 12 at ui/deriving/deriving-cmp-generic-tuple-struct.rs:20:17: 20:19
                                                    let _46: bool; // in scope 12 at ui/deriving/deriving-cmp-generic-tuple-struct.rs:21:17: 21:19
                                                    scope 13 {
                                                        debug ge => _46; // in scope 13 at ui/deriving/deriving-cmp-generic-tuple-struct.rs:21:17: 21:19
                                                        let _55: &bool; // in scope 13 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
                                                        let _56: &bool; // in scope 13 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
                                                        let _77: &bool; // in scope 13 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
                                                        let _78: &bool; // in scope 13 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
                                                        let _97: &bool; // in scope 13 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
                                                        let _98: &bool; // in scope 13 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
                                                        let _117: &bool; // in scope 13 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
                                                        let _118: &bool; // in scope 13 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
                                                        let _137: &bool; // in scope 13 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
                                                        let _138: &bool; // in scope 13 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
                                                        let _157: &bool; // in scope 13 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
                                                        let _158: &bool; // in scope 13 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
                                                        let _177: &std::cmp::Ordering; // in scope 13 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
                                                        let _178: &std::cmp::Ordering; // in scope 13 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
                                                        scope 14 {
                                                            debug left_val => _55; // in scope 14 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
                                                            debug right_val => _56; // in scope 14 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
                                                            let _61: core::panicking::AssertKind; // in scope 14 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                                                            scope 15 {
                                                                debug kind => _61; // in scope 15 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                                                            }
                                                        }
                                                        scope 16 {
                                                            debug left_val => _77; // in scope 16 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
                                                            debug right_val => _78; // in scope 16 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
                                                            let _83: core::panicking::AssertKind; // in scope 16 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                                                            scope 17 {
                                                                debug kind => _83; // in scope 17 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                                                            }
                                                        }
                                                        scope 18 {
                                                            debug left_val => _97; // in scope 18 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
                                                            debug right_val => _98; // in scope 18 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
                                                            let _103: core::panicking::AssertKind; // in scope 18 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                                                            scope 19 {
                                                                debug kind => _103; // in scope 19 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                                                            }
                                                        }
                                                        scope 20 {
                                                            debug left_val => _117; // in scope 20 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
                                                            debug right_val => _118; // in scope 20 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
                                                            let _123: core::panicking::AssertKind; // in scope 20 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                                                            scope 21 {
                                                                debug kind => _123; // in scope 21 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                                                            }
                                                        }
                                                        scope 22 {
                                                            debug left_val => _137; // in scope 22 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
                                                            debug right_val => _138; // in scope 22 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
                                                            let _143: core::panicking::AssertKind; // in scope 22 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                                                            scope 23 {
                                                                debug kind => _143; // in scope 23 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                                                            }
                                                        }
                                                        scope 24 {
                                                            debug left_val => _157; // in scope 24 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
                                                            debug right_val => _158; // in scope 24 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
                                                            let _163: core::panicking::AssertKind; // in scope 24 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                                                            scope 25 {
                                                                debug kind => _163; // in scope 25 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                                                            }
                                                        }
                                                        scope 26 {
                                                            debug left_val => _177; // in scope 26 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
                                                            debug right_val => _178; // in scope 26 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
                                                            let _183: core::panicking::AssertKind; // in scope 26 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                                                            scope 27 {
                                                                debug kind => _183; // in scope 27 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    }

    bb0: {
        _1 = TS::<i32>(const 1_i32, const 1_i32); // scope 0 at ui/deriving/deriving-cmp-generic-tuple-struct.rs:7:15: 7:23
        _2 = TS::<i32>(const 1_i32, const 2_i32); // scope 1 at ui/deriving/deriving-cmp-generic-tuple-struct.rs:8:15: 8:23
        _4 = move _1;                    // scope 2 at ui/deriving/deriving-cmp-generic-tuple-struct.rs:11:16: 11:19
        _5 = move _2;                    // scope 2 at ui/deriving/deriving-cmp-generic-tuple-struct.rs:11:21: 11:24
        _3 = [move _4, move _5];         // scope 2 at ui/deriving/deriving-cmp-generic-tuple-struct.rs:11:15: 11:25
        _10 = &_3;                       // scope 3 at ui/deriving/deriving-cmp-generic-tuple-struct.rs:13:21: 13:31
        _9 = move _10 as &[TS<i32>] (Pointer(Unsize)); // scope 3 at ui/deriving/deriving-cmp-generic-tuple-struct.rs:13:21: 13:31
        _8 = core::slice::<impl [TS<i32>]>::iter(move _9) -> bb1; // scope 3 at ui/deriving/deriving-cmp-generic-tuple-struct.rs:13:21: 13:31
                                         // mir::Constant
                                         // + span: ui/deriving/deriving-cmp-generic-tuple-struct.rs:13:25: 13:29
                                         // + literal: Const { ty: for<'a> fn(&'a [TS<i32>]) -> std::slice::Iter<'a, TS<i32>> {core::slice::<impl [TS<i32>]>::iter}, val: Value(<ZST>) }
    }

    bb1: {
        _7 = <std::slice::Iter<'_, TS<i32>> as Iterator>::enumerate(move _8) -> bb2; // scope 3 at ui/deriving/deriving-cmp-generic-tuple-struct.rs:13:21: 13:43
                                         // mir::Constant
                                         // + span: ui/deriving/deriving-cmp-generic-tuple-struct.rs:13:32: 13:41
                                         // + literal: Const { ty: fn(std::slice::Iter<'_, TS<i32>>) -> Enumerate<std::slice::Iter<'_, TS<i32>>> {<std::slice::Iter<'_, TS<i32>> as Iterator>::enumerate}, val: Value(<ZST>) }
    }

    bb2: {
        _6 = <Enumerate<std::slice::Iter<'_, TS<i32>>> as IntoIterator>::into_iter(move _7) -> bb3; // scope 3 at ui/deriving/deriving-cmp-generic-tuple-struct.rs:13:21: 13:43
                                         // mir::Constant
                                         // + span: ui/deriving/deriving-cmp-generic-tuple-struct.rs:13:21: 13:43
                                         // + literal: Const { ty: fn(Enumerate<std::slice::Iter<'_, TS<i32>>>) -> <Enumerate<std::slice::Iter<'_, TS<i32>>> as IntoIterator>::IntoIter {<Enumerate<std::slice::Iter<'_, TS<i32>>> as IntoIterator>::into_iter}, val: Value(<ZST>) }
    }

    bb3: {
        _11 = move _6;                   // scope 3 at ui/deriving/deriving-cmp-generic-tuple-struct.rs:13:21: 13:43
        goto -> bb4;                     // scope 4 at ui/deriving/deriving-cmp-generic-tuple-struct.rs:13:5: 37:6
    }

    bb4: {
        _14 = &mut _11;                  // scope 4 at ui/deriving/deriving-cmp-generic-tuple-struct.rs:13:21: 13:43
        _13 = &mut (*_14);               // scope 4 at ui/deriving/deriving-cmp-generic-tuple-struct.rs:13:21: 13:43
        _12 = <Enumerate<std::slice::Iter<'_, TS<i32>>> as Iterator>::next(move _13) -> bb5; // scope 4 at ui/deriving/deriving-cmp-generic-tuple-struct.rs:13:21: 13:43
                                         // mir::Constant
                                         // + span: ui/deriving/deriving-cmp-generic-tuple-struct.rs:13:21: 13:43
                                         // + literal: Const { ty: for<'a> fn(&'a mut Enumerate<std::slice::Iter<'_, TS<i32>>>) -> Option<<Enumerate<std::slice::Iter<'_, TS<i32>>> as Iterator>::Item> {<Enumerate<std::slice::Iter<'_, TS<i32>>> as Iterator>::next}, val: Value(<ZST>) }
    }

    bb5: {
        _15 = discriminant(_12);         // scope 4 at ui/deriving/deriving-cmp-generic-tuple-struct.rs:13:21: 13:43
        switchInt(move _15) -> [0: bb8, 1: bb6, otherwise: bb7]; // scope 4 at ui/deriving/deriving-cmp-generic-tuple-struct.rs:13:21: 13:43
    }

    bb6: {
        _16 = (((_12 as Some).0: (usize, &TS<i32>)).0: usize); // scope 4 at ui/deriving/deriving-cmp-generic-tuple-struct.rs:13:10: 13:11
        _17 = (((_12 as Some).0: (usize, &TS<i32>)).1: &TS<i32>); // scope 4 at ui/deriving/deriving-cmp-generic-tuple-struct.rs:13:13: 13:16
        _22 = &_3;                       // scope 5 at ui/deriving/deriving-cmp-generic-tuple-struct.rs:14:25: 14:35
        _21 = move _22 as &[TS<i32>] (Pointer(Unsize)); // scope 5 at ui/deriving/deriving-cmp-generic-tuple-struct.rs:14:25: 14:35
        _20 = core::slice::<impl [TS<i32>]>::iter(move _21) -> bb9; // scope 5 at ui/deriving/deriving-cmp-generic-tuple-struct.rs:14:25: 14:35
                                         // mir::Constant
                                         // + span: ui/deriving/deriving-cmp-generic-tuple-struct.rs:14:29: 14:33
                                         // + literal: Const { ty: for<'a> fn(&'a [TS<i32>]) -> std::slice::Iter<'a, TS<i32>> {core::slice::<impl [TS<i32>]>::iter}, val: Value(<ZST>) }
    }

    bb7: {
        unreachable;                     // scope 4 at ui/deriving/deriving-cmp-generic-tuple-struct.rs:13:21: 13:43
    }

    bb8: {
        return;                          // scope 0 at ui/deriving/deriving-cmp-generic-tuple-struct.rs:38:2: 38:2
    }

    bb9: {
        _19 = <std::slice::Iter<'_, TS<i32>> as Iterator>::enumerate(move _20) -> bb10; // scope 5 at ui/deriving/deriving-cmp-generic-tuple-struct.rs:14:25: 14:47
                                         // mir::Constant
                                         // + span: ui/deriving/deriving-cmp-generic-tuple-struct.rs:14:36: 14:45
                                         // + literal: Const { ty: fn(std::slice::Iter<'_, TS<i32>>) -> Enumerate<std::slice::Iter<'_, TS<i32>>> {<std::slice::Iter<'_, TS<i32>> as Iterator>::enumerate}, val: Value(<ZST>) }
    }

    bb10: {
        _18 = <Enumerate<std::slice::Iter<'_, TS<i32>>> as IntoIterator>::into_iter(move _19) -> bb11; // scope 5 at ui/deriving/deriving-cmp-generic-tuple-struct.rs:14:25: 14:47
                                         // mir::Constant
                                         // + span: ui/deriving/deriving-cmp-generic-tuple-struct.rs:14:25: 14:47
                                         // + literal: Const { ty: fn(Enumerate<std::slice::Iter<'_, TS<i32>>>) -> <Enumerate<std::slice::Iter<'_, TS<i32>>> as IntoIterator>::IntoIter {<Enumerate<std::slice::Iter<'_, TS<i32>>> as IntoIterator>::into_iter}, val: Value(<ZST>) }
    }

    bb11: {
        _23 = move _18;                  // scope 5 at ui/deriving/deriving-cmp-generic-tuple-struct.rs:14:25: 14:47
        goto -> bb12;                    // scope 6 at ui/deriving/deriving-cmp-generic-tuple-struct.rs:14:9: 36:10
    }

    bb12: {
        _26 = &mut _23;                  // scope 6 at ui/deriving/deriving-cmp-generic-tuple-struct.rs:14:25: 14:47
        _25 = &mut (*_26);               // scope 6 at ui/deriving/deriving-cmp-generic-tuple-struct.rs:14:25: 14:47
        _24 = <Enumerate<std::slice::Iter<'_, TS<i32>>> as Iterator>::next(move _25) -> bb13; // scope 6 at ui/deriving/deriving-cmp-generic-tuple-struct.rs:14:25: 14:47
                                         // mir::Constant
                                         // + span: ui/deriving/deriving-cmp-generic-tuple-struct.rs:14:25: 14:47
                                         // + literal: Const { ty: for<'a> fn(&'a mut Enumerate<std::slice::Iter<'_, TS<i32>>>) -> Option<<Enumerate<std::slice::Iter<'_, TS<i32>>> as Iterator>::Item> {<Enumerate<std::slice::Iter<'_, TS<i32>>> as Iterator>::next}, val: Value(<ZST>) }
    }

    bb13: {
        _27 = discriminant(_24);         // scope 6 at ui/deriving/deriving-cmp-generic-tuple-struct.rs:14:25: 14:47
        switchInt(move _27) -> [0: bb4, 1: bb14, otherwise: bb15]; // scope 6 at ui/deriving/deriving-cmp-generic-tuple-struct.rs:14:25: 14:47
    }

    bb14: {
        _28 = (((_24 as Some).0: (usize, &TS<i32>)).0: usize); // scope 6 at ui/deriving/deriving-cmp-generic-tuple-struct.rs:14:14: 14:15
        _29 = (((_24 as Some).0: (usize, &TS<i32>)).1: &TS<i32>); // scope 6 at ui/deriving/deriving-cmp-generic-tuple-struct.rs:14:17: 14:20
        _31 = &_16;                      // scope 7 at ui/deriving/deriving-cmp-generic-tuple-struct.rs:15:23: 15:32
        _33 = &_28;                      // scope 7 at ui/deriving/deriving-cmp-generic-tuple-struct.rs:15:29: 15:31
        _32 = _33;                       // scope 7 at ui/deriving/deriving-cmp-generic-tuple-struct.rs:15:29: 15:31
        _30 = <usize as Ord>::cmp(move _31, move _32) -> bb16; // scope 7 at ui/deriving/deriving-cmp-generic-tuple-struct.rs:15:23: 15:32
                                         // mir::Constant
                                         // + span: ui/deriving/deriving-cmp-generic-tuple-struct.rs:15:25: 15:28
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a usize, &'b usize) -> std::cmp::Ordering {<usize as Ord>::cmp}, val: Value(<ZST>) }
    }

    bb15: {
        unreachable;                     // scope 6 at ui/deriving/deriving-cmp-generic-tuple-struct.rs:14:25: 14:47
    }

    bb16: {
        _35 = _16;                       // scope 8 at ui/deriving/deriving-cmp-generic-tuple-struct.rs:17:22: 17:23
        _36 = _28;                       // scope 8 at ui/deriving/deriving-cmp-generic-tuple-struct.rs:17:27: 17:28
        _34 = Eq(move _35, move _36);    // scope 8 at ui/deriving/deriving-cmp-generic-tuple-struct.rs:17:22: 17:28
        _38 = _16;                       // scope 9 at ui/deriving/deriving-cmp-generic-tuple-struct.rs:18:22: 18:23
        _39 = _28;                       // scope 9 at ui/deriving/deriving-cmp-generic-tuple-struct.rs:18:26: 18:27
        _37 = Lt(move _38, move _39);    // scope 9 at ui/deriving/deriving-cmp-generic-tuple-struct.rs:18:22: 18:27
        _41 = _16;                       // scope 10 at ui/deriving/deriving-cmp-generic-tuple-struct.rs:19:22: 19:23
        _42 = _28;                       // scope 10 at ui/deriving/deriving-cmp-generic-tuple-struct.rs:19:27: 19:28
        _40 = Le(move _41, move _42);    // scope 10 at ui/deriving/deriving-cmp-generic-tuple-struct.rs:19:22: 19:28
        _44 = _16;                       // scope 11 at ui/deriving/deriving-cmp-generic-tuple-struct.rs:20:22: 20:23
        _45 = _28;                       // scope 11 at ui/deriving/deriving-cmp-generic-tuple-struct.rs:20:26: 20:27
        _43 = Gt(move _44, move _45);    // scope 11 at ui/deriving/deriving-cmp-generic-tuple-struct.rs:20:22: 20:27
        _47 = _16;                       // scope 12 at ui/deriving/deriving-cmp-generic-tuple-struct.rs:21:22: 21:23
        _48 = _28;                       // scope 12 at ui/deriving/deriving-cmp-generic-tuple-struct.rs:21:27: 21:28
        _46 = Ge(move _47, move _48);    // scope 12 at ui/deriving/deriving-cmp-generic-tuple-struct.rs:21:22: 21:28
        _52 = _17;                       // scope 13 at ui/deriving/deriving-cmp-generic-tuple-struct.rs:24:24: 24:28
        _53 = _29;                       // scope 13 at ui/deriving/deriving-cmp-generic-tuple-struct.rs:24:32: 24:36
        _51 = <TS<i32> as PartialEq>::eq(move _52, move _53) -> bb17; // scope 13 at ui/deriving/deriving-cmp-generic-tuple-struct.rs:24:24: 24:36
                                         // mir::Constant
                                         // + span: ui/deriving/deriving-cmp-generic-tuple-struct.rs:24:24: 24:36
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a TS<i32>, &'b TS<i32>) -> bool {<TS<i32> as PartialEq>::eq}, val: Value(<ZST>) }
    }

    bb17: {
        _50 = &_51;                      // scope 13 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _54 = &_34;                      // scope 13 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _49 = (move _50, move _54);      // scope 13 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _55 = (_49.0: &bool);            // scope 13 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _56 = (_49.1: &bool);            // scope 13 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _59 = (*_55);                    // scope 14 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
        _60 = (*_56);                    // scope 14 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
        _58 = Eq(move _59, move _60);    // scope 14 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
        _57 = Not(move _58);             // scope 14 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
        switchInt(move _57) -> [0: bb19, otherwise: bb18]; // scope 14 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    }

    bb18: {
        _61 = const core::panicking::AssertKind::Eq; // scope 14 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _63 = const core::panicking::AssertKind::Eq; // scope 15 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _65 = _55;                       // scope 15 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _64 = _65;                       // scope 15 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _67 = _56;                       // scope 15 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _66 = _67;                       // scope 15 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _68 = Option::<Arguments<'_>>::None; // scope 15 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
        _62 = core::panicking::assert_failed::<bool, bool>(move _63, move _64, move _66, move _68); // scope 15 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:53
                                         // + literal: Const { ty: for<'a, 'b, 'c> fn(core::panicking::AssertKind, &'a bool, &'b bool, Option<Arguments<'c>>) -> ! {core::panicking::assert_failed::<bool, bool>}, val: Value(<ZST>) }
    }

    bb19: {
        _72 = _17;                       // scope 13 at ui/deriving/deriving-cmp-generic-tuple-struct.rs:25:24: 25:28
        _73 = _29;                       // scope 13 at ui/deriving/deriving-cmp-generic-tuple-struct.rs:25:32: 25:36
        _71 = <TS<i32> as PartialEq>::ne(move _72, move _73) -> bb20; // scope 13 at ui/deriving/deriving-cmp-generic-tuple-struct.rs:25:24: 25:36
                                         // mir::Constant
                                         // + span: ui/deriving/deriving-cmp-generic-tuple-struct.rs:25:24: 25:36
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a TS<i32>, &'b TS<i32>) -> bool {<TS<i32> as PartialEq>::ne}, val: Value(<ZST>) }
    }

    bb20: {
        _70 = &_71;                      // scope 13 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _76 = _34;                       // scope 13 at ui/deriving/deriving-cmp-generic-tuple-struct.rs:25:39: 25:41
        _75 = Not(move _76);             // scope 13 at ui/deriving/deriving-cmp-generic-tuple-struct.rs:25:38: 25:41
        _74 = &_75;                      // scope 13 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _69 = (move _70, move _74);      // scope 13 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _77 = (_69.0: &bool);            // scope 13 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _78 = (_69.1: &bool);            // scope 13 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _81 = (*_77);                    // scope 16 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
        _82 = (*_78);                    // scope 16 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
        _80 = Eq(move _81, move _82);    // scope 16 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
        _79 = Not(move _80);             // scope 16 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
        switchInt(move _79) -> [0: bb22, otherwise: bb21]; // scope 16 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    }

    bb21: {
        _83 = const core::panicking::AssertKind::Eq; // scope 16 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _85 = const core::panicking::AssertKind::Eq; // scope 17 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _87 = _77;                       // scope 17 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _86 = _87;                       // scope 17 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _89 = _78;                       // scope 17 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _88 = _89;                       // scope 17 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _90 = Option::<Arguments<'_>>::None; // scope 17 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
        _84 = core::panicking::assert_failed::<bool, bool>(move _85, move _86, move _88, move _90); // scope 17 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:53
                                         // + literal: Const { ty: for<'a, 'b, 'c> fn(core::panicking::AssertKind, &'a bool, &'b bool, Option<Arguments<'c>>) -> ! {core::panicking::assert_failed::<bool, bool>}, val: Value(<ZST>) }
    }

    bb22: {
        _94 = _17;                       // scope 13 at ui/deriving/deriving-cmp-generic-tuple-struct.rs:28:24: 28:28
        _95 = _29;                       // scope 13 at ui/deriving/deriving-cmp-generic-tuple-struct.rs:28:31: 28:35
        _93 = <TS<i32> as PartialOrd>::lt(move _94, move _95) -> bb23; // scope 13 at ui/deriving/deriving-cmp-generic-tuple-struct.rs:28:24: 28:35
                                         // mir::Constant
                                         // + span: ui/deriving/deriving-cmp-generic-tuple-struct.rs:28:24: 28:35
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a TS<i32>, &'b TS<i32>) -> bool {<TS<i32> as PartialOrd>::lt}, val: Value(<ZST>) }
    }

    bb23: {
        _92 = &_93;                      // scope 13 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _96 = &_37;                      // scope 13 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _91 = (move _92, move _96);      // scope 13 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _97 = (_91.0: &bool);            // scope 13 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _98 = (_91.1: &bool);            // scope 13 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _101 = (*_97);                   // scope 18 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
        _102 = (*_98);                   // scope 18 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
        _100 = Eq(move _101, move _102); // scope 18 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
        _99 = Not(move _100);            // scope 18 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
        switchInt(move _99) -> [0: bb25, otherwise: bb24]; // scope 18 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    }

    bb24: {
        _103 = const core::panicking::AssertKind::Eq; // scope 18 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _105 = const core::panicking::AssertKind::Eq; // scope 19 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _107 = _97;                      // scope 19 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _106 = _107;                     // scope 19 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _109 = _98;                      // scope 19 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _108 = _109;                     // scope 19 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _110 = Option::<Arguments<'_>>::None; // scope 19 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
        _104 = core::panicking::assert_failed::<bool, bool>(move _105, move _106, move _108, move _110); // scope 19 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:53
                                         // + literal: Const { ty: for<'a, 'b, 'c> fn(core::panicking::AssertKind, &'a bool, &'b bool, Option<Arguments<'c>>) -> ! {core::panicking::assert_failed::<bool, bool>}, val: Value(<ZST>) }
    }

    bb25: {
        _114 = _17;                      // scope 13 at ui/deriving/deriving-cmp-generic-tuple-struct.rs:29:24: 29:28
        _115 = _29;                      // scope 13 at ui/deriving/deriving-cmp-generic-tuple-struct.rs:29:31: 29:35
        _113 = <TS<i32> as PartialOrd>::gt(move _114, move _115) -> bb26; // scope 13 at ui/deriving/deriving-cmp-generic-tuple-struct.rs:29:24: 29:35
                                         // mir::Constant
                                         // + span: ui/deriving/deriving-cmp-generic-tuple-struct.rs:29:24: 29:35
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a TS<i32>, &'b TS<i32>) -> bool {<TS<i32> as PartialOrd>::gt}, val: Value(<ZST>) }
    }

    bb26: {
        _112 = &_113;                    // scope 13 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _116 = &_43;                     // scope 13 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _111 = (move _112, move _116);   // scope 13 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _117 = (_111.0: &bool);          // scope 13 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _118 = (_111.1: &bool);          // scope 13 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _121 = (*_117);                  // scope 20 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
        _122 = (*_118);                  // scope 20 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
        _120 = Eq(move _121, move _122); // scope 20 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
        _119 = Not(move _120);           // scope 20 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
        switchInt(move _119) -> [0: bb28, otherwise: bb27]; // scope 20 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    }

    bb27: {
        _123 = const core::panicking::AssertKind::Eq; // scope 20 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _125 = const core::panicking::AssertKind::Eq; // scope 21 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _127 = _117;                     // scope 21 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _126 = _127;                     // scope 21 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _129 = _118;                     // scope 21 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _128 = _129;                     // scope 21 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _130 = Option::<Arguments<'_>>::None; // scope 21 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
        _124 = core::panicking::assert_failed::<bool, bool>(move _125, move _126, move _128, move _130); // scope 21 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:53
                                         // + literal: Const { ty: for<'a, 'b, 'c> fn(core::panicking::AssertKind, &'a bool, &'b bool, Option<Arguments<'c>>) -> ! {core::panicking::assert_failed::<bool, bool>}, val: Value(<ZST>) }
    }

    bb28: {
        _134 = _17;                      // scope 13 at ui/deriving/deriving-cmp-generic-tuple-struct.rs:31:24: 31:28
        _135 = _29;                      // scope 13 at ui/deriving/deriving-cmp-generic-tuple-struct.rs:31:32: 31:36
        _133 = <TS<i32> as PartialOrd>::le(move _134, move _135) -> bb29; // scope 13 at ui/deriving/deriving-cmp-generic-tuple-struct.rs:31:24: 31:36
                                         // mir::Constant
                                         // + span: ui/deriving/deriving-cmp-generic-tuple-struct.rs:31:24: 31:36
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a TS<i32>, &'b TS<i32>) -> bool {<TS<i32> as PartialOrd>::le}, val: Value(<ZST>) }
    }

    bb29: {
        _132 = &_133;                    // scope 13 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _136 = &_40;                     // scope 13 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _131 = (move _132, move _136);   // scope 13 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _137 = (_131.0: &bool);          // scope 13 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _138 = (_131.1: &bool);          // scope 13 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _141 = (*_137);                  // scope 22 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
        _142 = (*_138);                  // scope 22 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
        _140 = Eq(move _141, move _142); // scope 22 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
        _139 = Not(move _140);           // scope 22 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
        switchInt(move _139) -> [0: bb31, otherwise: bb30]; // scope 22 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    }

    bb30: {
        _143 = const core::panicking::AssertKind::Eq; // scope 22 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _145 = const core::panicking::AssertKind::Eq; // scope 23 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _147 = _137;                     // scope 23 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _146 = _147;                     // scope 23 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _149 = _138;                     // scope 23 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _148 = _149;                     // scope 23 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _150 = Option::<Arguments<'_>>::None; // scope 23 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
        _144 = core::panicking::assert_failed::<bool, bool>(move _145, move _146, move _148, move _150); // scope 23 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:53
                                         // + literal: Const { ty: for<'a, 'b, 'c> fn(core::panicking::AssertKind, &'a bool, &'b bool, Option<Arguments<'c>>) -> ! {core::panicking::assert_failed::<bool, bool>}, val: Value(<ZST>) }
    }

    bb31: {
        _154 = _17;                      // scope 13 at ui/deriving/deriving-cmp-generic-tuple-struct.rs:32:24: 32:28
        _155 = _29;                      // scope 13 at ui/deriving/deriving-cmp-generic-tuple-struct.rs:32:32: 32:36
        _153 = <TS<i32> as PartialOrd>::ge(move _154, move _155) -> bb32; // scope 13 at ui/deriving/deriving-cmp-generic-tuple-struct.rs:32:24: 32:36
                                         // mir::Constant
                                         // + span: ui/deriving/deriving-cmp-generic-tuple-struct.rs:32:24: 32:36
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a TS<i32>, &'b TS<i32>) -> bool {<TS<i32> as PartialOrd>::ge}, val: Value(<ZST>) }
    }

    bb32: {
        _152 = &_153;                    // scope 13 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _156 = &_46;                     // scope 13 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _151 = (move _152, move _156);   // scope 13 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _157 = (_151.0: &bool);          // scope 13 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _158 = (_151.1: &bool);          // scope 13 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _161 = (*_157);                  // scope 24 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
        _162 = (*_158);                  // scope 24 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
        _160 = Eq(move _161, move _162); // scope 24 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
        _159 = Not(move _160);           // scope 24 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
        switchInt(move _159) -> [0: bb34, otherwise: bb33]; // scope 24 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    }

    bb33: {
        _163 = const core::panicking::AssertKind::Eq; // scope 24 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _165 = const core::panicking::AssertKind::Eq; // scope 25 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _167 = _157;                     // scope 25 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _166 = _167;                     // scope 25 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _169 = _158;                     // scope 25 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _168 = _169;                     // scope 25 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _170 = Option::<Arguments<'_>>::None; // scope 25 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
        _164 = core::panicking::assert_failed::<bool, bool>(move _165, move _166, move _168, move _170); // scope 25 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:53
                                         // + literal: Const { ty: for<'a, 'b, 'c> fn(core::panicking::AssertKind, &'a bool, &'b bool, Option<Arguments<'c>>) -> ! {core::panicking::assert_failed::<bool, bool>}, val: Value(<ZST>) }
    }

    bb34: {
        _174 = _17;                      // scope 13 at ui/deriving/deriving-cmp-generic-tuple-struct.rs:35:24: 35:36
        _175 = _29;                      // scope 13 at ui/deriving/deriving-cmp-generic-tuple-struct.rs:35:32: 35:35
        _173 = <TS<i32> as Ord>::cmp(move _174, move _175) -> bb35; // scope 13 at ui/deriving/deriving-cmp-generic-tuple-struct.rs:35:24: 35:36
                                         // mir::Constant
                                         // + span: ui/deriving/deriving-cmp-generic-tuple-struct.rs:35:28: 35:31
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a TS<i32>, &'b TS<i32>) -> std::cmp::Ordering {<TS<i32> as Ord>::cmp}, val: Value(<ZST>) }
    }

    bb35: {
        _172 = &_173;                    // scope 13 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _176 = &_30;                     // scope 13 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _171 = (move _172, move _176);   // scope 13 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _177 = (_171.0: &std::cmp::Ordering); // scope 13 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _178 = (_171.1: &std::cmp::Ordering); // scope 13 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _181 = _177;                     // scope 26 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
        _182 = _178;                     // scope 26 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
        _180 = <std::cmp::Ordering as PartialEq>::eq(move _181, move _182) -> bb36; // scope 26 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a std::cmp::Ordering, &'b std::cmp::Ordering) -> bool {<std::cmp::Ordering as PartialEq>::eq}, val: Value(<ZST>) }
    }

    bb36: {
        _179 = Not(move _180);           // scope 26 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
        switchInt(move _179) -> [0: bb12, otherwise: bb37]; // scope 26 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    }

    bb37: {
        _183 = const core::panicking::AssertKind::Eq; // scope 26 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _185 = const core::panicking::AssertKind::Eq; // scope 27 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _187 = _177;                     // scope 27 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _186 = _187;                     // scope 27 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _189 = _178;                     // scope 27 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _188 = _189;                     // scope 27 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _190 = Option::<Arguments<'_>>::None; // scope 27 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
        _184 = core::panicking::assert_failed::<std::cmp::Ordering, std::cmp::Ordering>(move _185, move _186, move _188, move _190); // scope 27 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:53
                                         // + literal: Const { ty: for<'a, 'b, 'c> fn(core::panicking::AssertKind, &'a std::cmp::Ordering, &'b std::cmp::Ordering, Option<Arguments<'c>>) -> ! {core::panicking::assert_failed::<std::cmp::Ordering, std::cmp::Ordering>}, val: Value(<ZST>) }
    }
}

fn TS(_1: T, _2: T) -> TS<T> {
    let mut _0: TS<T>;                   // return place in scope 0 at ui/deriving/deriving-cmp-generic-tuple-struct.rs:3:1: 3:13

    bb0: {
        _0 = TS::<T>(move _1, move _2);  // scope 0 at ui/deriving/deriving-cmp-generic-tuple-struct.rs:3:1: 3:13
        return;                          // scope 0 at ui/deriving/deriving-cmp-generic-tuple-struct.rs:3:1: 3:13
    }
}

// MIR FOR CTFE
fn TS(_1: T, _2: T) -> TS<T> {
    let mut _0: TS<T>;                   // return place in scope 0 at ui/deriving/deriving-cmp-generic-tuple-struct.rs:3:1: 3:13

    bb0: {
        _0 = TS::<T>(move _1, move _2);  // scope 0 at ui/deriving/deriving-cmp-generic-tuple-struct.rs:3:1: 3:13
        return;                          // scope 0 at ui/deriving/deriving-cmp-generic-tuple-struct.rs:3:1: 3:13
    }
}
