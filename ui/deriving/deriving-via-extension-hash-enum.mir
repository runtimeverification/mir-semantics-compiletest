// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
fn <impl at ui/deriving/deriving-via-extension-hash-enum.rs:3:10: 3:14>::hash(_1: &Foo, _2: &mut __H) -> () {
    debug self => _1;                    // in scope 0 at ui/deriving/deriving-via-extension-hash-enum.rs:3:10: 3:14
    debug state => _2;                   // in scope 0 at ui/deriving/deriving-via-extension-hash-enum.rs:3:10: 3:14
    let mut _0: ();                      // return place in scope 0 at ui/deriving/deriving-via-extension-hash-enum.rs:3:10: 3:14
    let _3: isize;                       // in scope 0 at ui/deriving/deriving-via-extension-hash-enum.rs:3:10: 3:14
    let mut _4: &Foo;                    // in scope 0 at ui/deriving/deriving-via-extension-hash-enum.rs:3:10: 3:14
    let _5: ();                          // in scope 0 at ui/deriving/deriving-via-extension-hash-enum.rs:3:10: 3:14
    let mut _6: &isize;                  // in scope 0 at ui/deriving/deriving-via-extension-hash-enum.rs:3:10: 3:14
    let _7: &isize;                      // in scope 0 at ui/deriving/deriving-via-extension-hash-enum.rs:3:10: 3:14
    let mut _8: &mut __H;                // in scope 0 at ui/deriving/deriving-via-extension-hash-enum.rs:3:10: 3:14
    let mut _9: isize;                   // in scope 0 at ui/deriving/deriving-via-extension-hash-enum.rs:3:10: 3:14
    let _12: ();                         // in scope 0 at ui/deriving/deriving-via-extension-hash-enum.rs:5:9: 5:14
    let mut _13: &isize;                 // in scope 0 at ui/deriving/deriving-via-extension-hash-enum.rs:5:9: 5:14
    let mut _14: &mut __H;               // in scope 0 at ui/deriving/deriving-via-extension-hash-enum.rs:3:10: 3:14
    let mut _15: &char;                  // in scope 0 at ui/deriving/deriving-via-extension-hash-enum.rs:5:16: 5:20
    let mut _16: &mut __H;               // in scope 0 at ui/deriving/deriving-via-extension-hash-enum.rs:3:10: 3:14
    let _19: ();                         // in scope 0 at ui/deriving/deriving-via-extension-hash-enum.rs:6:9: 6:13
    let mut _20: &char;                  // in scope 0 at ui/deriving/deriving-via-extension-hash-enum.rs:6:9: 6:13
    let mut _21: &mut __H;               // in scope 0 at ui/deriving/deriving-via-extension-hash-enum.rs:3:10: 3:14
    let mut _22: &isize;                 // in scope 0 at ui/deriving/deriving-via-extension-hash-enum.rs:6:15: 6:20
    let mut _23: &mut __H;               // in scope 0 at ui/deriving/deriving-via-extension-hash-enum.rs:3:10: 3:14
    scope 1 {
        debug __self_tag => _3;          // in scope 1 at ui/deriving/deriving-via-extension-hash-enum.rs:3:10: 3:14
        let _10: &isize;                 // in scope 1 at ui/deriving/deriving-via-extension-hash-enum.rs:5:9: 5:14
        let _11: &char;                  // in scope 1 at ui/deriving/deriving-via-extension-hash-enum.rs:5:16: 5:20
        let _17: &char;                  // in scope 1 at ui/deriving/deriving-via-extension-hash-enum.rs:6:9: 6:13
        let _18: &isize;                 // in scope 1 at ui/deriving/deriving-via-extension-hash-enum.rs:6:15: 6:20
        scope 2 {
            debug __self_0 => _10;       // in scope 2 at ui/deriving/deriving-via-extension-hash-enum.rs:5:9: 5:14
            debug __self_1 => _11;       // in scope 2 at ui/deriving/deriving-via-extension-hash-enum.rs:5:16: 5:20
        }
        scope 3 {
            debug __self_0 => _17;       // in scope 3 at ui/deriving/deriving-via-extension-hash-enum.rs:6:9: 6:13
            debug __self_1 => _18;       // in scope 3 at ui/deriving/deriving-via-extension-hash-enum.rs:6:15: 6:20
        }
    }

    bb0: {
        _4 = _1;                         // scope 0 at ui/deriving/deriving-via-extension-hash-enum.rs:3:10: 3:14
        _3 = discriminant((*_4));        // scope 0 at ui/deriving/deriving-via-extension-hash-enum.rs:3:10: 3:14
        _7 = &_3;                        // scope 1 at ui/deriving/deriving-via-extension-hash-enum.rs:3:10: 3:14
        _6 = _7;                         // scope 1 at ui/deriving/deriving-via-extension-hash-enum.rs:3:10: 3:14
        _8 = &mut (*_2);                 // scope 1 at ui/deriving/deriving-via-extension-hash-enum.rs:3:10: 3:14
        _5 = <isize as Hash>::hash::<__H>(move _6, move _8) -> bb1; // scope 1 at ui/deriving/deriving-via-extension-hash-enum.rs:3:10: 3:14
                                         // mir::Constant
                                         // + span: ui/deriving/deriving-via-extension-hash-enum.rs:3:10: 3:14
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a isize, &'b mut __H) {<isize as Hash>::hash::<__H>}, val: Value(<ZST>) }
    }

    bb1: {
        _9 = discriminant((*_1));        // scope 1 at ui/deriving/deriving-via-extension-hash-enum.rs:3:10: 3:14
        switchInt(move _9) -> [0: bb4, 1: bb2, otherwise: bb3]; // scope 1 at ui/deriving/deriving-via-extension-hash-enum.rs:3:10: 3:14
    }

    bb2: {
        _17 = &(((*_1) as Baz).0: char); // scope 1 at ui/deriving/deriving-via-extension-hash-enum.rs:6:9: 6:13
        _18 = &(((*_1) as Baz).1: isize); // scope 1 at ui/deriving/deriving-via-extension-hash-enum.rs:6:15: 6:20
        _20 = _17;                       // scope 3 at ui/deriving/deriving-via-extension-hash-enum.rs:6:9: 6:13
        _21 = &mut (*_2);                // scope 3 at ui/deriving/deriving-via-extension-hash-enum.rs:3:10: 3:14
        _19 = <char as Hash>::hash::<__H>(move _20, move _21) -> bb6; // scope 3 at ui/deriving/deriving-via-extension-hash-enum.rs:6:9: 6:13
                                         // mir::Constant
                                         // + span: ui/deriving/deriving-via-extension-hash-enum.rs:6:9: 6:13
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a char, &'b mut __H) {<char as Hash>::hash::<__H>}, val: Value(<ZST>) }
    }

    bb3: {
        unreachable;                     // scope 1 at ui/deriving/deriving-via-extension-hash-enum.rs:3:10: 3:14
    }

    bb4: {
        _10 = &(((*_1) as Bar).0: isize); // scope 1 at ui/deriving/deriving-via-extension-hash-enum.rs:5:9: 5:14
        _11 = &(((*_1) as Bar).1: char); // scope 1 at ui/deriving/deriving-via-extension-hash-enum.rs:5:16: 5:20
        _13 = _10;                       // scope 2 at ui/deriving/deriving-via-extension-hash-enum.rs:5:9: 5:14
        _14 = &mut (*_2);                // scope 2 at ui/deriving/deriving-via-extension-hash-enum.rs:3:10: 3:14
        _12 = <isize as Hash>::hash::<__H>(move _13, move _14) -> bb5; // scope 2 at ui/deriving/deriving-via-extension-hash-enum.rs:5:9: 5:14
                                         // mir::Constant
                                         // + span: ui/deriving/deriving-via-extension-hash-enum.rs:5:9: 5:14
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a isize, &'b mut __H) {<isize as Hash>::hash::<__H>}, val: Value(<ZST>) }
    }

    bb5: {
        _15 = _11;                       // scope 2 at ui/deriving/deriving-via-extension-hash-enum.rs:5:16: 5:20
        _16 = &mut (*_2);                // scope 2 at ui/deriving/deriving-via-extension-hash-enum.rs:3:10: 3:14
        _0 = <char as Hash>::hash::<__H>(move _15, move _16) -> bb7; // scope 2 at ui/deriving/deriving-via-extension-hash-enum.rs:5:16: 5:20
                                         // mir::Constant
                                         // + span: ui/deriving/deriving-via-extension-hash-enum.rs:5:16: 5:20
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a char, &'b mut __H) {<char as Hash>::hash::<__H>}, val: Value(<ZST>) }
    }

    bb6: {
        _22 = _18;                       // scope 3 at ui/deriving/deriving-via-extension-hash-enum.rs:6:15: 6:20
        _23 = &mut (*_2);                // scope 3 at ui/deriving/deriving-via-extension-hash-enum.rs:3:10: 3:14
        _0 = <isize as Hash>::hash::<__H>(move _22, move _23) -> bb7; // scope 3 at ui/deriving/deriving-via-extension-hash-enum.rs:6:15: 6:20
                                         // mir::Constant
                                         // + span: ui/deriving/deriving-via-extension-hash-enum.rs:6:15: 6:20
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a isize, &'b mut __H) {<isize as Hash>::hash::<__H>}, val: Value(<ZST>) }
    }

    bb7: {
        return;                          // scope 0 at ui/deriving/deriving-via-extension-hash-enum.rs:3:14: 3:14
    }
}

fn <impl at ui/deriving/deriving-via-extension-hash-enum.rs:9:10: 9:14>::hash(_1: &A, _2: &mut __H) -> () {
    debug self => _1;                    // in scope 0 at ui/deriving/deriving-via-extension-hash-enum.rs:9:10: 9:14
    debug state => _2;                   // in scope 0 at ui/deriving/deriving-via-extension-hash-enum.rs:9:10: 9:14
    let mut _0: ();                      // return place in scope 0 at ui/deriving/deriving-via-extension-hash-enum.rs:9:10: 9:14
    let _3: isize;                       // in scope 0 at ui/deriving/deriving-via-extension-hash-enum.rs:9:10: 9:14
    let mut _4: &A;                      // in scope 0 at ui/deriving/deriving-via-extension-hash-enum.rs:9:10: 9:14
    let mut _5: &isize;                  // in scope 0 at ui/deriving/deriving-via-extension-hash-enum.rs:9:10: 9:14
    let _6: &isize;                      // in scope 0 at ui/deriving/deriving-via-extension-hash-enum.rs:9:10: 9:14
    let mut _7: &mut __H;                // in scope 0 at ui/deriving/deriving-via-extension-hash-enum.rs:9:10: 9:14
    scope 1 {
        debug __self_tag => _3;          // in scope 1 at ui/deriving/deriving-via-extension-hash-enum.rs:9:10: 9:14
    }

    bb0: {
        _4 = _1;                         // scope 0 at ui/deriving/deriving-via-extension-hash-enum.rs:9:10: 9:14
        _3 = discriminant((*_4));        // scope 0 at ui/deriving/deriving-via-extension-hash-enum.rs:9:10: 9:14
        _6 = &_3;                        // scope 1 at ui/deriving/deriving-via-extension-hash-enum.rs:9:10: 9:14
        _5 = _6;                         // scope 1 at ui/deriving/deriving-via-extension-hash-enum.rs:9:10: 9:14
        _7 = &mut (*_2);                 // scope 1 at ui/deriving/deriving-via-extension-hash-enum.rs:9:10: 9:14
        _0 = <isize as Hash>::hash::<__H>(move _5, move _7) -> bb1; // scope 1 at ui/deriving/deriving-via-extension-hash-enum.rs:9:10: 9:14
                                         // mir::Constant
                                         // + span: ui/deriving/deriving-via-extension-hash-enum.rs:9:10: 9:14
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a isize, &'b mut __H) {<isize as Hash>::hash::<__H>}, val: Value(<ZST>) }
    }

    bb1: {
        return;                          // scope 0 at ui/deriving/deriving-via-extension-hash-enum.rs:9:14: 9:14
    }
}

fn main() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/deriving/deriving-via-extension-hash-enum.rs:17:14: 17:14

    bb0: {
        return;                          // scope 0 at ui/deriving/deriving-via-extension-hash-enum.rs:17:16: 17:16
    }
}

fn Foo::Bar(_1: isize, _2: char) -> Foo {
    let mut _0: Foo;                     // return place in scope 0 at ui/deriving/deriving-via-extension-hash-enum.rs:5:5: 5:8

    bb0: {
        _0 = Foo::Bar(move _1, move _2); // scope 0 at ui/deriving/deriving-via-extension-hash-enum.rs:5:5: 5:8
        return;                          // scope 0 at ui/deriving/deriving-via-extension-hash-enum.rs:5:5: 5:8
    }
}

// MIR FOR CTFE
fn Foo::Bar(_1: isize, _2: char) -> Foo {
    let mut _0: Foo;                     // return place in scope 0 at ui/deriving/deriving-via-extension-hash-enum.rs:5:5: 5:8

    bb0: {
        _0 = Foo::Bar(move _1, move _2); // scope 0 at ui/deriving/deriving-via-extension-hash-enum.rs:5:5: 5:8
        return;                          // scope 0 at ui/deriving/deriving-via-extension-hash-enum.rs:5:5: 5:8
    }
}

fn Foo::Baz(_1: char, _2: isize) -> Foo {
    let mut _0: Foo;                     // return place in scope 0 at ui/deriving/deriving-via-extension-hash-enum.rs:6:5: 6:8

    bb0: {
        _0 = Foo::Baz(move _1, move _2); // scope 0 at ui/deriving/deriving-via-extension-hash-enum.rs:6:5: 6:8
        return;                          // scope 0 at ui/deriving/deriving-via-extension-hash-enum.rs:6:5: 6:8
    }
}

// MIR FOR CTFE
fn Foo::Baz(_1: char, _2: isize) -> Foo {
    let mut _0: Foo;                     // return place in scope 0 at ui/deriving/deriving-via-extension-hash-enum.rs:6:5: 6:8

    bb0: {
        _0 = Foo::Baz(move _1, move _2); // scope 0 at ui/deriving/deriving-via-extension-hash-enum.rs:6:5: 6:8
        return;                          // scope 0 at ui/deriving/deriving-via-extension-hash-enum.rs:6:5: 6:8
    }
}
