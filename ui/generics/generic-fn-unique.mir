// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
fn f(_1: Box<T>) -> Box<T> {
    debug x => _1;                       // in scope 0 at ui/generics/generic-fn-unique.rs:3:9: 3:10
    let mut _0: std::boxed::Box<T>;      // return place in scope 0 at ui/generics/generic-fn-unique.rs:3:23: 3:29

    bb0: {
        _0 = move _1;                    // scope 0 at ui/generics/generic-fn-unique.rs:3:39: 3:40
        return;                          // scope 0 at ui/generics/generic-fn-unique.rs:3:43: 3:43
    }
}

fn main() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/generics/generic-fn-unique.rs:5:15: 5:15
    let _1: std::boxed::Box<i32>;        // in scope 0 at ui/generics/generic-fn-unique.rs:6:9: 6:10
    let mut _2: std::boxed::Box<i32>;    // in scope 0 at ui/generics/generic-fn-unique.rs:6:15: 6:26
    let _3: ();                          // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:62
    let mut _4: std::fmt::Arguments<'_>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _5: &[&str];                 // in scope 0 at ui/generics/generic-fn-unique.rs:7:14: 7:18
    let mut _6: &[&str; 2];              // in scope 0 at ui/generics/generic-fn-unique.rs:7:14: 7:18
    let _7: &[&str; 2];                  // in scope 0 at ui/generics/generic-fn-unique.rs:7:14: 7:18
    let mut _8: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _9: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let _10: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let _11: [core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _12: core::fmt::ArgumentV1<'_>; // in scope 0 at ui/generics/generic-fn-unique.rs:7:20: 7:22
    let mut _13: &i32;                   // in scope 0 at ui/generics/generic-fn-unique.rs:7:20: 7:22
    let _14: &i32;                       // in scope 0 at ui/generics/generic-fn-unique.rs:7:20: 7:22
    let mut _16: *const i32;             // in scope 0 at ui/generics/generic-fn-unique.rs:6:9: 6:10
    scope 1 {
        debug x => _1;                   // in scope 1 at ui/generics/generic-fn-unique.rs:6:9: 6:10
        let mut _15: &[&str; 2];         // in scope 1 at ui/generics/generic-fn-unique.rs:7:14: 7:18
    }

    bb0: {
        _2 = Box::<i32>::new(const 3_i32) -> bb1; // scope 0 at ui/generics/generic-fn-unique.rs:6:15: 6:26
                                         // mir::Constant
                                         // + span: ui/generics/generic-fn-unique.rs:6:15: 6:23
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: fn(i32) -> Box<i32> {Box::<i32>::new}, val: Value(<ZST>) }
    }

    bb1: {
        _1 = f::<i32>(move _2) -> bb2;   // scope 0 at ui/generics/generic-fn-unique.rs:6:13: 6:27
                                         // mir::Constant
                                         // + span: ui/generics/generic-fn-unique.rs:6:13: 6:14
                                         // + literal: Const { ty: fn(Box<i32>) -> Box<i32> {f::<i32>}, val: Value(<ZST>) }
    }

    bb2: {
        _15 = const _;                   // scope 1 at ui/generics/generic-fn-unique.rs:7:14: 7:18
                                         // mir::Constant
                                         // + span: ui/generics/generic-fn-unique.rs:7:14: 7:18
                                         // + literal: Const { ty: &[&str; 2], val: Unevaluated(main, [], Some(promoted[0])) }
        _7 = _15;                        // scope 1 at ui/generics/generic-fn-unique.rs:7:14: 7:18
        _6 = _7;                         // scope 1 at ui/generics/generic-fn-unique.rs:7:14: 7:18
        _5 = move _6 as &[&str] (Pointer(Unsize)); // scope 1 at ui/generics/generic-fn-unique.rs:7:14: 7:18
        _16 = (((_1.0: std::ptr::Unique<i32>).0: std::ptr::NonNull<i32>).0: *const i32); // scope 1 at ui/generics/generic-fn-unique.rs:7:20: 7:22
        _14 = &(*_16);                   // scope 1 at ui/generics/generic-fn-unique.rs:7:20: 7:22
        _13 = _14;                       // scope 1 at ui/generics/generic-fn-unique.rs:7:20: 7:22
        _12 = core::fmt::ArgumentV1::<'_>::new_display::<i32>(move _13) -> [return: bb3, unwind: bb7]; // scope 1 at ui/generics/generic-fn-unique.rs:7:20: 7:22
                                         // mir::Constant
                                         // + span: ui/generics/generic-fn-unique.rs:7:20: 7:22
                                         // + user_ty: UserType(2)
                                         // + literal: Const { ty: for<'b> fn(&'b i32) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_display::<i32>}, val: Value(<ZST>) }
    }

    bb3: {
        _11 = [move _12];                // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _10 = &_11;                      // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _9 = _10;                        // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _8 = move _9 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _4 = Arguments::<'_>::new_v1(move _5, move _8) -> [return: bb4, unwind: bb7]; // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // + user_ty: UserType(1)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb4: {
        _3 = _print(move _4) -> [return: bb5, unwind: bb7]; // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:62
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:27
                                         // + literal: Const { ty: for<'a> fn(Arguments<'a>) {_print}, val: Value(<ZST>) }
    }

    bb5: {
        drop(_1) -> bb6;                 // scope 0 at ui/generics/generic-fn-unique.rs:8:1: 8:2
    }

    bb6: {
        return;                          // scope 0 at ui/generics/generic-fn-unique.rs:8:2: 8:2
    }

    bb7 (cleanup): {
        drop(_1) -> bb8;                 // scope 0 at ui/generics/generic-fn-unique.rs:8:1: 8:2
    }

    bb8 (cleanup): {
        resume;                          // scope 0 at ui/generics/generic-fn-unique.rs:5:1: 8:2
    }
}

promoted[0] in main: &[&str; 2] = {
    let mut _0: &[&str; 2];              // return place in scope 0 at ui/generics/generic-fn-unique.rs:7:14: 7:18
    let mut _1: [&str; 2];               // in scope 0 at ui/generics/generic-fn-unique.rs:7:14: 7:18

    bb0: {
        _1 = [const "", const "\n"];     // scope 0 at ui/generics/generic-fn-unique.rs:7:14: 7:18
                                         // mir::Constant
                                         // + span: ui/generics/generic-fn-unique.rs:7:14: 7:18
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
                                         // mir::Constant
                                         // + span: ui/generics/generic-fn-unique.rs:7:14: 7:18
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at ui/generics/generic-fn-unique.rs:7:14: 7:18
        return;                          // scope 0 at ui/generics/generic-fn-unique.rs:7:14: 7:18
    }
}
