// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
fn id(_1: T) -> T {
    debug t => _1;                       // in scope 0 at ui/generics/generic-alias-unique.rs:3:15: 3:16
    let mut _0: T;                       // return place in scope 0 at ui/generics/generic-alias-unique.rs:3:24: 3:25

    bb0: {
        _0 = move _1;                    // scope 0 at ui/generics/generic-alias-unique.rs:3:35: 3:36
        return;                          // scope 0 at ui/generics/generic-alias-unique.rs:3:39: 3:39
    }
}

fn main() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/generics/generic-alias-unique.rs:5:15: 5:15
    let _1: std::boxed::Box<isize>;      // in scope 0 at ui/generics/generic-alias-unique.rs:6:9: 6:17
    let mut _3: std::boxed::Box<isize>;  // in scope 0 at ui/generics/generic-alias-unique.rs:7:35: 7:51
    let mut _4: &std::boxed::Box<isize>; // in scope 0 at ui/generics/generic-alias-unique.rs:7:35: 7:51
    let _5: ();                          // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:62
    let mut _6: std::fmt::Arguments<'_>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _7: &[&str];                 // in scope 0 at ui/generics/generic-alias-unique.rs:8:14: 8:18
    let mut _8: &[&str; 2];              // in scope 0 at ui/generics/generic-alias-unique.rs:8:14: 8:18
    let _9: &[&str; 2];                  // in scope 0 at ui/generics/generic-alias-unique.rs:8:14: 8:18
    let mut _10: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _11: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let _12: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let _13: [core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _14: core::fmt::ArgumentV1<'_>; // in scope 0 at ui/generics/generic-alias-unique.rs:8:20: 8:27
    let mut _15: &isize;                 // in scope 0 at ui/generics/generic-alias-unique.rs:8:20: 8:27
    let _16: &isize;                     // in scope 0 at ui/generics/generic-alias-unique.rs:8:20: 8:27
    let mut _17: (&isize, &isize);       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _18: &isize;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let mut _19: &isize;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _22: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    let mut _23: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
    let mut _24: isize;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
    let mut _25: isize;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
    let _27: !;                          // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
    let mut _28: core::panicking::AssertKind; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
    let mut _29: &isize;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let _30: &isize;                     // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let mut _31: &isize;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let _32: &isize;                     // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let mut _33: std::option::Option<std::fmt::Arguments<'_>>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
    let mut _35: *const isize;           // in scope 0 at ui/generics/generic-alias-unique.rs:7:9: 7:15
    let mut _36: *const isize;           // in scope 0 at ui/generics/generic-alias-unique.rs:6:9: 6:17
    let mut _37: *const isize;           // in scope 0 at ui/generics/generic-alias-unique.rs:7:9: 7:15
    scope 1 {
        debug expected => _1;            // in scope 1 at ui/generics/generic-alias-unique.rs:6:9: 6:17
        let _2: std::boxed::Box<isize>;  // in scope 1 at ui/generics/generic-alias-unique.rs:7:9: 7:15
        scope 2 {
            debug actual => _2;          // in scope 2 at ui/generics/generic-alias-unique.rs:7:9: 7:15
            let _20: &isize;             // in scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
            let _21: &isize;             // in scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
            let mut _34: &[&str; 2];     // in scope 2 at ui/generics/generic-alias-unique.rs:8:14: 8:18
            scope 3 {
                debug left_val => _20;   // in scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
                debug right_val => _21;  // in scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
                let _26: core::panicking::AssertKind; // in scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                scope 4 {
                    debug kind => _26;   // in scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                }
            }
        }
    }

    bb0: {
        _1 = Box::<isize>::new(const 100_isize) -> bb1; // scope 0 at ui/generics/generic-alias-unique.rs:6:28: 6:41
                                         // mir::Constant
                                         // + span: ui/generics/generic-alias-unique.rs:6:28: 6:36
                                         // + user_ty: UserType(1)
                                         // + literal: Const { ty: fn(isize) -> Box<isize> {Box::<isize>::new}, val: Value(<ZST>) }
    }

    bb1: {
        _4 = &_1;                        // scope 1 at ui/generics/generic-alias-unique.rs:7:35: 7:51
        _3 = <Box<isize> as Clone>::clone(move _4) -> [return: bb2, unwind: bb12]; // scope 1 at ui/generics/generic-alias-unique.rs:7:35: 7:51
                                         // mir::Constant
                                         // + span: ui/generics/generic-alias-unique.rs:7:44: 7:49
                                         // + literal: Const { ty: for<'a> fn(&'a Box<isize>) -> Box<isize> {<Box<isize> as Clone>::clone}, val: Value(<ZST>) }
    }

    bb2: {
        _2 = id::<Box<isize>>(move _3) -> [return: bb3, unwind: bb12]; // scope 1 at ui/generics/generic-alias-unique.rs:7:18: 7:52
                                         // mir::Constant
                                         // + span: ui/generics/generic-alias-unique.rs:7:18: 7:34
                                         // + literal: Const { ty: fn(Box<isize>) -> Box<isize> {id::<Box<isize>>}, val: Value(<ZST>) }
    }

    bb3: {
        _34 = const _;                   // scope 2 at ui/generics/generic-alias-unique.rs:8:14: 8:18
                                         // mir::Constant
                                         // + span: ui/generics/generic-alias-unique.rs:8:14: 8:18
                                         // + literal: Const { ty: &[&str; 2], val: Unevaluated(main, [], Some(promoted[0])) }
        _9 = _34;                        // scope 2 at ui/generics/generic-alias-unique.rs:8:14: 8:18
        _8 = _9;                         // scope 2 at ui/generics/generic-alias-unique.rs:8:14: 8:18
        _7 = move _8 as &[&str] (Pointer(Unsize)); // scope 2 at ui/generics/generic-alias-unique.rs:8:14: 8:18
        _35 = (((_2.0: std::ptr::Unique<isize>).0: std::ptr::NonNull<isize>).0: *const isize); // scope 2 at ui/generics/generic-alias-unique.rs:8:20: 8:27
        _16 = &(*_35);                   // scope 2 at ui/generics/generic-alias-unique.rs:8:20: 8:27
        _15 = _16;                       // scope 2 at ui/generics/generic-alias-unique.rs:8:20: 8:27
        _14 = core::fmt::ArgumentV1::<'_>::new_display::<isize>(move _15) -> [return: bb4, unwind: bb11]; // scope 2 at ui/generics/generic-alias-unique.rs:8:20: 8:27
                                         // mir::Constant
                                         // + span: ui/generics/generic-alias-unique.rs:8:20: 8:27
                                         // + user_ty: UserType(4)
                                         // + literal: Const { ty: for<'b> fn(&'b isize) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_display::<isize>}, val: Value(<ZST>) }
    }

    bb4: {
        _13 = [move _14];                // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _12 = &_13;                      // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _11 = _12;                       // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _10 = move _11 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _6 = Arguments::<'_>::new_v1(move _7, move _10) -> [return: bb5, unwind: bb11]; // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // + user_ty: UserType(3)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb5: {
        _5 = _print(move _6) -> [return: bb6, unwind: bb11]; // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:62
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:27
                                         // + literal: Const { ty: for<'a> fn(Arguments<'a>) {_print}, val: Value(<ZST>) }
    }

    bb6: {
        _36 = (((_1.0: std::ptr::Unique<isize>).0: std::ptr::NonNull<isize>).0: *const isize); // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _18 = &(*_36);                   // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _37 = (((_2.0: std::ptr::Unique<isize>).0: std::ptr::NonNull<isize>).0: *const isize); // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _19 = &(*_37);                   // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _17 = (move _18, move _19);      // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _20 = (_17.0: &isize);           // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _21 = (_17.1: &isize);           // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _24 = (*_20);                    // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
        _25 = (*_21);                    // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
        _23 = Eq(move _24, move _25);    // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
        _22 = Not(move _23);             // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
        switchInt(move _22) -> [0: bb8, otherwise: bb7]; // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    }

    bb7: {
        _26 = const core::panicking::AssertKind::Eq; // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _28 = const core::panicking::AssertKind::Eq; // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _30 = _20;                       // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _29 = _30;                       // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _32 = _21;                       // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _31 = _32;                       // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _33 = Option::<Arguments<'_>>::None; // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
        _27 = core::panicking::assert_failed::<isize, isize>(move _28, move _29, move _31, move _33) -> bb11; // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:53
                                         // + literal: Const { ty: for<'a, 'b, 'c> fn(core::panicking::AssertKind, &'a isize, &'b isize, Option<Arguments<'c>>) -> ! {core::panicking::assert_failed::<isize, isize>}, val: Value(<ZST>) }
    }

    bb8: {
        drop(_2) -> [return: bb9, unwind: bb12]; // scope 1 at ui/generics/generic-alias-unique.rs:10:1: 10:2
    }

    bb9: {
        drop(_1) -> bb10;                // scope 0 at ui/generics/generic-alias-unique.rs:10:1: 10:2
    }

    bb10: {
        return;                          // scope 0 at ui/generics/generic-alias-unique.rs:10:2: 10:2
    }

    bb11 (cleanup): {
        drop(_2) -> bb12;                // scope 1 at ui/generics/generic-alias-unique.rs:10:1: 10:2
    }

    bb12 (cleanup): {
        drop(_1) -> bb13;                // scope 0 at ui/generics/generic-alias-unique.rs:10:1: 10:2
    }

    bb13 (cleanup): {
        resume;                          // scope 0 at ui/generics/generic-alias-unique.rs:5:1: 10:2
    }
}

promoted[0] in main: &[&str; 2] = {
    let mut _0: &[&str; 2];              // return place in scope 0 at ui/generics/generic-alias-unique.rs:8:14: 8:18
    let mut _1: [&str; 2];               // in scope 0 at ui/generics/generic-alias-unique.rs:8:14: 8:18

    bb0: {
        _1 = [const "", const "\n"];     // scope 0 at ui/generics/generic-alias-unique.rs:8:14: 8:18
                                         // mir::Constant
                                         // + span: ui/generics/generic-alias-unique.rs:8:14: 8:18
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
                                         // mir::Constant
                                         // + span: ui/generics/generic-alias-unique.rs:8:14: 8:18
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at ui/generics/generic-alias-unique.rs:8:14: 8:18
        return;                          // scope 0 at ui/generics/generic-alias-unique.rs:8:14: 8:18
    }
}
