// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
fn main() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/generics/generic-newtype-struct.rs:6:15: 6:15
    let _1: S<i32>;                      // in scope 0 at ui/generics/generic-newtype-struct.rs:7:9: 7:11
    scope 1 {
        debug _s => _1;                  // in scope 1 at ui/generics/generic-newtype-struct.rs:7:9: 7:11
    }

    bb0: {
        _1 = const S::<i32>(2_i32);      // scope 0 at ui/generics/generic-newtype-struct.rs:7:14: 7:18
                                         // mir::Constant
                                         // + span: ui/generics/generic-newtype-struct.rs:7:14: 7:18
                                         // + literal: Const { ty: S<i32>, val: Value(Scalar(0x00000002)) }
        return;                          // scope 0 at ui/generics/generic-newtype-struct.rs:8:2: 8:2
    }
}

fn S(_1: T) -> S<T> {
    let mut _0: S<T>;                    // return place in scope 0 at ui/generics/generic-newtype-struct.rs:4:1: 4:12

    bb0: {
        _0 = S::<T>(move _1);            // scope 0 at ui/generics/generic-newtype-struct.rs:4:1: 4:12
        return;                          // scope 0 at ui/generics/generic-newtype-struct.rs:4:1: 4:12
    }
}

// MIR FOR CTFE
fn S(_1: T) -> S<T> {
    let mut _0: S<T>;                    // return place in scope 0 at ui/generics/generic-newtype-struct.rs:4:1: 4:12

    bb0: {
        _0 = S::<T>(move _1);            // scope 0 at ui/generics/generic-newtype-struct.rs:4:1: 4:12
        return;                          // scope 0 at ui/generics/generic-newtype-struct.rs:4:1: 4:12
    }
}
