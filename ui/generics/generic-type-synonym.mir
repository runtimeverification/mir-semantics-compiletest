// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
fn takebar(_1: Foo<T>) -> () {
    debug _b => _1;                      // in scope 0 at ui/generics/generic-type-synonym.rs:13:15: 13:17
    let mut _0: ();                      // return place in scope 0 at ui/generics/generic-type-synonym.rs:13:27: 13:27

    bb0: {
        drop(_1) -> bb1;                 // scope 0 at ui/generics/generic-type-synonym.rs:13:29: 13:30
    }

    bb1: {
        return;                          // scope 0 at ui/generics/generic-type-synonym.rs:13:30: 13:30
    }
}

fn main() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/generics/generic-type-synonym.rs:15:15: 15:15

    bb0: {
        return;                          // scope 0 at ui/generics/generic-type-synonym.rs:15:18: 15:18
    }
}
