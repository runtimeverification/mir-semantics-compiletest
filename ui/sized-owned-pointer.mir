// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
fn bar() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/sized-owned-pointer.rs:9:20: 9:20

    bb0: {
        return;                          // scope 0 at ui/sized-owned-pointer.rs:9:23: 9:23
    }
}

fn foo() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/sized-owned-pointer.rs:10:13: 10:13

    bb0: {
        _0 = bar::<Box<T>>() -> bb1;     // scope 0 at ui/sized-owned-pointer.rs:10:15: 10:30
                                         // mir::Constant
                                         // + span: ui/sized-owned-pointer.rs:10:15: 10:28
                                         // + literal: Const { ty: fn() {bar::<Box<T>>}, val: Value(<ZST>) }
    }

    bb1: {
        return;                          // scope 0 at ui/sized-owned-pointer.rs:10:32: 10:32
    }
}

fn main() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/sized-owned-pointer.rs:11:15: 11:15

    bb0: {
        return;                          // scope 0 at ui/sized-owned-pointer.rs:11:18: 11:18
    }
}
