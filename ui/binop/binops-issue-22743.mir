// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
fn <impl at ui/binop/binops-issue-22743.rs:5:16: 5:21>::clone(_1: &Foo) -> Foo {
    debug self => _1;                    // in scope 0 at ui/binop/binops-issue-22743.rs:5:16: 5:21
    let mut _0: Foo;                     // return place in scope 0 at ui/binop/binops-issue-22743.rs:5:16: 5:21
    scope 1 {
    }

    bb0: {
        _0 = (*_1);                      // scope 1 at ui/binop/binops-issue-22743.rs:5:16: 5:21
        return;                          // scope 0 at ui/binop/binops-issue-22743.rs:5:21: 5:21
    }
}

fn <impl at ui/binop/binops-issue-22743.rs:10:1: 10:22>::mul(_1: f64, _2: Foo) -> Foo {
    debug self => _1;                    // in scope 0 at ui/binop/binops-issue-22743.rs:13:12: 13:16
    debug rhs => _2;                     // in scope 0 at ui/binop/binops-issue-22743.rs:13:18: 13:21
    let mut _0: Foo;                     // return place in scope 0 at ui/binop/binops-issue-22743.rs:13:31: 13:34
    let mut _3: f64;                     // in scope 0 at ui/binop/binops-issue-22743.rs:15:18: 15:30
    let mut _4: f64;                     // in scope 0 at ui/binop/binops-issue-22743.rs:15:18: 15:22
    let mut _5: f64;                     // in scope 0 at ui/binop/binops-issue-22743.rs:15:25: 15:30

    bb0: {
        _4 = _1;                         // scope 0 at ui/binop/binops-issue-22743.rs:15:18: 15:22
        _5 = (_2.0: f64);                // scope 0 at ui/binop/binops-issue-22743.rs:15:25: 15:30
        _3 = Add(move _4, move _5);      // scope 0 at ui/binop/binops-issue-22743.rs:15:18: 15:30
        _0 = Foo { x: move _3 };         // scope 0 at ui/binop/binops-issue-22743.rs:15:9: 15:32
        return;                          // scope 0 at ui/binop/binops-issue-22743.rs:16:6: 16:6
    }
}

fn main() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/binop/binops-issue-22743.rs:19:15: 19:15
    let _1: Foo;                         // in scope 0 at ui/binop/binops-issue-22743.rs:20:9: 20:10
    let mut _4: f64;                     // in scope 0 at ui/binop/binops-issue-22743.rs:22:19: 22:22
    let mut _5: Foo;                     // in scope 0 at ui/binop/binops-issue-22743.rs:22:25: 22:26
    let mut _6: (&f64, &f64);            // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _7: &f64;                    // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let mut _8: &f64;                    // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _11: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    let mut _12: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
    let mut _13: f64;                    // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
    let mut _14: f64;                    // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
    let _16: !;                          // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
    let mut _17: core::panicking::AssertKind; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
    let mut _18: &f64;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let _19: &f64;                       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let mut _20: &f64;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let _21: &f64;                       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let mut _22: std::option::Option<std::fmt::Arguments<'_>>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
    scope 1 {
        debug f => _1;                   // in scope 1 at ui/binop/binops-issue-22743.rs:20:9: 20:10
        let _2: f64;                     // in scope 1 at ui/binop/binops-issue-22743.rs:21:9: 21:12
        scope 2 {
            debug val => _2;             // in scope 2 at ui/binop/binops-issue-22743.rs:21:9: 21:12
            let _3: Foo;                 // in scope 2 at ui/binop/binops-issue-22743.rs:22:9: 22:11
            scope 3 {
                debug f2 => _3;          // in scope 3 at ui/binop/binops-issue-22743.rs:22:9: 22:11
                let _9: &f64;            // in scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
                let _10: &f64;           // in scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
                let mut _23: &f64;       // in scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                scope 4 {
                    debug left_val => _9; // in scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
                    debug right_val => _10; // in scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
                    let _15: core::panicking::AssertKind; // in scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                    scope 5 {
                        debug kind => _15; // in scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                    }
                }
            }
        }
    }

    bb0: {
        _1 = const Foo {{ x: 5f64 }};    // scope 0 at ui/binop/binops-issue-22743.rs:20:18: 20:32
                                         // mir::Constant
                                         // + span: ui/binop/binops-issue-22743.rs:20:18: 20:32
                                         // + literal: Const { ty: Foo, val: Value(Scalar(0x4014000000000000)) }
        _2 = const 3f64;                 // scope 1 at ui/binop/binops-issue-22743.rs:21:20: 21:23
        _4 = const 3f64;                 // scope 2 at ui/binop/binops-issue-22743.rs:22:19: 22:22
        _5 = const Foo {{ x: 5f64 }};    // scope 2 at ui/binop/binops-issue-22743.rs:22:25: 22:26
                                         // mir::Constant
                                         // + span: ui/binop/binops-issue-22743.rs:22:25: 22:26
                                         // + literal: Const { ty: Foo, val: Value(Scalar(0x4014000000000000)) }
        _3 = <f64 as Mul<Foo>>::mul(move _4, move _5) -> bb1; // scope 2 at ui/binop/binops-issue-22743.rs:22:19: 22:26
                                         // mir::Constant
                                         // + span: ui/binop/binops-issue-22743.rs:22:19: 22:26
                                         // + literal: Const { ty: fn(f64, Foo) -> <f64 as Mul<Foo>>::Output {<f64 as Mul<Foo>>::mul}, val: Value(<ZST>) }
    }

    bb1: {
        _7 = &(_3.0: f64);               // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _23 = const _;                   // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // + literal: Const { ty: &f64, val: Unevaluated(main, [], Some(promoted[0])) }
        _8 = _23;                        // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _6 = (move _7, move _8);         // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _9 = (_6.0: &f64);               // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _10 = (_6.1: &f64);              // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _13 = (*_9);                     // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
        _14 = const 8f64;                // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
        _12 = Eq(move _13, move _14);    // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
        _11 = Not(move _12);             // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
        switchInt(move _11) -> [0: bb3, otherwise: bb2]; // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    }

    bb2: {
        _15 = const core::panicking::AssertKind::Eq; // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _17 = const core::panicking::AssertKind::Eq; // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _19 = _9;                        // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _18 = _19;                       // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _21 = _10;                       // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _20 = _21;                       // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _22 = Option::<Arguments<'_>>::None; // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
        _16 = core::panicking::assert_failed::<f64, f64>(move _17, move _18, move _20, move _22); // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:53
                                         // + literal: Const { ty: for<'a, 'b, 'c> fn(core::panicking::AssertKind, &'a f64, &'b f64, Option<Arguments<'c>>) -> ! {core::panicking::assert_failed::<f64, f64>}, val: Value(<ZST>) }
    }

    bb3: {
        return;                          // scope 0 at ui/binop/binops-issue-22743.rs:24:2: 24:2
    }
}

promoted[0] in main: &f64 = {
    let mut _0: &f64;                    // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _1: f64;                     // in scope 0 at ui/binop/binops-issue-22743.rs:23:22: 23:25

    bb0: {
        _1 = const 8f64;                 // scope 0 at ui/binop/binops-issue-22743.rs:23:22: 23:25
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    }
}
