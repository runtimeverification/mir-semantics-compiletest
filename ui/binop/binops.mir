// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
fn test_nil() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/binop/binops.rs:6:15: 6:15
    let mut _1: (&(), &());              // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _2: &();                     // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let mut _3: &();                     // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let _4: &();                         // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
    let _5: &();                         // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
    let mut _6: bool;                    // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    let mut _7: bool;                    // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
    let mut _8: &();                     // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
    let mut _9: &();                     // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
    let _11: !;                          // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
    let mut _12: core::panicking::AssertKind; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
    let mut _13: &();                    // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let _14: &();                        // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let mut _15: &();                    // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let _16: &();                        // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let mut _17: std::option::Option<std::fmt::Arguments<'_>>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
    let mut _18: bool;                   // in scope 0 at ui/binop/binops.rs:8:5: 8:27
    let mut _19: bool;                   // in scope 0 at ui/binop/binops.rs:8:13: 8:26
    let mut _20: bool;                   // in scope 0 at ui/binop/binops.rs:8:15: 8:25
    let mut _21: &();                    // in scope 0 at ui/binop/binops.rs:8:16: 8:18
    let mut _22: &();                    // in scope 0 at ui/binop/binops.rs:8:22: 8:24
    let mut _23: !;                      // in scope 0 at ui/binop/binops.rs:8:5: 8:27
    let mut _24: bool;                   // in scope 0 at ui/binop/binops.rs:9:5: 9:26
    let mut _25: bool;                   // in scope 0 at ui/binop/binops.rs:9:13: 9:25
    let mut _26: bool;                   // in scope 0 at ui/binop/binops.rs:9:15: 9:24
    let mut _27: &();                    // in scope 0 at ui/binop/binops.rs:9:16: 9:18
    let mut _28: &();                    // in scope 0 at ui/binop/binops.rs:9:21: 9:23
    let mut _29: !;                      // in scope 0 at ui/binop/binops.rs:9:5: 9:26
    let mut _30: bool;                   // in scope 0 at ui/binop/binops.rs:10:5: 10:24
    let mut _31: bool;                   // in scope 0 at ui/binop/binops.rs:10:13: 10:23
    let mut _32: &();                    // in scope 0 at ui/binop/binops.rs:10:14: 10:16
    let mut _33: &();                    // in scope 0 at ui/binop/binops.rs:10:20: 10:22
    let mut _34: !;                      // in scope 0 at ui/binop/binops.rs:10:5: 10:24
    let mut _35: bool;                   // in scope 0 at ui/binop/binops.rs:11:5: 11:26
    let mut _36: bool;                   // in scope 0 at ui/binop/binops.rs:11:13: 11:25
    let mut _37: bool;                   // in scope 0 at ui/binop/binops.rs:11:15: 11:24
    let mut _38: &();                    // in scope 0 at ui/binop/binops.rs:11:16: 11:18
    let mut _39: &();                    // in scope 0 at ui/binop/binops.rs:11:21: 11:23
    let mut _40: !;                      // in scope 0 at ui/binop/binops.rs:11:5: 11:26
    let mut _41: bool;                   // in scope 0 at ui/binop/binops.rs:12:5: 12:24
    let mut _42: bool;                   // in scope 0 at ui/binop/binops.rs:12:13: 12:23
    let mut _43: &();                    // in scope 0 at ui/binop/binops.rs:12:14: 12:16
    let mut _44: &();                    // in scope 0 at ui/binop/binops.rs:12:20: 12:22
    let mut _45: !;                      // in scope 0 at ui/binop/binops.rs:12:5: 12:24
    let mut _46: &();                    // in scope 0 at ui/binop/binops.rs:12:20: 12:22
    let mut _47: &();                    // in scope 0 at ui/binop/binops.rs:12:14: 12:16
    let mut _48: &();                    // in scope 0 at ui/binop/binops.rs:11:21: 11:23
    let mut _49: &();                    // in scope 0 at ui/binop/binops.rs:11:16: 11:18
    let mut _50: &();                    // in scope 0 at ui/binop/binops.rs:10:20: 10:22
    let mut _51: &();                    // in scope 0 at ui/binop/binops.rs:10:14: 10:16
    let mut _52: &();                    // in scope 0 at ui/binop/binops.rs:9:21: 9:23
    let mut _53: &();                    // in scope 0 at ui/binop/binops.rs:9:16: 9:18
    let mut _54: &();                    // in scope 0 at ui/binop/binops.rs:8:22: 8:24
    let mut _55: &();                    // in scope 0 at ui/binop/binops.rs:8:16: 8:18
    let mut _56: &();                    // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _57: &();                    // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    scope 1 {
        debug left_val => _4;            // in scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        debug right_val => _5;           // in scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        let _10: core::panicking::AssertKind; // in scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
        scope 2 {
            debug kind => _10;           // in scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
        }
    }

    bb0: {
        _57 = const _;                   // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
                                         // + literal: Const { ty: &(), val: Unevaluated(test_nil, [], Some(promoted[11])) }
        _2 = _57;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _56 = const _;                   // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // + literal: Const { ty: &(), val: Unevaluated(test_nil, [], Some(promoted[10])) }
        _3 = _56;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _1 = (move _2, move _3);         // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _4 = (_1.0: &());                // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _5 = (_1.1: &());                // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _8 = _4;                         // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
        _9 = _5;                         // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
        _7 = <() as PartialEq>::eq(move _8, move _9) -> bb1; // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a (), &'b ()) -> bool {<() as PartialEq>::eq}, val: Value(<ZST>) }
    }

    bb1: {
        _6 = Not(move _7);               // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
        switchInt(move _6) -> [0: bb3, otherwise: bb2]; // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    }

    bb2: {
        _10 = const core::panicking::AssertKind::Eq; // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _12 = const core::panicking::AssertKind::Eq; // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _14 = _4;                        // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _13 = _14;                       // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _16 = _5;                        // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _15 = _16;                       // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _17 = Option::<Arguments<'_>>::None; // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
        _11 = core::panicking::assert_failed::<(), ()>(move _12, move _13, move _15, move _17); // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:53
                                         // + literal: Const { ty: for<'a, 'b, 'c> fn(core::panicking::AssertKind, &'a (), &'b (), Option<Arguments<'c>>) -> ! {core::panicking::assert_failed::<(), ()>}, val: Value(<ZST>) }
    }

    bb3: {
        _55 = const _;                   // scope 0 at ui/binop/binops.rs:8:16: 8:18
                                         // mir::Constant
                                         // + span: ui/binop/binops.rs:8:16: 8:18
                                         // + literal: Const { ty: &(), val: Unevaluated(test_nil, [], Some(promoted[9])) }
        _21 = _55;                       // scope 0 at ui/binop/binops.rs:8:16: 8:18
        _54 = const _;                   // scope 0 at ui/binop/binops.rs:8:22: 8:24
                                         // mir::Constant
                                         // + span: ui/binop/binops.rs:8:22: 8:24
                                         // + literal: Const { ty: &(), val: Unevaluated(test_nil, [], Some(promoted[8])) }
        _22 = _54;                       // scope 0 at ui/binop/binops.rs:8:22: 8:24
        _20 = <() as PartialEq>::ne(move _21, move _22) -> bb4; // scope 0 at ui/binop/binops.rs:8:15: 8:25
                                         // mir::Constant
                                         // + span: ui/binop/binops.rs:8:15: 8:25
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a (), &'b ()) -> bool {<() as PartialEq>::ne}, val: Value(<ZST>) }
    }

    bb4: {
        _19 = Not(move _20);             // scope 0 at ui/binop/binops.rs:8:13: 8:26
        _18 = Not(move _19);             // scope 0 at ui/binop/binops.rs:8:5: 8:27
        switchInt(move _18) -> [0: bb6, otherwise: bb5]; // scope 0 at ui/binop/binops.rs:8:5: 8:27
    }

    bb5: {
        _23 = core::panicking::panic(const "assertion failed: (!(() != ()))"); // scope 0 at ui/binop/binops.rs:8:5: 8:27
                                         // mir::Constant
                                         // + span: ui/binop/binops.rs:8:5: 8:27
                                         // + literal: Const { ty: fn(&'static str) -> ! {core::panicking::panic}, val: Value(<ZST>) }
                                         // mir::Constant
                                         // + span: no-location
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
    }

    bb6: {
        _53 = const _;                   // scope 0 at ui/binop/binops.rs:9:16: 9:18
                                         // mir::Constant
                                         // + span: ui/binop/binops.rs:9:16: 9:18
                                         // + literal: Const { ty: &(), val: Unevaluated(test_nil, [], Some(promoted[7])) }
        _27 = _53;                       // scope 0 at ui/binop/binops.rs:9:16: 9:18
        _52 = const _;                   // scope 0 at ui/binop/binops.rs:9:21: 9:23
                                         // mir::Constant
                                         // + span: ui/binop/binops.rs:9:21: 9:23
                                         // + literal: Const { ty: &(), val: Unevaluated(test_nil, [], Some(promoted[6])) }
        _28 = _52;                       // scope 0 at ui/binop/binops.rs:9:21: 9:23
        _26 = <() as PartialOrd>::lt(move _27, move _28) -> bb7; // scope 0 at ui/binop/binops.rs:9:15: 9:24
                                         // mir::Constant
                                         // + span: ui/binop/binops.rs:9:15: 9:24
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a (), &'b ()) -> bool {<() as PartialOrd>::lt}, val: Value(<ZST>) }
    }

    bb7: {
        _25 = Not(move _26);             // scope 0 at ui/binop/binops.rs:9:13: 9:25
        _24 = Not(move _25);             // scope 0 at ui/binop/binops.rs:9:5: 9:26
        switchInt(move _24) -> [0: bb9, otherwise: bb8]; // scope 0 at ui/binop/binops.rs:9:5: 9:26
    }

    bb8: {
        _29 = core::panicking::panic(const "assertion failed: (!(() < ()))"); // scope 0 at ui/binop/binops.rs:9:5: 9:26
                                         // mir::Constant
                                         // + span: ui/binop/binops.rs:9:5: 9:26
                                         // + literal: Const { ty: fn(&'static str) -> ! {core::panicking::panic}, val: Value(<ZST>) }
                                         // mir::Constant
                                         // + span: no-location
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
    }

    bb9: {
        _51 = const _;                   // scope 0 at ui/binop/binops.rs:10:14: 10:16
                                         // mir::Constant
                                         // + span: ui/binop/binops.rs:10:14: 10:16
                                         // + literal: Const { ty: &(), val: Unevaluated(test_nil, [], Some(promoted[5])) }
        _32 = _51;                       // scope 0 at ui/binop/binops.rs:10:14: 10:16
        _50 = const _;                   // scope 0 at ui/binop/binops.rs:10:20: 10:22
                                         // mir::Constant
                                         // + span: ui/binop/binops.rs:10:20: 10:22
                                         // + literal: Const { ty: &(), val: Unevaluated(test_nil, [], Some(promoted[4])) }
        _33 = _50;                       // scope 0 at ui/binop/binops.rs:10:20: 10:22
        _31 = <() as PartialOrd>::le(move _32, move _33) -> bb10; // scope 0 at ui/binop/binops.rs:10:13: 10:23
                                         // mir::Constant
                                         // + span: ui/binop/binops.rs:10:13: 10:23
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a (), &'b ()) -> bool {<() as PartialOrd>::le}, val: Value(<ZST>) }
    }

    bb10: {
        _30 = Not(move _31);             // scope 0 at ui/binop/binops.rs:10:5: 10:24
        switchInt(move _30) -> [0: bb12, otherwise: bb11]; // scope 0 at ui/binop/binops.rs:10:5: 10:24
    }

    bb11: {
        _34 = core::panicking::panic(const "assertion failed: (() <= ())"); // scope 0 at ui/binop/binops.rs:10:5: 10:24
                                         // mir::Constant
                                         // + span: ui/binop/binops.rs:10:5: 10:24
                                         // + literal: Const { ty: fn(&'static str) -> ! {core::panicking::panic}, val: Value(<ZST>) }
                                         // mir::Constant
                                         // + span: no-location
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
    }

    bb12: {
        _49 = const _;                   // scope 0 at ui/binop/binops.rs:11:16: 11:18
                                         // mir::Constant
                                         // + span: ui/binop/binops.rs:11:16: 11:18
                                         // + literal: Const { ty: &(), val: Unevaluated(test_nil, [], Some(promoted[3])) }
        _38 = _49;                       // scope 0 at ui/binop/binops.rs:11:16: 11:18
        _48 = const _;                   // scope 0 at ui/binop/binops.rs:11:21: 11:23
                                         // mir::Constant
                                         // + span: ui/binop/binops.rs:11:21: 11:23
                                         // + literal: Const { ty: &(), val: Unevaluated(test_nil, [], Some(promoted[2])) }
        _39 = _48;                       // scope 0 at ui/binop/binops.rs:11:21: 11:23
        _37 = <() as PartialOrd>::gt(move _38, move _39) -> bb13; // scope 0 at ui/binop/binops.rs:11:15: 11:24
                                         // mir::Constant
                                         // + span: ui/binop/binops.rs:11:15: 11:24
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a (), &'b ()) -> bool {<() as PartialOrd>::gt}, val: Value(<ZST>) }
    }

    bb13: {
        _36 = Not(move _37);             // scope 0 at ui/binop/binops.rs:11:13: 11:25
        _35 = Not(move _36);             // scope 0 at ui/binop/binops.rs:11:5: 11:26
        switchInt(move _35) -> [0: bb15, otherwise: bb14]; // scope 0 at ui/binop/binops.rs:11:5: 11:26
    }

    bb14: {
        _40 = core::panicking::panic(const "assertion failed: (!(() > ()))"); // scope 0 at ui/binop/binops.rs:11:5: 11:26
                                         // mir::Constant
                                         // + span: ui/binop/binops.rs:11:5: 11:26
                                         // + literal: Const { ty: fn(&'static str) -> ! {core::panicking::panic}, val: Value(<ZST>) }
                                         // mir::Constant
                                         // + span: no-location
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
    }

    bb15: {
        _47 = const _;                   // scope 0 at ui/binop/binops.rs:12:14: 12:16
                                         // mir::Constant
                                         // + span: ui/binop/binops.rs:12:14: 12:16
                                         // + literal: Const { ty: &(), val: Unevaluated(test_nil, [], Some(promoted[1])) }
        _43 = _47;                       // scope 0 at ui/binop/binops.rs:12:14: 12:16
        _46 = const _;                   // scope 0 at ui/binop/binops.rs:12:20: 12:22
                                         // mir::Constant
                                         // + span: ui/binop/binops.rs:12:20: 12:22
                                         // + literal: Const { ty: &(), val: Unevaluated(test_nil, [], Some(promoted[0])) }
        _44 = _46;                       // scope 0 at ui/binop/binops.rs:12:20: 12:22
        _42 = <() as PartialOrd>::ge(move _43, move _44) -> bb16; // scope 0 at ui/binop/binops.rs:12:13: 12:23
                                         // mir::Constant
                                         // + span: ui/binop/binops.rs:12:13: 12:23
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a (), &'b ()) -> bool {<() as PartialOrd>::ge}, val: Value(<ZST>) }
    }

    bb16: {
        _41 = Not(move _42);             // scope 0 at ui/binop/binops.rs:12:5: 12:24
        switchInt(move _41) -> [0: bb18, otherwise: bb17]; // scope 0 at ui/binop/binops.rs:12:5: 12:24
    }

    bb17: {
        _45 = core::panicking::panic(const "assertion failed: (() >= ())"); // scope 0 at ui/binop/binops.rs:12:5: 12:24
                                         // mir::Constant
                                         // + span: ui/binop/binops.rs:12:5: 12:24
                                         // + literal: Const { ty: fn(&'static str) -> ! {core::panicking::panic}, val: Value(<ZST>) }
                                         // mir::Constant
                                         // + span: no-location
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
    }

    bb18: {
        return;                          // scope 0 at ui/binop/binops.rs:13:2: 13:2
    }
}

promoted[0] in test_nil: &() = {
    let mut _0: &();                     // return place in scope 0 at ui/binop/binops.rs:12:20: 12:22
    let mut _1: ();                      // in scope 0 at ui/binop/binops.rs:12:20: 12:22

    bb0: {
        _1 = ();                         // scope 0 at ui/binop/binops.rs:12:20: 12:22
        _0 = &_1;                        // scope 0 at ui/binop/binops.rs:12:20: 12:22
        return;                          // scope 0 at ui/binop/binops.rs:12:20: 12:22
    }
}

promoted[1] in test_nil: &() = {
    let mut _0: &();                     // return place in scope 0 at ui/binop/binops.rs:12:14: 12:16
    let mut _1: ();                      // in scope 0 at ui/binop/binops.rs:12:14: 12:16

    bb0: {
        _1 = ();                         // scope 0 at ui/binop/binops.rs:12:14: 12:16
        _0 = &_1;                        // scope 0 at ui/binop/binops.rs:12:14: 12:16
        return;                          // scope 0 at ui/binop/binops.rs:12:14: 12:16
    }
}

promoted[2] in test_nil: &() = {
    let mut _0: &();                     // return place in scope 0 at ui/binop/binops.rs:11:21: 11:23
    let mut _1: ();                      // in scope 0 at ui/binop/binops.rs:11:21: 11:23

    bb0: {
        _1 = ();                         // scope 0 at ui/binop/binops.rs:11:21: 11:23
        _0 = &_1;                        // scope 0 at ui/binop/binops.rs:11:21: 11:23
        return;                          // scope 0 at ui/binop/binops.rs:11:21: 11:23
    }
}

promoted[3] in test_nil: &() = {
    let mut _0: &();                     // return place in scope 0 at ui/binop/binops.rs:11:16: 11:18
    let mut _1: ();                      // in scope 0 at ui/binop/binops.rs:11:16: 11:18

    bb0: {
        _1 = ();                         // scope 0 at ui/binop/binops.rs:11:16: 11:18
        _0 = &_1;                        // scope 0 at ui/binop/binops.rs:11:16: 11:18
        return;                          // scope 0 at ui/binop/binops.rs:11:16: 11:18
    }
}

promoted[4] in test_nil: &() = {
    let mut _0: &();                     // return place in scope 0 at ui/binop/binops.rs:10:20: 10:22
    let mut _1: ();                      // in scope 0 at ui/binop/binops.rs:10:20: 10:22

    bb0: {
        _1 = ();                         // scope 0 at ui/binop/binops.rs:10:20: 10:22
        _0 = &_1;                        // scope 0 at ui/binop/binops.rs:10:20: 10:22
        return;                          // scope 0 at ui/binop/binops.rs:10:20: 10:22
    }
}

promoted[5] in test_nil: &() = {
    let mut _0: &();                     // return place in scope 0 at ui/binop/binops.rs:10:14: 10:16
    let mut _1: ();                      // in scope 0 at ui/binop/binops.rs:10:14: 10:16

    bb0: {
        _1 = ();                         // scope 0 at ui/binop/binops.rs:10:14: 10:16
        _0 = &_1;                        // scope 0 at ui/binop/binops.rs:10:14: 10:16
        return;                          // scope 0 at ui/binop/binops.rs:10:14: 10:16
    }
}

promoted[6] in test_nil: &() = {
    let mut _0: &();                     // return place in scope 0 at ui/binop/binops.rs:9:21: 9:23
    let mut _1: ();                      // in scope 0 at ui/binop/binops.rs:9:21: 9:23

    bb0: {
        _1 = ();                         // scope 0 at ui/binop/binops.rs:9:21: 9:23
        _0 = &_1;                        // scope 0 at ui/binop/binops.rs:9:21: 9:23
        return;                          // scope 0 at ui/binop/binops.rs:9:21: 9:23
    }
}

promoted[7] in test_nil: &() = {
    let mut _0: &();                     // return place in scope 0 at ui/binop/binops.rs:9:16: 9:18
    let mut _1: ();                      // in scope 0 at ui/binop/binops.rs:9:16: 9:18

    bb0: {
        _1 = ();                         // scope 0 at ui/binop/binops.rs:9:16: 9:18
        _0 = &_1;                        // scope 0 at ui/binop/binops.rs:9:16: 9:18
        return;                          // scope 0 at ui/binop/binops.rs:9:16: 9:18
    }
}

promoted[8] in test_nil: &() = {
    let mut _0: &();                     // return place in scope 0 at ui/binop/binops.rs:8:22: 8:24
    let mut _1: ();                      // in scope 0 at ui/binop/binops.rs:8:22: 8:24

    bb0: {
        _1 = ();                         // scope 0 at ui/binop/binops.rs:8:22: 8:24
        _0 = &_1;                        // scope 0 at ui/binop/binops.rs:8:22: 8:24
        return;                          // scope 0 at ui/binop/binops.rs:8:22: 8:24
    }
}

promoted[9] in test_nil: &() = {
    let mut _0: &();                     // return place in scope 0 at ui/binop/binops.rs:8:16: 8:18
    let mut _1: ();                      // in scope 0 at ui/binop/binops.rs:8:16: 8:18

    bb0: {
        _1 = ();                         // scope 0 at ui/binop/binops.rs:8:16: 8:18
        _0 = &_1;                        // scope 0 at ui/binop/binops.rs:8:16: 8:18
        return;                          // scope 0 at ui/binop/binops.rs:8:16: 8:18
    }
}

promoted[10] in test_nil: &() = {
    let mut _0: &();                     // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _1: ();                      // in scope 0 at ui/binop/binops.rs:7:20: 7:22

    bb0: {
        _1 = ();                         // scope 0 at ui/binop/binops.rs:7:20: 7:22
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    }
}

promoted[11] in test_nil: &() = {
    let mut _0: &();                     // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let mut _1: ();                      // in scope 0 at ui/binop/binops.rs:7:16: 7:18

    bb0: {
        _1 = ();                         // scope 0 at ui/binop/binops.rs:7:16: 7:18
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    }
}

fn test_bool() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/binop/binops.rs:15:16: 15:16
    let mut _1: (&bool, &bool);          // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _2: &bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let mut _3: &bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let _4: &bool;                       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
    let _5: &bool;                       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
    let mut _7: (&bool, &bool);          // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _8: &bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let mut _9: &bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let _10: &bool;                      // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
    let _11: &bool;                      // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
    let mut _13: (&bool, &bool);         // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _14: &bool;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let mut _15: &bool;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let _16: &bool;                      // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
    let _17: &bool;                      // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
    let mut _19: (&bool, &bool);         // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _20: &bool;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let mut _21: &bool;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let _22: &bool;                      // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
    let _23: &bool;                      // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
    let mut _25: (&bool, &bool);         // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _26: &bool;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let mut _27: &bool;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let _28: &bool;                      // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
    let _29: &bool;                      // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
    let mut _31: (&bool, &bool);         // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _32: &bool;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let mut _33: &bool;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let _34: &bool;                      // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
    let _35: &bool;                      // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
    let mut _37: (&bool, &bool);         // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _38: &bool;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let mut _39: &bool;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let _40: &bool;                      // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
    let _41: &bool;                      // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
    let mut _43: (&bool, &bool);         // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _44: &bool;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let mut _45: &bool;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let _46: &bool;                      // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
    let _47: &bool;                      // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
    let mut _49: (&bool, &bool);         // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _50: &bool;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let mut _51: &bool;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let _52: &bool;                      // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
    let _53: &bool;                      // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
    let mut _55: &bool;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _56: &bool;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let mut _57: &bool;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _58: &bool;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let mut _59: &bool;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _60: &bool;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let mut _61: &bool;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _62: &bool;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let mut _63: &bool;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _64: &bool;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let mut _65: &bool;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _66: &bool;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let mut _67: &bool;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _68: &bool;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let mut _69: &bool;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _70: &bool;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let mut _71: &bool;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _72: &bool;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    scope 1 {
        debug left_val => _4;            // in scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        debug right_val => _5;           // in scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        let _6: core::panicking::AssertKind; // in scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
        scope 2 {
            debug kind => _6;            // in scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
        }
    }
    scope 3 {
        debug left_val => _10;           // in scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        debug right_val => _11;          // in scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        let _12: core::panicking::AssertKind; // in scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
        scope 4 {
            debug kind => _12;           // in scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
        }
    }
    scope 5 {
        debug left_val => _16;           // in scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        debug right_val => _17;          // in scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        let _18: core::panicking::AssertKind; // in scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
        scope 6 {
            debug kind => _18;           // in scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
        }
    }
    scope 7 {
        debug left_val => _22;           // in scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        debug right_val => _23;          // in scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        let _24: core::panicking::AssertKind; // in scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
        scope 8 {
            debug kind => _24;           // in scope 8 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
        }
    }
    scope 9 {
        debug left_val => _28;           // in scope 9 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        debug right_val => _29;          // in scope 9 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        let _30: core::panicking::AssertKind; // in scope 9 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
        scope 10 {
            debug kind => _30;           // in scope 10 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
        }
    }
    scope 11 {
        debug left_val => _34;           // in scope 11 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        debug right_val => _35;          // in scope 11 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        let _36: core::panicking::AssertKind; // in scope 11 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
        scope 12 {
            debug kind => _36;           // in scope 12 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
        }
    }
    scope 13 {
        debug left_val => _40;           // in scope 13 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        debug right_val => _41;          // in scope 13 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        let _42: core::panicking::AssertKind; // in scope 13 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
        scope 14 {
            debug kind => _42;           // in scope 14 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
        }
    }
    scope 15 {
        debug left_val => _46;           // in scope 15 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        debug right_val => _47;          // in scope 15 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        let _48: core::panicking::AssertKind; // in scope 15 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
        scope 16 {
            debug kind => _48;           // in scope 16 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
        }
    }
    scope 17 {
        debug left_val => _52;           // in scope 17 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        debug right_val => _53;          // in scope 17 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        let _54: core::panicking::AssertKind; // in scope 17 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
        scope 18 {
            debug kind => _54;           // in scope 18 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
        }
    }

    bb0: {
        _72 = const _;                   // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
                                         // + literal: Const { ty: &bool, val: Unevaluated(test_bool, [], Some(promoted[17])) }
        _2 = _72;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _71 = const _;                   // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // + literal: Const { ty: &bool, val: Unevaluated(test_bool, [], Some(promoted[16])) }
        _3 = _71;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _1 = (move _2, move _3);         // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _4 = (_1.0: &bool);              // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _5 = (_1.1: &bool);              // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _70 = const _;                   // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
                                         // + literal: Const { ty: &bool, val: Unevaluated(test_bool, [], Some(promoted[15])) }
        _8 = _70;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _69 = const _;                   // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // + literal: Const { ty: &bool, val: Unevaluated(test_bool, [], Some(promoted[14])) }
        _9 = _69;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _7 = (move _8, move _9);         // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _10 = (_7.0: &bool);             // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _11 = (_7.1: &bool);             // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _68 = const _;                   // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
                                         // + literal: Const { ty: &bool, val: Unevaluated(test_bool, [], Some(promoted[13])) }
        _14 = _68;                       // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _67 = const _;                   // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // + literal: Const { ty: &bool, val: Unevaluated(test_bool, [], Some(promoted[12])) }
        _15 = _67;                       // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _13 = (move _14, move _15);      // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _16 = (_13.0: &bool);            // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _17 = (_13.1: &bool);            // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _66 = const _;                   // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
                                         // + literal: Const { ty: &bool, val: Unevaluated(test_bool, [], Some(promoted[11])) }
        _20 = _66;                       // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _65 = const _;                   // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // + literal: Const { ty: &bool, val: Unevaluated(test_bool, [], Some(promoted[10])) }
        _21 = _65;                       // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _19 = (move _20, move _21);      // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _22 = (_19.0: &bool);            // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _23 = (_19.1: &bool);            // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _64 = const _;                   // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
                                         // + literal: Const { ty: &bool, val: Unevaluated(test_bool, [], Some(promoted[9])) }
        _26 = _64;                       // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _63 = const _;                   // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // + literal: Const { ty: &bool, val: Unevaluated(test_bool, [], Some(promoted[8])) }
        _27 = _63;                       // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _25 = (move _26, move _27);      // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _28 = (_25.0: &bool);            // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _29 = (_25.1: &bool);            // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _62 = const _;                   // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
                                         // + literal: Const { ty: &bool, val: Unevaluated(test_bool, [], Some(promoted[7])) }
        _32 = _62;                       // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _61 = const _;                   // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // + literal: Const { ty: &bool, val: Unevaluated(test_bool, [], Some(promoted[6])) }
        _33 = _61;                       // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _31 = (move _32, move _33);      // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _34 = (_31.0: &bool);            // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _35 = (_31.1: &bool);            // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _60 = const _;                   // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
                                         // + literal: Const { ty: &bool, val: Unevaluated(test_bool, [], Some(promoted[5])) }
        _38 = _60;                       // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _59 = const _;                   // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // + literal: Const { ty: &bool, val: Unevaluated(test_bool, [], Some(promoted[4])) }
        _39 = _59;                       // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _37 = (move _38, move _39);      // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _40 = (_37.0: &bool);            // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _41 = (_37.1: &bool);            // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _58 = const _;                   // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
                                         // + literal: Const { ty: &bool, val: Unevaluated(test_bool, [], Some(promoted[3])) }
        _44 = _58;                       // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _57 = const _;                   // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // + literal: Const { ty: &bool, val: Unevaluated(test_bool, [], Some(promoted[2])) }
        _45 = _57;                       // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _43 = (move _44, move _45);      // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _46 = (_43.0: &bool);            // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _47 = (_43.1: &bool);            // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _56 = const _;                   // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
                                         // + literal: Const { ty: &bool, val: Unevaluated(test_bool, [], Some(promoted[1])) }
        _50 = _56;                       // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _55 = const _;                   // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // + literal: Const { ty: &bool, val: Unevaluated(test_bool, [], Some(promoted[0])) }
        _51 = _55;                       // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _49 = (move _50, move _51);      // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _52 = (_49.0: &bool);            // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _53 = (_49.1: &bool);            // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        return;                          // scope 0 at ui/binop/binops.rs:36:2: 36:2
    }
}

promoted[0] in test_bool: &bool = {
    let mut _0: &bool;                   // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _1: bool;                    // in scope 0 at ui/binop/binops.rs:35:29: 35:34

    bb0: {
        _1 = const false;                // scope 0 at ui/binop/binops.rs:35:29: 35:34
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    }
}

promoted[1] in test_bool: &bool = {
    let mut _0: &bool;                   // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let mut _1: bool;                    // in scope 0 at ui/binop/binops.rs:35:16: 35:27

    bb0: {
        _1 = BitXor(const true, const true); // scope 0 at ui/binop/binops.rs:35:16: 35:27
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    }
}

promoted[2] in test_bool: &bool = {
    let mut _0: &bool;                   // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _1: bool;                    // in scope 0 at ui/binop/binops.rs:34:30: 34:34

    bb0: {
        _1 = const true;                 // scope 0 at ui/binop/binops.rs:34:30: 34:34
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    }
}

promoted[3] in test_bool: &bool = {
    let mut _0: &bool;                   // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let mut _1: bool;                    // in scope 0 at ui/binop/binops.rs:34:16: 34:28

    bb0: {
        _1 = BitXor(const true, const false); // scope 0 at ui/binop/binops.rs:34:16: 34:28
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    }
}

promoted[4] in test_bool: &bool = {
    let mut _0: &bool;                   // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _1: bool;                    // in scope 0 at ui/binop/binops.rs:33:31: 33:36

    bb0: {
        _1 = const false;                // scope 0 at ui/binop/binops.rs:33:31: 33:36
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    }
}

promoted[5] in test_bool: &bool = {
    let mut _0: &bool;                   // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let mut _1: bool;                    // in scope 0 at ui/binop/binops.rs:33:16: 33:29

    bb0: {
        _1 = BitXor(const false, const false); // scope 0 at ui/binop/binops.rs:33:16: 33:29
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    }
}

promoted[6] in test_bool: &bool = {
    let mut _0: &bool;                   // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _1: bool;                    // in scope 0 at ui/binop/binops.rs:32:29: 32:33

    bb0: {
        _1 = const true;                 // scope 0 at ui/binop/binops.rs:32:29: 32:33
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    }
}

promoted[7] in test_bool: &bool = {
    let mut _0: &bool;                   // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let mut _1: bool;                    // in scope 0 at ui/binop/binops.rs:32:16: 32:27

    bb0: {
        _1 = BitOr(const true, const true); // scope 0 at ui/binop/binops.rs:32:16: 32:27
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    }
}

promoted[8] in test_bool: &bool = {
    let mut _0: &bool;                   // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _1: bool;                    // in scope 0 at ui/binop/binops.rs:31:30: 31:34

    bb0: {
        _1 = const true;                 // scope 0 at ui/binop/binops.rs:31:30: 31:34
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    }
}

promoted[9] in test_bool: &bool = {
    let mut _0: &bool;                   // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let mut _1: bool;                    // in scope 0 at ui/binop/binops.rs:31:16: 31:28

    bb0: {
        _1 = BitOr(const true, const false); // scope 0 at ui/binop/binops.rs:31:16: 31:28
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    }
}

promoted[10] in test_bool: &bool = {
    let mut _0: &bool;                   // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _1: bool;                    // in scope 0 at ui/binop/binops.rs:30:31: 30:36

    bb0: {
        _1 = const false;                // scope 0 at ui/binop/binops.rs:30:31: 30:36
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    }
}

promoted[11] in test_bool: &bool = {
    let mut _0: &bool;                   // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let mut _1: bool;                    // in scope 0 at ui/binop/binops.rs:30:16: 30:29

    bb0: {
        _1 = BitOr(const false, const false); // scope 0 at ui/binop/binops.rs:30:16: 30:29
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    }
}

promoted[12] in test_bool: &bool = {
    let mut _0: &bool;                   // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _1: bool;                    // in scope 0 at ui/binop/binops.rs:29:29: 29:33

    bb0: {
        _1 = const true;                 // scope 0 at ui/binop/binops.rs:29:29: 29:33
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    }
}

promoted[13] in test_bool: &bool = {
    let mut _0: &bool;                   // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let mut _1: bool;                    // in scope 0 at ui/binop/binops.rs:29:16: 29:27

    bb0: {
        _1 = BitAnd(const true, const true); // scope 0 at ui/binop/binops.rs:29:16: 29:27
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    }
}

promoted[14] in test_bool: &bool = {
    let mut _0: &bool;                   // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _1: bool;                    // in scope 0 at ui/binop/binops.rs:28:30: 28:35

    bb0: {
        _1 = const false;                // scope 0 at ui/binop/binops.rs:28:30: 28:35
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    }
}

promoted[15] in test_bool: &bool = {
    let mut _0: &bool;                   // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let mut _1: bool;                    // in scope 0 at ui/binop/binops.rs:28:16: 28:28

    bb0: {
        _1 = BitAnd(const true, const false); // scope 0 at ui/binop/binops.rs:28:16: 28:28
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    }
}

promoted[16] in test_bool: &bool = {
    let mut _0: &bool;                   // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _1: bool;                    // in scope 0 at ui/binop/binops.rs:27:31: 27:36

    bb0: {
        _1 = const false;                // scope 0 at ui/binop/binops.rs:27:31: 27:36
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    }
}

promoted[17] in test_bool: &bool = {
    let mut _0: &bool;                   // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let mut _1: bool;                    // in scope 0 at ui/binop/binops.rs:27:16: 27:29

    bb0: {
        _1 = BitAnd(const false, const false); // scope 0 at ui/binop/binops.rs:27:16: 27:29
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    }
}

fn test_ptr() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/binop/binops.rs:38:15: 38:15
    let mut _4: (&*const u8, &*const u8); // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _5: &*const u8;              // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let mut _6: &*const u8;              // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _9: bool;                    // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    let mut _10: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
    let mut _11: *const u8;              // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
    let mut _12: *const u8;              // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
    let _14: !;                          // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
    let mut _15: core::panicking::AssertKind; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
    let mut _16: &*const u8;             // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let _17: &*const u8;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let mut _18: &*const u8;             // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let _19: &*const u8;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let mut _20: std::option::Option<std::fmt::Arguments<'_>>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
    let mut _21: bool;                   // in scope 0 at ui/binop/binops.rs:45:9: 45:26
    let mut _22: bool;                   // in scope 0 at ui/binop/binops.rs:45:17: 45:25
    let mut _23: *const u8;              // in scope 0 at ui/binop/binops.rs:45:17: 45:19
    let mut _24: *const u8;              // in scope 0 at ui/binop/binops.rs:45:23: 45:25
    let mut _25: !;                      // in scope 0 at ui/binop/binops.rs:45:9: 45:26
    let mut _26: bool;                   // in scope 0 at ui/binop/binops.rs:46:9: 46:25
    let mut _27: bool;                   // in scope 0 at ui/binop/binops.rs:46:17: 46:24
    let mut _28: *const u8;              // in scope 0 at ui/binop/binops.rs:46:17: 46:19
    let mut _29: *const u8;              // in scope 0 at ui/binop/binops.rs:46:22: 46:24
    let mut _30: !;                      // in scope 0 at ui/binop/binops.rs:46:9: 46:25
    let mut _31: bool;                   // in scope 0 at ui/binop/binops.rs:47:9: 47:26
    let mut _32: bool;                   // in scope 0 at ui/binop/binops.rs:47:17: 47:25
    let mut _33: *const u8;              // in scope 0 at ui/binop/binops.rs:47:17: 47:19
    let mut _34: *const u8;              // in scope 0 at ui/binop/binops.rs:47:23: 47:25
    let mut _35: !;                      // in scope 0 at ui/binop/binops.rs:47:9: 47:26
    let mut _36: bool;                   // in scope 0 at ui/binop/binops.rs:48:9: 48:25
    let mut _37: bool;                   // in scope 0 at ui/binop/binops.rs:48:17: 48:24
    let mut _38: *const u8;              // in scope 0 at ui/binop/binops.rs:48:17: 48:19
    let mut _39: *const u8;              // in scope 0 at ui/binop/binops.rs:48:22: 48:24
    let mut _40: !;                      // in scope 0 at ui/binop/binops.rs:48:9: 48:25
    let mut _41: bool;                   // in scope 0 at ui/binop/binops.rs:49:9: 49:26
    let mut _42: bool;                   // in scope 0 at ui/binop/binops.rs:49:17: 49:25
    let mut _43: *const u8;              // in scope 0 at ui/binop/binops.rs:49:17: 49:19
    let mut _44: *const u8;              // in scope 0 at ui/binop/binops.rs:49:23: 49:25
    let mut _45: !;                      // in scope 0 at ui/binop/binops.rs:49:9: 49:26
    let mut _46: bool;                   // in scope 0 at ui/binop/binops.rs:50:9: 50:26
    let mut _47: bool;                   // in scope 0 at ui/binop/binops.rs:50:17: 50:25
    let mut _48: *const u8;              // in scope 0 at ui/binop/binops.rs:50:17: 50:19
    let mut _49: *const u8;              // in scope 0 at ui/binop/binops.rs:50:23: 50:25
    let mut _50: !;                      // in scope 0 at ui/binop/binops.rs:50:9: 50:26
    let mut _51: bool;                   // in scope 0 at ui/binop/binops.rs:51:9: 51:26
    let mut _52: bool;                   // in scope 0 at ui/binop/binops.rs:51:17: 51:25
    let mut _53: *const u8;              // in scope 0 at ui/binop/binops.rs:51:17: 51:19
    let mut _54: *const u8;              // in scope 0 at ui/binop/binops.rs:51:23: 51:25
    let mut _55: !;                      // in scope 0 at ui/binop/binops.rs:51:9: 51:26
    scope 1 {
        let _1: *const u8;               // in scope 1 at ui/binop/binops.rs:40:13: 40:15
        scope 2 {
            debug p1 => _1;              // in scope 2 at ui/binop/binops.rs:40:13: 40:15
            let _2: *const u8;           // in scope 2 at ui/binop/binops.rs:41:13: 41:15
            scope 3 {
                debug p2 => _2;          // in scope 3 at ui/binop/binops.rs:41:13: 41:15
                let _3: *const u8;       // in scope 3 at ui/binop/binops.rs:42:13: 42:15
                scope 4 {
                    debug p3 => _3;      // in scope 4 at ui/binop/binops.rs:42:13: 42:15
                    let _7: &*const u8;  // in scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
                    let _8: &*const u8;  // in scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
                    scope 5 {
                        debug left_val => _7; // in scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
                        debug right_val => _8; // in scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
                        let _13: core::panicking::AssertKind; // in scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                        scope 6 {
                            debug kind => _13; // in scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                        }
                    }
                }
            }
        }
    }

    bb0: {
        _1 = transmute::<usize, *const u8>(const 0_usize) -> bb1; // scope 1 at ui/binop/binops.rs:40:29: 40:59
                                         // mir::Constant
                                         // + span: ui/binop/binops.rs:40:29: 40:50
                                         // + literal: Const { ty: unsafe extern "rust-intrinsic" fn(usize) -> *const u8 {transmute::<usize, *const u8>}, val: Value(<ZST>) }
    }

    bb1: {
        _2 = transmute::<usize, *const u8>(const 0_usize) -> bb2; // scope 2 at ui/binop/binops.rs:41:29: 41:59
                                         // mir::Constant
                                         // + span: ui/binop/binops.rs:41:29: 41:50
                                         // + literal: Const { ty: unsafe extern "rust-intrinsic" fn(usize) -> *const u8 {transmute::<usize, *const u8>}, val: Value(<ZST>) }
    }

    bb2: {
        _3 = transmute::<usize, *const u8>(const 1_usize) -> bb3; // scope 3 at ui/binop/binops.rs:42:29: 42:59
                                         // mir::Constant
                                         // + span: ui/binop/binops.rs:42:29: 42:50
                                         // + literal: Const { ty: unsafe extern "rust-intrinsic" fn(usize) -> *const u8 {transmute::<usize, *const u8>}, val: Value(<ZST>) }
    }

    bb3: {
        _5 = &_1;                        // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _6 = &_2;                        // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _4 = (move _5, move _6);         // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _7 = (_4.0: &*const u8);         // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _8 = (_4.1: &*const u8);         // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _11 = (*_7);                     // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
        _12 = (*_8);                     // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
        _10 = Eq(move _11, move _12);    // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
        _9 = Not(move _10);              // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
        switchInt(move _9) -> [0: bb5, otherwise: bb4]; // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    }

    bb4: {
        _13 = const core::panicking::AssertKind::Eq; // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _15 = const core::panicking::AssertKind::Eq; // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _17 = _7;                        // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _16 = _17;                       // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _19 = _8;                        // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _18 = _19;                       // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _20 = Option::<Arguments<'_>>::None; // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
        _14 = core::panicking::assert_failed::<*const u8, *const u8>(move _15, move _16, move _18, move _20); // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:53
                                         // + literal: Const { ty: for<'a, 'b, 'c> fn(core::panicking::AssertKind, &'a *const u8, &'b *const u8, Option<Arguments<'c>>) -> ! {core::panicking::assert_failed::<*const u8, *const u8>}, val: Value(<ZST>) }
    }

    bb5: {
        _23 = _1;                        // scope 4 at ui/binop/binops.rs:45:17: 45:19
        _24 = _3;                        // scope 4 at ui/binop/binops.rs:45:23: 45:25
        _22 = Ne(move _23, move _24);    // scope 4 at ui/binop/binops.rs:45:17: 45:25
        _21 = Not(move _22);             // scope 4 at ui/binop/binops.rs:45:9: 45:26
        switchInt(move _21) -> [0: bb7, otherwise: bb6]; // scope 4 at ui/binop/binops.rs:45:9: 45:26
    }

    bb6: {
        _25 = core::panicking::panic(const "assertion failed: p1 != p3"); // scope 4 at ui/binop/binops.rs:45:9: 45:26
                                         // mir::Constant
                                         // + span: ui/binop/binops.rs:45:9: 45:26
                                         // + literal: Const { ty: fn(&'static str) -> ! {core::panicking::panic}, val: Value(<ZST>) }
                                         // mir::Constant
                                         // + span: no-location
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
    }

    bb7: {
        _28 = _1;                        // scope 4 at ui/binop/binops.rs:46:17: 46:19
        _29 = _3;                        // scope 4 at ui/binop/binops.rs:46:22: 46:24
        _27 = Lt(move _28, move _29);    // scope 4 at ui/binop/binops.rs:46:17: 46:24
        _26 = Not(move _27);             // scope 4 at ui/binop/binops.rs:46:9: 46:25
        switchInt(move _26) -> [0: bb9, otherwise: bb8]; // scope 4 at ui/binop/binops.rs:46:9: 46:25
    }

    bb8: {
        _30 = core::panicking::panic(const "assertion failed: p1 < p3"); // scope 4 at ui/binop/binops.rs:46:9: 46:25
                                         // mir::Constant
                                         // + span: ui/binop/binops.rs:46:9: 46:25
                                         // + literal: Const { ty: fn(&'static str) -> ! {core::panicking::panic}, val: Value(<ZST>) }
                                         // mir::Constant
                                         // + span: no-location
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
    }

    bb9: {
        _33 = _1;                        // scope 4 at ui/binop/binops.rs:47:17: 47:19
        _34 = _3;                        // scope 4 at ui/binop/binops.rs:47:23: 47:25
        _32 = Le(move _33, move _34);    // scope 4 at ui/binop/binops.rs:47:17: 47:25
        _31 = Not(move _32);             // scope 4 at ui/binop/binops.rs:47:9: 47:26
        switchInt(move _31) -> [0: bb11, otherwise: bb10]; // scope 4 at ui/binop/binops.rs:47:9: 47:26
    }

    bb10: {
        _35 = core::panicking::panic(const "assertion failed: p1 <= p3"); // scope 4 at ui/binop/binops.rs:47:9: 47:26
                                         // mir::Constant
                                         // + span: ui/binop/binops.rs:47:9: 47:26
                                         // + literal: Const { ty: fn(&'static str) -> ! {core::panicking::panic}, val: Value(<ZST>) }
                                         // mir::Constant
                                         // + span: no-location
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
    }

    bb11: {
        _38 = _3;                        // scope 4 at ui/binop/binops.rs:48:17: 48:19
        _39 = _1;                        // scope 4 at ui/binop/binops.rs:48:22: 48:24
        _37 = Gt(move _38, move _39);    // scope 4 at ui/binop/binops.rs:48:17: 48:24
        _36 = Not(move _37);             // scope 4 at ui/binop/binops.rs:48:9: 48:25
        switchInt(move _36) -> [0: bb13, otherwise: bb12]; // scope 4 at ui/binop/binops.rs:48:9: 48:25
    }

    bb12: {
        _40 = core::panicking::panic(const "assertion failed: p3 > p1"); // scope 4 at ui/binop/binops.rs:48:9: 48:25
                                         // mir::Constant
                                         // + span: ui/binop/binops.rs:48:9: 48:25
                                         // + literal: Const { ty: fn(&'static str) -> ! {core::panicking::panic}, val: Value(<ZST>) }
                                         // mir::Constant
                                         // + span: no-location
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
    }

    bb13: {
        _43 = _3;                        // scope 4 at ui/binop/binops.rs:49:17: 49:19
        _44 = _3;                        // scope 4 at ui/binop/binops.rs:49:23: 49:25
        _42 = Ge(move _43, move _44);    // scope 4 at ui/binop/binops.rs:49:17: 49:25
        _41 = Not(move _42);             // scope 4 at ui/binop/binops.rs:49:9: 49:26
        switchInt(move _41) -> [0: bb15, otherwise: bb14]; // scope 4 at ui/binop/binops.rs:49:9: 49:26
    }

    bb14: {
        _45 = core::panicking::panic(const "assertion failed: p3 >= p3"); // scope 4 at ui/binop/binops.rs:49:9: 49:26
                                         // mir::Constant
                                         // + span: ui/binop/binops.rs:49:9: 49:26
                                         // + literal: Const { ty: fn(&'static str) -> ! {core::panicking::panic}, val: Value(<ZST>) }
                                         // mir::Constant
                                         // + span: no-location
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
    }

    bb15: {
        _48 = _1;                        // scope 4 at ui/binop/binops.rs:50:17: 50:19
        _49 = _2;                        // scope 4 at ui/binop/binops.rs:50:23: 50:25
        _47 = Le(move _48, move _49);    // scope 4 at ui/binop/binops.rs:50:17: 50:25
        _46 = Not(move _47);             // scope 4 at ui/binop/binops.rs:50:9: 50:26
        switchInt(move _46) -> [0: bb17, otherwise: bb16]; // scope 4 at ui/binop/binops.rs:50:9: 50:26
    }

    bb16: {
        _50 = core::panicking::panic(const "assertion failed: p1 <= p2"); // scope 4 at ui/binop/binops.rs:50:9: 50:26
                                         // mir::Constant
                                         // + span: ui/binop/binops.rs:50:9: 50:26
                                         // + literal: Const { ty: fn(&'static str) -> ! {core::panicking::panic}, val: Value(<ZST>) }
                                         // mir::Constant
                                         // + span: no-location
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
    }

    bb17: {
        _53 = _1;                        // scope 4 at ui/binop/binops.rs:51:17: 51:19
        _54 = _2;                        // scope 4 at ui/binop/binops.rs:51:23: 51:25
        _52 = Ge(move _53, move _54);    // scope 4 at ui/binop/binops.rs:51:17: 51:25
        _51 = Not(move _52);             // scope 4 at ui/binop/binops.rs:51:9: 51:26
        switchInt(move _51) -> [0: bb19, otherwise: bb18]; // scope 4 at ui/binop/binops.rs:51:9: 51:26
    }

    bb18: {
        _55 = core::panicking::panic(const "assertion failed: p1 >= p2"); // scope 4 at ui/binop/binops.rs:51:9: 51:26
                                         // mir::Constant
                                         // + span: ui/binop/binops.rs:51:9: 51:26
                                         // + literal: Const { ty: fn(&'static str) -> ! {core::panicking::panic}, val: Value(<ZST>) }
                                         // mir::Constant
                                         // + span: no-location
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
    }

    bb19: {
        return;                          // scope 0 at ui/binop/binops.rs:53:2: 53:2
    }
}

fn <impl at ui/binop/binops.rs:55:10: 55:19>::eq(_1: &p, _2: &p) -> bool {
    debug self => _1;                    // in scope 0 at ui/binop/binops.rs:55:10: 55:19
    debug other => _2;                   // in scope 0 at ui/binop/binops.rs:55:10: 55:19
    let mut _0: bool;                    // return place in scope 0 at ui/binop/binops.rs:55:10: 55:19
    let mut _3: bool;                    // in scope 0 at ui/binop/binops.rs:57:3: 57:11
    let mut _4: isize;                   // in scope 0 at ui/binop/binops.rs:57:3: 57:11
    let mut _5: isize;                   // in scope 0 at ui/binop/binops.rs:57:3: 57:11
    let mut _6: bool;                    // in scope 0 at ui/binop/binops.rs:58:3: 58:11
    let mut _7: isize;                   // in scope 0 at ui/binop/binops.rs:58:3: 58:11
    let mut _8: isize;                   // in scope 0 at ui/binop/binops.rs:58:3: 58:11

    bb0: {
        _4 = ((*_1).0: isize);           // scope 0 at ui/binop/binops.rs:57:3: 57:11
        _5 = ((*_2).0: isize);           // scope 0 at ui/binop/binops.rs:57:3: 57:11
        _3 = Eq(move _4, move _5);       // scope 0 at ui/binop/binops.rs:57:3: 57:11
        switchInt(move _3) -> [0: bb1, otherwise: bb2]; // scope 0 at ui/binop/binops.rs:58:3: 58:11
    }

    bb1: {
        _0 = const false;                // scope 0 at ui/binop/binops.rs:58:3: 58:11
        goto -> bb3;                     // scope 0 at ui/binop/binops.rs:58:3: 58:11
    }

    bb2: {
        _7 = ((*_1).1: isize);           // scope 0 at ui/binop/binops.rs:58:3: 58:11
        _8 = ((*_2).1: isize);           // scope 0 at ui/binop/binops.rs:58:3: 58:11
        _6 = Eq(move _7, move _8);       // scope 0 at ui/binop/binops.rs:58:3: 58:11
        _0 = move _6;                    // scope 0 at ui/binop/binops.rs:58:3: 58:11
        goto -> bb3;                     // scope 0 at ui/binop/binops.rs:58:3: 58:11
    }

    bb3: {
        return;                          // scope 0 at ui/binop/binops.rs:55:19: 55:19
    }
}

fn <impl at ui/binop/binops.rs:55:21: 55:26>::fmt(_1: &p, _2: &mut Formatter<'_>) -> Result<(), std::fmt::Error> {
    debug self => _1;                    // in scope 0 at ui/binop/binops.rs:55:21: 55:26
    debug f => _2;                       // in scope 0 at ui/binop/binops.rs:55:21: 55:26
    let mut _0: std::result::Result<(), std::fmt::Error>; // return place in scope 0 at ui/binop/binops.rs:55:21: 55:26
    let mut _3: &mut std::fmt::Formatter<'_>; // in scope 0 at ui/binop/binops.rs:55:21: 55:26
    let mut _4: &str;                    // in scope 0 at ui/binop/binops.rs:55:21: 55:26
    let _5: &str;                        // in scope 0 at ui/binop/binops.rs:55:21: 55:26
    let mut _6: &str;                    // in scope 0 at ui/binop/binops.rs:57:3: 57:11
    let _7: &str;                        // in scope 0 at ui/binop/binops.rs:57:3: 57:11
    let mut _8: &dyn std::fmt::Debug;    // in scope 0 at ui/binop/binops.rs:57:3: 57:11
    let mut _9: &isize;                  // in scope 0 at ui/binop/binops.rs:57:3: 57:11
    let _10: &isize;                     // in scope 0 at ui/binop/binops.rs:57:3: 57:11
    let mut _11: &str;                   // in scope 0 at ui/binop/binops.rs:58:3: 58:11
    let _12: &str;                       // in scope 0 at ui/binop/binops.rs:58:3: 58:11
    let mut _13: &dyn std::fmt::Debug;   // in scope 0 at ui/binop/binops.rs:58:3: 58:11
    let mut _14: &&isize;                // in scope 0 at ui/binop/binops.rs:58:3: 58:11
    let _15: &&isize;                    // in scope 0 at ui/binop/binops.rs:58:3: 58:11
    let _16: &isize;                     // in scope 0 at ui/binop/binops.rs:58:3: 58:11

    bb0: {
        _3 = &mut (*_2);                 // scope 0 at ui/binop/binops.rs:55:21: 55:26
        _5 = const "p";                  // scope 0 at ui/binop/binops.rs:55:21: 55:26
                                         // mir::Constant
                                         // + span: ui/binop/binops.rs:55:21: 55:26
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _4 = _5;                         // scope 0 at ui/binop/binops.rs:55:21: 55:26
        _7 = const "x";                  // scope 0 at ui/binop/binops.rs:57:3: 57:11
                                         // mir::Constant
                                         // + span: ui/binop/binops.rs:57:3: 57:11
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _6 = _7;                         // scope 0 at ui/binop/binops.rs:57:3: 57:11
        _10 = &((*_1).0: isize);         // scope 0 at ui/binop/binops.rs:57:3: 57:11
        _9 = _10;                        // scope 0 at ui/binop/binops.rs:57:3: 57:11
        _8 = move _9 as &dyn std::fmt::Debug (Pointer(Unsize)); // scope 0 at ui/binop/binops.rs:57:3: 57:11
        _12 = const "y";                 // scope 0 at ui/binop/binops.rs:58:3: 58:11
                                         // mir::Constant
                                         // + span: ui/binop/binops.rs:58:3: 58:11
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _11 = _12;                       // scope 0 at ui/binop/binops.rs:58:3: 58:11
        _16 = &((*_1).1: isize);         // scope 0 at ui/binop/binops.rs:58:3: 58:11
        _15 = &_16;                      // scope 0 at ui/binop/binops.rs:58:3: 58:11
        _14 = _15;                       // scope 0 at ui/binop/binops.rs:58:3: 58:11
        _13 = move _14 as &dyn std::fmt::Debug (Pointer(Unsize)); // scope 0 at ui/binop/binops.rs:58:3: 58:11
        _0 = Formatter::<'_>::debug_struct_field2_finish(move _3, move _4, move _6, move _8, move _11, move _13) -> bb1; // scope 0 at ui/binop/binops.rs:55:21: 55:26
                                         // mir::Constant
                                         // + span: ui/binop/binops.rs:55:21: 55:26
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: for<'b, 'a, 'c, 'd, 'e, 'f> fn(&'b mut Formatter<'_>, &'a str, &'c str, &'d (dyn Debug + 'd), &'e str, &'f (dyn Debug + 'f)) -> Result<(), std::fmt::Error> {Formatter::<'_>::debug_struct_field2_finish}, val: Value(<ZST>) }
    }

    bb1: {
        return;                          // scope 0 at ui/binop/binops.rs:55:26: 55:26
    }
}

fn p(_1: isize, _2: isize) -> p {
    debug x => _1;                       // in scope 0 at ui/binop/binops.rs:61:6: 61:7
    debug y => _2;                       // in scope 0 at ui/binop/binops.rs:61:16: 61:17
    let mut _0: p;                       // return place in scope 0 at ui/binop/binops.rs:61:29: 61:30
    let mut _3: isize;                   // in scope 0 at ui/binop/binops.rs:63:12: 63:13
    let mut _4: isize;                   // in scope 0 at ui/binop/binops.rs:64:12: 64:13

    bb0: {
        _3 = _1;                         // scope 0 at ui/binop/binops.rs:63:12: 63:13
        _4 = _2;                         // scope 0 at ui/binop/binops.rs:64:12: 64:13
        _0 = p { x: move _3, y: move _4 }; // scope 0 at ui/binop/binops.rs:62:5: 65:6
        return;                          // scope 0 at ui/binop/binops.rs:66:2: 66:2
    }
}

fn test_class() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/binop/binops.rs:68:17: 68:17
    let _1: p;                           // in scope 0 at ui/binop/binops.rs:69:7: 69:8
    let _3: ();                          // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:62
    let mut _4: std::fmt::Arguments<'_>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _5: &[&str];                 // in scope 0 at ui/binop/binops.rs:73:12: 73:32
    let mut _6: &[&str; 3];              // in scope 0 at ui/binop/binops.rs:73:12: 73:32
    let _7: &[&str; 3];                  // in scope 0 at ui/binop/binops.rs:73:12: 73:32
    let mut _8: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _9: &[core::fmt::ArgumentV1<'_>; 2]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let _10: &[core::fmt::ArgumentV1<'_>; 2]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let _11: [core::fmt::ArgumentV1<'_>; 2]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _12: core::fmt::ArgumentV1<'_>; // in scope 0 at ui/binop/binops.rs:74:10: 74:56
    let mut _13: &usize;                 // in scope 0 at ui/binop/binops.rs:74:10: 74:56
    let _14: &usize;                     // in scope 0 at ui/binop/binops.rs:74:10: 74:56
    let _15: usize;                      // in scope 0 at ui/binop/binops.rs:74:10: 74:56
    let mut _16: *const p;               // in scope 0 at ui/binop/binops.rs:74:52: 74:54
    let _17: &p;                         // in scope 0 at ui/binop/binops.rs:74:52: 74:54
    let mut _18: core::fmt::ArgumentV1<'_>; // in scope 0 at ui/binop/binops.rs:75:10: 75:56
    let mut _19: &usize;                 // in scope 0 at ui/binop/binops.rs:75:10: 75:56
    let _20: &usize;                     // in scope 0 at ui/binop/binops.rs:75:10: 75:56
    let _21: usize;                      // in scope 0 at ui/binop/binops.rs:75:10: 75:56
    let mut _22: *const p;               // in scope 0 at ui/binop/binops.rs:75:52: 75:54
    let _23: &p;                         // in scope 0 at ui/binop/binops.rs:75:52: 75:54
    let mut _24: (&p, &p);               // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _25: &p;                     // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let mut _26: &p;                     // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _29: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    let mut _30: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
    let mut _31: &p;                     // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
    let mut _32: &p;                     // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
    let _34: !;                          // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
    let mut _35: core::panicking::AssertKind; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
    let mut _36: &p;                     // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let _37: &p;                         // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let mut _38: &p;                     // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let _39: &p;                         // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let mut _40: std::option::Option<std::fmt::Arguments<'_>>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
    let mut _41: bool;                   // in scope 0 at ui/binop/binops.rs:79:3: 79:24
    let mut _42: bool;                   // in scope 0 at ui/binop/binops.rs:79:11: 79:23
    let mut _43: isize;                  // in scope 0 at ui/binop/binops.rs:79:12: 79:15
    let mut _44: isize;                  // in scope 0 at ui/binop/binops.rs:79:19: 79:22
    let mut _45: !;                      // in scope 0 at ui/binop/binops.rs:79:3: 79:24
    let mut _46: (&isize, &isize);       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _47: &isize;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let mut _48: &isize;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _51: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    let mut _52: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
    let mut _53: isize;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
    let mut _54: isize;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
    let _56: !;                          // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
    let mut _57: core::panicking::AssertKind; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
    let mut _58: &isize;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let _59: &isize;                     // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let mut _60: &isize;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let _61: &isize;                     // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let mut _62: std::option::Option<std::fmt::Arguments<'_>>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
    let mut _63: bool;                   // in scope 0 at ui/binop/binops.rs:81:3: 81:20
    let mut _64: bool;                   // in scope 0 at ui/binop/binops.rs:81:11: 81:19
    let mut _65: &p;                     // in scope 0 at ui/binop/binops.rs:81:12: 81:13
    let mut _66: &p;                     // in scope 0 at ui/binop/binops.rs:81:17: 81:18
    let mut _67: !;                      // in scope 0 at ui/binop/binops.rs:81:3: 81:20
    scope 1 {
        debug q => _1;                   // in scope 1 at ui/binop/binops.rs:69:7: 69:8
        let mut _2: p;                   // in scope 1 at ui/binop/binops.rs:70:7: 70:12
        scope 2 {
            debug r => _2;               // in scope 2 at ui/binop/binops.rs:70:7: 70:12
            let _27: &p;                 // in scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
            let _28: &p;                 // in scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
            let _49: &isize;             // in scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
            let _50: &isize;             // in scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
            let mut _68: &isize;         // in scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
            scope 3 {
                let mut _69: &[&str; 3]; // in scope 3 at ui/binop/binops.rs:73:12: 73:32
            }
            scope 4 {
                debug left_val => _27;   // in scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
                debug right_val => _28;  // in scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
                let _33: core::panicking::AssertKind; // in scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                scope 5 {
                    debug kind => _33;   // in scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                }
            }
            scope 6 {
                debug left_val => _49;   // in scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
                debug right_val => _50;  // in scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
                let _55: core::panicking::AssertKind; // in scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                scope 7 {
                    debug kind => _55;   // in scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                }
            }
        }
    }

    bb0: {
        _1 = p(const 1_isize, const 2_isize) -> bb1; // scope 0 at ui/binop/binops.rs:69:11: 69:18
                                         // mir::Constant
                                         // + span: ui/binop/binops.rs:69:11: 69:12
                                         // + literal: Const { ty: fn(isize, isize) -> p {p}, val: Value(<ZST>) }
    }

    bb1: {
        _2 = p(const 1_isize, const 2_isize) -> bb2; // scope 1 at ui/binop/binops.rs:70:15: 70:22
                                         // mir::Constant
                                         // + span: ui/binop/binops.rs:70:15: 70:16
                                         // + literal: Const { ty: fn(isize, isize) -> p {p}, val: Value(<ZST>) }
    }

    bb2: {
        _69 = const _;                   // scope 3 at ui/binop/binops.rs:73:12: 73:32
                                         // mir::Constant
                                         // + span: ui/binop/binops.rs:73:12: 73:32
                                         // + literal: Const { ty: &[&str; 3], val: Unevaluated(test_class, [], Some(promoted[1])) }
        _7 = _69;                        // scope 3 at ui/binop/binops.rs:73:12: 73:32
        _6 = _7;                         // scope 3 at ui/binop/binops.rs:73:12: 73:32
        _5 = move _6 as &[&str] (Pointer(Unsize)); // scope 3 at ui/binop/binops.rs:73:12: 73:32
        _17 = &_1;                       // scope 3 at ui/binop/binops.rs:74:52: 74:54
        _16 = &raw const (*_17);         // scope 3 at ui/binop/binops.rs:74:52: 74:54
        _15 = transmute::<*const p, usize>(move _16) -> bb3; // scope 3 at ui/binop/binops.rs:74:10: 74:56
                                         // mir::Constant
                                         // + span: ui/binop/binops.rs:74:11: 74:51
                                         // + literal: Const { ty: unsafe extern "rust-intrinsic" fn(*const p) -> usize {transmute::<*const p, usize>}, val: Value(<ZST>) }
    }

    bb3: {
        _14 = &_15;                      // scope 3 at ui/binop/binops.rs:74:10: 74:56
        _13 = _14;                       // scope 3 at ui/binop/binops.rs:74:10: 74:56
        _12 = core::fmt::ArgumentV1::<'_>::new_lower_hex::<usize>(move _13) -> bb4; // scope 3 at ui/binop/binops.rs:74:10: 74:56
                                         // mir::Constant
                                         // + span: ui/binop/binops.rs:74:10: 74:56
                                         // + user_ty: UserType(1)
                                         // + literal: Const { ty: for<'b> fn(&'b usize) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_lower_hex::<usize>}, val: Value(<ZST>) }
    }

    bb4: {
        _23 = &_2;                       // scope 3 at ui/binop/binops.rs:75:52: 75:54
        _22 = &raw const (*_23);         // scope 3 at ui/binop/binops.rs:75:52: 75:54
        _21 = transmute::<*const p, usize>(move _22) -> bb5; // scope 3 at ui/binop/binops.rs:75:10: 75:56
                                         // mir::Constant
                                         // + span: ui/binop/binops.rs:75:11: 75:51
                                         // + literal: Const { ty: unsafe extern "rust-intrinsic" fn(*const p) -> usize {transmute::<*const p, usize>}, val: Value(<ZST>) }
    }

    bb5: {
        _20 = &_21;                      // scope 3 at ui/binop/binops.rs:75:10: 75:56
        _19 = _20;                       // scope 3 at ui/binop/binops.rs:75:10: 75:56
        _18 = core::fmt::ArgumentV1::<'_>::new_lower_hex::<usize>(move _19) -> bb6; // scope 3 at ui/binop/binops.rs:75:10: 75:56
                                         // mir::Constant
                                         // + span: ui/binop/binops.rs:75:10: 75:56
                                         // + user_ty: UserType(2)
                                         // + literal: Const { ty: for<'b> fn(&'b usize) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_lower_hex::<usize>}, val: Value(<ZST>) }
    }

    bb6: {
        _11 = [move _12, move _18];      // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _10 = &_11;                      // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _9 = _10;                        // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _8 = move _9 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _4 = Arguments::<'_>::new_v1(move _5, move _8) -> bb7; // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb7: {
        _3 = _print(move _4) -> bb8;     // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:62
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:27
                                         // + literal: Const { ty: for<'a> fn(Arguments<'a>) {_print}, val: Value(<ZST>) }
    }

    bb8: {
        _25 = &_1;                       // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _26 = &_2;                       // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _24 = (move _25, move _26);      // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _27 = (_24.0: &p);               // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _28 = (_24.1: &p);               // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _31 = _27;                       // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
        _32 = _28;                       // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
        _30 = <p as PartialEq>::eq(move _31, move _32) -> bb9; // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a p, &'b p) -> bool {<p as PartialEq>::eq}, val: Value(<ZST>) }
    }

    bb9: {
        _29 = Not(move _30);             // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
        switchInt(move _29) -> [0: bb11, otherwise: bb10]; // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    }

    bb10: {
        _33 = const core::panicking::AssertKind::Eq; // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _35 = const core::panicking::AssertKind::Eq; // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _37 = _27;                       // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _36 = _37;                       // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _39 = _28;                       // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _38 = _39;                       // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _40 = Option::<Arguments<'_>>::None; // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
        _34 = core::panicking::assert_failed::<p, p>(move _35, move _36, move _38, move _40); // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:53
                                         // + literal: Const { ty: for<'a, 'b, 'c> fn(core::panicking::AssertKind, &'a p, &'b p, Option<Arguments<'c>>) -> ! {core::panicking::assert_failed::<p, p>}, val: Value(<ZST>) }
    }

    bb11: {
        (_2.1: isize) = const 17_isize;  // scope 2 at ui/binop/binops.rs:78:3: 78:11
        _43 = (_2.1: isize);             // scope 2 at ui/binop/binops.rs:79:12: 79:15
        _44 = (_1.1: isize);             // scope 2 at ui/binop/binops.rs:79:19: 79:22
        _42 = Ne(move _43, move _44);    // scope 2 at ui/binop/binops.rs:79:11: 79:23
        _41 = Not(move _42);             // scope 2 at ui/binop/binops.rs:79:3: 79:24
        switchInt(move _41) -> [0: bb13, otherwise: bb12]; // scope 2 at ui/binop/binops.rs:79:3: 79:24
    }

    bb12: {
        _45 = core::panicking::panic(const "assertion failed: (r.y != q.y)"); // scope 2 at ui/binop/binops.rs:79:3: 79:24
                                         // mir::Constant
                                         // + span: ui/binop/binops.rs:79:3: 79:24
                                         // + literal: Const { ty: fn(&'static str) -> ! {core::panicking::panic}, val: Value(<ZST>) }
                                         // mir::Constant
                                         // + span: no-location
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
    }

    bb13: {
        _47 = &(_2.1: isize);            // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _68 = const _;                   // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // + literal: Const { ty: &isize, val: Unevaluated(test_class, [], Some(promoted[0])) }
        _48 = _68;                       // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _46 = (move _47, move _48);      // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _49 = (_46.0: &isize);           // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _50 = (_46.1: &isize);           // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _53 = (*_49);                    // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
        _54 = const 17_isize;            // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
        _52 = Eq(move _53, move _54);    // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
        _51 = Not(move _52);             // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
        switchInt(move _51) -> [0: bb15, otherwise: bb14]; // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    }

    bb14: {
        _55 = const core::panicking::AssertKind::Eq; // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _57 = const core::panicking::AssertKind::Eq; // scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _59 = _49;                       // scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _58 = _59;                       // scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _61 = _50;                       // scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _60 = _61;                       // scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _62 = Option::<Arguments<'_>>::None; // scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
        _56 = core::panicking::assert_failed::<isize, isize>(move _57, move _58, move _60, move _62); // scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:53
                                         // + literal: Const { ty: for<'a, 'b, 'c> fn(core::panicking::AssertKind, &'a isize, &'b isize, Option<Arguments<'c>>) -> ! {core::panicking::assert_failed::<isize, isize>}, val: Value(<ZST>) }
    }

    bb15: {
        _65 = &_1;                       // scope 2 at ui/binop/binops.rs:81:12: 81:13
        _66 = &_2;                       // scope 2 at ui/binop/binops.rs:81:17: 81:18
        _64 = <p as PartialEq>::ne(move _65, move _66) -> bb16; // scope 2 at ui/binop/binops.rs:81:11: 81:19
                                         // mir::Constant
                                         // + span: ui/binop/binops.rs:81:11: 81:19
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a p, &'b p) -> bool {<p as PartialEq>::ne}, val: Value(<ZST>) }
    }

    bb16: {
        _63 = Not(move _64);             // scope 2 at ui/binop/binops.rs:81:3: 81:20
        switchInt(move _63) -> [0: bb18, otherwise: bb17]; // scope 2 at ui/binop/binops.rs:81:3: 81:20
    }

    bb17: {
        _67 = core::panicking::panic(const "assertion failed: (q != r)"); // scope 2 at ui/binop/binops.rs:81:3: 81:20
                                         // mir::Constant
                                         // + span: ui/binop/binops.rs:81:3: 81:20
                                         // + literal: Const { ty: fn(&'static str) -> ! {core::panicking::panic}, val: Value(<ZST>) }
                                         // mir::Constant
                                         // + span: no-location
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
    }

    bb18: {
        return;                          // scope 0 at ui/binop/binops.rs:82:2: 82:2
    }
}

promoted[0] in test_class: &isize = {
    let mut _0: &isize;                  // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _1: isize;                   // in scope 0 at ui/binop/binops.rs:80:19: 80:21

    bb0: {
        _1 = const 17_isize;             // scope 0 at ui/binop/binops.rs:80:19: 80:21
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    }
}

promoted[1] in test_class: &[&str; 3] = {
    let mut _0: &[&str; 3];              // return place in scope 0 at ui/binop/binops.rs:73:12: 73:32
    let mut _1: [&str; 3];               // in scope 0 at ui/binop/binops.rs:73:12: 73:32

    bb0: {
        _1 = [const "q = ", const ", r = ", const "\n"]; // scope 0 at ui/binop/binops.rs:73:12: 73:32
                                         // mir::Constant
                                         // + span: ui/binop/binops.rs:73:12: 73:32
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
                                         // mir::Constant
                                         // + span: ui/binop/binops.rs:73:12: 73:32
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
                                         // mir::Constant
                                         // + span: ui/binop/binops.rs:73:12: 73:32
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at ui/binop/binops.rs:73:12: 73:32
        return;                          // scope 0 at ui/binop/binops.rs:73:12: 73:32
    }
}

fn main() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/binop/binops.rs:84:15: 84:15
    let _1: ();                          // in scope 0 at ui/binop/binops.rs:85:5: 85:15
    let _2: ();                          // in scope 0 at ui/binop/binops.rs:86:5: 86:16
    let _3: ();                          // in scope 0 at ui/binop/binops.rs:87:5: 87:15
    let _4: ();                          // in scope 0 at ui/binop/binops.rs:88:5: 88:17

    bb0: {
        _1 = test_nil() -> bb1;          // scope 0 at ui/binop/binops.rs:85:5: 85:15
                                         // mir::Constant
                                         // + span: ui/binop/binops.rs:85:5: 85:13
                                         // + literal: Const { ty: fn() {test_nil}, val: Value(<ZST>) }
    }

    bb1: {
        _2 = test_bool() -> bb2;         // scope 0 at ui/binop/binops.rs:86:5: 86:16
                                         // mir::Constant
                                         // + span: ui/binop/binops.rs:86:5: 86:14
                                         // + literal: Const { ty: fn() {test_bool}, val: Value(<ZST>) }
    }

    bb2: {
        _3 = test_ptr() -> bb3;          // scope 0 at ui/binop/binops.rs:87:5: 87:15
                                         // mir::Constant
                                         // + span: ui/binop/binops.rs:87:5: 87:13
                                         // + literal: Const { ty: fn() {test_ptr}, val: Value(<ZST>) }
    }

    bb3: {
        _4 = test_class() -> bb4;        // scope 0 at ui/binop/binops.rs:88:5: 88:17
                                         // mir::Constant
                                         // + span: ui/binop/binops.rs:88:5: 88:15
                                         // + literal: Const { ty: fn() {test_class}, val: Value(<ZST>) }
    }

    bb4: {
        return;                          // scope 0 at ui/binop/binops.rs:89:2: 89:2
    }
}
