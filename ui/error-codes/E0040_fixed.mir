// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
fn <impl at ui/error-codes/E0040_fixed.rs:6:1: 6:18>::drop(_1: &mut Foo) -> () {
    debug self => _1;                    // in scope 0 at ui/error-codes/E0040_fixed.rs:7:13: 7:22
    let mut _0: ();                      // return place in scope 0 at ui/error-codes/E0040_fixed.rs:7:24: 7:24
    let _2: ();                          // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:62
    let mut _3: std::fmt::Arguments<'_>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _4: &[&str];                 // in scope 0 at ui/error-codes/E0040_fixed.rs:8:18: 8:26
    let mut _5: &[&str; 1];              // in scope 0 at ui/error-codes/E0040_fixed.rs:8:18: 8:26
    let _6: &[&str; 1];                  // in scope 0 at ui/error-codes/E0040_fixed.rs:8:18: 8:26
    let mut _7: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _8: &[core::fmt::ArgumentV1<'_>; 0]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let _9: &[core::fmt::ArgumentV1<'_>; 0]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _10: &[core::fmt::ArgumentV1<'_>; 0]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _11: &[&str; 1];             // in scope 0 at ui/error-codes/E0040_fixed.rs:8:18: 8:26

    bb0: {
        _11 = const _;                   // scope 0 at ui/error-codes/E0040_fixed.rs:8:18: 8:26
                                         // mir::Constant
                                         // + span: ui/error-codes/E0040_fixed.rs:8:18: 8:26
                                         // + literal: Const { ty: &[&str; 1], val: Unevaluated(<Foo as Drop>::drop, [], Some(promoted[1])) }
        _6 = _11;                        // scope 0 at ui/error-codes/E0040_fixed.rs:8:18: 8:26
        _5 = _6;                         // scope 0 at ui/error-codes/E0040_fixed.rs:8:18: 8:26
        _4 = move _5 as &[&str] (Pointer(Unsize)); // scope 0 at ui/error-codes/E0040_fixed.rs:8:18: 8:26
        _10 = const _;                   // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // + literal: Const { ty: &[core::fmt::ArgumentV1<'_>; 0], val: Unevaluated(<Foo as Drop>::drop, [], Some(promoted[0])) }
        _9 = _10;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _8 = _9;                         // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _7 = move _8 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _3 = Arguments::<'_>::new_v1(move _4, move _7) -> bb1; // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb1: {
        _2 = _print(move _3) -> bb2;     // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:62
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:27
                                         // + literal: Const { ty: for<'a> fn(Arguments<'a>) {_print}, val: Value(<ZST>) }
    }

    bb2: {
        return;                          // scope 0 at ui/error-codes/E0040_fixed.rs:9:6: 9:6
    }
}

promoted[0] in <impl at ui/error-codes/E0040_fixed.rs:6:1: 6:18>::drop: &[core::fmt::ArgumentV1<'_>; 0] = {
    let mut _0: &[core::fmt::ArgumentV1<'_>; 0]; // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _1: [core::fmt::ArgumentV1<'_>; 0]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61

    bb0: {
        _1 = [];                         // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    }
}

promoted[1] in <impl at ui/error-codes/E0040_fixed.rs:6:1: 6:18>::drop: &[&str; 1] = {
    let mut _0: &[&str; 1];              // return place in scope 0 at ui/error-codes/E0040_fixed.rs:8:18: 8:26
    let mut _1: [&str; 1];               // in scope 0 at ui/error-codes/E0040_fixed.rs:8:18: 8:26

    bb0: {
        _1 = [const "kaboom\n"];         // scope 0 at ui/error-codes/E0040_fixed.rs:8:18: 8:26
                                         // mir::Constant
                                         // + span: ui/error-codes/E0040_fixed.rs:8:18: 8:26
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at ui/error-codes/E0040_fixed.rs:8:18: 8:26
        return;                          // scope 0 at ui/error-codes/E0040_fixed.rs:8:18: 8:26
    }
}

fn main() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/error-codes/E0040_fixed.rs:12:11: 12:11
    let mut _1: Foo;                     // in scope 0 at ui/error-codes/E0040_fixed.rs:13:9: 13:14
    let _2: ();                          // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:62
    let mut _3: std::fmt::Arguments<'_>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _4: &[&str];                 // in scope 0 at ui/error-codes/E0040_fixed.rs:15:14: 15:18
    let mut _5: &[&str; 2];              // in scope 0 at ui/error-codes/E0040_fixed.rs:15:14: 15:18
    let _6: &[&str; 2];                  // in scope 0 at ui/error-codes/E0040_fixed.rs:15:14: 15:18
    let mut _7: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _8: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let _9: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let _10: [core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _11: core::fmt::ArgumentV1<'_>; // in scope 0 at ui/error-codes/E0040_fixed.rs:15:20: 15:23
    let mut _12: &i32;                   // in scope 0 at ui/error-codes/E0040_fixed.rs:15:20: 15:23
    let _13: &i32;                       // in scope 0 at ui/error-codes/E0040_fixed.rs:15:20: 15:23
    let _14: ();                         // in scope 0 at ui/error-codes/E0040_fixed.rs:16:5: 16:12
    let mut _15: Foo;                    // in scope 0 at ui/error-codes/E0040_fixed.rs:16:10: 16:11
    let mut _17: bool;                   // in scope 0 at ui/error-codes/E0040_fixed.rs:18:1: 18:2
    scope 1 {
        debug x => _1;                   // in scope 1 at ui/error-codes/E0040_fixed.rs:13:9: 13:14
        let mut _16: &[&str; 2];         // in scope 1 at ui/error-codes/E0040_fixed.rs:15:14: 15:18
    }

    bb0: {
        _17 = const false;               // scope 0 at ui/error-codes/E0040_fixed.rs:13:9: 13:14
        _17 = const true;                // scope 0 at ui/error-codes/E0040_fixed.rs:13:17: 13:30
        _1 = Foo { x: const -7_i32 };    // scope 0 at ui/error-codes/E0040_fixed.rs:13:17: 13:30
        (_1.0: i32) = const 0_i32;       // scope 1 at ui/error-codes/E0040_fixed.rs:14:5: 14:12
        _16 = const _;                   // scope 1 at ui/error-codes/E0040_fixed.rs:15:14: 15:18
                                         // mir::Constant
                                         // + span: ui/error-codes/E0040_fixed.rs:15:14: 15:18
                                         // + literal: Const { ty: &[&str; 2], val: Unevaluated(main, [], Some(promoted[0])) }
        _6 = _16;                        // scope 1 at ui/error-codes/E0040_fixed.rs:15:14: 15:18
        _5 = _6;                         // scope 1 at ui/error-codes/E0040_fixed.rs:15:14: 15:18
        _4 = move _5 as &[&str] (Pointer(Unsize)); // scope 1 at ui/error-codes/E0040_fixed.rs:15:14: 15:18
        _13 = &(_1.0: i32);              // scope 1 at ui/error-codes/E0040_fixed.rs:15:20: 15:23
        _12 = _13;                       // scope 1 at ui/error-codes/E0040_fixed.rs:15:20: 15:23
        _11 = core::fmt::ArgumentV1::<'_>::new_display::<i32>(move _12) -> [return: bb1, unwind: bb7]; // scope 1 at ui/error-codes/E0040_fixed.rs:15:20: 15:23
                                         // mir::Constant
                                         // + span: ui/error-codes/E0040_fixed.rs:15:20: 15:23
                                         // + user_ty: UserType(1)
                                         // + literal: Const { ty: for<'b> fn(&'b i32) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_display::<i32>}, val: Value(<ZST>) }
    }

    bb1: {
        _10 = [move _11];                // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _9 = &_10;                       // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _8 = _9;                         // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _7 = move _8 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _3 = Arguments::<'_>::new_v1(move _4, move _7) -> [return: bb2, unwind: bb7]; // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb2: {
        _2 = _print(move _3) -> [return: bb3, unwind: bb7]; // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:62
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:27
                                         // + literal: Const { ty: for<'a> fn(Arguments<'a>) {_print}, val: Value(<ZST>) }
    }

    bb3: {
        _17 = const false;               // scope 1 at ui/error-codes/E0040_fixed.rs:16:10: 16:11
        _15 = move _1;                   // scope 1 at ui/error-codes/E0040_fixed.rs:16:10: 16:11
        _14 = std::mem::drop::<Foo>(move _15) -> [return: bb4, unwind: bb7]; // scope 1 at ui/error-codes/E0040_fixed.rs:16:5: 16:12
                                         // mir::Constant
                                         // + span: ui/error-codes/E0040_fixed.rs:16:5: 16:9
                                         // + literal: Const { ty: fn(Foo) {std::mem::drop::<Foo>}, val: Value(<ZST>) }
    }

    bb4: {
        _17 = const false;               // scope 0 at ui/error-codes/E0040_fixed.rs:18:1: 18:2
        return;                          // scope 0 at ui/error-codes/E0040_fixed.rs:18:2: 18:2
    }

    bb5 (cleanup): {
        resume;                          // scope 0 at ui/error-codes/E0040_fixed.rs:12:1: 18:2
    }

    bb6 (cleanup): {
        drop(_1) -> bb5;                 // scope 0 at ui/error-codes/E0040_fixed.rs:18:1: 18:2
    }

    bb7 (cleanup): {
        switchInt(_17) -> [0: bb5, otherwise: bb6]; // scope 0 at ui/error-codes/E0040_fixed.rs:18:1: 18:2
    }
}

promoted[0] in main: &[&str; 2] = {
    let mut _0: &[&str; 2];              // return place in scope 0 at ui/error-codes/E0040_fixed.rs:15:14: 15:18
    let mut _1: [&str; 2];               // in scope 0 at ui/error-codes/E0040_fixed.rs:15:14: 15:18

    bb0: {
        _1 = [const "", const "\n"];     // scope 0 at ui/error-codes/E0040_fixed.rs:15:14: 15:18
                                         // mir::Constant
                                         // + span: ui/error-codes/E0040_fixed.rs:15:14: 15:18
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
                                         // mir::Constant
                                         // + span: ui/error-codes/E0040_fixed.rs:15:14: 15:18
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at ui/error-codes/E0040_fixed.rs:15:14: 15:18
        return;                          // scope 0 at ui/error-codes/E0040_fixed.rs:15:14: 15:18
    }
}
