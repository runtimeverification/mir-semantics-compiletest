// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
fn <impl at ui/error-codes/E0642_fixed.rs:5:10: 5:15>::clone(_1: &S) -> S {
    debug self => _1;                    // in scope 0 at ui/error-codes/E0642_fixed.rs:5:10: 5:15
    let mut _0: S;                       // return place in scope 0 at ui/error-codes/E0642_fixed.rs:5:10: 5:15

    bb0: {
        return;                          // scope 0 at ui/error-codes/E0642_fixed.rs:5:15: 5:15
    }
}

fn T::bar(_1: (i32, i32)) -> () {
    let mut _0: ();                      // return place in scope 0 at ui/error-codes/E0642_fixed.rs:11:27: 11:27

    bb0: {
        return;                          // scope 0 at ui/error-codes/E0642_fixed.rs:11:29: 11:29
    }
}

fn T::method(_1: S) -> () {
    let mut _0: ();                      // return place in scope 0 at ui/error-codes/E0642_fixed.rs:13:21: 13:21

    bb0: {
        return;                          // scope 0 at ui/error-codes/E0642_fixed.rs:13:23: 13:23
    }
}

fn T::f(_1: &S) -> () {
    let mut _0: ();                      // return place in scope 0 at ui/error-codes/E0642_fixed.rs:15:22: 15:22
    let _2: S;                           // in scope 0 at ui/error-codes/E0642_fixed.rs:15:11: 15:16
    scope 1 {
        debug ident => _2;               // in scope 1 at ui/error-codes/E0642_fixed.rs:15:11: 15:16
    }

    bb0: {
        return;                          // scope 0 at ui/error-codes/E0642_fixed.rs:15:24: 15:24
    }
}

fn T::g(_1: &&S) -> () {
    let mut _0: ();                      // return place in scope 0 at ui/error-codes/E0642_fixed.rs:16:24: 16:24
    let _2: S;                           // in scope 0 at ui/error-codes/E0642_fixed.rs:16:12: 16:17
    scope 1 {
        debug ident => _2;               // in scope 1 at ui/error-codes/E0642_fixed.rs:16:12: 16:17
    }

    bb0: {
        return;                          // scope 0 at ui/error-codes/E0642_fixed.rs:16:26: 16:26
    }
}

fn T::h(_1: S) -> () {
    debug ident => _1;                   // in scope 0 at ui/error-codes/E0642_fixed.rs:17:10: 17:19
    let mut _0: ();                      // return place in scope 0 at ui/error-codes/E0642_fixed.rs:17:24: 17:24

    bb0: {
        return;                          // scope 0 at ui/error-codes/E0642_fixed.rs:17:26: 17:26
    }
}

fn main() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/error-codes/E0642_fixed.rs:20:11: 20:11

    bb0: {
        return;                          // scope 0 at ui/error-codes/E0642_fixed.rs:20:13: 20:13
    }
}
