// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
const N_ISLANDS: usize = {
    let mut _0: usize;                   // return place in scope 0 at ui/const-generics/issue-97007.rs:7:22: 7:27

    bb0: {
        _0 = const 4_usize;              // scope 0 at ui/const-generics/issue-97007.rs:7:30: 7:31
        return;                          // scope 0 at ui/const-generics/issue-97007.rs:7:5: 7:32
    }
}

const N_BRIDGES: usize = {
    let mut _0: usize;                   // return place in scope 0 at ui/const-generics/issue-97007.rs:8:22: 8:27

    bb0: {
        _0 = const 7_usize;              // scope 0 at ui/const-generics/issue-97007.rs:8:30: 8:31
        return;                          // scope 0 at ui/const-generics/issue-97007.rs:8:5: 8:32
    }
}

const BRIDGES: [(usize, usize); 7] = {
    let mut _0: [(usize, usize); 7];     // return place in scope 0 at ui/const-generics/issue-97007.rs:9:20: 9:39
    let mut _1: (usize, usize);          // in scope 0 at ui/const-generics/issue-97007.rs:9:43: 9:49
    let mut _2: (usize, usize);          // in scope 0 at ui/const-generics/issue-97007.rs:9:51: 9:57
    let mut _3: (usize, usize);          // in scope 0 at ui/const-generics/issue-97007.rs:9:59: 9:65
    let mut _4: (usize, usize);          // in scope 0 at ui/const-generics/issue-97007.rs:9:67: 9:73
    let mut _5: (usize, usize);          // in scope 0 at ui/const-generics/issue-97007.rs:9:75: 9:81
    let mut _6: (usize, usize);          // in scope 0 at ui/const-generics/issue-97007.rs:9:83: 9:89
    let mut _7: (usize, usize);          // in scope 0 at ui/const-generics/issue-97007.rs:9:91: 9:97

    bb0: {
        StorageLive(_1);                 // scope 0 at ui/const-generics/issue-97007.rs:9:43: 9:49
        _1 = (const 0_usize, const 1_usize); // scope 0 at ui/const-generics/issue-97007.rs:9:43: 9:49
        StorageLive(_2);                 // scope 0 at ui/const-generics/issue-97007.rs:9:51: 9:57
        _2 = (const 0_usize, const 1_usize); // scope 0 at ui/const-generics/issue-97007.rs:9:51: 9:57
        StorageLive(_3);                 // scope 0 at ui/const-generics/issue-97007.rs:9:59: 9:65
        _3 = (const 0_usize, const 2_usize); // scope 0 at ui/const-generics/issue-97007.rs:9:59: 9:65
        StorageLive(_4);                 // scope 0 at ui/const-generics/issue-97007.rs:9:67: 9:73
        _4 = (const 0_usize, const 3_usize); // scope 0 at ui/const-generics/issue-97007.rs:9:67: 9:73
        StorageLive(_5);                 // scope 0 at ui/const-generics/issue-97007.rs:9:75: 9:81
        _5 = (const 0_usize, const 3_usize); // scope 0 at ui/const-generics/issue-97007.rs:9:75: 9:81
        StorageLive(_6);                 // scope 0 at ui/const-generics/issue-97007.rs:9:83: 9:89
        _6 = (const 1_usize, const 2_usize); // scope 0 at ui/const-generics/issue-97007.rs:9:83: 9:89
        StorageLive(_7);                 // scope 0 at ui/const-generics/issue-97007.rs:9:91: 9:97
        _7 = (const 2_usize, const 3_usize); // scope 0 at ui/const-generics/issue-97007.rs:9:91: 9:97
        _0 = [move _1, move _2, move _3, move _4, move _5, move _6, move _7]; // scope 0 at ui/const-generics/issue-97007.rs:9:42: 9:98
        StorageDead(_7);                 // scope 0 at ui/const-generics/issue-97007.rs:9:97: 9:98
        StorageDead(_6);                 // scope 0 at ui/const-generics/issue-97007.rs:9:97: 9:98
        StorageDead(_5);                 // scope 0 at ui/const-generics/issue-97007.rs:9:97: 9:98
        StorageDead(_4);                 // scope 0 at ui/const-generics/issue-97007.rs:9:97: 9:98
        StorageDead(_3);                 // scope 0 at ui/const-generics/issue-97007.rs:9:97: 9:98
        StorageDead(_2);                 // scope 0 at ui/const-generics/issue-97007.rs:9:97: 9:98
        StorageDead(_1);                 // scope 0 at ui/const-generics/issue-97007.rs:9:97: 9:98
        return;                          // scope 0 at ui/const-generics/issue-97007.rs:9:5: 9:99
    }
}

BRIDGES::{constant#0}: usize = {
    let mut _0: usize;                   // return place in scope 0 at ui/const-generics/issue-97007.rs:9:37: 9:38

    bb0: {
        _0 = const 7_usize;              // scope 0 at ui/const-generics/issue-97007.rs:9:37: 9:38
        return;                          // scope 0 at ui/const-generics/issue-97007.rs:9:37: 9:38
    }
}

Matrix::{constant#0}: usize = {
    let mut _0: usize;                   // return place in scope 0 at ui/const-generics/issue-97007.rs:11:32: 11:41

    bb0: {
        _0 = const _;                    // scope 0 at ui/const-generics/issue-97007.rs:11:32: 11:41
        return;                          // scope 0 at ui/const-generics/issue-97007.rs:11:32: 11:41
    }
}

Matrix::{constant#1}: usize = {
    let mut _0: usize;                   // return place in scope 0 at ui/const-generics/issue-97007.rs:11:44: 11:53

    bb0: {
        _0 = const _;                    // scope 0 at ui/const-generics/issue-97007.rs:11:44: 11:53
        return;                          // scope 0 at ui/const-generics/issue-97007.rs:11:44: 11:53
    }
}

const EMPTY_MATRIX: [[usize; N_ISLANDS]; N_ISLANDS] = {
    let mut _0: [[usize; N_ISLANDS]; N_ISLANDS]; // return place in scope 0 at ui/const-generics/issue-97007.rs:13:25: 13:31
    let mut _1: [usize; N_ISLANDS];      // in scope 0 at ui/const-generics/issue-97007.rs:13:35: 13:49

    bb0: {
        StorageLive(_1);                 // scope 0 at ui/const-generics/issue-97007.rs:13:35: 13:49
        _1 = [const 0_usize; N_ISLANDS]; // scope 0 at ui/const-generics/issue-97007.rs:13:35: 13:49
        _0 = [move _1; N_ISLANDS];       // scope 0 at ui/const-generics/issue-97007.rs:13:34: 13:61
        StorageDead(_1);                 // scope 0 at ui/const-generics/issue-97007.rs:13:60: 13:61
        return;                          // scope 0 at ui/const-generics/issue-97007.rs:13:5: 13:62
    }
}

EMPTY_MATRIX::{constant#0}: usize = {
    let mut _0: usize;                   // return place in scope 0 at ui/const-generics/issue-97007.rs:13:39: 13:48

    bb0: {
        _0 = const _;                    // scope 0 at ui/const-generics/issue-97007.rs:13:39: 13:48
        return;                          // scope 0 at ui/const-generics/issue-97007.rs:13:39: 13:48
    }
}

EMPTY_MATRIX::{constant#1}: usize = {
    let mut _0: usize;                   // return place in scope 0 at ui/const-generics/issue-97007.rs:13:51: 13:60

    bb0: {
        _0 = const _;                    // scope 0 at ui/const-generics/issue-97007.rs:13:51: 13:60
        return;                          // scope 0 at ui/const-generics/issue-97007.rs:13:51: 13:60
    }
}

fn build(_1: [[usize; N_ISLANDS]; N_ISLANDS], _2: (usize, usize)) -> [[usize; N_ISLANDS]; N_ISLANDS] {
    debug matrix => _1;                  // in scope 0 at ui/const-generics/issue-97007.rs:15:20: 15:30
    let mut _0: [[usize; N_ISLANDS]; N_ISLANDS]; // return place in scope 0 at ui/const-generics/issue-97007.rs:15:71: 15:77
    let _3: usize;                       // in scope 0 at ui/const-generics/issue-97007.rs:15:41: 15:43
    let _4: usize;                       // in scope 0 at ui/const-generics/issue-97007.rs:15:45: 15:49
    let _5: usize;                       // in scope 0 at ui/const-generics/issue-97007.rs:16:16: 16:18
    let mut _6: usize;                   // in scope 0 at ui/const-generics/issue-97007.rs:16:9: 16:19
    let mut _7: bool;                    // in scope 0 at ui/const-generics/issue-97007.rs:16:9: 16:19
    let _8: usize;                       // in scope 0 at ui/const-generics/issue-97007.rs:16:20: 16:24
    let mut _9: usize;                   // in scope 0 at ui/const-generics/issue-97007.rs:16:9: 16:25
    let mut _10: bool;                   // in scope 0 at ui/const-generics/issue-97007.rs:16:9: 16:25
    let mut _11: (usize, bool);          // in scope 0 at ui/const-generics/issue-97007.rs:16:9: 16:30
    let _12: usize;                      // in scope 0 at ui/const-generics/issue-97007.rs:17:16: 17:20
    let mut _13: usize;                  // in scope 0 at ui/const-generics/issue-97007.rs:17:9: 17:21
    let mut _14: bool;                   // in scope 0 at ui/const-generics/issue-97007.rs:17:9: 17:21
    let _15: usize;                      // in scope 0 at ui/const-generics/issue-97007.rs:17:22: 17:24
    let mut _16: usize;                  // in scope 0 at ui/const-generics/issue-97007.rs:17:9: 17:25
    let mut _17: bool;                   // in scope 0 at ui/const-generics/issue-97007.rs:17:9: 17:25
    let mut _18: (usize, bool);          // in scope 0 at ui/const-generics/issue-97007.rs:17:9: 17:30
    scope 1 {
        debug to => _3;                  // in scope 1 at ui/const-generics/issue-97007.rs:15:41: 15:43
        debug from => _4;                // in scope 1 at ui/const-generics/issue-97007.rs:15:45: 15:49
    }

    bb0: {
        _3 = (_2.0: usize);              // scope 0 at ui/const-generics/issue-97007.rs:15:41: 15:43
        _4 = (_2.1: usize);              // scope 0 at ui/const-generics/issue-97007.rs:15:45: 15:49
        _5 = _3;                         // scope 1 at ui/const-generics/issue-97007.rs:16:16: 16:18
        _6 = const _;                    // scope 1 at ui/const-generics/issue-97007.rs:16:9: 16:19
        _7 = Lt(_5, _6);                 // scope 1 at ui/const-generics/issue-97007.rs:16:9: 16:19
        assert(move _7, "index out of bounds: the length is {} but the index is {}", move _6, _5) -> bb1; // scope 1 at ui/const-generics/issue-97007.rs:16:9: 16:19
    }

    bb1: {
        _8 = _4;                         // scope 1 at ui/const-generics/issue-97007.rs:16:20: 16:24
        _9 = const _;                    // scope 1 at ui/const-generics/issue-97007.rs:16:9: 16:25
        _10 = Lt(_8, _9);                // scope 1 at ui/const-generics/issue-97007.rs:16:9: 16:25
        assert(move _10, "index out of bounds: the length is {} but the index is {}", move _9, _8) -> bb2; // scope 1 at ui/const-generics/issue-97007.rs:16:9: 16:25
    }

    bb2: {
        _11 = CheckedAdd(_1[_5][_8], const 1_usize); // scope 1 at ui/const-generics/issue-97007.rs:16:9: 16:30
        assert(!move (_11.1: bool), "attempt to compute `{} + {}`, which would overflow", _1[_5][_8], const 1_usize) -> bb3; // scope 1 at ui/const-generics/issue-97007.rs:16:9: 16:30
    }

    bb3: {
        _1[_5][_8] = move (_11.0: usize); // scope 1 at ui/const-generics/issue-97007.rs:16:9: 16:30
        _12 = _4;                        // scope 1 at ui/const-generics/issue-97007.rs:17:16: 17:20
        _13 = const _;                   // scope 1 at ui/const-generics/issue-97007.rs:17:9: 17:21
        _14 = Lt(_12, _13);              // scope 1 at ui/const-generics/issue-97007.rs:17:9: 17:21
        assert(move _14, "index out of bounds: the length is {} but the index is {}", move _13, _12) -> bb4; // scope 1 at ui/const-generics/issue-97007.rs:17:9: 17:21
    }

    bb4: {
        _15 = _3;                        // scope 1 at ui/const-generics/issue-97007.rs:17:22: 17:24
        _16 = const _;                   // scope 1 at ui/const-generics/issue-97007.rs:17:9: 17:25
        _17 = Lt(_15, _16);              // scope 1 at ui/const-generics/issue-97007.rs:17:9: 17:25
        assert(move _17, "index out of bounds: the length is {} but the index is {}", move _16, _15) -> bb5; // scope 1 at ui/const-generics/issue-97007.rs:17:9: 17:25
    }

    bb5: {
        _18 = CheckedAdd(_1[_12][_15], const 1_usize); // scope 1 at ui/const-generics/issue-97007.rs:17:9: 17:30
        assert(!move (_18.1: bool), "attempt to compute `{} + {}`, which would overflow", _1[_12][_15], const 1_usize) -> bb6; // scope 1 at ui/const-generics/issue-97007.rs:17:9: 17:30
    }

    bb6: {
        _1[_12][_15] = move (_18.0: usize); // scope 1 at ui/const-generics/issue-97007.rs:17:9: 17:30
        _0 = _1;                         // scope 1 at ui/const-generics/issue-97007.rs:18:9: 18:15
        return;                          // scope 0 at ui/const-generics/issue-97007.rs:19:6: 19:6
    }
}

// MIR FOR CTFE
fn build(_1: [[usize; N_ISLANDS]; N_ISLANDS], _2: (usize, usize)) -> [[usize; N_ISLANDS]; N_ISLANDS] {
    debug matrix => _1;                  // in scope 0 at ui/const-generics/issue-97007.rs:15:20: 15:30
    let mut _0: [[usize; N_ISLANDS]; N_ISLANDS]; // return place in scope 0 at ui/const-generics/issue-97007.rs:15:71: 15:77
    let _3: usize;                       // in scope 0 at ui/const-generics/issue-97007.rs:15:41: 15:43
    let _4: usize;                       // in scope 0 at ui/const-generics/issue-97007.rs:15:45: 15:49
    let _5: usize;                       // in scope 0 at ui/const-generics/issue-97007.rs:16:16: 16:18
    let mut _6: usize;                   // in scope 0 at ui/const-generics/issue-97007.rs:16:9: 16:19
    let mut _7: bool;                    // in scope 0 at ui/const-generics/issue-97007.rs:16:9: 16:19
    let _8: usize;                       // in scope 0 at ui/const-generics/issue-97007.rs:16:20: 16:24
    let mut _9: usize;                   // in scope 0 at ui/const-generics/issue-97007.rs:16:9: 16:25
    let mut _10: bool;                   // in scope 0 at ui/const-generics/issue-97007.rs:16:9: 16:25
    let mut _11: (usize, bool);          // in scope 0 at ui/const-generics/issue-97007.rs:16:9: 16:30
    let _12: usize;                      // in scope 0 at ui/const-generics/issue-97007.rs:17:16: 17:20
    let mut _13: usize;                  // in scope 0 at ui/const-generics/issue-97007.rs:17:9: 17:21
    let mut _14: bool;                   // in scope 0 at ui/const-generics/issue-97007.rs:17:9: 17:21
    let _15: usize;                      // in scope 0 at ui/const-generics/issue-97007.rs:17:22: 17:24
    let mut _16: usize;                  // in scope 0 at ui/const-generics/issue-97007.rs:17:9: 17:25
    let mut _17: bool;                   // in scope 0 at ui/const-generics/issue-97007.rs:17:9: 17:25
    let mut _18: (usize, bool);          // in scope 0 at ui/const-generics/issue-97007.rs:17:9: 17:30
    scope 1 {
        debug to => _3;                  // in scope 1 at ui/const-generics/issue-97007.rs:15:41: 15:43
        debug from => _4;                // in scope 1 at ui/const-generics/issue-97007.rs:15:45: 15:49
    }

    bb0: {
        StorageLive(_3);                 // scope 0 at ui/const-generics/issue-97007.rs:15:41: 15:43
        _3 = (_2.0: usize);              // scope 0 at ui/const-generics/issue-97007.rs:15:41: 15:43
        StorageLive(_4);                 // scope 0 at ui/const-generics/issue-97007.rs:15:45: 15:49
        _4 = (_2.1: usize);              // scope 0 at ui/const-generics/issue-97007.rs:15:45: 15:49
        StorageLive(_5);                 // scope 1 at ui/const-generics/issue-97007.rs:16:16: 16:18
        _5 = _3;                         // scope 1 at ui/const-generics/issue-97007.rs:16:16: 16:18
        _6 = Len(_1);                    // scope 1 at ui/const-generics/issue-97007.rs:16:9: 16:19
        _7 = Lt(_5, _6);                 // scope 1 at ui/const-generics/issue-97007.rs:16:9: 16:19
        assert(move _7, "index out of bounds: the length is {} but the index is {}", move _6, _5) -> bb1; // scope 1 at ui/const-generics/issue-97007.rs:16:9: 16:19
    }

    bb1: {
        StorageLive(_8);                 // scope 1 at ui/const-generics/issue-97007.rs:16:20: 16:24
        _8 = _4;                         // scope 1 at ui/const-generics/issue-97007.rs:16:20: 16:24
        _9 = Len(_1[_5]);                // scope 1 at ui/const-generics/issue-97007.rs:16:9: 16:25
        _10 = Lt(_8, _9);                // scope 1 at ui/const-generics/issue-97007.rs:16:9: 16:25
        assert(move _10, "index out of bounds: the length is {} but the index is {}", move _9, _8) -> bb2; // scope 1 at ui/const-generics/issue-97007.rs:16:9: 16:25
    }

    bb2: {
        _11 = CheckedAdd(_1[_5][_8], const 1_usize); // scope 1 at ui/const-generics/issue-97007.rs:16:9: 16:30
        assert(!move (_11.1: bool), "attempt to compute `{} + {}`, which would overflow", _1[_5][_8], const 1_usize) -> bb3; // scope 1 at ui/const-generics/issue-97007.rs:16:9: 16:30
    }

    bb3: {
        _1[_5][_8] = move (_11.0: usize); // scope 1 at ui/const-generics/issue-97007.rs:16:9: 16:30
        StorageDead(_8);                 // scope 1 at ui/const-generics/issue-97007.rs:16:30: 16:31
        StorageDead(_5);                 // scope 1 at ui/const-generics/issue-97007.rs:16:30: 16:31
        StorageLive(_12);                // scope 1 at ui/const-generics/issue-97007.rs:17:16: 17:20
        _12 = _4;                        // scope 1 at ui/const-generics/issue-97007.rs:17:16: 17:20
        _13 = Len(_1);                   // scope 1 at ui/const-generics/issue-97007.rs:17:9: 17:21
        _14 = Lt(_12, _13);              // scope 1 at ui/const-generics/issue-97007.rs:17:9: 17:21
        assert(move _14, "index out of bounds: the length is {} but the index is {}", move _13, _12) -> bb4; // scope 1 at ui/const-generics/issue-97007.rs:17:9: 17:21
    }

    bb4: {
        StorageLive(_15);                // scope 1 at ui/const-generics/issue-97007.rs:17:22: 17:24
        _15 = _3;                        // scope 1 at ui/const-generics/issue-97007.rs:17:22: 17:24
        _16 = Len(_1[_12]);              // scope 1 at ui/const-generics/issue-97007.rs:17:9: 17:25
        _17 = Lt(_15, _16);              // scope 1 at ui/const-generics/issue-97007.rs:17:9: 17:25
        assert(move _17, "index out of bounds: the length is {} but the index is {}", move _16, _15) -> bb5; // scope 1 at ui/const-generics/issue-97007.rs:17:9: 17:25
    }

    bb5: {
        _18 = CheckedAdd(_1[_12][_15], const 1_usize); // scope 1 at ui/const-generics/issue-97007.rs:17:9: 17:30
        assert(!move (_18.1: bool), "attempt to compute `{} + {}`, which would overflow", _1[_12][_15], const 1_usize) -> bb6; // scope 1 at ui/const-generics/issue-97007.rs:17:9: 17:30
    }

    bb6: {
        _1[_12][_15] = move (_18.0: usize); // scope 1 at ui/const-generics/issue-97007.rs:17:9: 17:30
        StorageDead(_15);                // scope 1 at ui/const-generics/issue-97007.rs:17:30: 17:31
        StorageDead(_12);                // scope 1 at ui/const-generics/issue-97007.rs:17:30: 17:31
        _0 = _1;                         // scope 1 at ui/const-generics/issue-97007.rs:18:9: 18:15
        StorageDead(_4);                 // scope 0 at ui/const-generics/issue-97007.rs:19:5: 19:6
        StorageDead(_3);                 // scope 0 at ui/const-generics/issue-97007.rs:19:5: 19:6
        return;                          // scope 0 at ui/const-generics/issue-97007.rs:19:6: 19:6
    }
}

fn walk(_1: [[usize; N_ISLANDS]; N_ISLANDS], _2: usize, _3: usize) -> [[usize; N_ISLANDS]; N_ISLANDS] {
    debug matrix => _1;                  // in scope 0 at ui/const-generics/issue-97007.rs:21:23: 21:33
    debug from => _2;                    // in scope 0 at ui/const-generics/issue-97007.rs:21:43: 21:47
    debug to => _3;                      // in scope 0 at ui/const-generics/issue-97007.rs:21:56: 21:58
    let mut _0: [[usize; N_ISLANDS]; N_ISLANDS]; // return place in scope 0 at ui/const-generics/issue-97007.rs:21:70: 21:76
    let _4: usize;                       // in scope 0 at ui/const-generics/issue-97007.rs:22:16: 22:20
    let mut _5: usize;                   // in scope 0 at ui/const-generics/issue-97007.rs:22:9: 22:21
    let mut _6: bool;                    // in scope 0 at ui/const-generics/issue-97007.rs:22:9: 22:21
    let _7: usize;                       // in scope 0 at ui/const-generics/issue-97007.rs:22:22: 22:24
    let mut _8: usize;                   // in scope 0 at ui/const-generics/issue-97007.rs:22:9: 22:25
    let mut _9: bool;                    // in scope 0 at ui/const-generics/issue-97007.rs:22:9: 22:25
    let mut _10: (usize, bool);          // in scope 0 at ui/const-generics/issue-97007.rs:22:9: 22:30
    let _11: usize;                      // in scope 0 at ui/const-generics/issue-97007.rs:23:16: 23:18
    let mut _12: usize;                  // in scope 0 at ui/const-generics/issue-97007.rs:23:9: 23:19
    let mut _13: bool;                   // in scope 0 at ui/const-generics/issue-97007.rs:23:9: 23:19
    let _14: usize;                      // in scope 0 at ui/const-generics/issue-97007.rs:23:20: 23:24
    let mut _15: usize;                  // in scope 0 at ui/const-generics/issue-97007.rs:23:9: 23:25
    let mut _16: bool;                   // in scope 0 at ui/const-generics/issue-97007.rs:23:9: 23:25
    let mut _17: (usize, bool);          // in scope 0 at ui/const-generics/issue-97007.rs:23:9: 23:30

    bb0: {
        _4 = _2;                         // scope 0 at ui/const-generics/issue-97007.rs:22:16: 22:20
        _5 = const _;                    // scope 0 at ui/const-generics/issue-97007.rs:22:9: 22:21
        _6 = Lt(_4, _5);                 // scope 0 at ui/const-generics/issue-97007.rs:22:9: 22:21
        assert(move _6, "index out of bounds: the length is {} but the index is {}", move _5, _4) -> bb1; // scope 0 at ui/const-generics/issue-97007.rs:22:9: 22:21
    }

    bb1: {
        _7 = _3;                         // scope 0 at ui/const-generics/issue-97007.rs:22:22: 22:24
        _8 = const _;                    // scope 0 at ui/const-generics/issue-97007.rs:22:9: 22:25
        _9 = Lt(_7, _8);                 // scope 0 at ui/const-generics/issue-97007.rs:22:9: 22:25
        assert(move _9, "index out of bounds: the length is {} but the index is {}", move _8, _7) -> bb2; // scope 0 at ui/const-generics/issue-97007.rs:22:9: 22:25
    }

    bb2: {
        _10 = CheckedSub(_1[_4][_7], const 1_usize); // scope 0 at ui/const-generics/issue-97007.rs:22:9: 22:30
        assert(!move (_10.1: bool), "attempt to compute `{} - {}`, which would overflow", _1[_4][_7], const 1_usize) -> bb3; // scope 0 at ui/const-generics/issue-97007.rs:22:9: 22:30
    }

    bb3: {
        _1[_4][_7] = move (_10.0: usize); // scope 0 at ui/const-generics/issue-97007.rs:22:9: 22:30
        _11 = _3;                        // scope 0 at ui/const-generics/issue-97007.rs:23:16: 23:18
        _12 = const _;                   // scope 0 at ui/const-generics/issue-97007.rs:23:9: 23:19
        _13 = Lt(_11, _12);              // scope 0 at ui/const-generics/issue-97007.rs:23:9: 23:19
        assert(move _13, "index out of bounds: the length is {} but the index is {}", move _12, _11) -> bb4; // scope 0 at ui/const-generics/issue-97007.rs:23:9: 23:19
    }

    bb4: {
        _14 = _2;                        // scope 0 at ui/const-generics/issue-97007.rs:23:20: 23:24
        _15 = const _;                   // scope 0 at ui/const-generics/issue-97007.rs:23:9: 23:25
        _16 = Lt(_14, _15);              // scope 0 at ui/const-generics/issue-97007.rs:23:9: 23:25
        assert(move _16, "index out of bounds: the length is {} but the index is {}", move _15, _14) -> bb5; // scope 0 at ui/const-generics/issue-97007.rs:23:9: 23:25
    }

    bb5: {
        _17 = CheckedSub(_1[_11][_14], const 1_usize); // scope 0 at ui/const-generics/issue-97007.rs:23:9: 23:30
        assert(!move (_17.1: bool), "attempt to compute `{} - {}`, which would overflow", _1[_11][_14], const 1_usize) -> bb6; // scope 0 at ui/const-generics/issue-97007.rs:23:9: 23:30
    }

    bb6: {
        _1[_11][_14] = move (_17.0: usize); // scope 0 at ui/const-generics/issue-97007.rs:23:9: 23:30
        _0 = _1;                         // scope 0 at ui/const-generics/issue-97007.rs:24:9: 24:15
        return;                          // scope 0 at ui/const-generics/issue-97007.rs:25:6: 25:6
    }
}

// MIR FOR CTFE
fn walk(_1: [[usize; N_ISLANDS]; N_ISLANDS], _2: usize, _3: usize) -> [[usize; N_ISLANDS]; N_ISLANDS] {
    debug matrix => _1;                  // in scope 0 at ui/const-generics/issue-97007.rs:21:23: 21:33
    debug from => _2;                    // in scope 0 at ui/const-generics/issue-97007.rs:21:43: 21:47
    debug to => _3;                      // in scope 0 at ui/const-generics/issue-97007.rs:21:56: 21:58
    let mut _0: [[usize; N_ISLANDS]; N_ISLANDS]; // return place in scope 0 at ui/const-generics/issue-97007.rs:21:70: 21:76
    let _4: usize;                       // in scope 0 at ui/const-generics/issue-97007.rs:22:16: 22:20
    let mut _5: usize;                   // in scope 0 at ui/const-generics/issue-97007.rs:22:9: 22:21
    let mut _6: bool;                    // in scope 0 at ui/const-generics/issue-97007.rs:22:9: 22:21
    let _7: usize;                       // in scope 0 at ui/const-generics/issue-97007.rs:22:22: 22:24
    let mut _8: usize;                   // in scope 0 at ui/const-generics/issue-97007.rs:22:9: 22:25
    let mut _9: bool;                    // in scope 0 at ui/const-generics/issue-97007.rs:22:9: 22:25
    let mut _10: (usize, bool);          // in scope 0 at ui/const-generics/issue-97007.rs:22:9: 22:30
    let _11: usize;                      // in scope 0 at ui/const-generics/issue-97007.rs:23:16: 23:18
    let mut _12: usize;                  // in scope 0 at ui/const-generics/issue-97007.rs:23:9: 23:19
    let mut _13: bool;                   // in scope 0 at ui/const-generics/issue-97007.rs:23:9: 23:19
    let _14: usize;                      // in scope 0 at ui/const-generics/issue-97007.rs:23:20: 23:24
    let mut _15: usize;                  // in scope 0 at ui/const-generics/issue-97007.rs:23:9: 23:25
    let mut _16: bool;                   // in scope 0 at ui/const-generics/issue-97007.rs:23:9: 23:25
    let mut _17: (usize, bool);          // in scope 0 at ui/const-generics/issue-97007.rs:23:9: 23:30

    bb0: {
        StorageLive(_4);                 // scope 0 at ui/const-generics/issue-97007.rs:22:16: 22:20
        _4 = _2;                         // scope 0 at ui/const-generics/issue-97007.rs:22:16: 22:20
        _5 = Len(_1);                    // scope 0 at ui/const-generics/issue-97007.rs:22:9: 22:21
        _6 = Lt(_4, _5);                 // scope 0 at ui/const-generics/issue-97007.rs:22:9: 22:21
        assert(move _6, "index out of bounds: the length is {} but the index is {}", move _5, _4) -> bb1; // scope 0 at ui/const-generics/issue-97007.rs:22:9: 22:21
    }

    bb1: {
        StorageLive(_7);                 // scope 0 at ui/const-generics/issue-97007.rs:22:22: 22:24
        _7 = _3;                         // scope 0 at ui/const-generics/issue-97007.rs:22:22: 22:24
        _8 = Len(_1[_4]);                // scope 0 at ui/const-generics/issue-97007.rs:22:9: 22:25
        _9 = Lt(_7, _8);                 // scope 0 at ui/const-generics/issue-97007.rs:22:9: 22:25
        assert(move _9, "index out of bounds: the length is {} but the index is {}", move _8, _7) -> bb2; // scope 0 at ui/const-generics/issue-97007.rs:22:9: 22:25
    }

    bb2: {
        _10 = CheckedSub(_1[_4][_7], const 1_usize); // scope 0 at ui/const-generics/issue-97007.rs:22:9: 22:30
        assert(!move (_10.1: bool), "attempt to compute `{} - {}`, which would overflow", _1[_4][_7], const 1_usize) -> bb3; // scope 0 at ui/const-generics/issue-97007.rs:22:9: 22:30
    }

    bb3: {
        _1[_4][_7] = move (_10.0: usize); // scope 0 at ui/const-generics/issue-97007.rs:22:9: 22:30
        StorageDead(_7);                 // scope 0 at ui/const-generics/issue-97007.rs:22:30: 22:31
        StorageDead(_4);                 // scope 0 at ui/const-generics/issue-97007.rs:22:30: 22:31
        StorageLive(_11);                // scope 0 at ui/const-generics/issue-97007.rs:23:16: 23:18
        _11 = _3;                        // scope 0 at ui/const-generics/issue-97007.rs:23:16: 23:18
        _12 = Len(_1);                   // scope 0 at ui/const-generics/issue-97007.rs:23:9: 23:19
        _13 = Lt(_11, _12);              // scope 0 at ui/const-generics/issue-97007.rs:23:9: 23:19
        assert(move _13, "index out of bounds: the length is {} but the index is {}", move _12, _11) -> bb4; // scope 0 at ui/const-generics/issue-97007.rs:23:9: 23:19
    }

    bb4: {
        StorageLive(_14);                // scope 0 at ui/const-generics/issue-97007.rs:23:20: 23:24
        _14 = _2;                        // scope 0 at ui/const-generics/issue-97007.rs:23:20: 23:24
        _15 = Len(_1[_11]);              // scope 0 at ui/const-generics/issue-97007.rs:23:9: 23:25
        _16 = Lt(_14, _15);              // scope 0 at ui/const-generics/issue-97007.rs:23:9: 23:25
        assert(move _16, "index out of bounds: the length is {} but the index is {}", move _15, _14) -> bb5; // scope 0 at ui/const-generics/issue-97007.rs:23:9: 23:25
    }

    bb5: {
        _17 = CheckedSub(_1[_11][_14], const 1_usize); // scope 0 at ui/const-generics/issue-97007.rs:23:9: 23:30
        assert(!move (_17.1: bool), "attempt to compute `{} - {}`, which would overflow", _1[_11][_14], const 1_usize) -> bb6; // scope 0 at ui/const-generics/issue-97007.rs:23:9: 23:30
    }

    bb6: {
        _1[_11][_14] = move (_17.0: usize); // scope 0 at ui/const-generics/issue-97007.rs:23:9: 23:30
        StorageDead(_14);                // scope 0 at ui/const-generics/issue-97007.rs:23:30: 23:31
        StorageDead(_11);                // scope 0 at ui/const-generics/issue-97007.rs:23:30: 23:31
        _0 = _1;                         // scope 0 at ui/const-generics/issue-97007.rs:24:9: 24:15
        return;                          // scope 0 at ui/const-generics/issue-97007.rs:25:6: 25:6
    }
}

fn to_matrix(_1: [(usize, usize); N_BRIDGES]) -> [[usize; N_ISLANDS]; N_ISLANDS] {
    debug bridges => _1;                 // in scope 0 at ui/const-generics/issue-97007.rs:27:24: 27:31
    let _2: [[usize; N_ISLANDS]; N_ISLANDS]; // in scope 0 at ui/const-generics/issue-97007.rs:28:13: 28:19
    let mut _4: [[usize; N_ISLANDS]; N_ISLANDS]; // in scope 0 at ui/const-generics/issue-97007.rs:30:28: 30:34
    let mut _5: (usize, usize);          // in scope 0 at ui/const-generics/issue-97007.rs:30:36: 30:46
    let _6: usize;                       // in scope 0 at ui/const-generics/issue-97007.rs:30:44: 30:45
    let mut _8: [[usize; N_ISLANDS]; N_ISLANDS]; // in scope 0 at ui/const-generics/issue-97007.rs:31:28: 31:34
    let mut _9: (usize, usize);          // in scope 0 at ui/const-generics/issue-97007.rs:31:36: 31:46
    let _10: usize;                      // in scope 0 at ui/const-generics/issue-97007.rs:31:44: 31:45
    let mut _12: [[usize; N_ISLANDS]; N_ISLANDS]; // in scope 0 at ui/const-generics/issue-97007.rs:32:28: 32:34
    let mut _13: (usize, usize);         // in scope 0 at ui/const-generics/issue-97007.rs:32:36: 32:46
    let _14: usize;                      // in scope 0 at ui/const-generics/issue-97007.rs:32:44: 32:45
    let mut _16: [[usize; N_ISLANDS]; N_ISLANDS]; // in scope 0 at ui/const-generics/issue-97007.rs:33:28: 33:34
    let mut _17: (usize, usize);         // in scope 0 at ui/const-generics/issue-97007.rs:33:36: 33:46
    let _18: usize;                      // in scope 0 at ui/const-generics/issue-97007.rs:33:44: 33:45
    let mut _20: [[usize; N_ISLANDS]; N_ISLANDS]; // in scope 0 at ui/const-generics/issue-97007.rs:34:28: 34:34
    let mut _21: (usize, usize);         // in scope 0 at ui/const-generics/issue-97007.rs:34:36: 34:46
    let _22: usize;                      // in scope 0 at ui/const-generics/issue-97007.rs:34:44: 34:45
    let mut _24: [[usize; N_ISLANDS]; N_ISLANDS]; // in scope 0 at ui/const-generics/issue-97007.rs:35:28: 35:34
    let mut _25: (usize, usize);         // in scope 0 at ui/const-generics/issue-97007.rs:35:36: 35:46
    let _26: usize;                      // in scope 0 at ui/const-generics/issue-97007.rs:35:44: 35:45
    let mut _27: [[usize; N_ISLANDS]; N_ISLANDS]; // in scope 0 at ui/const-generics/issue-97007.rs:36:28: 36:34
    let mut _28: (usize, usize);         // in scope 0 at ui/const-generics/issue-97007.rs:36:36: 36:46
    let _29: usize;                      // in scope 0 at ui/const-generics/issue-97007.rs:36:44: 36:45
    scope 1 {
        debug matrix => _2;              // in scope 1 at ui/const-generics/issue-97007.rs:28:13: 28:19
        let _3: [[usize; N_ISLANDS]; N_ISLANDS]; // in scope 1 at ui/const-generics/issue-97007.rs:30:13: 30:19
        scope 2 {
            debug matrix => _3;          // in scope 2 at ui/const-generics/issue-97007.rs:30:13: 30:19
            let _7: [[usize; N_ISLANDS]; N_ISLANDS]; // in scope 2 at ui/const-generics/issue-97007.rs:31:13: 31:19
            scope 3 {
                debug matrix => _7;      // in scope 3 at ui/const-generics/issue-97007.rs:31:13: 31:19
                let _11: [[usize; N_ISLANDS]; N_ISLANDS]; // in scope 3 at ui/const-generics/issue-97007.rs:32:13: 32:19
                scope 4 {
                    debug matrix => _11; // in scope 4 at ui/const-generics/issue-97007.rs:32:13: 32:19
                    let _15: [[usize; N_ISLANDS]; N_ISLANDS]; // in scope 4 at ui/const-generics/issue-97007.rs:33:13: 33:19
                    scope 5 {
                        debug matrix => _15; // in scope 5 at ui/const-generics/issue-97007.rs:33:13: 33:19
                        let _19: [[usize; N_ISLANDS]; N_ISLANDS]; // in scope 5 at ui/const-generics/issue-97007.rs:34:13: 34:19
                        scope 6 {
                            debug matrix => _19; // in scope 6 at ui/const-generics/issue-97007.rs:34:13: 34:19
                            let _23: [[usize; N_ISLANDS]; N_ISLANDS]; // in scope 6 at ui/const-generics/issue-97007.rs:35:13: 35:19
                            scope 7 {
                                debug matrix => _23; // in scope 7 at ui/const-generics/issue-97007.rs:35:13: 35:19
                                let mut _0: [[usize; N_ISLANDS]; N_ISLANDS]; // return place in scope 7 at ui/const-generics/issue-97007.rs:36:13: 36:19
                                scope 8 {
                                    debug matrix => _0; // in scope 8 at ui/const-generics/issue-97007.rs:36:13: 36:19
                                }
                            }
                        }
                    }
                }
            }
        }
    }

    bb0: {
        _2 = const _;                    // scope 0 at ui/const-generics/issue-97007.rs:28:22: 28:34
        _4 = _2;                         // scope 1 at ui/const-generics/issue-97007.rs:30:28: 30:34
        _6 = const 0_usize;              // scope 1 at ui/const-generics/issue-97007.rs:30:44: 30:45
        _5 = _1[_6];                     // scope 1 at ui/const-generics/issue-97007.rs:30:36: 30:46
        _3 = build(move _4, move _5) -> bb1; // scope 1 at ui/const-generics/issue-97007.rs:30:22: 30:47
                                         // mir::Constant
                                         // + span: ui/const-generics/issue-97007.rs:30:22: 30:27
                                         // + literal: Const { ty: fn([[usize; N_ISLANDS]; N_ISLANDS], (usize, usize)) -> [[usize; N_ISLANDS]; N_ISLANDS] {build}, val: Value(<ZST>) }
    }

    bb1: {
        _8 = _3;                         // scope 2 at ui/const-generics/issue-97007.rs:31:28: 31:34
        _10 = const 1_usize;             // scope 2 at ui/const-generics/issue-97007.rs:31:44: 31:45
        _9 = _1[_10];                    // scope 2 at ui/const-generics/issue-97007.rs:31:36: 31:46
        _7 = build(move _8, move _9) -> bb2; // scope 2 at ui/const-generics/issue-97007.rs:31:22: 31:47
                                         // mir::Constant
                                         // + span: ui/const-generics/issue-97007.rs:31:22: 31:27
                                         // + literal: Const { ty: fn([[usize; N_ISLANDS]; N_ISLANDS], (usize, usize)) -> [[usize; N_ISLANDS]; N_ISLANDS] {build}, val: Value(<ZST>) }
    }

    bb2: {
        _12 = _7;                        // scope 3 at ui/const-generics/issue-97007.rs:32:28: 32:34
        _14 = const 2_usize;             // scope 3 at ui/const-generics/issue-97007.rs:32:44: 32:45
        _13 = _1[_14];                   // scope 3 at ui/const-generics/issue-97007.rs:32:36: 32:46
        _11 = build(move _12, move _13) -> bb3; // scope 3 at ui/const-generics/issue-97007.rs:32:22: 32:47
                                         // mir::Constant
                                         // + span: ui/const-generics/issue-97007.rs:32:22: 32:27
                                         // + literal: Const { ty: fn([[usize; N_ISLANDS]; N_ISLANDS], (usize, usize)) -> [[usize; N_ISLANDS]; N_ISLANDS] {build}, val: Value(<ZST>) }
    }

    bb3: {
        _16 = _11;                       // scope 4 at ui/const-generics/issue-97007.rs:33:28: 33:34
        _18 = const 3_usize;             // scope 4 at ui/const-generics/issue-97007.rs:33:44: 33:45
        _17 = _1[_18];                   // scope 4 at ui/const-generics/issue-97007.rs:33:36: 33:46
        _15 = build(move _16, move _17) -> bb4; // scope 4 at ui/const-generics/issue-97007.rs:33:22: 33:47
                                         // mir::Constant
                                         // + span: ui/const-generics/issue-97007.rs:33:22: 33:27
                                         // + literal: Const { ty: fn([[usize; N_ISLANDS]; N_ISLANDS], (usize, usize)) -> [[usize; N_ISLANDS]; N_ISLANDS] {build}, val: Value(<ZST>) }
    }

    bb4: {
        _20 = _15;                       // scope 5 at ui/const-generics/issue-97007.rs:34:28: 34:34
        _22 = const 4_usize;             // scope 5 at ui/const-generics/issue-97007.rs:34:44: 34:45
        _21 = _1[_22];                   // scope 5 at ui/const-generics/issue-97007.rs:34:36: 34:46
        _19 = build(move _20, move _21) -> bb5; // scope 5 at ui/const-generics/issue-97007.rs:34:22: 34:47
                                         // mir::Constant
                                         // + span: ui/const-generics/issue-97007.rs:34:22: 34:27
                                         // + literal: Const { ty: fn([[usize; N_ISLANDS]; N_ISLANDS], (usize, usize)) -> [[usize; N_ISLANDS]; N_ISLANDS] {build}, val: Value(<ZST>) }
    }

    bb5: {
        _24 = _19;                       // scope 6 at ui/const-generics/issue-97007.rs:35:28: 35:34
        _26 = const 5_usize;             // scope 6 at ui/const-generics/issue-97007.rs:35:44: 35:45
        _25 = _1[_26];                   // scope 6 at ui/const-generics/issue-97007.rs:35:36: 35:46
        _23 = build(move _24, move _25) -> bb6; // scope 6 at ui/const-generics/issue-97007.rs:35:22: 35:47
                                         // mir::Constant
                                         // + span: ui/const-generics/issue-97007.rs:35:22: 35:27
                                         // + literal: Const { ty: fn([[usize; N_ISLANDS]; N_ISLANDS], (usize, usize)) -> [[usize; N_ISLANDS]; N_ISLANDS] {build}, val: Value(<ZST>) }
    }

    bb6: {
        _27 = _23;                       // scope 7 at ui/const-generics/issue-97007.rs:36:28: 36:34
        _29 = const 6_usize;             // scope 7 at ui/const-generics/issue-97007.rs:36:44: 36:45
        _28 = _1[_29];                   // scope 7 at ui/const-generics/issue-97007.rs:36:36: 36:46
        _0 = build(move _27, move _28) -> bb7; // scope 7 at ui/const-generics/issue-97007.rs:36:22: 36:47
                                         // mir::Constant
                                         // + span: ui/const-generics/issue-97007.rs:36:22: 36:27
                                         // + literal: Const { ty: fn([[usize; N_ISLANDS]; N_ISLANDS], (usize, usize)) -> [[usize; N_ISLANDS]; N_ISLANDS] {build}, val: Value(<ZST>) }
    }

    bb7: {
        return;                          // scope 0 at ui/const-generics/issue-97007.rs:39:6: 39:6
    }
}

// MIR FOR CTFE
fn to_matrix(_1: [(usize, usize); N_BRIDGES]) -> [[usize; N_ISLANDS]; N_ISLANDS] {
    debug bridges => _1;                 // in scope 0 at ui/const-generics/issue-97007.rs:27:24: 27:31
    let mut _0: [[usize; N_ISLANDS]; N_ISLANDS]; // return place in scope 0 at ui/const-generics/issue-97007.rs:27:65: 27:71
    let _2: [[usize; N_ISLANDS]; N_ISLANDS]; // in scope 0 at ui/const-generics/issue-97007.rs:28:13: 28:19
    let mut _4: [[usize; N_ISLANDS]; N_ISLANDS]; // in scope 0 at ui/const-generics/issue-97007.rs:30:28: 30:34
    let mut _5: (usize, usize);          // in scope 0 at ui/const-generics/issue-97007.rs:30:36: 30:46
    let _6: usize;                       // in scope 0 at ui/const-generics/issue-97007.rs:30:44: 30:45
    let mut _7: usize;                   // in scope 0 at ui/const-generics/issue-97007.rs:30:36: 30:46
    let mut _8: bool;                    // in scope 0 at ui/const-generics/issue-97007.rs:30:36: 30:46
    let mut _10: [[usize; N_ISLANDS]; N_ISLANDS]; // in scope 0 at ui/const-generics/issue-97007.rs:31:28: 31:34
    let mut _11: (usize, usize);         // in scope 0 at ui/const-generics/issue-97007.rs:31:36: 31:46
    let _12: usize;                      // in scope 0 at ui/const-generics/issue-97007.rs:31:44: 31:45
    let mut _13: usize;                  // in scope 0 at ui/const-generics/issue-97007.rs:31:36: 31:46
    let mut _14: bool;                   // in scope 0 at ui/const-generics/issue-97007.rs:31:36: 31:46
    let mut _16: [[usize; N_ISLANDS]; N_ISLANDS]; // in scope 0 at ui/const-generics/issue-97007.rs:32:28: 32:34
    let mut _17: (usize, usize);         // in scope 0 at ui/const-generics/issue-97007.rs:32:36: 32:46
    let _18: usize;                      // in scope 0 at ui/const-generics/issue-97007.rs:32:44: 32:45
    let mut _19: usize;                  // in scope 0 at ui/const-generics/issue-97007.rs:32:36: 32:46
    let mut _20: bool;                   // in scope 0 at ui/const-generics/issue-97007.rs:32:36: 32:46
    let mut _22: [[usize; N_ISLANDS]; N_ISLANDS]; // in scope 0 at ui/const-generics/issue-97007.rs:33:28: 33:34
    let mut _23: (usize, usize);         // in scope 0 at ui/const-generics/issue-97007.rs:33:36: 33:46
    let _24: usize;                      // in scope 0 at ui/const-generics/issue-97007.rs:33:44: 33:45
    let mut _25: usize;                  // in scope 0 at ui/const-generics/issue-97007.rs:33:36: 33:46
    let mut _26: bool;                   // in scope 0 at ui/const-generics/issue-97007.rs:33:36: 33:46
    let mut _28: [[usize; N_ISLANDS]; N_ISLANDS]; // in scope 0 at ui/const-generics/issue-97007.rs:34:28: 34:34
    let mut _29: (usize, usize);         // in scope 0 at ui/const-generics/issue-97007.rs:34:36: 34:46
    let _30: usize;                      // in scope 0 at ui/const-generics/issue-97007.rs:34:44: 34:45
    let mut _31: usize;                  // in scope 0 at ui/const-generics/issue-97007.rs:34:36: 34:46
    let mut _32: bool;                   // in scope 0 at ui/const-generics/issue-97007.rs:34:36: 34:46
    let mut _34: [[usize; N_ISLANDS]; N_ISLANDS]; // in scope 0 at ui/const-generics/issue-97007.rs:35:28: 35:34
    let mut _35: (usize, usize);         // in scope 0 at ui/const-generics/issue-97007.rs:35:36: 35:46
    let _36: usize;                      // in scope 0 at ui/const-generics/issue-97007.rs:35:44: 35:45
    let mut _37: usize;                  // in scope 0 at ui/const-generics/issue-97007.rs:35:36: 35:46
    let mut _38: bool;                   // in scope 0 at ui/const-generics/issue-97007.rs:35:36: 35:46
    let mut _40: [[usize; N_ISLANDS]; N_ISLANDS]; // in scope 0 at ui/const-generics/issue-97007.rs:36:28: 36:34
    let mut _41: (usize, usize);         // in scope 0 at ui/const-generics/issue-97007.rs:36:36: 36:46
    let _42: usize;                      // in scope 0 at ui/const-generics/issue-97007.rs:36:44: 36:45
    let mut _43: usize;                  // in scope 0 at ui/const-generics/issue-97007.rs:36:36: 36:46
    let mut _44: bool;                   // in scope 0 at ui/const-generics/issue-97007.rs:36:36: 36:46
    scope 1 {
        debug matrix => _2;              // in scope 1 at ui/const-generics/issue-97007.rs:28:13: 28:19
        let _3: [[usize; N_ISLANDS]; N_ISLANDS]; // in scope 1 at ui/const-generics/issue-97007.rs:30:13: 30:19
        scope 2 {
            debug matrix => _3;          // in scope 2 at ui/const-generics/issue-97007.rs:30:13: 30:19
            let _9: [[usize; N_ISLANDS]; N_ISLANDS]; // in scope 2 at ui/const-generics/issue-97007.rs:31:13: 31:19
            scope 3 {
                debug matrix => _9;      // in scope 3 at ui/const-generics/issue-97007.rs:31:13: 31:19
                let _15: [[usize; N_ISLANDS]; N_ISLANDS]; // in scope 3 at ui/const-generics/issue-97007.rs:32:13: 32:19
                scope 4 {
                    debug matrix => _15; // in scope 4 at ui/const-generics/issue-97007.rs:32:13: 32:19
                    let _21: [[usize; N_ISLANDS]; N_ISLANDS]; // in scope 4 at ui/const-generics/issue-97007.rs:33:13: 33:19
                    scope 5 {
                        debug matrix => _21; // in scope 5 at ui/const-generics/issue-97007.rs:33:13: 33:19
                        let _27: [[usize; N_ISLANDS]; N_ISLANDS]; // in scope 5 at ui/const-generics/issue-97007.rs:34:13: 34:19
                        scope 6 {
                            debug matrix => _27; // in scope 6 at ui/const-generics/issue-97007.rs:34:13: 34:19
                            let _33: [[usize; N_ISLANDS]; N_ISLANDS]; // in scope 6 at ui/const-generics/issue-97007.rs:35:13: 35:19
                            scope 7 {
                                debug matrix => _33; // in scope 7 at ui/const-generics/issue-97007.rs:35:13: 35:19
                                let _39: [[usize; N_ISLANDS]; N_ISLANDS]; // in scope 7 at ui/const-generics/issue-97007.rs:36:13: 36:19
                                scope 8 {
                                    debug matrix => _39; // in scope 8 at ui/const-generics/issue-97007.rs:36:13: 36:19
                                }
                            }
                        }
                    }
                }
            }
        }
    }

    bb0: {
        StorageLive(_2);                 // scope 0 at ui/const-generics/issue-97007.rs:28:13: 28:19
        _2 = const _;                    // scope 0 at ui/const-generics/issue-97007.rs:28:22: 28:34
        StorageLive(_3);                 // scope 1 at ui/const-generics/issue-97007.rs:30:13: 30:19
        StorageLive(_4);                 // scope 1 at ui/const-generics/issue-97007.rs:30:28: 30:34
        _4 = _2;                         // scope 1 at ui/const-generics/issue-97007.rs:30:28: 30:34
        StorageLive(_5);                 // scope 1 at ui/const-generics/issue-97007.rs:30:36: 30:46
        StorageLive(_6);                 // scope 1 at ui/const-generics/issue-97007.rs:30:44: 30:45
        _6 = const 0_usize;              // scope 1 at ui/const-generics/issue-97007.rs:30:44: 30:45
        _7 = Len(_1);                    // scope 1 at ui/const-generics/issue-97007.rs:30:36: 30:46
        _8 = Lt(_6, _7);                 // scope 1 at ui/const-generics/issue-97007.rs:30:36: 30:46
        assert(move _8, "index out of bounds: the length is {} but the index is {}", move _7, _6) -> bb1; // scope 1 at ui/const-generics/issue-97007.rs:30:36: 30:46
    }

    bb1: {
        _5 = _1[_6];                     // scope 1 at ui/const-generics/issue-97007.rs:30:36: 30:46
        ConstEvalCounter;                // scope 1 at ui/const-generics/issue-97007.rs:30:22: 30:47
        _3 = build(move _4, move _5) -> bb2; // scope 1 at ui/const-generics/issue-97007.rs:30:22: 30:47
                                         // mir::Constant
                                         // + span: ui/const-generics/issue-97007.rs:30:22: 30:27
                                         // + literal: Const { ty: fn([[usize; N_ISLANDS]; N_ISLANDS], (usize, usize)) -> [[usize; N_ISLANDS]; N_ISLANDS] {build}, val: Value(<ZST>) }
    }

    bb2: {
        StorageDead(_5);                 // scope 1 at ui/const-generics/issue-97007.rs:30:46: 30:47
        StorageDead(_4);                 // scope 1 at ui/const-generics/issue-97007.rs:30:46: 30:47
        StorageDead(_6);                 // scope 1 at ui/const-generics/issue-97007.rs:30:47: 30:48
        StorageLive(_9);                 // scope 2 at ui/const-generics/issue-97007.rs:31:13: 31:19
        StorageLive(_10);                // scope 2 at ui/const-generics/issue-97007.rs:31:28: 31:34
        _10 = _3;                        // scope 2 at ui/const-generics/issue-97007.rs:31:28: 31:34
        StorageLive(_11);                // scope 2 at ui/const-generics/issue-97007.rs:31:36: 31:46
        StorageLive(_12);                // scope 2 at ui/const-generics/issue-97007.rs:31:44: 31:45
        _12 = const 1_usize;             // scope 2 at ui/const-generics/issue-97007.rs:31:44: 31:45
        _13 = Len(_1);                   // scope 2 at ui/const-generics/issue-97007.rs:31:36: 31:46
        _14 = Lt(_12, _13);              // scope 2 at ui/const-generics/issue-97007.rs:31:36: 31:46
        assert(move _14, "index out of bounds: the length is {} but the index is {}", move _13, _12) -> bb3; // scope 2 at ui/const-generics/issue-97007.rs:31:36: 31:46
    }

    bb3: {
        _11 = _1[_12];                   // scope 2 at ui/const-generics/issue-97007.rs:31:36: 31:46
        ConstEvalCounter;                // scope 2 at ui/const-generics/issue-97007.rs:31:22: 31:47
        _9 = build(move _10, move _11) -> bb4; // scope 2 at ui/const-generics/issue-97007.rs:31:22: 31:47
                                         // mir::Constant
                                         // + span: ui/const-generics/issue-97007.rs:31:22: 31:27
                                         // + literal: Const { ty: fn([[usize; N_ISLANDS]; N_ISLANDS], (usize, usize)) -> [[usize; N_ISLANDS]; N_ISLANDS] {build}, val: Value(<ZST>) }
    }

    bb4: {
        StorageDead(_11);                // scope 2 at ui/const-generics/issue-97007.rs:31:46: 31:47
        StorageDead(_10);                // scope 2 at ui/const-generics/issue-97007.rs:31:46: 31:47
        StorageDead(_12);                // scope 2 at ui/const-generics/issue-97007.rs:31:47: 31:48
        StorageLive(_15);                // scope 3 at ui/const-generics/issue-97007.rs:32:13: 32:19
        StorageLive(_16);                // scope 3 at ui/const-generics/issue-97007.rs:32:28: 32:34
        _16 = _9;                        // scope 3 at ui/const-generics/issue-97007.rs:32:28: 32:34
        StorageLive(_17);                // scope 3 at ui/const-generics/issue-97007.rs:32:36: 32:46
        StorageLive(_18);                // scope 3 at ui/const-generics/issue-97007.rs:32:44: 32:45
        _18 = const 2_usize;             // scope 3 at ui/const-generics/issue-97007.rs:32:44: 32:45
        _19 = Len(_1);                   // scope 3 at ui/const-generics/issue-97007.rs:32:36: 32:46
        _20 = Lt(_18, _19);              // scope 3 at ui/const-generics/issue-97007.rs:32:36: 32:46
        assert(move _20, "index out of bounds: the length is {} but the index is {}", move _19, _18) -> bb5; // scope 3 at ui/const-generics/issue-97007.rs:32:36: 32:46
    }

    bb5: {
        _17 = _1[_18];                   // scope 3 at ui/const-generics/issue-97007.rs:32:36: 32:46
        ConstEvalCounter;                // scope 3 at ui/const-generics/issue-97007.rs:32:22: 32:47
        _15 = build(move _16, move _17) -> bb6; // scope 3 at ui/const-generics/issue-97007.rs:32:22: 32:47
                                         // mir::Constant
                                         // + span: ui/const-generics/issue-97007.rs:32:22: 32:27
                                         // + literal: Const { ty: fn([[usize; N_ISLANDS]; N_ISLANDS], (usize, usize)) -> [[usize; N_ISLANDS]; N_ISLANDS] {build}, val: Value(<ZST>) }
    }

    bb6: {
        StorageDead(_17);                // scope 3 at ui/const-generics/issue-97007.rs:32:46: 32:47
        StorageDead(_16);                // scope 3 at ui/const-generics/issue-97007.rs:32:46: 32:47
        StorageDead(_18);                // scope 3 at ui/const-generics/issue-97007.rs:32:47: 32:48
        StorageLive(_21);                // scope 4 at ui/const-generics/issue-97007.rs:33:13: 33:19
        StorageLive(_22);                // scope 4 at ui/const-generics/issue-97007.rs:33:28: 33:34
        _22 = _15;                       // scope 4 at ui/const-generics/issue-97007.rs:33:28: 33:34
        StorageLive(_23);                // scope 4 at ui/const-generics/issue-97007.rs:33:36: 33:46
        StorageLive(_24);                // scope 4 at ui/const-generics/issue-97007.rs:33:44: 33:45
        _24 = const 3_usize;             // scope 4 at ui/const-generics/issue-97007.rs:33:44: 33:45
        _25 = Len(_1);                   // scope 4 at ui/const-generics/issue-97007.rs:33:36: 33:46
        _26 = Lt(_24, _25);              // scope 4 at ui/const-generics/issue-97007.rs:33:36: 33:46
        assert(move _26, "index out of bounds: the length is {} but the index is {}", move _25, _24) -> bb7; // scope 4 at ui/const-generics/issue-97007.rs:33:36: 33:46
    }

    bb7: {
        _23 = _1[_24];                   // scope 4 at ui/const-generics/issue-97007.rs:33:36: 33:46
        ConstEvalCounter;                // scope 4 at ui/const-generics/issue-97007.rs:33:22: 33:47
        _21 = build(move _22, move _23) -> bb8; // scope 4 at ui/const-generics/issue-97007.rs:33:22: 33:47
                                         // mir::Constant
                                         // + span: ui/const-generics/issue-97007.rs:33:22: 33:27
                                         // + literal: Const { ty: fn([[usize; N_ISLANDS]; N_ISLANDS], (usize, usize)) -> [[usize; N_ISLANDS]; N_ISLANDS] {build}, val: Value(<ZST>) }
    }

    bb8: {
        StorageDead(_23);                // scope 4 at ui/const-generics/issue-97007.rs:33:46: 33:47
        StorageDead(_22);                // scope 4 at ui/const-generics/issue-97007.rs:33:46: 33:47
        StorageDead(_24);                // scope 4 at ui/const-generics/issue-97007.rs:33:47: 33:48
        StorageLive(_27);                // scope 5 at ui/const-generics/issue-97007.rs:34:13: 34:19
        StorageLive(_28);                // scope 5 at ui/const-generics/issue-97007.rs:34:28: 34:34
        _28 = _21;                       // scope 5 at ui/const-generics/issue-97007.rs:34:28: 34:34
        StorageLive(_29);                // scope 5 at ui/const-generics/issue-97007.rs:34:36: 34:46
        StorageLive(_30);                // scope 5 at ui/const-generics/issue-97007.rs:34:44: 34:45
        _30 = const 4_usize;             // scope 5 at ui/const-generics/issue-97007.rs:34:44: 34:45
        _31 = Len(_1);                   // scope 5 at ui/const-generics/issue-97007.rs:34:36: 34:46
        _32 = Lt(_30, _31);              // scope 5 at ui/const-generics/issue-97007.rs:34:36: 34:46
        assert(move _32, "index out of bounds: the length is {} but the index is {}", move _31, _30) -> bb9; // scope 5 at ui/const-generics/issue-97007.rs:34:36: 34:46
    }

    bb9: {
        _29 = _1[_30];                   // scope 5 at ui/const-generics/issue-97007.rs:34:36: 34:46
        ConstEvalCounter;                // scope 5 at ui/const-generics/issue-97007.rs:34:22: 34:47
        _27 = build(move _28, move _29) -> bb10; // scope 5 at ui/const-generics/issue-97007.rs:34:22: 34:47
                                         // mir::Constant
                                         // + span: ui/const-generics/issue-97007.rs:34:22: 34:27
                                         // + literal: Const { ty: fn([[usize; N_ISLANDS]; N_ISLANDS], (usize, usize)) -> [[usize; N_ISLANDS]; N_ISLANDS] {build}, val: Value(<ZST>) }
    }

    bb10: {
        StorageDead(_29);                // scope 5 at ui/const-generics/issue-97007.rs:34:46: 34:47
        StorageDead(_28);                // scope 5 at ui/const-generics/issue-97007.rs:34:46: 34:47
        StorageDead(_30);                // scope 5 at ui/const-generics/issue-97007.rs:34:47: 34:48
        StorageLive(_33);                // scope 6 at ui/const-generics/issue-97007.rs:35:13: 35:19
        StorageLive(_34);                // scope 6 at ui/const-generics/issue-97007.rs:35:28: 35:34
        _34 = _27;                       // scope 6 at ui/const-generics/issue-97007.rs:35:28: 35:34
        StorageLive(_35);                // scope 6 at ui/const-generics/issue-97007.rs:35:36: 35:46
        StorageLive(_36);                // scope 6 at ui/const-generics/issue-97007.rs:35:44: 35:45
        _36 = const 5_usize;             // scope 6 at ui/const-generics/issue-97007.rs:35:44: 35:45
        _37 = Len(_1);                   // scope 6 at ui/const-generics/issue-97007.rs:35:36: 35:46
        _38 = Lt(_36, _37);              // scope 6 at ui/const-generics/issue-97007.rs:35:36: 35:46
        assert(move _38, "index out of bounds: the length is {} but the index is {}", move _37, _36) -> bb11; // scope 6 at ui/const-generics/issue-97007.rs:35:36: 35:46
    }

    bb11: {
        _35 = _1[_36];                   // scope 6 at ui/const-generics/issue-97007.rs:35:36: 35:46
        ConstEvalCounter;                // scope 6 at ui/const-generics/issue-97007.rs:35:22: 35:47
        _33 = build(move _34, move _35) -> bb12; // scope 6 at ui/const-generics/issue-97007.rs:35:22: 35:47
                                         // mir::Constant
                                         // + span: ui/const-generics/issue-97007.rs:35:22: 35:27
                                         // + literal: Const { ty: fn([[usize; N_ISLANDS]; N_ISLANDS], (usize, usize)) -> [[usize; N_ISLANDS]; N_ISLANDS] {build}, val: Value(<ZST>) }
    }

    bb12: {
        StorageDead(_35);                // scope 6 at ui/const-generics/issue-97007.rs:35:46: 35:47
        StorageDead(_34);                // scope 6 at ui/const-generics/issue-97007.rs:35:46: 35:47
        StorageDead(_36);                // scope 6 at ui/const-generics/issue-97007.rs:35:47: 35:48
        StorageLive(_39);                // scope 7 at ui/const-generics/issue-97007.rs:36:13: 36:19
        StorageLive(_40);                // scope 7 at ui/const-generics/issue-97007.rs:36:28: 36:34
        _40 = _33;                       // scope 7 at ui/const-generics/issue-97007.rs:36:28: 36:34
        StorageLive(_41);                // scope 7 at ui/const-generics/issue-97007.rs:36:36: 36:46
        StorageLive(_42);                // scope 7 at ui/const-generics/issue-97007.rs:36:44: 36:45
        _42 = const 6_usize;             // scope 7 at ui/const-generics/issue-97007.rs:36:44: 36:45
        _43 = Len(_1);                   // scope 7 at ui/const-generics/issue-97007.rs:36:36: 36:46
        _44 = Lt(_42, _43);              // scope 7 at ui/const-generics/issue-97007.rs:36:36: 36:46
        assert(move _44, "index out of bounds: the length is {} but the index is {}", move _43, _42) -> bb13; // scope 7 at ui/const-generics/issue-97007.rs:36:36: 36:46
    }

    bb13: {
        _41 = _1[_42];                   // scope 7 at ui/const-generics/issue-97007.rs:36:36: 36:46
        ConstEvalCounter;                // scope 7 at ui/const-generics/issue-97007.rs:36:22: 36:47
        _39 = build(move _40, move _41) -> bb14; // scope 7 at ui/const-generics/issue-97007.rs:36:22: 36:47
                                         // mir::Constant
                                         // + span: ui/const-generics/issue-97007.rs:36:22: 36:27
                                         // + literal: Const { ty: fn([[usize; N_ISLANDS]; N_ISLANDS], (usize, usize)) -> [[usize; N_ISLANDS]; N_ISLANDS] {build}, val: Value(<ZST>) }
    }

    bb14: {
        StorageDead(_41);                // scope 7 at ui/const-generics/issue-97007.rs:36:46: 36:47
        StorageDead(_40);                // scope 7 at ui/const-generics/issue-97007.rs:36:46: 36:47
        StorageDead(_42);                // scope 7 at ui/const-generics/issue-97007.rs:36:47: 36:48
        _0 = _39;                        // scope 8 at ui/const-generics/issue-97007.rs:38:9: 38:15
        StorageDead(_39);                // scope 7 at ui/const-generics/issue-97007.rs:39:5: 39:6
        StorageDead(_33);                // scope 6 at ui/const-generics/issue-97007.rs:39:5: 39:6
        StorageDead(_27);                // scope 5 at ui/const-generics/issue-97007.rs:39:5: 39:6
        StorageDead(_21);                // scope 4 at ui/const-generics/issue-97007.rs:39:5: 39:6
        StorageDead(_15);                // scope 3 at ui/const-generics/issue-97007.rs:39:5: 39:6
        StorageDead(_9);                 // scope 2 at ui/const-generics/issue-97007.rs:39:5: 39:6
        StorageDead(_3);                 // scope 1 at ui/const-generics/issue-97007.rs:39:5: 39:6
        StorageDead(_2);                 // scope 0 at ui/const-generics/issue-97007.rs:39:5: 39:6
        return;                          // scope 0 at ui/const-generics/issue-97007.rs:39:6: 39:6
    }
}

to_matrix::{constant#0}: usize = {
    let mut _0: usize;                   // return place in scope 0 at ui/const-generics/issue-97007.rs:27:50: 27:59

    bb0: {
        _0 = const _;                    // scope 0 at ui/const-generics/issue-97007.rs:27:50: 27:59
        return;                          // scope 0 at ui/const-generics/issue-97007.rs:27:50: 27:59
    }
}

const BRIDGE_MATRIX: [[usize; N_ISLANDS]; N_ISLANDS] = {
    let mut _0: [[usize; N_ISLANDS]; N_ISLANDS]; // return place in scope 0 at ui/const-generics/issue-97007.rs:41:26: 41:57

    bb0: {
        ConstEvalCounter;                // scope 0 at ui/const-generics/issue-97007.rs:41:60: 41:78
        _0 = to_matrix(const _) -> bb1;  // scope 0 at ui/const-generics/issue-97007.rs:41:60: 41:78
                                         // mir::Constant
                                         // + span: ui/const-generics/issue-97007.rs:41:60: 41:69
                                         // + literal: Const { ty: fn([(usize, usize); N_BRIDGES]) -> [[usize; N_ISLANDS]; N_ISLANDS] {to_matrix}, val: Value(<ZST>) }
    }

    bb1: {
        return;                          // scope 0 at ui/const-generics/issue-97007.rs:41:5: 41:79
    }
}

BRIDGE_MATRIX::{constant#0}: usize = {
    let mut _0: usize;                   // return place in scope 0 at ui/const-generics/issue-97007.rs:41:35: 41:44

    bb0: {
        _0 = const _;                    // scope 0 at ui/const-generics/issue-97007.rs:41:35: 41:44
        return;                          // scope 0 at ui/const-generics/issue-97007.rs:41:35: 41:44
    }
}

BRIDGE_MATRIX::{constant#1}: usize = {
    let mut _0: usize;                   // return place in scope 0 at ui/const-generics/issue-97007.rs:41:47: 41:56

    bb0: {
        _0 = const _;                    // scope 0 at ui/const-generics/issue-97007.rs:41:47: 41:56
        return;                          // scope 0 at ui/const-generics/issue-97007.rs:41:47: 41:56
    }
}

lib::<impl at ui/const-generics/issue-97007.rs:47:5: 47:32>::{constant#0}: usize = {
    let mut _0: usize;                   // return place in scope 0 at ui/const-generics/issue-97007.rs:47:15: 47:16

    bb0: {
        _0 = const 0_usize;              // scope 0 at ui/const-generics/issue-97007.rs:47:15: 47:16
        return;                          // scope 0 at ui/const-generics/issue-97007.rs:47:15: 47:16
    }
}

lib::<impl at ui/const-generics/issue-97007.rs:47:5: 47:32>::{constant#1}: [[usize; N_ISLANDS]; N_ISLANDS] = {
    let mut _0: [[usize; N_ISLANDS]; N_ISLANDS]; // return place in scope 0 at ui/const-generics/issue-97007.rs:47:18: 47:31

    bb0: {
        _0 = const _;                    // scope 0 at ui/const-generics/issue-97007.rs:47:18: 47:31
        return;                          // scope 0 at ui/const-generics/issue-97007.rs:47:18: 47:31
    }
}

fn lib::<impl at ui/const-generics/issue-97007.rs:47:5: 47:32>::new() -> Walk<0, BRIDGE_MATRIX> {
    let mut _0: lib::Walk<0, BRIDGE_MATRIX>; // return place in scope 0 at ui/const-generics/issue-97007.rs:48:31: 48:35

    bb0: {
        return;                          // scope 0 at ui/const-generics/issue-97007.rs:50:10: 50:10
    }
}

// MIR FOR CTFE
fn lib::<impl at ui/const-generics/issue-97007.rs:47:5: 47:32>::new() -> Walk<0, BRIDGE_MATRIX> {
    let mut _0: lib::Walk<0, BRIDGE_MATRIX>; // return place in scope 0 at ui/const-generics/issue-97007.rs:48:31: 48:35
    let mut _1: ();                      // in scope 0 at ui/const-generics/issue-97007.rs:49:24: 49:26

    bb0: {
        StorageLive(_1);                 // scope 0 at ui/const-generics/issue-97007.rs:49:24: 49:26
        _1 = ();                         // scope 0 at ui/const-generics/issue-97007.rs:49:24: 49:26
        _0 = Walk::<0, BRIDGE_MATRIX> { _p: move _1 }; // scope 0 at ui/const-generics/issue-97007.rs:49:13: 49:28
                                         // adt
                                         // + user_ty: UserType(0)
        StorageDead(_1);                 // scope 0 at ui/const-generics/issue-97007.rs:49:27: 49:28
        return;                          // scope 0 at ui/const-generics/issue-97007.rs:50:10: 50:10
    }
}

lib::<impl at ui/const-generics/issue-97007.rs:53:5: 53:81>::{constant#0}: usize = {
    let mut _0: usize;                   // return place in scope 0 at ui/const-generics/issue-97007.rs:53:62: 53:69

    bb0: {
        _0 = const CURRENT;              // scope 0 at ui/const-generics/issue-97007.rs:53:62: 53:69
        return;                          // scope 0 at ui/const-generics/issue-97007.rs:53:62: 53:69
    }
}

lib::<impl at ui/const-generics/issue-97007.rs:53:5: 53:81>::{constant#1}: [[usize; N_ISLANDS]; N_ISLANDS] = {
    let mut _0: [[usize; N_ISLANDS]; N_ISLANDS]; // return place in scope 0 at ui/const-generics/issue-97007.rs:53:71: 53:80

    bb0: {
        _0 = const REMAINING;            // scope 0 at ui/const-generics/issue-97007.rs:53:71: 53:80
        return;                          // scope 0 at ui/const-generics/issue-97007.rs:53:71: 53:80
    }
}

fn lib::<impl at ui/const-generics/issue-97007.rs:53:5: 53:81>::proceed_to(_1: Walk<CURRENT, REMAINING>) -> Walk<NEXT, { walk(REMAINING, CURRENT, NEXT) }> {
    debug self => _1;                    // in scope 0 at ui/const-generics/issue-97007.rs:55:13: 55:17
    let mut _0: lib::Walk<NEXT, { walk(REMAINING, CURRENT, NEXT) }>; // return place in scope 0 at ui/const-generics/issue-97007.rs:56:14: 56:60

    bb0: {
        return;                          // scope 0 at ui/const-generics/issue-97007.rs:58:10: 58:10
    }
}

lib::<impl at ui/const-generics/issue-97007.rs:53:5: 53:81>::proceed_to::{constant#1}: usize = {
    let mut _0: usize;                   // return place in scope 0 at ui/const-generics/issue-97007.rs:56:19: 56:23

    bb0: {
        _0 = const NEXT;                 // scope 0 at ui/const-generics/issue-97007.rs:56:19: 56:23
        return;                          // scope 0 at ui/const-generics/issue-97007.rs:56:19: 56:23
    }
}

lib::<impl at ui/const-generics/issue-97007.rs:53:5: 53:81>::proceed_to::{constant#0}: [[usize; N_ISLANDS]; N_ISLANDS] = {
    let mut _0: [[usize; N_ISLANDS]; N_ISLANDS]; // return place in scope 0 at ui/const-generics/issue-97007.rs:56:25: 56:59

    bb0: {
        ConstEvalCounter;                // scope 0 at ui/const-generics/issue-97007.rs:56:27: 56:57
        _0 = walk(const REMAINING, const CURRENT, const NEXT) -> bb1; // scope 0 at ui/const-generics/issue-97007.rs:56:27: 56:57
                                         // mir::Constant
                                         // + span: ui/const-generics/issue-97007.rs:56:27: 56:31
                                         // + literal: Const { ty: fn([[usize; N_ISLANDS]; N_ISLANDS], usize, usize) -> [[usize; N_ISLANDS]; N_ISLANDS] {walk}, val: Value(<ZST>) }
    }

    bb1: {
        return;                          // scope 0 at ui/const-generics/issue-97007.rs:56:25: 56:59
    }
}

lib::<impl at ui/const-generics/issue-97007.rs:65:5: 65:59>::{constant#0}: usize = {
    let mut _0: usize;                   // return place in scope 0 at ui/const-generics/issue-97007.rs:65:37: 65:44

    bb0: {
        _0 = const CURRENT;              // scope 0 at ui/const-generics/issue-97007.rs:65:37: 65:44
        return;                          // scope 0 at ui/const-generics/issue-97007.rs:65:37: 65:44
    }
}

lib::<impl at ui/const-generics/issue-97007.rs:65:5: 65:59>::{constant#1}: [[usize; N_ISLANDS]; N_ISLANDS] = {
    let mut _0: [[usize; N_ISLANDS]; N_ISLANDS]; // return place in scope 0 at ui/const-generics/issue-97007.rs:65:46: 65:58

    bb0: {
        _0 = const _;                    // scope 0 at ui/const-generics/issue-97007.rs:65:46: 65:58
        return;                          // scope 0 at ui/const-generics/issue-97007.rs:65:46: 65:58
    }
}

fn lib::<impl at ui/const-generics/issue-97007.rs:65:5: 65:59>::collect_prize(_1: Walk<CURRENT, EMPTY_MATRIX>) -> Trophy {
    debug self => _1;                    // in scope 0 at ui/const-generics/issue-97007.rs:66:30: 66:34
    let mut _0: lib::Trophy;             // return place in scope 0 at ui/const-generics/issue-97007.rs:66:39: 66:45

    bb0: {
        return;                          // scope 0 at ui/const-generics/issue-97007.rs:68:10: 68:10
    }
}

fn main() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/const-generics/issue-97007.rs:74:11: 74:11
    let mut _1: lib::Walk<1, { walk(REMAINING, CURRENT, NEXT) }>; // in scope 0 at ui/const-generics/issue-97007.rs:76:13: 76:42
    let mut _2: lib::Walk<0, BRIDGE_MATRIX>; // in scope 0 at ui/const-generics/issue-97007.rs:76:13: 76:24
    scope 1 {
    }

    bb0: {
        _2 = Walk::<0, BRIDGE_MATRIX>::new() -> bb1; // scope 0 at ui/const-generics/issue-97007.rs:76:13: 76:24
                                         // mir::Constant
                                         // + span: ui/const-generics/issue-97007.rs:76:13: 76:22
                                         // + user_ty: UserType(1)
                                         // + literal: Const { ty: fn() -> Walk<0, BRIDGE_MATRIX> {Walk::<0, BRIDGE_MATRIX>::new}, val: Value(<ZST>) }
    }

    bb1: {
        _1 = Walk::<0, BRIDGE_MATRIX>::proceed_to::<1>(move _2) -> bb2; // scope 0 at ui/const-generics/issue-97007.rs:76:13: 76:42
                                         // mir::Constant
                                         // + span: ui/const-generics/issue-97007.rs:76:25: 76:35
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: fn(Walk<0, BRIDGE_MATRIX>) -> Walk<1, { walk(REMAINING, CURRENT, NEXT) }> {Walk::<0, BRIDGE_MATRIX>::proceed_to::<1>}, val: Value(<ZST>) }
    }

    bb2: {
        return;                          // scope 0 at ui/const-generics/issue-97007.rs:88:2: 88:2
    }
}

main::{constant#0}: usize = {
    let mut _0: usize;                   // return place in scope 0 at ui/const-generics/issue-97007.rs:76:38: 76:39

    bb0: {
        _0 = const 1_usize;              // scope 0 at ui/const-generics/issue-97007.rs:76:38: 76:39
        return;                          // scope 0 at ui/const-generics/issue-97007.rs:76:38: 76:39
    }
}
