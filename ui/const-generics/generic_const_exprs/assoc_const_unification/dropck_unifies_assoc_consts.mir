// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
Foo::{constant#0}: usize = {
    let mut _0: usize;                   // return place in scope 0 at ui/const-generics/generic_const_exprs/assoc_const_unification/dropck_unifies_assoc_consts.rs:11:10: 11:18

    bb0: {
        _0 = const _;                    // scope 0 at ui/const-generics/generic_const_exprs/assoc_const_unification/dropck_unifies_assoc_consts.rs:11:10: 11:18
        return;                          // scope 0 at ui/const-generics/generic_const_exprs/assoc_const_unification/dropck_unifies_assoc_consts.rs:11:10: 11:18
    }
}

<impl at ui/const-generics/generic_const_exprs/assoc_const_unification/dropck_unifies_assoc_consts.rs:13:1: 13:31>::{constant#0}: usize = {
    let mut _0: usize;                   // return place in scope 0 at ui/const-generics/generic_const_exprs/assoc_const_unification/dropck_unifies_assoc_consts.rs:15:10: 15:18

    bb0: {
        _0 = const _;                    // scope 0 at ui/const-generics/generic_const_exprs/assoc_const_unification/dropck_unifies_assoc_consts.rs:15:10: 15:18
        return;                          // scope 0 at ui/const-generics/generic_const_exprs/assoc_const_unification/dropck_unifies_assoc_consts.rs:15:10: 15:18
    }
}

fn <impl at ui/const-generics/generic_const_exprs/assoc_const_unification/dropck_unifies_assoc_consts.rs:13:1: 13:31>::drop(_1: &mut Foo<T>) -> () {
    debug self => _1;                    // in scope 0 at ui/const-generics/generic_const_exprs/assoc_const_unification/dropck_unifies_assoc_consts.rs:17:13: 17:22
    let mut _0: ();                      // return place in scope 0 at ui/const-generics/generic_const_exprs/assoc_const_unification/dropck_unifies_assoc_consts.rs:17:24: 17:24

    bb0: {
        return;                          // scope 0 at ui/const-generics/generic_const_exprs/assoc_const_unification/dropck_unifies_assoc_consts.rs:17:26: 17:26
    }
}

fn main() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/const-generics/generic_const_exprs/assoc_const_unification/dropck_unifies_assoc_consts.rs:20:11: 20:11

    bb0: {
        return;                          // scope 0 at ui/const-generics/generic_const_exprs/assoc_const_unification/dropck_unifies_assoc_consts.rs:20:13: 20:13
    }
}

fn Foo(_1: T) -> Foo<T> {
    let mut _0: Foo<T>;                  // return place in scope 0 at ui/const-generics/generic_const_exprs/assoc_const_unification/dropck_unifies_assoc_consts.rs:9:1: 9:21

    bb0: {
        _0 = Foo::<T>(move _1);          // scope 0 at ui/const-generics/generic_const_exprs/assoc_const_unification/dropck_unifies_assoc_consts.rs:9:1: 9:21
        return;                          // scope 0 at ui/const-generics/generic_const_exprs/assoc_const_unification/dropck_unifies_assoc_consts.rs:9:1: 9:21
    }
}

// MIR FOR CTFE
fn Foo(_1: T) -> Foo<T> {
    let mut _0: Foo<T>;                  // return place in scope 0 at ui/const-generics/generic_const_exprs/assoc_const_unification/dropck_unifies_assoc_consts.rs:9:1: 9:21

    bb0: {
        _0 = Foo::<T>(move _1);          // scope 0 at ui/const-generics/generic_const_exprs/assoc_const_unification/dropck_unifies_assoc_consts.rs:9:1: 9:21
        return;                          // scope 0 at ui/const-generics/generic_const_exprs/assoc_const_unification/dropck_unifies_assoc_consts.rs:9:1: 9:21
    }
}
