// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
Foo::{constant#0}: usize = {
    let mut _0: usize;                   // return place in scope 0 at ui/const-generics/generic_const_exprs/issue-90847.rs:7:26: 7:31
    let mut _1: (usize, bool);           // in scope 0 at ui/const-generics/generic_const_exprs/issue-90847.rs:7:26: 7:31

    bb0: {
        _1 = CheckedAdd(const 0_usize, const 0_usize); // scope 0 at ui/const-generics/generic_const_exprs/issue-90847.rs:7:26: 7:31
        assert(!move (_1.1: bool), "attempt to compute `{} + {}`, which would overflow", const 0_usize, const 0_usize) -> bb1; // scope 0 at ui/const-generics/generic_const_exprs/issue-90847.rs:7:26: 7:31
    }

    bb1: {
        _0 = move (_1.0: usize);         // scope 0 at ui/const-generics/generic_const_exprs/issue-90847.rs:7:26: 7:31
        return;                          // scope 0 at ui/const-generics/generic_const_exprs/issue-90847.rs:7:26: 7:31
    }
}

Foo::{constant#1}: usize = {
    let mut _0: usize;                   // return place in scope 0 at ui/const-generics/generic_const_exprs/issue-90847.rs:7:45: 7:50
    let mut _1: (usize, bool);           // in scope 0 at ui/const-generics/generic_const_exprs/issue-90847.rs:7:45: 7:50

    bb0: {
        _1 = CheckedAdd(const 0_usize, const 0_usize); // scope 0 at ui/const-generics/generic_const_exprs/issue-90847.rs:7:45: 7:50
        assert(!move (_1.1: bool), "attempt to compute `{} + {}`, which would overflow", const 0_usize, const 0_usize) -> bb1; // scope 0 at ui/const-generics/generic_const_exprs/issue-90847.rs:7:45: 7:50
    }

    bb1: {
        _0 = move (_1.0: usize);         // scope 0 at ui/const-generics/generic_const_exprs/issue-90847.rs:7:45: 7:50
        return;                          // scope 0 at ui/const-generics/generic_const_exprs/issue-90847.rs:7:45: 7:50
    }
}

fn main() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/const-generics/generic_const_exprs/issue-90847.rs:9:11: 9:11

    bb0: {
        return;                          // scope 0 at ui/const-generics/generic_const_exprs/issue-90847.rs:9:13: 9:13
    }
}
