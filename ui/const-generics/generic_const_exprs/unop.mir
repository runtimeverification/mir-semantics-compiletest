// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
fn test() -> Foo<{ !(N > 10) }> {
    let mut _0: Foo<{ !(N > 10) }>;      // return place in scope 0 at ui/const-generics/generic_const_exprs/unop.rs:7:30: 7:48

    bb0: {
        return;                          // scope 0 at ui/const-generics/generic_const_exprs/unop.rs:9:2: 9:2
    }
}

test::{constant#1}: bool = {
    let mut _0: bool;                    // return place in scope 0 at ui/const-generics/generic_const_exprs/unop.rs:7:34: 7:47
    let mut _1: bool;                    // in scope 0 at ui/const-generics/generic_const_exprs/unop.rs:7:37: 7:45

    bb0: {
        StorageLive(_1);                 // scope 0 at ui/const-generics/generic_const_exprs/unop.rs:7:37: 7:45
        _1 = Gt(const N, const 10_usize); // scope 0 at ui/const-generics/generic_const_exprs/unop.rs:7:37: 7:45
        _0 = Not(move _1);               // scope 0 at ui/const-generics/generic_const_exprs/unop.rs:7:36: 7:45
        StorageDead(_1);                 // scope 0 at ui/const-generics/generic_const_exprs/unop.rs:7:44: 7:45
        return;                          // scope 0 at ui/const-generics/generic_const_exprs/unop.rs:7:34: 7:47
    }
}

test::{constant#0}: bool = {
    let mut _0: bool;                    // return place in scope 0 at ui/const-generics/generic_const_exprs/unop.rs:7:59: 7:72
    let mut _1: bool;                    // in scope 0 at ui/const-generics/generic_const_exprs/unop.rs:7:62: 7:70

    bb0: {
        StorageLive(_1);                 // scope 0 at ui/const-generics/generic_const_exprs/unop.rs:7:62: 7:70
        _1 = Gt(const N, const 10_usize); // scope 0 at ui/const-generics/generic_const_exprs/unop.rs:7:62: 7:70
        _0 = Not(move _1);               // scope 0 at ui/const-generics/generic_const_exprs/unop.rs:7:61: 7:70
        StorageDead(_1);                 // scope 0 at ui/const-generics/generic_const_exprs/unop.rs:7:69: 7:70
        return;                          // scope 0 at ui/const-generics/generic_const_exprs/unop.rs:7:59: 7:72
    }
}

fn main() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/const-generics/generic_const_exprs/unop.rs:11:11: 11:11
    let mut _1: Foo<{ !(N > 10) }>;      // in scope 0 at ui/const-generics/generic_const_exprs/unop.rs:12:25: 12:37
    let mut _2: Foo<{ !(N > 10) }>;      // in scope 0 at ui/const-generics/generic_const_exprs/unop.rs:13:24: 13:35
    scope 1 {
        scope 2 {
        }
    }

    bb0: {
        _1 = test::<12>() -> bb1;        // scope 0 at ui/const-generics/generic_const_exprs/unop.rs:12:25: 12:37
                                         // mir::Constant
                                         // + span: ui/const-generics/generic_const_exprs/unop.rs:12:25: 12:35
                                         // + literal: Const { ty: fn() -> Foo<{ !(N > 10) }> {test::<12>}, val: Value(<ZST>) }
    }

    bb1: {
        _2 = test::<9>() -> bb2;         // scope 1 at ui/const-generics/generic_const_exprs/unop.rs:13:24: 13:35
                                         // mir::Constant
                                         // + span: ui/const-generics/generic_const_exprs/unop.rs:13:24: 13:33
                                         // + literal: Const { ty: fn() -> Foo<{ !(N > 10) }> {test::<9>}, val: Value(<ZST>) }
    }

    bb2: {
        return;                          // scope 0 at ui/const-generics/generic_const_exprs/unop.rs:14:2: 14:2
    }
}

main::{constant#1}: usize = {
    let mut _0: usize;                   // return place in scope 0 at ui/const-generics/generic_const_exprs/unop.rs:12:32: 12:34

    bb0: {
        _0 = const 12_usize;             // scope 0 at ui/const-generics/generic_const_exprs/unop.rs:12:32: 12:34
        return;                          // scope 0 at ui/const-generics/generic_const_exprs/unop.rs:12:32: 12:34
    }
}

main::{constant#0}: bool = {
    let mut _0: bool;                    // return place in scope 0 at ui/const-generics/generic_const_exprs/unop.rs:12:16: 12:21

    bb0: {
        _0 = const false;                // scope 0 at ui/const-generics/generic_const_exprs/unop.rs:12:16: 12:21
        return;                          // scope 0 at ui/const-generics/generic_const_exprs/unop.rs:12:16: 12:21
    }
}

main::{constant#3}: usize = {
    let mut _0: usize;                   // return place in scope 0 at ui/const-generics/generic_const_exprs/unop.rs:13:31: 13:32

    bb0: {
        _0 = const 9_usize;              // scope 0 at ui/const-generics/generic_const_exprs/unop.rs:13:31: 13:32
        return;                          // scope 0 at ui/const-generics/generic_const_exprs/unop.rs:13:31: 13:32
    }
}

main::{constant#2}: bool = {
    let mut _0: bool;                    // return place in scope 0 at ui/const-generics/generic_const_exprs/unop.rs:13:16: 13:20

    bb0: {
        _0 = const true;                 // scope 0 at ui/const-generics/generic_const_exprs/unop.rs:13:16: 13:20
        return;                          // scope 0 at ui/const-generics/generic_const_exprs/unop.rs:13:16: 13:20
    }
}
