// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
Bar::data::{constant#0}: usize = {
    let mut _0: usize;                   // return place in scope 0 at ui/const-generics/generic_const_exprs/issue-99705.rs:18:23: 18:24

    bb0: {
        _0 = const N;                    // scope 0 at ui/const-generics/generic_const_exprs/issue-99705.rs:18:23: 18:24
        return;                          // scope 0 at ui/const-generics/generic_const_exprs/issue-99705.rs:18:23: 18:24
    }
}

<impl at ui/const-generics/generic_const_exprs/issue-99705.rs:21:1: 21:54>::{constant#0}: usize = {
    let mut _0: usize;                   // return place in scope 0 at ui/const-generics/generic_const_exprs/issue-99705.rs:21:52: 21:53

    bb0: {
        _0 = const N;                    // scope 0 at ui/const-generics/generic_const_exprs/issue-99705.rs:21:52: 21:53
        return;                          // scope 0 at ui/const-generics/generic_const_exprs/issue-99705.rs:21:52: 21:53
    }
}

<impl at ui/const-generics/generic_const_exprs/issue-99705.rs:21:1: 21:54>::Output::{constant#0}: usize = {
    let mut _0: usize;                   // return place in scope 0 at ui/const-generics/generic_const_exprs/issue-99705.rs:22:23: 22:24

    bb0: {
        _0 = const N;                    // scope 0 at ui/const-generics/generic_const_exprs/issue-99705.rs:22:23: 22:24
        return;                          // scope 0 at ui/const-generics/generic_const_exprs/issue-99705.rs:22:23: 22:24
    }
}

fn test1() -> impl MyIterator<Output = Bar<{T::ABC}>> {
    let mut _0: impl MyIterator<Output = Bar<{T::ABC}>>; // return place in scope 0 at ui/const-generics/generic_const_exprs/issue-99705.rs:25:27: 25:66

    bb0: {
        return;                          // scope 0 at ui/const-generics/generic_const_exprs/issue-99705.rs:27:2: 27:2
    }
}

test1::{constant#1}: usize = {
    let mut _0: usize;                   // return place in scope 0 at ui/const-generics/generic_const_exprs/issue-99705.rs:25:56: 25:64

    bb0: {
        _0 = const _;                    // scope 0 at ui/const-generics/generic_const_exprs/issue-99705.rs:25:57: 25:63
        return;                          // scope 0 at ui/const-generics/generic_const_exprs/issue-99705.rs:25:56: 25:64
    }
}

test1::{constant#0}: usize = {
    let mut _0: usize;                   // return place in scope 0 at ui/const-generics/generic_const_exprs/issue-99705.rs:25:78: 25:84

    bb0: {
        _0 = const _;                    // scope 0 at ui/const-generics/generic_const_exprs/issue-99705.rs:25:78: 25:84
        return;                          // scope 0 at ui/const-generics/generic_const_exprs/issue-99705.rs:25:78: 25:84
    }
}

test1::{constant#2}: usize = {
    let mut _0: usize;                   // return place in scope 0 at ui/const-generics/generic_const_exprs/issue-99705.rs:26:22: 26:30

    bb0: {
        _0 = const _;                    // scope 0 at ui/const-generics/generic_const_exprs/issue-99705.rs:26:23: 26:29
        return;                          // scope 0 at ui/const-generics/generic_const_exprs/issue-99705.rs:26:22: 26:30
    }
}

<impl at ui/const-generics/generic_const_exprs/issue-99705.rs:30:1: 30:39>::{constant#0}: usize = {
    let mut _0: usize;                   // return place in scope 0 at ui/const-generics/generic_const_exprs/issue-99705.rs:30:26: 30:27

    bb0: {
        _0 = const N;                    // scope 0 at ui/const-generics/generic_const_exprs/issue-99705.rs:30:26: 30:27
        return;                          // scope 0 at ui/const-generics/generic_const_exprs/issue-99705.rs:30:26: 30:27
    }
}

<impl at ui/const-generics/generic_const_exprs/issue-99705.rs:30:1: 30:39>::{constant#1}: usize = {
    let mut _0: usize;                   // return place in scope 0 at ui/const-generics/generic_const_exprs/issue-99705.rs:30:37: 30:38

    bb0: {
        _0 = const N;                    // scope 0 at ui/const-generics/generic_const_exprs/issue-99705.rs:30:37: 30:38
        return;                          // scope 0 at ui/const-generics/generic_const_exprs/issue-99705.rs:30:37: 30:38
    }
}

fn test2() -> impl MyIterator<Output = impl Baz<{ T::ABC }>> {
    let mut _0: impl MyIterator<Output = impl Baz<{ T::ABC }>>; // return place in scope 0 at ui/const-generics/generic_const_exprs/issue-99705.rs:31:27: 31:73

    bb0: {
        return;                          // scope 0 at ui/const-generics/generic_const_exprs/issue-99705.rs:33:2: 33:2
    }
}

test2::{constant#1}: usize = {
    let mut _0: usize;                   // return place in scope 0 at ui/const-generics/generic_const_exprs/issue-99705.rs:31:61: 31:71

    bb0: {
        _0 = const _;                    // scope 0 at ui/const-generics/generic_const_exprs/issue-99705.rs:31:63: 31:69
        return;                          // scope 0 at ui/const-generics/generic_const_exprs/issue-99705.rs:31:61: 31:71
    }
}

test2::{constant#0}: usize = {
    let mut _0: usize;                   // return place in scope 0 at ui/const-generics/generic_const_exprs/issue-99705.rs:31:85: 31:91

    bb0: {
        _0 = const _;                    // scope 0 at ui/const-generics/generic_const_exprs/issue-99705.rs:31:85: 31:91
        return;                          // scope 0 at ui/const-generics/generic_const_exprs/issue-99705.rs:31:85: 31:91
    }
}

test2::{constant#2}: usize = {
    let mut _0: usize;                   // return place in scope 0 at ui/const-generics/generic_const_exprs/issue-99705.rs:32:22: 32:30

    bb0: {
        _0 = const _;                    // scope 0 at ui/const-generics/generic_const_exprs/issue-99705.rs:32:23: 32:29
        return;                          // scope 0 at ui/const-generics/generic_const_exprs/issue-99705.rs:32:22: 32:30
    }
}
