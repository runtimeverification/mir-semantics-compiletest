// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
<impl at ui/const-generics/generic_const_exprs/issue-80561-incorrect-param-env.rs:10:1: 10:28>::{constant#0}: usize = {
    let mut _0: usize;                   // return place in scope 0 at ui/const-generics/generic_const_exprs/issue-80561-incorrect-param-env.rs:10:26: 10:27

    bb0: {
        _0 = const N;                    // scope 0 at ui/const-generics/generic_const_exprs/issue-80561-incorrect-param-env.rs:10:26: 10:27
        return;                          // scope 0 at ui/const-generics/generic_const_exprs/issue-80561-incorrect-param-env.rs:10:26: 10:27
    }
}

fn <impl at ui/const-generics/generic_const_exprs/issue-80561-incorrect-param-env.rs:10:1: 10:28>::foo() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/const-generics/generic_const_exprs/issue-80561-incorrect-param-env.rs:11:18: 11:18

    bb0: {
        return;                          // scope 0 at ui/const-generics/generic_const_exprs/issue-80561-incorrect-param-env.rs:11:20: 11:20
    }
}

fn Bar::bar() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/const-generics/generic_const_exprs/issue-80561-incorrect-param-env.rs:17:5: 17:5
    let _1: ();                          // in scope 0 at ui/const-generics/generic_const_exprs/issue-80561-incorrect-param-env.rs:20:9: 20:34

    bb0: {
        _1 = Foo::<{ Self::N }>::foo() -> bb1; // scope 0 at ui/const-generics/generic_const_exprs/issue-80561-incorrect-param-env.rs:20:9: 20:34
                                         // mir::Constant
                                         // + span: ui/const-generics/generic_const_exprs/issue-80561-incorrect-param-env.rs:20:9: 20:32
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: fn() {Foo::<{ Self::N }>::foo}, val: Value(<ZST>) }
    }

    bb1: {
        return;                          // scope 0 at ui/const-generics/generic_const_exprs/issue-80561-incorrect-param-env.rs:21:6: 21:6
    }
}

Bar::bar::{constant#0}: usize = {
    let mut _0: usize;                   // return place in scope 0 at ui/const-generics/generic_const_exprs/issue-80561-incorrect-param-env.rs:18:14: 18:21

    bb0: {
        _0 = const _;                    // scope 0 at ui/const-generics/generic_const_exprs/issue-80561-incorrect-param-env.rs:18:14: 18:21
        return;                          // scope 0 at ui/const-generics/generic_const_exprs/issue-80561-incorrect-param-env.rs:18:14: 18:21
    }
}

Bar::bar::{constant#1}: usize = {
    let mut _0: usize;                   // return place in scope 0 at ui/const-generics/generic_const_exprs/issue-80561-incorrect-param-env.rs:20:15: 20:26

    bb0: {
        _0 = const _;                    // scope 0 at ui/const-generics/generic_const_exprs/issue-80561-incorrect-param-env.rs:20:17: 20:24
        return;                          // scope 0 at ui/const-generics/generic_const_exprs/issue-80561-incorrect-param-env.rs:20:15: 20:26
    }
}

fn main() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/const-generics/generic_const_exprs/issue-80561-incorrect-param-env.rs:24:11: 24:11

    bb0: {
        return;                          // scope 0 at ui/const-generics/generic_const_exprs/issue-80561-incorrect-param-env.rs:24:13: 24:13
    }
}
