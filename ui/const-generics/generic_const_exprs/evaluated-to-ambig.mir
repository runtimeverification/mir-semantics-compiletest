// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
<impl at ui/const-generics/generic_const_exprs/evaluated-to-ambig.rs:11:1: 11:29>::{constant#0}: bool = {
    let mut _0: bool;                    // return place in scope 0 at ui/const-generics/generic_const_exprs/evaluated-to-ambig.rs:11:24: 11:28

    bb0: {
        _0 = const true;                 // scope 0 at ui/const-generics/generic_const_exprs/evaluated-to-ambig.rs:11:24: 11:28
        return;                          // scope 0 at ui/const-generics/generic_const_exprs/evaluated-to-ambig.rs:11:24: 11:28
    }
}

<impl at ui/const-generics/generic_const_exprs/evaluated-to-ambig.rs:15:1: 15:61>::{constant#0}: bool = {
    let mut _0: bool;                    // return place in scope 0 at ui/const-generics/generic_const_exprs/evaluated-to-ambig.rs:17:12: 17:21

    bb0: {
        _0 = Gt(const N, const 1_usize); // scope 0 at ui/const-generics/generic_const_exprs/evaluated-to-ambig.rs:17:14: 17:19
        return;                          // scope 0 at ui/const-generics/generic_const_exprs/evaluated-to-ambig.rs:17:12: 17:21
    }
}

<impl at ui/const-generics/generic_const_exprs/evaluated-to-ambig.rs:15:1: 15:61>::{constant#1}: bool = {
    let mut _0: bool;                    // return place in scope 0 at ui/const-generics/generic_const_exprs/evaluated-to-ambig.rs:18:12: 18:21

    bb0: {
        _0 = Gt(const M, const 1_usize); // scope 0 at ui/const-generics/generic_const_exprs/evaluated-to-ambig.rs:18:14: 18:19
        return;                          // scope 0 at ui/const-generics/generic_const_exprs/evaluated-to-ambig.rs:18:12: 18:21
    }
}

<impl at ui/const-generics/generic_const_exprs/evaluated-to-ambig.rs:15:1: 15:61>::{constant#2}: usize = {
    let mut _0: usize;                   // return place in scope 0 at ui/const-generics/generic_const_exprs/evaluated-to-ambig.rs:15:42: 15:43

    bb0: {
        _0 = const N;                    // scope 0 at ui/const-generics/generic_const_exprs/evaluated-to-ambig.rs:15:42: 15:43
        return;                          // scope 0 at ui/const-generics/generic_const_exprs/evaluated-to-ambig.rs:15:42: 15:43
    }
}

<impl at ui/const-generics/generic_const_exprs/evaluated-to-ambig.rs:15:1: 15:61>::{constant#3}: usize = {
    let mut _0: usize;                   // return place in scope 0 at ui/const-generics/generic_const_exprs/evaluated-to-ambig.rs:15:45: 15:46

    bb0: {
        _0 = const M;                    // scope 0 at ui/const-generics/generic_const_exprs/evaluated-to-ambig.rs:15:45: 15:46
        return;                          // scope 0 at ui/const-generics/generic_const_exprs/evaluated-to-ambig.rs:15:45: 15:46
    }
}

<impl at ui/const-generics/generic_const_exprs/evaluated-to-ambig.rs:15:1: 15:61>::{constant#4}: usize = {
    let mut _0: usize;                   // return place in scope 0 at ui/const-generics/generic_const_exprs/evaluated-to-ambig.rs:15:56: 15:57

    bb0: {
        _0 = const N;                    // scope 0 at ui/const-generics/generic_const_exprs/evaluated-to-ambig.rs:15:56: 15:57
        return;                          // scope 0 at ui/const-generics/generic_const_exprs/evaluated-to-ambig.rs:15:56: 15:57
    }
}

<impl at ui/const-generics/generic_const_exprs/evaluated-to-ambig.rs:15:1: 15:61>::{constant#5}: usize = {
    let mut _0: usize;                   // return place in scope 0 at ui/const-generics/generic_const_exprs/evaluated-to-ambig.rs:15:59: 15:60

    bb0: {
        _0 = const M;                    // scope 0 at ui/const-generics/generic_const_exprs/evaluated-to-ambig.rs:15:59: 15:60
        return;                          // scope 0 at ui/const-generics/generic_const_exprs/evaluated-to-ambig.rs:15:59: 15:60
    }
}

fn main() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/const-generics/generic_const_exprs/evaluated-to-ambig.rs:22:11: 22:11

    bb0: {
        return;                          // scope 0 at ui/const-generics/generic_const_exprs/evaluated-to-ambig.rs:22:13: 22:13
    }
}
