// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
const BAR: () = {
    let mut _0: ();

    bb0: {
        ConstEvalCounter;
        _0 = ice::<"">() -> [return: bb1, unwind continue];
    }

    bb1: {
        return;
    }
}

BAR::{constant#0}: &str = {
    let mut _0: &str;

    bb0: {
        _0 = const "";
        return;
    }
}

fn ice() -> () {
    let mut _0: ();

    bb0: {
        return;
    }
}

promoted[0] in ice: &i32 = {
    let mut _0: &i32;
    let mut _1: i32;

    bb0: {
        _1 = const 10_i32;
        _0 = &_1;
        return;
    }
}

// MIR FOR CTFE
fn ice() -> () {
    let mut _0: ();
    let _1: &i32;
    let _2: i32;
    let mut _3: &i32;

    bb0: {
        StorageLive(_1);
        _3 = const _;
        _1 = &(*_3);
        StorageDead(_1);
        _0 = const ();
        return;
    }
}

fn main() -> () {
    let mut _0: ();

    bb0: {
        return;
    }
}
