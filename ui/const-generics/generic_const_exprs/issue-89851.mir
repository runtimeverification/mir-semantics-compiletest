// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
const BAR: () = {
    let mut _0: ();                      // return place in scope 0 at ui/const-generics/generic_const_exprs/issue-89851.rs:7:16: 7:18

    bb0: {
        ConstEvalCounter;                // scope 0 at ui/const-generics/generic_const_exprs/issue-89851.rs:7:21: 7:32
        _0 = ice::<"">() -> bb1;         // scope 0 at ui/const-generics/generic_const_exprs/issue-89851.rs:7:21: 7:32
                                         // mir::Constant
                                         // + span: ui/const-generics/generic_const_exprs/issue-89851.rs:7:21: 7:30
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: fn() {ice::<"">}, val: Value(<ZST>) }
    }

    bb1: {
        return;                          // scope 0 at ui/const-generics/generic_const_exprs/issue-89851.rs:7:1: 7:33
    }
}

BAR::{constant#0}: &str = {
    let mut _0: &str;                    // return place in scope 0 at ui/const-generics/generic_const_exprs/issue-89851.rs:7:27: 7:29

    bb0: {
        _0 = const "";                   // scope 0 at ui/const-generics/generic_const_exprs/issue-89851.rs:7:27: 7:29
                                         // mir::Constant
                                         // + span: ui/const-generics/generic_const_exprs/issue-89851.rs:7:27: 7:29
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        return;                          // scope 0 at ui/const-generics/generic_const_exprs/issue-89851.rs:7:27: 7:29
    }
}

fn ice() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/const-generics/generic_const_exprs/issue-89851.rs:8:43: 8:43

    bb0: {
        return;                          // scope 0 at ui/const-generics/generic_const_exprs/issue-89851.rs:10:2: 10:2
    }
}

promoted[0] in ice: &i32 = {
    let mut _0: &i32;                    // return place in scope 0 at ui/const-generics/generic_const_exprs/issue-89851.rs:9:5: 9:8
    let mut _1: i32;                     // in scope 0 at ui/const-generics/generic_const_exprs/issue-89851.rs:9:6: 9:8

    bb0: {
        _1 = const 10_i32;               // scope 0 at ui/const-generics/generic_const_exprs/issue-89851.rs:9:6: 9:8
        _0 = &_1;                        // scope 0 at ui/const-generics/generic_const_exprs/issue-89851.rs:9:5: 9:8
        return;                          // scope 0 at ui/const-generics/generic_const_exprs/issue-89851.rs:9:5: 9:8
    }
}

// MIR FOR CTFE
fn ice() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/const-generics/generic_const_exprs/issue-89851.rs:8:43: 8:43
    let _1: &i32;                        // in scope 0 at ui/const-generics/generic_const_exprs/issue-89851.rs:9:5: 9:8
    let _2: i32;                         // in scope 0 at ui/const-generics/generic_const_exprs/issue-89851.rs:9:6: 9:8
    let mut _3: &i32;                    // in scope 0 at ui/const-generics/generic_const_exprs/issue-89851.rs:9:5: 9:8

    bb0: {
        StorageLive(_1);                 // scope 0 at ui/const-generics/generic_const_exprs/issue-89851.rs:9:5: 9:8
        _3 = const _;                    // scope 0 at ui/const-generics/generic_const_exprs/issue-89851.rs:9:5: 9:8
                                         // mir::Constant
                                         // + span: ui/const-generics/generic_const_exprs/issue-89851.rs:9:5: 9:8
                                         // + literal: Const { ty: &i32, val: Unevaluated(ice, [Const { ty: &str, kind: Param(N/#0) }], Some(promoted[0])) }
        _1 = &(*_3);                     // scope 0 at ui/const-generics/generic_const_exprs/issue-89851.rs:9:5: 9:8
        StorageDead(_1);                 // scope 0 at ui/const-generics/generic_const_exprs/issue-89851.rs:9:8: 9:9
        _0 = const ();                   // scope 0 at ui/const-generics/generic_const_exprs/issue-89851.rs:8:43: 10:2
        return;                          // scope 0 at ui/const-generics/generic_const_exprs/issue-89851.rs:10:2: 10:2
    }
}

fn main() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/const-generics/generic_const_exprs/issue-89851.rs:12:11: 12:11

    bb0: {
        return;                          // scope 0 at ui/const-generics/generic_const_exprs/issue-89851.rs:12:13: 12:13
    }
}
