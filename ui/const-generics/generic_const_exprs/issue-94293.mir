// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
<impl at ui/const-generics/generic_const_exprs/issue-94293.rs:9:1: 9:23>::{constant#0}: bool = {
    let mut _0: bool;                    // return place in scope 0 at ui/const-generics/generic_const_exprs/issue-94293.rs:9:18: 9:22

    bb0: {
        _0 = const true;                 // scope 0 at ui/const-generics/generic_const_exprs/issue-94293.rs:9:18: 9:22
        return;                          // scope 0 at ui/const-generics/generic_const_exprs/issue-94293.rs:9:18: 9:22
    }
}

<impl at ui/const-generics/generic_const_exprs/issue-94293.rs:15:1: 15:98>::{constant#0}: bool = {
    let mut _0: bool;                    // return place in scope 0 at ui/const-generics/generic_const_exprs/issue-94293.rs:17:8: 17:25

    bb0: {
        _0 = Le(const FRAC_RHS, const 8_u32); // scope 0 at ui/const-generics/generic_const_exprs/issue-94293.rs:17:10: 17:23
        return;                          // scope 0 at ui/const-generics/generic_const_exprs/issue-94293.rs:17:8: 17:25
    }
}

<impl at ui/const-generics/generic_const_exprs/issue-94293.rs:15:1: 15:98>::{constant#1}: u32 = {
    let mut _0: u32;                     // return place in scope 0 at ui/const-generics/generic_const_exprs/issue-94293.rs:15:66: 15:74

    bb0: {
        _0 = const FRAC_RHS;             // scope 0 at ui/const-generics/generic_const_exprs/issue-94293.rs:15:66: 15:74
        return;                          // scope 0 at ui/const-generics/generic_const_exprs/issue-94293.rs:15:66: 15:74
    }
}

<impl at ui/const-generics/generic_const_exprs/issue-94293.rs:15:1: 15:98>::{constant#2}: u32 = {
    let mut _0: u32;                     // return place in scope 0 at ui/const-generics/generic_const_exprs/issue-94293.rs:15:89: 15:97

    bb0: {
        _0 = const FRAC_LHS;             // scope 0 at ui/const-generics/generic_const_exprs/issue-94293.rs:15:89: 15:97
        return;                          // scope 0 at ui/const-generics/generic_const_exprs/issue-94293.rs:15:89: 15:97
    }
}

fn <impl at ui/const-generics/generic_const_exprs/issue-94293.rs:15:1: 15:98>::eq(_1: &FixedI8<FRAC_LHS>, _2: &FixedI8<FRAC_RHS>) -> bool {
    debug self => _1;                    // in scope 0 at ui/const-generics/generic_const_exprs/issue-94293.rs:19:11: 19:16
    debug _rhs => _2;                    // in scope 0 at ui/const-generics/generic_const_exprs/issue-94293.rs:19:18: 19:22
    let mut _0: bool;                    // return place in scope 0 at ui/const-generics/generic_const_exprs/issue-94293.rs:19:47: 19:51
    let mut _3: !;                       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:706:9: 706:52

    bb0: {
        _3 = core::panicking::panic(const "not implemented"); // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:706:9: 706:52
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:706:9: 706:33
                                         // + literal: Const { ty: fn(&'static str) -> ! {core::panicking::panic}, val: Value(<ZST>) }
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:706:34: 706:51
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
    }
}

<impl at ui/const-generics/generic_const_exprs/issue-94293.rs:15:1: 15:98>::eq::{constant#0}: u32 = {
    let mut _0: u32;                     // return place in scope 0 at ui/const-generics/generic_const_exprs/issue-94293.rs:19:33: 19:41

    bb0: {
        _0 = const FRAC_RHS;             // scope 0 at ui/const-generics/generic_const_exprs/issue-94293.rs:19:33: 19:41
        return;                          // scope 0 at ui/const-generics/generic_const_exprs/issue-94293.rs:19:33: 19:41
    }
}

<impl at ui/const-generics/generic_const_exprs/issue-94293.rs:24:1: 24:54>::{constant#0}: u32 = {
    let mut _0: u32;                     // return place in scope 0 at ui/const-generics/generic_const_exprs/issue-94293.rs:24:49: 24:53

    bb0: {
        _0 = const FRAC;                 // scope 0 at ui/const-generics/generic_const_exprs/issue-94293.rs:24:49: 24:53
        return;                          // scope 0 at ui/const-generics/generic_const_exprs/issue-94293.rs:24:49: 24:53
    }
}

fn <impl at ui/const-generics/generic_const_exprs/issue-94293.rs:24:1: 24:54>::eq(_1: &FixedI8<FRAC>, _2: &i8) -> bool {
    debug self => _1;                    // in scope 0 at ui/const-generics/generic_const_exprs/issue-94293.rs:25:11: 25:16
    debug rhs => _2;                     // in scope 0 at ui/const-generics/generic_const_exprs/issue-94293.rs:25:18: 25:21
    let mut _0: bool;                    // return place in scope 0 at ui/const-generics/generic_const_exprs/issue-94293.rs:25:31: 25:35
    let _3: FixedI8<0>;                  // in scope 0 at ui/const-generics/generic_const_exprs/issue-94293.rs:26:13: 26:25
    let mut _4: i8;                      // in scope 0 at ui/const-generics/generic_const_exprs/issue-94293.rs:26:49: 26:53
    let mut _5: &FixedI8<FRAC>;          // in scope 0 at ui/const-generics/generic_const_exprs/issue-94293.rs:27:23: 27:27
    let mut _6: &FixedI8<0>;             // in scope 0 at ui/const-generics/generic_const_exprs/issue-94293.rs:27:29: 27:42
    let _7: &FixedI8<0>;                 // in scope 0 at ui/const-generics/generic_const_exprs/issue-94293.rs:27:29: 27:42
    scope 1 {
        debug rhs_as_fixed => _3;        // in scope 1 at ui/const-generics/generic_const_exprs/issue-94293.rs:26:13: 26:25
    }

    bb0: {
        _4 = (*_2);                      // scope 0 at ui/const-generics/generic_const_exprs/issue-94293.rs:26:49: 26:53
        _3 = FixedI8::<0> { bits: move _4 }; // scope 0 at ui/const-generics/generic_const_exprs/issue-94293.rs:26:28: 26:55
        _5 = _1;                         // scope 1 at ui/const-generics/generic_const_exprs/issue-94293.rs:27:23: 27:27
        _7 = &_3;                        // scope 1 at ui/const-generics/generic_const_exprs/issue-94293.rs:27:29: 27:42
        _6 = _7;                         // scope 1 at ui/const-generics/generic_const_exprs/issue-94293.rs:27:29: 27:42
        _0 = <FixedI8<FRAC> as PartialEq<FixedI8<0>>>::eq(move _5, move _6) -> bb1; // scope 1 at ui/const-generics/generic_const_exprs/issue-94293.rs:27:9: 27:43
                                         // mir::Constant
                                         // + span: ui/const-generics/generic_const_exprs/issue-94293.rs:27:9: 27:22
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a FixedI8<FRAC>, &'b FixedI8<0>) -> bool {<FixedI8<FRAC> as PartialEq<FixedI8<0>>>::eq}, val: Value(<ZST>) }
    }

    bb1: {
        return;                          // scope 0 at ui/const-generics/generic_const_exprs/issue-94293.rs:28:6: 28:6
    }
}

<impl at ui/const-generics/generic_const_exprs/issue-94293.rs:24:1: 24:54>::eq::{constant#0}: u32 = {
    let mut _0: u32;                     // return place in scope 0 at ui/const-generics/generic_const_exprs/issue-94293.rs:26:38: 26:39

    bb0: {
        _0 = const 0_u32;                // scope 0 at ui/const-generics/generic_const_exprs/issue-94293.rs:26:38: 26:39
        return;                          // scope 0 at ui/const-generics/generic_const_exprs/issue-94293.rs:26:38: 26:39
    }
}

fn main() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/const-generics/generic_const_exprs/issue-94293.rs:31:11: 31:11

    bb0: {
        return;                          // scope 0 at ui/const-generics/generic_const_exprs/issue-94293.rs:31:13: 31:13
    }
}
