// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
<impl at ui/const-generics/generic_const_exprs/issue-83972.rs:11:1: 11:40>::{constant#0}: usize = {
    let mut _0: usize;

    bb0: {
        _0 = const N;
        return;
    }
}

fn <impl at ui/const-generics/generic_const_exprs/issue-83972.rs:11:1: 11:40>::foo(_1: &FooImpl<N>) -> () {
    debug self => _1;
    let mut _0: ();

    bb0: {
        return;
    }
}

<impl at ui/const-generics/generic_const_exprs/issue-83972.rs:21:1: 21:21>::Foo::{constant#0}: usize = {
    let mut _0: usize;

    bb0: {
        _0 = const 4_usize;
        return;
    }
}

fn <impl at ui/const-generics/generic_const_exprs/issue-83972.rs:21:1: 21:21>::get() -> &FooImpl<{
            { 4 }
        }> {
    let mut _0: &FooImpl<{
            { 4 }
        }>;

    bb0: {
        _0 = const _;
        return;
    }
}

promoted[0] in <impl at ui/const-generics/generic_const_exprs/issue-83972.rs:21:1: 21:21>::get: &FooImpl<{
            { 4 }
        }> = {
    let mut _0: &FooImpl<{
            { 4 }
        }>;
    let mut _1: FooImpl<{
            { 4 }
        }>;

    bb0: {
        _1 = FooImpl::<{
            { 4 }
        }>;
        _0 = &_1;
        return;
    }
}

fn boom() -> () {
    let mut _0: ();
    let _1: ();
    let mut _2: &<B as Bar>::Foo;
    let _3: &<B as Bar>::Foo;

    bb0: {
        _3 = <B as Bar>::get() -> [return: bb1, unwind continue];
    }

    bb1: {
        _2 = _3;
        _1 = <<B as Bar>::Foo as Foo>::foo(move _2) -> [return: bb2, unwind continue];
    }

    bb2: {
        return;
    }
}

fn main() -> () {
    let mut _0: ();
    let _1: ();

    bb0: {
        _1 = boom::<BarImpl>() -> [return: bb1, unwind continue];
    }

    bb1: {
        return;
    }
}
