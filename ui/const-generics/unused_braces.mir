// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
fn main() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/const-generics/unused_braces.rs:13:11: 13:11
    scope 1 {
        scope 2 {
            scope 3 {
                scope 4 {
                }
            }
        }
    }

    bb0: {
        return;                          // scope 0 at ui/const-generics/unused_braces.rs:18:2: 18:2
    }
}

main::{constant#0}: usize = {
    let mut _0: usize;                   // return place in scope 0 at ui/const-generics/unused_braces.rs:14:14: 14:15

    bb0: {
        _0 = const 7_usize;              // scope 0 at ui/const-generics/unused_braces.rs:14:14: 14:15
        return;                          // scope 0 at ui/const-generics/unused_braces.rs:14:14: 14:15
    }
}

main::{constant#1}: usize = {
    let mut _0: usize;                   // return place in scope 0 at ui/const-generics/unused_braces.rs:15:14: 15:19

    bb0: {
        _0 = const 7_usize;              // scope 0 at ui/const-generics/unused_braces.rs:15:16: 15:17
        return;                          // scope 0 at ui/const-generics/unused_braces.rs:15:14: 15:19
    }
}

main::{constant#2}: usize = {
    let mut _0: usize;                   // return place in scope 0 at ui/const-generics/unused_braces.rs:16:14: 16:23
    let mut _1: (usize, bool);           // in scope 0 at ui/const-generics/unused_braces.rs:16:16: 16:21

    bb0: {
        _1 = CheckedAdd(const 3_usize, const 5_usize); // scope 0 at ui/const-generics/unused_braces.rs:16:16: 16:21
        assert(!move (_1.1: bool), "attempt to compute `{} + {}`, which would overflow", const 3_usize, const 5_usize) -> bb1; // scope 0 at ui/const-generics/unused_braces.rs:16:16: 16:21
    }

    bb1: {
        _0 = move (_1.0: usize);         // scope 0 at ui/const-generics/unused_braces.rs:16:16: 16:21
        return;                          // scope 0 at ui/const-generics/unused_braces.rs:16:14: 16:23
    }
}

main::{constant#3}: usize = {
    let mut _0: usize;                   // return place in scope 0 at ui/const-generics/unused_braces.rs:17:14: 17:25

    bb0: {
        _0 = const 1_usize;              // scope 0 at ui/const-generics/unused_braces.rs:7:9: 7:10
        return;                          // scope 0 at ui/const-generics/unused_braces.rs:17:14: 17:25
    }
}
