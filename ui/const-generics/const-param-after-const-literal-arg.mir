// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
<impl at ui/const-generics/const-param-after-const-literal-arg.rs:5:1: 5:31>::{constant#0}: usize = {
    let mut _0: usize;                   // return place in scope 0 at ui/const-generics/const-param-after-const-literal-arg.rs:5:26: 5:27

    bb0: {
        _0 = const 1_usize;              // scope 0 at ui/const-generics/const-param-after-const-literal-arg.rs:5:26: 5:27
        return;                          // scope 0 at ui/const-generics/const-param-after-const-literal-arg.rs:5:26: 5:27
    }
}

<impl at ui/const-generics/const-param-after-const-literal-arg.rs:5:1: 5:31>::{constant#1}: usize = {
    let mut _0: usize;                   // return place in scope 0 at ui/const-generics/const-param-after-const-literal-arg.rs:5:29: 5:30

    bb0: {
        _0 = const A;                    // scope 0 at ui/const-generics/const-param-after-const-literal-arg.rs:5:29: 5:30
        return;                          // scope 0 at ui/const-generics/const-param-after-const-literal-arg.rs:5:29: 5:30
    }
}

fn main() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/const-generics/const-param-after-const-literal-arg.rs:7:11: 7:11

    bb0: {
        return;                          // scope 0 at ui/const-generics/const-param-after-const-literal-arg.rs:7:13: 7:13
    }
}
