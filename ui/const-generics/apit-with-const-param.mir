// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
fn f(_1: impl Trait) -> () {
    let mut _0: ();                      // return place in scope 0 at ui/const-generics/apit-with-const-param.rs:5:37: 5:37

    bb0: {
        drop(_1) -> bb1;                 // scope 0 at ui/const-generics/apit-with-const-param.rs:5:38: 5:39
    }

    bb1: {
        return;                          // scope 0 at ui/const-generics/apit-with-const-param.rs:5:39: 5:39
    }
}

fn main() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/const-generics/apit-with-const-param.rs:7:11: 7:11

    bb0: {
        return;                          // scope 0 at ui/const-generics/apit-with-const-param.rs:7:13: 7:13
    }
}
