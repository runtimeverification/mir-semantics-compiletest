// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
fn bindingp() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/const-generics/arg-in-pat-3.rs:4:15: 4:15
    let mut _1: Foo<3>;                  // in scope 0 at ui/const-generics/arg-in-pat-3.rs:6:9: 6:14
    scope 1 {
        debug x => _1;                   // in scope 1 at ui/const-generics/arg-in-pat-3.rs:6:9: 6:14
        let _2: &mut Foo<3>;             // in scope 1 at ui/const-generics/arg-in-pat-3.rs:7:17: 7:27
        scope 2 {
            debug _x => _2;              // in scope 2 at ui/const-generics/arg-in-pat-3.rs:7:17: 7:27
        }
    }

    bb0: {
        _2 = &mut _1;                    // scope 1 at ui/const-generics/arg-in-pat-3.rs:7:17: 7:27
        return;                          // scope 0 at ui/const-generics/arg-in-pat-3.rs:10:2: 10:2
    }
}

bindingp::{constant#0}: usize = {
    let mut _0: usize;                   // return place in scope 0 at ui/const-generics/arg-in-pat-3.rs:6:23: 6:24

    bb0: {
        _0 = const 3_usize;              // scope 0 at ui/const-generics/arg-in-pat-3.rs:6:23: 6:24
        return;                          // scope 0 at ui/const-generics/arg-in-pat-3.rs:6:23: 6:24
    }
}

bindingp::{constant#1}: usize = {
    let mut _0: usize;                   // return place in scope 0 at ui/const-generics/arg-in-pat-3.rs:7:36: 7:37

    bb0: {
        _0 = const 3_usize;              // scope 0 at ui/const-generics/arg-in-pat-3.rs:7:36: 7:37
        return;                          // scope 0 at ui/const-generics/arg-in-pat-3.rs:7:36: 7:37
    }
}

Bar::{constant#0}: usize = {
    let mut _0: usize;                   // return place in scope 0 at ui/const-generics/arg-in-pat-3.rs:13:16: 13:17

    bb0: {
        _0 = const N;                    // scope 0 at ui/const-generics/arg-in-pat-3.rs:13:16: 13:17
        return;                          // scope 0 at ui/const-generics/arg-in-pat-3.rs:13:16: 13:17
    }
}

fn structp() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/const-generics/arg-in-pat-3.rs:16:14: 16:14
    let mut _1: !;                       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:773:9: 773:56

    bb0: {
        _1 = core::panicking::panic(const "not yet implemented"); // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:773:9: 773:56
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:773:9: 773:33
                                         // + literal: Const { ty: fn(&'static str) -> ! {core::panicking::panic}, val: Value(<ZST>) }
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:773:34: 773:55
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
    }
}

structp::{constant#0}: usize = {
    let mut _0: usize;                   // return place in scope 0 at ui/const-generics/arg-in-pat-3.rs:18:15: 18:16

    bb0: {
        _0 = const 3_usize;              // scope 0 at ui/const-generics/arg-in-pat-3.rs:18:15: 18:16
        return;                          // scope 0 at ui/const-generics/arg-in-pat-3.rs:18:15: 18:16
    }
}

structp::{constant#1}: usize = {
    let mut _0: usize;                   // return place in scope 0 at ui/const-generics/arg-in-pat-3.rs:19:26: 19:27

    bb0: {
        _0 = const 3_usize;              // scope 0 at ui/const-generics/arg-in-pat-3.rs:19:26: 19:27
        return;                          // scope 0 at ui/const-generics/arg-in-pat-3.rs:19:26: 19:27
    }
}

Baz::{constant#0}: usize = {
    let mut _0: usize;                   // return place in scope 0 at ui/const-generics/arg-in-pat-3.rs:24:32: 24:33

    bb0: {
        _0 = const N;                    // scope 0 at ui/const-generics/arg-in-pat-3.rs:24:32: 24:33
        return;                          // scope 0 at ui/const-generics/arg-in-pat-3.rs:24:32: 24:33
    }
}

fn tuplestructp() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/const-generics/arg-in-pat-3.rs:26:19: 26:19

    bb0: {
        return;                          // scope 0 at ui/const-generics/arg-in-pat-3.rs:30:2: 30:2
    }
}

tuplestructp::{constant#0}: usize = {
    let mut _0: usize;                   // return place in scope 0 at ui/const-generics/arg-in-pat-3.rs:28:15: 28:16

    bb0: {
        _0 = const 3_usize;              // scope 0 at ui/const-generics/arg-in-pat-3.rs:28:15: 28:16
        return;                          // scope 0 at ui/const-generics/arg-in-pat-3.rs:28:15: 28:16
    }
}

tuplestructp::{constant#1}: usize = {
    let mut _0: usize;                   // return place in scope 0 at ui/const-generics/arg-in-pat-3.rs:28:24: 28:25

    bb0: {
        _0 = const 3_usize;              // scope 0 at ui/const-generics/arg-in-pat-3.rs:28:24: 28:25
        return;                          // scope 0 at ui/const-generics/arg-in-pat-3.rs:28:24: 28:25
    }
}

<impl at ui/const-generics/arg-in-pat-3.rs:32:1: 32:28>::{constant#0}: usize = {
    let mut _0: usize;                   // return place in scope 0 at ui/const-generics/arg-in-pat-3.rs:32:26: 32:27

    bb0: {
        _0 = const N;                    // scope 0 at ui/const-generics/arg-in-pat-3.rs:32:26: 32:27
        return;                          // scope 0 at ui/const-generics/arg-in-pat-3.rs:32:26: 32:27
    }
}

const <impl at ui/const-generics/arg-in-pat-3.rs:32:1: 32:28>::ASSOC: usize = {
    let mut _0: usize;                   // return place in scope 0 at ui/const-generics/arg-in-pat-3.rs:33:18: 33:23

    bb0: {
        _0 = const 3_usize;              // scope 0 at ui/const-generics/arg-in-pat-3.rs:33:26: 33:27
        return;                          // scope 0 at ui/const-generics/arg-in-pat-3.rs:33:5: 33:28
    }
}

fn pathp() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/const-generics/arg-in-pat-3.rs:36:12: 36:12

    bb0: {
        return;                          // scope 0 at ui/const-generics/arg-in-pat-3.rs:41:2: 41:2
    }
}

pathp::{constant#0}: usize = {
    let mut _0: usize;                   // return place in scope 0 at ui/const-generics/arg-in-pat-3.rs:38:15: 38:16

    bb0: {
        _0 = const 3_usize;              // scope 0 at ui/const-generics/arg-in-pat-3.rs:38:15: 38:16
        return;                          // scope 0 at ui/const-generics/arg-in-pat-3.rs:38:15: 38:16
    }
}

fn main() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/const-generics/arg-in-pat-3.rs:43:11: 43:11

    bb0: {
        return;                          // scope 0 at ui/const-generics/arg-in-pat-3.rs:43:13: 43:13
    }
}

fn Baz(_1: Foo<N>) -> Baz<N> {
    let mut _0: Baz<N>;                  // return place in scope 0 at ui/const-generics/arg-in-pat-3.rs:24:1: 24:27

    bb0: {
        _0 = Baz::<N>(move _1);          // scope 0 at ui/const-generics/arg-in-pat-3.rs:24:1: 24:27
        return;                          // scope 0 at ui/const-generics/arg-in-pat-3.rs:24:1: 24:27
    }
}

// MIR FOR CTFE
fn Baz(_1: Foo<N>) -> Baz<N> {
    let mut _0: Baz<N>;                  // return place in scope 0 at ui/const-generics/arg-in-pat-3.rs:24:1: 24:27

    bb0: {
        _0 = Baz::<N>(move _1);          // scope 0 at ui/const-generics/arg-in-pat-3.rs:24:1: 24:27
        return;                          // scope 0 at ui/const-generics/arg-in-pat-3.rs:24:1: 24:27
    }
}
