// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
<impl at ui/const-generics/issues/issue-83288.rs:18:1: 18:40>::{constant#0}: usize = {
    let mut _0: usize;                   // return place in scope 0 at ui/const-generics/issues/issue-83288.rs:18:30: 18:31

    bb0: {
        _0 = const N;                    // scope 0 at ui/const-generics/issues/issue-83288.rs:18:30: 18:31
        return;                          // scope 0 at ui/const-generics/issues/issue-83288.rs:18:30: 18:31
    }
}

const <impl at ui/const-generics/issues/issue-83288.rs:18:1: 18:40>::RANK: usize = {
    let mut _0: usize;                   // return place in scope 0 at ui/const-generics/issues/issue-83288.rs:19:17: 19:22

    bb0: {
        _0 = const 0_usize;              // scope 0 at ui/const-generics/issues/issue-83288.rs:19:25: 19:26
        return;                          // scope 0 at ui/const-generics/issues/issue-83288.rs:19:5: 19:27
    }
}

const <impl at ui/const-generics/issues/issue-83288.rs:18:1: 18:40>::NUM_ELEMS: usize = {
    let mut _0: usize;                   // return place in scope 0 at ui/const-generics/issues/issue-83288.rs:20:22: 20:27

    bb0: {
        _0 = const 1_usize;              // scope 0 at ui/const-generics/issues/issue-83288.rs:20:30: 20:31
        return;                          // scope 0 at ui/const-generics/issues/issue-83288.rs:20:5: 20:32
    }
}

<impl at ui/const-generics/issues/issue-83288.rs:23:1: 23:65>::{constant#0}: usize = {
    let mut _0: usize;                   // return place in scope 0 at ui/const-generics/issues/issue-83288.rs:23:20: 23:21

    bb0: {
        _0 = const N;                    // scope 0 at ui/const-generics/issues/issue-83288.rs:23:20: 23:21
        return;                          // scope 0 at ui/const-generics/issues/issue-83288.rs:23:20: 23:21
    }
}

<impl at ui/const-generics/issues/issue-83288.rs:23:1: 23:65>::{constant#1}: usize = {
    let mut _0: usize;                   // return place in scope 0 at ui/const-generics/issues/issue-83288.rs:23:48: 23:49

    bb0: {
        _0 = const N;                    // scope 0 at ui/const-generics/issues/issue-83288.rs:23:48: 23:49
        return;                          // scope 0 at ui/const-generics/issues/issue-83288.rs:23:48: 23:49
    }
}

const <impl at ui/const-generics/issues/issue-83288.rs:23:1: 23:65>::RANK: usize = {
    let mut _0: usize;                   // return place in scope 0 at ui/const-generics/issues/issue-83288.rs:24:17: 24:22
    let mut _1: (usize, bool);           // in scope 0 at ui/const-generics/issues/issue-83288.rs:24:25: 24:36

    bb0: {
        _1 = CheckedAdd(const _, const 1_usize); // scope 0 at ui/const-generics/issues/issue-83288.rs:24:25: 24:36
        assert(!move (_1.1: bool), "attempt to compute `{} + {}`, which would overflow", const _, const 1_usize) -> bb1; // scope 0 at ui/const-generics/issues/issue-83288.rs:24:25: 24:36
    }

    bb1: {
        _0 = move (_1.0: usize);         // scope 0 at ui/const-generics/issues/issue-83288.rs:24:25: 24:36
        return;                          // scope 0 at ui/const-generics/issues/issue-83288.rs:24:5: 24:37
    }
}

const <impl at ui/const-generics/issues/issue-83288.rs:23:1: 23:65>::NUM_ELEMS: usize = {
    let mut _0: usize;                   // return place in scope 0 at ui/const-generics/issues/issue-83288.rs:25:22: 25:27
    let mut _1: (usize, bool);           // in scope 0 at ui/const-generics/issues/issue-83288.rs:25:30: 25:46

    bb0: {
        _1 = CheckedMul(const _, const N); // scope 0 at ui/const-generics/issues/issue-83288.rs:25:30: 25:46
        assert(!move (_1.1: bool), "attempt to compute `{} * {}`, which would overflow", const _, const N) -> bb1; // scope 0 at ui/const-generics/issues/issue-83288.rs:25:30: 25:46
    }

    bb1: {
        _0 = move (_1.0: usize);         // scope 0 at ui/const-generics/issues/issue-83288.rs:25:30: 25:46
        return;                          // scope 0 at ui/const-generics/issues/issue-83288.rs:25:5: 25:47
    }
}

Tensor::{constant#1}: usize = {
    let mut _0: usize;                   // return place in scope 0 at ui/const-generics/issues/issue-83288.rs:43:30: 43:31

    bb0: {
        _0 = const N;                    // scope 0 at ui/const-generics/issues/issue-83288.rs:43:30: 43:31
        return;                          // scope 0 at ui/const-generics/issues/issue-83288.rs:43:30: 43:31
    }
}

Tensor::{constant#0}: usize = {
    let mut _0: usize;                   // return place in scope 0 at ui/const-generics/issues/issue-83288.rs:45:10: 45:22

    bb0: {
        _0 = const _;                    // scope 0 at ui/const-generics/issues/issue-83288.rs:45:10: 45:22
        return;                          // scope 0 at ui/const-generics/issues/issue-83288.rs:45:10: 45:22
    }
}

Tensor::data::{constant#0}: usize = {
    let mut _0: usize;                   // return place in scope 0 at ui/const-generics/issues/issue-83288.rs:47:20: 47:32

    bb0: {
        _0 = const _;                    // scope 0 at ui/const-generics/issues/issue-83288.rs:47:20: 47:32
        return;                          // scope 0 at ui/const-generics/issues/issue-83288.rs:47:20: 47:32
    }
}

<impl at ui/const-generics/issues/issue-83288.rs:51:1: 51:86>::{constant#3}: usize = {
    let mut _0: usize;                   // return place in scope 0 at ui/const-generics/issues/issue-83288.rs:51:17: 51:18

    bb0: {
        _0 = const N;                    // scope 0 at ui/const-generics/issues/issue-83288.rs:51:17: 51:18
        return;                          // scope 0 at ui/const-generics/issues/issue-83288.rs:51:17: 51:18
    }
}

<impl at ui/const-generics/issues/issue-83288.rs:51:1: 51:86>::{constant#4}: usize = {
    let mut _0: usize;                   // return place in scope 0 at ui/const-generics/issues/issue-83288.rs:51:32: 51:33

    bb0: {
        _0 = const N;                    // scope 0 at ui/const-generics/issues/issue-83288.rs:51:32: 51:33
        return;                          // scope 0 at ui/const-generics/issues/issue-83288.rs:51:32: 51:33
    }
}

<impl at ui/const-generics/issues/issue-83288.rs:51:1: 51:86>::{constant#5}: usize = {
    let mut _0: usize;                   // return place in scope 0 at ui/const-generics/issues/issue-83288.rs:54:39: 54:40

    bb0: {
        _0 = const N;                    // scope 0 at ui/const-generics/issues/issue-83288.rs:54:39: 54:40
        return;                          // scope 0 at ui/const-generics/issues/issue-83288.rs:54:39: 54:40
    }
}

<impl at ui/const-generics/issues/issue-83288.rs:51:1: 51:86>::{constant#0}: usize = {
    let mut _0: usize;                   // return place in scope 0 at ui/const-generics/issues/issue-83288.rs:55:10: 55:22

    bb0: {
        _0 = const _;                    // scope 0 at ui/const-generics/issues/issue-83288.rs:55:10: 55:22
        return;                          // scope 0 at ui/const-generics/issues/issue-83288.rs:55:10: 55:22
    }
}

<impl at ui/const-generics/issues/issue-83288.rs:51:1: 51:86>::{constant#1}: usize = {
    let mut _0: usize;                   // return place in scope 0 at ui/const-generics/issues/issue-83288.rs:56:10: 56:22

    bb0: {
        _0 = const _;                    // scope 0 at ui/const-generics/issues/issue-83288.rs:56:10: 56:22
        return;                          // scope 0 at ui/const-generics/issues/issue-83288.rs:56:10: 56:22
    }
}

<impl at ui/const-generics/issues/issue-83288.rs:51:1: 51:86>::{constant#2}: usize = {
    let mut _0: usize;                   // return place in scope 0 at ui/const-generics/issues/issue-83288.rs:57:10: 57:45

    bb0: {
        _0 = const _;                    // scope 0 at ui/const-generics/issues/issue-83288.rs:57:10: 57:45
        return;                          // scope 0 at ui/const-generics/issues/issue-83288.rs:57:10: 57:45
    }
}

<impl at ui/const-generics/issues/issue-83288.rs:51:1: 51:86>::{constant#6}: usize = {
    let mut _0: usize;                   // return place in scope 0 at ui/const-generics/issues/issue-83288.rs:51:66: 51:67

    bb0: {
        _0 = const N;                    // scope 0 at ui/const-generics/issues/issue-83288.rs:51:66: 51:67
        return;                          // scope 0 at ui/const-generics/issues/issue-83288.rs:51:66: 51:67
    }
}

<impl at ui/const-generics/issues/issue-83288.rs:51:1: 51:86>::{constant#7}: usize = {
    let mut _0: usize;                   // return place in scope 0 at ui/const-generics/issues/issue-83288.rs:51:84: 51:85

    bb0: {
        _0 = const N;                    // scope 0 at ui/const-generics/issues/issue-83288.rs:51:84: 51:85
        return;                          // scope 0 at ui/const-generics/issues/issue-83288.rs:51:84: 51:85
    }
}

<impl at ui/const-generics/issues/issue-83288.rs:51:1: 51:86>::Output::{constant#0}: usize = {
    let mut _0: usize;                   // return place in scope 0 at ui/const-generics/issues/issue-83288.rs:59:52: 59:53

    bb0: {
        _0 = const N;                    // scope 0 at ui/const-generics/issues/issue-83288.rs:59:52: 59:53
        return;                          // scope 0 at ui/const-generics/issues/issue-83288.rs:59:52: 59:53
    }
}

fn <impl at ui/const-generics/issues/issue-83288.rs:51:1: 51:86>::mul(_1: Tensor<I, N>, _2: Tensor<J, N>) -> Tensor<<I as Concat<J>>::Output, N> {
    debug self => _1;                    // in scope 0 at ui/const-generics/issues/issue-83288.rs:61:12: 61:16
    debug _rhs => _2;                    // in scope 0 at ui/const-generics/issues/issue-83288.rs:61:18: 61:22
    let mut _0: Tensor<<I as Concat<J>>::Output, N>; // return place in scope 0 at ui/const-generics/issues/issue-83288.rs:61:41: 61:53
    let mut _3: [u8; <I as Concat<J>>::Output::NUM_ELEMS]; // in scope 0 at ui/const-generics/issues/issue-83288.rs:63:19: 63:61
    let mut _4: std::marker::PhantomData<<I as Concat<J>>::Output>; // in scope 0 at ui/const-generics/issues/issue-83288.rs:64:23: 64:34

    bb0: {
        _3 = [const 0_u8; <I as Concat<J>>::Output::NUM_ELEMS]; // scope 0 at ui/const-generics/issues/issue-83288.rs:63:19: 63:61
        _0 = Tensor::<<I as Concat<J>>::Output, N> { data: move _3, _phantom: move _4 }; // scope 0 at ui/const-generics/issues/issue-83288.rs:62:9: 65:10
        return;                          // scope 0 at ui/const-generics/issues/issue-83288.rs:66:6: 66:6
    }
}

<impl at ui/const-generics/issues/issue-83288.rs:51:1: 51:86>::mul::{constant#1}: usize = {
    let mut _0: usize;                   // return place in scope 0 at ui/const-generics/issues/issue-83288.rs:61:34: 61:35

    bb0: {
        _0 = const N;                    // scope 0 at ui/const-generics/issues/issue-83288.rs:61:34: 61:35
        return;                          // scope 0 at ui/const-generics/issues/issue-83288.rs:61:34: 61:35
    }
}

<impl at ui/const-generics/issues/issue-83288.rs:51:1: 51:86>::mul::{constant#0}: usize = {
    let mut _0: usize;                   // return place in scope 0 at ui/const-generics/issues/issue-83288.rs:63:25: 63:60

    bb0: {
        _0 = const _;                    // scope 0 at ui/const-generics/issues/issue-83288.rs:63:25: 63:60
        return;                          // scope 0 at ui/const-generics/issues/issue-83288.rs:63:25: 63:60
    }
}

fn main() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/const-generics/issues/issue-83288.rs:69:11: 69:11

    bb0: {
        return;                          // scope 0 at ui/const-generics/issues/issue-83288.rs:69:13: 69:13
    }
}
