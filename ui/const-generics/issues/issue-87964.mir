// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
Container::{constant#0}: usize = {
    let mut _0: usize;                   // return place in scope 0 at ui/const-generics/issues/issue-87964.rs:13:10: 13:19

    bb0: {
        _0 = const _;                    // scope 0 at ui/const-generics/issues/issue-87964.rs:13:10: 13:19
        return;                          // scope 0 at ui/const-generics/issues/issue-87964.rs:13:10: 13:19
    }
}

<impl at ui/const-generics/issues/issue-87964.rs:18:1: 18:29>::{constant#0}: usize = {
    let mut _0: usize;                   // return place in scope 0 at ui/const-generics/issues/issue-87964.rs:20:10: 20:19

    bb0: {
        _0 = const _;                    // scope 0 at ui/const-generics/issues/issue-87964.rs:20:10: 20:19
        return;                          // scope 0 at ui/const-generics/issues/issue-87964.rs:20:10: 20:19
    }
}

fn <impl at ui/const-generics/issues/issue-87964.rs:18:1: 18:29>::start(_1: T) -> Container<T> {
    debug _target => _1;                 // in scope 0 at ui/const-generics/issues/issue-87964.rs:23:9: 23:16
    let mut _0: Container<T>;            // return place in scope 0 at ui/const-generics/issues/issue-87964.rs:24:10: 24:22
    let mut _2: T;                       // in scope 0 at ui/const-generics/issues/issue-87964.rs:25:21: 25:28

    bb0: {
        _2 = move _1;                    // scope 0 at ui/const-generics/issues/issue-87964.rs:25:21: 25:28
        _0 = Container::<T> { _target: move _2 }; // scope 0 at ui/const-generics/issues/issue-87964.rs:25:9: 25:30
        return;                          // scope 0 at ui/const-generics/issues/issue-87964.rs:26:6: 26:6
    }
}

fn main() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/const-generics/issues/issue-87964.rs:29:11: 29:11

    bb0: {
        return;                          // scope 0 at ui/const-generics/issues/issue-87964.rs:29:13: 29:13
    }
}
