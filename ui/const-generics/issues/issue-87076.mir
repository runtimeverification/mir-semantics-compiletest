// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
fn <impl at ui/const-generics/issues/issue-87076.rs:6:10: 6:19>::eq(_1: &UnitDims, _2: &UnitDims) -> bool {
    debug self => _1;                    // in scope 0 at ui/const-generics/issues/issue-87076.rs:6:10: 6:19
    debug other => _2;                   // in scope 0 at ui/const-generics/issues/issue-87076.rs:6:10: 6:19
    let mut _0: bool;                    // return place in scope 0 at ui/const-generics/issues/issue-87076.rs:6:10: 6:19
    let mut _3: bool;                    // in scope 0 at ui/const-generics/issues/issue-87076.rs:8:5: 8:17
    let mut _4: u8;                      // in scope 0 at ui/const-generics/issues/issue-87076.rs:8:5: 8:17
    let mut _5: u8;                      // in scope 0 at ui/const-generics/issues/issue-87076.rs:8:5: 8:17
    let mut _6: bool;                    // in scope 0 at ui/const-generics/issues/issue-87076.rs:9:5: 9:19
    let mut _7: u8;                      // in scope 0 at ui/const-generics/issues/issue-87076.rs:9:5: 9:19
    let mut _8: u8;                      // in scope 0 at ui/const-generics/issues/issue-87076.rs:9:5: 9:19

    bb0: {
        _4 = ((*_1).0: u8);              // scope 0 at ui/const-generics/issues/issue-87076.rs:8:5: 8:17
        _5 = ((*_2).0: u8);              // scope 0 at ui/const-generics/issues/issue-87076.rs:8:5: 8:17
        _3 = Eq(move _4, move _5);       // scope 0 at ui/const-generics/issues/issue-87076.rs:8:5: 8:17
        switchInt(move _3) -> [0: bb1, otherwise: bb2]; // scope 0 at ui/const-generics/issues/issue-87076.rs:9:5: 9:19
    }

    bb1: {
        _0 = const false;                // scope 0 at ui/const-generics/issues/issue-87076.rs:9:5: 9:19
        goto -> bb3;                     // scope 0 at ui/const-generics/issues/issue-87076.rs:9:5: 9:19
    }

    bb2: {
        _7 = ((*_1).1: u8);              // scope 0 at ui/const-generics/issues/issue-87076.rs:9:5: 9:19
        _8 = ((*_2).1: u8);              // scope 0 at ui/const-generics/issues/issue-87076.rs:9:5: 9:19
        _6 = Eq(move _7, move _8);       // scope 0 at ui/const-generics/issues/issue-87076.rs:9:5: 9:19
        _0 = move _6;                    // scope 0 at ui/const-generics/issues/issue-87076.rs:9:5: 9:19
        goto -> bb3;                     // scope 0 at ui/const-generics/issues/issue-87076.rs:9:5: 9:19
    }

    bb3: {
        return;                          // scope 0 at ui/const-generics/issues/issue-87076.rs:6:19: 6:19
    }
}

fn <impl at ui/const-generics/issues/issue-87076.rs:6:21: 6:23>::assert_receiver_is_total_eq(_1: &UnitDims) -> () {
    debug self => _1;                    // in scope 0 at ui/const-generics/issues/issue-87076.rs:6:21: 6:23
    let mut _0: ();                      // return place in scope 0 at ui/const-generics/issues/issue-87076.rs:6:21: 6:23
    scope 1 {
    }

    bb0: {
        return;                          // scope 0 at ui/const-generics/issues/issue-87076.rs:6:23: 6:23
    }
}

<impl at ui/const-generics/issues/issue-87076.rs:14:1: 14:43>::{constant#0}: UnitDims = {
    let mut _0: UnitDims;                // return place in scope 0 at ui/const-generics/issues/issue-87076.rs:14:38: 14:42

    bb0: {
        _0 = const DIMS;                 // scope 0 at ui/const-generics/issues/issue-87076.rs:14:38: 14:42
                                         // mir::Constant
                                         // + span: ui/const-generics/issues/issue-87076.rs:14:38: 14:42
                                         // + literal: Const { ty: UnitDims, val: Param(DIMS) }
        return;                          // scope 0 at ui/const-generics/issues/issue-87076.rs:14:38: 14:42
    }
}

fn <impl at ui/const-generics/issues/issue-87076.rs:14:1: 14:43>::crash() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/const-generics/issues/issue-87076.rs:15:16: 15:16

    bb0: {
        return;                          // scope 0 at ui/const-generics/issues/issue-87076.rs:15:18: 15:18
    }
}

fn main() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/const-generics/issues/issue-87076.rs:18:11: 18:11
    let _1: ();                          // in scope 0 at ui/const-generics/issues/issue-87076.rs:19:5: 19:62

    bb0: {
        _1 = UnitValue::<UnitDims { time: 1, length: 2 }>::crash() -> bb1; // scope 0 at ui/const-generics/issues/issue-87076.rs:19:5: 19:62
                                         // mir::Constant
                                         // + span: ui/const-generics/issues/issue-87076.rs:19:5: 19:60
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: fn() {UnitValue::<UnitDims { time: 1, length: 2 }>::crash}, val: Value(<ZST>) }
    }

    bb1: {
        return;                          // scope 0 at ui/const-generics/issues/issue-87076.rs:20:2: 20:2
    }
}

main::{constant#0}: UnitDims = {
    let mut _0: UnitDims;                // return place in scope 0 at ui/const-generics/issues/issue-87076.rs:19:17: 19:52

    bb0: {
        _0 = UnitDims { time: const 1_u8, length: const 2_u8 }; // scope 0 at ui/const-generics/issues/issue-87076.rs:19:19: 19:50
        return;                          // scope 0 at ui/const-generics/issues/issue-87076.rs:19:17: 19:52
    }
}
