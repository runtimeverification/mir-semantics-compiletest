// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
<impl at ui/const-generics/issues/issue-105037.rs:11:1: 11:44>::{constant#0}: usize = {
    let mut _0: usize;                   // return place in scope 0 at ui/const-generics/issues/issue-105037.rs:11:28: 11:29

    bb0: {
        _0 = const D;                    // scope 0 at ui/const-generics/issues/issue-105037.rs:11:28: 11:29
        return;                          // scope 0 at ui/const-generics/issues/issue-105037.rs:11:28: 11:29
    }
}

<impl at ui/const-generics/issues/issue-105037.rs:11:1: 11:44>::{constant#1}: usize = {
    let mut _0: usize;                   // return place in scope 0 at ui/const-generics/issues/issue-105037.rs:11:42: 11:43

    bb0: {
        _0 = const D;                    // scope 0 at ui/const-generics/issues/issue-105037.rs:11:42: 11:43
        return;                          // scope 0 at ui/const-generics/issues/issue-105037.rs:11:42: 11:43
    }
}

const <impl at ui/const-generics/issues/issue-105037.rs:11:1: 11:44>::COLUMNS: usize = {
    let mut _0: usize;                   // return place in scope 0 at ui/const-generics/issues/issue-105037.rs:12:20: 12:25

    bb0: {
        _0 = const 123_usize;            // scope 0 at ui/const-generics/issues/issue-105037.rs:12:28: 12:31
        return;                          // scope 0 at ui/const-generics/issues/issue-105037.rs:12:5: 12:32
    }
}

<impl at ui/const-generics/issues/issue-105037.rs:16:1: 16:44>::{constant#0}: usize = {
    let mut _0: usize;                   // return place in scope 0 at ui/const-generics/issues/issue-105037.rs:16:28: 16:29

    bb0: {
        _0 = const D;                    // scope 0 at ui/const-generics/issues/issue-105037.rs:16:28: 16:29
        return;                          // scope 0 at ui/const-generics/issues/issue-105037.rs:16:28: 16:29
    }
}

<impl at ui/const-generics/issues/issue-105037.rs:16:1: 16:44>::{constant#1}: usize = {
    let mut _0: usize;                   // return place in scope 0 at ui/const-generics/issues/issue-105037.rs:16:42: 16:43

    bb0: {
        _0 = const D;                    // scope 0 at ui/const-generics/issues/issue-105037.rs:16:42: 16:43
        return;                          // scope 0 at ui/const-generics/issues/issue-105037.rs:16:42: 16:43
    }
}

const <impl at ui/const-generics/issues/issue-105037.rs:16:1: 16:44>::COLUMNS: usize = {
    let mut _0: usize;                   // return place in scope 0 at ui/const-generics/issues/issue-105037.rs:17:20: 17:25

    bb0: {
        _0 = const 456_usize;            // scope 0 at ui/const-generics/issues/issue-105037.rs:17:28: 17:31
        return;                          // scope 0 at ui/const-generics/issues/issue-105037.rs:17:5: 17:32
    }
}

fn process_table(_1: T) -> () {
    debug _table => _1;                  // in scope 0 at ui/const-generics/issues/issue-105037.rs:20:47: 20:53
    let mut _0: ();                      // return place in scope 0 at ui/const-generics/issues/issue-105037.rs:21:1: 21:1

    bb0: {
        drop(_1) -> bb1;                 // scope 0 at ui/const-generics/issues/issue-105037.rs:24:1: 24:2
    }

    bb1: {
        return;                          // scope 0 at ui/const-generics/issues/issue-105037.rs:24:2: 24:2
    }
}

process_table::{constant#1}: usize = {
    let mut _0: usize;                   // return place in scope 0 at ui/const-generics/issues/issue-105037.rs:20:27: 20:28

    bb0: {
        _0 = const D;                    // scope 0 at ui/const-generics/issues/issue-105037.rs:20:27: 20:28
        return;                          // scope 0 at ui/const-generics/issues/issue-105037.rs:20:27: 20:28
    }
}

process_table::{constant#0}: usize = {
    let mut _0: usize;                   // return place in scope 0 at ui/const-generics/issues/issue-105037.rs:22:10: 22:20

    bb0: {
        _0 = const _;                    // scope 0 at ui/const-generics/issues/issue-105037.rs:22:10: 22:20
        return;                          // scope 0 at ui/const-generics/issues/issue-105037.rs:22:10: 22:20
    }
}

fn process_all_tables() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/const-generics/issues/issue-105037.rs:27:1: 27:1
    let _1: ();                          // in scope 0 at ui/const-generics/issues/issue-105037.rs:31:5: 31:31
    let mut _2: Table1<D>;               // in scope 0 at ui/const-generics/issues/issue-105037.rs:31:19: 31:30
    let _3: ();                          // in scope 0 at ui/const-generics/issues/issue-105037.rs:32:5: 32:31
    let mut _4: Table2<D>;               // in scope 0 at ui/const-generics/issues/issue-105037.rs:32:19: 32:30

    bb0: {
        _1 = process_table::<Table1<D>, D>(move _2) -> bb1; // scope 0 at ui/const-generics/issues/issue-105037.rs:31:5: 31:31
                                         // mir::Constant
                                         // + span: ui/const-generics/issues/issue-105037.rs:31:5: 31:18
                                         // + literal: Const { ty: fn(Table1<D>) {process_table::<Table1<D>, D>}, val: Value(<ZST>) }
    }

    bb1: {
        _3 = process_table::<Table2<D>, D>(move _4) -> bb2; // scope 0 at ui/const-generics/issues/issue-105037.rs:32:5: 32:31
                                         // mir::Constant
                                         // + span: ui/const-generics/issues/issue-105037.rs:32:5: 32:18
                                         // + literal: Const { ty: fn(Table2<D>) {process_table::<Table2<D>, D>}, val: Value(<ZST>) }
    }

    bb2: {
        return;                          // scope 0 at ui/const-generics/issues/issue-105037.rs:33:2: 33:2
    }
}

process_all_tables::{constant#0}: usize = {
    let mut _0: usize;                   // return place in scope 0 at ui/const-generics/issues/issue-105037.rs:28:10: 28:30

    bb0: {
        _0 = const _;                    // scope 0 at ui/const-generics/issues/issue-105037.rs:28:10: 28:30
        return;                          // scope 0 at ui/const-generics/issues/issue-105037.rs:28:10: 28:30
    }
}

process_all_tables::{constant#4}: usize = {
    let mut _0: usize;                   // return place in scope 0 at ui/const-generics/issues/issue-105037.rs:28:19: 28:20

    bb0: {
        _0 = const D;                    // scope 0 at ui/const-generics/issues/issue-105037.rs:28:19: 28:20
        return;                          // scope 0 at ui/const-generics/issues/issue-105037.rs:28:19: 28:20
    }
}

process_all_tables::{constant#1}: usize = {
    let mut _0: usize;                   // return place in scope 0 at ui/const-generics/issues/issue-105037.rs:29:10: 29:30

    bb0: {
        _0 = const _;                    // scope 0 at ui/const-generics/issues/issue-105037.rs:29:10: 29:30
        return;                          // scope 0 at ui/const-generics/issues/issue-105037.rs:29:10: 29:30
    }
}

process_all_tables::{constant#5}: usize = {
    let mut _0: usize;                   // return place in scope 0 at ui/const-generics/issues/issue-105037.rs:29:19: 29:20

    bb0: {
        _0 = const D;                    // scope 0 at ui/const-generics/issues/issue-105037.rs:29:19: 29:20
        return;                          // scope 0 at ui/const-generics/issues/issue-105037.rs:29:19: 29:20
    }
}

process_all_tables::{constant#2}: usize = {
    let mut _0: usize;                   // return place in scope 0 at ui/const-generics/issues/issue-105037.rs:31:28: 31:29

    bb0: {
        _0 = const D;                    // scope 0 at ui/const-generics/issues/issue-105037.rs:31:28: 31:29
        return;                          // scope 0 at ui/const-generics/issues/issue-105037.rs:31:28: 31:29
    }
}

process_all_tables::{constant#3}: usize = {
    let mut _0: usize;                   // return place in scope 0 at ui/const-generics/issues/issue-105037.rs:32:28: 32:29

    bb0: {
        _0 = const D;                    // scope 0 at ui/const-generics/issues/issue-105037.rs:32:28: 32:29
        return;                          // scope 0 at ui/const-generics/issues/issue-105037.rs:32:28: 32:29
    }
}

fn main() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/const-generics/issues/issue-105037.rs:35:11: 35:11

    bb0: {
        return;                          // scope 0 at ui/const-generics/issues/issue-105037.rs:35:13: 35:13
    }
}
