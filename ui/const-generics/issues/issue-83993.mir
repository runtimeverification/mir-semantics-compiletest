// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
fn bug() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/const-generics/issues/issue-83993.rs:7:1: 7:1

    bb0: {
        return;                          // scope 0 at ui/const-generics/issues/issue-83993.rs:12:3: 12:3
    }
}

bug::{constant#0}: usize = {
    let mut _0: usize;                   // return place in scope 0 at ui/const-generics/issues/issue-83993.rs:8:18: 11:6
    let _1: &();                         // in scope 0 at ui/const-generics/issues/issue-83993.rs:9:13: 9:14
    scope 1 {
        debug x => _1;                   // in scope 1 at ui/const-generics/issues/issue-83993.rs:9:13: 9:14
    }

    bb0: {
        StorageLive(_1);                 // scope 0 at ui/const-generics/issues/issue-83993.rs:9:13: 9:14
        _0 = const 0_usize;              // scope 1 at ui/const-generics/issues/issue-83993.rs:10:9: 10:10
        StorageDead(_1);                 // scope 0 at ui/const-generics/issues/issue-83993.rs:11:5: 11:6
        return;                          // scope 0 at ui/const-generics/issues/issue-83993.rs:8:18: 11:6
    }
}

fn main() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/const-generics/issues/issue-83993.rs:14:11: 14:11

    bb0: {
        return;                          // scope 0 at ui/const-generics/issues/issue-83993.rs:14:13: 14:13
    }
}
