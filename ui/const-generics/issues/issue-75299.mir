// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
fn main() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/const-generics/issues/issue-75299.rs:3:11: 3:11
    let _1: [u8; 1];                     // in scope 0 at ui/const-generics/issues/issue-75299.rs:7:9: 7:11
    scope 1 {
        debug _x => _1;                  // in scope 1 at ui/const-generics/issues/issue-75299.rs:7:9: 7:11
    }

    bb0: {
        _1 = foo::<1>() -> bb1;          // scope 0 at ui/const-generics/issues/issue-75299.rs:7:14: 7:24
                                         // mir::Constant
                                         // + span: ui/const-generics/issues/issue-75299.rs:7:14: 7:22
                                         // + literal: Const { ty: fn() -> [u8; 1] {foo::<1>}, val: Value(<ZST>) }
    }

    bb1: {
        return;                          // scope 0 at ui/const-generics/issues/issue-75299.rs:8:2: 8:2
    }
}

fn foo() -> [u8; N] {
    let mut _0: [u8; N];                 // return place in scope 0 at ui/const-generics/issues/issue-75299.rs:4:33: 4:40

    bb0: {
        _0 = [const 0_u8; N];            // scope 0 at ui/const-generics/issues/issue-75299.rs:5:9: 5:15
        return;                          // scope 0 at ui/const-generics/issues/issue-75299.rs:6:6: 6:6
    }
}

foo::{constant#0}: usize = {
    let mut _0: usize;                   // return place in scope 0 at ui/const-generics/issues/issue-75299.rs:4:38: 4:39

    bb0: {
        _0 = const N;                    // scope 0 at ui/const-generics/issues/issue-75299.rs:4:38: 4:39
        return;                          // scope 0 at ui/const-generics/issues/issue-75299.rs:4:38: 4:39
    }
}

foo::{constant#1}: usize = {
    let mut _0: usize;                   // return place in scope 0 at ui/const-generics/issues/issue-75299.rs:5:13: 5:14

    bb0: {
        _0 = const N;                    // scope 0 at ui/const-generics/issues/issue-75299.rs:5:13: 5:14
        return;                          // scope 0 at ui/const-generics/issues/issue-75299.rs:5:13: 5:14
    }
}

main::{constant#0}: usize = {
    let mut _0: usize;                   // return place in scope 0 at ui/const-generics/issues/issue-75299.rs:7:20: 7:21

    bb0: {
        _0 = const 1_usize;              // scope 0 at ui/const-generics/issues/issue-75299.rs:7:20: 7:21
        return;                          // scope 0 at ui/const-generics/issues/issue-75299.rs:7:20: 7:21
    }
}
