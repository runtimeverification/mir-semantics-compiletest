// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
<impl at ui/const-generics/issues/issue-67185-1.rs:6:1: 6:16>::Quaks::{constant#0}: usize = {
    let mut _0: usize;                   // return place in scope 0 at ui/const-generics/issues/issue-67185-1.rs:7:24: 7:25

    bb0: {
        _0 = const 3_usize;              // scope 0 at ui/const-generics/issues/issue-67185-1.rs:7:24: 7:25
        return;                          // scope 0 at ui/const-generics/issues/issue-67185-1.rs:7:24: 7:25
    }
}

<impl at ui/const-generics/issues/issue-67185-1.rs:11:1: 11:22>::{constant#0}: usize = {
    let mut _0: usize;                   // return place in scope 0 at ui/const-generics/issues/issue-67185-1.rs:11:20: 11:21

    bb0: {
        _0 = const 3_usize;              // scope 0 at ui/const-generics/issues/issue-67185-1.rs:11:20: 11:21
        return;                          // scope 0 at ui/const-generics/issues/issue-67185-1.rs:11:20: 11:21
    }
}

<impl at ui/const-generics/issues/issue-67185-1.rs:12:1: 12:27>::{constant#0}: usize = {
    let mut _0: usize;                   // return place in scope 0 at ui/const-generics/issues/issue-67185-1.rs:12:21: 12:22

    bb0: {
        _0 = const 3_usize;              // scope 0 at ui/const-generics/issues/issue-67185-1.rs:12:21: 12:22
        return;                          // scope 0 at ui/const-generics/issues/issue-67185-1.rs:12:21: 12:22
    }
}

<impl at ui/const-generics/issues/issue-67185-1.rs:12:1: 12:27>::{constant#1}: usize = {
    let mut _0: usize;                   // return place in scope 0 at ui/const-generics/issues/issue-67185-1.rs:12:25: 12:26

    bb0: {
        _0 = const 2_usize;              // scope 0 at ui/const-generics/issues/issue-67185-1.rs:12:25: 12:26
        return;                          // scope 0 at ui/const-generics/issues/issue-67185-1.rs:12:25: 12:26
    }
}

Foo::{constant#0}: usize = {
    let mut _0: usize;                   // return place in scope 0 at ui/const-generics/issues/issue-67185-1.rs:16:30: 16:31

    bb0: {
        _0 = const 2_usize;              // scope 0 at ui/const-generics/issues/issue-67185-1.rs:16:30: 16:31
        return;                          // scope 0 at ui/const-generics/issues/issue-67185-1.rs:16:30: 16:31
    }
}

fn f(_1: impl Foo) -> () {
    let mut _0: ();                      // return place in scope 0 at ui/const-generics/issues/issue-67185-1.rs:25:19: 25:19

    bb0: {
        drop(_1) -> bb1;                 // scope 0 at ui/const-generics/issues/issue-67185-1.rs:25:20: 25:21
    }

    bb1: {
        return;                          // scope 0 at ui/const-generics/issues/issue-67185-1.rs:25:21: 25:21
    }
}

fn main() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/const-generics/issues/issue-67185-1.rs:27:11: 27:11
    let mut _1: FooImpl;                 // in scope 0 at ui/const-generics/issues/issue-67185-1.rs:28:7: 28:14

    bb0: {
        _0 = f::<FooImpl>(move _1) -> bb1; // scope 0 at ui/const-generics/issues/issue-67185-1.rs:28:5: 28:15
                                         // mir::Constant
                                         // + span: ui/const-generics/issues/issue-67185-1.rs:28:5: 28:6
                                         // + literal: Const { ty: fn(FooImpl) {f::<FooImpl>}, val: Value(<ZST>) }
    }

    bb1: {
        return;                          // scope 0 at ui/const-generics/issues/issue-67185-1.rs:29:2: 29:2
    }
}
