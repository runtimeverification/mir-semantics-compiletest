// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
<impl at ui/const-generics/issues/issue-86535.rs:6:1: 6:43>::{constant#0}: &str = {
    let mut _0: &str;                    // return place in scope 0 at ui/const-generics/issues/issue-86535.rs:6:37: 6:42

    bb0: {
        _0 = const S;                    // scope 0 at ui/const-generics/issues/issue-86535.rs:6:39: 6:40
                                         // mir::Constant
                                         // + span: ui/const-generics/issues/issue-86535.rs:6:39: 6:40
                                         // + literal: Const { ty: &str, val: Param(S) }
        return;                          // scope 0 at ui/const-generics/issues/issue-86535.rs:6:37: 6:42
    }
}

const <impl at ui/const-generics/issues/issue-86535.rs:6:1: 6:43>::W: usize = {
    let mut _0: usize;                   // return place in scope 0 at ui/const-generics/issues/issue-86535.rs:7:14: 7:19

    bb0: {
        _0 = const 3_usize;              // scope 0 at ui/const-generics/issues/issue-86535.rs:7:22: 7:23
        return;                          // scope 0 at ui/const-generics/issues/issue-86535.rs:7:5: 7:24
    }
}

fn <impl at ui/const-generics/issues/issue-86535.rs:6:1: 6:43>::d(_1: &[u8; Self::W]) -> F<S> {
    debug r => _1;                       // in scope 0 at ui/const-generics/issues/issue-86535.rs:9:10: 9:11
    let mut _0: F<S>;                    // return place in scope 0 at ui/const-generics/issues/issue-86535.rs:9:32: 9:40
    let _2: [u8; Self::W];               // in scope 0 at ui/const-generics/issues/issue-86535.rs:10:13: 10:14
    scope 1 {
        debug x => _2;                   // in scope 1 at ui/const-generics/issues/issue-86535.rs:10:13: 10:14
    }

    bb0: {
        _2 = [const 0_u8; Self::W];      // scope 0 at ui/const-generics/issues/issue-86535.rs:10:32: 10:44
        return;                          // scope 0 at ui/const-generics/issues/issue-86535.rs:12:6: 12:6
    }
}

<impl at ui/const-generics/issues/issue-86535.rs:6:1: 6:43>::d::{constant#0}: usize = {
    let mut _0: usize;                   // return place in scope 0 at ui/const-generics/issues/issue-86535.rs:9:19: 9:26

    bb0: {
        _0 = const _;                    // scope 0 at ui/const-generics/issues/issue-86535.rs:9:19: 9:26
        return;                          // scope 0 at ui/const-generics/issues/issue-86535.rs:9:19: 9:26
    }
}

<impl at ui/const-generics/issues/issue-86535.rs:6:1: 6:43>::d::{constant#1}: &str = {
    let mut _0: &str;                    // return place in scope 0 at ui/const-generics/issues/issue-86535.rs:9:34: 9:39

    bb0: {
        _0 = const S;                    // scope 0 at ui/const-generics/issues/issue-86535.rs:9:36: 9:37
                                         // mir::Constant
                                         // + span: ui/const-generics/issues/issue-86535.rs:9:36: 9:37
                                         // + literal: Const { ty: &str, val: Param(S) }
        return;                          // scope 0 at ui/const-generics/issues/issue-86535.rs:9:34: 9:39
    }
}

<impl at ui/const-generics/issues/issue-86535.rs:6:1: 6:43>::d::{constant#3}: usize = {
    let mut _0: usize;                   // return place in scope 0 at ui/const-generics/issues/issue-86535.rs:10:36: 10:43

    bb0: {
        _0 = const _;                    // scope 0 at ui/const-generics/issues/issue-86535.rs:10:36: 10:43
        return;                          // scope 0 at ui/const-generics/issues/issue-86535.rs:10:36: 10:43
    }
}

<impl at ui/const-generics/issues/issue-86535.rs:6:1: 6:43>::d::{constant#2}: usize = {
    let mut _0: usize;                   // return place in scope 0 at ui/const-generics/issues/issue-86535.rs:10:21: 10:28

    bb0: {
        _0 = const _;                    // scope 0 at ui/const-generics/issues/issue-86535.rs:10:21: 10:28
        return;                          // scope 0 at ui/const-generics/issues/issue-86535.rs:10:21: 10:28
    }
}

X::d::{constant#0}: usize = {
    let mut _0: usize;                   // return place in scope 0 at ui/const-generics/issues/issue-86535.rs:17:19: 17:26

    bb0: {
        _0 = const _;                    // scope 0 at ui/const-generics/issues/issue-86535.rs:17:19: 17:26
        return;                          // scope 0 at ui/const-generics/issues/issue-86535.rs:17:19: 17:26
    }
}

fn main() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/const-generics/issues/issue-86535.rs:20:11: 20:11

    bb0: {
        return;                          // scope 0 at ui/const-generics/issues/issue-86535.rs:20:13: 20:13
    }
}
