// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
<impl at ui/const-generics/condition-in-trait-const-arg.rs:10:1: 10:38>::{constant#0}: bool = {
    let mut _0: bool;                    // return place in scope 0 at ui/const-generics/condition-in-trait-const-arg.rs:10:18: 10:30

    bb0: {
        _0 = Eq(const 0_u8, const 0_u8); // scope 0 at ui/const-generics/condition-in-trait-const-arg.rs:10:19: 10:29
        return;                          // scope 0 at ui/const-generics/condition-in-trait-const-arg.rs:10:18: 10:30
    }
}

<impl at ui/const-generics/condition-in-trait-const-arg.rs:12:1: 12:33>::{constant#0}: bool = {
    let mut _0: bool;                    // return place in scope 0 at ui/const-generics/condition-in-trait-const-arg.rs:12:18: 12:22

    bb0: {
        _0 = const true;                 // scope 0 at ui/const-generics/condition-in-trait-const-arg.rs:12:18: 12:22
        return;                          // scope 0 at ui/const-generics/condition-in-trait-const-arg.rs:12:18: 12:22
    }
}

fn main() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/const-generics/condition-in-trait-const-arg.rs:14:11: 14:11

    bb0: {
        return;                          // scope 0 at ui/const-generics/condition-in-trait-const-arg.rs:14:13: 14:13
    }
}
