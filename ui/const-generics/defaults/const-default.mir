// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
ConstDefault::{constant#0}: usize = {
    let mut _0: usize;                   // return place in scope 0 at ui/const-generics/defaults/const-default.rs:2:42: 2:43

    bb0: {
        _0 = const 3_usize;              // scope 0 at ui/const-generics/defaults/const-default.rs:2:42: 2:43
        return;                          // scope 0 at ui/const-generics/defaults/const-default.rs:2:42: 2:43
    }
}

<impl at ui/const-generics/defaults/const-default.rs:4:1: 4:37>::{constant#0}: usize = {
    let mut _0: usize;                   // return place in scope 0 at ui/const-generics/defaults/const-default.rs:4:35: 4:36

    bb0: {
        _0 = const N;                    // scope 0 at ui/const-generics/defaults/const-default.rs:4:35: 4:36
        return;                          // scope 0 at ui/const-generics/defaults/const-default.rs:4:35: 4:36
    }
}

fn <impl at ui/const-generics/defaults/const-default.rs:4:1: 4:37>::foo(_1: ConstDefault<N>) -> usize {
    debug self => _1;                    // in scope 0 at ui/const-generics/defaults/const-default.rs:5:12: 5:16
    let mut _0: usize;                   // return place in scope 0 at ui/const-generics/defaults/const-default.rs:5:21: 5:26

    bb0: {
        _0 = const N;                    // scope 0 at ui/const-generics/defaults/const-default.rs:6:9: 6:10
        return;                          // scope 0 at ui/const-generics/defaults/const-default.rs:7:6: 7:6
    }
}

fn <impl at ui/const-generics/defaults/const-default.rs:10:1: 10:18>::new() -> ConstDefault {
    let mut _0: ConstDefault;            // return place in scope 0 at ui/const-generics/defaults/const-default.rs:11:17: 11:21

    bb0: {
        return;                          // scope 0 at ui/const-generics/defaults/const-default.rs:13:6: 13:6
    }
}

fn <impl at ui/const-generics/defaults/const-default.rs:10:1: 10:18>::bar(_1: ConstDefault) -> () {
    debug self => _1;                    // in scope 0 at ui/const-generics/defaults/const-default.rs:15:12: 15:16
    let mut _0: ();                      // return place in scope 0 at ui/const-generics/defaults/const-default.rs:15:18: 15:18

    bb0: {
        return;                          // scope 0 at ui/const-generics/defaults/const-default.rs:15:20: 15:20
    }
}

fn main() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/const-generics/defaults/const-default.rs:18:15: 18:15
    let _1: ConstDefault;                // in scope 0 at ui/const-generics/defaults/const-default.rs:19:9: 19:10
    let mut _2: (&usize, &usize);        // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _3: &usize;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let _4: usize;                       // in scope 0 at ui/const-generics/defaults/const-default.rs:20:16: 20:23
    let mut _5: ConstDefault;            // in scope 0 at ui/const-generics/defaults/const-default.rs:20:16: 20:17
    let mut _6: &usize;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _9: bool;                    // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    let mut _10: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
    let mut _11: usize;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
    let mut _12: usize;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
    let _14: !;                          // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
    let mut _15: core::panicking::AssertKind; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
    let mut _16: &usize;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let _17: &usize;                     // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let mut _18: &usize;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let _19: &usize;                     // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let mut _20: std::option::Option<std::fmt::Arguments<'_>>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
    let _22: ();                         // in scope 0 at ui/const-generics/defaults/const-default.rs:23:5: 23:12
    let mut _23: ConstDefault;           // in scope 0 at ui/const-generics/defaults/const-default.rs:23:5: 23:6
    scope 1 {
        debug s => _1;                   // in scope 1 at ui/const-generics/defaults/const-default.rs:19:9: 19:10
        let _7: &usize;                  // in scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        let _8: &usize;                  // in scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        let _21: ConstDefault;           // in scope 1 at ui/const-generics/defaults/const-default.rs:22:9: 22:10
        let mut _24: &usize;             // in scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        scope 2 {
            debug left_val => _7;        // in scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
            debug right_val => _8;       // in scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
            let _13: core::panicking::AssertKind; // in scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
            scope 3 {
                debug kind => _13;       // in scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
            }
        }
        scope 4 {
            debug w => _21;              // in scope 4 at ui/const-generics/defaults/const-default.rs:22:9: 22:10
        }
    }

    bb0: {
        _1 = ConstDefault::new() -> bb1; // scope 0 at ui/const-generics/defaults/const-default.rs:19:13: 19:32
                                         // mir::Constant
                                         // + span: ui/const-generics/defaults/const-default.rs:19:13: 19:30
                                         // + literal: Const { ty: fn() -> ConstDefault {ConstDefault::new}, val: Value(<ZST>) }
    }

    bb1: {
        _4 = ConstDefault::foo(move _5) -> bb2; // scope 1 at ui/const-generics/defaults/const-default.rs:20:16: 20:23
                                         // mir::Constant
                                         // + span: ui/const-generics/defaults/const-default.rs:20:18: 20:21
                                         // + literal: Const { ty: fn(ConstDefault) -> usize {ConstDefault::foo}, val: Value(<ZST>) }
    }

    bb2: {
        _3 = &_4;                        // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _24 = const _;                   // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // + literal: Const { ty: &usize, val: Unevaluated(main, [], Some(promoted[0])) }
        _6 = _24;                        // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _2 = (move _3, move _6);         // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _7 = (_2.0: &usize);             // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _8 = (_2.1: &usize);             // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _11 = (*_7);                     // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
        _12 = const 3_usize;             // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
        _10 = Eq(move _11, move _12);    // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
        _9 = Not(move _10);              // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
        switchInt(move _9) -> [0: bb4, otherwise: bb3]; // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    }

    bb3: {
        _13 = const core::panicking::AssertKind::Eq; // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _15 = const core::panicking::AssertKind::Eq; // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _17 = _7;                        // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _16 = _17;                       // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _19 = _8;                        // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _18 = _19;                       // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _20 = Option::<Arguments<'_>>::None; // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
        _14 = core::panicking::assert_failed::<usize, usize>(move _15, move _16, move _18, move _20); // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:53
                                         // + literal: Const { ty: for<'a, 'b, 'c> fn(core::panicking::AssertKind, &'a usize, &'b usize, Option<Arguments<'c>>) -> ! {core::panicking::assert_failed::<usize, usize>}, val: Value(<ZST>) }
    }

    bb4: {
        _22 = ConstDefault::bar(move _23) -> bb5; // scope 4 at ui/const-generics/defaults/const-default.rs:23:5: 23:12
                                         // mir::Constant
                                         // + span: ui/const-generics/defaults/const-default.rs:23:7: 23:10
                                         // + literal: Const { ty: fn(ConstDefault) {ConstDefault::bar}, val: Value(<ZST>) }
    }

    bb5: {
        return;                          // scope 0 at ui/const-generics/defaults/const-default.rs:24:2: 24:2
    }
}

promoted[0] in main: &usize = {
    let mut _0: &usize;                  // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _1: usize;                   // in scope 0 at ui/const-generics/defaults/const-default.rs:20:25: 20:26

    bb0: {
        _1 = const 3_usize;              // scope 0 at ui/const-generics/defaults/const-default.rs:20:25: 20:26
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    }
}

main::{constant#0}: usize = {
    let mut _0: usize;                   // return place in scope 0 at ui/const-generics/defaults/const-default.rs:22:28: 22:29

    bb0: {
        _0 = const 3_usize;              // scope 0 at ui/const-generics/defaults/const-default.rs:22:28: 22:29
        return;                          // scope 0 at ui/const-generics/defaults/const-default.rs:22:28: 22:29
    }
}
