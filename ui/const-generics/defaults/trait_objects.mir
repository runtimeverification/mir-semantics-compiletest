// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
Trait::{constant#0}: u8 = {
    let mut _0: u8;                      // return place in scope 0 at ui/const-generics/defaults/trait_objects.rs:2:27: 2:29

    bb0: {
        _0 = const 12_u8;                // scope 0 at ui/const-generics/defaults/trait_objects.rs:2:27: 2:29
        return;                          // scope 0 at ui/const-generics/defaults/trait_objects.rs:2:27: 2:29
    }
}

fn Trait::uwu(_1: &Self) -> u8 {
    debug self => _1;                    // in scope 0 at ui/const-generics/defaults/trait_objects.rs:3:12: 3:17
    let mut _0: u8;                      // return place in scope 0 at ui/const-generics/defaults/trait_objects.rs:3:22: 3:24

    bb0: {
        _0 = const N;                    // scope 0 at ui/const-generics/defaults/trait_objects.rs:4:9: 4:10
        return;                          // scope 0 at ui/const-generics/defaults/trait_objects.rs:5:6: 5:6
    }
}

<impl at ui/const-generics/defaults/trait_objects.rs:10:1: 10:23>::{constant#0}: u8 = {
    let mut _0: u8;                      // return place in scope 0 at ui/const-generics/defaults/trait_objects.rs:10:12: 10:14

    bb0: {
        _0 = const 12_u8;                // scope 0 at ui/const-generics/defaults/trait_objects.rs:10:12: 10:14
        return;                          // scope 0 at ui/const-generics/defaults/trait_objects.rs:10:12: 10:14
    }
}

fn <impl at ui/const-generics/defaults/trait_objects.rs:10:1: 10:23>::uwu(_1: &u64) -> u8 {
    debug self => _1;                    // in scope 0 at ui/const-generics/defaults/trait_objects.rs:11:12: 11:17
    let mut _0: u8;                      // return place in scope 0 at ui/const-generics/defaults/trait_objects.rs:11:22: 11:24
    let mut _2: u64;                     // in scope 0 at ui/const-generics/defaults/trait_objects.rs:12:9: 12:14

    bb0: {
        _2 = (*_1);                      // scope 0 at ui/const-generics/defaults/trait_objects.rs:12:9: 12:14
        _0 = move _2 as u8 (IntToInt);   // scope 0 at ui/const-generics/defaults/trait_objects.rs:12:9: 12:20
        return;                          // scope 0 at ui/const-generics/defaults/trait_objects.rs:13:6: 13:6
    }
}

fn foo(_1: &dyn Trait) -> u8 {
    debug arg => _1;                     // in scope 0 at ui/const-generics/defaults/trait_objects.rs:16:8: 16:11
    let mut _0: u8;                      // return place in scope 0 at ui/const-generics/defaults/trait_objects.rs:16:28: 16:30
    let mut _2: &dyn Trait;              // in scope 0 at ui/const-generics/defaults/trait_objects.rs:17:5: 17:14

    bb0: {
        _2 = _1;                         // scope 0 at ui/const-generics/defaults/trait_objects.rs:17:5: 17:14
        _0 = <dyn Trait as Trait>::uwu(move _2) -> bb1; // scope 0 at ui/const-generics/defaults/trait_objects.rs:17:5: 17:14
                                         // mir::Constant
                                         // + span: ui/const-generics/defaults/trait_objects.rs:17:9: 17:12
                                         // + literal: Const { ty: for<'a> fn(&'a dyn Trait) -> u8 {<dyn Trait as Trait>::uwu}, val: Value(<ZST>) }
    }

    bb1: {
        return;                          // scope 0 at ui/const-generics/defaults/trait_objects.rs:18:2: 18:2
    }
}

Traitor::{constant#0}: u8 = {
    let mut _0: u8;                      // return place in scope 0 at ui/const-generics/defaults/trait_objects.rs:20:29: 20:30

    bb0: {
        _0 = const 1_u8;                 // scope 0 at ui/const-generics/defaults/trait_objects.rs:20:29: 20:30
        return;                          // scope 0 at ui/const-generics/defaults/trait_objects.rs:20:29: 20:30
    }
}

Traitor::{constant#1}: u8 = {
    let mut _0: u8;                      // return place in scope 0 at ui/const-generics/defaults/trait_objects.rs:20:46: 20:47

    bb0: {
        _0 = const N;                    // scope 0 at ui/const-generics/defaults/trait_objects.rs:20:46: 20:47
        return;                          // scope 0 at ui/const-generics/defaults/trait_objects.rs:20:46: 20:47
    }
}

fn Traitor::owo(_1: &Self) -> u8 {
    debug self => _1;                    // in scope 0 at ui/const-generics/defaults/trait_objects.rs:21:12: 21:17
    let mut _0: u8;                      // return place in scope 0 at ui/const-generics/defaults/trait_objects.rs:21:22: 21:24

    bb0: {
        _0 = const M;                    // scope 0 at ui/const-generics/defaults/trait_objects.rs:22:9: 22:10
        return;                          // scope 0 at ui/const-generics/defaults/trait_objects.rs:23:6: 23:6
    }
}

<impl at ui/const-generics/defaults/trait_objects.rs:26:1: 26:25>::{constant#0}: u8 = {
    let mut _0: u8;                      // return place in scope 0 at ui/const-generics/defaults/trait_objects.rs:26:14: 26:15

    bb0: {
        _0 = const 2_u8;                 // scope 0 at ui/const-generics/defaults/trait_objects.rs:26:14: 26:15
        return;                          // scope 0 at ui/const-generics/defaults/trait_objects.rs:26:14: 26:15
    }
}

fn <impl at ui/const-generics/defaults/trait_objects.rs:27:1: 27:20>::owo(_1: &u8) -> u8 {
    debug self => _1;                    // in scope 0 at ui/const-generics/defaults/trait_objects.rs:28:12: 28:17
    let mut _0: u8;                      // return place in scope 0 at ui/const-generics/defaults/trait_objects.rs:28:22: 28:24

    bb0: {
        _0 = (*_1);                      // scope 0 at ui/const-generics/defaults/trait_objects.rs:29:9: 29:14
        return;                          // scope 0 at ui/const-generics/defaults/trait_objects.rs:30:6: 30:6
    }
}

fn bar(_1: &dyn Traitor<N>) -> u8 {
    debug arg => _1;                     // in scope 0 at ui/const-generics/defaults/trait_objects.rs:33:21: 33:24
    let mut _0: u8;                      // return place in scope 0 at ui/const-generics/defaults/trait_objects.rs:33:46: 33:48
    let mut _2: &dyn Traitor<N>;         // in scope 0 at ui/const-generics/defaults/trait_objects.rs:34:5: 34:14

    bb0: {
        _2 = _1;                         // scope 0 at ui/const-generics/defaults/trait_objects.rs:34:5: 34:14
        _0 = <dyn Traitor<N> as Traitor<N>>::owo(move _2) -> bb1; // scope 0 at ui/const-generics/defaults/trait_objects.rs:34:5: 34:14
                                         // mir::Constant
                                         // + span: ui/const-generics/defaults/trait_objects.rs:34:9: 34:12
                                         // + literal: Const { ty: for<'a> fn(&'a dyn Traitor<N>) -> u8 {<dyn Traitor<N> as Traitor<N>>::owo}, val: Value(<ZST>) }
    }

    bb1: {
        return;                          // scope 0 at ui/const-generics/defaults/trait_objects.rs:35:2: 35:2
    }
}

bar::{constant#0}: u8 = {
    let mut _0: u8;                      // return place in scope 0 at ui/const-generics/defaults/trait_objects.rs:33:39: 33:40

    bb0: {
        _0 = const N;                    // scope 0 at ui/const-generics/defaults/trait_objects.rs:33:39: 33:40
        return;                          // scope 0 at ui/const-generics/defaults/trait_objects.rs:33:39: 33:40
    }
}

fn main() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/const-generics/defaults/trait_objects.rs:37:11: 37:11
    let mut _1: (&u8, &u8);              // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _2: &u8;                     // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let _3: u8;                          // in scope 0 at ui/const-generics/defaults/trait_objects.rs:38:16: 38:28
    let mut _4: &dyn Trait;              // in scope 0 at ui/const-generics/defaults/trait_objects.rs:38:20: 38:27
    let mut _5: &u32;                    // in scope 0 at ui/const-generics/defaults/trait_objects.rs:38:20: 38:27
    let _6: &u32;                        // in scope 0 at ui/const-generics/defaults/trait_objects.rs:38:20: 38:27
    let mut _7: &u8;                     // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let _8: &u8;                         // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
    let _9: &u8;                         // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
    let mut _10: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    let mut _11: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
    let mut _12: u8;                     // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
    let mut _13: u8;                     // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
    let _15: !;                          // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
    let mut _16: core::panicking::AssertKind; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
    let mut _17: &u8;                    // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let _18: &u8;                        // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let mut _19: &u8;                    // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let _20: &u8;                        // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let mut _21: std::option::Option<std::fmt::Arguments<'_>>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
    let mut _22: (&u8, &u8);             // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _23: &u8;                    // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let _24: u8;                         // in scope 0 at ui/const-generics/defaults/trait_objects.rs:39:16: 39:27
    let mut _25: &dyn Trait;             // in scope 0 at ui/const-generics/defaults/trait_objects.rs:39:20: 39:26
    let mut _26: &u64;                   // in scope 0 at ui/const-generics/defaults/trait_objects.rs:39:20: 39:26
    let _27: &u64;                       // in scope 0 at ui/const-generics/defaults/trait_objects.rs:39:20: 39:26
    let mut _28: &u8;                    // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let _29: &u8;                        // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
    let _30: &u8;                        // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
    let mut _31: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    let mut _32: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
    let mut _33: u8;                     // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
    let mut _34: u8;                     // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
    let _36: !;                          // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
    let mut _37: core::panicking::AssertKind; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
    let mut _38: &u8;                    // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let _39: &u8;                        // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let mut _40: &u8;                    // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let _41: &u8;                        // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let mut _42: std::option::Option<std::fmt::Arguments<'_>>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
    let mut _43: (&u8, &u8);             // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _44: &u8;                    // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let _45: u8;                         // in scope 0 at ui/const-generics/defaults/trait_objects.rs:41:16: 41:26
    let mut _46: &dyn Traitor<2>;        // in scope 0 at ui/const-generics/defaults/trait_objects.rs:41:20: 41:25
    let mut _47: &bool;                  // in scope 0 at ui/const-generics/defaults/trait_objects.rs:41:20: 41:25
    let _48: &bool;                      // in scope 0 at ui/const-generics/defaults/trait_objects.rs:41:20: 41:25
    let mut _49: &u8;                    // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let _50: &u8;                        // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
    let _51: &u8;                        // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
    let mut _52: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    let mut _53: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
    let mut _54: u8;                     // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
    let mut _55: u8;                     // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
    let _57: !;                          // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
    let mut _58: core::panicking::AssertKind; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
    let mut _59: &u8;                    // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let _60: &u8;                        // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let mut _61: &u8;                    // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let _62: &u8;                        // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let mut _63: std::option::Option<std::fmt::Arguments<'_>>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
    let mut _64: (&u8, &u8);             // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _65: &u8;                    // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let _66: u8;                         // in scope 0 at ui/const-generics/defaults/trait_objects.rs:42:16: 42:26
    let mut _67: &dyn Traitor;           // in scope 0 at ui/const-generics/defaults/trait_objects.rs:42:20: 42:25
    let mut _68: &u8;                    // in scope 0 at ui/const-generics/defaults/trait_objects.rs:42:20: 42:25
    let _69: &u8;                        // in scope 0 at ui/const-generics/defaults/trait_objects.rs:42:20: 42:25
    let mut _70: &u8;                    // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let _71: &u8;                        // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
    let _72: &u8;                        // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
    let mut _73: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    let mut _74: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
    let mut _75: u8;                     // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
    let mut _76: u8;                     // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
    let _78: !;                          // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
    let mut _79: core::panicking::AssertKind; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
    let mut _80: &u8;                    // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let _81: &u8;                        // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let mut _82: &u8;                    // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let _83: &u8;                        // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let mut _84: std::option::Option<std::fmt::Arguments<'_>>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
    let mut _85: &u8;                    // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _86: &u8;                    // in scope 0 at ui/const-generics/defaults/trait_objects.rs:42:20: 42:25
    let mut _87: &u8;                    // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _88: &bool;                  // in scope 0 at ui/const-generics/defaults/trait_objects.rs:41:20: 41:25
    let mut _89: &u8;                    // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _90: &u64;                   // in scope 0 at ui/const-generics/defaults/trait_objects.rs:39:20: 39:26
    let mut _91: &u8;                    // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _92: &u32;                   // in scope 0 at ui/const-generics/defaults/trait_objects.rs:38:20: 38:27
    scope 1 {
        debug left_val => _8;            // in scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        debug right_val => _9;           // in scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        let _14: core::panicking::AssertKind; // in scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
        scope 2 {
            debug kind => _14;           // in scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
        }
    }
    scope 3 {
        debug left_val => _29;           // in scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        debug right_val => _30;          // in scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        let _35: core::panicking::AssertKind; // in scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
        scope 4 {
            debug kind => _35;           // in scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
        }
    }
    scope 5 {
        debug left_val => _50;           // in scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        debug right_val => _51;          // in scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        let _56: core::panicking::AssertKind; // in scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
        scope 6 {
            debug kind => _56;           // in scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
        }
    }
    scope 7 {
        debug left_val => _71;           // in scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        debug right_val => _72;          // in scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        let _77: core::panicking::AssertKind; // in scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
        scope 8 {
            debug kind => _77;           // in scope 8 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
        }
    }

    bb0: {
        _92 = const _;                   // scope 0 at ui/const-generics/defaults/trait_objects.rs:38:20: 38:27
                                         // mir::Constant
                                         // + span: ui/const-generics/defaults/trait_objects.rs:38:20: 38:27
                                         // + literal: Const { ty: &u32, val: Unevaluated(main, [], Some(promoted[7])) }
        _6 = _92;                        // scope 0 at ui/const-generics/defaults/trait_objects.rs:38:20: 38:27
        _5 = _6;                         // scope 0 at ui/const-generics/defaults/trait_objects.rs:38:20: 38:27
        _4 = move _5 as &dyn Trait (Pointer(Unsize)); // scope 0 at ui/const-generics/defaults/trait_objects.rs:38:20: 38:27
        _3 = foo(move _4) -> bb1;        // scope 0 at ui/const-generics/defaults/trait_objects.rs:38:16: 38:28
                                         // mir::Constant
                                         // + span: ui/const-generics/defaults/trait_objects.rs:38:16: 38:19
                                         // + literal: Const { ty: for<'a> fn(&'a (dyn Trait + 'a)) -> u8 {foo}, val: Value(<ZST>) }
    }

    bb1: {
        _2 = &_3;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _91 = const _;                   // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // + literal: Const { ty: &u8, val: Unevaluated(main, [], Some(promoted[6])) }
        _7 = _91;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _1 = (move _2, move _7);         // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _8 = (_1.0: &u8);                // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _9 = (_1.1: &u8);                // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _12 = (*_8);                     // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
        _13 = const 12_u8;               // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
        _11 = Eq(move _12, move _13);    // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
        _10 = Not(move _11);             // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
        switchInt(move _10) -> [0: bb3, otherwise: bb2]; // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    }

    bb2: {
        _14 = const core::panicking::AssertKind::Eq; // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _16 = const core::panicking::AssertKind::Eq; // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _18 = _8;                        // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _17 = _18;                       // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _20 = _9;                        // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _19 = _20;                       // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _21 = Option::<Arguments<'_>>::None; // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
        _15 = core::panicking::assert_failed::<u8, u8>(move _16, move _17, move _19, move _21); // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:53
                                         // + literal: Const { ty: for<'a, 'b, 'c> fn(core::panicking::AssertKind, &'a u8, &'b u8, Option<Arguments<'c>>) -> ! {core::panicking::assert_failed::<u8, u8>}, val: Value(<ZST>) }
    }

    bb3: {
        _90 = const _;                   // scope 0 at ui/const-generics/defaults/trait_objects.rs:39:20: 39:26
                                         // mir::Constant
                                         // + span: ui/const-generics/defaults/trait_objects.rs:39:20: 39:26
                                         // + literal: Const { ty: &u64, val: Unevaluated(main, [], Some(promoted[5])) }
        _27 = _90;                       // scope 0 at ui/const-generics/defaults/trait_objects.rs:39:20: 39:26
        _26 = _27;                       // scope 0 at ui/const-generics/defaults/trait_objects.rs:39:20: 39:26
        _25 = move _26 as &dyn Trait (Pointer(Unsize)); // scope 0 at ui/const-generics/defaults/trait_objects.rs:39:20: 39:26
        _24 = foo(move _25) -> bb4;      // scope 0 at ui/const-generics/defaults/trait_objects.rs:39:16: 39:27
                                         // mir::Constant
                                         // + span: ui/const-generics/defaults/trait_objects.rs:39:16: 39:19
                                         // + literal: Const { ty: for<'a> fn(&'a (dyn Trait + 'a)) -> u8 {foo}, val: Value(<ZST>) }
    }

    bb4: {
        _23 = &_24;                      // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _89 = const _;                   // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // + literal: Const { ty: &u8, val: Unevaluated(main, [], Some(promoted[4])) }
        _28 = _89;                       // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _22 = (move _23, move _28);      // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _29 = (_22.0: &u8);              // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _30 = (_22.1: &u8);              // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _33 = (*_29);                    // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
        _34 = const 3_u8;                // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
        _32 = Eq(move _33, move _34);    // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
        _31 = Not(move _32);             // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
        switchInt(move _31) -> [0: bb6, otherwise: bb5]; // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    }

    bb5: {
        _35 = const core::panicking::AssertKind::Eq; // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _37 = const core::panicking::AssertKind::Eq; // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _39 = _29;                       // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _38 = _39;                       // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _41 = _30;                       // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _40 = _41;                       // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _42 = Option::<Arguments<'_>>::None; // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
        _36 = core::panicking::assert_failed::<u8, u8>(move _37, move _38, move _40, move _42); // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:53
                                         // + literal: Const { ty: for<'a, 'b, 'c> fn(core::panicking::AssertKind, &'a u8, &'b u8, Option<Arguments<'c>>) -> ! {core::panicking::assert_failed::<u8, u8>}, val: Value(<ZST>) }
    }

    bb6: {
        _88 = const _;                   // scope 0 at ui/const-generics/defaults/trait_objects.rs:41:20: 41:25
                                         // mir::Constant
                                         // + span: ui/const-generics/defaults/trait_objects.rs:41:20: 41:25
                                         // + literal: Const { ty: &bool, val: Unevaluated(main, [], Some(promoted[3])) }
        _48 = _88;                       // scope 0 at ui/const-generics/defaults/trait_objects.rs:41:20: 41:25
        _47 = _48;                       // scope 0 at ui/const-generics/defaults/trait_objects.rs:41:20: 41:25
        _46 = move _47 as &dyn Traitor<2> (Pointer(Unsize)); // scope 0 at ui/const-generics/defaults/trait_objects.rs:41:20: 41:25
        _45 = bar::<2>(move _46) -> bb7; // scope 0 at ui/const-generics/defaults/trait_objects.rs:41:16: 41:26
                                         // mir::Constant
                                         // + span: ui/const-generics/defaults/trait_objects.rs:41:16: 41:19
                                         // + literal: Const { ty: for<'a> fn(&'a (dyn Traitor<2> + 'a)) -> u8 {bar::<2>}, val: Value(<ZST>) }
    }

    bb7: {
        _44 = &_45;                      // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _87 = const _;                   // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // + literal: Const { ty: &u8, val: Unevaluated(main, [], Some(promoted[2])) }
        _49 = _87;                       // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _43 = (move _44, move _49);      // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _50 = (_43.0: &u8);              // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _51 = (_43.1: &u8);              // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _54 = (*_50);                    // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
        _55 = const 2_u8;                // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
        _53 = Eq(move _54, move _55);    // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
        _52 = Not(move _53);             // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
        switchInt(move _52) -> [0: bb9, otherwise: bb8]; // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    }

    bb8: {
        _56 = const core::panicking::AssertKind::Eq; // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _58 = const core::panicking::AssertKind::Eq; // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _60 = _50;                       // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _59 = _60;                       // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _62 = _51;                       // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _61 = _62;                       // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _63 = Option::<Arguments<'_>>::None; // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
        _57 = core::panicking::assert_failed::<u8, u8>(move _58, move _59, move _61, move _63); // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:53
                                         // + literal: Const { ty: for<'a, 'b, 'c> fn(core::panicking::AssertKind, &'a u8, &'b u8, Option<Arguments<'c>>) -> ! {core::panicking::assert_failed::<u8, u8>}, val: Value(<ZST>) }
    }

    bb9: {
        _86 = const _;                   // scope 0 at ui/const-generics/defaults/trait_objects.rs:42:20: 42:25
                                         // mir::Constant
                                         // + span: ui/const-generics/defaults/trait_objects.rs:42:20: 42:25
                                         // + literal: Const { ty: &u8, val: Unevaluated(main, [], Some(promoted[1])) }
        _69 = _86;                       // scope 0 at ui/const-generics/defaults/trait_objects.rs:42:20: 42:25
        _68 = _69;                       // scope 0 at ui/const-generics/defaults/trait_objects.rs:42:20: 42:25
        _67 = move _68 as &dyn Traitor (Pointer(Unsize)); // scope 0 at ui/const-generics/defaults/trait_objects.rs:42:20: 42:25
        _66 = bar::<1>(move _67) -> bb10; // scope 0 at ui/const-generics/defaults/trait_objects.rs:42:16: 42:26
                                         // mir::Constant
                                         // + span: ui/const-generics/defaults/trait_objects.rs:42:16: 42:19
                                         // + literal: Const { ty: for<'a> fn(&'a (dyn Traitor + 'a)) -> u8 {bar::<1>}, val: Value(<ZST>) }
    }

    bb10: {
        _65 = &_66;                      // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _85 = const _;                   // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // + literal: Const { ty: &u8, val: Unevaluated(main, [], Some(promoted[0])) }
        _70 = _85;                       // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _64 = (move _65, move _70);      // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _71 = (_64.0: &u8);              // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _72 = (_64.1: &u8);              // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _75 = (*_71);                    // scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
        _76 = const 1_u8;                // scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
        _74 = Eq(move _75, move _76);    // scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
        _73 = Not(move _74);             // scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
        switchInt(move _73) -> [0: bb12, otherwise: bb11]; // scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    }

    bb11: {
        _77 = const core::panicking::AssertKind::Eq; // scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _79 = const core::panicking::AssertKind::Eq; // scope 8 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _81 = _71;                       // scope 8 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _80 = _81;                       // scope 8 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _83 = _72;                       // scope 8 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _82 = _83;                       // scope 8 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _84 = Option::<Arguments<'_>>::None; // scope 8 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
        _78 = core::panicking::assert_failed::<u8, u8>(move _79, move _80, move _82, move _84); // scope 8 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:53
                                         // + literal: Const { ty: for<'a, 'b, 'c> fn(core::panicking::AssertKind, &'a u8, &'b u8, Option<Arguments<'c>>) -> ! {core::panicking::assert_failed::<u8, u8>}, val: Value(<ZST>) }
    }

    bb12: {
        return;                          // scope 0 at ui/const-generics/defaults/trait_objects.rs:43:2: 43:2
    }
}

promoted[0] in main: &u8 = {
    let mut _0: &u8;                     // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _1: u8;                      // in scope 0 at ui/const-generics/defaults/trait_objects.rs:42:28: 42:29

    bb0: {
        _1 = const 1_u8;                 // scope 0 at ui/const-generics/defaults/trait_objects.rs:42:28: 42:29
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    }
}

promoted[1] in main: &u8 = {
    let mut _0: &u8;                     // return place in scope 0 at ui/const-generics/defaults/trait_objects.rs:42:20: 42:25
    let mut _1: u8;                      // in scope 0 at ui/const-generics/defaults/trait_objects.rs:42:21: 42:25

    bb0: {
        _1 = const 1_u8;                 // scope 0 at ui/const-generics/defaults/trait_objects.rs:42:21: 42:25
        _0 = &_1;                        // scope 0 at ui/const-generics/defaults/trait_objects.rs:42:20: 42:25
        return;                          // scope 0 at ui/const-generics/defaults/trait_objects.rs:42:20: 42:25
    }
}

promoted[2] in main: &u8 = {
    let mut _0: &u8;                     // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _1: u8;                      // in scope 0 at ui/const-generics/defaults/trait_objects.rs:41:28: 41:29

    bb0: {
        _1 = const 2_u8;                 // scope 0 at ui/const-generics/defaults/trait_objects.rs:41:28: 41:29
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    }
}

promoted[3] in main: &bool = {
    let mut _0: &bool;                   // return place in scope 0 at ui/const-generics/defaults/trait_objects.rs:41:20: 41:25
    let mut _1: bool;                    // in scope 0 at ui/const-generics/defaults/trait_objects.rs:41:21: 41:25

    bb0: {
        _1 = const true;                 // scope 0 at ui/const-generics/defaults/trait_objects.rs:41:21: 41:25
        _0 = &_1;                        // scope 0 at ui/const-generics/defaults/trait_objects.rs:41:20: 41:25
        return;                          // scope 0 at ui/const-generics/defaults/trait_objects.rs:41:20: 41:25
    }
}

promoted[4] in main: &u8 = {
    let mut _0: &u8;                     // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _1: u8;                      // in scope 0 at ui/const-generics/defaults/trait_objects.rs:39:29: 39:30

    bb0: {
        _1 = const 3_u8;                 // scope 0 at ui/const-generics/defaults/trait_objects.rs:39:29: 39:30
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    }
}

promoted[5] in main: &u64 = {
    let mut _0: &u64;                    // return place in scope 0 at ui/const-generics/defaults/trait_objects.rs:39:20: 39:26
    let mut _1: u64;                     // in scope 0 at ui/const-generics/defaults/trait_objects.rs:39:21: 39:26

    bb0: {
        _1 = const 3_u64;                // scope 0 at ui/const-generics/defaults/trait_objects.rs:39:21: 39:26
        _0 = &_1;                        // scope 0 at ui/const-generics/defaults/trait_objects.rs:39:20: 39:26
        return;                          // scope 0 at ui/const-generics/defaults/trait_objects.rs:39:20: 39:26
    }
}

promoted[6] in main: &u8 = {
    let mut _0: &u8;                     // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _1: u8;                      // in scope 0 at ui/const-generics/defaults/trait_objects.rs:38:30: 38:32

    bb0: {
        _1 = const 12_u8;                // scope 0 at ui/const-generics/defaults/trait_objects.rs:38:30: 38:32
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    }
}

promoted[7] in main: &u32 = {
    let mut _0: &u32;                    // return place in scope 0 at ui/const-generics/defaults/trait_objects.rs:38:20: 38:27
    let mut _1: u32;                     // in scope 0 at ui/const-generics/defaults/trait_objects.rs:38:21: 38:27

    bb0: {
        _1 = const 10_u32;               // scope 0 at ui/const-generics/defaults/trait_objects.rs:38:21: 38:27
        _0 = &_1;                        // scope 0 at ui/const-generics/defaults/trait_objects.rs:38:20: 38:27
        return;                          // scope 0 at ui/const-generics/defaults/trait_objects.rs:38:20: 38:27
    }
}
