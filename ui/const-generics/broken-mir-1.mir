// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
<impl at ui/const-generics/broken-mir-1.rs:7:1: 7:39>::{constant#0}: usize = {
    let mut _0: usize;                   // return place in scope 0 at ui/const-generics/broken-mir-1.rs:7:37: 7:38

    bb0: {
        _0 = const N;                    // scope 0 at ui/const-generics/broken-mir-1.rs:7:37: 7:38
        return;                          // scope 0 at ui/const-generics/broken-mir-1.rs:7:37: 7:38
    }
}

fn <impl at ui/const-generics/broken-mir-1.rs:7:1: 7:39>::foo(_1: &[T; N]) -> () {
    debug self => _1;                    // in scope 0 at ui/const-generics/broken-mir-1.rs:8:12: 8:17
    let mut _0: ();                      // return place in scope 0 at ui/const-generics/broken-mir-1.rs:8:19: 8:19
    scope 1 {
    }

    bb0: {
        return;                          // scope 0 at ui/const-generics/broken-mir-1.rs:10:6: 10:6
    }
}

fn main() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/const-generics/broken-mir-1.rs:13:11: 13:11

    bb0: {
        return;                          // scope 0 at ui/const-generics/broken-mir-1.rs:13:13: 13:13
    }
}
