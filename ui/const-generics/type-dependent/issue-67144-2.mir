// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
fn <impl at ui/const-generics/type-dependent/issue-67144-2.rs:6:1: 6:7>::inner() -> A<N> {
    let mut _0: A<N>;                    // return place in scope 0 at ui/const-generics/type-dependent/issue-67144-2.rs:7:35: 7:39

    bb0: {
        _0 = outer::<N>() -> bb1;        // scope 0 at ui/const-generics/type-dependent/issue-67144-2.rs:8:9: 8:21
                                         // mir::Constant
                                         // + span: ui/const-generics/type-dependent/issue-67144-2.rs:8:9: 8:19
                                         // + literal: Const { ty: fn() -> A<N> {outer::<N>}, val: Value(<ZST>) }
    }

    bb1: {
        return;                          // scope 0 at ui/const-generics/type-dependent/issue-67144-2.rs:9:6: 9:6
    }
}

<impl at ui/const-generics/type-dependent/issue-67144-2.rs:6:1: 6:7>::inner::{constant#1}: usize = {
    let mut _0: usize;                   // return place in scope 0 at ui/const-generics/type-dependent/issue-67144-2.rs:7:37: 7:38

    bb0: {
        _0 = const N;                    // scope 0 at ui/const-generics/type-dependent/issue-67144-2.rs:7:37: 7:38
        return;                          // scope 0 at ui/const-generics/type-dependent/issue-67144-2.rs:7:37: 7:38
    }
}

<impl at ui/const-generics/type-dependent/issue-67144-2.rs:6:1: 6:7>::inner::{constant#0}: usize = {
    let mut _0: usize;                   // return place in scope 0 at ui/const-generics/type-dependent/issue-67144-2.rs:8:17: 8:18

    bb0: {
        _0 = const N;                    // scope 0 at ui/const-generics/type-dependent/issue-67144-2.rs:8:17: 8:18
        return;                          // scope 0 at ui/const-generics/type-dependent/issue-67144-2.rs:8:17: 8:18
    }
}

fn outer() -> A<N> {
    let mut _0: A<N>;                    // return place in scope 0 at ui/const-generics/type-dependent/issue-67144-2.rs:12:31: 12:35

    bb0: {
        return;                          // scope 0 at ui/const-generics/type-dependent/issue-67144-2.rs:14:2: 14:2
    }
}

outer::{constant#0}: usize = {
    let mut _0: usize;                   // return place in scope 0 at ui/const-generics/type-dependent/issue-67144-2.rs:12:33: 12:34

    bb0: {
        _0 = const N;                    // scope 0 at ui/const-generics/type-dependent/issue-67144-2.rs:12:33: 12:34
        return;                          // scope 0 at ui/const-generics/type-dependent/issue-67144-2.rs:12:33: 12:34
    }
}

fn main() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/const-generics/type-dependent/issue-67144-2.rs:16:11: 16:11
    let _1: A<3>;                        // in scope 0 at ui/const-generics/type-dependent/issue-67144-2.rs:17:9: 17:10
    scope 1 {
        debug i => _1;                   // in scope 1 at ui/const-generics/type-dependent/issue-67144-2.rs:17:9: 17:10
        let _2: A<3>;                    // in scope 1 at ui/const-generics/type-dependent/issue-67144-2.rs:18:9: 18:10
        scope 2 {
            debug o => _2;               // in scope 2 at ui/const-generics/type-dependent/issue-67144-2.rs:18:9: 18:10
        }
    }

    bb0: {
        _1 = outer::<3>() -> bb1;        // scope 0 at ui/const-generics/type-dependent/issue-67144-2.rs:17:24: 17:41
                                         // mir::Constant
                                         // + span: ui/const-generics/type-dependent/issue-67144-2.rs:17:24: 17:39
                                         // + literal: Const { ty: fn() -> A<3> {outer::<3>}, val: Value(<ZST>) }
    }

    bb1: {
        _2 = X::inner::<3>() -> bb2;     // scope 1 at ui/const-generics/type-dependent/issue-67144-2.rs:18:24: 18:44
                                         // mir::Constant
                                         // + span: ui/const-generics/type-dependent/issue-67144-2.rs:18:24: 18:42
                                         // + literal: Const { ty: fn() -> A<3> {X::inner::<3>}, val: Value(<ZST>) }
    }

    bb2: {
        return;                          // scope 0 at ui/const-generics/type-dependent/issue-67144-2.rs:19:2: 19:2
    }
}

main::{constant#1}: usize = {
    let mut _0: usize;                   // return place in scope 0 at ui/const-generics/type-dependent/issue-67144-2.rs:17:32: 17:38

    bb0: {
        _0 = const 3_usize;              // scope 0 at ui/const-generics/type-dependent/issue-67144-2.rs:17:32: 17:38
        return;                          // scope 0 at ui/const-generics/type-dependent/issue-67144-2.rs:17:32: 17:38
    }
}

main::{constant#0}: usize = {
    let mut _0: usize;                   // return place in scope 0 at ui/const-generics/type-dependent/issue-67144-2.rs:17:14: 17:20

    bb0: {
        _0 = const 3_usize;              // scope 0 at ui/const-generics/type-dependent/issue-67144-2.rs:17:14: 17:20
        return;                          // scope 0 at ui/const-generics/type-dependent/issue-67144-2.rs:17:14: 17:20
    }
}

main::{constant#3}: usize = {
    let mut _0: usize;                   // return place in scope 0 at ui/const-generics/type-dependent/issue-67144-2.rs:18:35: 18:41

    bb0: {
        _0 = const 3_usize;              // scope 0 at ui/const-generics/type-dependent/issue-67144-2.rs:18:35: 18:41
        return;                          // scope 0 at ui/const-generics/type-dependent/issue-67144-2.rs:18:35: 18:41
    }
}

main::{constant#2}: usize = {
    let mut _0: usize;                   // return place in scope 0 at ui/const-generics/type-dependent/issue-67144-2.rs:18:14: 18:20

    bb0: {
        _0 = const 3_usize;              // scope 0 at ui/const-generics/type-dependent/issue-67144-2.rs:18:14: 18:20
        return;                          // scope 0 at ui/const-generics/type-dependent/issue-67144-2.rs:18:14: 18:20
    }
}
