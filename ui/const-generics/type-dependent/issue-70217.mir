// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
<impl at ui/const-generics/type-dependent/issue-70217.rs:5:1: 5:31>::{constant#0}: usize = {
    let mut _0: usize;                   // return place in scope 0 at ui/const-generics/type-dependent/issue-70217.rs:5:29: 5:30

    bb0: {
        _0 = const N;                    // scope 0 at ui/const-generics/type-dependent/issue-70217.rs:5:29: 5:30
        return;                          // scope 0 at ui/const-generics/type-dependent/issue-70217.rs:5:29: 5:30
    }
}

fn <impl at ui/const-generics/type-dependent/issue-70217.rs:5:1: 5:31>::method(_1: &Struct<N>) -> () {
    debug self => _1;                    // in scope 0 at ui/const-generics/type-dependent/issue-70217.rs:6:31: 6:36
    let mut _0: ();                      // return place in scope 0 at ui/const-generics/type-dependent/issue-70217.rs:6:38: 6:38

    bb0: {
        return;                          // scope 0 at ui/const-generics/type-dependent/issue-70217.rs:6:40: 6:40
    }
}

fn test(_1: Struct<N>) -> () {
    debug x => _1;                       // in scope 0 at ui/const-generics/type-dependent/issue-70217.rs:9:41: 9:42
    let mut _0: ();                      // return place in scope 0 at ui/const-generics/type-dependent/issue-70217.rs:9:55: 9:55
    let _2: ();                          // in scope 0 at ui/const-generics/type-dependent/issue-70217.rs:10:5: 10:33
    let mut _3: &Struct<N>;              // in scope 0 at ui/const-generics/type-dependent/issue-70217.rs:10:30: 10:32
    let _4: &Struct<N>;                  // in scope 0 at ui/const-generics/type-dependent/issue-70217.rs:10:30: 10:32
    let _5: ();                          // in scope 0 at ui/const-generics/type-dependent/issue-70217.rs:11:5: 11:20
    let mut _6: &Struct<N>;              // in scope 0 at ui/const-generics/type-dependent/issue-70217.rs:11:5: 11:20

    bb0: {
        _4 = &_1;                        // scope 0 at ui/const-generics/type-dependent/issue-70217.rs:10:30: 10:32
        _3 = _4;                         // scope 0 at ui/const-generics/type-dependent/issue-70217.rs:10:30: 10:32
        _2 = Struct::<N>::method::<M>(move _3) -> bb1; // scope 0 at ui/const-generics/type-dependent/issue-70217.rs:10:5: 10:33
                                         // mir::Constant
                                         // + span: ui/const-generics/type-dependent/issue-70217.rs:10:5: 10:29
                                         // + literal: Const { ty: for<'a> fn(&'a Struct<N>) {Struct::<N>::method::<M>}, val: Value(<ZST>) }
    }

    bb1: {
        _6 = &_1;                        // scope 0 at ui/const-generics/type-dependent/issue-70217.rs:11:5: 11:20
        _5 = Struct::<N>::method::<N>(move _6) -> bb2; // scope 0 at ui/const-generics/type-dependent/issue-70217.rs:11:5: 11:20
                                         // mir::Constant
                                         // + span: ui/const-generics/type-dependent/issue-70217.rs:11:7: 11:13
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: for<'a> fn(&'a Struct<N>) {Struct::<N>::method::<N>}, val: Value(<ZST>) }
    }

    bb2: {
        return;                          // scope 0 at ui/const-generics/type-dependent/issue-70217.rs:12:2: 12:2
    }
}

test::{constant#3}: usize = {
    let mut _0: usize;                   // return place in scope 0 at ui/const-generics/type-dependent/issue-70217.rs:9:51: 9:52

    bb0: {
        _0 = const N;                    // scope 0 at ui/const-generics/type-dependent/issue-70217.rs:9:51: 9:52
        return;                          // scope 0 at ui/const-generics/type-dependent/issue-70217.rs:9:51: 9:52
    }
}

test::{constant#0}: usize = {
    let mut _0: usize;                   // return place in scope 0 at ui/const-generics/type-dependent/issue-70217.rs:10:14: 10:15

    bb0: {
        _0 = const N;                    // scope 0 at ui/const-generics/type-dependent/issue-70217.rs:10:14: 10:15
        return;                          // scope 0 at ui/const-generics/type-dependent/issue-70217.rs:10:14: 10:15
    }
}

test::{constant#1}: usize = {
    let mut _0: usize;                   // return place in scope 0 at ui/const-generics/type-dependent/issue-70217.rs:10:27: 10:28

    bb0: {
        _0 = const M;                    // scope 0 at ui/const-generics/type-dependent/issue-70217.rs:10:27: 10:28
        return;                          // scope 0 at ui/const-generics/type-dependent/issue-70217.rs:10:27: 10:28
    }
}

test::{constant#2}: usize = {
    let mut _0: usize;                   // return place in scope 0 at ui/const-generics/type-dependent/issue-70217.rs:11:16: 11:17

    bb0: {
        _0 = const N;                    // scope 0 at ui/const-generics/type-dependent/issue-70217.rs:11:16: 11:17
        return;                          // scope 0 at ui/const-generics/type-dependent/issue-70217.rs:11:16: 11:17
    }
}

fn main() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/const-generics/type-dependent/issue-70217.rs:14:11: 14:11

    bb0: {
        return;                          // scope 0 at ui/const-generics/type-dependent/issue-70217.rs:14:13: 14:13
    }
}
