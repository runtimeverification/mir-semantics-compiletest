// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
fn <impl at ui/autoref-autoderef/autoref-intermediate-types-issue-3585.rs:7:1: 7:27>::foo(_1: &Box<T>) -> String {
    debug self => _1;                    // in scope 0 at ui/autoref-autoderef/autoref-intermediate-types-issue-3585.rs:8:12: 8:17
    let mut _0: std::string::String;     // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:13: 118:16
    let mut _2: std::fmt::Arguments<'_>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
    let mut _3: &[&str];                 // in scope 0 at ui/autoref-autoderef/autoref-intermediate-types-issue-3585.rs:9:17: 9:25
    let mut _4: &[&str; 1];              // in scope 0 at ui/autoref-autoderef/autoref-intermediate-types-issue-3585.rs:9:17: 9:25
    let _5: &[&str; 1];                  // in scope 0 at ui/autoref-autoderef/autoref-intermediate-types-issue-3585.rs:9:17: 9:25
    let mut _6: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
    let mut _7: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
    let _8: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
    let _9: [core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
    let mut _10: core::fmt::ArgumentV1<'_>; // in scope 0 at ui/autoref-autoderef/autoref-intermediate-types-issue-3585.rs:9:27: 9:41
    let mut _11: &std::string::String;   // in scope 0 at ui/autoref-autoderef/autoref-intermediate-types-issue-3585.rs:9:27: 9:41
    let _12: &std::string::String;       // in scope 0 at ui/autoref-autoderef/autoref-intermediate-types-issue-3585.rs:9:27: 9:41
    let _13: std::string::String;        // in scope 0 at ui/autoref-autoderef/autoref-intermediate-types-issue-3585.rs:9:27: 9:41
    let mut _14: &T;                     // in scope 0 at ui/autoref-autoderef/autoref-intermediate-types-issue-3585.rs:9:27: 9:41
    let mut _15: &[&str; 1];             // in scope 0 at ui/autoref-autoderef/autoref-intermediate-types-issue-3585.rs:9:17: 9:25
    let mut _16: std::boxed::Box<T>;     // in scope 0 at ui/autoref-autoderef/autoref-intermediate-types-issue-3585.rs:8:12: 8:17
    let mut _17: *const T;               // in scope 0 at ui/autoref-autoderef/autoref-intermediate-types-issue-3585.rs:8:12: 8:17
    scope 1 {
        debug res => _0;                 // in scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:13: 118:16
    }

    bb0: {
        _15 = const _;                   // scope 0 at ui/autoref-autoderef/autoref-intermediate-types-issue-3585.rs:9:17: 9:25
                                         // mir::Constant
                                         // + span: ui/autoref-autoderef/autoref-intermediate-types-issue-3585.rs:9:17: 9:25
                                         // + literal: Const { ty: &[&str; 1], val: Unevaluated(<Box<T> as Foo>::foo, [T], Some(promoted[0])) }
        _5 = _15;                        // scope 0 at ui/autoref-autoderef/autoref-intermediate-types-issue-3585.rs:9:17: 9:25
        _4 = _5;                         // scope 0 at ui/autoref-autoderef/autoref-intermediate-types-issue-3585.rs:9:17: 9:25
        _3 = move _4 as &[&str] (Pointer(Unsize)); // scope 0 at ui/autoref-autoderef/autoref-intermediate-types-issue-3585.rs:9:17: 9:25
        _16 = deref_copy (*_1);          // scope 0 at ui/autoref-autoderef/autoref-intermediate-types-issue-3585.rs:9:27: 9:41
        _17 = (((_16.0: std::ptr::Unique<T>).0: std::ptr::NonNull<T>).0: *const T); // scope 0 at ui/autoref-autoderef/autoref-intermediate-types-issue-3585.rs:9:27: 9:41
        _14 = &(*_17);                   // scope 0 at ui/autoref-autoderef/autoref-intermediate-types-issue-3585.rs:9:27: 9:41
        _13 = <T as Foo>::foo(move _14) -> bb1; // scope 0 at ui/autoref-autoderef/autoref-intermediate-types-issue-3585.rs:9:27: 9:41
                                         // mir::Constant
                                         // + span: ui/autoref-autoderef/autoref-intermediate-types-issue-3585.rs:9:36: 9:39
                                         // + literal: Const { ty: for<'a> fn(&'a T) -> String {<T as Foo>::foo}, val: Value(<ZST>) }
    }

    bb1: {
        _12 = &_13;                      // scope 0 at ui/autoref-autoderef/autoref-intermediate-types-issue-3585.rs:9:27: 9:41
        _11 = _12;                       // scope 0 at ui/autoref-autoderef/autoref-intermediate-types-issue-3585.rs:9:27: 9:41
        _10 = core::fmt::ArgumentV1::<'_>::new_display::<String>(move _11) -> [return: bb2, unwind: bb7]; // scope 0 at ui/autoref-autoderef/autoref-intermediate-types-issue-3585.rs:9:27: 9:41
                                         // mir::Constant
                                         // + span: ui/autoref-autoderef/autoref-intermediate-types-issue-3585.rs:9:27: 9:41
                                         // + user_ty: UserType(1)
                                         // + literal: Const { ty: for<'b> fn(&'b String) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_display::<String>}, val: Value(<ZST>) }
    }

    bb2: {
        _9 = [move _10];                 // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
        _8 = &_9;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
        _7 = _8;                         // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
        _6 = move _7 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
        _2 = Arguments::<'_>::new_v1(move _3, move _6) -> [return: bb3, unwind: bb7]; // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb3: {
        _0 = format(move _2) -> [return: bb4, unwind: bb7]; // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:19: 118:80
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:19: 118:38
                                         // + literal: Const { ty: for<'a> fn(Arguments<'a>) -> String {format}, val: Value(<ZST>) }
    }

    bb4: {
        drop(_13) -> [return: bb5, unwind: bb6]; // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:80: 118:81
    }

    bb5: {
        return;                          // scope 0 at ui/autoref-autoderef/autoref-intermediate-types-issue-3585.rs:10:6: 10:6
    }

    bb6 (cleanup): {
        drop(_0) -> bb8;                 // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:120:5: 120:6
    }

    bb7 (cleanup): {
        drop(_13) -> bb8;                // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:80: 118:81
    }

    bb8 (cleanup): {
        resume;                          // scope 0 at ui/autoref-autoderef/autoref-intermediate-types-issue-3585.rs:8:5: 10:6
    }
}

promoted[0] in <impl at ui/autoref-autoderef/autoref-intermediate-types-issue-3585.rs:7:1: 7:27>::foo: &[&str; 1] = {
    let mut _0: &[&str; 1];              // return place in scope 0 at ui/autoref-autoderef/autoref-intermediate-types-issue-3585.rs:9:17: 9:25
    let mut _1: [&str; 1];               // in scope 0 at ui/autoref-autoderef/autoref-intermediate-types-issue-3585.rs:9:17: 9:25

    bb0: {
        _1 = [const "box "];             // scope 0 at ui/autoref-autoderef/autoref-intermediate-types-issue-3585.rs:9:17: 9:25
                                         // mir::Constant
                                         // + span: ui/autoref-autoderef/autoref-intermediate-types-issue-3585.rs:9:17: 9:25
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at ui/autoref-autoderef/autoref-intermediate-types-issue-3585.rs:9:17: 9:25
        return;                          // scope 0 at ui/autoref-autoderef/autoref-intermediate-types-issue-3585.rs:9:17: 9:25
    }
}

fn <impl at ui/autoref-autoderef/autoref-intermediate-types-issue-3585.rs:13:1: 13:19>::foo(_1: &usize) -> String {
    debug self => _1;                    // in scope 0 at ui/autoref-autoderef/autoref-intermediate-types-issue-3585.rs:14:12: 14:17
    let mut _0: std::string::String;     // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:13: 118:16
    let mut _2: std::fmt::Arguments<'_>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
    let mut _3: &[&str];                 // in scope 0 at ui/autoref-autoderef/autoref-intermediate-types-issue-3585.rs:15:17: 15:21
    let mut _4: &[&str; 1];              // in scope 0 at ui/autoref-autoderef/autoref-intermediate-types-issue-3585.rs:15:17: 15:21
    let _5: &[&str; 1];                  // in scope 0 at ui/autoref-autoderef/autoref-intermediate-types-issue-3585.rs:15:17: 15:21
    let mut _6: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
    let mut _7: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
    let _8: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
    let _9: [core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
    let mut _10: core::fmt::ArgumentV1<'_>; // in scope 0 at ui/autoref-autoderef/autoref-intermediate-types-issue-3585.rs:15:23: 15:28
    let mut _11: &usize;                 // in scope 0 at ui/autoref-autoderef/autoref-intermediate-types-issue-3585.rs:15:23: 15:28
    let _12: &usize;                     // in scope 0 at ui/autoref-autoderef/autoref-intermediate-types-issue-3585.rs:15:23: 15:28
    let mut _13: &[&str; 1];             // in scope 0 at ui/autoref-autoderef/autoref-intermediate-types-issue-3585.rs:15:17: 15:21
    scope 1 {
        debug res => _0;                 // in scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:13: 118:16
    }

    bb0: {
        _13 = const _;                   // scope 0 at ui/autoref-autoderef/autoref-intermediate-types-issue-3585.rs:15:17: 15:21
                                         // mir::Constant
                                         // + span: ui/autoref-autoderef/autoref-intermediate-types-issue-3585.rs:15:17: 15:21
                                         // + literal: Const { ty: &[&str; 1], val: Unevaluated(<usize as Foo>::foo, [], Some(promoted[0])) }
        _5 = _13;                        // scope 0 at ui/autoref-autoderef/autoref-intermediate-types-issue-3585.rs:15:17: 15:21
        _4 = _5;                         // scope 0 at ui/autoref-autoderef/autoref-intermediate-types-issue-3585.rs:15:17: 15:21
        _3 = move _4 as &[&str] (Pointer(Unsize)); // scope 0 at ui/autoref-autoderef/autoref-intermediate-types-issue-3585.rs:15:17: 15:21
        _12 = _1;                        // scope 0 at ui/autoref-autoderef/autoref-intermediate-types-issue-3585.rs:15:23: 15:28
        _11 = _12;                       // scope 0 at ui/autoref-autoderef/autoref-intermediate-types-issue-3585.rs:15:23: 15:28
        _10 = core::fmt::ArgumentV1::<'_>::new_display::<usize>(move _11) -> bb1; // scope 0 at ui/autoref-autoderef/autoref-intermediate-types-issue-3585.rs:15:23: 15:28
                                         // mir::Constant
                                         // + span: ui/autoref-autoderef/autoref-intermediate-types-issue-3585.rs:15:23: 15:28
                                         // + user_ty: UserType(1)
                                         // + literal: Const { ty: for<'b> fn(&'b usize) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_display::<usize>}, val: Value(<ZST>) }
    }

    bb1: {
        _9 = [move _10];                 // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
        _8 = &_9;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
        _7 = _8;                         // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
        _6 = move _7 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
        _2 = Arguments::<'_>::new_v1(move _3, move _6) -> bb2; // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb2: {
        _0 = format(move _2) -> bb3;     // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:19: 118:80
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:19: 118:38
                                         // + literal: Const { ty: for<'a> fn(Arguments<'a>) -> String {format}, val: Value(<ZST>) }
    }

    bb3: {
        return;                          // scope 0 at ui/autoref-autoderef/autoref-intermediate-types-issue-3585.rs:16:6: 16:6
    }
}

promoted[0] in <impl at ui/autoref-autoderef/autoref-intermediate-types-issue-3585.rs:13:1: 13:19>::foo: &[&str; 1] = {
    let mut _0: &[&str; 1];              // return place in scope 0 at ui/autoref-autoderef/autoref-intermediate-types-issue-3585.rs:15:17: 15:21
    let mut _1: [&str; 1];               // in scope 0 at ui/autoref-autoderef/autoref-intermediate-types-issue-3585.rs:15:17: 15:21

    bb0: {
        _1 = [const ""];                 // scope 0 at ui/autoref-autoderef/autoref-intermediate-types-issue-3585.rs:15:17: 15:21
                                         // mir::Constant
                                         // + span: ui/autoref-autoderef/autoref-intermediate-types-issue-3585.rs:15:17: 15:21
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at ui/autoref-autoderef/autoref-intermediate-types-issue-3585.rs:15:17: 15:21
        return;                          // scope 0 at ui/autoref-autoderef/autoref-intermediate-types-issue-3585.rs:15:17: 15:21
    }
}

fn main() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/autoref-autoderef/autoref-intermediate-types-issue-3585.rs:19:15: 19:15
    let _1: std::boxed::Box<usize>;      // in scope 0 at ui/autoref-autoderef/autoref-intermediate-types-issue-3585.rs:20:9: 20:10
    let mut _2: (&std::string::String, &std::string::String); // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _3: &std::string::String;    // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let _4: std::string::String;         // in scope 0 at ui/autoref-autoderef/autoref-intermediate-types-issue-3585.rs:21:16: 21:23
    let mut _5: &std::boxed::Box<usize>; // in scope 0 at ui/autoref-autoderef/autoref-intermediate-types-issue-3585.rs:21:16: 21:23
    let mut _6: &std::string::String;    // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let _7: std::string::String;         // in scope 0 at ui/autoref-autoderef/autoref-intermediate-types-issue-3585.rs:21:25: 21:44
    let mut _8: &str;                    // in scope 0 at ui/autoref-autoderef/autoref-intermediate-types-issue-3585.rs:21:25: 21:44
    let _9: &str;                        // in scope 0 at ui/autoref-autoderef/autoref-intermediate-types-issue-3585.rs:21:25: 21:32
    let mut _12: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    let mut _13: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
    let mut _14: &std::string::String;   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
    let mut _15: &std::string::String;   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
    let _17: !;                          // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
    let mut _18: core::panicking::AssertKind; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
    let mut _19: &std::string::String;   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let _20: &std::string::String;       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let mut _21: &std::string::String;   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let _22: &std::string::String;       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let mut _23: std::option::Option<std::fmt::Arguments<'_>>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
    scope 1 {
        debug x => _1;                   // in scope 1 at ui/autoref-autoderef/autoref-intermediate-types-issue-3585.rs:20:9: 20:10
        let _10: &std::string::String;   // in scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        let _11: &std::string::String;   // in scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        scope 2 {
            debug left_val => _10;       // in scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
            debug right_val => _11;      // in scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
            let _16: core::panicking::AssertKind; // in scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
            scope 3 {
                debug kind => _16;       // in scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
            }
        }
    }

    bb0: {
        _1 = Box::<usize>::new(const 3_usize) -> bb1; // scope 0 at ui/autoref-autoderef/autoref-intermediate-types-issue-3585.rs:20:21: 20:32
                                         // mir::Constant
                                         // + span: ui/autoref-autoderef/autoref-intermediate-types-issue-3585.rs:20:21: 20:29
                                         // + user_ty: UserType(1)
                                         // + literal: Const { ty: fn(usize) -> Box<usize> {Box::<usize>::new}, val: Value(<ZST>) }
    }

    bb1: {
        _5 = &_1;                        // scope 1 at ui/autoref-autoderef/autoref-intermediate-types-issue-3585.rs:21:16: 21:23
        _4 = <Box<usize> as Foo>::foo(move _5) -> [return: bb2, unwind: bb12]; // scope 1 at ui/autoref-autoderef/autoref-intermediate-types-issue-3585.rs:21:16: 21:23
                                         // mir::Constant
                                         // + span: ui/autoref-autoderef/autoref-intermediate-types-issue-3585.rs:21:18: 21:21
                                         // + literal: Const { ty: for<'a> fn(&'a Box<usize>) -> String {<Box<usize> as Foo>::foo}, val: Value(<ZST>) }
    }

    bb2: {
        _3 = &_4;                        // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _9 = const "box 3";              // scope 1 at ui/autoref-autoderef/autoref-intermediate-types-issue-3585.rs:21:25: 21:32
                                         // mir::Constant
                                         // + span: ui/autoref-autoderef/autoref-intermediate-types-issue-3585.rs:21:25: 21:32
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _8 = _9;                         // scope 1 at ui/autoref-autoderef/autoref-intermediate-types-issue-3585.rs:21:25: 21:44
        _7 = <str as ToString>::to_string(move _8) -> [return: bb3, unwind: bb11]; // scope 1 at ui/autoref-autoderef/autoref-intermediate-types-issue-3585.rs:21:25: 21:44
                                         // mir::Constant
                                         // + span: ui/autoref-autoderef/autoref-intermediate-types-issue-3585.rs:21:33: 21:42
                                         // + literal: Const { ty: for<'a> fn(&'a str) -> String {<str as ToString>::to_string}, val: Value(<ZST>) }
    }

    bb3: {
        _6 = &_7;                        // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _2 = (move _3, move _6);         // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _10 = (_2.0: &std::string::String); // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _11 = (_2.1: &std::string::String); // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _14 = _10;                       // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
        _15 = _11;                       // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
        _13 = <String as PartialEq>::eq(move _14, move _15) -> [return: bb4, unwind: bb10]; // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a String, &'b String) -> bool {<String as PartialEq>::eq}, val: Value(<ZST>) }
    }

    bb4: {
        _12 = Not(move _13);             // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
        switchInt(move _12) -> [0: bb6, otherwise: bb5]; // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    }

    bb5: {
        _16 = const core::panicking::AssertKind::Eq; // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _18 = const core::panicking::AssertKind::Eq; // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _20 = _10;                       // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _19 = _20;                       // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _22 = _11;                       // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _21 = _22;                       // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _23 = Option::<Arguments<'_>>::None; // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
        _17 = core::panicking::assert_failed::<String, String>(move _18, move _19, move _21, move _23) -> bb10; // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:53
                                         // + literal: Const { ty: for<'a, 'b, 'c> fn(core::panicking::AssertKind, &'a String, &'b String, Option<Arguments<'c>>) -> ! {core::panicking::assert_failed::<String, String>}, val: Value(<ZST>) }
    }

    bb6: {
        drop(_7) -> [return: bb7, unwind: bb11]; // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:48:9: 48:10
    }

    bb7: {
        drop(_4) -> [return: bb8, unwind: bb12]; // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:48:9: 48:10
    }

    bb8: {
        drop(_1) -> bb9;                 // scope 0 at ui/autoref-autoderef/autoref-intermediate-types-issue-3585.rs:22:1: 22:2
    }

    bb9: {
        return;                          // scope 0 at ui/autoref-autoderef/autoref-intermediate-types-issue-3585.rs:22:2: 22:2
    }

    bb10 (cleanup): {
        drop(_7) -> bb11;                // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:48:9: 48:10
    }

    bb11 (cleanup): {
        drop(_4) -> bb12;                // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:48:9: 48:10
    }

    bb12 (cleanup): {
        drop(_1) -> bb13;                // scope 0 at ui/autoref-autoderef/autoref-intermediate-types-issue-3585.rs:22:1: 22:2
    }

    bb13 (cleanup): {
        resume;                          // scope 0 at ui/autoref-autoderef/autoref-intermediate-types-issue-3585.rs:19:1: 22:2
    }
}
