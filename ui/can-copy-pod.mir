// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
fn can_copy_copy(_1: T) -> () {
    debug v => _1;                       // in scope 0 at ui/can-copy-pod.rs:11:26: 11:27
    let mut _0: ();                      // return place in scope 0 at ui/can-copy-pod.rs:11:32: 11:32
    let _2: T;                           // in scope 0 at ui/can-copy-pod.rs:12:9: 12:11
    scope 1 {
        debug _a => _2;                  // in scope 1 at ui/can-copy-pod.rs:12:9: 12:11
        let _3: T;                       // in scope 1 at ui/can-copy-pod.rs:13:9: 13:11
        scope 2 {
            debug _b => _3;              // in scope 2 at ui/can-copy-pod.rs:13:9: 13:11
        }
    }

    bb0: {
        _2 = _1;                         // scope 0 at ui/can-copy-pod.rs:12:14: 12:15
        _3 = _1;                         // scope 1 at ui/can-copy-pod.rs:13:14: 13:15
        return;                          // scope 0 at ui/can-copy-pod.rs:14:2: 14:2
    }
}

fn main() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/can-copy-pod.rs:16:15: 16:15

    bb0: {
        return;                          // scope 0 at ui/can-copy-pod.rs:16:17: 16:17
    }
}
