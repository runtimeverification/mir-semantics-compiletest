// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
const DOG: &str = {
    let mut _0: &str;                    // return place in scope 0 at ui/macros/macro-attribute-expansion.rs:7:23: 7:35

    bb0: {
        _0 = const "an animal";          // scope 0 at ui/macros/macro-attribute-expansion.rs:12:24: 12:35
                                         // mir::Constant
                                         // + span: ui/macros/macro-attribute-expansion.rs:12:24: 12:35
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        return;                          // scope 0 at ui/macros/macro-attribute-expansion.rs:7:9: 7:44
    }
}

const RUST: &str = {
    let mut _0: &str;                    // return place in scope 0 at ui/macros/macro-attribute-expansion.rs:7:23: 7:35

    bb0: {
        _0 = const "a language";         // scope 0 at ui/macros/macro-attribute-expansion.rs:13:25: 13:37
                                         // mir::Constant
                                         // + span: ui/macros/macro-attribute-expansion.rs:13:25: 13:37
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        return;                          // scope 0 at ui/macros/macro-attribute-expansion.rs:7:9: 7:44
    }
}

fn main() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/macros/macro-attribute-expansion.rs:15:15: 15:15

    bb0: {
        return;                          // scope 0 at ui/macros/macro-attribute-expansion.rs:16:2: 16:2
    }
}
