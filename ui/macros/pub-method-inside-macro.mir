// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
fn bleh::<impl at ui/macros/pub-method-inside-macro.rs:15:5: 15:11>::bar(_1: &S) -> () {
    debug self => _1;                    // in scope 0 at ui/macros/pub-method-inside-macro.rs:9:24: 9:29
    let mut _0: ();                      // return place in scope 0 at ui/macros/pub-method-inside-macro.rs:9:31: 9:31

    bb0: {
        return;                          // scope 0 at ui/macros/pub-method-inside-macro.rs:9:34: 9:34
    }
}

fn main() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/macros/pub-method-inside-macro.rs:20:11: 20:11
    let _1: ();                          // in scope 0 at ui/macros/pub-method-inside-macro.rs:21:5: 21:18
    let mut _2: &bleh::S;                // in scope 0 at ui/macros/pub-method-inside-macro.rs:21:5: 21:18
    let mut _3: &bleh::S;                // in scope 0 at ui/macros/pub-method-inside-macro.rs:21:5: 21:18

    bb0: {
        _3 = const _;                    // scope 0 at ui/macros/pub-method-inside-macro.rs:21:5: 21:18
                                         // mir::Constant
                                         // + span: ui/macros/pub-method-inside-macro.rs:21:5: 21:18
                                         // + literal: Const { ty: &S, val: Unevaluated(main, [], Some(promoted[0])) }
        _2 = _3;                         // scope 0 at ui/macros/pub-method-inside-macro.rs:21:5: 21:18
        _1 = S::bar(move _2) -> bb1;     // scope 0 at ui/macros/pub-method-inside-macro.rs:21:5: 21:18
                                         // mir::Constant
                                         // + span: ui/macros/pub-method-inside-macro.rs:21:13: 21:16
                                         // + literal: Const { ty: for<'a> fn(&'a S) {S::bar}, val: Value(<ZST>) }
    }

    bb1: {
        return;                          // scope 0 at ui/macros/pub-method-inside-macro.rs:22:2: 22:2
    }
}

promoted[0] in main: &S = {
    let mut _0: &bleh::S;                // return place in scope 0 at ui/macros/pub-method-inside-macro.rs:21:5: 21:18
    let mut _1: bleh::S;                 // in scope 0 at ui/macros/pub-method-inside-macro.rs:21:5: 21:12

    bb0: {
        _1 = S;                          // scope 0 at ui/macros/pub-method-inside-macro.rs:21:5: 21:12
        _0 = &_1;                        // scope 0 at ui/macros/pub-method-inside-macro.rs:21:5: 21:18
        return;                          // scope 0 at ui/macros/pub-method-inside-macro.rs:21:5: 21:18
    }
}
