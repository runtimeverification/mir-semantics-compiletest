// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
fn main() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/macros/assert-format-lazy.rs:5:11: 5:11
    let mut _1: (&i32, &i32);            // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:51:15: 51:32
    let mut _2: &i32;                    // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:51:16: 51:22
    let mut _3: &i32;                    // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:51:24: 51:31
    let _4: &i32;                        // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:52:14: 52:22
    let _5: &i32;                        // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:52:24: 52:33
    let mut _7: (&i32, &i32);            // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:51:15: 51:32
    let mut _8: &i32;                    // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:51:16: 51:22
    let mut _9: &i32;                    // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:51:24: 51:31
    let _10: &i32;                       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:52:14: 52:22
    let _11: &i32;                       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:52:24: 52:33
    let mut _13: (&i32, &i32);           // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:101:15: 101:36
    let mut _14: &i32;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:101:16: 101:24
    let mut _15: &i32;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:101:26: 101:35
    let _16: &i32;                       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:102:14: 102:22
    let _17: &i32;                       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:102:24: 102:33
    let mut _19: (&i32, &i32);           // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:101:15: 101:36
    let mut _20: &i32;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:101:16: 101:24
    let mut _21: &i32;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:101:26: 101:35
    let _22: &i32;                       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:102:14: 102:22
    let _23: &i32;                       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:102:24: 102:33
    let mut _25: &i32;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:101:26: 101:35
    let mut _26: &i32;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:101:16: 101:24
    let mut _27: &i32;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:101:26: 101:35
    let mut _28: &i32;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:101:16: 101:24
    let mut _29: &i32;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:51:24: 51:31
    let mut _30: &i32;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:51:16: 51:22
    let mut _31: &i32;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:51:24: 51:31
    let mut _32: &i32;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:51:16: 51:22
    scope 1 {
        debug left_val => _4;            // in scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:52:14: 52:22
        debug right_val => _5;           // in scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:52:24: 52:33
        let _6: core::panicking::AssertKind; // in scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:54:25: 54:29
        scope 2 {
            debug kind => _6;            // in scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:54:25: 54:29
        }
    }
    scope 3 {
        debug left_val => _10;           // in scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:52:14: 52:22
        debug right_val => _11;          // in scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:52:24: 52:33
        let _12: core::panicking::AssertKind; // in scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:54:25: 54:29
        scope 4 {
            debug kind => _12;           // in scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:54:25: 54:29
        }
    }
    scope 5 {
        debug left_val => _16;           // in scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:102:14: 102:22
        debug right_val => _17;          // in scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:102:24: 102:33
        let _18: core::panicking::AssertKind; // in scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:104:25: 104:29
        scope 6 {
            debug kind => _18;           // in scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:104:25: 104:29
        }
    }
    scope 7 {
        debug left_val => _22;           // in scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:102:14: 102:22
        debug right_val => _23;          // in scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:102:24: 102:33
        let _24: core::panicking::AssertKind; // in scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:104:25: 104:29
        scope 8 {
            debug kind => _24;           // in scope 8 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:104:25: 104:29
        }
    }

    bb0: {
        _32 = const _;                   // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:51:16: 51:22
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:51:16: 51:22
                                         // + literal: Const { ty: &i32, val: Unevaluated(main, [], Some(promoted[11])) }
        _2 = _32;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:51:16: 51:22
        _31 = const _;                   // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:51:24: 51:31
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:51:24: 51:31
                                         // + literal: Const { ty: &i32, val: Unevaluated(main, [], Some(promoted[10])) }
        _3 = _31;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:51:24: 51:31
        _1 = (move _2, move _3);         // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:51:15: 51:32
        _4 = (_1.0: &i32);               // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:52:14: 52:22
        _5 = (_1.1: &i32);               // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:52:24: 52:33
        _30 = const _;                   // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:51:16: 51:22
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:51:16: 51:22
                                         // + literal: Const { ty: &i32, val: Unevaluated(main, [], Some(promoted[8])) }
        _8 = _30;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:51:16: 51:22
        _29 = const _;                   // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:51:24: 51:31
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:51:24: 51:31
                                         // + literal: Const { ty: &i32, val: Unevaluated(main, [], Some(promoted[7])) }
        _9 = _29;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:51:24: 51:31
        _7 = (move _8, move _9);         // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:51:15: 51:32
        _10 = (_7.0: &i32);              // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:52:14: 52:22
        _11 = (_7.1: &i32);              // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:52:24: 52:33
        _28 = const _;                   // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:101:16: 101:24
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:101:16: 101:24
                                         // + literal: Const { ty: &i32, val: Unevaluated(main, [], Some(promoted[5])) }
        _14 = _28;                       // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:101:16: 101:24
        _27 = const _;                   // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:101:26: 101:35
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:101:26: 101:35
                                         // + literal: Const { ty: &i32, val: Unevaluated(main, [], Some(promoted[4])) }
        _15 = _27;                       // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:101:26: 101:35
        _13 = (move _14, move _15);      // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:101:15: 101:36
        _16 = (_13.0: &i32);             // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:102:14: 102:22
        _17 = (_13.1: &i32);             // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:102:24: 102:33
        _26 = const _;                   // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:101:16: 101:24
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:101:16: 101:24
                                         // + literal: Const { ty: &i32, val: Unevaluated(main, [], Some(promoted[2])) }
        _20 = _26;                       // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:101:16: 101:24
        _25 = const _;                   // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:101:26: 101:35
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:101:26: 101:35
                                         // + literal: Const { ty: &i32, val: Unevaluated(main, [], Some(promoted[1])) }
        _21 = _25;                       // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:101:26: 101:35
        _19 = (move _20, move _21);      // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:101:15: 101:36
        _22 = (_19.0: &i32);             // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:102:14: 102:22
        _23 = (_19.1: &i32);             // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:102:24: 102:33
        return;                          // scope 0 at ui/macros/assert-format-lazy.rs:12:2: 12:2
    }
}

promoted[0] in main: &[&str; 1] = {
    let mut _0: &[&str; 1];              // return place in scope 0 at ui/macros/assert-format-lazy.rs:11:28: 11:42
    let mut _1: [&str; 1];               // in scope 0 at ui/macros/assert-format-lazy.rs:11:28: 11:42

    bb0: {
        _1 = [const "Failed: "];         // scope 0 at ui/macros/assert-format-lazy.rs:11:28: 11:42
                                         // mir::Constant
                                         // + span: ui/macros/assert-format-lazy.rs:11:28: 11:42
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at ui/macros/assert-format-lazy.rs:11:28: 11:42
        return;                          // scope 0 at ui/macros/assert-format-lazy.rs:11:28: 11:42
    }
}

promoted[1] in main: &i32 = {
    let mut _0: &i32;                    // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:101:26: 101:35
    let mut _1: i32;                     // in scope 0 at ui/macros/assert-format-lazy.rs:11:25: 11:26

    bb0: {
        _1 = const 2_i32;                // scope 0 at ui/macros/assert-format-lazy.rs:11:25: 11:26
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:101:26: 101:35
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:101:26: 101:35
    }
}

promoted[2] in main: &i32 = {
    let mut _0: &i32;                    // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:101:16: 101:24
    let mut _1: i32;                     // in scope 0 at ui/macros/assert-format-lazy.rs:11:22: 11:23

    bb0: {
        _1 = const 1_i32;                // scope 0 at ui/macros/assert-format-lazy.rs:11:22: 11:23
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:101:16: 101:24
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:101:16: 101:24
    }
}

promoted[3] in main: &[&str; 1] = {
    let mut _0: &[&str; 1];              // return place in scope 0 at ui/macros/assert-format-lazy.rs:10:22: 10:36
    let mut _1: [&str; 1];               // in scope 0 at ui/macros/assert-format-lazy.rs:10:22: 10:36

    bb0: {
        _1 = [const "Failed: "];         // scope 0 at ui/macros/assert-format-lazy.rs:10:22: 10:36
                                         // mir::Constant
                                         // + span: ui/macros/assert-format-lazy.rs:10:22: 10:36
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at ui/macros/assert-format-lazy.rs:10:22: 10:36
        return;                          // scope 0 at ui/macros/assert-format-lazy.rs:10:22: 10:36
    }
}

promoted[4] in main: &i32 = {
    let mut _0: &i32;                    // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:101:26: 101:35
    let mut _1: i32;                     // in scope 0 at ui/macros/assert-format-lazy.rs:10:19: 10:20

    bb0: {
        _1 = const 2_i32;                // scope 0 at ui/macros/assert-format-lazy.rs:10:19: 10:20
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:101:26: 101:35
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:101:26: 101:35
    }
}

promoted[5] in main: &i32 = {
    let mut _0: &i32;                    // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:101:16: 101:24
    let mut _1: i32;                     // in scope 0 at ui/macros/assert-format-lazy.rs:10:16: 10:17

    bb0: {
        _1 = const 1_i32;                // scope 0 at ui/macros/assert-format-lazy.rs:10:16: 10:17
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:101:16: 101:24
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:101:16: 101:24
    }
}

promoted[6] in main: &[&str; 1] = {
    let mut _0: &[&str; 1];              // return place in scope 0 at ui/macros/assert-format-lazy.rs:9:28: 9:42
    let mut _1: [&str; 1];               // in scope 0 at ui/macros/assert-format-lazy.rs:9:28: 9:42

    bb0: {
        _1 = [const "Failed: "];         // scope 0 at ui/macros/assert-format-lazy.rs:9:28: 9:42
                                         // mir::Constant
                                         // + span: ui/macros/assert-format-lazy.rs:9:28: 9:42
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at ui/macros/assert-format-lazy.rs:9:28: 9:42
        return;                          // scope 0 at ui/macros/assert-format-lazy.rs:9:28: 9:42
    }
}

promoted[7] in main: &i32 = {
    let mut _0: &i32;                    // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:51:24: 51:31
    let mut _1: i32;                     // in scope 0 at ui/macros/assert-format-lazy.rs:9:25: 9:26

    bb0: {
        _1 = const 1_i32;                // scope 0 at ui/macros/assert-format-lazy.rs:9:25: 9:26
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:51:24: 51:31
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:51:24: 51:31
    }
}

promoted[8] in main: &i32 = {
    let mut _0: &i32;                    // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:51:16: 51:22
    let mut _1: i32;                     // in scope 0 at ui/macros/assert-format-lazy.rs:9:22: 9:23

    bb0: {
        _1 = const 1_i32;                // scope 0 at ui/macros/assert-format-lazy.rs:9:22: 9:23
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:51:16: 51:22
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:51:16: 51:22
    }
}

promoted[9] in main: &[&str; 1] = {
    let mut _0: &[&str; 1];              // return place in scope 0 at ui/macros/assert-format-lazy.rs:8:22: 8:36
    let mut _1: [&str; 1];               // in scope 0 at ui/macros/assert-format-lazy.rs:8:22: 8:36

    bb0: {
        _1 = [const "Failed: "];         // scope 0 at ui/macros/assert-format-lazy.rs:8:22: 8:36
                                         // mir::Constant
                                         // + span: ui/macros/assert-format-lazy.rs:8:22: 8:36
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at ui/macros/assert-format-lazy.rs:8:22: 8:36
        return;                          // scope 0 at ui/macros/assert-format-lazy.rs:8:22: 8:36
    }
}

promoted[10] in main: &i32 = {
    let mut _0: &i32;                    // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:51:24: 51:31
    let mut _1: i32;                     // in scope 0 at ui/macros/assert-format-lazy.rs:8:19: 8:20

    bb0: {
        _1 = const 1_i32;                // scope 0 at ui/macros/assert-format-lazy.rs:8:19: 8:20
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:51:24: 51:31
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:51:24: 51:31
    }
}

promoted[11] in main: &i32 = {
    let mut _0: &i32;                    // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:51:16: 51:22
    let mut _1: i32;                     // in scope 0 at ui/macros/assert-format-lazy.rs:8:16: 8:17

    bb0: {
        _1 = const 1_i32;                // scope 0 at ui/macros/assert-format-lazy.rs:8:16: 8:17
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:51:16: 51:22
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:51:16: 51:22
    }
}

promoted[12] in main: &[&str; 1] = {
    let mut _0: &[&str; 1];              // return place in scope 0 at ui/macros/assert-format-lazy.rs:7:25: 7:39
    let mut _1: [&str; 1];               // in scope 0 at ui/macros/assert-format-lazy.rs:7:25: 7:39

    bb0: {
        _1 = [const "Failed: "];         // scope 0 at ui/macros/assert-format-lazy.rs:7:25: 7:39
                                         // mir::Constant
                                         // + span: ui/macros/assert-format-lazy.rs:7:25: 7:39
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at ui/macros/assert-format-lazy.rs:7:25: 7:39
        return;                          // scope 0 at ui/macros/assert-format-lazy.rs:7:25: 7:39
    }
}

promoted[13] in main: &[&str; 1] = {
    let mut _0: &[&str; 1];              // return place in scope 0 at ui/macros/assert-format-lazy.rs:6:19: 6:33
    let mut _1: [&str; 1];               // in scope 0 at ui/macros/assert-format-lazy.rs:6:19: 6:33

    bb0: {
        _1 = [const "Failed: "];         // scope 0 at ui/macros/assert-format-lazy.rs:6:19: 6:33
                                         // mir::Constant
                                         // + span: ui/macros/assert-format-lazy.rs:6:19: 6:33
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at ui/macros/assert-format-lazy.rs:6:19: 6:33
        return;                          // scope 0 at ui/macros/assert-format-lazy.rs:6:19: 6:33
    }
}
