// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
fn main() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/macros/assert-matches-macro-msg.rs:11:11: 11:11
    let _1: &i32;                        // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:160:13: 160:25
    let _2: !;                           // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:161:17: 165:18
    let mut _3: &i32;                    // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:162:21: 162:29
    let mut _4: &str;                    // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:163:21: 163:68
    let _5: &str;                        // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:163:21: 163:68
    let mut _6: std::option::Option<std::fmt::Arguments<'_>>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:164:21: 164:81
    let mut _7: std::fmt::Arguments<'_>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:164:50: 164:80
    let mut _8: &[&str];                 // in scope 0 at ui/macros/assert-matches-macro-msg.rs:12:31: 12:61
    let mut _9: &[&str; 1];              // in scope 0 at ui/macros/assert-matches-macro-msg.rs:12:31: 12:61
    let _10: &[&str; 1];                 // in scope 0 at ui/macros/assert-matches-macro-msg.rs:12:31: 12:61
    let mut _11: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:164:50: 164:80
    let mut _12: &[core::fmt::ArgumentV1<'_>; 0]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:164:50: 164:80
    let _13: &[core::fmt::ArgumentV1<'_>; 0]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:164:50: 164:80
    let mut _16: &i32;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:160:13: 160:25
    scope 1 {
        debug left_val => _1;            // in scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:160:13: 160:25
        let mut _14: &[core::fmt::ArgumentV1<'_>; 0]; // in scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:164:50: 164:80
        let mut _15: &[&str; 1];         // in scope 1 at ui/macros/assert-matches-macro-msg.rs:12:31: 12:61
    }

    bb0: {
        _16 = const _;                   // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:160:13: 160:25
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:160:13: 160:25
                                         // + literal: Const { ty: &i32, val: Unevaluated(main, [], Some(promoted[2])) }
        _1 = _16;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:160:13: 160:25
        _3 = _1;                         // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:162:21: 162:29
        _5 = const "3";                  // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:163:21: 163:68
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:163:21: 163:68
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _4 = _5;                         // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:163:21: 163:68
        _15 = const _;                   // scope 1 at ui/macros/assert-matches-macro-msg.rs:12:31: 12:61
                                         // mir::Constant
                                         // + span: ui/macros/assert-matches-macro-msg.rs:12:31: 12:61
                                         // + literal: Const { ty: &[&str; 1], val: Unevaluated(main, [], Some(promoted[1])) }
        _10 = _15;                       // scope 1 at ui/macros/assert-matches-macro-msg.rs:12:31: 12:61
        _9 = _10;                        // scope 1 at ui/macros/assert-matches-macro-msg.rs:12:31: 12:61
        _8 = move _9 as &[&str] (Pointer(Unsize)); // scope 1 at ui/macros/assert-matches-macro-msg.rs:12:31: 12:61
        _14 = const _;                   // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:164:50: 164:80
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:164:50: 164:80
                                         // + literal: Const { ty: &[core::fmt::ArgumentV1<'_>; 0], val: Unevaluated(main, [], Some(promoted[0])) }
        _13 = _14;                       // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:164:50: 164:80
        _12 = _13;                       // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:164:50: 164:80
        _11 = move _12 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:164:50: 164:80
        _7 = Arguments::<'_>::new_v1(move _8, move _11) -> bb1; // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:164:50: 164:80
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:164:50: 164:80
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb1: {
        _6 = Option::<Arguments<'_>>::Some(move _7); // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:164:21: 164:81
        _2 = core::panicking::assert_matches_failed::<i32>(move _3, move _4, move _6); // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:161:17: 165:18
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:161:17: 161:57
                                         // + literal: Const { ty: for<'a, 'b, 'c> fn(&'a i32, &'b str, Option<Arguments<'c>>) -> ! {core::panicking::assert_matches_failed::<i32>}, val: Value(<ZST>) }
    }
}

promoted[0] in main: &[core::fmt::ArgumentV1<'_>; 0] = {
    let mut _0: &[core::fmt::ArgumentV1<'_>; 0]; // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:164:50: 164:80
    let mut _1: [core::fmt::ArgumentV1<'_>; 0]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:164:50: 164:80

    bb0: {
        _1 = [];                         // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:164:50: 164:80
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:164:50: 164:80
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:164:50: 164:80
    }
}

promoted[1] in main: &[&str; 1] = {
    let mut _0: &[&str; 1];              // return place in scope 0 at ui/macros/assert-matches-macro-msg.rs:12:31: 12:61
    let mut _1: [&str; 1];               // in scope 0 at ui/macros/assert-matches-macro-msg.rs:12:31: 12:61

    bb0: {
        _1 = [const "1 + 1 definitely should be 3"]; // scope 0 at ui/macros/assert-matches-macro-msg.rs:12:31: 12:61
                                         // mir::Constant
                                         // + span: ui/macros/assert-matches-macro-msg.rs:12:31: 12:61
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at ui/macros/assert-matches-macro-msg.rs:12:31: 12:61
        return;                          // scope 0 at ui/macros/assert-matches-macro-msg.rs:12:31: 12:61
    }
}

promoted[2] in main: &i32 = {
    let mut _0: &i32;                    // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:160:13: 160:25
    let mut _1: i32;                     // in scope 0 at ui/macros/assert-matches-macro-msg.rs:12:21: 12:26
    let mut _2: (i32, bool);             // in scope 0 at ui/macros/assert-matches-macro-msg.rs:12:21: 12:26

    bb0: {
        _2 = CheckedAdd(const 1_i32, const 1_i32); // scope 0 at ui/macros/assert-matches-macro-msg.rs:12:21: 12:26
        _1 = move (_2.0: i32);           // scope 0 at ui/macros/assert-matches-macro-msg.rs:12:21: 12:26
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:160:13: 160:25
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:160:13: 160:25
    }
}
