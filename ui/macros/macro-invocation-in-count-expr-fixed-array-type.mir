// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
fn main() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/macros/macro-invocation-in-count-expr-fixed-array-type.rs:8:11: 8:11
    let _1: [u16; 4];                    // in scope 0 at ui/macros/macro-invocation-in-count-expr-fixed-array-type.rs:9:9: 9:11
    scope 1 {
        debug _x => _1;                  // in scope 1 at ui/macros/macro-invocation-in-count-expr-fixed-array-type.rs:9:9: 9:11
    }

    bb0: {
        return;                          // scope 0 at ui/macros/macro-invocation-in-count-expr-fixed-array-type.rs:10:2: 10:2
    }
}

main::{constant#0}: usize = {
    let mut _0: usize;                   // return place in scope 0 at ui/macros/macro-invocation-in-count-expr-fixed-array-type.rs:5:12: 5:13

    bb0: {
        _0 = const 4_usize;              // scope 0 at ui/macros/macro-invocation-in-count-expr-fixed-array-type.rs:5:12: 5:13
        return;                          // scope 0 at ui/macros/macro-invocation-in-count-expr-fixed-array-type.rs:5:12: 5:13
    }
}
