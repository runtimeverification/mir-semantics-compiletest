// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
const P: LocalKey<()> = {
    let mut _0: std::thread::LocalKey<()>; // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/thread/local.rs:365:40: 365:68
    let mut _1: for<'a> unsafe fn(std::option::Option<&'a mut std::option::Option<()>>) -> std::option::Option<&()>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/thread/local.rs:360:47: 360:54
    scope 1 {
    }

    bb0: {
        StorageLive(_1);                 // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/thread/local.rs:360:47: 360:54
        _1 = P::__getit as for<'a> unsafe fn(std::option::Option<&'a mut std::option::Option<()>>) -> std::option::Option<&()> (Pointer(ReifyFnPointer)); // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/thread/local.rs:360:47: 360:54
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/thread/local.rs:360:47: 360:54
                                         // + literal: Const { ty: for<'a> unsafe fn(Option<&'a mut Option<()>>) -> Option<&'static ()> {P::__getit}, val: Value(<ZST>) }
        ConstEvalCounter;                // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/thread/local.rs:360:17: 360:55
        _0 = LocalKey::<()>::new(move _1) -> bb1; // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/thread/local.rs:360:17: 360:55
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/thread/local.rs:360:17: 360:46
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: unsafe fn(for<'a> unsafe fn(Option<&'a mut Option<()>>) -> Option<&'static ()>) -> LocalKey<()> {LocalKey::<()>::new}, val: Value(<ZST>) }
    }

    bb1: {
        StorageDead(_1);                 // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/thread/local.rs:360:54: 360:55
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/thread/local.rs:365:22: 366:63
    }
}

fn __init() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/macros/issue-95533.rs:5:34: 5:36

    bb0: {
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/thread/local.rs:294:40: 294:40
    }
}

fn P::__getit(_1: Option<&mut Option<()>>) -> Option<&()> {
    debug init => _1;                    // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/thread/local.rs:320:17: 320:21
    let mut _0: std::option::Option<&()>; // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/thread/local.rs:321:18: 321:53
    let mut _2: &std::thread::__FastLocalKeyInner<()>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/thread/local.rs:346:21: 355:23
    let _3: &std::thread::__FastLocalKeyInner<()>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/thread/local.rs:346:21: 346:26
    let mut _4: [closure@/rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/thread/local.rs:346:31: 346:38]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/thread/local.rs:346:31: 355:22
    scope 1 {
        scope 2 {
        }
    }

    bb0: {
        _3 = &/*tls*/ __KEY;             // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/thread/local.rs:346:21: 346:26
        _2 = _3;                         // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/thread/local.rs:346:21: 355:23
        _4 = [closure@/home/burak/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/std/src/thread/local.rs:346:31: 346:38] { init: move _1 }; // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/thread/local.rs:346:31: 355:22
                                         // closure
                                         // + def_id: DefId(0:8 ~ issue_95533[d231]::P::__getit::{closure#0})
                                         // + substs: [
                                         //     i32,
                                         //     extern "rust-call" fn(()),
                                         //     (std::option::Option<&mut std::option::Option<()>>,),
                                         // ]
        _0 = __FastLocalKeyInner::<()>::get::<[closure@/rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/thread/local.rs:346:31: 346:38]>(move _2, move _4) -> bb1; // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/thread/local.rs:346:21: 355:23
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/thread/local.rs:346:27: 346:30
                                         // + literal: Const { ty: for<'a> unsafe fn(&'a __FastLocalKeyInner<()>, [closure@/rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/thread/local.rs:346:31: 346:38]) -> Option<&'static ()> {__FastLocalKeyInner::<()>::get::<[closure@/rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/thread/local.rs:346:31: 346:38]>}, val: Value(<ZST>) }
    }

    bb1: {
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/thread/local.rs:357:14: 357:14
    }
}

static __KEY: __FastLocalKeyInner<()> = {
    let mut _0: std::thread::__FastLocalKeyInner<()>; // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/thread/local.rs:331:31: 331:70

    bb0: {
        ConstEvalCounter;                // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/thread/local.rs:332:21: 332:63
        _0 = __FastLocalKeyInner::<()>::new() -> bb1; // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/thread/local.rs:332:21: 332:63
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/thread/local.rs:332:21: 332:61
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: fn() -> __FastLocalKeyInner<()> {__FastLocalKeyInner::<()>::new}, val: Value(<ZST>) }
    }

    bb1: {
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/thread/local.rs:331:17: 332:64
    }
}

fn P::__getit::{closure#0}(_1: [closure@/rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/thread/local.rs:346:31: 346:38]) -> () {
    debug init => (_1.0: std::option::Option<&mut std::option::Option<()>>); // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/thread/local.rs:320:17: 320:21
    let mut _0: ();                      // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/thread/local.rs:346:39: 346:39
    let mut _2: isize;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/thread/local.rs:347:32: 347:66
    let mut _4: std::option::Option<()>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/thread/local.rs:348:74: 348:85
    let mut _5: &mut std::option::Option<()>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/thread/local.rs:348:74: 348:85
    let mut _6: isize;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/thread/local.rs:348:36: 348:71
    let _8: !;                           // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/panic.rs:57:9: 57:73
    let mut _9: std::fmt::Arguments<'_>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/panic.rs:57:38: 57:72
    let mut _10: &[&str];                // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/panic.rs:89:24: 89:70
    let mut _11: &[&str; 1];             // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/panic.rs:89:24: 89:70
    let _12: &[&str; 1];                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/panic.rs:89:24: 89:70
    let mut _13: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/panic.rs:57:38: 57:72
    let mut _14: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/panic.rs:57:38: 57:72
    let _15: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/panic.rs:57:38: 57:72
    let _16: [core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/panic.rs:57:38: 57:72
    let mut _17: core::fmt::ArgumentV1<'_>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/panic.rs:89:72: 89:100
    let mut _18: &std::fmt::Arguments<'_>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/panic.rs:89:72: 89:100
    let _19: &std::fmt::Arguments<'_>;   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/panic.rs:89:72: 89:100
    let _20: std::fmt::Arguments<'_>;    // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/panic.rs:89:72: 89:100
    let mut _21: &[&str];                // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/thread/local.rs:351:54: 351:77
    let mut _22: &[&str; 1];             // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/thread/local.rs:351:54: 351:77
    let _23: &[&str; 1];                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/thread/local.rs:351:54: 351:77
    let mut _24: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/panic.rs:89:72: 89:100
    let mut _25: &[core::fmt::ArgumentV1<'_>; 0]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/panic.rs:89:72: 89:100
    let _26: &[core::fmt::ArgumentV1<'_>; 0]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/panic.rs:89:72: 89:100
    scope 1 {
        debug init => _3;                // in scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/thread/local.rs:347:61: 347:65
        let _3: &mut std::option::Option<()>; // in scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/thread/local.rs:347:61: 347:65
        let mut _27: &[core::fmt::ArgumentV1<'_>; 0]; // in scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/panic.rs:89:72: 89:100
        let mut _28: &[&str; 1];         // in scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/thread/local.rs:351:54: 351:77
        let mut _29: &[&str; 1];         // in scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/panic.rs:89:24: 89:70
        scope 2 {
            debug value => _7;           // in scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/thread/local.rs:348:65: 348:70
            let _7: ();                  // in scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/thread/local.rs:348:65: 348:70
        }
    }

    bb0: {
        _2 = discriminant((_1.0: std::option::Option<&mut std::option::Option<()>>)); // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/thread/local.rs:347:32: 347:66
        switchInt(move _2) -> [1: bb1, otherwise: bb7]; // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/thread/local.rs:347:32: 347:66
    }

    bb1: {
        _3 = move (((_1.0: std::option::Option<&mut std::option::Option<()>>) as Some).0: &mut std::option::Option<()>); // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/thread/local.rs:347:61: 347:65
        _5 = &mut (*_3);                 // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/thread/local.rs:348:74: 348:85
        _4 = Option::<()>::take(move _5) -> bb2; // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/thread/local.rs:348:74: 348:85
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/thread/local.rs:348:79: 348:83
                                         // + literal: Const { ty: for<'a> fn(&'a mut Option<()>) -> Option<()> {Option::<()>::take}, val: Value(<ZST>) }
    }

    bb2: {
        _6 = discriminant(_4);           // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/thread/local.rs:348:36: 348:71
        switchInt(move _6) -> [1: bb8, otherwise: bb3]; // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/thread/local.rs:348:36: 348:71
    }

    bb3: {
        _29 = const _;                   // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/panic.rs:89:24: 89:70
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/panic.rs:89:24: 89:70
                                         // + literal: Const { ty: &[&str; 1], val: Unevaluated(P::__getit::{closure#0}, [<closure_kind>, <closure_signature>, <upvars>], Some(promoted[2])) }
        _12 = _29;                       // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/panic.rs:89:24: 89:70
        _11 = _12;                       // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/panic.rs:89:24: 89:70
        _10 = move _11 as &[&str] (Pointer(Unsize)); // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/panic.rs:89:24: 89:70
        _28 = const _;                   // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/thread/local.rs:351:54: 351:77
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/thread/local.rs:351:54: 351:77
                                         // + literal: Const { ty: &[&str; 1], val: Unevaluated(P::__getit::{closure#0}, [<closure_kind>, <closure_signature>, <upvars>], Some(promoted[1])) }
        _23 = _28;                       // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/thread/local.rs:351:54: 351:77
        _22 = _23;                       // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/thread/local.rs:351:54: 351:77
        _21 = move _22 as &[&str] (Pointer(Unsize)); // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/thread/local.rs:351:54: 351:77
        _27 = const _;                   // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/panic.rs:89:72: 89:100
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/panic.rs:89:72: 89:100
                                         // + literal: Const { ty: &[core::fmt::ArgumentV1<'_>; 0], val: Unevaluated(P::__getit::{closure#0}, [<closure_kind>, <closure_signature>, <upvars>], Some(promoted[0])) }
        _26 = _27;                       // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/panic.rs:89:72: 89:100
        _25 = _26;                       // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/panic.rs:89:72: 89:100
        _24 = move _25 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/panic.rs:89:72: 89:100
        _20 = Arguments::<'_>::new_v1(move _21, move _24) -> bb4; // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/panic.rs:89:72: 89:100
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/panic.rs:89:72: 89:100
                                         // + user_ty: UserType(2)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb4: {
        _19 = &_20;                      // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/panic.rs:89:72: 89:100
        _18 = _19;                       // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/panic.rs:89:72: 89:100
        _17 = core::fmt::ArgumentV1::<'_>::new_display::<Arguments<'_>>(move _18) -> bb5; // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/panic.rs:89:72: 89:100
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/panic.rs:89:72: 89:100
                                         // + user_ty: UserType(1)
                                         // + literal: Const { ty: for<'b> fn(&'b Arguments<'_>) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_display::<Arguments<'_>>}, val: Value(<ZST>) }
    }

    bb5: {
        _16 = [move _17];                // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/panic.rs:57:38: 57:72
        _15 = &_16;                      // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/panic.rs:57:38: 57:72
        _14 = _15;                       // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/panic.rs:57:38: 57:72
        _13 = move _14 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/panic.rs:57:38: 57:72
        _9 = Arguments::<'_>::new_v1(move _10, move _13) -> bb6; // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/panic.rs:57:38: 57:72
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/panic.rs:57:38: 57:72
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb6: {
        _8 = panic_fmt(move _9);         // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/panic.rs:57:9: 57:73
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/panic.rs:57:9: 57:37
                                         // + literal: Const { ty: for<'a> fn(Arguments<'a>) -> ! {panic_fmt}, val: Value(<ZST>) }
    }

    bb7: {
        _0 = __init() -> bb8;            // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/thread/local.rs:354:25: 354:33
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/thread/local.rs:354:25: 354:31
                                         // + literal: Const { ty: fn() {__init}, val: Value(<ZST>) }
    }

    bb8: {
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/thread/local.rs:355:22: 355:22
    }
}

promoted[0] in P::__getit::{closure#0}: &[core::fmt::ArgumentV1<'_>; 0] = {
    let mut _0: &[core::fmt::ArgumentV1<'_>; 0]; // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/panic.rs:89:72: 89:100
    let mut _1: [core::fmt::ArgumentV1<'_>; 0]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/panic.rs:89:72: 89:100

    bb0: {
        _1 = [];                         // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/panic.rs:89:72: 89:100
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/panic.rs:89:72: 89:100
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/panic.rs:89:72: 89:100
    }
}

promoted[1] in P::__getit::{closure#0}: &[&str; 1] = {
    let mut _0: &[&str; 1];              // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/thread/local.rs:351:54: 351:77
    let mut _1: [&str; 1];               // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/thread/local.rs:351:54: 351:77

    bb0: {
        _1 = [const "missing default value"]; // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/thread/local.rs:351:54: 351:77
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/thread/local.rs:351:54: 351:77
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/thread/local.rs:351:54: 351:77
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/thread/local.rs:351:54: 351:77
    }
}

promoted[2] in P::__getit::{closure#0}: &[&str; 1] = {
    let mut _0: &[&str; 1];              // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/panic.rs:89:24: 89:70
    let mut _1: [&str; 1];               // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/panic.rs:89:24: 89:70

    bb0: {
        _1 = [const "internal error: entered unreachable code: "]; // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/panic.rs:89:24: 89:70
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/panic.rs:89:24: 89:70
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/panic.rs:89:24: 89:70
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/panic.rs:89:24: 89:70
    }
}

const Q: LocalKey<()> = {
    let mut _0: std::thread::LocalKey<()>; // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/thread/local.rs:365:40: 365:68
    let mut _1: for<'a> unsafe fn(std::option::Option<&'a mut std::option::Option<()>>) -> std::option::Option<&()>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/thread/local.rs:286:43: 286:50
    scope 1 {
    }

    bb0: {
        StorageLive(_1);                 // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/thread/local.rs:286:43: 286:50
        _1 = Q::__getit as for<'a> unsafe fn(std::option::Option<&'a mut std::option::Option<()>>) -> std::option::Option<&()> (Pointer(ReifyFnPointer)); // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/thread/local.rs:286:43: 286:50
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/thread/local.rs:286:43: 286:50
                                         // + literal: Const { ty: for<'a> unsafe fn(Option<&'a mut Option<()>>) -> Option<&'static ()> {Q::__getit}, val: Value(<ZST>) }
        ConstEvalCounter;                // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/thread/local.rs:286:13: 286:51
        _0 = LocalKey::<()>::new(move _1) -> bb1; // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/thread/local.rs:286:13: 286:51
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/thread/local.rs:286:13: 286:42
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: unsafe fn(for<'a> unsafe fn(Option<&'a mut Option<()>>) -> Option<&'static ()>) -> LocalKey<()> {LocalKey::<()>::new}, val: Value(<ZST>) }
    }

    bb1: {
        StorageDead(_1);                 // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/thread/local.rs:286:50: 286:51
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/thread/local.rs:365:22: 366:63
    }
}

fn Q::__getit(_1: Option<&mut Option<()>>) -> Option<&()> {
    debug _init => _1;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/thread/local.rs:187:13: 187:18
    let mut _0: std::option::Option<&()>; // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/thread/local.rs:188:14: 188:49
    let mut _2: bool;                    // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/thread/local.rs:214:20: 214:52
    let mut _3: bool;                    // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/thread/local.rs:214:21: 214:52
    let mut _4: &();                     // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/thread/local.rs:216:61: 216:65
    let _5: &();                         // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/thread/local.rs:216:61: 216:65
    let _6: *mut ();                     // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/thread/local.rs:216:62: 216:65
    let mut _7: *mut u8;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/thread/local.rs:237:27: 237:32
    let _8: ();                          // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/thread/local.rs:241:29: 244:30
    let mut _9: *mut u8;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/thread/local.rs:242:33: 242:93
    let mut _10: *mut ();                // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/ptr/mod.rs:2100:5: 2100:20
    let mut _11: *mut ();                // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/thread/local.rs:242:59: 242:62
    let mut _12: unsafe extern "C" fn(*mut u8); // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/thread/local.rs:243:33: 243:40
    let mut _13: *mut u8;                // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/thread/local.rs:245:29: 245:34
    let mut _14: &();                    // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/thread/local.rs:246:58: 246:62
    let _15: &();                        // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/thread/local.rs:246:58: 246:62
    let _16: *mut ();                    // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/thread/local.rs:246:59: 246:62
    let mut _17: &();                    // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/thread/local.rs:250:59: 250:63
    let _18: &();                        // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/thread/local.rs:250:59: 250:63
    let _19: *mut ();                    // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/thread/local.rs:250:60: 250:63
    scope 1 {
    }
    scope 2 {
    }

    bb0: {
        _3 = std::mem::needs_drop::<()>() -> bb1; // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/thread/local.rs:214:21: 214:52
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/thread/local.rs:214:21: 214:50
                                         // + literal: Const { ty: fn() -> bool {std::mem::needs_drop::<()>}, val: Value(<ZST>) }
    }

    bb1: {
        _2 = Not(move _3);               // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/thread/local.rs:214:20: 214:52
        switchInt(move _2) -> [0: bb3, otherwise: bb2]; // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/thread/local.rs:214:20: 214:52
    }

    bb2: {
        _6 = &/*tls*/ mut VAL;           // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/thread/local.rs:216:62: 216:65
        _5 = &(*_6);                     // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/thread/local.rs:216:61: 216:65
        _4 = _5;                         // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/thread/local.rs:216:61: 216:65
        _0 = Option::<&()>::Some(move _4); // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/thread/local.rs:216:32: 216:66
        goto -> bb8;                     // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/thread/local.rs:283:10: 283:10
    }

    bb3: {
        _7 = &/*tls*/ mut STATE;         // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/thread/local.rs:237:27: 237:32
        switchInt((*_7)) -> [0: bb5, 1: bb7, otherwise: bb4]; // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/thread/local.rs:237:21: 237:32
    }

    bb4: {
        _0 = const Option::<&()>::None;  // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/thread/local.rs:253:30: 253:58
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/thread/local.rs:253:30: 253:58
                                         // + literal: Const { ty: Option<&()>, val: Value(Scalar(0x0000000000000000)) }
        goto -> bb8;                     // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/thread/local.rs:253:30: 253:58
    }

    bb5: {
        _11 = &/*tls*/ mut VAL;          // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/thread/local.rs:242:59: 242:62
        _10 = &raw mut (*_11);           // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/ptr/mod.rs:2100:5: 2100:20
        _9 = move _10 as *mut u8 (PtrToPtr); // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/thread/local.rs:242:33: 242:93
        _12 = destroy as unsafe extern "C" fn(*mut u8) (Pointer(ReifyFnPointer)); // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/thread/local.rs:243:33: 243:40
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/thread/local.rs:243:33: 243:40
                                         // + literal: Const { ty: unsafe extern "C" fn(*mut u8) {destroy}, val: Value(<ZST>) }
        _8 = __FastLocalKeyInner::<()>::register_dtor(move _9, move _12) -> bb6; // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/thread/local.rs:241:29: 244:30
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/thread/local.rs:241:29: 241:85
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: unsafe fn(*mut u8, unsafe extern "C" fn(*mut u8)) {__FastLocalKeyInner::<()>::register_dtor}, val: Value(<ZST>) }
    }

    bb6: {
        _13 = &/*tls*/ mut STATE;        // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/thread/local.rs:245:29: 245:34
        (*_13) = const 1_u8;             // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/thread/local.rs:245:29: 245:38
        _16 = &/*tls*/ mut VAL;          // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/thread/local.rs:246:59: 246:62
        _15 = &(*_16);                   // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/thread/local.rs:246:58: 246:62
        _14 = _15;                       // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/thread/local.rs:246:58: 246:62
        _0 = Option::<&()>::Some(move _14); // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/thread/local.rs:246:29: 246:63
        goto -> bb8;                     // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/thread/local.rs:247:25: 247:26
    }

    bb7: {
        _19 = &/*tls*/ mut VAL;          // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/thread/local.rs:250:60: 250:63
        _18 = &(*_19);                   // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/thread/local.rs:250:59: 250:63
        _17 = _18;                       // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/thread/local.rs:250:59: 250:63
        _0 = Option::<&()>::Some(move _17); // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/thread/local.rs:250:30: 250:64
        goto -> bb8;                     // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/thread/local.rs:250:63: 250:64
    }

    bb8: {
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/thread/local.rs:283:10: 283:10
    }
}

const INIT_EXPR: () = {
    let mut _0: ();                      // return place in scope 0 at ui/macros/issue-95533.rs:6:34: 6:36

    bb0: {
        _0 = ();                         // scope 0 at ui/macros/issue-95533.rs:6:47: 6:49
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/thread/local.rs:189:13: 189:41
    }
}

static mut VAL: () = {
    let mut _0: ();                      // return place in scope 0 at ui/macros/issue-95533.rs:6:34: 6:36

    bb0: {
        _0 = const _;                    // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/thread/local.rs:210:38: 210:47
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/thread/local.rs:210:17: 210:48
    }
}

static mut STATE: u8 = {
    let mut _0: u8;                      // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/thread/local.rs:224:35: 224:56

    bb0: {
        _0 = const 0_u8;                 // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/thread/local.rs:224:59: 224:60
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/thread/local.rs:224:17: 224:61
    }
}

fn destroy(_1: *mut u8) -> () {
    debug ptr => _1;                     // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/thread/local.rs:226:46: 226:49
    let mut _0: ();                      // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/thread/local.rs:226:79: 226:79
    let _2: *mut ();                     // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/thread/local.rs:227:25: 227:28
    let mut _3: *mut u8;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/thread/local.rs:227:31: 227:34
    let mut _4: (&u8, &u8);              // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _5: &u8;                     // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let _6: *mut u8;                     // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/thread/local.rs:230:50: 230:55
    let mut _7: &u8;                     // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _10: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    let mut _11: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
    let mut _12: u8;                     // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
    let mut _13: u8;                     // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
    let _15: !;                          // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
    let mut _16: core::panicking::AssertKind; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
    let mut _17: &u8;                    // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let _18: &u8;                        // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let mut _19: &u8;                    // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let _20: &u8;                        // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let mut _21: std::option::Option<std::fmt::Arguments<'_>>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
    let mut _22: *mut u8;                // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/thread/local.rs:231:25: 231:30
    let _23: ();                         // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/thread/local.rs:232:25: 232:56
    let mut _24: *mut ();                // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/thread/local.rs:232:52: 232:55
    scope 1 {
        debug ptr => _2;                 // in scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/thread/local.rs:227:25: 227:28
        scope 2 {
            let _8: &u8;                 // in scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
            let _9: &u8;                 // in scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
            let mut _25: &u8;            // in scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
            scope 3 {
                debug left_val => _8;    // in scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
                debug right_val => _9;   // in scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
                let _14: core::panicking::AssertKind; // in scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                scope 4 {
                    debug kind => _14;   // in scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                }
            }
        }
    }

    bb0: {
        _3 = _1;                         // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/thread/local.rs:227:31: 227:34
        _2 = move _3 as *mut () (PtrToPtr); // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/thread/local.rs:227:31: 227:45
        _6 = &/*tls*/ mut STATE;         // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/thread/local.rs:230:50: 230:55
        _5 = &(*_6);                     // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _25 = const _;                   // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // + literal: Const { ty: &u8, val: Unevaluated(destroy, [], Some(promoted[0])) }
        _7 = _25;                        // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _4 = (move _5, move _7);         // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _8 = (_4.0: &u8);                // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _9 = (_4.1: &u8);                // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _12 = (*_8);                     // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
        _13 = const 1_u8;                // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
        _11 = Eq(move _12, move _13);    // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
        _10 = Not(move _11);             // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
        switchInt(move _10) -> [0: bb2, otherwise: bb1]; // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    }

    bb1: {
        _14 = const core::panicking::AssertKind::Eq; // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _16 = const core::panicking::AssertKind::Eq; // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _18 = _8;                        // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _17 = _18;                       // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _20 = _9;                        // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _19 = _20;                       // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _21 = Option::<Arguments<'_>>::None; // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
        _15 = core::panicking::assert_failed::<u8, u8>(move _16, move _17, move _19, move _21); // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:53
                                         // + literal: Const { ty: for<'a, 'b, 'c> fn(core::panicking::AssertKind, &'a u8, &'b u8, Option<Arguments<'c>>) -> ! {core::panicking::assert_failed::<u8, u8>}, val: Value(<ZST>) }
    }

    bb2: {
        _22 = &/*tls*/ mut STATE;        // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/thread/local.rs:231:25: 231:30
        (*_22) = const 2_u8;             // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/thread/local.rs:231:25: 231:34
        _24 = _2;                        // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/thread/local.rs:232:52: 232:55
        _23 = std::ptr::drop_in_place::<()>(move _24) -> bb3; // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/thread/local.rs:232:25: 232:56
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/thread/local.rs:232:25: 232:51
                                         // + literal: Const { ty: unsafe fn(*mut ()) {std::ptr::drop_in_place::<()>}, val: Value(<ZST>) }
    }

    bb3: {
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/thread/local.rs:234:18: 234:18
    }
}

promoted[0] in destroy: &u8 = {
    let mut _0: &u8;                     // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _1: u8;                      // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/thread/local.rs:230:57: 230:58

    bb0: {
        _1 = const 1_u8;                 // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/thread/local.rs:230:57: 230:58
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    }
}

fn main() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/macros/issue-95533.rs:8:12: 8:12

    bb0: {
        return;                          // scope 0 at ui/macros/issue-95533.rs:8:14: 8:14
    }
}
