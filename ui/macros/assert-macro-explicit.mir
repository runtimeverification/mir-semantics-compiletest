// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
fn main() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/macros/assert-macro-explicit.rs:5:11: 5:11
    let mut _1: !;                       // in scope 0 at ui/macros/assert-macro-explicit.rs:6:5: 6:19

    bb0: {
        _1 = core::panicking::panic(const "assertion failed: false"); // scope 0 at ui/macros/assert-macro-explicit.rs:6:5: 6:19
                                         // mir::Constant
                                         // + span: ui/macros/assert-macro-explicit.rs:6:5: 6:19
                                         // + literal: Const { ty: fn(&'static str) -> ! {core::panicking::panic}, val: Value(<ZST>) }
                                         // mir::Constant
                                         // + span: no-location
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
    }
}
