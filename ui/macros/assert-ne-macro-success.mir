// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
fn <impl at ui/macros/assert-ne-macro-success.rs:2:10: 2:19>::eq(_1: &Point, _2: &Point) -> bool {
    debug self => _1;                    // in scope 0 at ui/macros/assert-ne-macro-success.rs:2:10: 2:19
    debug other => _2;                   // in scope 0 at ui/macros/assert-ne-macro-success.rs:2:10: 2:19
    let mut _0: bool;                    // return place in scope 0 at ui/macros/assert-ne-macro-success.rs:2:10: 2:19
    let mut _3: isize;                   // in scope 0 at ui/macros/assert-ne-macro-success.rs:3:16: 3:25
    let mut _4: isize;                   // in scope 0 at ui/macros/assert-ne-macro-success.rs:3:16: 3:25

    bb0: {
        _3 = ((*_1).0: isize);           // scope 0 at ui/macros/assert-ne-macro-success.rs:3:16: 3:25
        _4 = ((*_2).0: isize);           // scope 0 at ui/macros/assert-ne-macro-success.rs:3:16: 3:25
        _0 = Eq(move _3, move _4);       // scope 0 at ui/macros/assert-ne-macro-success.rs:3:16: 3:25
        return;                          // scope 0 at ui/macros/assert-ne-macro-success.rs:2:19: 2:19
    }
}

fn <impl at ui/macros/assert-ne-macro-success.rs:2:21: 2:26>::fmt(_1: &Point, _2: &mut Formatter<'_>) -> Result<(), std::fmt::Error> {
    debug self => _1;                    // in scope 0 at ui/macros/assert-ne-macro-success.rs:2:21: 2:26
    debug f => _2;                       // in scope 0 at ui/macros/assert-ne-macro-success.rs:2:21: 2:26
    let mut _0: std::result::Result<(), std::fmt::Error>; // return place in scope 0 at ui/macros/assert-ne-macro-success.rs:2:21: 2:26
    let mut _3: &mut std::fmt::Formatter<'_>; // in scope 0 at ui/macros/assert-ne-macro-success.rs:2:21: 2:26
    let mut _4: &str;                    // in scope 0 at ui/macros/assert-ne-macro-success.rs:2:21: 2:26
    let _5: &str;                        // in scope 0 at ui/macros/assert-ne-macro-success.rs:2:21: 2:26
    let mut _6: &str;                    // in scope 0 at ui/macros/assert-ne-macro-success.rs:3:16: 3:25
    let _7: &str;                        // in scope 0 at ui/macros/assert-ne-macro-success.rs:3:16: 3:25
    let mut _8: &dyn std::fmt::Debug;    // in scope 0 at ui/macros/assert-ne-macro-success.rs:3:16: 3:25
    let mut _9: &&isize;                 // in scope 0 at ui/macros/assert-ne-macro-success.rs:3:16: 3:25
    let _10: &&isize;                    // in scope 0 at ui/macros/assert-ne-macro-success.rs:3:16: 3:25
    let _11: &isize;                     // in scope 0 at ui/macros/assert-ne-macro-success.rs:3:16: 3:25

    bb0: {
        _3 = &mut (*_2);                 // scope 0 at ui/macros/assert-ne-macro-success.rs:2:21: 2:26
        _5 = const "Point";              // scope 0 at ui/macros/assert-ne-macro-success.rs:2:21: 2:26
                                         // mir::Constant
                                         // + span: ui/macros/assert-ne-macro-success.rs:2:21: 2:26
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _4 = _5;                         // scope 0 at ui/macros/assert-ne-macro-success.rs:2:21: 2:26
        _7 = const "x";                  // scope 0 at ui/macros/assert-ne-macro-success.rs:3:16: 3:25
                                         // mir::Constant
                                         // + span: ui/macros/assert-ne-macro-success.rs:3:16: 3:25
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _6 = _7;                         // scope 0 at ui/macros/assert-ne-macro-success.rs:3:16: 3:25
        _11 = &((*_1).0: isize);         // scope 0 at ui/macros/assert-ne-macro-success.rs:3:16: 3:25
        _10 = &_11;                      // scope 0 at ui/macros/assert-ne-macro-success.rs:3:16: 3:25
        _9 = _10;                        // scope 0 at ui/macros/assert-ne-macro-success.rs:3:16: 3:25
        _8 = move _9 as &dyn std::fmt::Debug (Pointer(Unsize)); // scope 0 at ui/macros/assert-ne-macro-success.rs:3:16: 3:25
        _0 = Formatter::<'_>::debug_struct_field1_finish(move _3, move _4, move _6, move _8) -> bb1; // scope 0 at ui/macros/assert-ne-macro-success.rs:2:21: 2:26
                                         // mir::Constant
                                         // + span: ui/macros/assert-ne-macro-success.rs:2:21: 2:26
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: for<'b, 'a, 'c, 'd> fn(&'b mut Formatter<'_>, &'a str, &'c str, &'d (dyn Debug + 'd)) -> Result<(), std::fmt::Error> {Formatter::<'_>::debug_struct_field1_finish}, val: Value(<ZST>) }
    }

    bb1: {
        return;                          // scope 0 at ui/macros/assert-ne-macro-success.rs:2:26: 2:26
    }
}

fn main() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/macros/assert-ne-macro-success.rs:5:15: 5:15
    let mut _1: (&i32, &i32);            // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:88:15: 88:32
    let mut _2: &i32;                    // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:88:16: 88:22
    let mut _3: &i32;                    // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:88:24: 88:31
    let _4: &i32;                        // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:89:14: 89:22
    let _5: &i32;                        // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:89:24: 89:33
    let mut _7: (&std::string::String, &std::string::String); // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:88:15: 88:32
    let mut _8: &std::string::String;    // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:88:16: 88:22
    let _9: std::string::String;         // in scope 0 at ui/macros/assert-ne-macro-success.rs:7:16: 7:33
    let mut _10: &str;                   // in scope 0 at ui/macros/assert-ne-macro-success.rs:7:16: 7:33
    let _11: &str;                       // in scope 0 at ui/macros/assert-ne-macro-success.rs:7:16: 7:21
    let mut _12: &std::string::String;   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:88:24: 88:31
    let _13: std::string::String;        // in scope 0 at ui/macros/assert-ne-macro-success.rs:7:34: 7:51
    let mut _14: &str;                   // in scope 0 at ui/macros/assert-ne-macro-success.rs:7:34: 7:51
    let _15: &str;                       // in scope 0 at ui/macros/assert-ne-macro-success.rs:7:34: 7:39
    let _16: &std::string::String;       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:89:14: 89:22
    let _17: &std::string::String;       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:89:24: 89:33
    let mut _18: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:90:20: 90:43
    let mut _19: &std::string::String;   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:90:20: 90:29
    let mut _20: &std::string::String;   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:90:33: 90:43
    let _22: !;                          // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:95:21: 95:114
    let mut _23: core::panicking::AssertKind; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:95:54: 95:58
    let mut _24: &std::string::String;   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:95:60: 95:70
    let _25: &std::string::String;       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:95:60: 95:70
    let mut _26: &std::string::String;   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:95:72: 95:83
    let _27: &std::string::String;       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:95:72: 95:83
    let mut _28: std::option::Option<std::fmt::Arguments<'_>>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:95:85: 95:113
    let mut _29: (&std::boxed::Box<Point>, &std::boxed::Box<Point>); // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:88:15: 88:32
    let mut _30: &std::boxed::Box<Point>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:88:16: 88:22
    let _31: std::boxed::Box<Point>;     // in scope 0 at ui/macros/assert-ne-macro-success.rs:8:16: 8:38
    let mut _32: Point;                  // in scope 0 at ui/macros/assert-ne-macro-success.rs:8:25: 8:37
    let mut _33: &std::boxed::Box<Point>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:88:24: 88:31
    let _34: std::boxed::Box<Point>;     // in scope 0 at ui/macros/assert-ne-macro-success.rs:8:39: 8:60
    let mut _35: Point;                  // in scope 0 at ui/macros/assert-ne-macro-success.rs:8:48: 8:59
    let _36: &std::boxed::Box<Point>;    // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:89:14: 89:22
    let _37: &std::boxed::Box<Point>;    // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:89:24: 89:33
    let mut _38: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:90:20: 90:43
    let mut _39: &std::boxed::Box<Point>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:90:20: 90:29
    let mut _40: &std::boxed::Box<Point>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:90:33: 90:43
    let _42: !;                          // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:95:21: 95:114
    let mut _43: core::panicking::AssertKind; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:95:54: 95:58
    let mut _44: &std::boxed::Box<Point>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:95:60: 95:70
    let _45: &std::boxed::Box<Point>;    // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:95:60: 95:70
    let mut _46: &std::boxed::Box<Point>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:95:72: 95:83
    let _47: &std::boxed::Box<Point>;    // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:95:72: 95:83
    let mut _48: std::option::Option<std::fmt::Arguments<'_>>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:95:85: 95:113
    let mut _49: (&&Point, &&Point);     // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:88:15: 88:32
    let mut _50: &&Point;                // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:88:16: 88:22
    let mut _51: &&Point;                // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:88:24: 88:31
    let _52: &&Point;                    // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:89:14: 89:22
    let _53: &&Point;                    // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:89:24: 89:33
    let mut _54: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:90:20: 90:43
    let mut _55: &&Point;                // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:90:20: 90:29
    let mut _56: &&Point;                // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:90:33: 90:43
    let _58: !;                          // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:95:21: 95:114
    let mut _59: core::panicking::AssertKind; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:95:54: 95:58
    let mut _60: &&Point;                // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:95:60: 95:70
    let _61: &&Point;                    // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:95:60: 95:70
    let mut _62: &&Point;                // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:95:72: 95:83
    let _63: &&Point;                    // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:95:72: 95:83
    let mut _64: std::option::Option<std::fmt::Arguments<'_>>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:95:85: 95:113
    let mut _65: (&i32, &i32);           // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:101:15: 101:36
    let mut _66: &i32;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:101:16: 101:24
    let mut _67: &i32;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:101:26: 101:35
    let _68: &i32;                       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:102:14: 102:22
    let _69: &i32;                       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:102:24: 102:33
    let mut _71: (&i32, &i32);           // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:101:15: 101:36
    let mut _72: &i32;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:101:16: 101:24
    let mut _73: &i32;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:101:26: 101:35
    let _74: &i32;                       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:102:14: 102:22
    let _75: &i32;                       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:102:24: 102:33
    let mut _77: (&i32, &i32);           // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:101:15: 101:36
    let mut _78: &i32;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:101:16: 101:24
    let mut _79: &i32;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:101:26: 101:35
    let _80: &i32;                       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:102:14: 102:22
    let _81: &i32;                       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:102:24: 102:33
    let mut _83: &i32;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:101:26: 101:35
    let mut _84: &i32;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:101:16: 101:24
    let mut _85: &i32;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:101:26: 101:35
    let mut _86: &i32;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:101:16: 101:24
    let mut _87: &i32;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:101:26: 101:35
    let mut _88: &i32;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:101:16: 101:24
    let mut _89: &&Point;                // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:88:24: 88:31
    let mut _90: &&Point;                // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:88:16: 88:22
    let mut _91: &i32;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:88:24: 88:31
    let mut _92: &i32;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:88:16: 88:22
    scope 1 {
        debug left_val => _4;            // in scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:89:14: 89:22
        debug right_val => _5;           // in scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:89:24: 89:33
        let _6: core::panicking::AssertKind; // in scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:91:25: 91:29
        scope 2 {
            debug kind => _6;            // in scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:91:25: 91:29
        }
    }
    scope 3 {
        debug left_val => _16;           // in scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:89:14: 89:22
        debug right_val => _17;          // in scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:89:24: 89:33
        let _21: core::panicking::AssertKind; // in scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:91:25: 91:29
        scope 4 {
            debug kind => _21;           // in scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:91:25: 91:29
        }
    }
    scope 5 {
        debug left_val => _36;           // in scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:89:14: 89:22
        debug right_val => _37;          // in scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:89:24: 89:33
        let _41: core::panicking::AssertKind; // in scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:91:25: 91:29
        scope 6 {
            debug kind => _41;           // in scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:91:25: 91:29
        }
    }
    scope 7 {
        debug left_val => _52;           // in scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:89:14: 89:22
        debug right_val => _53;          // in scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:89:24: 89:33
        let _57: core::panicking::AssertKind; // in scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:91:25: 91:29
        scope 8 {
            debug kind => _57;           // in scope 8 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:91:25: 91:29
        }
    }
    scope 9 {
        debug left_val => _68;           // in scope 9 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:102:14: 102:22
        debug right_val => _69;          // in scope 9 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:102:24: 102:33
        let _70: core::panicking::AssertKind; // in scope 9 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:104:25: 104:29
        scope 10 {
            debug kind => _70;           // in scope 10 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:104:25: 104:29
        }
    }
    scope 11 {
        debug left_val => _74;           // in scope 11 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:102:14: 102:22
        debug right_val => _75;          // in scope 11 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:102:24: 102:33
        let _76: core::panicking::AssertKind; // in scope 11 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:104:25: 104:29
        scope 12 {
            debug kind => _76;           // in scope 12 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:104:25: 104:29
        }
    }
    scope 13 {
        debug left_val => _80;           // in scope 13 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:102:14: 102:22
        debug right_val => _81;          // in scope 13 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:102:24: 102:33
        let _82: core::panicking::AssertKind; // in scope 13 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:104:25: 104:29
        scope 14 {
            debug kind => _82;           // in scope 14 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:104:25: 104:29
        }
    }

    bb0: {
        _92 = const _;                   // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:88:16: 88:22
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:88:16: 88:22
                                         // + literal: Const { ty: &i32, val: Unevaluated(main, [], Some(promoted[17])) }
        _2 = _92;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:88:16: 88:22
        _91 = const _;                   // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:88:24: 88:31
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:88:24: 88:31
                                         // + literal: Const { ty: &i32, val: Unevaluated(main, [], Some(promoted[16])) }
        _3 = _91;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:88:24: 88:31
        _1 = (move _2, move _3);         // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:88:15: 88:32
        _4 = (_1.0: &i32);               // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:89:14: 89:22
        _5 = (_1.1: &i32);               // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:89:24: 89:33
        _11 = const "666";               // scope 0 at ui/macros/assert-ne-macro-success.rs:7:16: 7:21
                                         // mir::Constant
                                         // + span: ui/macros/assert-ne-macro-success.rs:7:16: 7:21
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _10 = _11;                       // scope 0 at ui/macros/assert-ne-macro-success.rs:7:16: 7:33
        _9 = <str as ToString>::to_string(move _10) -> bb1; // scope 0 at ui/macros/assert-ne-macro-success.rs:7:16: 7:33
                                         // mir::Constant
                                         // + span: ui/macros/assert-ne-macro-success.rs:7:22: 7:31
                                         // + literal: Const { ty: for<'a> fn(&'a str) -> String {<str as ToString>::to_string}, val: Value(<ZST>) }
    }

    bb1: {
        _8 = &_9;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:88:16: 88:22
        _15 = const "abc";               // scope 0 at ui/macros/assert-ne-macro-success.rs:7:34: 7:39
                                         // mir::Constant
                                         // + span: ui/macros/assert-ne-macro-success.rs:7:34: 7:39
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _14 = _15;                       // scope 0 at ui/macros/assert-ne-macro-success.rs:7:34: 7:51
        _13 = <str as ToString>::to_string(move _14) -> [return: bb2, unwind: bb21]; // scope 0 at ui/macros/assert-ne-macro-success.rs:7:34: 7:51
                                         // mir::Constant
                                         // + span: ui/macros/assert-ne-macro-success.rs:7:40: 7:49
                                         // + literal: Const { ty: for<'a> fn(&'a str) -> String {<str as ToString>::to_string}, val: Value(<ZST>) }
    }

    bb2: {
        _12 = &_13;                      // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:88:24: 88:31
        _7 = (move _8, move _12);        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:88:15: 88:32
        _16 = (_7.0: &std::string::String); // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:89:14: 89:22
        _17 = (_7.1: &std::string::String); // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:89:24: 89:33
        _19 = _16;                       // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:90:20: 90:29
        _20 = _17;                       // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:90:33: 90:43
        _18 = <String as PartialEq>::eq(move _19, move _20) -> [return: bb3, unwind: bb20]; // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:90:20: 90:43
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:90:20: 90:43
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a String, &'b String) -> bool {<String as PartialEq>::eq}, val: Value(<ZST>) }
    }

    bb3: {
        switchInt(move _18) -> [0: bb5, otherwise: bb4]; // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:90:20: 90:43
    }

    bb4: {
        _21 = const core::panicking::AssertKind::Ne; // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:91:32: 91:65
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:91:32: 91:65
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x01)) }
        _23 = const core::panicking::AssertKind::Ne; // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:95:54: 95:58
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:95:54: 95:58
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x01)) }
        _25 = _16;                       // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:95:60: 95:70
        _24 = _25;                       // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:95:60: 95:70
        _27 = _17;                       // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:95:72: 95:83
        _26 = _27;                       // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:95:72: 95:83
        _28 = Option::<Arguments<'_>>::None; // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:95:85: 95:113
        _22 = core::panicking::assert_failed::<String, String>(move _23, move _24, move _26, move _28) -> bb20; // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:95:21: 95:114
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:95:21: 95:53
                                         // + literal: Const { ty: for<'a, 'b, 'c> fn(core::panicking::AssertKind, &'a String, &'b String, Option<Arguments<'c>>) -> ! {core::panicking::assert_failed::<String, String>}, val: Value(<ZST>) }
    }

    bb5: {
        drop(_13) -> [return: bb6, unwind: bb21]; // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:98:9: 98:10
    }

    bb6: {
        drop(_9) -> bb7;                 // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:98:9: 98:10
    }

    bb7: {
        _32 = const Point {{ x: 666_isize }}; // scope 0 at ui/macros/assert-ne-macro-success.rs:8:25: 8:37
                                         // mir::Constant
                                         // + span: ui/macros/assert-ne-macro-success.rs:8:25: 8:37
                                         // + literal: Const { ty: Point, val: Value(Scalar(0x000000000000029a)) }
        _31 = Box::<Point>::new(move _32) -> bb8; // scope 0 at ui/macros/assert-ne-macro-success.rs:8:16: 8:38
                                         // mir::Constant
                                         // + span: ui/macros/assert-ne-macro-success.rs:8:16: 8:24
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: fn(Point) -> Box<Point> {Box::<Point>::new}, val: Value(<ZST>) }
    }

    bb8: {
        _30 = &_31;                      // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:88:16: 88:22
        _35 = const Point {{ x: 34_isize }}; // scope 0 at ui/macros/assert-ne-macro-success.rs:8:48: 8:59
                                         // mir::Constant
                                         // + span: ui/macros/assert-ne-macro-success.rs:8:48: 8:59
                                         // + literal: Const { ty: Point, val: Value(Scalar(0x0000000000000022)) }
        _34 = Box::<Point>::new(move _35) -> [return: bb9, unwind: bb19]; // scope 0 at ui/macros/assert-ne-macro-success.rs:8:39: 8:60
                                         // mir::Constant
                                         // + span: ui/macros/assert-ne-macro-success.rs:8:39: 8:47
                                         // + user_ty: UserType(1)
                                         // + literal: Const { ty: fn(Point) -> Box<Point> {Box::<Point>::new}, val: Value(<ZST>) }
    }

    bb9: {
        _33 = &_34;                      // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:88:24: 88:31
        _29 = (move _30, move _33);      // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:88:15: 88:32
        _36 = (_29.0: &std::boxed::Box<Point>); // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:89:14: 89:22
        _37 = (_29.1: &std::boxed::Box<Point>); // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:89:24: 89:33
        _39 = _36;                       // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:90:20: 90:29
        _40 = _37;                       // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:90:33: 90:43
        _38 = <Box<Point> as PartialEq>::eq(move _39, move _40) -> [return: bb10, unwind: bb18]; // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:90:20: 90:43
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:90:20: 90:43
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a Box<Point>, &'b Box<Point>) -> bool {<Box<Point> as PartialEq>::eq}, val: Value(<ZST>) }
    }

    bb10: {
        switchInt(move _38) -> [0: bb12, otherwise: bb11]; // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:90:20: 90:43
    }

    bb11: {
        _41 = const core::panicking::AssertKind::Ne; // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:91:32: 91:65
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:91:32: 91:65
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x01)) }
        _43 = const core::panicking::AssertKind::Ne; // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:95:54: 95:58
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:95:54: 95:58
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x01)) }
        _45 = _36;                       // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:95:60: 95:70
        _44 = _45;                       // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:95:60: 95:70
        _47 = _37;                       // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:95:72: 95:83
        _46 = _47;                       // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:95:72: 95:83
        _48 = Option::<Arguments<'_>>::None; // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:95:85: 95:113
        _42 = core::panicking::assert_failed::<Box<Point>, Box<Point>>(move _43, move _44, move _46, move _48) -> bb18; // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:95:21: 95:114
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:95:21: 95:53
                                         // + literal: Const { ty: for<'a, 'b, 'c> fn(core::panicking::AssertKind, &'a Box<Point>, &'b Box<Point>, Option<Arguments<'c>>) -> ! {core::panicking::assert_failed::<Box<Point>, Box<Point>>}, val: Value(<ZST>) }
    }

    bb12: {
        drop(_34) -> [return: bb13, unwind: bb19]; // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:98:9: 98:10
    }

    bb13: {
        drop(_31) -> bb14;               // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:98:9: 98:10
    }

    bb14: {
        _90 = const _;                   // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:88:16: 88:22
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:88:16: 88:22
                                         // + literal: Const { ty: &&Point, val: Unevaluated(main, [], Some(promoted[15])) }
        _50 = _90;                       // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:88:16: 88:22
        _89 = const _;                   // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:88:24: 88:31
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:88:24: 88:31
                                         // + literal: Const { ty: &&Point, val: Unevaluated(main, [], Some(promoted[14])) }
        _51 = _89;                       // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:88:24: 88:31
        _49 = (move _50, move _51);      // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:88:15: 88:32
        _52 = (_49.0: &&Point);          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:89:14: 89:22
        _53 = (_49.1: &&Point);          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:89:24: 89:33
        _55 = _52;                       // scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:90:20: 90:29
        _56 = _53;                       // scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:90:33: 90:43
        _54 = <&Point as PartialEq>::eq(move _55, move _56) -> bb15; // scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:90:20: 90:43
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:90:20: 90:43
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a &Point, &'b &Point) -> bool {<&Point as PartialEq>::eq}, val: Value(<ZST>) }
    }

    bb15: {
        switchInt(move _54) -> [0: bb17, otherwise: bb16]; // scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:90:20: 90:43
    }

    bb16: {
        _57 = const core::panicking::AssertKind::Ne; // scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:91:32: 91:65
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:91:32: 91:65
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x01)) }
        _59 = const core::panicking::AssertKind::Ne; // scope 8 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:95:54: 95:58
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:95:54: 95:58
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x01)) }
        _61 = _52;                       // scope 8 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:95:60: 95:70
        _60 = _61;                       // scope 8 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:95:60: 95:70
        _63 = _53;                       // scope 8 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:95:72: 95:83
        _62 = _63;                       // scope 8 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:95:72: 95:83
        _64 = Option::<Arguments<'_>>::None; // scope 8 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:95:85: 95:113
        _58 = core::panicking::assert_failed::<&Point, &Point>(move _59, move _60, move _62, move _64); // scope 8 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:95:21: 95:114
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:95:21: 95:53
                                         // + literal: Const { ty: for<'a, 'b, 'c> fn(core::panicking::AssertKind, &'a &Point, &'b &Point, Option<Arguments<'c>>) -> ! {core::panicking::assert_failed::<&Point, &Point>}, val: Value(<ZST>) }
    }

    bb17: {
        _88 = const _;                   // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:101:16: 101:24
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:101:16: 101:24
                                         // + literal: Const { ty: &i32, val: Unevaluated(main, [], Some(promoted[13])) }
        _66 = _88;                       // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:101:16: 101:24
        _87 = const _;                   // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:101:26: 101:35
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:101:26: 101:35
                                         // + literal: Const { ty: &i32, val: Unevaluated(main, [], Some(promoted[12])) }
        _67 = _87;                       // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:101:26: 101:35
        _65 = (move _66, move _67);      // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:101:15: 101:36
        _68 = (_65.0: &i32);             // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:102:14: 102:22
        _69 = (_65.1: &i32);             // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:102:24: 102:33
        _86 = const _;                   // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:101:16: 101:24
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:101:16: 101:24
                                         // + literal: Const { ty: &i32, val: Unevaluated(main, [], Some(promoted[9])) }
        _72 = _86;                       // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:101:16: 101:24
        _85 = const _;                   // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:101:26: 101:35
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:101:26: 101:35
                                         // + literal: Const { ty: &i32, val: Unevaluated(main, [], Some(promoted[8])) }
        _73 = _85;                       // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:101:26: 101:35
        _71 = (move _72, move _73);      // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:101:15: 101:36
        _74 = (_71.0: &i32);             // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:102:14: 102:22
        _75 = (_71.1: &i32);             // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:102:24: 102:33
        _84 = const _;                   // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:101:16: 101:24
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:101:16: 101:24
                                         // + literal: Const { ty: &i32, val: Unevaluated(main, [], Some(promoted[5])) }
        _78 = _84;                       // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:101:16: 101:24
        _83 = const _;                   // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:101:26: 101:35
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:101:26: 101:35
                                         // + literal: Const { ty: &i32, val: Unevaluated(main, [], Some(promoted[4])) }
        _79 = _83;                       // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:101:26: 101:35
        _77 = (move _78, move _79);      // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:101:15: 101:36
        _80 = (_77.0: &i32);             // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:102:14: 102:22
        _81 = (_77.1: &i32);             // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:102:24: 102:33
        return;                          // scope 0 at ui/macros/assert-ne-macro-success.rs:13:2: 13:2
    }

    bb18 (cleanup): {
        drop(_34) -> bb19;               // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:98:9: 98:10
    }

    bb19 (cleanup): {
        drop(_31) -> bb22;               // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:98:9: 98:10
    }

    bb20 (cleanup): {
        drop(_13) -> bb21;               // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:98:9: 98:10
    }

    bb21 (cleanup): {
        drop(_9) -> bb22;                // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:98:9: 98:10
    }

    bb22 (cleanup): {
        resume;                          // scope 0 at ui/macros/assert-ne-macro-success.rs:5:1: 13:2
    }
}

promoted[0] in main: &i32 = {
    let mut _0: &i32;                    // return place in scope 0 at ui/macros/assert-ne-macro-success.rs:12:60: 12:61
    let mut _1: i32;                     // in scope 0 at ui/macros/assert-ne-macro-success.rs:12:60: 12:61

    bb0: {
        _1 = const 6_i32;                // scope 0 at ui/macros/assert-ne-macro-success.rs:12:60: 12:61
        _0 = &_1;                        // scope 0 at ui/macros/assert-ne-macro-success.rs:12:60: 12:61
        return;                          // scope 0 at ui/macros/assert-ne-macro-success.rs:12:60: 12:61
    }
}

promoted[1] in main: &i32 = {
    let mut _0: &i32;                    // return place in scope 0 at ui/macros/assert-ne-macro-success.rs:12:53: 12:54
    let mut _1: i32;                     // in scope 0 at ui/macros/assert-ne-macro-success.rs:12:53: 12:54

    bb0: {
        _1 = const 6_i32;                // scope 0 at ui/macros/assert-ne-macro-success.rs:12:53: 12:54
        _0 = &_1;                        // scope 0 at ui/macros/assert-ne-macro-success.rs:12:53: 12:54
        return;                          // scope 0 at ui/macros/assert-ne-macro-success.rs:12:53: 12:54
    }
}

promoted[2] in main: &i32 = {
    let mut _0: &i32;                    // return place in scope 0 at ui/macros/assert-ne-macro-success.rs:12:46: 12:47
    let mut _1: i32;                     // in scope 0 at ui/macros/assert-ne-macro-success.rs:12:46: 12:47

    bb0: {
        _1 = const 6_i32;                // scope 0 at ui/macros/assert-ne-macro-success.rs:12:46: 12:47
        _0 = &_1;                        // scope 0 at ui/macros/assert-ne-macro-success.rs:12:46: 12:47
        return;                          // scope 0 at ui/macros/assert-ne-macro-success.rs:12:46: 12:47
    }
}

promoted[3] in main: &[&str; 3] = {
    let mut _0: &[&str; 3];              // return place in scope 0 at ui/macros/assert-ne-macro-success.rs:12:25: 12:40
    let mut _1: [&str; 3];               // in scope 0 at ui/macros/assert-ne-macro-success.rs:12:25: 12:40

    bb0: {
        _1 = [const "", const ", ", const ", "]; // scope 0 at ui/macros/assert-ne-macro-success.rs:12:25: 12:40
                                         // mir::Constant
                                         // + span: ui/macros/assert-ne-macro-success.rs:12:25: 12:40
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
                                         // mir::Constant
                                         // + span: ui/macros/assert-ne-macro-success.rs:12:25: 12:40
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
                                         // mir::Constant
                                         // + span: ui/macros/assert-ne-macro-success.rs:12:25: 12:40
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at ui/macros/assert-ne-macro-success.rs:12:25: 12:40
        return;                          // scope 0 at ui/macros/assert-ne-macro-success.rs:12:25: 12:40
    }
}

promoted[4] in main: &i32 = {
    let mut _0: &i32;                    // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:101:26: 101:35
    let mut _1: i32;                     // in scope 0 at ui/macros/assert-ne-macro-success.rs:12:21: 12:23

    bb0: {
        _1 = const 42_i32;               // scope 0 at ui/macros/assert-ne-macro-success.rs:12:21: 12:23
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:101:26: 101:35
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:101:26: 101:35
    }
}

promoted[5] in main: &i32 = {
    let mut _0: &i32;                    // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:101:16: 101:24
    let mut _1: i32;                     // in scope 0 at ui/macros/assert-ne-macro-success.rs:12:16: 12:19

    bb0: {
        _1 = const 666_i32;              // scope 0 at ui/macros/assert-ne-macro-success.rs:12:16: 12:19
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:101:16: 101:24
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:101:16: 101:24
    }
}

promoted[6] in main: &&str = {
    let mut _0: &&str;                   // return place in scope 0 at ui/macros/assert-ne-macro-success.rs:11:35: 11:38
    let mut _1: &str;                    // in scope 0 at ui/macros/assert-ne-macro-success.rs:11:35: 11:38

    bb0: {
        _1 = const "6";                  // scope 0 at ui/macros/assert-ne-macro-success.rs:11:35: 11:38
                                         // mir::Constant
                                         // + span: ui/macros/assert-ne-macro-success.rs:11:35: 11:38
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at ui/macros/assert-ne-macro-success.rs:11:35: 11:38
        return;                          // scope 0 at ui/macros/assert-ne-macro-success.rs:11:35: 11:38
    }
}

promoted[7] in main: &[&str; 2] = {
    let mut _0: &[&str; 2];              // return place in scope 0 at ui/macros/assert-ne-macro-success.rs:11:25: 11:33
    let mut _1: [&str; 2];               // in scope 0 at ui/macros/assert-ne-macro-success.rs:11:25: 11:33

    bb0: {
        _1 = [const "6 ", const " 6"];   // scope 0 at ui/macros/assert-ne-macro-success.rs:11:25: 11:33
                                         // mir::Constant
                                         // + span: ui/macros/assert-ne-macro-success.rs:11:25: 11:33
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
                                         // mir::Constant
                                         // + span: ui/macros/assert-ne-macro-success.rs:11:25: 11:33
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at ui/macros/assert-ne-macro-success.rs:11:25: 11:33
        return;                          // scope 0 at ui/macros/assert-ne-macro-success.rs:11:25: 11:33
    }
}

promoted[8] in main: &i32 = {
    let mut _0: &i32;                    // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:101:26: 101:35
    let mut _1: i32;                     // in scope 0 at ui/macros/assert-ne-macro-success.rs:11:21: 11:23

    bb0: {
        _1 = const 42_i32;               // scope 0 at ui/macros/assert-ne-macro-success.rs:11:21: 11:23
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:101:26: 101:35
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:101:26: 101:35
    }
}

promoted[9] in main: &i32 = {
    let mut _0: &i32;                    // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:101:16: 101:24
    let mut _1: i32;                     // in scope 0 at ui/macros/assert-ne-macro-success.rs:11:16: 11:19

    bb0: {
        _1 = const 666_i32;              // scope 0 at ui/macros/assert-ne-macro-success.rs:11:16: 11:19
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:101:16: 101:24
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:101:16: 101:24
    }
}

promoted[10] in main: &[core::fmt::ArgumentV1<'_>; 0] = {
    let mut _0: &[core::fmt::ArgumentV1<'_>; 0]; // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:108:114: 108:144
    let mut _1: [core::fmt::ArgumentV1<'_>; 0]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:108:114: 108:144

    bb0: {
        _1 = [];                         // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:108:114: 108:144
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:108:114: 108:144
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:108:114: 108:144
    }
}

promoted[11] in main: &[&str; 1] = {
    let mut _0: &[&str; 1];              // return place in scope 0 at ui/macros/assert-ne-macro-success.rs:10:25: 10:45
    let mut _1: [&str; 1];               // in scope 0 at ui/macros/assert-ne-macro-success.rs:10:25: 10:45

    bb0: {
        _1 = [const "no gods no masters"]; // scope 0 at ui/macros/assert-ne-macro-success.rs:10:25: 10:45
                                         // mir::Constant
                                         // + span: ui/macros/assert-ne-macro-success.rs:10:25: 10:45
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at ui/macros/assert-ne-macro-success.rs:10:25: 10:45
        return;                          // scope 0 at ui/macros/assert-ne-macro-success.rs:10:25: 10:45
    }
}

promoted[12] in main: &i32 = {
    let mut _0: &i32;                    // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:101:26: 101:35
    let mut _1: i32;                     // in scope 0 at ui/macros/assert-ne-macro-success.rs:10:21: 10:23

    bb0: {
        _1 = const 42_i32;               // scope 0 at ui/macros/assert-ne-macro-success.rs:10:21: 10:23
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:101:26: 101:35
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:101:26: 101:35
    }
}

promoted[13] in main: &i32 = {
    let mut _0: &i32;                    // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:101:16: 101:24
    let mut _1: i32;                     // in scope 0 at ui/macros/assert-ne-macro-success.rs:10:16: 10:19

    bb0: {
        _1 = const 666_i32;              // scope 0 at ui/macros/assert-ne-macro-success.rs:10:16: 10:19
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:101:16: 101:24
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:101:16: 101:24
    }
}

promoted[14] in main: &&Point = {
    let mut _0: &&Point;                 // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:88:24: 88:31
    let mut _1: &Point;                  // in scope 0 at ui/macros/assert-ne-macro-success.rs:9:30: 9:42
    let mut _2: Point;                   // in scope 0 at ui/macros/assert-ne-macro-success.rs:9:31: 9:42

    bb0: {
        _2 = Point { x: const 34_isize }; // scope 0 at ui/macros/assert-ne-macro-success.rs:9:31: 9:42
        _1 = &_2;                        // scope 0 at ui/macros/assert-ne-macro-success.rs:9:30: 9:42
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:88:24: 88:31
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:88:24: 88:31
    }
}

promoted[15] in main: &&Point = {
    let mut _0: &&Point;                 // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:88:16: 88:22
    let mut _1: &Point;                  // in scope 0 at ui/macros/assert-ne-macro-success.rs:9:16: 9:29
    let mut _2: Point;                   // in scope 0 at ui/macros/assert-ne-macro-success.rs:9:17: 9:29

    bb0: {
        _2 = Point { x: const 666_isize }; // scope 0 at ui/macros/assert-ne-macro-success.rs:9:17: 9:29
        _1 = &_2;                        // scope 0 at ui/macros/assert-ne-macro-success.rs:9:16: 9:29
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:88:16: 88:22
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:88:16: 88:22
    }
}

promoted[16] in main: &i32 = {
    let mut _0: &i32;                    // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:88:24: 88:31
    let mut _1: i32;                     // in scope 0 at ui/macros/assert-ne-macro-success.rs:6:20: 6:22

    bb0: {
        _1 = const 14_i32;               // scope 0 at ui/macros/assert-ne-macro-success.rs:6:20: 6:22
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:88:24: 88:31
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:88:24: 88:31
    }
}

promoted[17] in main: &i32 = {
    let mut _0: &i32;                    // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:88:16: 88:22
    let mut _1: i32;                     // in scope 0 at ui/macros/assert-ne-macro-success.rs:6:16: 6:19

    bb0: {
        _1 = const 666_i32;              // scope 0 at ui/macros/assert-ne-macro-success.rs:6:16: 6:19
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:88:16: 88:22
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:88:16: 88:22
    }
}
