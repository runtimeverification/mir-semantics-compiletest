// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
fn main() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/macros/unreachable-format-arg.rs:12:11: 12:11
    let _1: i32;                         // in scope 0 at ui/macros/unreachable-format-arg.rs:13:9: 13:10
    let _2: !;                           // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/panic.rs:73:9: 73:54
    let mut _3: &&str;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/panic.rs:73:48: 73:53
    let _4: &&str;                       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/panic.rs:73:48: 73:53
    scope 1 {
        debug x => _1;                   // in scope 1 at ui/macros/unreachable-format-arg.rs:13:9: 13:10
        let mut _5: &&str;               // in scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/panic.rs:73:48: 73:53
    }

    bb0: {
        _1 = const 5_i32;                // scope 0 at ui/macros/unreachable-format-arg.rs:13:13: 13:14
        _5 = const _;                    // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/panic.rs:73:48: 73:53
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/panic.rs:73:48: 73:53
                                         // + literal: Const { ty: &&str, val: Unevaluated(main, [], Some(promoted[0])) }
        _4 = _5;                         // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/panic.rs:73:48: 73:53
        _3 = _4;                         // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/panic.rs:73:48: 73:53
        _2 = core::panicking::unreachable_display::<&str>(move _3); // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/panic.rs:73:9: 73:54
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/panic.rs:73:9: 73:47
                                         // + literal: Const { ty: for<'a> fn(&'a &str) -> ! {core::panicking::unreachable_display::<&str>}, val: Value(<ZST>) }
    }
}

promoted[0] in main: &&str = {
    let mut _0: &&str;                   // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/panic.rs:73:48: 73:53
    let mut _1: &str;                    // in scope 0 at ui/macros/unreachable-format-arg.rs:14:18: 14:28

    bb0: {
        _1 = const "x is {x}";           // scope 0 at ui/macros/unreachable-format-arg.rs:14:18: 14:28
                                         // mir::Constant
                                         // + span: ui/macros/unreachable-format-arg.rs:14:18: 14:28
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/panic.rs:73:48: 73:53
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/panic.rs:73:48: 73:53
    }
}
