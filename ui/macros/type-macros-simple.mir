// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
fn main() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/macros/type-macros-simple.rs:8:11: 8:11
    let _1: (i32, i32);                  // in scope 0 at ui/macros/type-macros-simple.rs:9:9: 9:10
    scope 1 {
        debug x => _1;                   // in scope 1 at ui/macros/type-macros-simple.rs:9:9: 9:10
    }

    bb0: {
        _1 = const (1_i32, 2_i32);       // scope 0 at ui/macros/type-macros-simple.rs:9:31: 9:37
        return;                          // scope 0 at ui/macros/type-macros-simple.rs:10:2: 10:2
    }
}

fn issue_36540() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/macros/type-macros-simple.rs:12:18: 12:18
    let _1: i32;                         // in scope 0 at ui/macros/type-macros-simple.rs:13:9: 13:12
    let _3: std::cell::Cell<i32>;        // in scope 0 at ui/macros/type-macros-simple.rs:18:5: 18:39
    let mut _4: i32;                     // in scope 0 at ui/macros/type-macros-simple.rs:14:30: 14:33
    scope 1 {
        debug i32 => _1;                 // in scope 1 at ui/macros/type-macros-simple.rs:13:9: 13:12
        let _2: i32;                     // in scope 1 at ui/macros/type-macros-simple.rs:17:9: 17:10
        scope 2 {
            debug x => _2;               // in scope 2 at ui/macros/type-macros-simple.rs:17:9: 17:10
        }
    }

    bb0: {
        _1 = const 0_i32;                // scope 0 at ui/macros/type-macros-simple.rs:13:15: 13:16
        _2 = const 0_i32;                // scope 1 at ui/macros/type-macros-simple.rs:14:30: 14:33
        _4 = const 0_i32;                // scope 2 at ui/macros/type-macros-simple.rs:14:30: 14:33
        _3 = Cell::<i32>::new(move _4) -> bb1; // scope 2 at ui/macros/type-macros-simple.rs:18:5: 18:39
                                         // mir::Constant
                                         // + span: ui/macros/type-macros-simple.rs:18:5: 18:33
                                         // + user_ty: UserType(2)
                                         // + literal: Const { ty: fn(i32) -> Cell<i32> {Cell::<i32>::new}, val: Value(<ZST>) }
    }

    bb1: {
        return;                          // scope 0 at ui/macros/type-macros-simple.rs:27:2: 27:2
    }
}

fn issue_36540::<impl at ui/macros/type-macros-simple.rs:19:5: 19:59>::index(_1: &dyn Trait<(i32, T)>, _2: i32) -> &i32 {
    debug self => _1;                    // in scope 0 at ui/macros/type-macros-simple.rs:23:18: 23:23
    debug i => _2;                       // in scope 0 at ui/macros/type-macros-simple.rs:23:25: 23:26
    let mut _0: &i32;                    // return place in scope 0 at ui/macros/type-macros-simple.rs:23:37: 23:42
    let mut _3: !;                       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:706:9: 706:52

    bb0: {
        _3 = core::panicking::panic(const "not implemented"); // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:706:9: 706:52
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:706:9: 706:33
                                         // + literal: Const { ty: fn(&'static str) -> ! {core::panicking::panic}, val: Value(<ZST>) }
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:706:34: 706:51
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
    }
}

fn S(_1: i32, _2: T) -> S<T> {
    let mut _0: issue_36540::S<T>;       // return place in scope 0 at ui/macros/type-macros-simple.rs:15:5: 15:23

    bb0: {
        _0 = S::<T>(move _1, move _2);   // scope 0 at ui/macros/type-macros-simple.rs:15:5: 15:23
        return;                          // scope 0 at ui/macros/type-macros-simple.rs:15:5: 15:23
    }
}

// MIR FOR CTFE
fn S(_1: i32, _2: T) -> S<T> {
    let mut _0: issue_36540::S<T>;       // return place in scope 0 at ui/macros/type-macros-simple.rs:15:5: 15:23

    bb0: {
        _0 = S::<T>(move _1, move _2);   // scope 0 at ui/macros/type-macros-simple.rs:15:5: 15:23
        return;                          // scope 0 at ui/macros/type-macros-simple.rs:15:5: 15:23
    }
}
