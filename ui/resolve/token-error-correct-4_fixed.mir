// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
fn setsuna(_1: ()) -> () {
    let mut _0: ();                      // return place in scope 0 at ui/resolve/token-error-correct-4_fixed.rs:4:19: 4:19

    bb0: {
        return;                          // scope 0 at ui/resolve/token-error-correct-4_fixed.rs:4:21: 4:21
    }
}

fn kazusa() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/resolve/token-error-correct-4_fixed.rs:6:13: 6:13

    bb0: {
        return;                          // scope 0 at ui/resolve/token-error-correct-4_fixed.rs:6:15: 6:15
    }
}

fn main() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/resolve/token-error-correct-4_fixed.rs:8:11: 8:11
    let _1: ();                          // in scope 0 at ui/resolve/token-error-correct-4_fixed.rs:9:5: 9:22
    let mut _2: ();                      // in scope 0 at ui/resolve/token-error-correct-4_fixed.rs:9:13: 9:21

    bb0: {
        _2 = kazusa() -> bb1;            // scope 0 at ui/resolve/token-error-correct-4_fixed.rs:9:13: 9:21
                                         // mir::Constant
                                         // + span: ui/resolve/token-error-correct-4_fixed.rs:9:13: 9:19
                                         // + literal: Const { ty: fn() {kazusa}, val: Value(<ZST>) }
    }

    bb1: {
        _1 = setsuna(move _2) -> bb2;    // scope 0 at ui/resolve/token-error-correct-4_fixed.rs:9:5: 9:22
                                         // mir::Constant
                                         // + span: ui/resolve/token-error-correct-4_fixed.rs:9:5: 9:12
                                         // + literal: Const { ty: fn(()) {setsuna}, val: Value(<ZST>) }
    }

    bb2: {
        return;                          // scope 0 at ui/resolve/token-error-correct-4_fixed.rs:10:2: 10:2
    }
}
