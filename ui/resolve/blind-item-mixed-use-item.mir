// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
fn f(_1: T, _2: ()) -> () {
    let mut _0: ();                      // return place in scope 0 at ui/resolve/blind-item-mixed-use-item.rs:5:30: 5:30

    bb0: {
        drop(_1) -> bb1;                 // scope 0 at ui/resolve/blind-item-mixed-use-item.rs:5:32: 5:33
    }

    bb1: {
        return;                          // scope 0 at ui/resolve/blind-item-mixed-use-item.rs:5:33: 5:33
    }
}

fn g(_1: T, _2: ()) -> () {
    let mut _0: ();                      // return place in scope 0 at ui/resolve/blind-item-mixed-use-item.rs:6:30: 6:30

    bb0: {
        drop(_1) -> bb1;                 // scope 0 at ui/resolve/blind-item-mixed-use-item.rs:6:32: 6:33
    }

    bb1: {
        return;                          // scope 0 at ui/resolve/blind-item-mixed-use-item.rs:6:33: 6:33
    }
}

const BAR: () = {
    let mut _0: ();                      // return place in scope 0 at ui/resolve/blind-item-mixed-use-item.rs:9:12: 9:14

    bb0: {
        _0 = ();                         // scope 0 at ui/resolve/blind-item-mixed-use-item.rs:9:17: 9:19
        return;                          // scope 0 at ui/resolve/blind-item-mixed-use-item.rs:9:1: 9:20
    }
}

fn main() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/resolve/blind-item-mixed-use-item.rs:13:11: 13:11
    let _1: ();                          // in scope 0 at ui/resolve/blind-item-mixed-use-item.rs:18:5: 18:17
    let mut _2: Data;                    // in scope 0 at ui/resolve/blind-item-mixed-use-item.rs:18:7: 18:11
    let _3: ();                          // in scope 0 at ui/resolve/blind-item-mixed-use-item.rs:19:5: 19:19
    let mut _4: main::Data2;             // in scope 0 at ui/resolve/blind-item-mixed-use-item.rs:19:7: 19:12

    bb0: {
        _1 = f::<Data>(move _2, const _) -> bb1; // scope 0 at ui/resolve/blind-item-mixed-use-item.rs:18:5: 18:17
                                         // mir::Constant
                                         // + span: ui/resolve/blind-item-mixed-use-item.rs:18:5: 18:6
                                         // + literal: Const { ty: fn(Data, ()) {f::<Data>}, val: Value(<ZST>) }
    }

    bb1: {
        _3 = g::<Data2>(move _4, const _) -> bb2; // scope 0 at ui/resolve/blind-item-mixed-use-item.rs:19:5: 19:19
                                         // mir::Constant
                                         // + span: ui/resolve/blind-item-mixed-use-item.rs:19:5: 19:6
                                         // + literal: Const { ty: fn(Data2, ()) {g::<Data2>}, val: Value(<ZST>) }
    }

    bb2: {
        return;                          // scope 0 at ui/resolve/blind-item-mixed-use-item.rs:20:2: 20:2
    }
}

const BAR2: () = {
    let mut _0: ();                      // return place in scope 0 at ui/resolve/blind-item-mixed-use-item.rs:14:17: 14:19

    bb0: {
        _0 = ();                         // scope 0 at ui/resolve/blind-item-mixed-use-item.rs:14:22: 14:24
        return;                          // scope 0 at ui/resolve/blind-item-mixed-use-item.rs:14:5: 14:25
    }
}
