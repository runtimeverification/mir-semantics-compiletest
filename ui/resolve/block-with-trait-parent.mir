// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
fn Trait::method(_1: &Self) -> () {
    debug self => _1;
    let mut _0: ();
    let _2: ();
    let mut _3: &Trait::method::S;

    bb0: {
        _3 = const _;
        _2 = <S as Trait>::method(_3) -> [return: bb1, unwind continue];
    }

    bb1: {
        return;
    }
}

promoted[0] in Trait::method: &S = {
    let mut _0: &Trait::method::S;
    let mut _1: Trait::method::S;

    bb0: {
        _1 = S;
        _0 = &_1;
        return;
    }
}

fn main() -> () {
    let mut _0: ();

    bb0: {
        return;
    }
}
