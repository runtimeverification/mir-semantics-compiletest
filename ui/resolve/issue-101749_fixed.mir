// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
fn <impl at ui/resolve/issue-101749_fixed.rs:6:1: 6:15>::new(_1: i32, _2: i32) -> Rectangle {
    debug width => _1;                   // in scope 0 at ui/resolve/issue-101749_fixed.rs:7:12: 7:17
    debug height => _2;                  // in scope 0 at ui/resolve/issue-101749_fixed.rs:7:24: 7:30
    let mut _0: Rectangle;               // return place in scope 0 at ui/resolve/issue-101749_fixed.rs:7:40: 7:44
    let mut _3: i32;                     // in scope 0 at ui/resolve/issue-101749_fixed.rs:8:16: 8:21
    let mut _4: i32;                     // in scope 0 at ui/resolve/issue-101749_fixed.rs:8:23: 8:29

    bb0: {
        _3 = _1;                         // scope 0 at ui/resolve/issue-101749_fixed.rs:8:16: 8:21
        _4 = _2;                         // scope 0 at ui/resolve/issue-101749_fixed.rs:8:23: 8:29
        _0 = Rectangle { width: move _3, height: move _4 }; // scope 0 at ui/resolve/issue-101749_fixed.rs:8:9: 8:31
        return;                          // scope 0 at ui/resolve/issue-101749_fixed.rs:9:6: 9:6
    }
}

fn <impl at ui/resolve/issue-101749_fixed.rs:6:1: 6:15>::area(_1: &Rectangle) -> i32 {
    debug self => _1;                    // in scope 0 at ui/resolve/issue-101749_fixed.rs:10:13: 10:18
    let mut _0: i32;                     // return place in scope 0 at ui/resolve/issue-101749_fixed.rs:10:23: 10:26
    let mut _2: i32;                     // in scope 0 at ui/resolve/issue-101749_fixed.rs:11:9: 11:20
    let mut _3: i32;                     // in scope 0 at ui/resolve/issue-101749_fixed.rs:11:23: 11:33
    let mut _4: (i32, bool);             // in scope 0 at ui/resolve/issue-101749_fixed.rs:11:9: 11:33

    bb0: {
        _2 = ((*_1).1: i32);             // scope 0 at ui/resolve/issue-101749_fixed.rs:11:9: 11:20
        _3 = ((*_1).0: i32);             // scope 0 at ui/resolve/issue-101749_fixed.rs:11:23: 11:33
        _4 = CheckedMul(_2, _3);         // scope 0 at ui/resolve/issue-101749_fixed.rs:11:9: 11:33
        assert(!move (_4.1: bool), "attempt to compute `{} * {}`, which would overflow", move _2, move _3) -> bb1; // scope 0 at ui/resolve/issue-101749_fixed.rs:11:9: 11:33
    }

    bb1: {
        _0 = move (_4.0: i32);           // scope 0 at ui/resolve/issue-101749_fixed.rs:11:9: 11:33
        return;                          // scope 0 at ui/resolve/issue-101749_fixed.rs:12:6: 12:6
    }
}

fn main() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/resolve/issue-101749_fixed.rs:15:11: 15:11
    let _1: Rectangle;                   // in scope 0 at ui/resolve/issue-101749_fixed.rs:16:9: 16:13
    let mut _2: i32;                     // in scope 0 at ui/resolve/issue-101749_fixed.rs:17:13: 17:24
    let mut _3: &Rectangle;              // in scope 0 at ui/resolve/issue-101749_fixed.rs:17:13: 17:24
    scope 1 {
        debug rect => _1;                // in scope 1 at ui/resolve/issue-101749_fixed.rs:16:9: 16:13
        scope 2 {
        }
    }

    bb0: {
        _1 = Rectangle::new(const 3_i32, const 4_i32) -> bb1; // scope 0 at ui/resolve/issue-101749_fixed.rs:16:16: 16:36
                                         // mir::Constant
                                         // + span: ui/resolve/issue-101749_fixed.rs:16:16: 16:30
                                         // + literal: Const { ty: fn(i32, i32) -> Rectangle {Rectangle::new}, val: Value(<ZST>) }
    }

    bb1: {
        _3 = &_1;                        // scope 1 at ui/resolve/issue-101749_fixed.rs:17:13: 17:24
        _2 = Rectangle::area(move _3) -> bb2; // scope 1 at ui/resolve/issue-101749_fixed.rs:17:13: 17:24
                                         // mir::Constant
                                         // + span: ui/resolve/issue-101749_fixed.rs:17:18: 17:22
                                         // + literal: Const { ty: for<'a> fn(&'a Rectangle) -> i32 {Rectangle::area}, val: Value(<ZST>) }
    }

    bb2: {
        return;                          // scope 0 at ui/resolve/issue-101749_fixed.rs:19:2: 19:2
    }
}
