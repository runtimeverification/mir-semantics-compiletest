// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
fn bar() -> Foo {
    let mut _0: Foo;                     // return place in scope 0 at ui/extern/extern-rust.rs:8:28: 8:31

    bb0: {
        _0 = Foo(const 0_u32);           // scope 0 at ui/extern/extern-rust.rs:9:5: 9:11
        return;                          // scope 0 at ui/extern/extern-rust.rs:10:2: 10:2
    }
}

fn main() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/extern/extern-rust.rs:12:11: 12:11

    bb0: {
        return;                          // scope 0 at ui/extern/extern-rust.rs:12:13: 12:13
    }
}

fn Foo(_1: u32) -> Foo {
    let mut _0: Foo;                     // return place in scope 0 at ui/extern/extern-rust.rs:5:1: 5:15

    bb0: {
        _0 = Foo(move _1);               // scope 0 at ui/extern/extern-rust.rs:5:1: 5:15
        return;                          // scope 0 at ui/extern/extern-rust.rs:5:1: 5:15
    }
}

// MIR FOR CTFE
fn Foo(_1: u32) -> Foo {
    let mut _0: Foo;                     // return place in scope 0 at ui/extern/extern-rust.rs:5:1: 5:15

    bb0: {
        _0 = Foo(move _1);               // scope 0 at ui/extern/extern-rust.rs:5:1: 5:15
        return;                          // scope 0 at ui/extern/extern-rust.rs:5:1: 5:15
    }
}
