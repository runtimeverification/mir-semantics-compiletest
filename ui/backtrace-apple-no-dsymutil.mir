// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
fn main() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/backtrace-apple-no-dsymutil.rs:11:11: 11:11
    let _1: std::vec::Vec<std::string::String>; // in scope 0 at ui/backtrace-apple-no-dsymutil.rs:12:9: 12:13
    let mut _2: std::env::Args;          // in scope 0 at ui/backtrace-apple-no-dsymutil.rs:12:29: 12:45
    let mut _3: bool;                    // in scope 0 at ui/backtrace-apple-no-dsymutil.rs:13:8: 13:23
    let mut _4: usize;                   // in scope 0 at ui/backtrace-apple-no-dsymutil.rs:13:8: 13:18
    let mut _5: &std::vec::Vec<std::string::String>; // in scope 0 at ui/backtrace-apple-no-dsymutil.rs:13:8: 13:18
    let _6: ();                          // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:62
    let mut _7: std::fmt::Arguments<'_>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _8: &[&str];                 // in scope 0 at ui/backtrace-apple-no-dsymutil.rs:14:18: 14:22
    let mut _9: &[&str; 2];              // in scope 0 at ui/backtrace-apple-no-dsymutil.rs:14:18: 14:22
    let _10: &[&str; 2];                 // in scope 0 at ui/backtrace-apple-no-dsymutil.rs:14:18: 14:22
    let mut _11: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _12: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let _13: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let _14: [core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _15: core::fmt::ArgumentV1<'_>; // in scope 0 at ui/backtrace-apple-no-dsymutil.rs:14:24: 14:66
    let mut _16: &std::backtrace::Backtrace; // in scope 0 at ui/backtrace-apple-no-dsymutil.rs:14:24: 14:66
    let _17: &std::backtrace::Backtrace; // in scope 0 at ui/backtrace-apple-no-dsymutil.rs:14:24: 14:66
    let _18: std::backtrace::Backtrace;  // in scope 0 at ui/backtrace-apple-no-dsymutil.rs:14:24: 14:66
    let mut _20: std::result::Result<std::process::Output, std::io::Error>; // in scope 0 at ui/backtrace-apple-no-dsymutil.rs:17:15: 17:84
    let mut _21: &mut std::process::Command; // in scope 0 at ui/backtrace-apple-no-dsymutil.rs:17:15: 17:84
    let mut _22: &mut std::process::Command; // in scope 0 at ui/backtrace-apple-no-dsymutil.rs:17:15: 17:75
    let mut _23: &mut std::process::Command; // in scope 0 at ui/backtrace-apple-no-dsymutil.rs:17:15: 17:75
    let mut _24: &mut std::process::Command; // in scope 0 at ui/backtrace-apple-no-dsymutil.rs:17:15: 17:64
    let mut _25: &mut std::process::Command; // in scope 0 at ui/backtrace-apple-no-dsymutil.rs:17:15: 17:64
    let mut _26: std::process::Command;  // in scope 0 at ui/backtrace-apple-no-dsymutil.rs:17:15: 17:37
    let mut _27: &std::string::String;   // in scope 0 at ui/backtrace-apple-no-dsymutil.rs:17:28: 17:36
    let _28: &std::string::String;       // in scope 0 at ui/backtrace-apple-no-dsymutil.rs:17:29: 17:36
    let mut _29: &std::vec::Vec<std::string::String>; // in scope 0 at ui/backtrace-apple-no-dsymutil.rs:17:29: 17:33
    let mut _32: std::fmt::Arguments<'_>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
    let mut _33: &[&str];                // in scope 0 at ui/backtrace-apple-no-dsymutil.rs:19:9: 19:17
    let mut _34: &[&str; 2];             // in scope 0 at ui/backtrace-apple-no-dsymutil.rs:19:9: 19:17
    let _35: &[&str; 2];                 // in scope 0 at ui/backtrace-apple-no-dsymutil.rs:19:9: 19:17
    let mut _36: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
    let mut _37: &[core::fmt::ArgumentV1<'_>; 2]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
    let _38: &[core::fmt::ArgumentV1<'_>; 2]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
    let _39: [core::fmt::ArgumentV1<'_>; 2]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
    let mut _40: core::fmt::ArgumentV1<'_>; // in scope 0 at ui/backtrace-apple-no-dsymutil.rs:20:9: 20:45
    let mut _41: &&str;                  // in scope 0 at ui/backtrace-apple-no-dsymutil.rs:20:9: 20:45
    let _42: &&str;                      // in scope 0 at ui/backtrace-apple-no-dsymutil.rs:20:9: 20:45
    let _43: &str;                       // in scope 0 at ui/backtrace-apple-no-dsymutil.rs:20:9: 20:45
    let mut _44: std::result::Result<&str, std::str::Utf8Error>; // in scope 0 at ui/backtrace-apple-no-dsymutil.rs:20:9: 20:36
    let mut _45: &[u8];                  // in scope 0 at ui/backtrace-apple-no-dsymutil.rs:20:24: 20:35
    let _46: &[u8];                      // in scope 0 at ui/backtrace-apple-no-dsymutil.rs:20:24: 20:35
    let mut _47: &std::vec::Vec<u8>;     // in scope 0 at ui/backtrace-apple-no-dsymutil.rs:20:24: 20:35
    let _48: &std::vec::Vec<u8>;         // in scope 0 at ui/backtrace-apple-no-dsymutil.rs:20:24: 20:35
    let mut _49: core::fmt::ArgumentV1<'_>; // in scope 0 at ui/backtrace-apple-no-dsymutil.rs:21:9: 21:45
    let mut _50: &&str;                  // in scope 0 at ui/backtrace-apple-no-dsymutil.rs:21:9: 21:45
    let _51: &&str;                      // in scope 0 at ui/backtrace-apple-no-dsymutil.rs:21:9: 21:45
    let _52: &str;                       // in scope 0 at ui/backtrace-apple-no-dsymutil.rs:21:9: 21:45
    let mut _53: std::result::Result<&str, std::str::Utf8Error>; // in scope 0 at ui/backtrace-apple-no-dsymutil.rs:21:9: 21:36
    let mut _54: &[u8];                  // in scope 0 at ui/backtrace-apple-no-dsymutil.rs:21:24: 21:35
    let _55: &[u8];                      // in scope 0 at ui/backtrace-apple-no-dsymutil.rs:21:24: 21:35
    let mut _56: &std::vec::Vec<u8>;     // in scope 0 at ui/backtrace-apple-no-dsymutil.rs:21:24: 21:35
    let _57: &std::vec::Vec<u8>;         // in scope 0 at ui/backtrace-apple-no-dsymutil.rs:21:24: 21:35
    let mut _58: bool;                   // in scope 0 at ui/backtrace-apple-no-dsymutil.rs:23:8: 23:56
    let mut _59: bool;                   // in scope 0 at ui/backtrace-apple-no-dsymutil.rs:23:8: 23:28
    let mut _60: &std::process::ExitStatus; // in scope 0 at ui/backtrace-apple-no-dsymutil.rs:23:8: 23:28
    let mut _61: bool;                   // in scope 0 at ui/backtrace-apple-no-dsymutil.rs:23:32: 23:56
    let mut _62: &str;                   // in scope 0 at ui/backtrace-apple-no-dsymutil.rs:23:32: 23:56
    let _63: &str;                       // in scope 0 at ui/backtrace-apple-no-dsymutil.rs:23:32: 23:56
    let mut _64: &std::string::String;   // in scope 0 at ui/backtrace-apple-no-dsymutil.rs:23:32: 23:56
    let _65: ();                         // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:62
    let mut _66: std::fmt::Arguments<'_>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _67: &[&str];                // in scope 0 at ui/backtrace-apple-no-dsymutil.rs:26:14: 26:26
    let mut _68: &[&str; 2];             // in scope 0 at ui/backtrace-apple-no-dsymutil.rs:26:14: 26:26
    let _69: &[&str; 2];                 // in scope 0 at ui/backtrace-apple-no-dsymutil.rs:26:14: 26:26
    let mut _70: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _71: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let _72: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let _73: [core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _74: core::fmt::ArgumentV1<'_>; // in scope 0 at ui/backtrace-apple-no-dsymutil.rs:26:28: 26:38
    let mut _75: &std::process::ExitStatus; // in scope 0 at ui/backtrace-apple-no-dsymutil.rs:26:28: 26:38
    let _76: &std::process::ExitStatus;  // in scope 0 at ui/backtrace-apple-no-dsymutil.rs:26:28: 26:38
    let _77: ();                         // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:62
    let mut _78: std::fmt::Arguments<'_>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _79: &[&str];                // in scope 0 at ui/backtrace-apple-no-dsymutil.rs:27:14: 27:35
    let mut _80: &[&str; 2];             // in scope 0 at ui/backtrace-apple-no-dsymutil.rs:27:14: 27:35
    let _81: &[&str; 2];                 // in scope 0 at ui/backtrace-apple-no-dsymutil.rs:27:14: 27:35
    let mut _82: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _83: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let _84: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let _85: [core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _86: core::fmt::ArgumentV1<'_>; // in scope 0 at ui/backtrace-apple-no-dsymutil.rs:27:37: 27:65
    let mut _87: &std::string::String;   // in scope 0 at ui/backtrace-apple-no-dsymutil.rs:27:37: 27:65
    let _88: &std::string::String;       // in scope 0 at ui/backtrace-apple-no-dsymutil.rs:27:37: 27:65
    let _89: std::string::String;        // in scope 0 at ui/backtrace-apple-no-dsymutil.rs:27:37: 27:65
    let mut _90: &str;                   // in scope 0 at ui/backtrace-apple-no-dsymutil.rs:27:37: 27:65
    let _91: &str;                       // in scope 0 at ui/backtrace-apple-no-dsymutil.rs:27:37: 27:65
    let mut _92: &std::string::String;   // in scope 0 at ui/backtrace-apple-no-dsymutil.rs:27:37: 27:65
    let mut _93: &str;                   // in scope 0 at ui/backtrace-apple-no-dsymutil.rs:27:58: 27:64
    let _94: &str;                       // in scope 0 at ui/backtrace-apple-no-dsymutil.rs:27:58: 27:64
    let mut _95: !;                      // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/panic.rs:29:9: 29:74
    let mut _96: std::fmt::Arguments<'_>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/panic.rs:29:31: 29:73
    let mut _97: &[&str];                // in scope 0 at ui/backtrace-apple-no-dsymutil.rs:28:12: 28:43
    let mut _98: &[&str; 2];             // in scope 0 at ui/backtrace-apple-no-dsymutil.rs:28:12: 28:43
    let _99: &[&str; 2];                 // in scope 0 at ui/backtrace-apple-no-dsymutil.rs:28:12: 28:43
    let mut _100: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/panic.rs:29:31: 29:73
    let mut _101: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/panic.rs:29:31: 29:73
    let _102: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/panic.rs:29:31: 29:73
    let _103: [core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/panic.rs:29:31: 29:73
    let mut _104: core::fmt::ArgumentV1<'_>; // in scope 0 at ui/backtrace-apple-no-dsymutil.rs:28:45: 28:52
    let mut _105: &&str;                 // in scope 0 at ui/backtrace-apple-no-dsymutil.rs:28:45: 28:52
    let _106: &&str;                     // in scope 0 at ui/backtrace-apple-no-dsymutil.rs:28:45: 28:52
    scope 1 {
        debug args => _1;                // in scope 1 at ui/backtrace-apple-no-dsymutil.rs:12:9: 12:13
        let _19: std::process::Output;   // in scope 1 at ui/backtrace-apple-no-dsymutil.rs:17:9: 17:12
        let mut _112: &[&str; 2];        // in scope 1 at ui/backtrace-apple-no-dsymutil.rs:14:18: 14:22
        scope 2 {
            debug out => _19;            // in scope 2 at ui/backtrace-apple-no-dsymutil.rs:17:9: 17:12
            let _30: std::string::String; // in scope 2 at ui/backtrace-apple-no-dsymutil.rs:18:9: 18:15
            let _31: std::string::String; // in scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:13: 118:16
            let mut _111: &[&str; 2];    // in scope 2 at ui/backtrace-apple-no-dsymutil.rs:19:9: 19:17
            scope 3 {
                debug output => _30;     // in scope 3 at ui/backtrace-apple-no-dsymutil.rs:18:9: 18:15
                let mut _107: &&str;     // in scope 3 at ui/backtrace-apple-no-dsymutil.rs:28:45: 28:52
                let mut _108: &[&str; 2]; // in scope 3 at ui/backtrace-apple-no-dsymutil.rs:28:12: 28:43
                let mut _109: &[&str; 2]; // in scope 3 at ui/backtrace-apple-no-dsymutil.rs:27:14: 27:35
                let mut _110: &[&str; 2]; // in scope 3 at ui/backtrace-apple-no-dsymutil.rs:26:14: 26:26
            }
            scope 4 {
                debug res => _31;        // in scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:13: 118:16
            }
        }
    }

    bb0: {
        _2 = args() -> bb1;              // scope 0 at ui/backtrace-apple-no-dsymutil.rs:12:29: 12:45
                                         // mir::Constant
                                         // + span: ui/backtrace-apple-no-dsymutil.rs:12:29: 12:43
                                         // + literal: Const { ty: fn() -> Args {args}, val: Value(<ZST>) }
    }

    bb1: {
        _1 = <Args as Iterator>::collect::<Vec<String>>(move _2) -> bb2; // scope 0 at ui/backtrace-apple-no-dsymutil.rs:12:29: 12:55
                                         // mir::Constant
                                         // + span: ui/backtrace-apple-no-dsymutil.rs:12:46: 12:53
                                         // + literal: Const { ty: fn(Args) -> Vec<String> {<Args as Iterator>::collect::<Vec<String>>}, val: Value(<ZST>) }
    }

    bb2: {
        _5 = &_1;                        // scope 1 at ui/backtrace-apple-no-dsymutil.rs:13:8: 13:18
        _4 = Vec::<String>::len(move _5) -> [return: bb3, unwind: bb54]; // scope 1 at ui/backtrace-apple-no-dsymutil.rs:13:8: 13:18
                                         // mir::Constant
                                         // + span: ui/backtrace-apple-no-dsymutil.rs:13:13: 13:16
                                         // + literal: Const { ty: for<'a> fn(&'a Vec<String>) -> usize {Vec::<String>::len}, val: Value(<ZST>) }
    }

    bb3: {
        _3 = Ge(move _4, const 2_usize); // scope 1 at ui/backtrace-apple-no-dsymutil.rs:13:8: 13:23
        switchInt(move _3) -> [0: bb9, otherwise: bb4]; // scope 1 at ui/backtrace-apple-no-dsymutil.rs:13:8: 13:23
    }

    bb4: {
        _112 = const _;                  // scope 1 at ui/backtrace-apple-no-dsymutil.rs:14:18: 14:22
                                         // mir::Constant
                                         // + span: ui/backtrace-apple-no-dsymutil.rs:14:18: 14:22
                                         // + literal: Const { ty: &[&str; 2], val: Unevaluated(main, [], Some(promoted[5])) }
        _10 = _112;                      // scope 1 at ui/backtrace-apple-no-dsymutil.rs:14:18: 14:22
        _9 = _10;                        // scope 1 at ui/backtrace-apple-no-dsymutil.rs:14:18: 14:22
        _8 = move _9 as &[&str] (Pointer(Unsize)); // scope 1 at ui/backtrace-apple-no-dsymutil.rs:14:18: 14:22
        _18 = Backtrace::force_capture() -> [return: bb5, unwind: bb54]; // scope 1 at ui/backtrace-apple-no-dsymutil.rs:14:24: 14:66
                                         // mir::Constant
                                         // + span: ui/backtrace-apple-no-dsymutil.rs:14:24: 14:64
                                         // + literal: Const { ty: fn() -> Backtrace {Backtrace::force_capture}, val: Value(<ZST>) }
    }

    bb5: {
        _17 = &_18;                      // scope 1 at ui/backtrace-apple-no-dsymutil.rs:14:24: 14:66
        _16 = _17;                       // scope 1 at ui/backtrace-apple-no-dsymutil.rs:14:24: 14:66
        _15 = core::fmt::ArgumentV1::<'_>::new_display::<Backtrace>(move _16) -> [return: bb6, unwind: bb53]; // scope 1 at ui/backtrace-apple-no-dsymutil.rs:14:24: 14:66
                                         // mir::Constant
                                         // + span: ui/backtrace-apple-no-dsymutil.rs:14:24: 14:66
                                         // + user_ty: UserType(3)
                                         // + literal: Const { ty: for<'b> fn(&'b Backtrace) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_display::<Backtrace>}, val: Value(<ZST>) }
    }

    bb6: {
        _14 = [move _15];                // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _13 = &_14;                      // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _12 = _13;                       // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _11 = move _12 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _7 = Arguments::<'_>::new_v1(move _8, move _11) -> [return: bb7, unwind: bb53]; // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // + user_ty: UserType(2)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb7: {
        _6 = _print(move _7) -> [return: bb8, unwind: bb53]; // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:62
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:27
                                         // + literal: Const { ty: for<'a> fn(Arguments<'a>) {_print}, val: Value(<ZST>) }
    }

    bb8: {
        drop(_18) -> [return: bb47, unwind: bb54]; // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:62: 137:63
    }

    bb9: {
        _29 = &_1;                       // scope 1 at ui/backtrace-apple-no-dsymutil.rs:17:29: 17:33
        _28 = <Vec<String> as Index<usize>>::index(move _29, const 0_usize) -> [return: bb10, unwind: bb54]; // scope 1 at ui/backtrace-apple-no-dsymutil.rs:17:29: 17:36
                                         // mir::Constant
                                         // + span: ui/backtrace-apple-no-dsymutil.rs:17:29: 17:36
                                         // + literal: Const { ty: for<'a> fn(&'a Vec<String>, usize) -> &'a <Vec<String> as Index<usize>>::Output {<Vec<String> as Index<usize>>::index}, val: Value(<ZST>) }
    }

    bb10: {
        _27 = _28;                       // scope 1 at ui/backtrace-apple-no-dsymutil.rs:17:28: 17:36
        _26 = Command::new::<&String>(move _27) -> [return: bb11, unwind: bb54]; // scope 1 at ui/backtrace-apple-no-dsymutil.rs:17:15: 17:37
                                         // mir::Constant
                                         // + span: ui/backtrace-apple-no-dsymutil.rs:17:15: 17:27
                                         // + user_ty: UserType(4)
                                         // + literal: Const { ty: fn(&String) -> Command {Command::new::<&String>}, val: Value(<ZST>) }
    }

    bb11: {
        _25 = &mut _26;                  // scope 1 at ui/backtrace-apple-no-dsymutil.rs:17:15: 17:64
        _24 = Command::env::<&str, &str>(move _25, const "RUST_BACKTRACE", const "1") -> [return: bb12, unwind: bb52]; // scope 1 at ui/backtrace-apple-no-dsymutil.rs:17:15: 17:64
                                         // mir::Constant
                                         // + span: ui/backtrace-apple-no-dsymutil.rs:17:38: 17:41
                                         // + literal: Const { ty: for<'a> fn(&'a mut Command, &str, &str) -> &'a mut Command {Command::env::<&str, &str>}, val: Value(<ZST>) }
                                         // mir::Constant
                                         // + span: ui/backtrace-apple-no-dsymutil.rs:17:42: 17:58
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
                                         // mir::Constant
                                         // + span: ui/backtrace-apple-no-dsymutil.rs:17:60: 17:63
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
    }

    bb12: {
        _23 = &mut (*_24);               // scope 1 at ui/backtrace-apple-no-dsymutil.rs:17:15: 17:75
        _22 = Command::arg::<&str>(move _23, const "foo") -> [return: bb13, unwind: bb52]; // scope 1 at ui/backtrace-apple-no-dsymutil.rs:17:15: 17:75
                                         // mir::Constant
                                         // + span: ui/backtrace-apple-no-dsymutil.rs:17:65: 17:68
                                         // + literal: Const { ty: for<'a> fn(&'a mut Command, &str) -> &'a mut Command {Command::arg::<&str>}, val: Value(<ZST>) }
                                         // mir::Constant
                                         // + span: ui/backtrace-apple-no-dsymutil.rs:17:69: 17:74
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
    }

    bb13: {
        _21 = &mut (*_22);               // scope 1 at ui/backtrace-apple-no-dsymutil.rs:17:15: 17:84
        _20 = Command::output(move _21) -> [return: bb14, unwind: bb52]; // scope 1 at ui/backtrace-apple-no-dsymutil.rs:17:15: 17:84
                                         // mir::Constant
                                         // + span: ui/backtrace-apple-no-dsymutil.rs:17:76: 17:82
                                         // + literal: Const { ty: for<'a> fn(&'a mut Command) -> Result<Output, std::io::Error> {Command::output}, val: Value(<ZST>) }
    }

    bb14: {
        _19 = Result::<Output, std::io::Error>::unwrap(move _20) -> [return: bb15, unwind: bb52]; // scope 1 at ui/backtrace-apple-no-dsymutil.rs:17:15: 17:93
                                         // mir::Constant
                                         // + span: ui/backtrace-apple-no-dsymutil.rs:17:85: 17:91
                                         // + literal: Const { ty: fn(Result<Output, std::io::Error>) -> Output {Result::<Output, std::io::Error>::unwrap}, val: Value(<ZST>) }
    }

    bb15: {
        drop(_26) -> [return: bb16, unwind: bb51]; // scope 1 at ui/backtrace-apple-no-dsymutil.rs:17:93: 17:94
    }

    bb16: {
        _111 = const _;                  // scope 2 at ui/backtrace-apple-no-dsymutil.rs:19:9: 19:17
                                         // mir::Constant
                                         // + span: ui/backtrace-apple-no-dsymutil.rs:19:9: 19:17
                                         // + literal: Const { ty: &[&str; 2], val: Unevaluated(main, [], Some(promoted[4])) }
        _35 = _111;                      // scope 2 at ui/backtrace-apple-no-dsymutil.rs:19:9: 19:17
        _34 = _35;                       // scope 2 at ui/backtrace-apple-no-dsymutil.rs:19:9: 19:17
        _33 = move _34 as &[&str] (Pointer(Unsize)); // scope 2 at ui/backtrace-apple-no-dsymutil.rs:19:9: 19:17
        _48 = &(_19.1: std::vec::Vec<u8>); // scope 2 at ui/backtrace-apple-no-dsymutil.rs:20:24: 20:35
        _47 = _48;                       // scope 2 at ui/backtrace-apple-no-dsymutil.rs:20:24: 20:35
        _46 = <Vec<u8> as Deref>::deref(move _47) -> [return: bb17, unwind: bb51]; // scope 2 at ui/backtrace-apple-no-dsymutil.rs:20:24: 20:35
                                         // mir::Constant
                                         // + span: ui/backtrace-apple-no-dsymutil.rs:20:24: 20:35
                                         // + literal: Const { ty: for<'a> fn(&'a Vec<u8>) -> &'a <Vec<u8> as Deref>::Target {<Vec<u8> as Deref>::deref}, val: Value(<ZST>) }
    }

    bb17: {
        _45 = _46;                       // scope 2 at ui/backtrace-apple-no-dsymutil.rs:20:24: 20:35
        _44 = from_utf8(move _45) -> [return: bb18, unwind: bb51]; // scope 2 at ui/backtrace-apple-no-dsymutil.rs:20:9: 20:36
                                         // mir::Constant
                                         // + span: ui/backtrace-apple-no-dsymutil.rs:20:9: 20:23
                                         // + literal: Const { ty: for<'a> fn(&'a [u8]) -> Result<&'a str, Utf8Error> {from_utf8}, val: Value(<ZST>) }
    }

    bb18: {
        _43 = Result::<&str, Utf8Error>::unwrap(move _44) -> [return: bb19, unwind: bb51]; // scope 2 at ui/backtrace-apple-no-dsymutil.rs:20:9: 20:45
                                         // mir::Constant
                                         // + span: ui/backtrace-apple-no-dsymutil.rs:20:37: 20:43
                                         // + literal: Const { ty: fn(Result<&str, Utf8Error>) -> &str {Result::<&str, Utf8Error>::unwrap}, val: Value(<ZST>) }
    }

    bb19: {
        _42 = &_43;                      // scope 2 at ui/backtrace-apple-no-dsymutil.rs:20:9: 20:45
        _41 = _42;                       // scope 2 at ui/backtrace-apple-no-dsymutil.rs:20:9: 20:45
        _40 = core::fmt::ArgumentV1::<'_>::new_display::<&str>(move _41) -> [return: bb20, unwind: bb51]; // scope 2 at ui/backtrace-apple-no-dsymutil.rs:20:9: 20:45
                                         // mir::Constant
                                         // + span: ui/backtrace-apple-no-dsymutil.rs:20:9: 20:45
                                         // + user_ty: UserType(6)
                                         // + literal: Const { ty: for<'b> fn(&'b &str) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_display::<&str>}, val: Value(<ZST>) }
    }

    bb20: {
        _57 = &(_19.2: std::vec::Vec<u8>); // scope 2 at ui/backtrace-apple-no-dsymutil.rs:21:24: 21:35
        _56 = _57;                       // scope 2 at ui/backtrace-apple-no-dsymutil.rs:21:24: 21:35
        _55 = <Vec<u8> as Deref>::deref(move _56) -> [return: bb21, unwind: bb51]; // scope 2 at ui/backtrace-apple-no-dsymutil.rs:21:24: 21:35
                                         // mir::Constant
                                         // + span: ui/backtrace-apple-no-dsymutil.rs:21:24: 21:35
                                         // + literal: Const { ty: for<'a> fn(&'a Vec<u8>) -> &'a <Vec<u8> as Deref>::Target {<Vec<u8> as Deref>::deref}, val: Value(<ZST>) }
    }

    bb21: {
        _54 = _55;                       // scope 2 at ui/backtrace-apple-no-dsymutil.rs:21:24: 21:35
        _53 = from_utf8(move _54) -> [return: bb22, unwind: bb51]; // scope 2 at ui/backtrace-apple-no-dsymutil.rs:21:9: 21:36
                                         // mir::Constant
                                         // + span: ui/backtrace-apple-no-dsymutil.rs:21:9: 21:23
                                         // + literal: Const { ty: for<'a> fn(&'a [u8]) -> Result<&'a str, Utf8Error> {from_utf8}, val: Value(<ZST>) }
    }

    bb22: {
        _52 = Result::<&str, Utf8Error>::unwrap(move _53) -> [return: bb23, unwind: bb51]; // scope 2 at ui/backtrace-apple-no-dsymutil.rs:21:9: 21:45
                                         // mir::Constant
                                         // + span: ui/backtrace-apple-no-dsymutil.rs:21:37: 21:43
                                         // + literal: Const { ty: fn(Result<&str, Utf8Error>) -> &str {Result::<&str, Utf8Error>::unwrap}, val: Value(<ZST>) }
    }

    bb23: {
        _51 = &_52;                      // scope 2 at ui/backtrace-apple-no-dsymutil.rs:21:9: 21:45
        _50 = _51;                       // scope 2 at ui/backtrace-apple-no-dsymutil.rs:21:9: 21:45
        _49 = core::fmt::ArgumentV1::<'_>::new_display::<&str>(move _50) -> [return: bb24, unwind: bb51]; // scope 2 at ui/backtrace-apple-no-dsymutil.rs:21:9: 21:45
                                         // mir::Constant
                                         // + span: ui/backtrace-apple-no-dsymutil.rs:21:9: 21:45
                                         // + user_ty: UserType(7)
                                         // + literal: Const { ty: for<'b> fn(&'b &str) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_display::<&str>}, val: Value(<ZST>) }
    }

    bb24: {
        _39 = [move _40, move _49];      // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
        _38 = &_39;                      // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
        _37 = _38;                       // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
        _36 = move _37 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
        _32 = Arguments::<'_>::new_v1(move _33, move _36) -> [return: bb25, unwind: bb51]; // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
                                         // + user_ty: UserType(5)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb25: {
        _31 = format(move _32) -> [return: bb26, unwind: bb51]; // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:19: 118:80
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:19: 118:38
                                         // + literal: Const { ty: for<'a> fn(Arguments<'a>) -> String {format}, val: Value(<ZST>) }
    }

    bb26: {
        _30 = move _31;                  // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:119:9: 119:12
        _60 = &(_19.0: std::process::ExitStatus); // scope 3 at ui/backtrace-apple-no-dsymutil.rs:23:8: 23:28
        _59 = ExitStatus::success(move _60) -> [return: bb30, unwind: bb50]; // scope 3 at ui/backtrace-apple-no-dsymutil.rs:23:8: 23:28
                                         // mir::Constant
                                         // + span: ui/backtrace-apple-no-dsymutil.rs:23:19: 23:26
                                         // + literal: Const { ty: for<'a> fn(&'a ExitStatus) -> bool {ExitStatus::success}, val: Value(<ZST>) }
    }

    bb27: {
        _58 = const false;               // scope 3 at ui/backtrace-apple-no-dsymutil.rs:23:8: 23:56
        goto -> bb29;                    // scope 3 at ui/backtrace-apple-no-dsymutil.rs:23:8: 23:56
    }

    bb28: {
        _64 = &_30;                      // scope 3 at ui/backtrace-apple-no-dsymutil.rs:23:32: 23:56
        _63 = <String as Deref>::deref(move _64) -> [return: bb31, unwind: bb50]; // scope 3 at ui/backtrace-apple-no-dsymutil.rs:23:32: 23:56
                                         // mir::Constant
                                         // + span: ui/backtrace-apple-no-dsymutil.rs:23:32: 23:56
                                         // + literal: Const { ty: for<'a> fn(&'a String) -> &'a <String as Deref>::Target {<String as Deref>::deref}, val: Value(<ZST>) }
    }

    bb29: {
        switchInt(move _58) -> [0: bb34, otherwise: bb33]; // scope 3 at ui/backtrace-apple-no-dsymutil.rs:23:8: 23:56
    }

    bb30: {
        switchInt(move _59) -> [0: bb27, otherwise: bb28]; // scope 3 at ui/backtrace-apple-no-dsymutil.rs:23:8: 23:56
    }

    bb31: {
        _62 = _63;                       // scope 3 at ui/backtrace-apple-no-dsymutil.rs:23:32: 23:56
        _61 = core::str::<impl str>::contains::<'_, &str>(move _62, const "ui/backtrace-apple-no-dsymutil.rs") -> [return: bb32, unwind: bb50]; // scope 3 at ui/backtrace-apple-no-dsymutil.rs:23:32: 23:56
                                         // mir::Constant
                                         // + span: ui/backtrace-apple-no-dsymutil.rs:23:39: 23:47
                                         // + literal: Const { ty: fn(&str, &str) -> bool {core::str::<impl str>::contains::<'_, &str>}, val: Value(<ZST>) }
                                         // mir::Constant
                                         // + span: ui/backtrace-apple-no-dsymutil.rs:23:48: 23:55
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
    }

    bb32: {
        _58 = move _61;                  // scope 3 at ui/backtrace-apple-no-dsymutil.rs:23:8: 23:56
        goto -> bb29;                    // scope 3 at ui/backtrace-apple-no-dsymutil.rs:23:8: 23:56
    }

    bb33: {
        drop(_30) -> [return: bb46, unwind: bb51]; // scope 2 at ui/backtrace-apple-no-dsymutil.rs:29:1: 29:2
    }

    bb34: {
        _110 = const _;                  // scope 3 at ui/backtrace-apple-no-dsymutil.rs:26:14: 26:26
                                         // mir::Constant
                                         // + span: ui/backtrace-apple-no-dsymutil.rs:26:14: 26:26
                                         // + literal: Const { ty: &[&str; 2], val: Unevaluated(main, [], Some(promoted[3])) }
        _69 = _110;                      // scope 3 at ui/backtrace-apple-no-dsymutil.rs:26:14: 26:26
        _68 = _69;                       // scope 3 at ui/backtrace-apple-no-dsymutil.rs:26:14: 26:26
        _67 = move _68 as &[&str] (Pointer(Unsize)); // scope 3 at ui/backtrace-apple-no-dsymutil.rs:26:14: 26:26
        _76 = &(_19.0: std::process::ExitStatus); // scope 3 at ui/backtrace-apple-no-dsymutil.rs:26:28: 26:38
        _75 = _76;                       // scope 3 at ui/backtrace-apple-no-dsymutil.rs:26:28: 26:38
        _74 = core::fmt::ArgumentV1::<'_>::new_display::<ExitStatus>(move _75) -> [return: bb35, unwind: bb50]; // scope 3 at ui/backtrace-apple-no-dsymutil.rs:26:28: 26:38
                                         // mir::Constant
                                         // + span: ui/backtrace-apple-no-dsymutil.rs:26:28: 26:38
                                         // + user_ty: UserType(9)
                                         // + literal: Const { ty: for<'b> fn(&'b ExitStatus) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_display::<ExitStatus>}, val: Value(<ZST>) }
    }

    bb35: {
        _73 = [move _74];                // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _72 = &_73;                      // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _71 = _72;                       // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _70 = move _71 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _66 = Arguments::<'_>::new_v1(move _67, move _70) -> [return: bb36, unwind: bb50]; // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // + user_ty: UserType(8)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb36: {
        _65 = _print(move _66) -> [return: bb37, unwind: bb50]; // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:62
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:27
                                         // + literal: Const { ty: for<'a> fn(Arguments<'a>) {_print}, val: Value(<ZST>) }
    }

    bb37: {
        _109 = const _;                  // scope 3 at ui/backtrace-apple-no-dsymutil.rs:27:14: 27:35
                                         // mir::Constant
                                         // + span: ui/backtrace-apple-no-dsymutil.rs:27:14: 27:35
                                         // + literal: Const { ty: &[&str; 2], val: Unevaluated(main, [], Some(promoted[2])) }
        _81 = _109;                      // scope 3 at ui/backtrace-apple-no-dsymutil.rs:27:14: 27:35
        _80 = _81;                       // scope 3 at ui/backtrace-apple-no-dsymutil.rs:27:14: 27:35
        _79 = move _80 as &[&str] (Pointer(Unsize)); // scope 3 at ui/backtrace-apple-no-dsymutil.rs:27:14: 27:35
        _92 = &_30;                      // scope 3 at ui/backtrace-apple-no-dsymutil.rs:27:37: 27:65
        _91 = <String as Deref>::deref(move _92) -> [return: bb38, unwind: bb50]; // scope 3 at ui/backtrace-apple-no-dsymutil.rs:27:37: 27:65
                                         // mir::Constant
                                         // + span: ui/backtrace-apple-no-dsymutil.rs:27:37: 27:65
                                         // + literal: Const { ty: for<'a> fn(&'a String) -> &'a <String as Deref>::Target {<String as Deref>::deref}, val: Value(<ZST>) }
    }

    bb38: {
        _90 = _91;                       // scope 3 at ui/backtrace-apple-no-dsymutil.rs:27:37: 27:65
        _94 = const "\n\t";              // scope 3 at ui/backtrace-apple-no-dsymutil.rs:27:58: 27:64
                                         // mir::Constant
                                         // + span: ui/backtrace-apple-no-dsymutil.rs:27:58: 27:64
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _93 = _94;                       // scope 3 at ui/backtrace-apple-no-dsymutil.rs:27:58: 27:64
        _89 = str::<impl str>::replace::<'_, &str>(move _90, const "\n", move _93) -> [return: bb39, unwind: bb50]; // scope 3 at ui/backtrace-apple-no-dsymutil.rs:27:37: 27:65
                                         // mir::Constant
                                         // + span: ui/backtrace-apple-no-dsymutil.rs:27:44: 27:51
                                         // + literal: Const { ty: for<'a> fn(&str, &str, &'a str) -> String {str::<impl str>::replace::<'_, &str>}, val: Value(<ZST>) }
                                         // mir::Constant
                                         // + span: ui/backtrace-apple-no-dsymutil.rs:27:52: 27:56
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
    }

    bb39: {
        _88 = &_89;                      // scope 3 at ui/backtrace-apple-no-dsymutil.rs:27:37: 27:65
        _87 = _88;                       // scope 3 at ui/backtrace-apple-no-dsymutil.rs:27:37: 27:65
        _86 = core::fmt::ArgumentV1::<'_>::new_display::<String>(move _87) -> [return: bb40, unwind: bb49]; // scope 3 at ui/backtrace-apple-no-dsymutil.rs:27:37: 27:65
                                         // mir::Constant
                                         // + span: ui/backtrace-apple-no-dsymutil.rs:27:37: 27:65
                                         // + user_ty: UserType(11)
                                         // + literal: Const { ty: for<'b> fn(&'b String) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_display::<String>}, val: Value(<ZST>) }
    }

    bb40: {
        _85 = [move _86];                // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _84 = &_85;                      // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _83 = _84;                       // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _82 = move _83 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _78 = Arguments::<'_>::new_v1(move _79, move _82) -> [return: bb41, unwind: bb49]; // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // + user_ty: UserType(10)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb41: {
        _77 = _print(move _78) -> [return: bb42, unwind: bb49]; // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:62
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:27
                                         // + literal: Const { ty: for<'a> fn(Arguments<'a>) {_print}, val: Value(<ZST>) }
    }

    bb42: {
        drop(_89) -> [return: bb43, unwind: bb50]; // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:62: 137:63
    }

    bb43: {
        _108 = const _;                  // scope 3 at ui/backtrace-apple-no-dsymutil.rs:28:12: 28:43
                                         // mir::Constant
                                         // + span: ui/backtrace-apple-no-dsymutil.rs:28:12: 28:43
                                         // + literal: Const { ty: &[&str; 2], val: Unevaluated(main, [], Some(promoted[1])) }
        _99 = _108;                      // scope 3 at ui/backtrace-apple-no-dsymutil.rs:28:12: 28:43
        _98 = _99;                       // scope 3 at ui/backtrace-apple-no-dsymutil.rs:28:12: 28:43
        _97 = move _98 as &[&str] (Pointer(Unsize)); // scope 3 at ui/backtrace-apple-no-dsymutil.rs:28:12: 28:43
        _107 = const _;                  // scope 3 at ui/backtrace-apple-no-dsymutil.rs:28:45: 28:52
                                         // mir::Constant
                                         // + span: ui/backtrace-apple-no-dsymutil.rs:28:45: 28:52
                                         // + literal: Const { ty: &&str, val: Unevaluated(main, [], Some(promoted[0])) }
        _106 = _107;                     // scope 3 at ui/backtrace-apple-no-dsymutil.rs:28:45: 28:52
        _105 = _106;                     // scope 3 at ui/backtrace-apple-no-dsymutil.rs:28:45: 28:52
        _104 = core::fmt::ArgumentV1::<'_>::new_debug::<&str>(move _105) -> [return: bb44, unwind: bb50]; // scope 3 at ui/backtrace-apple-no-dsymutil.rs:28:45: 28:52
                                         // mir::Constant
                                         // + span: ui/backtrace-apple-no-dsymutil.rs:28:45: 28:52
                                         // + user_ty: UserType(13)
                                         // + literal: Const { ty: for<'b> fn(&'b &str) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_debug::<&str>}, val: Value(<ZST>) }
    }

    bb44: {
        _103 = [move _104];              // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/panic.rs:29:31: 29:73
        _102 = &_103;                    // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/panic.rs:29:31: 29:73
        _101 = _102;                     // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/panic.rs:29:31: 29:73
        _100 = move _101 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/panic.rs:29:31: 29:73
        _96 = Arguments::<'_>::new_v1(move _97, move _100) -> [return: bb45, unwind: bb50]; // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/panic.rs:29:31: 29:73
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/panic.rs:29:31: 29:73
                                         // + user_ty: UserType(12)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb45: {
        _95 = panic_fmt(move _96) -> bb50; // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/panic.rs:29:9: 29:74
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/panic.rs:29:9: 29:30
                                         // + literal: Const { ty: for<'a> fn(Arguments<'a>) -> ! {panic_fmt}, val: Value(<ZST>) }
    }

    bb46: {
        drop(_19) -> [return: bb47, unwind: bb54]; // scope 1 at ui/backtrace-apple-no-dsymutil.rs:29:1: 29:2
    }

    bb47: {
        drop(_1) -> bb48;                // scope 0 at ui/backtrace-apple-no-dsymutil.rs:29:1: 29:2
    }

    bb48: {
        return;                          // scope 0 at ui/backtrace-apple-no-dsymutil.rs:29:2: 29:2
    }

    bb49 (cleanup): {
        drop(_89) -> bb50;               // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:62: 137:63
    }

    bb50 (cleanup): {
        drop(_30) -> bb51;               // scope 2 at ui/backtrace-apple-no-dsymutil.rs:29:1: 29:2
    }

    bb51 (cleanup): {
        drop(_19) -> bb54;               // scope 1 at ui/backtrace-apple-no-dsymutil.rs:29:1: 29:2
    }

    bb52 (cleanup): {
        drop(_26) -> bb54;               // scope 1 at ui/backtrace-apple-no-dsymutil.rs:17:93: 17:94
    }

    bb53 (cleanup): {
        drop(_18) -> bb54;               // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:62: 137:63
    }

    bb54 (cleanup): {
        drop(_1) -> bb55;                // scope 0 at ui/backtrace-apple-no-dsymutil.rs:29:1: 29:2
    }

    bb55 (cleanup): {
        resume;                          // scope 0 at ui/backtrace-apple-no-dsymutil.rs:11:1: 29:2
    }
}

promoted[0] in main: &&str = {
    let mut _0: &&str;                   // return place in scope 0 at ui/backtrace-apple-no-dsymutil.rs:28:45: 28:52
    let mut _1: &str;                    // in scope 0 at ui/backtrace-apple-no-dsymutil.rs:28:45: 28:52

    bb0: {
        _1 = const "ui/backtrace-apple-no-dsymutil.rs"; // scope 0 at ui/backtrace-apple-no-dsymutil.rs:28:45: 28:52
                                         // mir::Constant
                                         // + span: ui/backtrace-apple-no-dsymutil.rs:28:45: 28:52
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at ui/backtrace-apple-no-dsymutil.rs:28:45: 28:52
        return;                          // scope 0 at ui/backtrace-apple-no-dsymutil.rs:28:45: 28:52
    }
}

promoted[1] in main: &[&str; 2] = {
    let mut _0: &[&str; 2];              // return place in scope 0 at ui/backtrace-apple-no-dsymutil.rs:28:12: 28:43
    let mut _1: [&str; 2];               // in scope 0 at ui/backtrace-apple-no-dsymutil.rs:28:12: 28:43

    bb0: {
        _1 = [const "failed to find ", const " in output"]; // scope 0 at ui/backtrace-apple-no-dsymutil.rs:28:12: 28:43
                                         // mir::Constant
                                         // + span: ui/backtrace-apple-no-dsymutil.rs:28:12: 28:43
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
                                         // mir::Constant
                                         // + span: ui/backtrace-apple-no-dsymutil.rs:28:12: 28:43
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at ui/backtrace-apple-no-dsymutil.rs:28:12: 28:43
        return;                          // scope 0 at ui/backtrace-apple-no-dsymutil.rs:28:12: 28:43
    }
}

promoted[2] in main: &[&str; 2] = {
    let mut _0: &[&str; 2];              // return place in scope 0 at ui/backtrace-apple-no-dsymutil.rs:27:14: 27:35
    let mut _1: [&str; 2];               // in scope 0 at ui/backtrace-apple-no-dsymutil.rs:27:14: 27:35

    bb0: {
        _1 = [const "child output:\n\t", const "\n"]; // scope 0 at ui/backtrace-apple-no-dsymutil.rs:27:14: 27:35
                                         // mir::Constant
                                         // + span: ui/backtrace-apple-no-dsymutil.rs:27:14: 27:35
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
                                         // mir::Constant
                                         // + span: ui/backtrace-apple-no-dsymutil.rs:27:14: 27:35
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at ui/backtrace-apple-no-dsymutil.rs:27:14: 27:35
        return;                          // scope 0 at ui/backtrace-apple-no-dsymutil.rs:27:14: 27:35
    }
}

promoted[3] in main: &[&str; 2] = {
    let mut _0: &[&str; 2];              // return place in scope 0 at ui/backtrace-apple-no-dsymutil.rs:26:14: 26:26
    let mut _1: [&str; 2];               // in scope 0 at ui/backtrace-apple-no-dsymutil.rs:26:14: 26:26

    bb0: {
        _1 = [const "status: ", const "\n"]; // scope 0 at ui/backtrace-apple-no-dsymutil.rs:26:14: 26:26
                                         // mir::Constant
                                         // + span: ui/backtrace-apple-no-dsymutil.rs:26:14: 26:26
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
                                         // mir::Constant
                                         // + span: ui/backtrace-apple-no-dsymutil.rs:26:14: 26:26
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at ui/backtrace-apple-no-dsymutil.rs:26:14: 26:26
        return;                          // scope 0 at ui/backtrace-apple-no-dsymutil.rs:26:14: 26:26
    }
}

promoted[4] in main: &[&str; 2] = {
    let mut _0: &[&str; 2];              // return place in scope 0 at ui/backtrace-apple-no-dsymutil.rs:19:9: 19:17
    let mut _1: [&str; 2];               // in scope 0 at ui/backtrace-apple-no-dsymutil.rs:19:9: 19:17

    bb0: {
        _1 = [const "", const "\n"];     // scope 0 at ui/backtrace-apple-no-dsymutil.rs:19:9: 19:17
                                         // mir::Constant
                                         // + span: ui/backtrace-apple-no-dsymutil.rs:19:9: 19:17
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
                                         // mir::Constant
                                         // + span: ui/backtrace-apple-no-dsymutil.rs:19:9: 19:17
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at ui/backtrace-apple-no-dsymutil.rs:19:9: 19:17
        return;                          // scope 0 at ui/backtrace-apple-no-dsymutil.rs:19:9: 19:17
    }
}

promoted[5] in main: &[&str; 2] = {
    let mut _0: &[&str; 2];              // return place in scope 0 at ui/backtrace-apple-no-dsymutil.rs:14:18: 14:22
    let mut _1: [&str; 2];               // in scope 0 at ui/backtrace-apple-no-dsymutil.rs:14:18: 14:22

    bb0: {
        _1 = [const "", const "\n"];     // scope 0 at ui/backtrace-apple-no-dsymutil.rs:14:18: 14:22
                                         // mir::Constant
                                         // + span: ui/backtrace-apple-no-dsymutil.rs:14:18: 14:22
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
                                         // mir::Constant
                                         // + span: ui/backtrace-apple-no-dsymutil.rs:14:18: 14:22
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at ui/backtrace-apple-no-dsymutil.rs:14:18: 14:22
        return;                          // scope 0 at ui/backtrace-apple-no-dsymutil.rs:14:18: 14:22
    }
}
