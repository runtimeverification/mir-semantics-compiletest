// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
fn build() -> Vec<isize> {
    let mut _0: std::vec::Vec<isize>;    // return place in scope 0 at ui/panic-runtime/unwind-rec.rs:5:15: 5:25
    let mut _1: !;                       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/panic.rs:19:9: 19:50

    bb0: {
        _1 = begin_panic::<&str>(const "explicit panic"); // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/panic.rs:19:9: 19:50
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/panic.rs:19:9: 19:32
                                         // + literal: Const { ty: fn(&str) -> ! {begin_panic::<&str>}, val: Value(<ZST>) }
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/panic.rs:19:33: 19:49
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
    }
}

fn main() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/panic-runtime/unwind-rec.rs:13:11: 13:11
    let _1: Blk;                         // in scope 0 at ui/panic-runtime/unwind-rec.rs:14:9: 14:13
    let mut _2: std::vec::Vec<isize>;    // in scope 0 at ui/panic-runtime/unwind-rec.rs:14:28: 14:35
    scope 1 {
        debug _blk => _1;                // in scope 1 at ui/panic-runtime/unwind-rec.rs:14:9: 14:13
    }

    bb0: {
        _2 = build() -> bb1;             // scope 0 at ui/panic-runtime/unwind-rec.rs:14:28: 14:35
                                         // mir::Constant
                                         // + span: ui/panic-runtime/unwind-rec.rs:14:28: 14:33
                                         // + literal: Const { ty: fn() -> Vec<isize> {build}, val: Value(<ZST>) }
    }

    bb1: {
        _1 = Blk { node: move _2 };      // scope 0 at ui/panic-runtime/unwind-rec.rs:14:16: 14:37
        drop(_1) -> bb2;                 // scope 0 at ui/panic-runtime/unwind-rec.rs:15:1: 15:2
    }

    bb2: {
        return;                          // scope 0 at ui/panic-runtime/unwind-rec.rs:15:2: 15:2
    }
}
