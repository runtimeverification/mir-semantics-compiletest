// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
fn main() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/new-unsafe-pointers.rs:4:11: 4:11
    let _1: *const isize;                // in scope 0 at ui/new-unsafe-pointers.rs:5:9: 5:11
    scope 1 {
        debug _a => _1;                  // in scope 1 at ui/new-unsafe-pointers.rs:5:9: 5:11
        let _2: *mut isize;              // in scope 1 at ui/new-unsafe-pointers.rs:6:9: 6:11
        scope 2 {
            debug _a => _2;              // in scope 2 at ui/new-unsafe-pointers.rs:6:9: 6:11
        }
    }

    bb0: {
        _1 = const {0x3 as *const isize}; // scope 0 at ui/new-unsafe-pointers.rs:5:28: 5:45
                                         // mir::Constant
                                         // + span: ui/new-unsafe-pointers.rs:5:28: 5:45
                                         // + literal: Const { ty: *const isize, val: Value(Scalar(0x0000000000000003)) }
        _2 = const {0x3 as *mut isize};  // scope 1 at ui/new-unsafe-pointers.rs:6:26: 6:41
                                         // mir::Constant
                                         // + span: ui/new-unsafe-pointers.rs:6:26: 6:41
                                         // + literal: Const { ty: *mut isize, val: Value(Scalar(0x0000000000000003)) }
        return;                          // scope 0 at ui/new-unsafe-pointers.rs:7:2: 7:2
    }
}
