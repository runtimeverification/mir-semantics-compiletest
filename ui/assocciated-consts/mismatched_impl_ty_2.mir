// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
const <impl at ui/assocciated-consts/mismatched_impl_ty_2.rs:5:1: 5:18>::ASSOC: for<'a> fn(&'a u32) = {
    let mut _0: for<'a> fn(&'a u32);     // return place in scope 0 at ui/assocciated-consts/mismatched_impl_ty_2.rs:6:18: 6:37
    let mut _1: [closure@ui/assocciated-consts/mismatched_impl_ty_2.rs:6:40: 6:43]; // in scope 0 at ui/assocciated-consts/mismatched_impl_ty_2.rs:6:40: 6:46

    bb0: {
        StorageLive(_1);                 // scope 0 at ui/assocciated-consts/mismatched_impl_ty_2.rs:6:40: 6:46
        _1 = [closure@ui/assocciated-consts/mismatched_impl_ty_2.rs:6:40: 6:43]; // scope 0 at ui/assocciated-consts/mismatched_impl_ty_2.rs:6:40: 6:46
                                         // closure
                                         // + def_id: DefId(0:8 ~ mismatched_impl_ty_2[4b51]::{impl#0}::ASSOC::{closure#0})
                                         // + substs: [
                                         //     i8,
                                         //     for<'a> extern "rust-call" fn((&'a u32,)),
                                         //     (),
                                         // ]
        _0 = move _1 as for<'a> fn(&'a u32) (Pointer(ClosureFnPointer(Normal))); // scope 0 at ui/assocciated-consts/mismatched_impl_ty_2.rs:6:40: 6:46
        StorageDead(_1);                 // scope 0 at ui/assocciated-consts/mismatched_impl_ty_2.rs:6:42: 6:43
        return;                          // scope 0 at ui/assocciated-consts/mismatched_impl_ty_2.rs:6:5: 6:47
    }
}

fn <impl at ui/assocciated-consts/mismatched_impl_ty_2.rs:5:1: 5:18>::ASSOC::{closure#0}(_1: &[closure@ui/assocciated-consts/mismatched_impl_ty_2.rs:6:40: 6:43], _2: &u32) -> () {
    let mut _0: ();                      // return place in scope 0 at ui/assocciated-consts/mismatched_impl_ty_2.rs:6:44: 6:44

    bb0: {
        return;                          // scope 0 at ui/assocciated-consts/mismatched_impl_ty_2.rs:6:46: 6:46
    }
}

fn main() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/assocciated-consts/mismatched_impl_ty_2.rs:9:11: 9:11
    scope 1 {
    }

    bb0: {
        return;                          // scope 0 at ui/assocciated-consts/mismatched_impl_ty_2.rs:11:2: 11:2
    }
}
