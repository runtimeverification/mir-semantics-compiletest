// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
const <impl at ui/assocciated-consts/associated-const-trait-bound.rs:17:1: 17:30>::T: <F as FooExt>::T = {
    let mut _0: <F as FooExt>::T;        // return place in scope 0 at ui/assocciated-consts/associated-const-trait-bound.rs:18:14: 18:18

    bb0: {
        _0 = const _;                    // scope 0 at ui/assocciated-consts/associated-const-trait-bound.rs:18:21: 18:52
                                         // mir::Constant
                                         // + span: ui/assocciated-consts/associated-const-trait-bound.rs:18:21: 18:52
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: <F as FooExt>::T, val: Unevaluated(ConstDefault::DEFAULT, [<F as FooExt>::T], None) }
        return;                          // scope 0 at ui/assocciated-consts/associated-const-trait-bound.rs:18:5: 18:53
    }
}

fn main() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/assocciated-consts/associated-const-trait-bound.rs:21:11: 21:11

    bb0: {
        return;                          // scope 0 at ui/assocciated-consts/associated-const-trait-bound.rs:21:13: 21:13
    }
}
