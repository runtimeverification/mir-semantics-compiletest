// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
const <impl at ui/assocciated-consts/mismatched_impl_ty_3.rs:5:1: 5:18>::ASSOC: for<'a> fn(&'a u32, &'a u32) = {
    let mut _0: for<'a> fn(&'a u32, &'a u32); // return place in scope 0 at ui/assocciated-consts/mismatched_impl_ty_3.rs:6:18: 6:46
    let mut _1: [closure@ui/assocciated-consts/mismatched_impl_ty_3.rs:6:49: 6:55]; // in scope 0 at ui/assocciated-consts/mismatched_impl_ty_3.rs:6:49: 6:58

    bb0: {
        StorageLive(_1);                 // scope 0 at ui/assocciated-consts/mismatched_impl_ty_3.rs:6:49: 6:58
        _1 = [closure@ui/assocciated-consts/mismatched_impl_ty_3.rs:6:49: 6:55]; // scope 0 at ui/assocciated-consts/mismatched_impl_ty_3.rs:6:49: 6:58
                                         // closure
                                         // + def_id: DefId(0:10 ~ mismatched_impl_ty_3[59d4]::{impl#0}::ASSOC::{closure#0})
                                         // + substs: [
                                         //     i8,
                                         //     for<'a> extern "rust-call" fn((&'a u32, &'a u32)),
                                         //     (),
                                         // ]
        _0 = move _1 as for<'a> fn(&'a u32, &'a u32) (Pointer(ClosureFnPointer(Normal))); // scope 0 at ui/assocciated-consts/mismatched_impl_ty_3.rs:6:49: 6:58
        StorageDead(_1);                 // scope 0 at ui/assocciated-consts/mismatched_impl_ty_3.rs:6:54: 6:55
        return;                          // scope 0 at ui/assocciated-consts/mismatched_impl_ty_3.rs:6:5: 6:59
    }
}

fn <impl at ui/assocciated-consts/mismatched_impl_ty_3.rs:5:1: 5:18>::ASSOC::{closure#0}(_1: &[closure@ui/assocciated-consts/mismatched_impl_ty_3.rs:6:49: 6:55], _2: &u32, _3: &u32) -> () {
    let mut _0: ();                      // return place in scope 0 at ui/assocciated-consts/mismatched_impl_ty_3.rs:6:56: 6:56

    bb0: {
        return;                          // scope 0 at ui/assocciated-consts/mismatched_impl_ty_3.rs:6:58: 6:58
    }
}

fn main() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/assocciated-consts/mismatched_impl_ty_3.rs:9:11: 9:11
    scope 1 {
    }

    bb0: {
        return;                          // scope 0 at ui/assocciated-consts/mismatched_impl_ty_3.rs:11:2: 11:2
    }
}
