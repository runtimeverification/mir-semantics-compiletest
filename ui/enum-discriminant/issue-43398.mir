// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
fn main() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/enum-discriminant/issue-43398.rs:10:11: 10:11
    let _1: ();                          // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:62
    let mut _2: std::fmt::Arguments<'_>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _3: &[&str];                 // in scope 0 at ui/enum-discriminant/issue-43398.rs:11:14: 11:23
    let mut _4: &[&str; 3];              // in scope 0 at ui/enum-discriminant/issue-43398.rs:11:14: 11:23
    let _5: &[&str; 3];                  // in scope 0 at ui/enum-discriminant/issue-43398.rs:11:14: 11:23
    let mut _6: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _7: &[core::fmt::ArgumentV1<'_>; 2]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let _8: &[core::fmt::ArgumentV1<'_>; 2]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let _9: [core::fmt::ArgumentV1<'_>; 2]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _10: core::fmt::ArgumentV1<'_>; // in scope 0 at ui/enum-discriminant/issue-43398.rs:12:9: 12:53
    let mut _11: &i128;                  // in scope 0 at ui/enum-discriminant/issue-43398.rs:12:9: 12:53
    let _12: &i128;                      // in scope 0 at ui/enum-discriminant/issue-43398.rs:12:9: 12:53
    let _13: i128;                       // in scope 0 at ui/enum-discriminant/issue-43398.rs:12:9: 12:53
    let mut _14: &Big;                   // in scope 0 at ui/enum-discriminant/issue-43398.rs:12:45: 12:52
    let _15: &Big;                       // in scope 0 at ui/enum-discriminant/issue-43398.rs:12:45: 12:52
    let mut _16: core::fmt::ArgumentV1<'_>; // in scope 0 at ui/enum-discriminant/issue-43398.rs:13:9: 13:40
    let mut _17: &std::mem::Discriminant<Big>; // in scope 0 at ui/enum-discriminant/issue-43398.rs:13:9: 13:40
    let _18: &std::mem::Discriminant<Big>; // in scope 0 at ui/enum-discriminant/issue-43398.rs:13:9: 13:40
    let _19: std::mem::Discriminant<Big>; // in scope 0 at ui/enum-discriminant/issue-43398.rs:13:9: 13:40
    let mut _20: &Big;                   // in scope 0 at ui/enum-discriminant/issue-43398.rs:13:32: 13:39
    let _21: &Big;                       // in scope 0 at ui/enum-discriminant/issue-43398.rs:13:32: 13:39
    let mut _22: &Big;                   // in scope 0 at ui/enum-discriminant/issue-43398.rs:13:32: 13:39
    let mut _23: &Big;                   // in scope 0 at ui/enum-discriminant/issue-43398.rs:12:45: 12:52
    let mut _24: &[&str; 3];             // in scope 0 at ui/enum-discriminant/issue-43398.rs:11:14: 11:23

    bb0: {
        _24 = const _;                   // scope 0 at ui/enum-discriminant/issue-43398.rs:11:14: 11:23
                                         // mir::Constant
                                         // + span: ui/enum-discriminant/issue-43398.rs:11:14: 11:23
                                         // + literal: Const { ty: &[&str; 3], val: Unevaluated(main, [], Some(promoted[2])) }
        _5 = _24;                        // scope 0 at ui/enum-discriminant/issue-43398.rs:11:14: 11:23
        _4 = _5;                         // scope 0 at ui/enum-discriminant/issue-43398.rs:11:14: 11:23
        _3 = move _4 as &[&str] (Pointer(Unsize)); // scope 0 at ui/enum-discriminant/issue-43398.rs:11:14: 11:23
        _23 = const _;                   // scope 0 at ui/enum-discriminant/issue-43398.rs:12:45: 12:52
                                         // mir::Constant
                                         // + span: ui/enum-discriminant/issue-43398.rs:12:45: 12:52
                                         // + literal: Const { ty: &Big, val: Unevaluated(main, [], Some(promoted[1])) }
        _15 = _23;                       // scope 0 at ui/enum-discriminant/issue-43398.rs:12:45: 12:52
        _14 = _15;                       // scope 0 at ui/enum-discriminant/issue-43398.rs:12:45: 12:52
        _13 = discriminant((*_14));      // scope 0 at ui/enum-discriminant/issue-43398.rs:12:9: 12:53
        _12 = &_13;                      // scope 0 at ui/enum-discriminant/issue-43398.rs:12:9: 12:53
        _11 = _12;                       // scope 0 at ui/enum-discriminant/issue-43398.rs:12:9: 12:53
        _10 = core::fmt::ArgumentV1::<'_>::new_display::<i128>(move _11) -> bb1; // scope 0 at ui/enum-discriminant/issue-43398.rs:12:9: 12:53
                                         // mir::Constant
                                         // + span: ui/enum-discriminant/issue-43398.rs:12:9: 12:53
                                         // + user_ty: UserType(1)
                                         // + literal: Const { ty: for<'b> fn(&'b i128) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_display::<i128>}, val: Value(<ZST>) }
    }

    bb1: {
        _22 = const _;                   // scope 0 at ui/enum-discriminant/issue-43398.rs:13:32: 13:39
                                         // mir::Constant
                                         // + span: ui/enum-discriminant/issue-43398.rs:13:32: 13:39
                                         // + literal: Const { ty: &Big, val: Unevaluated(main, [], Some(promoted[0])) }
        _21 = _22;                       // scope 0 at ui/enum-discriminant/issue-43398.rs:13:32: 13:39
        _20 = _21;                       // scope 0 at ui/enum-discriminant/issue-43398.rs:13:32: 13:39
        _19 = discriminant::<Big>(move _20) -> bb2; // scope 0 at ui/enum-discriminant/issue-43398.rs:13:9: 13:40
                                         // mir::Constant
                                         // + span: ui/enum-discriminant/issue-43398.rs:13:9: 13:31
                                         // + literal: Const { ty: for<'a> fn(&'a Big) -> Discriminant<Big> {discriminant::<Big>}, val: Value(<ZST>) }
    }

    bb2: {
        _18 = &_19;                      // scope 0 at ui/enum-discriminant/issue-43398.rs:13:9: 13:40
        _17 = _18;                       // scope 0 at ui/enum-discriminant/issue-43398.rs:13:9: 13:40
        _16 = core::fmt::ArgumentV1::<'_>::new_debug::<Discriminant<Big>>(move _17) -> bb3; // scope 0 at ui/enum-discriminant/issue-43398.rs:13:9: 13:40
                                         // mir::Constant
                                         // + span: ui/enum-discriminant/issue-43398.rs:13:9: 13:40
                                         // + user_ty: UserType(2)
                                         // + literal: Const { ty: for<'b> fn(&'b Discriminant<Big>) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_debug::<Discriminant<Big>>}, val: Value(<ZST>) }
    }

    bb3: {
        _9 = [move _10, move _16];       // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _8 = &_9;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _7 = _8;                         // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _6 = move _7 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _2 = Arguments::<'_>::new_v1(move _3, move _6) -> bb4; // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb4: {
        _1 = _print(move _2) -> bb5;     // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:62
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:27
                                         // + literal: Const { ty: for<'a> fn(Arguments<'a>) {_print}, val: Value(<ZST>) }
    }

    bb5: {
        return;                          // scope 0 at ui/enum-discriminant/issue-43398.rs:14:2: 14:2
    }
}

promoted[0] in main: &Big = {
    let mut _0: &Big;                    // return place in scope 0 at ui/enum-discriminant/issue-43398.rs:13:32: 13:39
    let mut _1: Big;                     // in scope 0 at ui/enum-discriminant/issue-43398.rs:13:33: 13:39

    bb0: {
        _1 = Big::B;                     // scope 0 at ui/enum-discriminant/issue-43398.rs:13:33: 13:39
        _0 = &_1;                        // scope 0 at ui/enum-discriminant/issue-43398.rs:13:32: 13:39
        return;                          // scope 0 at ui/enum-discriminant/issue-43398.rs:13:32: 13:39
    }
}

promoted[1] in main: &Big = {
    let mut _0: &Big;                    // return place in scope 0 at ui/enum-discriminant/issue-43398.rs:12:45: 12:52
    let mut _1: Big;                     // in scope 0 at ui/enum-discriminant/issue-43398.rs:12:46: 12:52

    bb0: {
        _1 = Big::A;                     // scope 0 at ui/enum-discriminant/issue-43398.rs:12:46: 12:52
        _0 = &_1;                        // scope 0 at ui/enum-discriminant/issue-43398.rs:12:45: 12:52
        return;                          // scope 0 at ui/enum-discriminant/issue-43398.rs:12:45: 12:52
    }
}

promoted[2] in main: &[&str; 3] = {
    let mut _0: &[&str; 3];              // return place in scope 0 at ui/enum-discriminant/issue-43398.rs:11:14: 11:23
    let mut _1: [&str; 3];               // in scope 0 at ui/enum-discriminant/issue-43398.rs:11:14: 11:23

    bb0: {
        _1 = [const "", const " ", const "\n"]; // scope 0 at ui/enum-discriminant/issue-43398.rs:11:14: 11:23
                                         // mir::Constant
                                         // + span: ui/enum-discriminant/issue-43398.rs:11:14: 11:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
                                         // mir::Constant
                                         // + span: ui/enum-discriminant/issue-43398.rs:11:14: 11:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
                                         // mir::Constant
                                         // + span: ui/enum-discriminant/issue-43398.rs:11:14: 11:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at ui/enum-discriminant/issue-43398.rs:11:14: 11:23
        return;                          // scope 0 at ui/enum-discriminant/issue-43398.rs:11:14: 11:23
    }
}
