// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
Enum::Unit::{constant#0}: u8 = {
    let mut _0: u8;                      // return place in scope 0 at ui/enum-discriminant/arbitrary_enum_discriminant.rs:11:12: 11:13

    bb0: {
        _0 = const 3_u8;                 // scope 0 at ui/enum-discriminant/arbitrary_enum_discriminant.rs:11:12: 11:13
        return;                          // scope 0 at ui/enum-discriminant/arbitrary_enum_discriminant.rs:11:12: 11:13
    }
}

Enum::Tuple::{constant#0}: u8 = {
    let mut _0: u8;                      // return place in scope 0 at ui/enum-discriminant/arbitrary_enum_discriminant.rs:12:18: 12:19

    bb0: {
        _0 = const 2_u8;                 // scope 0 at ui/enum-discriminant/arbitrary_enum_discriminant.rs:12:18: 12:19
        return;                          // scope 0 at ui/enum-discriminant/arbitrary_enum_discriminant.rs:12:18: 12:19
    }
}

Enum::Struct::{constant#0}: u8 = {
    let mut _0: u8;                      // return place in scope 0 at ui/enum-discriminant/arbitrary_enum_discriminant.rs:16:9: 16:10

    bb0: {
        _0 = const 1_u8;                 // scope 0 at ui/enum-discriminant/arbitrary_enum_discriminant.rs:16:9: 16:10
        return;                          // scope 0 at ui/enum-discriminant/arbitrary_enum_discriminant.rs:16:9: 16:10
    }
}

fn <impl at ui/enum-discriminant/arbitrary_enum_discriminant.rs:19:1: 19:10>::tag(_1: &Enum) -> u8 {
    debug self => _1;                    // in scope 0 at ui/enum-discriminant/arbitrary_enum_discriminant.rs:20:25: 20:30
    let mut _0: u8;                      // return place in scope 0 at ui/enum-discriminant/arbitrary_enum_discriminant.rs:20:35: 20:37
    let mut _2: *const u8;               // in scope 0 at ui/enum-discriminant/arbitrary_enum_discriminant.rs:21:10: 21:44
    let mut _3: *const Enum;             // in scope 0 at ui/enum-discriminant/arbitrary_enum_discriminant.rs:21:11: 21:30

    bb0: {
        _3 = &raw const (*_1);           // scope 0 at ui/enum-discriminant/arbitrary_enum_discriminant.rs:21:11: 21:15
        _2 = move _3 as *const u8 (PtrToPtr); // scope 0 at ui/enum-discriminant/arbitrary_enum_discriminant.rs:21:10: 21:44
        _0 = (*_2);                      // scope 0 at ui/enum-discriminant/arbitrary_enum_discriminant.rs:21:9: 21:44
        return;                          // scope 0 at ui/enum-discriminant/arbitrary_enum_discriminant.rs:22:6: 22:6
    }
}

// MIR FOR CTFE
fn <impl at ui/enum-discriminant/arbitrary_enum_discriminant.rs:19:1: 19:10>::tag(_1: &Enum) -> u8 {
    debug self => _1;                    // in scope 0 at ui/enum-discriminant/arbitrary_enum_discriminant.rs:20:25: 20:30
    let mut _0: u8;                      // return place in scope 0 at ui/enum-discriminant/arbitrary_enum_discriminant.rs:20:35: 20:37
    let mut _2: *const u8;               // in scope 0 at ui/enum-discriminant/arbitrary_enum_discriminant.rs:21:10: 21:44
    let mut _3: *const Enum;             // in scope 0 at ui/enum-discriminant/arbitrary_enum_discriminant.rs:21:11: 21:30

    bb0: {
        StorageLive(_2);                 // scope 0 at ui/enum-discriminant/arbitrary_enum_discriminant.rs:21:10: 21:44
        StorageLive(_3);                 // scope 0 at ui/enum-discriminant/arbitrary_enum_discriminant.rs:21:11: 21:30
        _3 = &raw const (*_1);           // scope 0 at ui/enum-discriminant/arbitrary_enum_discriminant.rs:21:11: 21:15
        _2 = move _3 as *const u8 (PtrToPtr); // scope 0 at ui/enum-discriminant/arbitrary_enum_discriminant.rs:21:10: 21:44
        StorageDead(_3);                 // scope 0 at ui/enum-discriminant/arbitrary_enum_discriminant.rs:21:43: 21:44
        _0 = (*_2);                      // scope 0 at ui/enum-discriminant/arbitrary_enum_discriminant.rs:21:9: 21:44
        StorageDead(_2);                 // scope 0 at ui/enum-discriminant/arbitrary_enum_discriminant.rs:22:5: 22:6
        return;                          // scope 0 at ui/enum-discriminant/arbitrary_enum_discriminant.rs:22:6: 22:6
    }
}

fn main() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/enum-discriminant/arbitrary_enum_discriminant.rs:25:11: 25:11
    let mut _1: (&u8, &u8);              // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _2: &u8;                     // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let mut _3: &u8;                     // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let _4: u8;                          // in scope 0 at ui/enum-discriminant/arbitrary_enum_discriminant.rs:31:19: 31:51
    let mut _5: &Enum;                   // in scope 0 at ui/enum-discriminant/arbitrary_enum_discriminant.rs:31:28: 31:49
    let _6: Enum;                        // in scope 0 at ui/enum-discriminant/arbitrary_enum_discriminant.rs:31:28: 31:43
    let _7: &u8;                         // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
    let _8: &u8;                         // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
    let mut _9: bool;                    // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    let mut _10: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
    let mut _11: u8;                     // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
    let mut _12: u8;                     // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
    let _14: !;                          // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
    let mut _15: core::panicking::AssertKind; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
    let mut _16: &u8;                    // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let _17: &u8;                        // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let mut _18: &u8;                    // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let _19: &u8;                        // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let mut _20: std::option::Option<std::fmt::Arguments<'_>>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
    let mut _21: (&u8, &u8);             // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _22: &u8;                    // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let mut _23: &u8;                    // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let _24: u8;                         // in scope 0 at ui/enum-discriminant/arbitrary_enum_discriminant.rs:32:19: 32:52
    let mut _25: &Enum;                  // in scope 0 at ui/enum-discriminant/arbitrary_enum_discriminant.rs:32:28: 32:50
    let _26: Enum;                       // in scope 0 at ui/enum-discriminant/arbitrary_enum_discriminant.rs:32:28: 32:44
    let _27: &u8;                        // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
    let _28: &u8;                        // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
    let mut _29: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    let mut _30: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
    let mut _31: u8;                     // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
    let mut _32: u8;                     // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
    let _34: !;                          // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
    let mut _35: core::panicking::AssertKind; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
    let mut _36: &u8;                    // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let _37: &u8;                        // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let mut _38: &u8;                    // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let _39: &u8;                        // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let mut _40: std::option::Option<std::fmt::Arguments<'_>>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
    let mut _41: (&u8, &u8);             // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _42: &u8;                    // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let mut _43: &u8;                    // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let _44: u8;                         // in scope 0 at ui/enum-discriminant/arbitrary_enum_discriminant.rs:33:19: 33:53
    let mut _45: &Enum;                  // in scope 0 at ui/enum-discriminant/arbitrary_enum_discriminant.rs:33:28: 33:51
    let _46: Enum;                       // in scope 0 at ui/enum-discriminant/arbitrary_enum_discriminant.rs:33:28: 33:45
    let _47: &u8;                        // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
    let _48: &u8;                        // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
    let mut _49: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    let mut _50: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
    let mut _51: u8;                     // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
    let mut _52: u8;                     // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
    let _54: !;                          // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
    let mut _55: core::panicking::AssertKind; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
    let mut _56: &u8;                    // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let _57: &u8;                        // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let mut _58: &u8;                    // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let _59: &u8;                        // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let mut _60: std::option::Option<std::fmt::Arguments<'_>>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
    let mut _61: (&u8, &u8);             // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _62: &u8;                    // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let mut _63: &u8;                    // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let _64: &u8;                        // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
    let _65: &u8;                        // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
    let mut _67: (&u8, &u8);             // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _68: &u8;                    // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let mut _69: &u8;                    // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let _70: &u8;                        // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
    let _71: &u8;                        // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
    let mut _73: (&u8, &u8);             // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _74: &u8;                    // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let mut _75: &u8;                    // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let _76: &u8;                        // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
    let _77: &u8;                        // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
    let mut _79: &u8;                    // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _80: &u8;                    // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let mut _81: &u8;                    // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _82: &u8;                    // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let mut _83: &u8;                    // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _84: &u8;                    // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let mut _85: &u8;                    // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let mut _86: &u8;                    // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let mut _87: &u8;                    // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    scope 1 {
    }
    scope 2 {
        debug left_val => _7;            // in scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        debug right_val => _8;           // in scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        let _13: core::panicking::AssertKind; // in scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
        scope 3 {
            debug kind => _13;           // in scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
        }
    }
    scope 4 {
    }
    scope 5 {
        debug left_val => _27;           // in scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        debug right_val => _28;          // in scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        let _33: core::panicking::AssertKind; // in scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
        scope 6 {
            debug kind => _33;           // in scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
        }
    }
    scope 7 {
    }
    scope 8 {
        debug left_val => _47;           // in scope 8 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        debug right_val => _48;          // in scope 8 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        let _53: core::panicking::AssertKind; // in scope 8 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
        scope 9 {
            debug kind => _53;           // in scope 9 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
        }
    }
    scope 10 {
        debug left_val => _64;           // in scope 10 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        debug right_val => _65;          // in scope 10 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        let _66: core::panicking::AssertKind; // in scope 10 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
        scope 11 {
            debug kind => _66;           // in scope 11 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
        }
    }
    scope 12 {
        debug left_val => _70;           // in scope 12 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        debug right_val => _71;          // in scope 12 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        let _72: core::panicking::AssertKind; // in scope 12 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
        scope 13 {
            debug kind => _72;           // in scope 13 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
        }
    }
    scope 14 {
        debug left_val => _76;           // in scope 14 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        debug right_val => _77;          // in scope 14 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        let _78: core::panicking::AssertKind; // in scope 14 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
        scope 15 {
            debug kind => _78;           // in scope 15 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
        }
    }

    bb0: {
        _87 = const _;                   // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
                                         // + literal: Const { ty: &u8, val: Unevaluated(main, [], Some(promoted[8])) }
        _2 = _87;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _6 = test::black_box::<Enum>(const _) -> bb1; // scope 1 at ui/enum-discriminant/arbitrary_enum_discriminant.rs:31:28: 31:43
                                         // mir::Constant
                                         // + span: ui/enum-discriminant/arbitrary_enum_discriminant.rs:31:28: 31:37
                                         // + literal: Const { ty: fn(Enum) -> Enum {test::black_box::<Enum>}, val: Value(<ZST>) }
                                         // mir::Constant
                                         // + span: ui/enum-discriminant/arbitrary_enum_discriminant.rs:31:38: 31:42
                                         // + literal: Const { ty: Enum, val: Unevaluated(UNIT, [], None) }
    }

    bb1: {
        _5 = &_6;                        // scope 1 at ui/enum-discriminant/arbitrary_enum_discriminant.rs:31:28: 31:49
        _4 = Enum::tag(move _5) -> bb2;  // scope 1 at ui/enum-discriminant/arbitrary_enum_discriminant.rs:31:28: 31:49
                                         // mir::Constant
                                         // + span: ui/enum-discriminant/arbitrary_enum_discriminant.rs:31:44: 31:47
                                         // + literal: Const { ty: for<'a> unsafe fn(&'a Enum) -> u8 {Enum::tag}, val: Value(<ZST>) }
    }

    bb2: {
        _3 = &_4;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _1 = (move _2, move _3);         // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _7 = (_1.0: &u8);                // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _8 = (_1.1: &u8);                // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _11 = const 3_u8;                // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
        _12 = (*_8);                     // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
        _10 = Eq(move _11, move _12);    // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
        _9 = Not(move _10);              // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
        switchInt(move _9) -> [0: bb4, otherwise: bb3]; // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    }

    bb3: {
        _13 = const core::panicking::AssertKind::Eq; // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _15 = const core::panicking::AssertKind::Eq; // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _17 = _7;                        // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _16 = _17;                       // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _19 = _8;                        // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _18 = _19;                       // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _20 = Option::<Arguments<'_>>::None; // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
        _14 = core::panicking::assert_failed::<u8, u8>(move _15, move _16, move _18, move _20); // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:53
                                         // + literal: Const { ty: for<'a, 'b, 'c> fn(core::panicking::AssertKind, &'a u8, &'b u8, Option<Arguments<'c>>) -> ! {core::panicking::assert_failed::<u8, u8>}, val: Value(<ZST>) }
    }

    bb4: {
        _86 = const _;                   // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
                                         // + literal: Const { ty: &u8, val: Unevaluated(main, [], Some(promoted[7])) }
        _22 = _86;                       // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _26 = test::black_box::<Enum>(const _) -> bb5; // scope 4 at ui/enum-discriminant/arbitrary_enum_discriminant.rs:32:28: 32:44
                                         // mir::Constant
                                         // + span: ui/enum-discriminant/arbitrary_enum_discriminant.rs:32:28: 32:37
                                         // + literal: Const { ty: fn(Enum) -> Enum {test::black_box::<Enum>}, val: Value(<ZST>) }
                                         // mir::Constant
                                         // + span: ui/enum-discriminant/arbitrary_enum_discriminant.rs:32:38: 32:43
                                         // + literal: Const { ty: Enum, val: Unevaluated(TUPLE, [], None) }
    }

    bb5: {
        _25 = &_26;                      // scope 4 at ui/enum-discriminant/arbitrary_enum_discriminant.rs:32:28: 32:50
        _24 = Enum::tag(move _25) -> bb6; // scope 4 at ui/enum-discriminant/arbitrary_enum_discriminant.rs:32:28: 32:50
                                         // mir::Constant
                                         // + span: ui/enum-discriminant/arbitrary_enum_discriminant.rs:32:45: 32:48
                                         // + literal: Const { ty: for<'a> unsafe fn(&'a Enum) -> u8 {Enum::tag}, val: Value(<ZST>) }
    }

    bb6: {
        _23 = &_24;                      // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _21 = (move _22, move _23);      // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _27 = (_21.0: &u8);              // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _28 = (_21.1: &u8);              // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _31 = const 2_u8;                // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
        _32 = (*_28);                    // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
        _30 = Eq(move _31, move _32);    // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
        _29 = Not(move _30);             // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
        switchInt(move _29) -> [0: bb8, otherwise: bb7]; // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    }

    bb7: {
        _33 = const core::panicking::AssertKind::Eq; // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _35 = const core::panicking::AssertKind::Eq; // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _37 = _27;                       // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _36 = _37;                       // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _39 = _28;                       // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _38 = _39;                       // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _40 = Option::<Arguments<'_>>::None; // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
        _34 = core::panicking::assert_failed::<u8, u8>(move _35, move _36, move _38, move _40); // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:53
                                         // + literal: Const { ty: for<'a, 'b, 'c> fn(core::panicking::AssertKind, &'a u8, &'b u8, Option<Arguments<'c>>) -> ! {core::panicking::assert_failed::<u8, u8>}, val: Value(<ZST>) }
    }

    bb8: {
        _85 = const _;                   // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
                                         // + literal: Const { ty: &u8, val: Unevaluated(main, [], Some(promoted[6])) }
        _42 = _85;                       // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _46 = test::black_box::<Enum>(const _) -> bb9; // scope 7 at ui/enum-discriminant/arbitrary_enum_discriminant.rs:33:28: 33:45
                                         // mir::Constant
                                         // + span: ui/enum-discriminant/arbitrary_enum_discriminant.rs:33:28: 33:37
                                         // + literal: Const { ty: fn(Enum) -> Enum {test::black_box::<Enum>}, val: Value(<ZST>) }
                                         // mir::Constant
                                         // + span: ui/enum-discriminant/arbitrary_enum_discriminant.rs:33:38: 33:44
                                         // + literal: Const { ty: Enum, val: Unevaluated(STRUCT, [], None) }
    }

    bb9: {
        _45 = &_46;                      // scope 7 at ui/enum-discriminant/arbitrary_enum_discriminant.rs:33:28: 33:51
        _44 = Enum::tag(move _45) -> bb10; // scope 7 at ui/enum-discriminant/arbitrary_enum_discriminant.rs:33:28: 33:51
                                         // mir::Constant
                                         // + span: ui/enum-discriminant/arbitrary_enum_discriminant.rs:33:46: 33:49
                                         // + literal: Const { ty: for<'a> unsafe fn(&'a Enum) -> u8 {Enum::tag}, val: Value(<ZST>) }
    }

    bb10: {
        _43 = &_44;                      // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _41 = (move _42, move _43);      // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _47 = (_41.0: &u8);              // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _48 = (_41.1: &u8);              // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _51 = const 1_u8;                // scope 8 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
        _52 = (*_48);                    // scope 8 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
        _50 = Eq(move _51, move _52);    // scope 8 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
        _49 = Not(move _50);             // scope 8 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
        switchInt(move _49) -> [0: bb12, otherwise: bb11]; // scope 8 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    }

    bb11: {
        _53 = const core::panicking::AssertKind::Eq; // scope 8 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _55 = const core::panicking::AssertKind::Eq; // scope 9 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _57 = _47;                       // scope 9 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _56 = _57;                       // scope 9 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _59 = _48;                       // scope 9 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _58 = _59;                       // scope 9 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _60 = Option::<Arguments<'_>>::None; // scope 9 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
        _54 = core::panicking::assert_failed::<u8, u8>(move _55, move _56, move _58, move _60); // scope 9 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:53
                                         // + literal: Const { ty: for<'a, 'b, 'c> fn(core::panicking::AssertKind, &'a u8, &'b u8, Option<Arguments<'c>>) -> ! {core::panicking::assert_failed::<u8, u8>}, val: Value(<ZST>) }
    }

    bb12: {
        _84 = const _;                   // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
                                         // + literal: Const { ty: &u8, val: Unevaluated(main, [], Some(promoted[5])) }
        _62 = _84;                       // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _83 = const _;                   // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // + literal: Const { ty: &u8, val: Unevaluated(main, [], Some(promoted[4])) }
        _63 = _83;                       // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _61 = (move _62, move _63);      // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _64 = (_61.0: &u8);              // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _65 = (_61.1: &u8);              // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _82 = const _;                   // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
                                         // + literal: Const { ty: &u8, val: Unevaluated(main, [], Some(promoted[3])) }
        _68 = _82;                       // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _81 = const _;                   // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // + literal: Const { ty: &u8, val: Unevaluated(main, [], Some(promoted[2])) }
        _69 = _81;                       // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _67 = (move _68, move _69);      // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _70 = (_67.0: &u8);              // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _71 = (_67.1: &u8);              // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _80 = const _;                   // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
                                         // + literal: Const { ty: &u8, val: Unevaluated(main, [], Some(promoted[1])) }
        _74 = _80;                       // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _79 = const _;                   // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // + literal: Const { ty: &u8, val: Unevaluated(main, [], Some(promoted[0])) }
        _75 = _79;                       // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _73 = (move _74, move _75);      // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _76 = (_73.0: &u8);              // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _77 = (_73.1: &u8);              // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        return;                          // scope 0 at ui/enum-discriminant/arbitrary_enum_discriminant.rs:43:2: 43:2
    }
}

promoted[0] in main: &u8 = {
    let mut _0: &u8;                     // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _1: u8;                      // in scope 0 at ui/enum-discriminant/arbitrary_enum_discriminant.rs:42:19: 42:29

    bb0: {
        _1 = const _;                    // scope 0 at ui/enum-discriminant/arbitrary_enum_discriminant.rs:42:19: 42:29
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    }
}

promoted[1] in main: &u8 = {
    let mut _0: &u8;                     // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let mut _1: u8;                      // in scope 0 at ui/enum-discriminant/arbitrary_enum_discriminant.rs:42:16: 42:17

    bb0: {
        _1 = const 1_u8;                 // scope 0 at ui/enum-discriminant/arbitrary_enum_discriminant.rs:42:16: 42:17
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    }
}

promoted[2] in main: &u8 = {
    let mut _0: &u8;                     // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _1: u8;                      // in scope 0 at ui/enum-discriminant/arbitrary_enum_discriminant.rs:41:19: 41:28

    bb0: {
        _1 = const _;                    // scope 0 at ui/enum-discriminant/arbitrary_enum_discriminant.rs:41:19: 41:28
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    }
}

promoted[3] in main: &u8 = {
    let mut _0: &u8;                     // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let mut _1: u8;                      // in scope 0 at ui/enum-discriminant/arbitrary_enum_discriminant.rs:41:16: 41:17

    bb0: {
        _1 = const 2_u8;                 // scope 0 at ui/enum-discriminant/arbitrary_enum_discriminant.rs:41:16: 41:17
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    }
}

promoted[4] in main: &u8 = {
    let mut _0: &u8;                     // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _1: u8;                      // in scope 0 at ui/enum-discriminant/arbitrary_enum_discriminant.rs:40:19: 40:27

    bb0: {
        _1 = const _;                    // scope 0 at ui/enum-discriminant/arbitrary_enum_discriminant.rs:40:19: 40:27
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    }
}

promoted[5] in main: &u8 = {
    let mut _0: &u8;                     // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let mut _1: u8;                      // in scope 0 at ui/enum-discriminant/arbitrary_enum_discriminant.rs:40:16: 40:17

    bb0: {
        _1 = const 3_u8;                 // scope 0 at ui/enum-discriminant/arbitrary_enum_discriminant.rs:40:16: 40:17
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    }
}

promoted[6] in main: &u8 = {
    let mut _0: &u8;                     // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let mut _1: u8;                      // in scope 0 at ui/enum-discriminant/arbitrary_enum_discriminant.rs:33:16: 33:17

    bb0: {
        _1 = const 1_u8;                 // scope 0 at ui/enum-discriminant/arbitrary_enum_discriminant.rs:33:16: 33:17
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    }
}

promoted[7] in main: &u8 = {
    let mut _0: &u8;                     // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let mut _1: u8;                      // in scope 0 at ui/enum-discriminant/arbitrary_enum_discriminant.rs:32:16: 32:17

    bb0: {
        _1 = const 2_u8;                 // scope 0 at ui/enum-discriminant/arbitrary_enum_discriminant.rs:32:16: 32:17
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    }
}

promoted[8] in main: &u8 = {
    let mut _0: &u8;                     // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let mut _1: u8;                      // in scope 0 at ui/enum-discriminant/arbitrary_enum_discriminant.rs:31:16: 31:17

    bb0: {
        _1 = const 3_u8;                 // scope 0 at ui/enum-discriminant/arbitrary_enum_discriminant.rs:31:16: 31:17
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    }
}

const UNIT: Enum = {
    let mut _0: Enum;                    // return place in scope 0 at ui/enum-discriminant/arbitrary_enum_discriminant.rs:26:17: 26:21

    bb0: {
        _0 = Enum::Unit;                 // scope 0 at ui/enum-discriminant/arbitrary_enum_discriminant.rs:26:24: 26:34
        return;                          // scope 0 at ui/enum-discriminant/arbitrary_enum_discriminant.rs:26:5: 26:35
    }
}

const TUPLE: Enum = {
    let mut _0: Enum;                    // return place in scope 0 at ui/enum-discriminant/arbitrary_enum_discriminant.rs:27:18: 27:22

    bb0: {
        _0 = Enum::Tuple(const 5_u16);   // scope 0 at ui/enum-discriminant/arbitrary_enum_discriminant.rs:27:25: 27:39
        return;                          // scope 0 at ui/enum-discriminant/arbitrary_enum_discriminant.rs:27:5: 27:40
    }
}

const STRUCT: Enum = {
    let mut _0: Enum;                    // return place in scope 0 at ui/enum-discriminant/arbitrary_enum_discriminant.rs:28:19: 28:23

    bb0: {
        _0 = Enum::Struct { a: const 7_u8, b: const 11_u16 }; // scope 0 at ui/enum-discriminant/arbitrary_enum_discriminant.rs:28:26: 28:51
        return;                          // scope 0 at ui/enum-discriminant/arbitrary_enum_discriminant.rs:28:5: 28:52
    }
}

const UNIT_TAG: u8 = {
    let mut _0: u8;                      // return place in scope 0 at ui/enum-discriminant/arbitrary_enum_discriminant.rs:36:21: 36:23
    let mut _1: &Enum;                   // in scope 0 at ui/enum-discriminant/arbitrary_enum_discriminant.rs:36:35: 36:45
    let _2: Enum;                        // in scope 0 at ui/enum-discriminant/arbitrary_enum_discriminant.rs:36:35: 36:39
    scope 1 {
        let mut _3: &Enum;               // in scope 1 at ui/enum-discriminant/arbitrary_enum_discriminant.rs:36:35: 36:45
    }

    bb0: {
        StorageLive(_1);                 // scope 1 at ui/enum-discriminant/arbitrary_enum_discriminant.rs:36:35: 36:45
        _3 = const _;                    // scope 1 at ui/enum-discriminant/arbitrary_enum_discriminant.rs:36:35: 36:45
                                         // mir::Constant
                                         // + span: ui/enum-discriminant/arbitrary_enum_discriminant.rs:36:35: 36:45
                                         // + literal: Const { ty: &Enum, val: Unevaluated(UNIT_TAG, [], Some(promoted[0])) }
        _1 = &(*_3);                     // scope 1 at ui/enum-discriminant/arbitrary_enum_discriminant.rs:36:35: 36:45
        ConstEvalCounter;                // scope 1 at ui/enum-discriminant/arbitrary_enum_discriminant.rs:36:35: 36:45
        _0 = Enum::tag(move _1) -> bb1;  // scope 1 at ui/enum-discriminant/arbitrary_enum_discriminant.rs:36:35: 36:45
                                         // mir::Constant
                                         // + span: ui/enum-discriminant/arbitrary_enum_discriminant.rs:36:40: 36:43
                                         // + literal: Const { ty: for<'a> unsafe fn(&'a Enum) -> u8 {Enum::tag}, val: Value(<ZST>) }
    }

    bb1: {
        StorageDead(_1);                 // scope 1 at ui/enum-discriminant/arbitrary_enum_discriminant.rs:36:44: 36:45
        return;                          // scope 0 at ui/enum-discriminant/arbitrary_enum_discriminant.rs:36:5: 36:48
    }
}

promoted[0] in UNIT_TAG: &Enum = {
    let mut _0: &Enum;                   // return place in scope 0 at ui/enum-discriminant/arbitrary_enum_discriminant.rs:36:35: 36:45
    let mut _1: Enum;                    // in scope 0 at ui/enum-discriminant/arbitrary_enum_discriminant.rs:36:35: 36:39

    bb0: {
        _1 = const _;                    // scope 0 at ui/enum-discriminant/arbitrary_enum_discriminant.rs:36:35: 36:39
                                         // mir::Constant
                                         // + span: ui/enum-discriminant/arbitrary_enum_discriminant.rs:36:35: 36:39
                                         // + literal: Const { ty: Enum, val: Unevaluated(UNIT, [], None) }
        _0 = &_1;                        // scope 0 at ui/enum-discriminant/arbitrary_enum_discriminant.rs:36:35: 36:45
        return;                          // scope 0 at ui/enum-discriminant/arbitrary_enum_discriminant.rs:36:35: 36:45
    }
}

const TUPLE_TAG: u8 = {
    let mut _0: u8;                      // return place in scope 0 at ui/enum-discriminant/arbitrary_enum_discriminant.rs:37:22: 37:24
    let mut _1: &Enum;                   // in scope 0 at ui/enum-discriminant/arbitrary_enum_discriminant.rs:37:36: 37:47
    let _2: Enum;                        // in scope 0 at ui/enum-discriminant/arbitrary_enum_discriminant.rs:37:36: 37:41
    scope 1 {
        let mut _3: &Enum;               // in scope 1 at ui/enum-discriminant/arbitrary_enum_discriminant.rs:37:36: 37:47
    }

    bb0: {
        StorageLive(_1);                 // scope 1 at ui/enum-discriminant/arbitrary_enum_discriminant.rs:37:36: 37:47
        _3 = const _;                    // scope 1 at ui/enum-discriminant/arbitrary_enum_discriminant.rs:37:36: 37:47
                                         // mir::Constant
                                         // + span: ui/enum-discriminant/arbitrary_enum_discriminant.rs:37:36: 37:47
                                         // + literal: Const { ty: &Enum, val: Unevaluated(TUPLE_TAG, [], Some(promoted[0])) }
        _1 = &(*_3);                     // scope 1 at ui/enum-discriminant/arbitrary_enum_discriminant.rs:37:36: 37:47
        ConstEvalCounter;                // scope 1 at ui/enum-discriminant/arbitrary_enum_discriminant.rs:37:36: 37:47
        _0 = Enum::tag(move _1) -> bb1;  // scope 1 at ui/enum-discriminant/arbitrary_enum_discriminant.rs:37:36: 37:47
                                         // mir::Constant
                                         // + span: ui/enum-discriminant/arbitrary_enum_discriminant.rs:37:42: 37:45
                                         // + literal: Const { ty: for<'a> unsafe fn(&'a Enum) -> u8 {Enum::tag}, val: Value(<ZST>) }
    }

    bb1: {
        StorageDead(_1);                 // scope 1 at ui/enum-discriminant/arbitrary_enum_discriminant.rs:37:46: 37:47
        return;                          // scope 0 at ui/enum-discriminant/arbitrary_enum_discriminant.rs:37:5: 37:50
    }
}

promoted[0] in TUPLE_TAG: &Enum = {
    let mut _0: &Enum;                   // return place in scope 0 at ui/enum-discriminant/arbitrary_enum_discriminant.rs:37:36: 37:47
    let mut _1: Enum;                    // in scope 0 at ui/enum-discriminant/arbitrary_enum_discriminant.rs:37:36: 37:41

    bb0: {
        _1 = const _;                    // scope 0 at ui/enum-discriminant/arbitrary_enum_discriminant.rs:37:36: 37:41
                                         // mir::Constant
                                         // + span: ui/enum-discriminant/arbitrary_enum_discriminant.rs:37:36: 37:41
                                         // + literal: Const { ty: Enum, val: Unevaluated(TUPLE, [], None) }
        _0 = &_1;                        // scope 0 at ui/enum-discriminant/arbitrary_enum_discriminant.rs:37:36: 37:47
        return;                          // scope 0 at ui/enum-discriminant/arbitrary_enum_discriminant.rs:37:36: 37:47
    }
}

const STRUCT_TAG: u8 = {
    let mut _0: u8;                      // return place in scope 0 at ui/enum-discriminant/arbitrary_enum_discriminant.rs:38:23: 38:25
    let mut _1: &Enum;                   // in scope 0 at ui/enum-discriminant/arbitrary_enum_discriminant.rs:38:37: 38:49
    let _2: Enum;                        // in scope 0 at ui/enum-discriminant/arbitrary_enum_discriminant.rs:38:37: 38:43
    scope 1 {
        let mut _3: &Enum;               // in scope 1 at ui/enum-discriminant/arbitrary_enum_discriminant.rs:38:37: 38:49
    }

    bb0: {
        StorageLive(_1);                 // scope 1 at ui/enum-discriminant/arbitrary_enum_discriminant.rs:38:37: 38:49
        _3 = const _;                    // scope 1 at ui/enum-discriminant/arbitrary_enum_discriminant.rs:38:37: 38:49
                                         // mir::Constant
                                         // + span: ui/enum-discriminant/arbitrary_enum_discriminant.rs:38:37: 38:49
                                         // + literal: Const { ty: &Enum, val: Unevaluated(STRUCT_TAG, [], Some(promoted[0])) }
        _1 = &(*_3);                     // scope 1 at ui/enum-discriminant/arbitrary_enum_discriminant.rs:38:37: 38:49
        ConstEvalCounter;                // scope 1 at ui/enum-discriminant/arbitrary_enum_discriminant.rs:38:37: 38:49
        _0 = Enum::tag(move _1) -> bb1;  // scope 1 at ui/enum-discriminant/arbitrary_enum_discriminant.rs:38:37: 38:49
                                         // mir::Constant
                                         // + span: ui/enum-discriminant/arbitrary_enum_discriminant.rs:38:44: 38:47
                                         // + literal: Const { ty: for<'a> unsafe fn(&'a Enum) -> u8 {Enum::tag}, val: Value(<ZST>) }
    }

    bb1: {
        StorageDead(_1);                 // scope 1 at ui/enum-discriminant/arbitrary_enum_discriminant.rs:38:48: 38:49
        return;                          // scope 0 at ui/enum-discriminant/arbitrary_enum_discriminant.rs:38:5: 38:52
    }
}

promoted[0] in STRUCT_TAG: &Enum = {
    let mut _0: &Enum;                   // return place in scope 0 at ui/enum-discriminant/arbitrary_enum_discriminant.rs:38:37: 38:49
    let mut _1: Enum;                    // in scope 0 at ui/enum-discriminant/arbitrary_enum_discriminant.rs:38:37: 38:43

    bb0: {
        _1 = const _;                    // scope 0 at ui/enum-discriminant/arbitrary_enum_discriminant.rs:38:37: 38:43
                                         // mir::Constant
                                         // + span: ui/enum-discriminant/arbitrary_enum_discriminant.rs:38:37: 38:43
                                         // + literal: Const { ty: Enum, val: Unevaluated(STRUCT, [], None) }
        _0 = &_1;                        // scope 0 at ui/enum-discriminant/arbitrary_enum_discriminant.rs:38:37: 38:49
        return;                          // scope 0 at ui/enum-discriminant/arbitrary_enum_discriminant.rs:38:37: 38:49
    }
}

fn Enum::Tuple(_1: u16) -> Enum {
    let mut _0: Enum;                    // return place in scope 0 at ui/enum-discriminant/arbitrary_enum_discriminant.rs:12:5: 12:10

    bb0: {
        _0 = Enum::Tuple(move _1);       // scope 0 at ui/enum-discriminant/arbitrary_enum_discriminant.rs:12:5: 12:10
        return;                          // scope 0 at ui/enum-discriminant/arbitrary_enum_discriminant.rs:12:5: 12:10
    }
}

// MIR FOR CTFE
fn Enum::Tuple(_1: u16) -> Enum {
    let mut _0: Enum;                    // return place in scope 0 at ui/enum-discriminant/arbitrary_enum_discriminant.rs:12:5: 12:10

    bb0: {
        _0 = Enum::Tuple(move _1);       // scope 0 at ui/enum-discriminant/arbitrary_enum_discriminant.rs:12:5: 12:10
        return;                          // scope 0 at ui/enum-discriminant/arbitrary_enum_discriminant.rs:12:5: 12:10
    }
}
