// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
fn main() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/dyn-keyword/dyn-2015-no-warnings-without-lints.rs:16:11: 16:11
    let _1: outer_mod::dyn::dyn;         // in scope 0 at ui/dyn-keyword/dyn-2015-no-warnings-without-lints.rs:18:5: 18:22

    bb0: {
        _1 = dyn() -> bb1;               // scope 0 at ui/dyn-keyword/dyn-2015-no-warnings-without-lints.rs:18:5: 18:22
                                         // mir::Constant
                                         // + span: ui/dyn-keyword/dyn-2015-no-warnings-without-lints.rs:18:5: 18:20
                                         // + literal: Const { ty: fn() -> outer_mod::dyn::dyn {dyn}, val: Value(<ZST>) }
    }

    bb1: {
        return;                          // scope 0 at ui/dyn-keyword/dyn-2015-no-warnings-without-lints.rs:19:2: 19:2
    }
}

fn dyn() -> outer_mod::dyn::dyn {
    let mut _0: outer_mod::dyn::dyn;     // return place in scope 0 at ui/dyn-keyword/dyn-2015-no-warnings-without-lints.rs:25:21: 25:42

    bb0: {
        return;                          // scope 0 at ui/dyn-keyword/dyn-2015-no-warnings-without-lints.rs:27:6: 27:6
    }
}
