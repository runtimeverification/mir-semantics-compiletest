// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
fn Trait::hello(_1: &Self) -> () {
    debug self => _1;                    // in scope 0 at ui/dyn-keyword/dyn-2015-idents-in-macros-unlinted.rs:29:24: 29:29
    let mut _0: ();                      // return place in scope 0 at ui/dyn-keyword/dyn-2015-idents-in-macros-unlinted.rs:29:31: 29:31

    bb0: {
        return;                          // scope 0 at ui/dyn-keyword/dyn-2015-idents-in-macros-unlinted.rs:29:34: 29:34
    }
}

fn main() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/dyn-keyword/dyn-2015-idents-in-macros-unlinted.rs:40:11: 40:11
    let _1: X;                           // in scope 0 at ui/dyn-keyword/dyn-2015-idents-in-macros-unlinted.rs:54:9: 54:10
    let _2: ();                          // in scope 0 at ui/dyn-keyword/dyn-2015-idents-in-macros-unlinted.rs:55:5: 55:21
    let mut _3: &dyn Trait;              // in scope 0 at ui/dyn-keyword/dyn-2015-idents-in-macros-unlinted.rs:55:5: 55:21
    let _4: &dyn Trait;                  // in scope 0 at ui/dyn-keyword/dyn-2015-idents-in-macros-unlinted.rs:55:5: 55:13
    let mut _5: &X;                      // in scope 0 at ui/dyn-keyword/dyn-2015-idents-in-macros-unlinted.rs:55:10: 55:12
    let _6: &X;                          // in scope 0 at ui/dyn-keyword/dyn-2015-idents-in-macros-unlinted.rs:55:10: 55:12
    let _7: ();                          // in scope 0 at ui/dyn-keyword/dyn-2015-idents-in-macros-unlinted.rs:56:5: 56:21
    let mut _8: &dyn Trait;              // in scope 0 at ui/dyn-keyword/dyn-2015-idents-in-macros-unlinted.rs:56:5: 56:21
    let _9: &dyn Trait;                  // in scope 0 at ui/dyn-keyword/dyn-2015-idents-in-macros-unlinted.rs:56:5: 56:13
    let mut _10: &X;                     // in scope 0 at ui/dyn-keyword/dyn-2015-idents-in-macros-unlinted.rs:56:10: 56:12
    let _11: &X;                         // in scope 0 at ui/dyn-keyword/dyn-2015-idents-in-macros-unlinted.rs:56:10: 56:12
    scope 1 {
        debug x => _1;                   // in scope 1 at ui/dyn-keyword/dyn-2015-idents-in-macros-unlinted.rs:54:9: 54:10
    }

    bb0: {
        _6 = &_1;                        // scope 1 at ui/dyn-keyword/dyn-2015-idents-in-macros-unlinted.rs:55:10: 55:12
        _5 = _6;                         // scope 1 at ui/dyn-keyword/dyn-2015-idents-in-macros-unlinted.rs:55:10: 55:12
        _4 = f_tt(move _5) -> bb1;       // scope 1 at ui/dyn-keyword/dyn-2015-idents-in-macros-unlinted.rs:55:5: 55:13
                                         // mir::Constant
                                         // + span: ui/dyn-keyword/dyn-2015-idents-in-macros-unlinted.rs:55:5: 55:9
                                         // + literal: Const { ty: for<'a> fn(&'a X) -> &'a (dyn Trait + 'a) {f_tt}, val: Value(<ZST>) }
    }

    bb1: {
        _3 = _4;                         // scope 1 at ui/dyn-keyword/dyn-2015-idents-in-macros-unlinted.rs:55:5: 55:21
        _2 = <dyn Trait as Trait>::hello(move _3) -> bb2; // scope 1 at ui/dyn-keyword/dyn-2015-idents-in-macros-unlinted.rs:55:5: 55:21
                                         // mir::Constant
                                         // + span: ui/dyn-keyword/dyn-2015-idents-in-macros-unlinted.rs:55:14: 55:19
                                         // + literal: Const { ty: for<'a> fn(&'a dyn Trait) {<dyn Trait as Trait>::hello}, val: Value(<ZST>) }
    }

    bb2: {
        _11 = &_1;                       // scope 1 at ui/dyn-keyword/dyn-2015-idents-in-macros-unlinted.rs:56:10: 56:12
        _10 = _11;                       // scope 1 at ui/dyn-keyword/dyn-2015-idents-in-macros-unlinted.rs:56:10: 56:12
        _9 = f_id(move _10) -> bb3;      // scope 1 at ui/dyn-keyword/dyn-2015-idents-in-macros-unlinted.rs:56:5: 56:13
                                         // mir::Constant
                                         // + span: ui/dyn-keyword/dyn-2015-idents-in-macros-unlinted.rs:56:5: 56:9
                                         // + literal: Const { ty: for<'a> fn(&'a X) -> &'a (dyn Trait + 'a) {f_id}, val: Value(<ZST>) }
    }

    bb3: {
        _8 = _9;                         // scope 1 at ui/dyn-keyword/dyn-2015-idents-in-macros-unlinted.rs:56:5: 56:21
        _7 = <dyn Trait as Trait>::hello(move _8) -> bb4; // scope 1 at ui/dyn-keyword/dyn-2015-idents-in-macros-unlinted.rs:56:5: 56:21
                                         // mir::Constant
                                         // + span: ui/dyn-keyword/dyn-2015-idents-in-macros-unlinted.rs:56:14: 56:19
                                         // + literal: Const { ty: for<'a> fn(&'a dyn Trait) {<dyn Trait as Trait>::hello}, val: Value(<ZST>) }
    }

    bb4: {
        return;                          // scope 0 at ui/dyn-keyword/dyn-2015-idents-in-macros-unlinted.rs:57:2: 57:2
    }
}

fn f_tt(_1: &X) -> &dyn Trait {
    debug x => _1;                       // in scope 0 at ui/dyn-keyword/dyn-2015-idents-in-macros-unlinted.rs:51:13: 51:14
    let mut _0: &dyn Trait;              // return place in scope 0 at ui/dyn-keyword/dyn-2015-idents-in-macros-unlinted.rs:33:20: 33:32
    let mut _2: &dyn Trait;              // in scope 0 at ui/dyn-keyword/dyn-2015-idents-in-macros-unlinted.rs:51:40: 51:41
    let _3: &dyn Trait;                  // in scope 0 at ui/dyn-keyword/dyn-2015-idents-in-macros-unlinted.rs:51:40: 51:41
    let mut _4: &X;                      // in scope 0 at ui/dyn-keyword/dyn-2015-idents-in-macros-unlinted.rs:51:40: 51:41

    bb0: {
        _4 = _1;                         // scope 0 at ui/dyn-keyword/dyn-2015-idents-in-macros-unlinted.rs:51:40: 51:41
        _3 = move _4 as &dyn Trait (Pointer(Unsize)); // scope 0 at ui/dyn-keyword/dyn-2015-idents-in-macros-unlinted.rs:51:40: 51:41
        _2 = _3;                         // scope 0 at ui/dyn-keyword/dyn-2015-idents-in-macros-unlinted.rs:51:40: 51:41
        _0 = move _2 as &dyn Trait (Pointer(Unsize)); // scope 0 at ui/dyn-keyword/dyn-2015-idents-in-macros-unlinted.rs:51:40: 51:41
        return;                          // scope 0 at ui/dyn-keyword/dyn-2015-idents-in-macros-unlinted.rs:51:43: 51:43
    }
}

fn f_id(_1: &X) -> &dyn Trait {
    debug x => _1;                       // in scope 0 at ui/dyn-keyword/dyn-2015-idents-in-macros-unlinted.rs:52:13: 52:14
    let mut _0: &dyn Trait;              // return place in scope 0 at ui/dyn-keyword/dyn-2015-idents-in-macros-unlinted.rs:37:22: 37:33
    let mut _2: &dyn Trait;              // in scope 0 at ui/dyn-keyword/dyn-2015-idents-in-macros-unlinted.rs:52:40: 52:41
    let _3: &dyn Trait;                  // in scope 0 at ui/dyn-keyword/dyn-2015-idents-in-macros-unlinted.rs:52:40: 52:41
    let mut _4: &X;                      // in scope 0 at ui/dyn-keyword/dyn-2015-idents-in-macros-unlinted.rs:52:40: 52:41

    bb0: {
        _4 = _1;                         // scope 0 at ui/dyn-keyword/dyn-2015-idents-in-macros-unlinted.rs:52:40: 52:41
        _3 = move _4 as &dyn Trait (Pointer(Unsize)); // scope 0 at ui/dyn-keyword/dyn-2015-idents-in-macros-unlinted.rs:52:40: 52:41
        _2 = _3;                         // scope 0 at ui/dyn-keyword/dyn-2015-idents-in-macros-unlinted.rs:52:40: 52:41
        _0 = move _2 as &dyn Trait (Pointer(Unsize)); // scope 0 at ui/dyn-keyword/dyn-2015-idents-in-macros-unlinted.rs:52:40: 52:41
        return;                          // scope 0 at ui/dyn-keyword/dyn-2015-idents-in-macros-unlinted.rs:52:43: 52:43
    }
}
