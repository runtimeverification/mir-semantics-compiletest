// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
fn require_unsafe() -> usize {
    let mut _0: usize;                   // return place in scope 0 at ui/inline-const/pat-unsafe.rs:10:37: 10:42

    bb0: {
        _0 = const 1_usize;              // scope 0 at ui/inline-const/pat-unsafe.rs:10:45: 10:46
        return;                          // scope 0 at ui/inline-const/pat-unsafe.rs:10:48: 10:48
    }
}

// MIR FOR CTFE
fn require_unsafe() -> usize {
    let mut _0: usize;                   // return place in scope 0 at ui/inline-const/pat-unsafe.rs:10:37: 10:42

    bb0: {
        _0 = const 1_usize;              // scope 0 at ui/inline-const/pat-unsafe.rs:10:45: 10:46
        return;                          // scope 0 at ui/inline-const/pat-unsafe.rs:10:48: 10:48
    }
}

fn main() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/inline-const/pat-unsafe.rs:12:11: 12:11
    scope 1 {
    }

    bb0: {
        return;                          // scope 0 at ui/inline-const/pat-unsafe.rs:22:2: 22:2
    }
}

main::{constant#0}: () = {
    let mut _0: ();                      // return place in scope 0 at ui/inline-const/pat-unsafe.rs:15:19: 19:14
    let _1: usize;                       // in scope 0 at ui/inline-const/pat-unsafe.rs:16:17: 16:33
    scope 1 {
    }

    bb0: {
        StorageLive(_1);                 // scope 0 at ui/inline-const/pat-unsafe.rs:16:17: 16:33
        ConstEvalCounter;                // scope 0 at ui/inline-const/pat-unsafe.rs:16:17: 16:33
        _1 = require_unsafe() -> bb1;    // scope 0 at ui/inline-const/pat-unsafe.rs:16:17: 16:33
                                         // mir::Constant
                                         // + span: ui/inline-const/pat-unsafe.rs:16:17: 16:31
                                         // + literal: Const { ty: unsafe fn() -> usize {require_unsafe}, val: Value(<ZST>) }
    }

    bb1: {
        StorageDead(_1);                 // scope 0 at ui/inline-const/pat-unsafe.rs:16:33: 16:34
        _0 = const ();                   // scope 1 at ui/inline-const/pat-unsafe.rs:17:17: 17:26
        return;                          // scope 0 at ui/inline-const/pat-unsafe.rs:15:19: 19:14
    }
}
