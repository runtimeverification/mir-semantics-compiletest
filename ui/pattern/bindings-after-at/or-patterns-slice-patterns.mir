// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
fn <impl at ui/pattern/bindings-after-at/or-patterns-slice-patterns.rs:6:10: 6:15>::fmt(_1: &MatchArm, _2: &mut Formatter<'_>) -> Result<(), std::fmt::Error> {
    debug self => _1;                    // in scope 0 at ui/pattern/bindings-after-at/or-patterns-slice-patterns.rs:6:10: 6:15
    debug f => _2;                       // in scope 0 at ui/pattern/bindings-after-at/or-patterns-slice-patterns.rs:6:10: 6:15
    let mut _0: std::result::Result<(), std::fmt::Error>; // return place in scope 0 at ui/pattern/bindings-after-at/or-patterns-slice-patterns.rs:6:10: 6:15
    let mut _3: isize;                   // in scope 0 at ui/pattern/bindings-after-at/or-patterns-slice-patterns.rs:6:10: 6:15
    let _4: &usize;                      // in scope 0 at ui/pattern/bindings-after-at/or-patterns-slice-patterns.rs:8:9: 8:14
    let mut _5: &mut std::fmt::Formatter<'_>; // in scope 0 at ui/pattern/bindings-after-at/or-patterns-slice-patterns.rs:6:10: 6:15
    let mut _6: &str;                    // in scope 0 at ui/pattern/bindings-after-at/or-patterns-slice-patterns.rs:6:10: 6:15
    let _7: &str;                        // in scope 0 at ui/pattern/bindings-after-at/or-patterns-slice-patterns.rs:6:10: 6:15
    let mut _8: &dyn std::fmt::Debug;    // in scope 0 at ui/pattern/bindings-after-at/or-patterns-slice-patterns.rs:8:9: 8:14
    let mut _9: &&usize;                 // in scope 0 at ui/pattern/bindings-after-at/or-patterns-slice-patterns.rs:8:9: 8:14
    let _10: &&usize;                    // in scope 0 at ui/pattern/bindings-after-at/or-patterns-slice-patterns.rs:8:9: 8:14
    let mut _11: &mut std::fmt::Formatter<'_>; // in scope 0 at ui/pattern/bindings-after-at/or-patterns-slice-patterns.rs:6:10: 6:15
    let mut _12: &str;                   // in scope 0 at ui/pattern/bindings-after-at/or-patterns-slice-patterns.rs:6:10: 6:15
    let _13: &str;                       // in scope 0 at ui/pattern/bindings-after-at/or-patterns-slice-patterns.rs:6:10: 6:15
    scope 1 {
        debug __self_0 => _4;            // in scope 1 at ui/pattern/bindings-after-at/or-patterns-slice-patterns.rs:8:9: 8:14
    }

    bb0: {
        _3 = discriminant((*_1));        // scope 0 at ui/pattern/bindings-after-at/or-patterns-slice-patterns.rs:6:10: 6:15
        switchInt(move _3) -> [0: bb3, 1: bb1, otherwise: bb2]; // scope 0 at ui/pattern/bindings-after-at/or-patterns-slice-patterns.rs:6:10: 6:15
    }

    bb1: {
        _11 = &mut (*_2);                // scope 0 at ui/pattern/bindings-after-at/or-patterns-slice-patterns.rs:6:10: 6:15
        _13 = const "Wild";              // scope 0 at ui/pattern/bindings-after-at/or-patterns-slice-patterns.rs:6:10: 6:15
                                         // mir::Constant
                                         // + span: ui/pattern/bindings-after-at/or-patterns-slice-patterns.rs:6:10: 6:15
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _12 = _13;                       // scope 0 at ui/pattern/bindings-after-at/or-patterns-slice-patterns.rs:6:10: 6:15
        _0 = Formatter::<'_>::write_str(move _11, move _12) -> bb4; // scope 0 at ui/pattern/bindings-after-at/or-patterns-slice-patterns.rs:6:10: 6:15
                                         // mir::Constant
                                         // + span: ui/pattern/bindings-after-at/or-patterns-slice-patterns.rs:6:10: 6:15
                                         // + user_ty: UserType(1)
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a mut Formatter<'_>, &'b str) -> Result<(), std::fmt::Error> {Formatter::<'_>::write_str}, val: Value(<ZST>) }
    }

    bb2: {
        unreachable;                     // scope 0 at ui/pattern/bindings-after-at/or-patterns-slice-patterns.rs:6:10: 6:15
    }

    bb3: {
        _4 = &(((*_1) as Arm).0: usize); // scope 0 at ui/pattern/bindings-after-at/or-patterns-slice-patterns.rs:8:9: 8:14
        _5 = &mut (*_2);                 // scope 1 at ui/pattern/bindings-after-at/or-patterns-slice-patterns.rs:6:10: 6:15
        _7 = const "Arm";                // scope 1 at ui/pattern/bindings-after-at/or-patterns-slice-patterns.rs:6:10: 6:15
                                         // mir::Constant
                                         // + span: ui/pattern/bindings-after-at/or-patterns-slice-patterns.rs:6:10: 6:15
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _6 = _7;                         // scope 1 at ui/pattern/bindings-after-at/or-patterns-slice-patterns.rs:6:10: 6:15
        _10 = &_4;                       // scope 1 at ui/pattern/bindings-after-at/or-patterns-slice-patterns.rs:8:9: 8:14
        _9 = _10;                        // scope 1 at ui/pattern/bindings-after-at/or-patterns-slice-patterns.rs:8:9: 8:14
        _8 = move _9 as &dyn std::fmt::Debug (Pointer(Unsize)); // scope 1 at ui/pattern/bindings-after-at/or-patterns-slice-patterns.rs:8:9: 8:14
        _0 = Formatter::<'_>::debug_tuple_field1_finish(move _5, move _6, move _8) -> bb4; // scope 1 at ui/pattern/bindings-after-at/or-patterns-slice-patterns.rs:6:10: 6:15
                                         // mir::Constant
                                         // + span: ui/pattern/bindings-after-at/or-patterns-slice-patterns.rs:6:10: 6:15
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: for<'b, 'a, 'c> fn(&'b mut Formatter<'_>, &'a str, &'c (dyn Debug + 'c)) -> Result<(), std::fmt::Error> {Formatter::<'_>::debug_tuple_field1_finish}, val: Value(<ZST>) }
    }

    bb4: {
        return;                          // scope 0 at ui/pattern/bindings-after-at/or-patterns-slice-patterns.rs:6:15: 6:15
    }
}

fn <impl at ui/pattern/bindings-after-at/or-patterns-slice-patterns.rs:6:17: 6:26>::eq(_1: &MatchArm, _2: &MatchArm) -> bool {
    debug self => _1;                    // in scope 0 at ui/pattern/bindings-after-at/or-patterns-slice-patterns.rs:6:17: 6:26
    debug other => _2;                   // in scope 0 at ui/pattern/bindings-after-at/or-patterns-slice-patterns.rs:6:17: 6:26
    let mut _0: bool;                    // return place in scope 0 at ui/pattern/bindings-after-at/or-patterns-slice-patterns.rs:6:17: 6:26
    let _3: isize;                       // in scope 0 at ui/pattern/bindings-after-at/or-patterns-slice-patterns.rs:6:17: 6:26
    let mut _4: &MatchArm;               // in scope 0 at ui/pattern/bindings-after-at/or-patterns-slice-patterns.rs:6:17: 6:26
    let mut _6: &MatchArm;               // in scope 0 at ui/pattern/bindings-after-at/or-patterns-slice-patterns.rs:6:17: 6:26
    let mut _7: bool;                    // in scope 0 at ui/pattern/bindings-after-at/or-patterns-slice-patterns.rs:6:17: 6:26
    let mut _8: isize;                   // in scope 0 at ui/pattern/bindings-after-at/or-patterns-slice-patterns.rs:6:17: 6:26
    let mut _9: isize;                   // in scope 0 at ui/pattern/bindings-after-at/or-patterns-slice-patterns.rs:6:17: 6:26
    let mut _10: bool;                   // in scope 0 at ui/pattern/bindings-after-at/or-patterns-slice-patterns.rs:6:17: 6:26
    let mut _11: (&MatchArm, &MatchArm); // in scope 0 at ui/pattern/bindings-after-at/or-patterns-slice-patterns.rs:6:17: 6:26
    let mut _12: &MatchArm;              // in scope 0 at ui/pattern/bindings-after-at/or-patterns-slice-patterns.rs:6:17: 6:26
    let mut _13: &MatchArm;              // in scope 0 at ui/pattern/bindings-after-at/or-patterns-slice-patterns.rs:6:17: 6:26
    let mut _14: isize;                  // in scope 0 at ui/pattern/bindings-after-at/or-patterns-slice-patterns.rs:6:17: 6:26
    let mut _15: isize;                  // in scope 0 at ui/pattern/bindings-after-at/or-patterns-slice-patterns.rs:6:17: 6:26
    let mut _18: usize;                  // in scope 0 at ui/pattern/bindings-after-at/or-patterns-slice-patterns.rs:8:9: 8:14
    let mut _19: usize;                  // in scope 0 at ui/pattern/bindings-after-at/or-patterns-slice-patterns.rs:8:9: 8:14
    let mut _20: &MatchArm;              // in scope 0 at ui/pattern/bindings-after-at/or-patterns-slice-patterns.rs:6:17: 6:26
    let mut _21: &MatchArm;              // in scope 0 at ui/pattern/bindings-after-at/or-patterns-slice-patterns.rs:6:17: 6:26
    let mut _22: &MatchArm;              // in scope 0 at ui/pattern/bindings-after-at/or-patterns-slice-patterns.rs:6:17: 6:26
    let mut _23: &MatchArm;              // in scope 0 at ui/pattern/bindings-after-at/or-patterns-slice-patterns.rs:6:17: 6:26
    scope 1 {
        debug __self_tag => _3;          // in scope 1 at ui/pattern/bindings-after-at/or-patterns-slice-patterns.rs:6:17: 6:26
        let _5: isize;                   // in scope 1 at ui/pattern/bindings-after-at/or-patterns-slice-patterns.rs:6:17: 6:26
        scope 2 {
            debug __arg1_tag => _5;      // in scope 2 at ui/pattern/bindings-after-at/or-patterns-slice-patterns.rs:6:17: 6:26
            let _16: &usize;             // in scope 2 at ui/pattern/bindings-after-at/or-patterns-slice-patterns.rs:8:9: 8:14
            let _17: &usize;             // in scope 2 at ui/pattern/bindings-after-at/or-patterns-slice-patterns.rs:8:9: 8:14
            scope 3 {
                debug __self_0 => _16;   // in scope 3 at ui/pattern/bindings-after-at/or-patterns-slice-patterns.rs:8:9: 8:14
                debug __arg1_0 => _17;   // in scope 3 at ui/pattern/bindings-after-at/or-patterns-slice-patterns.rs:8:9: 8:14
            }
        }
    }

    bb0: {
        _4 = _1;                         // scope 0 at ui/pattern/bindings-after-at/or-patterns-slice-patterns.rs:6:17: 6:26
        _3 = discriminant((*_4));        // scope 0 at ui/pattern/bindings-after-at/or-patterns-slice-patterns.rs:6:17: 6:26
        _6 = _2;                         // scope 1 at ui/pattern/bindings-after-at/or-patterns-slice-patterns.rs:6:17: 6:26
        _5 = discriminant((*_6));        // scope 1 at ui/pattern/bindings-after-at/or-patterns-slice-patterns.rs:6:17: 6:26
        _8 = _3;                         // scope 2 at ui/pattern/bindings-after-at/or-patterns-slice-patterns.rs:6:17: 6:26
        _9 = _5;                         // scope 2 at ui/pattern/bindings-after-at/or-patterns-slice-patterns.rs:6:17: 6:26
        _7 = Eq(move _8, move _9);       // scope 2 at ui/pattern/bindings-after-at/or-patterns-slice-patterns.rs:6:17: 6:26
        switchInt(move _7) -> [0: bb1, otherwise: bb2]; // scope 2 at ui/pattern/bindings-after-at/or-patterns-slice-patterns.rs:6:17: 6:26
    }

    bb1: {
        _0 = const false;                // scope 2 at ui/pattern/bindings-after-at/or-patterns-slice-patterns.rs:6:17: 6:26
        goto -> bb3;                     // scope 2 at ui/pattern/bindings-after-at/or-patterns-slice-patterns.rs:6:17: 6:26
    }

    bb2: {
        _12 = _1;                        // scope 2 at ui/pattern/bindings-after-at/or-patterns-slice-patterns.rs:6:17: 6:26
        _13 = _2;                        // scope 2 at ui/pattern/bindings-after-at/or-patterns-slice-patterns.rs:6:17: 6:26
        _11 = (move _12, move _13);      // scope 2 at ui/pattern/bindings-after-at/or-patterns-slice-patterns.rs:6:17: 6:26
        _20 = deref_copy (_11.0: &MatchArm); // scope 2 at ui/pattern/bindings-after-at/or-patterns-slice-patterns.rs:6:17: 6:26
        _15 = discriminant((*_20));      // scope 2 at ui/pattern/bindings-after-at/or-patterns-slice-patterns.rs:6:17: 6:26
        switchInt(move _15) -> [0: bb4, otherwise: bb5]; // scope 2 at ui/pattern/bindings-after-at/or-patterns-slice-patterns.rs:6:17: 6:26
    }

    bb3: {
        return;                          // scope 0 at ui/pattern/bindings-after-at/or-patterns-slice-patterns.rs:6:26: 6:26
    }

    bb4: {
        _21 = deref_copy (_11.1: &MatchArm); // scope 2 at ui/pattern/bindings-after-at/or-patterns-slice-patterns.rs:6:17: 6:26
        _14 = discriminant((*_21));      // scope 2 at ui/pattern/bindings-after-at/or-patterns-slice-patterns.rs:6:17: 6:26
        switchInt(move _14) -> [0: bb6, otherwise: bb5]; // scope 2 at ui/pattern/bindings-after-at/or-patterns-slice-patterns.rs:6:17: 6:26
    }

    bb5: {
        _10 = const true;                // scope 2 at ui/pattern/bindings-after-at/or-patterns-slice-patterns.rs:6:17: 6:26
        goto -> bb7;                     // scope 2 at ui/pattern/bindings-after-at/or-patterns-slice-patterns.rs:6:17: 6:26
    }

    bb6: {
        _22 = deref_copy (_11.0: &MatchArm); // scope 2 at ui/pattern/bindings-after-at/or-patterns-slice-patterns.rs:8:9: 8:14
        _16 = &(((*_22) as Arm).0: usize); // scope 2 at ui/pattern/bindings-after-at/or-patterns-slice-patterns.rs:8:9: 8:14
        _23 = deref_copy (_11.1: &MatchArm); // scope 2 at ui/pattern/bindings-after-at/or-patterns-slice-patterns.rs:8:9: 8:14
        _17 = &(((*_23) as Arm).0: usize); // scope 2 at ui/pattern/bindings-after-at/or-patterns-slice-patterns.rs:8:9: 8:14
        _18 = (*_16);                    // scope 3 at ui/pattern/bindings-after-at/or-patterns-slice-patterns.rs:8:9: 8:14
        _19 = (*_17);                    // scope 3 at ui/pattern/bindings-after-at/or-patterns-slice-patterns.rs:8:9: 8:14
        _10 = Eq(move _18, move _19);    // scope 3 at ui/pattern/bindings-after-at/or-patterns-slice-patterns.rs:8:9: 8:14
        goto -> bb7;                     // scope 2 at ui/pattern/bindings-after-at/or-patterns-slice-patterns.rs:6:25: 6:26
    }

    bb7: {
        _0 = move _10;                   // scope 2 at ui/pattern/bindings-after-at/or-patterns-slice-patterns.rs:6:17: 6:26
        goto -> bb3;                     // scope 2 at ui/pattern/bindings-after-at/or-patterns-slice-patterns.rs:6:17: 6:26
    }
}

fn <impl at ui/pattern/bindings-after-at/or-patterns-slice-patterns.rs:12:10: 12:15>::fmt(_1: &Test, _2: &mut Formatter<'_>) -> Result<(), std::fmt::Error> {
    debug self => _1;                    // in scope 0 at ui/pattern/bindings-after-at/or-patterns-slice-patterns.rs:12:10: 12:15
    debug f => _2;                       // in scope 0 at ui/pattern/bindings-after-at/or-patterns-slice-patterns.rs:12:10: 12:15
    let mut _0: std::result::Result<(), std::fmt::Error>; // return place in scope 0 at ui/pattern/bindings-after-at/or-patterns-slice-patterns.rs:12:10: 12:15
    let mut _3: &mut std::fmt::Formatter<'_>; // in scope 0 at ui/pattern/bindings-after-at/or-patterns-slice-patterns.rs:12:10: 12:15
    let mut _4: &str;                    // in scope 0 at ui/pattern/bindings-after-at/or-patterns-slice-patterns.rs:12:10: 12:15
    let mut _5: isize;                   // in scope 0 at ui/pattern/bindings-after-at/or-patterns-slice-patterns.rs:12:10: 12:15
    let _6: &str;                        // in scope 0 at ui/pattern/bindings-after-at/or-patterns-slice-patterns.rs:12:10: 12:15
    let _7: &str;                        // in scope 0 at ui/pattern/bindings-after-at/or-patterns-slice-patterns.rs:12:10: 12:15
    let _8: &str;                        // in scope 0 at ui/pattern/bindings-after-at/or-patterns-slice-patterns.rs:12:10: 12:15
    let _9: &str;                        // in scope 0 at ui/pattern/bindings-after-at/or-patterns-slice-patterns.rs:12:10: 12:15

    bb0: {
        _3 = &mut (*_2);                 // scope 0 at ui/pattern/bindings-after-at/or-patterns-slice-patterns.rs:12:10: 12:15
        _5 = discriminant((*_1));        // scope 0 at ui/pattern/bindings-after-at/or-patterns-slice-patterns.rs:12:10: 12:15
        switchInt(move _5) -> [0: bb3, 1: bb4, 2: bb5, 3: bb1, otherwise: bb2]; // scope 0 at ui/pattern/bindings-after-at/or-patterns-slice-patterns.rs:12:10: 12:15
    }

    bb1: {
        _9 = const "Qux";                // scope 0 at ui/pattern/bindings-after-at/or-patterns-slice-patterns.rs:12:10: 12:15
                                         // mir::Constant
                                         // + span: ui/pattern/bindings-after-at/or-patterns-slice-patterns.rs:12:10: 12:15
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _4 = _9;                         // scope 0 at ui/pattern/bindings-after-at/or-patterns-slice-patterns.rs:12:10: 12:15
        goto -> bb6;                     // scope 0 at ui/pattern/bindings-after-at/or-patterns-slice-patterns.rs:12:14: 12:15
    }

    bb2: {
        unreachable;                     // scope 0 at ui/pattern/bindings-after-at/or-patterns-slice-patterns.rs:12:10: 12:15
    }

    bb3: {
        _6 = const "Foo";                // scope 0 at ui/pattern/bindings-after-at/or-patterns-slice-patterns.rs:12:10: 12:15
                                         // mir::Constant
                                         // + span: ui/pattern/bindings-after-at/or-patterns-slice-patterns.rs:12:10: 12:15
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _4 = _6;                         // scope 0 at ui/pattern/bindings-after-at/or-patterns-slice-patterns.rs:12:10: 12:15
        goto -> bb6;                     // scope 0 at ui/pattern/bindings-after-at/or-patterns-slice-patterns.rs:12:14: 12:15
    }

    bb4: {
        _7 = const "Bar";                // scope 0 at ui/pattern/bindings-after-at/or-patterns-slice-patterns.rs:12:10: 12:15
                                         // mir::Constant
                                         // + span: ui/pattern/bindings-after-at/or-patterns-slice-patterns.rs:12:10: 12:15
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _4 = _7;                         // scope 0 at ui/pattern/bindings-after-at/or-patterns-slice-patterns.rs:12:10: 12:15
        goto -> bb6;                     // scope 0 at ui/pattern/bindings-after-at/or-patterns-slice-patterns.rs:12:14: 12:15
    }

    bb5: {
        _8 = const "Baz";                // scope 0 at ui/pattern/bindings-after-at/or-patterns-slice-patterns.rs:12:10: 12:15
                                         // mir::Constant
                                         // + span: ui/pattern/bindings-after-at/or-patterns-slice-patterns.rs:12:10: 12:15
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _4 = _8;                         // scope 0 at ui/pattern/bindings-after-at/or-patterns-slice-patterns.rs:12:10: 12:15
        goto -> bb6;                     // scope 0 at ui/pattern/bindings-after-at/or-patterns-slice-patterns.rs:12:14: 12:15
    }

    bb6: {
        _0 = Formatter::<'_>::write_str(move _3, move _4) -> bb7; // scope 0 at ui/pattern/bindings-after-at/or-patterns-slice-patterns.rs:12:10: 12:15
                                         // mir::Constant
                                         // + span: ui/pattern/bindings-after-at/or-patterns-slice-patterns.rs:12:10: 12:15
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a mut Formatter<'_>, &'b str) -> Result<(), std::fmt::Error> {Formatter::<'_>::write_str}, val: Value(<ZST>) }
    }

    bb7: {
        return;                          // scope 0 at ui/pattern/bindings-after-at/or-patterns-slice-patterns.rs:12:15: 12:15
    }
}

fn <impl at ui/pattern/bindings-after-at/or-patterns-slice-patterns.rs:12:17: 12:26>::eq(_1: &Test, _2: &Test) -> bool {
    debug self => _1;                    // in scope 0 at ui/pattern/bindings-after-at/or-patterns-slice-patterns.rs:12:17: 12:26
    debug other => _2;                   // in scope 0 at ui/pattern/bindings-after-at/or-patterns-slice-patterns.rs:12:17: 12:26
    let mut _0: bool;                    // return place in scope 0 at ui/pattern/bindings-after-at/or-patterns-slice-patterns.rs:12:17: 12:26
    let _3: isize;                       // in scope 0 at ui/pattern/bindings-after-at/or-patterns-slice-patterns.rs:12:17: 12:26
    let mut _4: &Test;                   // in scope 0 at ui/pattern/bindings-after-at/or-patterns-slice-patterns.rs:12:17: 12:26
    let mut _6: &Test;                   // in scope 0 at ui/pattern/bindings-after-at/or-patterns-slice-patterns.rs:12:17: 12:26
    let mut _7: isize;                   // in scope 0 at ui/pattern/bindings-after-at/or-patterns-slice-patterns.rs:12:17: 12:26
    let mut _8: isize;                   // in scope 0 at ui/pattern/bindings-after-at/or-patterns-slice-patterns.rs:12:17: 12:26
    scope 1 {
        debug __self_tag => _3;          // in scope 1 at ui/pattern/bindings-after-at/or-patterns-slice-patterns.rs:12:17: 12:26
        let _5: isize;                   // in scope 1 at ui/pattern/bindings-after-at/or-patterns-slice-patterns.rs:12:17: 12:26
        scope 2 {
            debug __arg1_tag => _5;      // in scope 2 at ui/pattern/bindings-after-at/or-patterns-slice-patterns.rs:12:17: 12:26
        }
    }

    bb0: {
        _4 = _1;                         // scope 0 at ui/pattern/bindings-after-at/or-patterns-slice-patterns.rs:12:17: 12:26
        _3 = discriminant((*_4));        // scope 0 at ui/pattern/bindings-after-at/or-patterns-slice-patterns.rs:12:17: 12:26
        _6 = _2;                         // scope 1 at ui/pattern/bindings-after-at/or-patterns-slice-patterns.rs:12:17: 12:26
        _5 = discriminant((*_6));        // scope 1 at ui/pattern/bindings-after-at/or-patterns-slice-patterns.rs:12:17: 12:26
        _7 = _3;                         // scope 2 at ui/pattern/bindings-after-at/or-patterns-slice-patterns.rs:12:17: 12:26
        _8 = _5;                         // scope 2 at ui/pattern/bindings-after-at/or-patterns-slice-patterns.rs:12:17: 12:26
        _0 = Eq(move _7, move _8);       // scope 2 at ui/pattern/bindings-after-at/or-patterns-slice-patterns.rs:12:17: 12:26
        return;                          // scope 0 at ui/pattern/bindings-after-at/or-patterns-slice-patterns.rs:12:26: 12:26
    }
}

fn test(_1: &[Option<Test>]) -> MatchArm {
    debug foo => _1;                     // in scope 0 at ui/pattern/bindings-after-at/or-patterns-slice-patterns.rs:20:9: 20:12
    let mut _0: MatchArm;                // return place in scope 0 at ui/pattern/bindings-after-at/or-patterns-slice-patterns.rs:20:34: 20:42
    let mut _2: isize;                   // in scope 0 at ui/pattern/bindings-after-at/or-patterns-slice-patterns.rs:22:42: 22:51
    let mut _3: isize;                   // in scope 0 at ui/pattern/bindings-after-at/or-patterns-slice-patterns.rs:22:21: 22:30
    let mut _4: isize;                   // in scope 0 at ui/pattern/bindings-after-at/or-patterns-slice-patterns.rs:22:37: 22:64
    let mut _5: isize;                   // in scope 0 at ui/pattern/bindings-after-at/or-patterns-slice-patterns.rs:27:25: 27:34
    let mut _6: isize;                   // in scope 0 at ui/pattern/bindings-after-at/or-patterns-slice-patterns.rs:27:20: 27:47
    let mut _7: isize;                   // in scope 0 at ui/pattern/bindings-after-at/or-patterns-slice-patterns.rs:22:16: 22:31
    let mut _8: usize;                   // in scope 0 at ui/pattern/bindings-after-at/or-patterns-slice-patterns.rs:22:15: 22:65
    let mut _9: usize;                   // in scope 0 at ui/pattern/bindings-after-at/or-patterns-slice-patterns.rs:22:15: 22:65
    let mut _10: bool;                   // in scope 0 at ui/pattern/bindings-after-at/or-patterns-slice-patterns.rs:22:15: 22:65
    let _11: &[std::option::Option<Test>]; // in scope 0 at ui/pattern/bindings-after-at/or-patterns-slice-patterns.rs:22:9: 22:12
    let mut _12: (&&[std::option::Option<Test>], &&[std::option::Option<Test>]); // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _13: &&[std::option::Option<Test>]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let mut _14: &&[std::option::Option<Test>]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _17: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    let mut _18: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
    let mut _19: &&[std::option::Option<Test>]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
    let mut _20: &&[std::option::Option<Test>]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
    let _22: !;                          // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
    let mut _23: core::panicking::AssertKind; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
    let mut _24: &&[std::option::Option<Test>]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let _25: &&[std::option::Option<Test>]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let mut _26: &&[std::option::Option<Test>]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let _27: &&[std::option::Option<Test>]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let mut _28: std::option::Option<std::fmt::Arguments<'_>>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
    let _29: &std::option::Option<Test>; // in scope 0 at ui/pattern/bindings-after-at/or-patterns-slice-patterns.rs:27:14: 27:17
    let mut _30: bool;                   // in scope 0 at ui/pattern/bindings-after-at/or-patterns-slice-patterns.rs:28:13: 28:72
    let mut _31: bool;                   // in scope 0 at ui/pattern/bindings-after-at/or-patterns-slice-patterns.rs:28:21: 28:71
    let mut _32: bool;                   // in scope 0 at ui/pattern/bindings-after-at/or-patterns-slice-patterns.rs:28:21: 28:44
    let mut _33: &&std::option::Option<Test>; // in scope 0 at ui/pattern/bindings-after-at/or-patterns-slice-patterns.rs:28:21: 28:24
    let mut _34: &&std::option::Option<Test>; // in scope 0 at ui/pattern/bindings-after-at/or-patterns-slice-patterns.rs:28:28: 28:44
    let mut _35: bool;                   // in scope 0 at ui/pattern/bindings-after-at/or-patterns-slice-patterns.rs:28:48: 28:71
    let mut _36: &&std::option::Option<Test>; // in scope 0 at ui/pattern/bindings-after-at/or-patterns-slice-patterns.rs:28:48: 28:51
    let mut _37: &&std::option::Option<Test>; // in scope 0 at ui/pattern/bindings-after-at/or-patterns-slice-patterns.rs:28:55: 28:71
    let mut _38: !;                      // in scope 0 at ui/pattern/bindings-after-at/or-patterns-slice-patterns.rs:28:13: 28:72
    scope 1 {
        debug bar => _11;                // in scope 1 at ui/pattern/bindings-after-at/or-patterns-slice-patterns.rs:22:9: 22:12
        let _15: &&[std::option::Option<Test>]; // in scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        let _16: &&[std::option::Option<Test>]; // in scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        scope 2 {
            debug left_val => _15;       // in scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
            debug right_val => _16;      // in scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
            let _21: core::panicking::AssertKind; // in scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
            scope 3 {
                debug kind => _21;       // in scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
            }
        }
    }
    scope 4 {
        debug bar => _29;                // in scope 4 at ui/pattern/bindings-after-at/or-patterns-slice-patterns.rs:27:14: 27:17
        let mut _39: &&std::option::Option<Test>; // in scope 4 at ui/pattern/bindings-after-at/or-patterns-slice-patterns.rs:28:55: 28:71
        let mut _40: &&std::option::Option<Test>; // in scope 4 at ui/pattern/bindings-after-at/or-patterns-slice-patterns.rs:28:28: 28:44
    }

    bb0: {
        _8 = Len((*_1));                 // scope 0 at ui/pattern/bindings-after-at/or-patterns-slice-patterns.rs:22:15: 22:65
        _9 = const 2_usize;              // scope 0 at ui/pattern/bindings-after-at/or-patterns-slice-patterns.rs:22:15: 22:65
        _10 = Ge(move _8, move _9);      // scope 0 at ui/pattern/bindings-after-at/or-patterns-slice-patterns.rs:22:15: 22:65
        switchInt(move _10) -> [0: bb6, otherwise: bb1]; // scope 0 at ui/pattern/bindings-after-at/or-patterns-slice-patterns.rs:22:15: 22:65
    }

    bb1: {
        _7 = discriminant((*_1)[0 of 2]); // scope 0 at ui/pattern/bindings-after-at/or-patterns-slice-patterns.rs:21:11: 21:14
        switchInt(move _7) -> [1: bb3, otherwise: bb2]; // scope 0 at ui/pattern/bindings-after-at/or-patterns-slice-patterns.rs:21:5: 21:14
    }

    bb2: {
        _6 = discriminant((*_1)[-2 of 2]); // scope 0 at ui/pattern/bindings-after-at/or-patterns-slice-patterns.rs:21:11: 21:14
        switchInt(move _6) -> [1: bb7, otherwise: bb6]; // scope 0 at ui/pattern/bindings-after-at/or-patterns-slice-patterns.rs:21:5: 21:14
    }

    bb3: {
        _4 = discriminant((*_1)[-1 of 2]); // scope 0 at ui/pattern/bindings-after-at/or-patterns-slice-patterns.rs:21:11: 21:14
        switchInt(move _4) -> [1: bb4, otherwise: bb2]; // scope 0 at ui/pattern/bindings-after-at/or-patterns-slice-patterns.rs:21:5: 21:14
    }

    bb4: {
        _3 = discriminant((((*_1)[0 of 2] as Some).0: Test)); // scope 0 at ui/pattern/bindings-after-at/or-patterns-slice-patterns.rs:21:11: 21:14
        switchInt(move _3) -> [0: bb5, otherwise: bb2]; // scope 0 at ui/pattern/bindings-after-at/or-patterns-slice-patterns.rs:21:5: 21:14
    }

    bb5: {
        _2 = discriminant((((*_1)[-1 of 2] as Some).0: Test)); // scope 0 at ui/pattern/bindings-after-at/or-patterns-slice-patterns.rs:21:11: 21:14
        switchInt(move _2) -> [0: bb10, 3: bb9, otherwise: bb2]; // scope 0 at ui/pattern/bindings-after-at/or-patterns-slice-patterns.rs:21:5: 21:14
    }

    bb6: {
        _0 = MatchArm::Wild;             // scope 0 at ui/pattern/bindings-after-at/or-patterns-slice-patterns.rs:32:14: 32:28
        goto -> bb24;                    // scope 0 at ui/pattern/bindings-after-at/or-patterns-slice-patterns.rs:32:14: 32:28
    }

    bb7: {
        _5 = discriminant((((*_1)[-2 of 2] as Some).0: Test)); // scope 0 at ui/pattern/bindings-after-at/or-patterns-slice-patterns.rs:21:11: 21:14
        switchInt(move _5) -> [1: bb15, 3: bb16, otherwise: bb6]; // scope 0 at ui/pattern/bindings-after-at/or-patterns-slice-patterns.rs:21:5: 21:14
    }

    bb8: {
        _13 = &_11;                      // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _14 = &_1;                       // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _12 = (move _13, move _14);      // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _15 = (_12.0: &&[std::option::Option<Test>]); // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _16 = (_12.1: &&[std::option::Option<Test>]); // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _19 = _15;                       // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
        _20 = _16;                       // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
        _18 = <&[Option<Test>] as PartialEq>::eq(move _19, move _20) -> bb11; // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a &[Option<Test>], &'b &[Option<Test>]) -> bool {<&[Option<Test>] as PartialEq>::eq}, val: Value(<ZST>) }
    }

    bb9: {
        _11 = _1;                        // scope 0 at ui/pattern/bindings-after-at/or-patterns-slice-patterns.rs:22:9: 22:12
        goto -> bb8;                     // scope 0 at ui/pattern/bindings-after-at/or-patterns-slice-patterns.rs:21:5: 33:6
    }

    bb10: {
        _11 = _1;                        // scope 0 at ui/pattern/bindings-after-at/or-patterns-slice-patterns.rs:22:9: 22:12
        goto -> bb8;                     // scope 0 at ui/pattern/bindings-after-at/or-patterns-slice-patterns.rs:21:5: 33:6
    }

    bb11: {
        _17 = Not(move _18);             // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
        switchInt(move _17) -> [0: bb13, otherwise: bb12]; // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    }

    bb12: {
        _21 = const core::panicking::AssertKind::Eq; // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _23 = const core::panicking::AssertKind::Eq; // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _25 = _15;                       // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _24 = _25;                       // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _27 = _16;                       // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _26 = _27;                       // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _28 = Option::<Arguments<'_>>::None; // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
        _22 = core::panicking::assert_failed::<&[Option<Test>], &[Option<Test>]>(move _23, move _24, move _26, move _28); // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:53
                                         // + literal: Const { ty: for<'a, 'b, 'c> fn(core::panicking::AssertKind, &'a &[Option<Test>], &'b &[Option<Test>], Option<Arguments<'c>>) -> ! {core::panicking::assert_failed::<&[Option<Test>], &[Option<Test>]>}, val: Value(<ZST>) }
    }

    bb13: {
        _0 = MatchArm::Arm(const 0_usize); // scope 1 at ui/pattern/bindings-after-at/or-patterns-slice-patterns.rs:25:13: 25:29
        goto -> bb24;                    // scope 0 at ui/pattern/bindings-after-at/or-patterns-slice-patterns.rs:26:9: 26:10
    }

    bb14: {
        _33 = &_29;                      // scope 4 at ui/pattern/bindings-after-at/or-patterns-slice-patterns.rs:28:21: 28:24
        _40 = const _;                   // scope 4 at ui/pattern/bindings-after-at/or-patterns-slice-patterns.rs:28:28: 28:44
                                         // mir::Constant
                                         // + span: ui/pattern/bindings-after-at/or-patterns-slice-patterns.rs:28:28: 28:44
                                         // + literal: Const { ty: &&Option<Test>, val: Unevaluated(test, [], Some(promoted[1])) }
        _34 = _40;                       // scope 4 at ui/pattern/bindings-after-at/or-patterns-slice-patterns.rs:28:28: 28:44
        _32 = <&Option<Test> as PartialEq>::eq(move _33, move _34) -> bb20; // scope 4 at ui/pattern/bindings-after-at/or-patterns-slice-patterns.rs:28:21: 28:44
                                         // mir::Constant
                                         // + span: ui/pattern/bindings-after-at/or-patterns-slice-patterns.rs:28:21: 28:44
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a &Option<Test>, &'b &Option<Test>) -> bool {<&Option<Test> as PartialEq>::eq}, val: Value(<ZST>) }
    }

    bb15: {
        _29 = &(*_1)[-2 of 2];           // scope 0 at ui/pattern/bindings-after-at/or-patterns-slice-patterns.rs:27:14: 27:17
        goto -> bb14;                    // scope 0 at ui/pattern/bindings-after-at/or-patterns-slice-patterns.rs:21:5: 33:6
    }

    bb16: {
        _29 = &(*_1)[-2 of 2];           // scope 0 at ui/pattern/bindings-after-at/or-patterns-slice-patterns.rs:27:14: 27:17
        goto -> bb14;                    // scope 0 at ui/pattern/bindings-after-at/or-patterns-slice-patterns.rs:21:5: 33:6
    }

    bb17: {
        _31 = const true;                // scope 4 at ui/pattern/bindings-after-at/or-patterns-slice-patterns.rs:28:21: 28:71
        goto -> bb19;                    // scope 4 at ui/pattern/bindings-after-at/or-patterns-slice-patterns.rs:28:21: 28:71
    }

    bb18: {
        _36 = &_29;                      // scope 4 at ui/pattern/bindings-after-at/or-patterns-slice-patterns.rs:28:48: 28:51
        _39 = const _;                   // scope 4 at ui/pattern/bindings-after-at/or-patterns-slice-patterns.rs:28:55: 28:71
                                         // mir::Constant
                                         // + span: ui/pattern/bindings-after-at/or-patterns-slice-patterns.rs:28:55: 28:71
                                         // + literal: Const { ty: &&Option<Test>, val: Unevaluated(test, [], Some(promoted[0])) }
        _37 = _39;                       // scope 4 at ui/pattern/bindings-after-at/or-patterns-slice-patterns.rs:28:55: 28:71
        _35 = <&Option<Test> as PartialEq>::eq(move _36, move _37) -> bb21; // scope 4 at ui/pattern/bindings-after-at/or-patterns-slice-patterns.rs:28:48: 28:71
                                         // mir::Constant
                                         // + span: ui/pattern/bindings-after-at/or-patterns-slice-patterns.rs:28:48: 28:71
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a &Option<Test>, &'b &Option<Test>) -> bool {<&Option<Test> as PartialEq>::eq}, val: Value(<ZST>) }
    }

    bb19: {
        _30 = Not(move _31);             // scope 4 at ui/pattern/bindings-after-at/or-patterns-slice-patterns.rs:28:13: 28:72
        switchInt(move _30) -> [0: bb23, otherwise: bb22]; // scope 4 at ui/pattern/bindings-after-at/or-patterns-slice-patterns.rs:28:13: 28:72
    }

    bb20: {
        switchInt(move _32) -> [0: bb18, otherwise: bb17]; // scope 4 at ui/pattern/bindings-after-at/or-patterns-slice-patterns.rs:28:21: 28:71
    }

    bb21: {
        _31 = move _35;                  // scope 4 at ui/pattern/bindings-after-at/or-patterns-slice-patterns.rs:28:21: 28:71
        goto -> bb19;                    // scope 4 at ui/pattern/bindings-after-at/or-patterns-slice-patterns.rs:28:21: 28:71
    }

    bb22: {
        _38 = core::panicking::panic(const "assertion failed: bar == &Some(Test::Bar) || bar == &Some(Test::Qux)"); // scope 4 at ui/pattern/bindings-after-at/or-patterns-slice-patterns.rs:28:13: 28:72
                                         // mir::Constant
                                         // + span: ui/pattern/bindings-after-at/or-patterns-slice-patterns.rs:28:13: 28:72
                                         // + literal: Const { ty: fn(&'static str) -> ! {core::panicking::panic}, val: Value(<ZST>) }
                                         // mir::Constant
                                         // + span: no-location
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
    }

    bb23: {
        _0 = MatchArm::Arm(const 1_usize); // scope 4 at ui/pattern/bindings-after-at/or-patterns-slice-patterns.rs:30:13: 30:29
        goto -> bb24;                    // scope 0 at ui/pattern/bindings-after-at/or-patterns-slice-patterns.rs:31:9: 31:10
    }

    bb24: {
        return;                          // scope 0 at ui/pattern/bindings-after-at/or-patterns-slice-patterns.rs:34:2: 34:2
    }
}

promoted[0] in test: &&Option<Test> = {
    let mut _0: &&std::option::Option<Test>; // return place in scope 0 at ui/pattern/bindings-after-at/or-patterns-slice-patterns.rs:28:55: 28:71
    let mut _1: &std::option::Option<Test>; // in scope 0 at ui/pattern/bindings-after-at/or-patterns-slice-patterns.rs:28:55: 28:71
    let mut _2: std::option::Option<Test>; // in scope 0 at ui/pattern/bindings-after-at/or-patterns-slice-patterns.rs:28:56: 28:71
    let mut _3: Test;                    // in scope 0 at ui/pattern/bindings-after-at/or-patterns-slice-patterns.rs:28:61: 28:70

    bb0: {
        _3 = Test::Qux;                  // scope 0 at ui/pattern/bindings-after-at/or-patterns-slice-patterns.rs:28:61: 28:70
        _2 = Option::<Test>::Some(move _3); // scope 0 at ui/pattern/bindings-after-at/or-patterns-slice-patterns.rs:28:56: 28:71
        _1 = &_2;                        // scope 0 at ui/pattern/bindings-after-at/or-patterns-slice-patterns.rs:28:55: 28:71
        _0 = &_1;                        // scope 0 at ui/pattern/bindings-after-at/or-patterns-slice-patterns.rs:28:55: 28:71
        return;                          // scope 0 at ui/pattern/bindings-after-at/or-patterns-slice-patterns.rs:28:55: 28:71
    }
}

promoted[1] in test: &&Option<Test> = {
    let mut _0: &&std::option::Option<Test>; // return place in scope 0 at ui/pattern/bindings-after-at/or-patterns-slice-patterns.rs:28:28: 28:44
    let mut _1: &std::option::Option<Test>; // in scope 0 at ui/pattern/bindings-after-at/or-patterns-slice-patterns.rs:28:28: 28:44
    let mut _2: std::option::Option<Test>; // in scope 0 at ui/pattern/bindings-after-at/or-patterns-slice-patterns.rs:28:29: 28:44
    let mut _3: Test;                    // in scope 0 at ui/pattern/bindings-after-at/or-patterns-slice-patterns.rs:28:34: 28:43

    bb0: {
        _3 = Test::Bar;                  // scope 0 at ui/pattern/bindings-after-at/or-patterns-slice-patterns.rs:28:34: 28:43
        _2 = Option::<Test>::Some(move _3); // scope 0 at ui/pattern/bindings-after-at/or-patterns-slice-patterns.rs:28:29: 28:44
        _1 = &_2;                        // scope 0 at ui/pattern/bindings-after-at/or-patterns-slice-patterns.rs:28:28: 28:44
        _0 = &_1;                        // scope 0 at ui/pattern/bindings-after-at/or-patterns-slice-patterns.rs:28:28: 28:44
        return;                          // scope 0 at ui/pattern/bindings-after-at/or-patterns-slice-patterns.rs:28:28: 28:44
    }
}

fn main() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/pattern/bindings-after-at/or-patterns-slice-patterns.rs:36:11: 36:11
    let _1: std::vec::Vec<std::option::Option<Test>>; // in scope 0 at ui/pattern/bindings-after-at/or-patterns-slice-patterns.rs:37:9: 37:12
    let mut _2: std::boxed::Box<[std::option::Option<Test>]>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
    let mut _3: std::boxed::Box<[std::option::Option<Test>; 4]>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
    let mut _4: usize;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
    let mut _5: usize;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
    let mut _6: *mut u8;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
    let mut _7: std::boxed::Box<[std::option::Option<Test>; 4]>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
    let mut _8: std::option::Option<Test>; // in scope 0 at ui/pattern/bindings-after-at/or-patterns-slice-patterns.rs:38:9: 38:24
    let mut _9: std::option::Option<Test>; // in scope 0 at ui/pattern/bindings-after-at/or-patterns-slice-patterns.rs:39:9: 39:24
    let mut _10: std::option::Option<Test>; // in scope 0 at ui/pattern/bindings-after-at/or-patterns-slice-patterns.rs:40:9: 40:24
    let mut _11: std::option::Option<Test>; // in scope 0 at ui/pattern/bindings-after-at/or-patterns-slice-patterns.rs:41:9: 41:24
    let mut _12: (&MatchArm, &MatchArm); // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _13: &MatchArm;              // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let _14: MatchArm;                   // in scope 0 at ui/pattern/bindings-after-at/or-patterns-slice-patterns.rs:45:16: 45:26
    let mut _15: &[std::option::Option<Test>]; // in scope 0 at ui/pattern/bindings-after-at/or-patterns-slice-patterns.rs:45:21: 45:25
    let _16: &[std::option::Option<Test>]; // in scope 0 at ui/pattern/bindings-after-at/or-patterns-slice-patterns.rs:45:21: 45:25
    let mut _17: &std::vec::Vec<std::option::Option<Test>>; // in scope 0 at ui/pattern/bindings-after-at/or-patterns-slice-patterns.rs:45:21: 45:25
    let _18: &std::vec::Vec<std::option::Option<Test>>; // in scope 0 at ui/pattern/bindings-after-at/or-patterns-slice-patterns.rs:45:21: 45:25
    let mut _19: &MatchArm;              // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _22: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    let mut _23: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
    let mut _24: &MatchArm;              // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
    let mut _25: &MatchArm;              // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
    let _27: !;                          // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
    let mut _28: core::panicking::AssertKind; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
    let mut _29: &MatchArm;              // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let _30: &MatchArm;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let mut _31: &MatchArm;              // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let _32: &MatchArm;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let mut _33: std::option::Option<std::fmt::Arguments<'_>>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
    let mut _34: (&MatchArm, &MatchArm); // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _35: &MatchArm;              // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let _36: MatchArm;                   // in scope 0 at ui/pattern/bindings-after-at/or-patterns-slice-patterns.rs:47:16: 47:74
    let mut _37: &[std::option::Option<Test>]; // in scope 0 at ui/pattern/bindings-after-at/or-patterns-slice-patterns.rs:47:21: 47:73
    let mut _38: &[std::option::Option<Test>; 3]; // in scope 0 at ui/pattern/bindings-after-at/or-patterns-slice-patterns.rs:47:21: 47:73
    let _39: &[std::option::Option<Test>; 3]; // in scope 0 at ui/pattern/bindings-after-at/or-patterns-slice-patterns.rs:47:21: 47:73
    let mut _40: &MatchArm;              // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _43: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    let mut _44: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
    let mut _45: &MatchArm;              // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
    let mut _46: &MatchArm;              // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
    let _48: !;                          // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
    let mut _49: core::panicking::AssertKind; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
    let mut _50: &MatchArm;              // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let _51: &MatchArm;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let mut _52: &MatchArm;              // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let _53: &MatchArm;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let mut _54: std::option::Option<std::fmt::Arguments<'_>>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
    let mut _55: (&MatchArm, &MatchArm); // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _56: &MatchArm;              // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let _57: MatchArm;                   // in scope 0 at ui/pattern/bindings-after-at/or-patterns-slice-patterns.rs:49:16: 49:31
    let mut _58: &[std::option::Option<Test>]; // in scope 0 at ui/pattern/bindings-after-at/or-patterns-slice-patterns.rs:49:21: 49:30
    let _59: &[std::option::Option<Test>]; // in scope 0 at ui/pattern/bindings-after-at/or-patterns-slice-patterns.rs:49:21: 49:30
    let _60: &[std::option::Option<Test>]; // in scope 0 at ui/pattern/bindings-after-at/or-patterns-slice-patterns.rs:49:22: 49:30
    let mut _61: &std::vec::Vec<std::option::Option<Test>>; // in scope 0 at ui/pattern/bindings-after-at/or-patterns-slice-patterns.rs:49:22: 49:25
    let mut _62: std::ops::RangeTo<usize>; // in scope 0 at ui/pattern/bindings-after-at/or-patterns-slice-patterns.rs:49:26: 49:29
    let mut _63: &MatchArm;              // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _66: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    let mut _67: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
    let mut _68: &MatchArm;              // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
    let mut _69: &MatchArm;              // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
    let _71: !;                          // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
    let mut _72: core::panicking::AssertKind; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
    let mut _73: &MatchArm;              // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let _74: &MatchArm;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let mut _75: &MatchArm;              // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let _76: &MatchArm;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let mut _77: std::option::Option<std::fmt::Arguments<'_>>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
    let mut _78: (&MatchArm, &MatchArm); // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _79: &MatchArm;              // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let _80: MatchArm;                   // in scope 0 at ui/pattern/bindings-after-at/or-patterns-slice-patterns.rs:51:16: 51:74
    let mut _81: &[std::option::Option<Test>]; // in scope 0 at ui/pattern/bindings-after-at/or-patterns-slice-patterns.rs:51:21: 51:73
    let mut _82: &[std::option::Option<Test>; 3]; // in scope 0 at ui/pattern/bindings-after-at/or-patterns-slice-patterns.rs:51:21: 51:73
    let _83: &[std::option::Option<Test>; 3]; // in scope 0 at ui/pattern/bindings-after-at/or-patterns-slice-patterns.rs:51:21: 51:73
    let mut _84: &MatchArm;              // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _87: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    let mut _88: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
    let mut _89: &MatchArm;              // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
    let mut _90: &MatchArm;              // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
    let _92: !;                          // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
    let mut _93: core::panicking::AssertKind; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
    let mut _94: &MatchArm;              // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let _95: &MatchArm;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let mut _96: &MatchArm;              // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let _97: &MatchArm;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let mut _98: std::option::Option<std::fmt::Arguments<'_>>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
    let mut _99: (&MatchArm, &MatchArm); // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _100: &MatchArm;             // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let _101: MatchArm;                  // in scope 0 at ui/pattern/bindings-after-at/or-patterns-slice-patterns.rs:53:16: 53:32
    let mut _102: &[std::option::Option<Test>]; // in scope 0 at ui/pattern/bindings-after-at/or-patterns-slice-patterns.rs:53:21: 53:31
    let _103: &[std::option::Option<Test>]; // in scope 0 at ui/pattern/bindings-after-at/or-patterns-slice-patterns.rs:53:21: 53:31
    let _104: &[std::option::Option<Test>]; // in scope 0 at ui/pattern/bindings-after-at/or-patterns-slice-patterns.rs:53:22: 53:31
    let mut _105: &std::vec::Vec<std::option::Option<Test>>; // in scope 0 at ui/pattern/bindings-after-at/or-patterns-slice-patterns.rs:53:22: 53:25
    let mut _106: std::ops::Range<usize>; // in scope 0 at ui/pattern/bindings-after-at/or-patterns-slice-patterns.rs:53:26: 53:30
    let mut _107: &MatchArm;             // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _110: bool;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    let mut _111: bool;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
    let mut _112: &MatchArm;             // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
    let mut _113: &MatchArm;             // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
    let _115: !;                         // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
    let mut _116: core::panicking::AssertKind; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
    let mut _117: &MatchArm;             // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let _118: &MatchArm;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let mut _119: &MatchArm;             // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let _120: &MatchArm;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let mut _121: std::option::Option<std::fmt::Arguments<'_>>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
    let mut _129: *const [std::option::Option<Test>; 4]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
    scope 1 {
        debug foo => _1;                 // in scope 1 at ui/pattern/bindings-after-at/or-patterns-slice-patterns.rs:37:9: 37:12
        let _20: &MatchArm;              // in scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        let _21: &MatchArm;              // in scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        let _41: &MatchArm;              // in scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        let _42: &MatchArm;              // in scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        let _64: &MatchArm;              // in scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        let _65: &MatchArm;              // in scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        let _85: &MatchArm;              // in scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        let _86: &MatchArm;              // in scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        let _108: &MatchArm;             // in scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        let _109: &MatchArm;             // in scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        let mut _122: &MatchArm;         // in scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        let mut _123: &MatchArm;         // in scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        let mut _124: &[std::option::Option<Test>; 3]; // in scope 1 at ui/pattern/bindings-after-at/or-patterns-slice-patterns.rs:51:21: 51:73
        let mut _125: &MatchArm;         // in scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        let mut _126: &MatchArm;         // in scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        let mut _127: &[std::option::Option<Test>; 3]; // in scope 1 at ui/pattern/bindings-after-at/or-patterns-slice-patterns.rs:47:21: 47:73
        let mut _128: &MatchArm;         // in scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        scope 3 {
            debug left_val => _20;       // in scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
            debug right_val => _21;      // in scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
            let _26: core::panicking::AssertKind; // in scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
            scope 4 {
                debug kind => _26;       // in scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
            }
        }
        scope 5 {
            debug left_val => _41;       // in scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
            debug right_val => _42;      // in scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
            let _47: core::panicking::AssertKind; // in scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
            scope 6 {
                debug kind => _47;       // in scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
            }
        }
        scope 7 {
            debug left_val => _64;       // in scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
            debug right_val => _65;      // in scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
            let _70: core::panicking::AssertKind; // in scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
            scope 8 {
                debug kind => _70;       // in scope 8 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
            }
        }
        scope 9 {
            debug left_val => _85;       // in scope 9 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
            debug right_val => _86;      // in scope 9 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
            let _91: core::panicking::AssertKind; // in scope 9 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
            scope 10 {
                debug kind => _91;       // in scope 10 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
            }
        }
        scope 11 {
            debug left_val => _108;      // in scope 11 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
            debug right_val => _109;     // in scope 11 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
            let _114: core::panicking::AssertKind; // in scope 11 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
            scope 12 {
                debug kind => _114;      // in scope 12 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
            }
        }
    }
    scope 2 {
    }

    bb0: {
        _4 = const 4_usize;              // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
        _5 = const 1_usize;              // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
        _6 = alloc::alloc::exchange_malloc(move _4, move _5) -> bb1; // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
                                         // + literal: Const { ty: unsafe fn(usize, usize) -> *mut u8 {alloc::alloc::exchange_malloc}, val: Value(<ZST>) }
    }

    bb1: {
        _7 = ShallowInitBox(move _6, [std::option::Option<Test>; 4]); // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
        _8 = const Option::<Test>::Some(Test::Foo); // scope 0 at ui/pattern/bindings-after-at/or-patterns-slice-patterns.rs:38:9: 38:24
                                         // mir::Constant
                                         // + span: ui/pattern/bindings-after-at/or-patterns-slice-patterns.rs:38:9: 38:24
                                         // + literal: Const { ty: Option<Test>, val: Value(Scalar(0x00)) }
        _9 = const Option::<Test>::Some(Test::Bar); // scope 0 at ui/pattern/bindings-after-at/or-patterns-slice-patterns.rs:39:9: 39:24
                                         // mir::Constant
                                         // + span: ui/pattern/bindings-after-at/or-patterns-slice-patterns.rs:39:9: 39:24
                                         // + literal: Const { ty: Option<Test>, val: Value(Scalar(0x01)) }
        _10 = const Option::<Test>::Some(Test::Baz); // scope 0 at ui/pattern/bindings-after-at/or-patterns-slice-patterns.rs:40:9: 40:24
                                         // mir::Constant
                                         // + span: ui/pattern/bindings-after-at/or-patterns-slice-patterns.rs:40:9: 40:24
                                         // + literal: Const { ty: Option<Test>, val: Value(Scalar(0x02)) }
        _11 = const Option::<Test>::Some(Test::Qux); // scope 0 at ui/pattern/bindings-after-at/or-patterns-slice-patterns.rs:41:9: 41:24
                                         // mir::Constant
                                         // + span: ui/pattern/bindings-after-at/or-patterns-slice-patterns.rs:41:9: 41:24
                                         // + literal: Const { ty: Option<Test>, val: Value(Scalar(0x03)) }
        _129 = (((_7.0: std::ptr::Unique<[std::option::Option<Test>; 4]>).0: std::ptr::NonNull<[std::option::Option<Test>; 4]>).0: *const [std::option::Option<Test>; 4]); // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:37: 52:46
        (*_129) = [move _8, move _9, move _10, move _11]; // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:37: 52:46
        _3 = move _7;                    // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
        _2 = move _3 as std::boxed::Box<[std::option::Option<Test>]> (Pointer(Unsize)); // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
        _1 = slice::<impl [Option<Test>]>::into_vec::<std::alloc::Global>(move _2) -> bb2; // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:50:36: 53:10
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:50:36: 50:51
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: fn(Box<[Option<Test>]>) -> Vec<Option<Test>> {slice::<impl [Option<Test>]>::into_vec::<std::alloc::Global>}, val: Value(<ZST>) }
    }

    bb2: {
        _18 = &_1;                       // scope 1 at ui/pattern/bindings-after-at/or-patterns-slice-patterns.rs:45:21: 45:25
        _17 = _18;                       // scope 1 at ui/pattern/bindings-after-at/or-patterns-slice-patterns.rs:45:21: 45:25
        _16 = <Vec<Option<Test>> as Deref>::deref(move _17) -> [return: bb3, unwind: bb27]; // scope 1 at ui/pattern/bindings-after-at/or-patterns-slice-patterns.rs:45:21: 45:25
                                         // mir::Constant
                                         // + span: ui/pattern/bindings-after-at/or-patterns-slice-patterns.rs:45:21: 45:25
                                         // + literal: Const { ty: for<'a> fn(&'a Vec<Option<Test>>) -> &'a <Vec<Option<Test>> as Deref>::Target {<Vec<Option<Test>> as Deref>::deref}, val: Value(<ZST>) }
    }

    bb3: {
        _15 = _16;                       // scope 1 at ui/pattern/bindings-after-at/or-patterns-slice-patterns.rs:45:21: 45:25
        _14 = test(move _15) -> [return: bb4, unwind: bb27]; // scope 1 at ui/pattern/bindings-after-at/or-patterns-slice-patterns.rs:45:16: 45:26
                                         // mir::Constant
                                         // + span: ui/pattern/bindings-after-at/or-patterns-slice-patterns.rs:45:16: 45:20
                                         // + literal: Const { ty: for<'a> fn(&'a [Option<Test>]) -> MatchArm {test}, val: Value(<ZST>) }
    }

    bb4: {
        _13 = &_14;                      // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _128 = const _;                  // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // + literal: Const { ty: &MatchArm, val: Unevaluated(main, [], Some(promoted[6])) }
        _19 = _128;                      // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _12 = (move _13, move _19);      // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _20 = (_12.0: &MatchArm);        // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _21 = (_12.1: &MatchArm);        // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _24 = _20;                       // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
        _25 = _21;                       // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
        _23 = <MatchArm as PartialEq>::eq(move _24, move _25) -> [return: bb5, unwind: bb27]; // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a MatchArm, &'b MatchArm) -> bool {<MatchArm as PartialEq>::eq}, val: Value(<ZST>) }
    }

    bb5: {
        _22 = Not(move _23);             // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
        switchInt(move _22) -> [0: bb7, otherwise: bb6]; // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    }

    bb6: {
        _26 = const core::panicking::AssertKind::Eq; // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _28 = const core::panicking::AssertKind::Eq; // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _30 = _20;                       // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _29 = _30;                       // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _32 = _21;                       // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _31 = _32;                       // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _33 = Option::<Arguments<'_>>::None; // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
        _27 = core::panicking::assert_failed::<MatchArm, MatchArm>(move _28, move _29, move _31, move _33) -> bb27; // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:53
                                         // + literal: Const { ty: for<'a, 'b, 'c> fn(core::panicking::AssertKind, &'a MatchArm, &'b MatchArm, Option<Arguments<'c>>) -> ! {core::panicking::assert_failed::<MatchArm, MatchArm>}, val: Value(<ZST>) }
    }

    bb7: {
        _127 = const _;                  // scope 1 at ui/pattern/bindings-after-at/or-patterns-slice-patterns.rs:47:21: 47:73
                                         // mir::Constant
                                         // + span: ui/pattern/bindings-after-at/or-patterns-slice-patterns.rs:47:21: 47:73
                                         // + literal: Const { ty: &[Option<Test>; 3], val: Unevaluated(main, [], Some(promoted[5])) }
        _39 = _127;                      // scope 1 at ui/pattern/bindings-after-at/or-patterns-slice-patterns.rs:47:21: 47:73
        _38 = _39;                       // scope 1 at ui/pattern/bindings-after-at/or-patterns-slice-patterns.rs:47:21: 47:73
        _37 = move _38 as &[std::option::Option<Test>] (Pointer(Unsize)); // scope 1 at ui/pattern/bindings-after-at/or-patterns-slice-patterns.rs:47:21: 47:73
        _36 = test(move _37) -> [return: bb8, unwind: bb27]; // scope 1 at ui/pattern/bindings-after-at/or-patterns-slice-patterns.rs:47:16: 47:74
                                         // mir::Constant
                                         // + span: ui/pattern/bindings-after-at/or-patterns-slice-patterns.rs:47:16: 47:20
                                         // + literal: Const { ty: for<'a> fn(&'a [Option<Test>]) -> MatchArm {test}, val: Value(<ZST>) }
    }

    bb8: {
        _35 = &_36;                      // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _126 = const _;                  // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // + literal: Const { ty: &MatchArm, val: Unevaluated(main, [], Some(promoted[4])) }
        _40 = _126;                      // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _34 = (move _35, move _40);      // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _41 = (_34.0: &MatchArm);        // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _42 = (_34.1: &MatchArm);        // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _45 = _41;                       // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
        _46 = _42;                       // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
        _44 = <MatchArm as PartialEq>::eq(move _45, move _46) -> [return: bb9, unwind: bb27]; // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a MatchArm, &'b MatchArm) -> bool {<MatchArm as PartialEq>::eq}, val: Value(<ZST>) }
    }

    bb9: {
        _43 = Not(move _44);             // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
        switchInt(move _43) -> [0: bb11, otherwise: bb10]; // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    }

    bb10: {
        _47 = const core::panicking::AssertKind::Eq; // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _49 = const core::panicking::AssertKind::Eq; // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _51 = _41;                       // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _50 = _51;                       // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _53 = _42;                       // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _52 = _53;                       // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _54 = Option::<Arguments<'_>>::None; // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
        _48 = core::panicking::assert_failed::<MatchArm, MatchArm>(move _49, move _50, move _52, move _54) -> bb27; // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:53
                                         // + literal: Const { ty: for<'a, 'b, 'c> fn(core::panicking::AssertKind, &'a MatchArm, &'b MatchArm, Option<Arguments<'c>>) -> ! {core::panicking::assert_failed::<MatchArm, MatchArm>}, val: Value(<ZST>) }
    }

    bb11: {
        _61 = &_1;                       // scope 1 at ui/pattern/bindings-after-at/or-patterns-slice-patterns.rs:49:22: 49:25
        _62 = const RangeTo::<usize> {{ end: 3_usize }}; // scope 1 at ui/pattern/bindings-after-at/or-patterns-slice-patterns.rs:49:26: 49:29
                                         // mir::Constant
                                         // + span: ui/pattern/bindings-after-at/or-patterns-slice-patterns.rs:49:26: 49:29
                                         // + literal: Const { ty: RangeTo<usize>, val: Value(Scalar(0x0000000000000003)) }
        _60 = <Vec<Option<Test>> as Index<RangeTo<usize>>>::index(move _61, move _62) -> [return: bb12, unwind: bb27]; // scope 1 at ui/pattern/bindings-after-at/or-patterns-slice-patterns.rs:49:22: 49:30
                                         // mir::Constant
                                         // + span: ui/pattern/bindings-after-at/or-patterns-slice-patterns.rs:49:22: 49:30
                                         // + literal: Const { ty: for<'a> fn(&'a Vec<Option<Test>>, RangeTo<usize>) -> &'a <Vec<Option<Test>> as Index<RangeTo<usize>>>::Output {<Vec<Option<Test>> as Index<RangeTo<usize>>>::index}, val: Value(<ZST>) }
    }

    bb12: {
        _59 = _60;                       // scope 1 at ui/pattern/bindings-after-at/or-patterns-slice-patterns.rs:49:21: 49:30
        _58 = _59;                       // scope 1 at ui/pattern/bindings-after-at/or-patterns-slice-patterns.rs:49:21: 49:30
        _57 = test(move _58) -> [return: bb13, unwind: bb27]; // scope 1 at ui/pattern/bindings-after-at/or-patterns-slice-patterns.rs:49:16: 49:31
                                         // mir::Constant
                                         // + span: ui/pattern/bindings-after-at/or-patterns-slice-patterns.rs:49:16: 49:20
                                         // + literal: Const { ty: for<'a> fn(&'a [Option<Test>]) -> MatchArm {test}, val: Value(<ZST>) }
    }

    bb13: {
        _56 = &_57;                      // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _125 = const _;                  // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // + literal: Const { ty: &MatchArm, val: Unevaluated(main, [], Some(promoted[3])) }
        _63 = _125;                      // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _55 = (move _56, move _63);      // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _64 = (_55.0: &MatchArm);        // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _65 = (_55.1: &MatchArm);        // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _68 = _64;                       // scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
        _69 = _65;                       // scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
        _67 = <MatchArm as PartialEq>::eq(move _68, move _69) -> [return: bb14, unwind: bb27]; // scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a MatchArm, &'b MatchArm) -> bool {<MatchArm as PartialEq>::eq}, val: Value(<ZST>) }
    }

    bb14: {
        _66 = Not(move _67);             // scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
        switchInt(move _66) -> [0: bb16, otherwise: bb15]; // scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    }

    bb15: {
        _70 = const core::panicking::AssertKind::Eq; // scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _72 = const core::panicking::AssertKind::Eq; // scope 8 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _74 = _64;                       // scope 8 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _73 = _74;                       // scope 8 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _76 = _65;                       // scope 8 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _75 = _76;                       // scope 8 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _77 = Option::<Arguments<'_>>::None; // scope 8 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
        _71 = core::panicking::assert_failed::<MatchArm, MatchArm>(move _72, move _73, move _75, move _77) -> bb27; // scope 8 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:53
                                         // + literal: Const { ty: for<'a, 'b, 'c> fn(core::panicking::AssertKind, &'a MatchArm, &'b MatchArm, Option<Arguments<'c>>) -> ! {core::panicking::assert_failed::<MatchArm, MatchArm>}, val: Value(<ZST>) }
    }

    bb16: {
        _124 = const _;                  // scope 1 at ui/pattern/bindings-after-at/or-patterns-slice-patterns.rs:51:21: 51:73
                                         // mir::Constant
                                         // + span: ui/pattern/bindings-after-at/or-patterns-slice-patterns.rs:51:21: 51:73
                                         // + literal: Const { ty: &[Option<Test>; 3], val: Unevaluated(main, [], Some(promoted[2])) }
        _83 = _124;                      // scope 1 at ui/pattern/bindings-after-at/or-patterns-slice-patterns.rs:51:21: 51:73
        _82 = _83;                       // scope 1 at ui/pattern/bindings-after-at/or-patterns-slice-patterns.rs:51:21: 51:73
        _81 = move _82 as &[std::option::Option<Test>] (Pointer(Unsize)); // scope 1 at ui/pattern/bindings-after-at/or-patterns-slice-patterns.rs:51:21: 51:73
        _80 = test(move _81) -> [return: bb17, unwind: bb27]; // scope 1 at ui/pattern/bindings-after-at/or-patterns-slice-patterns.rs:51:16: 51:74
                                         // mir::Constant
                                         // + span: ui/pattern/bindings-after-at/or-patterns-slice-patterns.rs:51:16: 51:20
                                         // + literal: Const { ty: for<'a> fn(&'a [Option<Test>]) -> MatchArm {test}, val: Value(<ZST>) }
    }

    bb17: {
        _79 = &_80;                      // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _123 = const _;                  // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // + literal: Const { ty: &MatchArm, val: Unevaluated(main, [], Some(promoted[1])) }
        _84 = _123;                      // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _78 = (move _79, move _84);      // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _85 = (_78.0: &MatchArm);        // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _86 = (_78.1: &MatchArm);        // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _89 = _85;                       // scope 9 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
        _90 = _86;                       // scope 9 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
        _88 = <MatchArm as PartialEq>::eq(move _89, move _90) -> [return: bb18, unwind: bb27]; // scope 9 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a MatchArm, &'b MatchArm) -> bool {<MatchArm as PartialEq>::eq}, val: Value(<ZST>) }
    }

    bb18: {
        _87 = Not(move _88);             // scope 9 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
        switchInt(move _87) -> [0: bb20, otherwise: bb19]; // scope 9 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    }

    bb19: {
        _91 = const core::panicking::AssertKind::Eq; // scope 9 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _93 = const core::panicking::AssertKind::Eq; // scope 10 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _95 = _85;                       // scope 10 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _94 = _95;                       // scope 10 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _97 = _86;                       // scope 10 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _96 = _97;                       // scope 10 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _98 = Option::<Arguments<'_>>::None; // scope 10 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
        _92 = core::panicking::assert_failed::<MatchArm, MatchArm>(move _93, move _94, move _96, move _98) -> bb27; // scope 10 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:53
                                         // + literal: Const { ty: for<'a, 'b, 'c> fn(core::panicking::AssertKind, &'a MatchArm, &'b MatchArm, Option<Arguments<'c>>) -> ! {core::panicking::assert_failed::<MatchArm, MatchArm>}, val: Value(<ZST>) }
    }

    bb20: {
        _105 = &_1;                      // scope 1 at ui/pattern/bindings-after-at/or-patterns-slice-patterns.rs:53:22: 53:25
        _106 = std::ops::Range::<usize> { start: const 1_usize, end: const 2_usize }; // scope 1 at ui/pattern/bindings-after-at/or-patterns-slice-patterns.rs:53:26: 53:30
        _104 = <Vec<Option<Test>> as Index<std::ops::Range<usize>>>::index(move _105, move _106) -> [return: bb21, unwind: bb27]; // scope 1 at ui/pattern/bindings-after-at/or-patterns-slice-patterns.rs:53:22: 53:31
                                         // mir::Constant
                                         // + span: ui/pattern/bindings-after-at/or-patterns-slice-patterns.rs:53:22: 53:31
                                         // + literal: Const { ty: for<'a> fn(&'a Vec<Option<Test>>, std::ops::Range<usize>) -> &'a <Vec<Option<Test>> as Index<std::ops::Range<usize>>>::Output {<Vec<Option<Test>> as Index<std::ops::Range<usize>>>::index}, val: Value(<ZST>) }
    }

    bb21: {
        _103 = _104;                     // scope 1 at ui/pattern/bindings-after-at/or-patterns-slice-patterns.rs:53:21: 53:31
        _102 = _103;                     // scope 1 at ui/pattern/bindings-after-at/or-patterns-slice-patterns.rs:53:21: 53:31
        _101 = test(move _102) -> [return: bb22, unwind: bb27]; // scope 1 at ui/pattern/bindings-after-at/or-patterns-slice-patterns.rs:53:16: 53:32
                                         // mir::Constant
                                         // + span: ui/pattern/bindings-after-at/or-patterns-slice-patterns.rs:53:16: 53:20
                                         // + literal: Const { ty: for<'a> fn(&'a [Option<Test>]) -> MatchArm {test}, val: Value(<ZST>) }
    }

    bb22: {
        _100 = &_101;                    // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _122 = const _;                  // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // + literal: Const { ty: &MatchArm, val: Unevaluated(main, [], Some(promoted[0])) }
        _107 = _122;                     // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _99 = (move _100, move _107);    // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _108 = (_99.0: &MatchArm);       // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _109 = (_99.1: &MatchArm);       // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _112 = _108;                     // scope 11 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
        _113 = _109;                     // scope 11 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
        _111 = <MatchArm as PartialEq>::eq(move _112, move _113) -> [return: bb23, unwind: bb27]; // scope 11 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a MatchArm, &'b MatchArm) -> bool {<MatchArm as PartialEq>::eq}, val: Value(<ZST>) }
    }

    bb23: {
        _110 = Not(move _111);           // scope 11 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
        switchInt(move _110) -> [0: bb25, otherwise: bb24]; // scope 11 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    }

    bb24: {
        _114 = const core::panicking::AssertKind::Eq; // scope 11 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _116 = const core::panicking::AssertKind::Eq; // scope 12 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _118 = _108;                     // scope 12 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _117 = _118;                     // scope 12 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _120 = _109;                     // scope 12 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _119 = _120;                     // scope 12 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _121 = Option::<Arguments<'_>>::None; // scope 12 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
        _115 = core::panicking::assert_failed::<MatchArm, MatchArm>(move _116, move _117, move _119, move _121) -> bb27; // scope 12 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:53
                                         // + literal: Const { ty: for<'a, 'b, 'c> fn(core::panicking::AssertKind, &'a MatchArm, &'b MatchArm, Option<Arguments<'c>>) -> ! {core::panicking::assert_failed::<MatchArm, MatchArm>}, val: Value(<ZST>) }
    }

    bb25: {
        drop(_1) -> bb26;                // scope 0 at ui/pattern/bindings-after-at/or-patterns-slice-patterns.rs:54:1: 54:2
    }

    bb26: {
        return;                          // scope 0 at ui/pattern/bindings-after-at/or-patterns-slice-patterns.rs:54:2: 54:2
    }

    bb27 (cleanup): {
        drop(_1) -> bb28;                // scope 0 at ui/pattern/bindings-after-at/or-patterns-slice-patterns.rs:54:1: 54:2
    }

    bb28 (cleanup): {
        resume;                          // scope 0 at ui/pattern/bindings-after-at/or-patterns-slice-patterns.rs:36:1: 54:2
    }
}

promoted[0] in main: &MatchArm = {
    let mut _0: &MatchArm;               // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _1: MatchArm;                // in scope 0 at ui/pattern/bindings-after-at/or-patterns-slice-patterns.rs:53:34: 53:48

    bb0: {
        _1 = MatchArm::Wild;             // scope 0 at ui/pattern/bindings-after-at/or-patterns-slice-patterns.rs:53:34: 53:48
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    }
}

promoted[1] in main: &MatchArm = {
    let mut _0: &MatchArm;               // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _1: MatchArm;                // in scope 0 at ui/pattern/bindings-after-at/or-patterns-slice-patterns.rs:51:76: 51:92

    bb0: {
        _1 = MatchArm::Arm(const 1_usize); // scope 0 at ui/pattern/bindings-after-at/or-patterns-slice-patterns.rs:51:76: 51:92
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    }
}

promoted[2] in main: &[Option<Test>; 3] = {
    let mut _0: &[std::option::Option<Test>; 3]; // return place in scope 0 at ui/pattern/bindings-after-at/or-patterns-slice-patterns.rs:51:21: 51:73
    let mut _1: [std::option::Option<Test>; 3]; // in scope 0 at ui/pattern/bindings-after-at/or-patterns-slice-patterns.rs:51:22: 51:73
    let mut _2: std::option::Option<Test>; // in scope 0 at ui/pattern/bindings-after-at/or-patterns-slice-patterns.rs:51:23: 51:38
    let mut _3: Test;                    // in scope 0 at ui/pattern/bindings-after-at/or-patterns-slice-patterns.rs:51:28: 51:37
    let mut _4: std::option::Option<Test>; // in scope 0 at ui/pattern/bindings-after-at/or-patterns-slice-patterns.rs:51:40: 51:55
    let mut _5: Test;                    // in scope 0 at ui/pattern/bindings-after-at/or-patterns-slice-patterns.rs:51:45: 51:54
    let mut _6: std::option::Option<Test>; // in scope 0 at ui/pattern/bindings-after-at/or-patterns-slice-patterns.rs:51:57: 51:72
    let mut _7: Test;                    // in scope 0 at ui/pattern/bindings-after-at/or-patterns-slice-patterns.rs:51:62: 51:71

    bb0: {
        _3 = Test::Bar;                  // scope 0 at ui/pattern/bindings-after-at/or-patterns-slice-patterns.rs:51:28: 51:37
        _2 = Option::<Test>::Some(move _3); // scope 0 at ui/pattern/bindings-after-at/or-patterns-slice-patterns.rs:51:23: 51:38
        _5 = Test::Qux;                  // scope 0 at ui/pattern/bindings-after-at/or-patterns-slice-patterns.rs:51:45: 51:54
        _4 = Option::<Test>::Some(move _5); // scope 0 at ui/pattern/bindings-after-at/or-patterns-slice-patterns.rs:51:40: 51:55
        _7 = Test::Baz;                  // scope 0 at ui/pattern/bindings-after-at/or-patterns-slice-patterns.rs:51:62: 51:71
        _6 = Option::<Test>::Some(move _7); // scope 0 at ui/pattern/bindings-after-at/or-patterns-slice-patterns.rs:51:57: 51:72
        _1 = [move _2, move _4, move _6]; // scope 0 at ui/pattern/bindings-after-at/or-patterns-slice-patterns.rs:51:22: 51:73
        _0 = &_1;                        // scope 0 at ui/pattern/bindings-after-at/or-patterns-slice-patterns.rs:51:21: 51:73
        return;                          // scope 0 at ui/pattern/bindings-after-at/or-patterns-slice-patterns.rs:51:21: 51:73
    }
}

promoted[3] in main: &MatchArm = {
    let mut _0: &MatchArm;               // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _1: MatchArm;                // in scope 0 at ui/pattern/bindings-after-at/or-patterns-slice-patterns.rs:49:33: 49:49

    bb0: {
        _1 = MatchArm::Arm(const 1_usize); // scope 0 at ui/pattern/bindings-after-at/or-patterns-slice-patterns.rs:49:33: 49:49
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    }
}

promoted[4] in main: &MatchArm = {
    let mut _0: &MatchArm;               // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _1: MatchArm;                // in scope 0 at ui/pattern/bindings-after-at/or-patterns-slice-patterns.rs:47:76: 47:92

    bb0: {
        _1 = MatchArm::Arm(const 0_usize); // scope 0 at ui/pattern/bindings-after-at/or-patterns-slice-patterns.rs:47:76: 47:92
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    }
}

promoted[5] in main: &[Option<Test>; 3] = {
    let mut _0: &[std::option::Option<Test>; 3]; // return place in scope 0 at ui/pattern/bindings-after-at/or-patterns-slice-patterns.rs:47:21: 47:73
    let mut _1: [std::option::Option<Test>; 3]; // in scope 0 at ui/pattern/bindings-after-at/or-patterns-slice-patterns.rs:47:22: 47:73
    let mut _2: std::option::Option<Test>; // in scope 0 at ui/pattern/bindings-after-at/or-patterns-slice-patterns.rs:47:23: 47:38
    let mut _3: Test;                    // in scope 0 at ui/pattern/bindings-after-at/or-patterns-slice-patterns.rs:47:28: 47:37
    let mut _4: std::option::Option<Test>; // in scope 0 at ui/pattern/bindings-after-at/or-patterns-slice-patterns.rs:47:40: 47:55
    let mut _5: Test;                    // in scope 0 at ui/pattern/bindings-after-at/or-patterns-slice-patterns.rs:47:45: 47:54
    let mut _6: std::option::Option<Test>; // in scope 0 at ui/pattern/bindings-after-at/or-patterns-slice-patterns.rs:47:57: 47:72
    let mut _7: Test;                    // in scope 0 at ui/pattern/bindings-after-at/or-patterns-slice-patterns.rs:47:62: 47:71

    bb0: {
        _3 = Test::Foo;                  // scope 0 at ui/pattern/bindings-after-at/or-patterns-slice-patterns.rs:47:28: 47:37
        _2 = Option::<Test>::Some(move _3); // scope 0 at ui/pattern/bindings-after-at/or-patterns-slice-patterns.rs:47:23: 47:38
        _5 = Test::Bar;                  // scope 0 at ui/pattern/bindings-after-at/or-patterns-slice-patterns.rs:47:45: 47:54
        _4 = Option::<Test>::Some(move _5); // scope 0 at ui/pattern/bindings-after-at/or-patterns-slice-patterns.rs:47:40: 47:55
        _7 = Test::Foo;                  // scope 0 at ui/pattern/bindings-after-at/or-patterns-slice-patterns.rs:47:62: 47:71
        _6 = Option::<Test>::Some(move _7); // scope 0 at ui/pattern/bindings-after-at/or-patterns-slice-patterns.rs:47:57: 47:72
        _1 = [move _2, move _4, move _6]; // scope 0 at ui/pattern/bindings-after-at/or-patterns-slice-patterns.rs:47:22: 47:73
        _0 = &_1;                        // scope 0 at ui/pattern/bindings-after-at/or-patterns-slice-patterns.rs:47:21: 47:73
        return;                          // scope 0 at ui/pattern/bindings-after-at/or-patterns-slice-patterns.rs:47:21: 47:73
    }
}

promoted[6] in main: &MatchArm = {
    let mut _0: &MatchArm;               // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _1: MatchArm;                // in scope 0 at ui/pattern/bindings-after-at/or-patterns-slice-patterns.rs:45:28: 45:44

    bb0: {
        _1 = MatchArm::Arm(const 0_usize); // scope 0 at ui/pattern/bindings-after-at/or-patterns-slice-patterns.rs:45:28: 45:44
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    }
}

fn MatchArm::Arm(_1: usize) -> MatchArm {
    let mut _0: MatchArm;                // return place in scope 0 at ui/pattern/bindings-after-at/or-patterns-slice-patterns.rs:8:5: 8:8

    bb0: {
        _0 = MatchArm::Arm(move _1);     // scope 0 at ui/pattern/bindings-after-at/or-patterns-slice-patterns.rs:8:5: 8:8
        return;                          // scope 0 at ui/pattern/bindings-after-at/or-patterns-slice-patterns.rs:8:5: 8:8
    }
}

// MIR FOR CTFE
fn MatchArm::Arm(_1: usize) -> MatchArm {
    let mut _0: MatchArm;                // return place in scope 0 at ui/pattern/bindings-after-at/or-patterns-slice-patterns.rs:8:5: 8:8

    bb0: {
        _0 = MatchArm::Arm(move _1);     // scope 0 at ui/pattern/bindings-after-at/or-patterns-slice-patterns.rs:8:5: 8:8
        return;                          // scope 0 at ui/pattern/bindings-after-at/or-patterns-slice-patterns.rs:8:5: 8:8
    }
}
