// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
fn foo1(_1: Next<A>) -> () {
    debug item => _1;                    // in scope 0 at ui/pattern/usefulness/issue-72476-and-89393-associated-type.rs:22:9: 22:13
    let mut _0: ();                      // return place in scope 0 at ui/pattern/usefulness/issue-72476-and-89393-associated-type.rs:22:24: 22:24

    bb0: {
        return;                          // scope 0 at ui/pattern/usefulness/issue-72476-and-89393-associated-type.rs:27:2: 27:2
    }
}

fn foo2(_1: bool) -> () {
    debug x => _1;                       // in scope 0 at ui/pattern/usefulness/issue-72476-and-89393-associated-type.rs:29:9: 29:10
    let mut _0: ();                      // return place in scope 0 at ui/pattern/usefulness/issue-72476-and-89393-associated-type.rs:29:38: 29:38

    bb0: {
        return;                          // scope 0 at ui/pattern/usefulness/issue-72476-and-89393-associated-type.rs:34:2: 34:2
    }
}

fn foo3(_1: Next<B>) -> () {
    debug x => _1;                       // in scope 0 at ui/pattern/usefulness/issue-72476-and-89393-associated-type.rs:36:9: 36:10
    let mut _0: ();                      // return place in scope 0 at ui/pattern/usefulness/issue-72476-and-89393-associated-type.rs:36:21: 36:21
    scope 1 {
    }

    bb0: {
        return;                          // scope 0 at ui/pattern/usefulness/issue-72476-and-89393-associated-type.rs:41:2: 41:2
    }
}

fn foo4(_1: (u32, u32)) -> () {
    debug x => _1;                       // in scope 0 at ui/pattern/usefulness/issue-72476-and-89393-associated-type.rs:43:9: 43:10
    let mut _0: ();                      // return place in scope 0 at ui/pattern/usefulness/issue-72476-and-89393-associated-type.rs:43:38: 43:38
    scope 1 {
    }

    bb0: {
        return;                          // scope 0 at ui/pattern/usefulness/issue-72476-and-89393-associated-type.rs:48:2: 48:2
    }
}

fn foo5(_1: <T as Trait>::Projection) -> () {
    debug x => _1;                       // in scope 0 at ui/pattern/usefulness/issue-72476-and-89393-associated-type.rs:50:19: 50:20
    let mut _0: ();                      // return place in scope 0 at ui/pattern/usefulness/issue-72476-and-89393-associated-type.rs:50:48: 50:48

    bb0: {
        drop(_1) -> bb1;                 // scope 0 at ui/pattern/usefulness/issue-72476-and-89393-associated-type.rs:54:1: 54:2
    }

    bb1: {
        return;                          // scope 0 at ui/pattern/usefulness/issue-72476-and-89393-associated-type.rs:54:2: 54:2
    }
}

fn main() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/pattern/usefulness/issue-72476-and-89393-associated-type.rs:56:11: 56:11

    bb0: {
        return;                          // scope 0 at ui/pattern/usefulness/issue-72476-and-89393-associated-type.rs:56:13: 56:13
    }
}

fn Next(_1: <T as Trait>::Projection) -> Next<T> {
    let mut _0: Next<T>;                 // return place in scope 0 at ui/pattern/usefulness/issue-72476-and-89393-associated-type.rs:20:1: 20:22

    bb0: {
        _0 = Next::<T>(move _1);         // scope 0 at ui/pattern/usefulness/issue-72476-and-89393-associated-type.rs:20:1: 20:22
        return;                          // scope 0 at ui/pattern/usefulness/issue-72476-and-89393-associated-type.rs:20:1: 20:22
    }
}

// MIR FOR CTFE
fn Next(_1: <T as Trait>::Projection) -> Next<T> {
    let mut _0: Next<T>;                 // return place in scope 0 at ui/pattern/usefulness/issue-72476-and-89393-associated-type.rs:20:1: 20:22

    bb0: {
        _0 = Next::<T>(move _1);         // scope 0 at ui/pattern/usefulness/issue-72476-and-89393-associated-type.rs:20:1: 20:22
        return;                          // scope 0 at ui/pattern/usefulness/issue-72476-and-89393-associated-type.rs:20:1: 20:22
    }
}
