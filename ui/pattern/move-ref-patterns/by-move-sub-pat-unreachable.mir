// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
fn main() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/pattern/move-ref-patterns/by-move-sub-pat-unreachable.rs:7:11: 7:11
    let _1: (main::S, main::S);          // in scope 0 at ui/pattern/move-ref-patterns/by-move-sub-pat-unreachable.rs:11:9: 11:10
    let _2: main::S;                     // in scope 0 at ui/pattern/move-ref-patterns/by-move-sub-pat-unreachable.rs:11:14: 11:15
    let _3: main::S;                     // in scope 0 at ui/pattern/move-ref-patterns/by-move-sub-pat-unreachable.rs:11:17: 11:18
    scope 1 {
        debug a => _1;                   // in scope 1 at ui/pattern/move-ref-patterns/by-move-sub-pat-unreachable.rs:11:9: 11:10
        debug b => _2;                   // in scope 1 at ui/pattern/move-ref-patterns/by-move-sub-pat-unreachable.rs:11:14: 11:15
        debug c => _3;                   // in scope 1 at ui/pattern/move-ref-patterns/by-move-sub-pat-unreachable.rs:11:17: 11:18
    }

    bb0: {
        return;                          // scope 0 at ui/pattern/move-ref-patterns/by-move-sub-pat-unreachable.rs:12:2: 12:2
    }
}
