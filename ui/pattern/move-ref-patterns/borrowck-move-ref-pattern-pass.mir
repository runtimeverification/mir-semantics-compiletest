// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
fn main() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/pattern/move-ref-patterns/borrowck-move-ref-pattern-pass.rs:3:11: 3:11

    bb0: {
        return;                          // scope 0 at ui/pattern/move-ref-patterns/borrowck-move-ref-pattern-pass.rs:3:13: 3:13
    }
}

fn slice() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/pattern/move-ref-patterns/borrowck-move-ref-pattern-pass.rs:7:12: 7:12
    let mut _1: [U; 8];                  // in scope 0 at ui/pattern/move-ref-patterns/borrowck-move-ref-pattern-pass.rs:8:9: 8:16
    scope 1 {
        debug arr => _1;                 // in scope 1 at ui/pattern/move-ref-patterns/borrowck-move-ref-pattern-pass.rs:8:9: 8:16
        let _2: &U;                      // in scope 1 at ui/pattern/move-ref-patterns/borrowck-move-ref-pattern-pass.rs:9:10: 9:17
        let _3: U;                       // in scope 1 at ui/pattern/move-ref-patterns/borrowck-move-ref-pattern-pass.rs:9:19: 9:22
        let mut _4: U;                   // in scope 1 at ui/pattern/move-ref-patterns/borrowck-move-ref-pattern-pass.rs:9:27: 9:34
        let _5: &U;                      // in scope 1 at ui/pattern/move-ref-patterns/borrowck-move-ref-pattern-pass.rs:9:40: 9:47
        let _6: U;                       // in scope 1 at ui/pattern/move-ref-patterns/borrowck-move-ref-pattern-pass.rs:9:49: 9:52
        scope 2 {
            debug _x0 => _2;             // in scope 2 at ui/pattern/move-ref-patterns/borrowck-move-ref-pattern-pass.rs:9:10: 9:17
            debug _x1 => _3;             // in scope 2 at ui/pattern/move-ref-patterns/borrowck-move-ref-pattern-pass.rs:9:19: 9:22
            debug _x3 => _4;             // in scope 2 at ui/pattern/move-ref-patterns/borrowck-move-ref-pattern-pass.rs:9:27: 9:34
            debug _x6 => _5;             // in scope 2 at ui/pattern/move-ref-patterns/borrowck-move-ref-pattern-pass.rs:9:40: 9:47
            debug _x7 => _6;             // in scope 2 at ui/pattern/move-ref-patterns/borrowck-move-ref-pattern-pass.rs:9:49: 9:52
            let _7: &mut U;              // in scope 2 at ui/pattern/move-ref-patterns/borrowck-move-ref-pattern-pass.rs:11:10: 11:21
            let _8: &U;                  // in scope 2 at ui/pattern/move-ref-patterns/borrowck-move-ref-pattern-pass.rs:11:26: 11:33
            let _9: U;                   // in scope 2 at ui/pattern/move-ref-patterns/borrowck-move-ref-pattern-pass.rs:11:38: 11:41
            let _10: &mut U;             // in scope 2 at ui/pattern/move-ref-patterns/borrowck-move-ref-pattern-pass.rs:11:43: 11:54
            let _11: U;                  // in scope 2 at ui/pattern/move-ref-patterns/borrowck-move-ref-pattern-pass.rs:11:56: 11:59
            scope 3 {
                debug _x0 => _7;         // in scope 3 at ui/pattern/move-ref-patterns/borrowck-move-ref-pattern-pass.rs:11:10: 11:21
                debug _x2 => _8;         // in scope 3 at ui/pattern/move-ref-patterns/borrowck-move-ref-pattern-pass.rs:11:26: 11:33
                debug _x4 => _9;         // in scope 3 at ui/pattern/move-ref-patterns/borrowck-move-ref-pattern-pass.rs:11:38: 11:41
                debug _x5 => _10;        // in scope 3 at ui/pattern/move-ref-patterns/borrowck-move-ref-pattern-pass.rs:11:43: 11:54
                debug _x6 => _11;        // in scope 3 at ui/pattern/move-ref-patterns/borrowck-move-ref-pattern-pass.rs:11:56: 11:59
                let _12: U;              // in scope 3 at ui/pattern/move-ref-patterns/borrowck-move-ref-pattern-pass.rs:13:16: 13:19
                let _13: U;              // in scope 3 at ui/pattern/move-ref-patterns/borrowck-move-ref-pattern-pass.rs:13:27: 13:30
                scope 4 {
                    debug _x2 => _12;    // in scope 4 at ui/pattern/move-ref-patterns/borrowck-move-ref-pattern-pass.rs:13:16: 13:19
                    debug _x5 => _13;    // in scope 4 at ui/pattern/move-ref-patterns/borrowck-move-ref-pattern-pass.rs:13:27: 13:30
                    let _14: &U;         // in scope 4 at ui/pattern/move-ref-patterns/borrowck-move-ref-pattern-pass.rs:15:10: 15:17
                    scope 5 {
                        debug _x0 => _14; // in scope 5 at ui/pattern/move-ref-patterns/borrowck-move-ref-pattern-pass.rs:15:10: 15:17
                        let _15: U;      // in scope 5 at ui/pattern/move-ref-patterns/borrowck-move-ref-pattern-pass.rs:16:10: 16:13
                        scope 6 {
                            debug _x0 => _15; // in scope 6 at ui/pattern/move-ref-patterns/borrowck-move-ref-pattern-pass.rs:16:10: 16:13
                        }
                    }
                }
            }
        }
    }

    bb0: {
        _2 = &_1[0 of 8];                // scope 1 at ui/pattern/move-ref-patterns/borrowck-move-ref-pattern-pass.rs:9:10: 9:17
        _5 = &_1[6 of 8];                // scope 1 at ui/pattern/move-ref-patterns/borrowck-move-ref-pattern-pass.rs:9:40: 9:47
        _7 = &mut _1[0 of 8];            // scope 2 at ui/pattern/move-ref-patterns/borrowck-move-ref-pattern-pass.rs:11:10: 11:21
        _8 = &_1[2 of 8];                // scope 2 at ui/pattern/move-ref-patterns/borrowck-move-ref-pattern-pass.rs:11:26: 11:33
        _10 = &mut _1[5 of 8];           // scope 2 at ui/pattern/move-ref-patterns/borrowck-move-ref-pattern-pass.rs:11:43: 11:54
        _14 = &_1[0 of 8];               // scope 4 at ui/pattern/move-ref-patterns/borrowck-move-ref-pattern-pass.rs:15:10: 15:17
        return;                          // scope 0 at ui/pattern/move-ref-patterns/borrowck-move-ref-pattern-pass.rs:17:2: 17:2
    }
}

fn tuple() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/pattern/move-ref-patterns/borrowck-move-ref-pattern-pass.rs:19:12: 19:12
    let mut _1: (U, U, U, U, U);         // in scope 0 at ui/pattern/move-ref-patterns/borrowck-move-ref-pattern-pass.rs:20:9: 20:16
    let _9: ();                          // in scope 0 at ui/pattern/move-ref-patterns/borrowck-move-ref-pattern-pass.rs:26:5: 26:14
    let mut _10: &U;                     // in scope 0 at ui/pattern/move-ref-patterns/borrowck-move-ref-pattern-pass.rs:26:10: 26:13
    let _11: ();                         // in scope 0 at ui/pattern/move-ref-patterns/borrowck-move-ref-pattern-pass.rs:27:5: 27:16
    let mut _12: U;                      // in scope 0 at ui/pattern/move-ref-patterns/borrowck-move-ref-pattern-pass.rs:27:10: 27:15
    scope 1 {
        debug tup => _1;                 // in scope 1 at ui/pattern/move-ref-patterns/borrowck-move-ref-pattern-pass.rs:20:9: 20:16
        let _2: &U;                      // in scope 1 at ui/pattern/move-ref-patterns/borrowck-move-ref-pattern-pass.rs:21:10: 21:17
        let mut _3: U;                   // in scope 1 at ui/pattern/move-ref-patterns/borrowck-move-ref-pattern-pass.rs:21:19: 21:26
        let _4: &U;                      // in scope 1 at ui/pattern/move-ref-patterns/borrowck-move-ref-pattern-pass.rs:21:28: 21:35
        scope 2 {
            debug _x0 => _2;             // in scope 2 at ui/pattern/move-ref-patterns/borrowck-move-ref-pattern-pass.rs:21:10: 21:17
            debug _x1 => _3;             // in scope 2 at ui/pattern/move-ref-patterns/borrowck-move-ref-pattern-pass.rs:21:19: 21:26
            debug _x2 => _4;             // in scope 2 at ui/pattern/move-ref-patterns/borrowck-move-ref-pattern-pass.rs:21:28: 21:35
            let _5: &mut U;              // in scope 2 at ui/pattern/move-ref-patterns/borrowck-move-ref-pattern-pass.rs:23:10: 23:21
            let _6: &U;                  // in scope 2 at ui/pattern/move-ref-patterns/borrowck-move-ref-pattern-pass.rs:23:29: 23:36
            let _7: U;                   // in scope 2 at ui/pattern/move-ref-patterns/borrowck-move-ref-pattern-pass.rs:23:38: 23:41
            scope 3 {
                debug _x0 => _5;         // in scope 3 at ui/pattern/move-ref-patterns/borrowck-move-ref-pattern-pass.rs:23:10: 23:21
                debug _x3 => _6;         // in scope 3 at ui/pattern/move-ref-patterns/borrowck-move-ref-pattern-pass.rs:23:29: 23:36
                debug _x4 => _7;         // in scope 3 at ui/pattern/move-ref-patterns/borrowck-move-ref-pattern-pass.rs:23:38: 23:41
                let _8: U;               // in scope 3 at ui/pattern/move-ref-patterns/borrowck-move-ref-pattern-pass.rs:24:19: 24:22
                scope 4 {
                    debug _x3 => _8;     // in scope 4 at ui/pattern/move-ref-patterns/borrowck-move-ref-pattern-pass.rs:24:19: 24:22
                    let _13: U;          // in scope 4 at ui/pattern/move-ref-patterns/borrowck-move-ref-pattern-pass.rs:28:10: 28:13
                    scope 5 {
                        debug _x0 => _13; // in scope 5 at ui/pattern/move-ref-patterns/borrowck-move-ref-pattern-pass.rs:28:10: 28:13
                    }
                }
            }
        }
    }

    bb0: {
        _2 = &(_1.0: U);                 // scope 1 at ui/pattern/move-ref-patterns/borrowck-move-ref-pattern-pass.rs:21:10: 21:17
        _4 = &(_1.2: U);                 // scope 1 at ui/pattern/move-ref-patterns/borrowck-move-ref-pattern-pass.rs:21:28: 21:35
        _5 = &mut (_1.0: U);             // scope 2 at ui/pattern/move-ref-patterns/borrowck-move-ref-pattern-pass.rs:23:10: 23:21
        _6 = &(_1.3: U);                 // scope 2 at ui/pattern/move-ref-patterns/borrowck-move-ref-pattern-pass.rs:23:29: 23:36
        _10 = _4;                        // scope 4 at ui/pattern/move-ref-patterns/borrowck-move-ref-pattern-pass.rs:26:10: 26:13
        _9 = std::mem::drop::<&U>(move _10) -> bb1; // scope 4 at ui/pattern/move-ref-patterns/borrowck-move-ref-pattern-pass.rs:26:5: 26:14
                                         // mir::Constant
                                         // + span: ui/pattern/move-ref-patterns/borrowck-move-ref-pattern-pass.rs:26:5: 26:9
                                         // + literal: Const { ty: fn(&U) {std::mem::drop::<&U>}, val: Value(<ZST>) }
    }

    bb1: {
        _11 = std::mem::drop::<U>(move _12) -> bb2; // scope 4 at ui/pattern/move-ref-patterns/borrowck-move-ref-pattern-pass.rs:27:5: 27:16
                                         // mir::Constant
                                         // + span: ui/pattern/move-ref-patterns/borrowck-move-ref-pattern-pass.rs:27:5: 27:9
                                         // + literal: Const { ty: fn(U) {std::mem::drop::<U>}, val: Value(<ZST>) }
    }

    bb2: {
        return;                          // scope 0 at ui/pattern/move-ref-patterns/borrowck-move-ref-pattern-pass.rs:29:2: 29:2
    }
}
