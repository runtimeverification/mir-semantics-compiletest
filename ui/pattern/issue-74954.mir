// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
fn main() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/pattern/issue-74954.rs:3:11: 3:11
    let mut _1: std::option::Option<&[u8; 7]>; // in scope 0 at ui/pattern/issue-74954.rs:4:42: 4:58
    let _3: ();                          // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:62
    let mut _4: std::fmt::Arguments<'_>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _5: &[&str];                 // in scope 0 at ui/pattern/issue-74954.rs:5:18: 5:33
    let mut _6: &[&str; 2];              // in scope 0 at ui/pattern/issue-74954.rs:5:18: 5:33
    let _7: &[&str; 2];                  // in scope 0 at ui/pattern/issue-74954.rs:5:18: 5:33
    let mut _8: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _9: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let _10: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let _11: [core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _12: core::fmt::ArgumentV1<'_>; // in scope 0 at ui/pattern/issue-74954.rs:5:35: 5:43
    let mut _13: &&[u8; 6];              // in scope 0 at ui/pattern/issue-74954.rs:5:35: 5:43
    let _14: &&[u8; 6];                  // in scope 0 at ui/pattern/issue-74954.rs:5:35: 5:43
    let mut _16: &[u8; 7];               // in scope 0 at ui/pattern/issue-74954.rs:4:42: 4:58
    scope 1 {
        debug filename => _2;            // in scope 1 at ui/pattern/issue-74954.rs:4:24: 4:32
        let _2: &[u8; 6];                // in scope 1 at ui/pattern/issue-74954.rs:4:24: 4:32
        let mut _15: &[&str; 2];         // in scope 1 at ui/pattern/issue-74954.rs:5:18: 5:33
    }

    bb0: {
        _1 = Option::<&[u8; 7]>::Some(const b"@abc123"); // scope 1 at ui/pattern/issue-74954.rs:4:42: 4:58
                                         // mir::Constant
                                         // + span: ui/pattern/issue-74954.rs:4:47: 4:57
                                         // + literal: Const { ty: &[u8; 7], val: Value(Scalar(alloc1)) }
        _16 = deref_copy ((_1 as Some).0: &[u8; 7]); // scope 1 at ui/pattern/issue-74954.rs:4:24: 4:32
        _2 = &(*_16)[1..7];              // scope 1 at ui/pattern/issue-74954.rs:4:24: 4:32
        _15 = const _;                   // scope 1 at ui/pattern/issue-74954.rs:5:18: 5:33
                                         // mir::Constant
                                         // + span: ui/pattern/issue-74954.rs:5:18: 5:33
                                         // + literal: Const { ty: &[&str; 2], val: Unevaluated(main, [], Some(promoted[0])) }
        _7 = _15;                        // scope 1 at ui/pattern/issue-74954.rs:5:18: 5:33
        _6 = _7;                         // scope 1 at ui/pattern/issue-74954.rs:5:18: 5:33
        _5 = move _6 as &[&str] (Pointer(Unsize)); // scope 1 at ui/pattern/issue-74954.rs:5:18: 5:33
        _14 = &_2;                       // scope 1 at ui/pattern/issue-74954.rs:5:35: 5:43
        _13 = _14;                       // scope 1 at ui/pattern/issue-74954.rs:5:35: 5:43
        _12 = core::fmt::ArgumentV1::<'_>::new_debug::<&[u8; 6]>(move _13) -> bb1; // scope 1 at ui/pattern/issue-74954.rs:5:35: 5:43
                                         // mir::Constant
                                         // + span: ui/pattern/issue-74954.rs:5:35: 5:43
                                         // + user_ty: UserType(1)
                                         // + literal: Const { ty: for<'b> fn(&'b &[u8; 6]) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_debug::<&[u8; 6]>}, val: Value(<ZST>) }
    }

    bb1: {
        _11 = [move _12];                // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _10 = &_11;                      // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _9 = _10;                        // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _8 = move _9 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _4 = Arguments::<'_>::new_v1(move _5, move _8) -> bb2; // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb2: {
        _3 = _print(move _4) -> bb3;     // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:62
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:27
                                         // + literal: Const { ty: for<'a> fn(Arguments<'a>) {_print}, val: Value(<ZST>) }
    }

    bb3: {
        return;                          // scope 0 at ui/pattern/issue-74954.rs:7:2: 7:2
    }
}

alloc1 (size: 7, align: 1) {
    40 61 62 63 31 32 33                            â”‚ @abc123
}

promoted[0] in main: &[&str; 2] = {
    let mut _0: &[&str; 2];              // return place in scope 0 at ui/pattern/issue-74954.rs:5:18: 5:33
    let mut _1: [&str; 2];               // in scope 0 at ui/pattern/issue-74954.rs:5:18: 5:33

    bb0: {
        _1 = [const "filename ", const "\n"]; // scope 0 at ui/pattern/issue-74954.rs:5:18: 5:33
                                         // mir::Constant
                                         // + span: ui/pattern/issue-74954.rs:5:18: 5:33
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
                                         // mir::Constant
                                         // + span: ui/pattern/issue-74954.rs:5:18: 5:33
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at ui/pattern/issue-74954.rs:5:18: 5:33
        return;                          // scope 0 at ui/pattern/issue-74954.rs:5:18: 5:33
    }
}
