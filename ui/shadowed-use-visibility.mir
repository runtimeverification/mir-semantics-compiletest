// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
fn f() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/shadowed-use-visibility.rs:5:16: 5:16

    bb0: {
        return;                          // scope 0 at ui/shadowed-use-visibility.rs:5:18: 5:18
    }
}

fn main() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/shadowed-use-visibility.rs:11:11: 11:11
    let _1: ();                          // in scope 0 at ui/shadowed-use-visibility.rs:12:5: 12:15

    bb0: {
        _1 = f() -> bb1;                 // scope 0 at ui/shadowed-use-visibility.rs:12:5: 12:15
                                         // mir::Constant
                                         // + span: ui/shadowed-use-visibility.rs:12:5: 12:13
                                         // + literal: Const { ty: fn() {f}, val: Value(<ZST>) }
    }

    bb1: {
        return;                          // scope 0 at ui/shadowed-use-visibility.rs:13:2: 13:2
    }
}
