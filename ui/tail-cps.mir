// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
fn checktrue(_1: bool) -> bool {
    debug rs => _1;                      // in scope 0 at ui/tail-cps.rs:3:14: 3:16
    let mut _0: bool;                    // return place in scope 0 at ui/tail-cps.rs:3:27: 3:31
    let mut _2: bool;                    // in scope 0 at ui/tail-cps.rs:3:34: 3:47
    let mut _3: bool;                    // in scope 0 at ui/tail-cps.rs:3:42: 3:46
    let mut _4: !;                       // in scope 0 at ui/tail-cps.rs:3:34: 3:47

    bb0: {
        _3 = _1;                         // scope 0 at ui/tail-cps.rs:3:42: 3:46
        _2 = Not(move _3);               // scope 0 at ui/tail-cps.rs:3:34: 3:47
        switchInt(move _2) -> [0: bb2, otherwise: bb1]; // scope 0 at ui/tail-cps.rs:3:34: 3:47
    }

    bb1: {
        _4 = core::panicking::panic(const "assertion failed: (rs)"); // scope 0 at ui/tail-cps.rs:3:34: 3:47
                                         // mir::Constant
                                         // + span: ui/tail-cps.rs:3:34: 3:47
                                         // + literal: Const { ty: fn(&'static str) -> ! {core::panicking::panic}, val: Value(<ZST>) }
                                         // mir::Constant
                                         // + span: no-location
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
    }

    bb2: {
        _0 = const true;                 // scope 0 at ui/tail-cps.rs:3:56: 3:60
        return;                          // scope 0 at ui/tail-cps.rs:3:63: 3:63
    }
}

fn main() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/tail-cps.rs:5:15: 5:15
    let _1: fn(bool) -> bool {checktrue}; // in scope 0 at ui/tail-cps.rs:5:21: 5:22
    let _2: bool;                        // in scope 0 at ui/tail-cps.rs:5:36: 5:48
    let mut _3: fn(bool) -> bool;        // in scope 0 at ui/tail-cps.rs:5:46: 5:47
    let mut _4: fn(bool) -> bool {checktrue}; // in scope 0 at ui/tail-cps.rs:5:46: 5:47
    let _5: bool;                        // in scope 0 at ui/tail-cps.rs:5:50: 5:61
    let mut _6: fn(bool) -> bool;        // in scope 0 at ui/tail-cps.rs:5:59: 5:60
    let mut _7: fn(bool) -> bool {checktrue}; // in scope 0 at ui/tail-cps.rs:5:59: 5:60
    scope 1 {
        debug k => _1;                   // in scope 1 at ui/tail-cps.rs:5:21: 5:22
    }

    bb0: {
        _3 = move _4 as fn(bool) -> bool (Pointer(ReifyFnPointer)); // scope 1 at ui/tail-cps.rs:5:46: 5:47
        _2 = evenk(const 42_isize, move _3) -> bb1; // scope 1 at ui/tail-cps.rs:5:36: 5:48
                                         // mir::Constant
                                         // + span: ui/tail-cps.rs:5:36: 5:41
                                         // + literal: Const { ty: fn(isize, fn(bool) -> bool) -> bool {evenk}, val: Value(<ZST>) }
    }

    bb1: {
        _6 = move _7 as fn(bool) -> bool (Pointer(ReifyFnPointer)); // scope 1 at ui/tail-cps.rs:5:59: 5:60
        _5 = oddk(const 45_isize, move _6) -> bb2; // scope 1 at ui/tail-cps.rs:5:50: 5:61
                                         // mir::Constant
                                         // + span: ui/tail-cps.rs:5:50: 5:54
                                         // + literal: Const { ty: fn(isize, fn(bool) -> bool) -> bool {oddk}, val: Value(<ZST>) }
    }

    bb2: {
        return;                          // scope 0 at ui/tail-cps.rs:5:64: 5:64
    }
}

fn evenk(_1: isize, _2: fn(bool) -> bool) -> bool {
    debug n => _1;                       // in scope 0 at ui/tail-cps.rs:7:10: 7:11
    debug k => _2;                       // in scope 0 at ui/tail-cps.rs:7:20: 7:21
    let mut _0: bool;                    // return place in scope 0 at ui/tail-cps.rs:7:44: 7:48
    let _3: ();                          // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:62
    let mut _4: std::fmt::Arguments<'_>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _5: &[&str];                 // in scope 0 at ui/tail-cps.rs:8:14: 8:21
    let mut _6: &[&str; 1];              // in scope 0 at ui/tail-cps.rs:8:14: 8:21
    let _7: &[&str; 1];                  // in scope 0 at ui/tail-cps.rs:8:14: 8:21
    let mut _8: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _9: &[core::fmt::ArgumentV1<'_>; 0]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let _10: &[core::fmt::ArgumentV1<'_>; 0]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let _11: ();                         // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:62
    let mut _12: std::fmt::Arguments<'_>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _13: &[&str];                // in scope 0 at ui/tail-cps.rs:9:14: 9:18
    let mut _14: &[&str; 2];             // in scope 0 at ui/tail-cps.rs:9:14: 9:18
    let _15: &[&str; 2];                 // in scope 0 at ui/tail-cps.rs:9:14: 9:18
    let mut _16: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _17: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let _18: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let _19: [core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _20: core::fmt::ArgumentV1<'_>; // in scope 0 at ui/tail-cps.rs:9:20: 9:21
    let mut _21: &isize;                 // in scope 0 at ui/tail-cps.rs:9:20: 9:21
    let _22: &isize;                     // in scope 0 at ui/tail-cps.rs:9:20: 9:21
    let mut _23: isize;                  // in scope 0 at ui/tail-cps.rs:10:8: 10:9
    let mut _24: fn(bool) -> bool;       // in scope 0 at ui/tail-cps.rs:10:24: 10:25
    let mut _25: isize;                  // in scope 0 at ui/tail-cps.rs:10:54: 10:59
    let mut _26: isize;                  // in scope 0 at ui/tail-cps.rs:10:54: 10:55
    let mut _27: (isize, bool);          // in scope 0 at ui/tail-cps.rs:10:54: 10:59
    let mut _28: fn(bool) -> bool;       // in scope 0 at ui/tail-cps.rs:10:61: 10:62
    let mut _29: &[&str; 2];             // in scope 0 at ui/tail-cps.rs:9:14: 9:18
    let mut _30: &[core::fmt::ArgumentV1<'_>; 0]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _31: &[&str; 1];             // in scope 0 at ui/tail-cps.rs:8:14: 8:21

    bb0: {
        _31 = const _;                   // scope 0 at ui/tail-cps.rs:8:14: 8:21
                                         // mir::Constant
                                         // + span: ui/tail-cps.rs:8:14: 8:21
                                         // + literal: Const { ty: &[&str; 1], val: Unevaluated(evenk, [], Some(promoted[2])) }
        _7 = _31;                        // scope 0 at ui/tail-cps.rs:8:14: 8:21
        _6 = _7;                         // scope 0 at ui/tail-cps.rs:8:14: 8:21
        _5 = move _6 as &[&str] (Pointer(Unsize)); // scope 0 at ui/tail-cps.rs:8:14: 8:21
        _30 = const _;                   // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // + literal: Const { ty: &[core::fmt::ArgumentV1<'_>; 0], val: Unevaluated(evenk, [], Some(promoted[1])) }
        _10 = _30;                       // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _9 = _10;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _8 = move _9 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _4 = Arguments::<'_>::new_v1(move _5, move _8) -> bb1; // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb1: {
        _3 = _print(move _4) -> bb2;     // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:62
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:27
                                         // + literal: Const { ty: for<'a> fn(Arguments<'a>) {_print}, val: Value(<ZST>) }
    }

    bb2: {
        _29 = const _;                   // scope 0 at ui/tail-cps.rs:9:14: 9:18
                                         // mir::Constant
                                         // + span: ui/tail-cps.rs:9:14: 9:18
                                         // + literal: Const { ty: &[&str; 2], val: Unevaluated(evenk, [], Some(promoted[0])) }
        _15 = _29;                       // scope 0 at ui/tail-cps.rs:9:14: 9:18
        _14 = _15;                       // scope 0 at ui/tail-cps.rs:9:14: 9:18
        _13 = move _14 as &[&str] (Pointer(Unsize)); // scope 0 at ui/tail-cps.rs:9:14: 9:18
        _22 = &_1;                       // scope 0 at ui/tail-cps.rs:9:20: 9:21
        _21 = _22;                       // scope 0 at ui/tail-cps.rs:9:20: 9:21
        _20 = core::fmt::ArgumentV1::<'_>::new_display::<isize>(move _21) -> bb3; // scope 0 at ui/tail-cps.rs:9:20: 9:21
                                         // mir::Constant
                                         // + span: ui/tail-cps.rs:9:20: 9:21
                                         // + user_ty: UserType(2)
                                         // + literal: Const { ty: for<'b> fn(&'b isize) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_display::<isize>}, val: Value(<ZST>) }
    }

    bb3: {
        _19 = [move _20];                // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _18 = &_19;                      // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _17 = _18;                       // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _16 = move _17 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _12 = Arguments::<'_>::new_v1(move _13, move _16) -> bb4; // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // + user_ty: UserType(1)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb4: {
        _11 = _print(move _12) -> bb5;   // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:62
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:27
                                         // + literal: Const { ty: for<'a> fn(Arguments<'a>) {_print}, val: Value(<ZST>) }
    }

    bb5: {
        _23 = _1;                        // scope 0 at ui/tail-cps.rs:10:8: 10:9
        switchInt(move _23) -> [0: bb6, otherwise: bb7]; // scope 0 at ui/tail-cps.rs:10:8: 10:14
    }

    bb6: {
        _24 = _2;                        // scope 0 at ui/tail-cps.rs:10:24: 10:25
        _0 = move _24(const true) -> bb9; // scope 0 at ui/tail-cps.rs:10:24: 10:31
    }

    bb7: {
        _26 = _1;                        // scope 0 at ui/tail-cps.rs:10:54: 10:55
        _27 = CheckedSub(_26, const 1_isize); // scope 0 at ui/tail-cps.rs:10:54: 10:59
        assert(!move (_27.1: bool), "attempt to compute `{} - {}`, which would overflow", move _26, const 1_isize) -> bb8; // scope 0 at ui/tail-cps.rs:10:54: 10:59
    }

    bb8: {
        _25 = move (_27.0: isize);       // scope 0 at ui/tail-cps.rs:10:54: 10:59
        _28 = _2;                        // scope 0 at ui/tail-cps.rs:10:61: 10:62
        _0 = oddk(move _25, move _28) -> bb9; // scope 0 at ui/tail-cps.rs:10:49: 10:63
                                         // mir::Constant
                                         // + span: ui/tail-cps.rs:10:49: 10:53
                                         // + literal: Const { ty: fn(isize, fn(bool) -> bool) -> bool {oddk}, val: Value(<ZST>) }
    }

    bb9: {
        return;                          // scope 0 at ui/tail-cps.rs:11:2: 11:2
    }
}

promoted[0] in evenk: &[&str; 2] = {
    let mut _0: &[&str; 2];              // return place in scope 0 at ui/tail-cps.rs:9:14: 9:18
    let mut _1: [&str; 2];               // in scope 0 at ui/tail-cps.rs:9:14: 9:18

    bb0: {
        _1 = [const "", const "\n"];     // scope 0 at ui/tail-cps.rs:9:14: 9:18
                                         // mir::Constant
                                         // + span: ui/tail-cps.rs:9:14: 9:18
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
                                         // mir::Constant
                                         // + span: ui/tail-cps.rs:9:14: 9:18
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at ui/tail-cps.rs:9:14: 9:18
        return;                          // scope 0 at ui/tail-cps.rs:9:14: 9:18
    }
}

promoted[1] in evenk: &[core::fmt::ArgumentV1<'_>; 0] = {
    let mut _0: &[core::fmt::ArgumentV1<'_>; 0]; // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _1: [core::fmt::ArgumentV1<'_>; 0]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61

    bb0: {
        _1 = [];                         // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    }
}

promoted[2] in evenk: &[&str; 1] = {
    let mut _0: &[&str; 1];              // return place in scope 0 at ui/tail-cps.rs:8:14: 8:21
    let mut _1: [&str; 1];               // in scope 0 at ui/tail-cps.rs:8:14: 8:21

    bb0: {
        _1 = [const "evenk\n"];          // scope 0 at ui/tail-cps.rs:8:14: 8:21
                                         // mir::Constant
                                         // + span: ui/tail-cps.rs:8:14: 8:21
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at ui/tail-cps.rs:8:14: 8:21
        return;                          // scope 0 at ui/tail-cps.rs:8:14: 8:21
    }
}

fn oddk(_1: isize, _2: fn(bool) -> bool) -> bool {
    debug n => _1;                       // in scope 0 at ui/tail-cps.rs:13:9: 13:10
    debug k => _2;                       // in scope 0 at ui/tail-cps.rs:13:19: 13:20
    let mut _0: bool;                    // return place in scope 0 at ui/tail-cps.rs:13:43: 13:47
    let _3: ();                          // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:62
    let mut _4: std::fmt::Arguments<'_>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _5: &[&str];                 // in scope 0 at ui/tail-cps.rs:14:14: 14:20
    let mut _6: &[&str; 1];              // in scope 0 at ui/tail-cps.rs:14:14: 14:20
    let _7: &[&str; 1];                  // in scope 0 at ui/tail-cps.rs:14:14: 14:20
    let mut _8: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _9: &[core::fmt::ArgumentV1<'_>; 0]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let _10: &[core::fmt::ArgumentV1<'_>; 0]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let _11: ();                         // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:62
    let mut _12: std::fmt::Arguments<'_>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _13: &[&str];                // in scope 0 at ui/tail-cps.rs:15:14: 15:18
    let mut _14: &[&str; 2];             // in scope 0 at ui/tail-cps.rs:15:14: 15:18
    let _15: &[&str; 2];                 // in scope 0 at ui/tail-cps.rs:15:14: 15:18
    let mut _16: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _17: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let _18: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let _19: [core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _20: core::fmt::ArgumentV1<'_>; // in scope 0 at ui/tail-cps.rs:15:20: 15:21
    let mut _21: &isize;                 // in scope 0 at ui/tail-cps.rs:15:20: 15:21
    let _22: &isize;                     // in scope 0 at ui/tail-cps.rs:15:20: 15:21
    let mut _23: isize;                  // in scope 0 at ui/tail-cps.rs:16:8: 16:9
    let mut _24: fn(bool) -> bool;       // in scope 0 at ui/tail-cps.rs:16:24: 16:25
    let mut _25: isize;                  // in scope 0 at ui/tail-cps.rs:16:56: 16:61
    let mut _26: isize;                  // in scope 0 at ui/tail-cps.rs:16:56: 16:57
    let mut _27: (isize, bool);          // in scope 0 at ui/tail-cps.rs:16:56: 16:61
    let mut _28: fn(bool) -> bool;       // in scope 0 at ui/tail-cps.rs:16:63: 16:64
    let mut _29: &[&str; 2];             // in scope 0 at ui/tail-cps.rs:15:14: 15:18
    let mut _30: &[core::fmt::ArgumentV1<'_>; 0]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _31: &[&str; 1];             // in scope 0 at ui/tail-cps.rs:14:14: 14:20

    bb0: {
        _31 = const _;                   // scope 0 at ui/tail-cps.rs:14:14: 14:20
                                         // mir::Constant
                                         // + span: ui/tail-cps.rs:14:14: 14:20
                                         // + literal: Const { ty: &[&str; 1], val: Unevaluated(oddk, [], Some(promoted[2])) }
        _7 = _31;                        // scope 0 at ui/tail-cps.rs:14:14: 14:20
        _6 = _7;                         // scope 0 at ui/tail-cps.rs:14:14: 14:20
        _5 = move _6 as &[&str] (Pointer(Unsize)); // scope 0 at ui/tail-cps.rs:14:14: 14:20
        _30 = const _;                   // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // + literal: Const { ty: &[core::fmt::ArgumentV1<'_>; 0], val: Unevaluated(oddk, [], Some(promoted[1])) }
        _10 = _30;                       // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _9 = _10;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _8 = move _9 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _4 = Arguments::<'_>::new_v1(move _5, move _8) -> bb1; // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb1: {
        _3 = _print(move _4) -> bb2;     // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:62
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:27
                                         // + literal: Const { ty: for<'a> fn(Arguments<'a>) {_print}, val: Value(<ZST>) }
    }

    bb2: {
        _29 = const _;                   // scope 0 at ui/tail-cps.rs:15:14: 15:18
                                         // mir::Constant
                                         // + span: ui/tail-cps.rs:15:14: 15:18
                                         // + literal: Const { ty: &[&str; 2], val: Unevaluated(oddk, [], Some(promoted[0])) }
        _15 = _29;                       // scope 0 at ui/tail-cps.rs:15:14: 15:18
        _14 = _15;                       // scope 0 at ui/tail-cps.rs:15:14: 15:18
        _13 = move _14 as &[&str] (Pointer(Unsize)); // scope 0 at ui/tail-cps.rs:15:14: 15:18
        _22 = &_1;                       // scope 0 at ui/tail-cps.rs:15:20: 15:21
        _21 = _22;                       // scope 0 at ui/tail-cps.rs:15:20: 15:21
        _20 = core::fmt::ArgumentV1::<'_>::new_display::<isize>(move _21) -> bb3; // scope 0 at ui/tail-cps.rs:15:20: 15:21
                                         // mir::Constant
                                         // + span: ui/tail-cps.rs:15:20: 15:21
                                         // + user_ty: UserType(2)
                                         // + literal: Const { ty: for<'b> fn(&'b isize) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_display::<isize>}, val: Value(<ZST>) }
    }

    bb3: {
        _19 = [move _20];                // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _18 = &_19;                      // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _17 = _18;                       // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _16 = move _17 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _12 = Arguments::<'_>::new_v1(move _13, move _16) -> bb4; // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // + user_ty: UserType(1)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb4: {
        _11 = _print(move _12) -> bb5;   // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:62
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:27
                                         // + literal: Const { ty: for<'a> fn(Arguments<'a>) {_print}, val: Value(<ZST>) }
    }

    bb5: {
        _23 = _1;                        // scope 0 at ui/tail-cps.rs:16:8: 16:9
        switchInt(move _23) -> [0: bb6, otherwise: bb7]; // scope 0 at ui/tail-cps.rs:16:8: 16:14
    }

    bb6: {
        _24 = _2;                        // scope 0 at ui/tail-cps.rs:16:24: 16:25
        _0 = move _24(const false) -> bb9; // scope 0 at ui/tail-cps.rs:16:24: 16:32
    }

    bb7: {
        _26 = _1;                        // scope 0 at ui/tail-cps.rs:16:56: 16:57
        _27 = CheckedSub(_26, const 1_isize); // scope 0 at ui/tail-cps.rs:16:56: 16:61
        assert(!move (_27.1: bool), "attempt to compute `{} - {}`, which would overflow", move _26, const 1_isize) -> bb8; // scope 0 at ui/tail-cps.rs:16:56: 16:61
    }

    bb8: {
        _25 = move (_27.0: isize);       // scope 0 at ui/tail-cps.rs:16:56: 16:61
        _28 = _2;                        // scope 0 at ui/tail-cps.rs:16:63: 16:64
        _0 = evenk(move _25, move _28) -> bb9; // scope 0 at ui/tail-cps.rs:16:50: 16:65
                                         // mir::Constant
                                         // + span: ui/tail-cps.rs:16:50: 16:55
                                         // + literal: Const { ty: fn(isize, fn(bool) -> bool) -> bool {evenk}, val: Value(<ZST>) }
    }

    bb9: {
        return;                          // scope 0 at ui/tail-cps.rs:17:2: 17:2
    }
}

promoted[0] in oddk: &[&str; 2] = {
    let mut _0: &[&str; 2];              // return place in scope 0 at ui/tail-cps.rs:15:14: 15:18
    let mut _1: [&str; 2];               // in scope 0 at ui/tail-cps.rs:15:14: 15:18

    bb0: {
        _1 = [const "", const "\n"];     // scope 0 at ui/tail-cps.rs:15:14: 15:18
                                         // mir::Constant
                                         // + span: ui/tail-cps.rs:15:14: 15:18
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
                                         // mir::Constant
                                         // + span: ui/tail-cps.rs:15:14: 15:18
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at ui/tail-cps.rs:15:14: 15:18
        return;                          // scope 0 at ui/tail-cps.rs:15:14: 15:18
    }
}

promoted[1] in oddk: &[core::fmt::ArgumentV1<'_>; 0] = {
    let mut _0: &[core::fmt::ArgumentV1<'_>; 0]; // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _1: [core::fmt::ArgumentV1<'_>; 0]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61

    bb0: {
        _1 = [];                         // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    }
}

promoted[2] in oddk: &[&str; 1] = {
    let mut _0: &[&str; 1];              // return place in scope 0 at ui/tail-cps.rs:14:14: 14:20
    let mut _1: [&str; 1];               // in scope 0 at ui/tail-cps.rs:14:14: 14:20

    bb0: {
        _1 = [const "oddk\n"];           // scope 0 at ui/tail-cps.rs:14:14: 14:20
                                         // mir::Constant
                                         // + span: ui/tail-cps.rs:14:14: 14:20
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at ui/tail-cps.rs:14:14: 14:20
        return;                          // scope 0 at ui/tail-cps.rs:14:14: 14:20
    }
}
