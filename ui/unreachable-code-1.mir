// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
fn id(_1: bool) -> bool {
    debug x => _1;                       // in scope 0 at ui/unreachable-code-1.rs:9:7: 9:8
    let mut _0: bool;                    // return place in scope 0 at ui/unreachable-code-1.rs:9:19: 9:23

    bb0: {
        _0 = _1;                         // scope 0 at ui/unreachable-code-1.rs:9:26: 9:27
        return;                          // scope 0 at ui/unreachable-code-1.rs:9:29: 9:29
    }
}

fn call_id() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/unreachable-code-1.rs:11:14: 11:14
    let _1: bool;                        // in scope 0 at ui/unreachable-code-1.rs:12:9: 12:10
    let mut _2: !;                       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/panic.rs:19:9: 19:50
    scope 1 {
        debug c => _1;                   // in scope 1 at ui/unreachable-code-1.rs:12:9: 12:10
    }

    bb0: {
        _2 = begin_panic::<&str>(const "explicit panic"); // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/panic.rs:19:9: 19:50
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/panic.rs:19:9: 19:32
                                         // + literal: Const { ty: fn(&str) -> ! {begin_panic::<&str>}, val: Value(<ZST>) }
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/panic.rs:19:33: 19:49
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
    }
}

fn call_id_3() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/unreachable-code-1.rs:16:16: 16:16

    bb0: {
        return;                          // scope 0 at ui/unreachable-code-1.rs:16:45: 16:45
    }
}

fn main() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/unreachable-code-1.rs:18:15: 18:15

    bb0: {
        return;                          // scope 0 at ui/unreachable-code-1.rs:19:2: 19:2
    }
}
