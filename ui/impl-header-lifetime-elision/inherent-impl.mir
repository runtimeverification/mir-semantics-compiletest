// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
fn <impl at ui/impl-header-lifetime-elision/inherent-impl.rs:5:1: 5:13>::x() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/impl-header-lifetime-elision/inherent-impl.rs:6:12: 6:12

    bb0: {
        return;                          // scope 0 at ui/impl-header-lifetime-elision/inherent-impl.rs:6:14: 6:14
    }
}

fn main() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/impl-header-lifetime-elision/inherent-impl.rs:9:11: 9:11

    bb0: {
        return;                          // scope 0 at ui/impl-header-lifetime-elision/inherent-impl.rs:9:13: 9:13
    }
}

fn Foo(_1: &u8) -> Foo<'_> {
    let mut _0: Foo<'_>;                 // return place in scope 0 at ui/impl-header-lifetime-elision/inherent-impl.rs:3:1: 3:15

    bb0: {
        _0 = Foo::<'_>(move _1);         // scope 0 at ui/impl-header-lifetime-elision/inherent-impl.rs:3:1: 3:15
        return;                          // scope 0 at ui/impl-header-lifetime-elision/inherent-impl.rs:3:1: 3:15
    }
}

// MIR FOR CTFE
fn Foo(_1: &u8) -> Foo<'_> {
    let mut _0: Foo<'_>;                 // return place in scope 0 at ui/impl-header-lifetime-elision/inherent-impl.rs:3:1: 3:15

    bb0: {
        _0 = Foo::<'_>(move _1);         // scope 0 at ui/impl-header-lifetime-elision/inherent-impl.rs:3:1: 3:15
        return;                          // scope 0 at ui/impl-header-lifetime-elision/inherent-impl.rs:3:1: 3:15
    }
}
