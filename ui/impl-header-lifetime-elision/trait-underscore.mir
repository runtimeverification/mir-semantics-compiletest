// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
fn impls_my_trait() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/impl-header-lifetime-elision/trait-underscore.rs:18:45: 18:45

    bb0: {
        return;                          // scope 0 at ui/impl-header-lifetime-elision/trait-underscore.rs:18:48: 18:48
    }
}

fn impls_my_trait_val(_1: T) -> () {
    let mut _0: ();                      // return place in scope 0 at ui/impl-header-lifetime-elision/trait-underscore.rs:20:53: 20:53
    let _2: ();                          // in scope 0 at ui/impl-header-lifetime-elision/trait-underscore.rs:21:5: 21:26

    bb0: {
        _2 = impls_my_trait::<T>() -> [return: bb1, unwind: bb3]; // scope 0 at ui/impl-header-lifetime-elision/trait-underscore.rs:21:5: 21:26
                                         // mir::Constant
                                         // + span: ui/impl-header-lifetime-elision/trait-underscore.rs:21:5: 21:24
                                         // + literal: Const { ty: fn() {impls_my_trait::<T>}, val: Value(<ZST>) }
    }

    bb1: {
        drop(_1) -> bb2;                 // scope 0 at ui/impl-header-lifetime-elision/trait-underscore.rs:22:1: 22:2
    }

    bb2: {
        return;                          // scope 0 at ui/impl-header-lifetime-elision/trait-underscore.rs:22:2: 22:2
    }

    bb3 (cleanup): {
        drop(_1) -> bb4;                 // scope 0 at ui/impl-header-lifetime-elision/trait-underscore.rs:22:1: 22:2
    }

    bb4 (cleanup): {
        resume;                          // scope 0 at ui/impl-header-lifetime-elision/trait-underscore.rs:20:1: 22:2
    }
}

fn random_where_clause() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/impl-header-lifetime-elision/trait-underscore.rs:25:1: 25:1

    bb0: {
        return;                          // scope 0 at ui/impl-header-lifetime-elision/trait-underscore.rs:25:43: 25:43
    }
}

fn main() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/impl-header-lifetime-elision/trait-underscore.rs:27:11: 27:11
    let _1: i32;                         // in scope 0 at ui/impl-header-lifetime-elision/trait-underscore.rs:28:9: 28:10
    let _3: ();                          // in scope 0 at ui/impl-header-lifetime-elision/trait-underscore.rs:30:5: 30:26
    let mut _4: &i32;                    // in scope 0 at ui/impl-header-lifetime-elision/trait-underscore.rs:30:24: 30:25
    let _5: ();                          // in scope 0 at ui/impl-header-lifetime-elision/trait-underscore.rs:32:5: 32:37
    let _6: ();                          // in scope 0 at ui/impl-header-lifetime-elision/trait-underscore.rs:34:5: 34:26
    scope 1 {
        debug x => _1;                   // in scope 1 at ui/impl-header-lifetime-elision/trait-underscore.rs:28:9: 28:10
        let _2: &i32;                    // in scope 1 at ui/impl-header-lifetime-elision/trait-underscore.rs:29:9: 29:10
        scope 2 {
            debug f => _2;               // in scope 2 at ui/impl-header-lifetime-elision/trait-underscore.rs:29:9: 29:10
        }
    }

    bb0: {
        _1 = const 22_i32;               // scope 0 at ui/impl-header-lifetime-elision/trait-underscore.rs:28:13: 28:15
        _2 = &_1;                        // scope 1 at ui/impl-header-lifetime-elision/trait-underscore.rs:29:13: 29:15
        _4 = _2;                         // scope 2 at ui/impl-header-lifetime-elision/trait-underscore.rs:30:24: 30:25
        _3 = impls_my_trait_val::<&i32>(move _4) -> bb1; // scope 2 at ui/impl-header-lifetime-elision/trait-underscore.rs:30:5: 30:26
                                         // mir::Constant
                                         // + span: ui/impl-header-lifetime-elision/trait-underscore.rs:30:5: 30:23
                                         // + literal: Const { ty: fn(&i32) {impls_my_trait_val::<&i32>}, val: Value(<ZST>) }
    }

    bb1: {
        _5 = impls_my_trait::<&i32>() -> bb2; // scope 2 at ui/impl-header-lifetime-elision/trait-underscore.rs:32:5: 32:37
                                         // mir::Constant
                                         // + span: ui/impl-header-lifetime-elision/trait-underscore.rs:32:5: 32:35
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: fn() {impls_my_trait::<&i32>}, val: Value(<ZST>) }
    }

    bb2: {
        _6 = random_where_clause() -> bb3; // scope 2 at ui/impl-header-lifetime-elision/trait-underscore.rs:34:5: 34:26
                                         // mir::Constant
                                         // + span: ui/impl-header-lifetime-elision/trait-underscore.rs:34:5: 34:24
                                         // + literal: Const { ty: fn() {random_where_clause}, val: Value(<ZST>) }
    }

    bb3: {
        return;                          // scope 0 at ui/impl-header-lifetime-elision/trait-underscore.rs:35:2: 35:2
    }
}
