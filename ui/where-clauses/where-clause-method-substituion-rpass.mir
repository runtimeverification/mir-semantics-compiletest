// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
fn Foo::dummy(_1: &Self, _2: T) -> () {
    debug self => _1;
    debug arg => _2;
    let mut _0: ();

    bb0: {
        drop(_2) -> [return: bb1, unwind continue];
    }

    bb1: {
        return;
    }
}

fn <impl at ui/where-clauses/where-clause-method-substituion-rpass.rs:16:1: 16:20>::method(_1: &i32) -> () {
    debug self => _1;
    let mut _0: ();

    bb0: {
        return;
    }
}

fn main() -> () {
    let mut _0: ();
    let _1: ();
    let mut _2: &i32;

    bb0: {
        _2 = const _;
        _1 = <i32 as Bar<X>>::method::<S>(_2) -> [return: bb1, unwind continue];
    }

    bb1: {
        return;
    }
}

promoted[0] in main: &i32 = {
    let mut _0: &i32;
    let mut _1: i32;

    bb0: {
        _1 = const 1_i32;
        _0 = &_1;
        return;
    }
}
