// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
fn TheTrait::dummy(_1: &Self) -> () {
    debug self => _1;                    // in scope 0 at ui/where-clauses/where-clause-early-bound-lifetimes.rs:6:27: 6:32
    let mut _0: ();                      // return place in scope 0 at ui/where-clauses/where-clause-early-bound-lifetimes.rs:6:34: 6:34

    bb0: {
        return;                          // scope 0 at ui/where-clauses/where-clause-early-bound-lifetimes.rs:6:37: 6:37
    }
}

fn foo(_1: &T) -> () {
    let mut _0: ();                      // return place in scope 0 at ui/where-clauses/where-clause-early-bound-lifetimes.rs:10:24: 10:24

    bb0: {
        return;                          // scope 0 at ui/where-clauses/where-clause-early-bound-lifetimes.rs:10:50: 10:50
    }
}

fn bar(_1: &T) -> () {
    let mut _0: ();                      // return place in scope 0 at ui/where-clauses/where-clause-early-bound-lifetimes.rs:12:26: 12:26

    bb0: {
        return;                          // scope 0 at ui/where-clauses/where-clause-early-bound-lifetimes.rs:12:57: 12:57
    }
}

fn main() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/where-clauses/where-clause-early-bound-lifetimes.rs:14:11: 14:11
    let _1: ();                          // in scope 0 at ui/where-clauses/where-clause-early-bound-lifetimes.rs:16:5: 16:12
    let mut _2: &isize;                  // in scope 0 at ui/where-clauses/where-clause-early-bound-lifetimes.rs:16:9: 16:11
    let _3: &isize;                      // in scope 0 at ui/where-clauses/where-clause-early-bound-lifetimes.rs:16:9: 16:11
    let _4: &isize;                      // in scope 0 at ui/where-clauses/where-clause-early-bound-lifetimes.rs:16:10: 16:11
    let _5: ();                          // in scope 0 at ui/where-clauses/where-clause-early-bound-lifetimes.rs:17:5: 17:12
    let mut _6: &isize;                  // in scope 0 at ui/where-clauses/where-clause-early-bound-lifetimes.rs:17:9: 17:11
    let _7: &isize;                      // in scope 0 at ui/where-clauses/where-clause-early-bound-lifetimes.rs:17:9: 17:11
    let _8: &isize;                      // in scope 0 at ui/where-clauses/where-clause-early-bound-lifetimes.rs:17:10: 17:11

    bb0: {
        _4 = const {alloc1: &isize};     // scope 0 at ui/where-clauses/where-clause-early-bound-lifetimes.rs:16:10: 16:11
                                         // mir::Constant
                                         // + span: ui/where-clauses/where-clause-early-bound-lifetimes.rs:16:10: 16:11
                                         // + literal: Const { ty: &isize, val: Value(Scalar(alloc1)) }
        _3 = _4;                         // scope 0 at ui/where-clauses/where-clause-early-bound-lifetimes.rs:16:9: 16:11
        _2 = _3;                         // scope 0 at ui/where-clauses/where-clause-early-bound-lifetimes.rs:16:9: 16:11
        _1 = foo::<'_, isize>(move _2) -> bb1; // scope 0 at ui/where-clauses/where-clause-early-bound-lifetimes.rs:16:5: 16:12
                                         // mir::Constant
                                         // + span: ui/where-clauses/where-clause-early-bound-lifetimes.rs:16:5: 16:8
                                         // + literal: Const { ty: fn(&isize) {foo::<'_, isize>}, val: Value(<ZST>) }
    }

    bb1: {
        _8 = const {alloc1: &isize};     // scope 0 at ui/where-clauses/where-clause-early-bound-lifetimes.rs:17:10: 17:11
                                         // mir::Constant
                                         // + span: ui/where-clauses/where-clause-early-bound-lifetimes.rs:17:10: 17:11
                                         // + literal: Const { ty: &isize, val: Value(Scalar(alloc1)) }
        _7 = _8;                         // scope 0 at ui/where-clauses/where-clause-early-bound-lifetimes.rs:17:9: 17:11
        _6 = _7;                         // scope 0 at ui/where-clauses/where-clause-early-bound-lifetimes.rs:17:9: 17:11
        _5 = bar::<isize>(move _6) -> bb2; // scope 0 at ui/where-clauses/where-clause-early-bound-lifetimes.rs:17:5: 17:12
                                         // mir::Constant
                                         // + span: ui/where-clauses/where-clause-early-bound-lifetimes.rs:17:5: 17:8
                                         // + literal: Const { ty: fn(&'static isize) {bar::<isize>}, val: Value(<ZST>) }
    }

    bb2: {
        return;                          // scope 0 at ui/where-clauses/where-clause-early-bound-lifetimes.rs:18:2: 18:2
    }
}

alloc1 (static: x, size: 8, align: 8) {
    01 00 00 00 00 00 00 00                         â”‚ ........
}

static x: isize = {
    let mut _0: isize;                   // return place in scope 0 at ui/where-clauses/where-clause-early-bound-lifetimes.rs:15:15: 15:20

    bb0: {
        _0 = const 1_isize;              // scope 0 at ui/where-clauses/where-clause-early-bound-lifetimes.rs:15:23: 15:24
        return;                          // scope 0 at ui/where-clauses/where-clause-early-bound-lifetimes.rs:15:5: 15:25
    }
}
