// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
fn const_address_of_in_const() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/consts/min_const_fn/address_of_const.rs:5:38: 5:38
    let mut _1: i32;                     // in scope 0 at ui/consts/min_const_fn/address_of_const.rs:6:9: 6:14
    scope 1 {
        debug a => _1;                   // in scope 1 at ui/consts/min_const_fn/address_of_const.rs:6:9: 6:14
        let _2: *const i32;              // in scope 1 at ui/consts/min_const_fn/address_of_const.rs:7:9: 7:10
        scope 2 {
            debug b => _2;               // in scope 2 at ui/consts/min_const_fn/address_of_const.rs:7:9: 7:10
        }
    }

    bb0: {
        _1 = const 0_i32;                // scope 0 at ui/consts/min_const_fn/address_of_const.rs:6:17: 6:18
        _2 = &raw const _1;              // scope 1 at ui/consts/min_const_fn/address_of_const.rs:7:13: 7:25
        return;                          // scope 0 at ui/consts/min_const_fn/address_of_const.rs:8:2: 8:2
    }
}

// MIR FOR CTFE
fn const_address_of_in_const() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/consts/min_const_fn/address_of_const.rs:5:38: 5:38
    let mut _1: i32;                     // in scope 0 at ui/consts/min_const_fn/address_of_const.rs:6:9: 6:14
    scope 1 {
        debug a => _1;                   // in scope 1 at ui/consts/min_const_fn/address_of_const.rs:6:9: 6:14
        let _2: *const i32;              // in scope 1 at ui/consts/min_const_fn/address_of_const.rs:7:9: 7:10
        scope 2 {
            debug b => _2;               // in scope 2 at ui/consts/min_const_fn/address_of_const.rs:7:9: 7:10
        }
    }

    bb0: {
        StorageLive(_1);                 // scope 0 at ui/consts/min_const_fn/address_of_const.rs:6:9: 6:14
        _1 = const 0_i32;                // scope 0 at ui/consts/min_const_fn/address_of_const.rs:6:17: 6:18
        StorageLive(_2);                 // scope 1 at ui/consts/min_const_fn/address_of_const.rs:7:9: 7:10
        _2 = &raw const _1;              // scope 1 at ui/consts/min_const_fn/address_of_const.rs:7:13: 7:25
        _0 = const ();                   // scope 0 at ui/consts/min_const_fn/address_of_const.rs:5:38: 8:2
        StorageDead(_2);                 // scope 1 at ui/consts/min_const_fn/address_of_const.rs:8:1: 8:2
        StorageDead(_1);                 // scope 0 at ui/consts/min_const_fn/address_of_const.rs:8:1: 8:2
        return;                          // scope 0 at ui/consts/min_const_fn/address_of_const.rs:8:2: 8:2
    }
}

fn <impl at ui/consts/min_const_fn/address_of_const.rs:12:1: 12:7>::inherent_const_address_of_in_const() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/consts/min_const_fn/address_of_const.rs:13:51: 13:51
    let mut _1: i32;                     // in scope 0 at ui/consts/min_const_fn/address_of_const.rs:14:13: 14:18
    scope 1 {
        debug a => _1;                   // in scope 1 at ui/consts/min_const_fn/address_of_const.rs:14:13: 14:18
        let _2: *const i32;              // in scope 1 at ui/consts/min_const_fn/address_of_const.rs:15:13: 15:14
        scope 2 {
            debug b => _2;               // in scope 2 at ui/consts/min_const_fn/address_of_const.rs:15:13: 15:14
        }
    }

    bb0: {
        _1 = const 0_i32;                // scope 0 at ui/consts/min_const_fn/address_of_const.rs:14:21: 14:22
        _2 = &raw const _1;              // scope 1 at ui/consts/min_const_fn/address_of_const.rs:15:17: 15:29
        return;                          // scope 0 at ui/consts/min_const_fn/address_of_const.rs:16:6: 16:6
    }
}

// MIR FOR CTFE
fn <impl at ui/consts/min_const_fn/address_of_const.rs:12:1: 12:7>::inherent_const_address_of_in_const() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/consts/min_const_fn/address_of_const.rs:13:51: 13:51
    let mut _1: i32;                     // in scope 0 at ui/consts/min_const_fn/address_of_const.rs:14:13: 14:18
    scope 1 {
        debug a => _1;                   // in scope 1 at ui/consts/min_const_fn/address_of_const.rs:14:13: 14:18
        let _2: *const i32;              // in scope 1 at ui/consts/min_const_fn/address_of_const.rs:15:13: 15:14
        scope 2 {
            debug b => _2;               // in scope 2 at ui/consts/min_const_fn/address_of_const.rs:15:13: 15:14
        }
    }

    bb0: {
        StorageLive(_1);                 // scope 0 at ui/consts/min_const_fn/address_of_const.rs:14:13: 14:18
        _1 = const 0_i32;                // scope 0 at ui/consts/min_const_fn/address_of_const.rs:14:21: 14:22
        StorageLive(_2);                 // scope 1 at ui/consts/min_const_fn/address_of_const.rs:15:13: 15:14
        _2 = &raw const _1;              // scope 1 at ui/consts/min_const_fn/address_of_const.rs:15:17: 15:29
        _0 = const ();                   // scope 0 at ui/consts/min_const_fn/address_of_const.rs:13:51: 16:6
        StorageDead(_2);                 // scope 1 at ui/consts/min_const_fn/address_of_const.rs:16:5: 16:6
        StorageDead(_1);                 // scope 0 at ui/consts/min_const_fn/address_of_const.rs:16:5: 16:6
        return;                          // scope 0 at ui/consts/min_const_fn/address_of_const.rs:16:6: 16:6
    }
}

fn main() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/consts/min_const_fn/address_of_const.rs:19:11: 19:11

    bb0: {
        return;                          // scope 0 at ui/consts/min_const_fn/address_of_const.rs:19:13: 19:13
    }
}
