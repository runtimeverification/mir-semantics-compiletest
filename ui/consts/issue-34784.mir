// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
const C: *const u8 = {
    let mut _0: *const u8;
    let _1: &u8;
    let _2: u8;
    let mut _3: &u8;

    bb0: {
        StorageLive(_1);
        _3 = const _;
        _1 = &(*_3);
        _0 = &raw const (*_1);
        StorageDead(_1);
        return;
    }
}

promoted[0] in C: &u8 = {
    let mut _0: &u8;
    let mut _1: u8;

    bb0: {
        _1 = const 0_u8;
        _0 = &_1;
        return;
    }
}

fn foo(_1: *const u8) -> () {
    debug x => _1;
    let mut _0: ();

    bb0: {
        return;
    }
}

const D: *const [u8; 4] = {
    let mut _0: *const [u8; 4];
    let _1: &[u8; 4];

    bb0: {
        StorageLive(_1);
        _1 = const b"abcd";
        _0 = &raw const (*_1);
        StorageDead(_1);
        return;
    }
}

alloc4 (size: 4, align: 1) {
    61 62 63 64                                     â”‚ abcd
}

D::{constant#0}: usize = {
    let mut _0: usize;

    bb0: {
        _0 = const 4_usize;
        return;
    }
}

fn main() -> () {
    let mut _0: ();

    bb0: {
        return;
    }
}
