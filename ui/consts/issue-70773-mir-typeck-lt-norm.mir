// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
const HASH_LEN: usize = {
    let mut _0: usize;                   // return place in scope 0 at ui/consts/issue-70773-mir-typeck-lt-norm.rs:3:17: 3:22

    bb0: {
        _0 = const 20_usize;             // scope 0 at ui/consts/issue-70773-mir-typeck-lt-norm.rs:3:25: 3:27
        return;                          // scope 0 at ui/consts/issue-70773-mir-typeck-lt-norm.rs:3:1: 3:28
    }
}

Hash::0::{constant#0}: usize = {
    let mut _0: usize;                   // return place in scope 0 at ui/consts/issue-70773-mir-typeck-lt-norm.rs:4:55: 4:63

    bb0: {
        _0 = const _;                    // scope 0 at ui/consts/issue-70773-mir-typeck-lt-norm.rs:4:55: 4:63
        return;                          // scope 0 at ui/consts/issue-70773-mir-typeck-lt-norm.rs:4:55: 4:63
    }
}

fn init_hash(_1: &mut [u8; 20]) -> () {
    let mut _0: ();                      // return place in scope 0 at ui/consts/issue-70773-mir-typeck-lt-norm.rs:5:38: 5:38

    bb0: {
        return;                          // scope 0 at ui/consts/issue-70773-mir-typeck-lt-norm.rs:5:40: 5:40
    }
}

init_hash::{constant#0}: usize = {
    let mut _0: usize;                   // return place in scope 0 at ui/consts/issue-70773-mir-typeck-lt-norm.rs:5:27: 5:35

    bb0: {
        _0 = const _;                    // scope 0 at ui/consts/issue-70773-mir-typeck-lt-norm.rs:5:27: 5:35
        return;                          // scope 0 at ui/consts/issue-70773-mir-typeck-lt-norm.rs:5:27: 5:35
    }
}

fn foo() -> &() {
    let mut _0: &();                     // return place in scope 0 at ui/consts/issue-70773-mir-typeck-lt-norm.rs:11:5: 11:8
    let _1: ();                          // in scope 0 at ui/consts/issue-70773-mir-typeck-lt-norm.rs:9:5: 9:34
    let mut _2: &mut [u8; 20];           // in scope 0 at ui/consts/issue-70773-mir-typeck-lt-norm.rs:9:15: 9:33
    let mut _3: &mut [u8; 20];           // in scope 0 at ui/consts/issue-70773-mir-typeck-lt-norm.rs:9:15: 9:33
    let mut _4: [u8; 20];                // in scope 0 at ui/consts/issue-70773-mir-typeck-lt-norm.rs:9:20: 9:33
    let _5: [i32; 20];                   // in scope 0 at ui/consts/issue-70773-mir-typeck-lt-norm.rs:10:10: 10:16
    let mut _6: ([i32; 20],);            // in scope 0 at ui/consts/issue-70773-mir-typeck-lt-norm.rs:10:21: 10:37
    let mut _7: [i32; 20];               // in scope 0 at ui/consts/issue-70773-mir-typeck-lt-norm.rs:10:22: 10:35
    scope 1 {
        debug _array => _5;              // in scope 1 at ui/consts/issue-70773-mir-typeck-lt-norm.rs:10:10: 10:16
        let mut _8: &();                 // in scope 1 at ui/consts/issue-70773-mir-typeck-lt-norm.rs:11:5: 11:8
    }

    bb0: {
        _4 = [const 0_u8; 20];           // scope 0 at ui/consts/issue-70773-mir-typeck-lt-norm.rs:9:20: 9:33
        _3 = &mut _4;                    // scope 0 at ui/consts/issue-70773-mir-typeck-lt-norm.rs:9:15: 9:33
        _2 = &mut (*_3);                 // scope 0 at ui/consts/issue-70773-mir-typeck-lt-norm.rs:9:15: 9:33
        _1 = init_hash(move _2) -> bb1;  // scope 0 at ui/consts/issue-70773-mir-typeck-lt-norm.rs:9:5: 9:34
                                         // mir::Constant
                                         // + span: ui/consts/issue-70773-mir-typeck-lt-norm.rs:9:5: 9:14
                                         // + literal: Const { ty: for<'a> fn(&'a mut [u8; HASH_LEN]) {init_hash}, val: Value(<ZST>) }
    }

    bb1: {
        _7 = [const 0_i32; 20];          // scope 0 at ui/consts/issue-70773-mir-typeck-lt-norm.rs:10:22: 10:35
        _6 = (move _7,);                 // scope 0 at ui/consts/issue-70773-mir-typeck-lt-norm.rs:10:21: 10:37
        _5 = (_6.0: [i32; 20]);          // scope 0 at ui/consts/issue-70773-mir-typeck-lt-norm.rs:10:10: 10:16
        _8 = const _;                    // scope 1 at ui/consts/issue-70773-mir-typeck-lt-norm.rs:11:5: 11:8
                                         // mir::Constant
                                         // + span: ui/consts/issue-70773-mir-typeck-lt-norm.rs:11:5: 11:8
                                         // + literal: Const { ty: &(), val: Unevaluated(foo, [ReErased], Some(promoted[0])) }
        _0 = _8;                         // scope 1 at ui/consts/issue-70773-mir-typeck-lt-norm.rs:11:5: 11:8
        return;                          // scope 0 at ui/consts/issue-70773-mir-typeck-lt-norm.rs:12:2: 12:2
    }
}

promoted[0] in foo: &() = {
    let mut _0: &();                     // return place in scope 0 at ui/consts/issue-70773-mir-typeck-lt-norm.rs:11:5: 11:8
    let mut _1: ();                      // in scope 0 at ui/consts/issue-70773-mir-typeck-lt-norm.rs:11:6: 11:8

    bb0: {
        _1 = ();                         // scope 0 at ui/consts/issue-70773-mir-typeck-lt-norm.rs:11:6: 11:8
        _0 = &_1;                        // scope 0 at ui/consts/issue-70773-mir-typeck-lt-norm.rs:11:5: 11:8
        return;                          // scope 0 at ui/consts/issue-70773-mir-typeck-lt-norm.rs:11:5: 11:8
    }
}

foo::{constant#0}: usize = {
    let mut _0: usize;                   // return place in scope 0 at ui/consts/issue-70773-mir-typeck-lt-norm.rs:8:14: 8:22

    bb0: {
        _0 = const _;                    // scope 0 at ui/consts/issue-70773-mir-typeck-lt-norm.rs:8:14: 8:22
        return;                          // scope 0 at ui/consts/issue-70773-mir-typeck-lt-norm.rs:8:14: 8:22
    }
}

foo::{constant#1}: usize = {
    let mut _0: usize;                   // return place in scope 0 at ui/consts/issue-70773-mir-typeck-lt-norm.rs:9:24: 9:32

    bb0: {
        _0 = const _;                    // scope 0 at ui/consts/issue-70773-mir-typeck-lt-norm.rs:9:24: 9:32
        return;                          // scope 0 at ui/consts/issue-70773-mir-typeck-lt-norm.rs:9:24: 9:32
    }
}

foo::{constant#2}: usize = {
    let mut _0: usize;                   // return place in scope 0 at ui/consts/issue-70773-mir-typeck-lt-norm.rs:10:26: 10:34

    bb0: {
        _0 = const _;                    // scope 0 at ui/consts/issue-70773-mir-typeck-lt-norm.rs:10:26: 10:34
        return;                          // scope 0 at ui/consts/issue-70773-mir-typeck-lt-norm.rs:10:26: 10:34
    }
}

fn main() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/consts/issue-70773-mir-typeck-lt-norm.rs:14:11: 14:11
    let _1: &();                         // in scope 0 at ui/consts/issue-70773-mir-typeck-lt-norm.rs:15:5: 15:10

    bb0: {
        _1 = foo::<'_>() -> bb1;         // scope 0 at ui/consts/issue-70773-mir-typeck-lt-norm.rs:15:5: 15:10
                                         // mir::Constant
                                         // + span: ui/consts/issue-70773-mir-typeck-lt-norm.rs:15:5: 15:8
                                         // + literal: Const { ty: fn() -> &() {foo::<'_>}, val: Value(<ZST>) }
    }

    bb1: {
        return;                          // scope 0 at ui/consts/issue-70773-mir-typeck-lt-norm.rs:16:2: 16:2
    }
}

fn Hash(_1: [u8; 20]) -> Hash {
    let mut _0: Hash;                    // return place in scope 0 at ui/consts/issue-70773-mir-typeck-lt-norm.rs:4:1: 4:12

    bb0: {
        _0 = Hash(move _1);              // scope 0 at ui/consts/issue-70773-mir-typeck-lt-norm.rs:4:1: 4:12
        return;                          // scope 0 at ui/consts/issue-70773-mir-typeck-lt-norm.rs:4:1: 4:12
    }
}

// MIR FOR CTFE
fn Hash(_1: [u8; 20]) -> Hash {
    let mut _0: Hash;                    // return place in scope 0 at ui/consts/issue-70773-mir-typeck-lt-norm.rs:4:1: 4:12

    bb0: {
        _0 = Hash(move _1);              // scope 0 at ui/consts/issue-70773-mir-typeck-lt-norm.rs:4:1: 4:12
        return;                          // scope 0 at ui/consts/issue-70773-mir-typeck-lt-norm.rs:4:1: 4:12
    }
}
