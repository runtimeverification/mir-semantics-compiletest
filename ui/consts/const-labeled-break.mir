// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
const _: () = {
    let mut _0: ();                      // return place in scope 0 at ui/consts/const-labeled-break.rs:9:10: 9:12
    let mut _1: ();                      // in scope 0 at ui/consts/const-labeled-break.rs:9:1: 9:37
    let mut _2: bool;                    // in scope 0 at ui/consts/const-labeled-break.rs:9:25: 9:33
    let mut _3: !;                       // in scope 0 at ui/consts/const-labeled-break.rs:9:25: 9:33
    let mut _4: !;                       // in scope 0 at ui/consts/const-labeled-break.rs:9:15: 9:36
    let _5: ();                          // in scope 0 at ui/consts/const-labeled-break.rs:9:15: 9:36
    let mut _6: !;                       // in scope 0 at ui/consts/const-labeled-break.rs:9:15: 9:36

    bb0: {
        StorageLive(_2);                 // scope 0 at ui/consts/const-labeled-break.rs:9:25: 9:33
        StorageLive(_3);                 // scope 0 at ui/consts/const-labeled-break.rs:9:25: 9:33
        _0 = const ();                   // scope 0 at ui/consts/const-labeled-break.rs:9:25: 9:33
        StorageDead(_3);                 // scope 0 at ui/consts/const-labeled-break.rs:9:32: 9:33
        StorageDead(_2);                 // scope 0 at ui/consts/const-labeled-break.rs:9:35: 9:36
        return;                          // scope 0 at ui/consts/const-labeled-break.rs:9:1: 9:37
    }
}

fn main() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/consts/const-labeled-break.rs:11:11: 11:11

    bb0: {
        return;                          // scope 0 at ui/consts/const-labeled-break.rs:11:13: 11:13
    }
}
