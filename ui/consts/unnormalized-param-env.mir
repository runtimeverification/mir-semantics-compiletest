// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
Obstacle::trajectory_free::{constant#0}: usize = {
    let mut _0: usize;                   // return place in scope 0 at ui/consts/unnormalized-param-env.rs:13:20: 13:21

    bb0: {
        _0 = const N;                    // scope 0 at ui/consts/unnormalized-param-env.rs:13:20: 13:21
        return;                          // scope 0 at ui/consts/unnormalized-param-env.rs:13:20: 13:21
    }
}

const N: usize = {
    let mut _0: usize;                   // return place in scope 0 at ui/consts/unnormalized-param-env.rs:18:10: 18:15

    bb0: {
        _0 = const 4_usize;              // scope 0 at ui/consts/unnormalized-param-env.rs:18:18: 18:19
        return;                          // scope 0 at ui/consts/unnormalized-param-env.rs:18:1: 18:20
    }
}

<impl at ui/consts/unnormalized-param-env.rs:22:1: 22:48>::{constant#0}: usize = {
    let mut _0: usize;                   // return place in scope 0 at ui/consts/unnormalized-param-env.rs:22:23: 22:24

    bb0: {
        _0 = const _;                    // scope 0 at ui/consts/unnormalized-param-env.rs:22:23: 22:24
        return;                          // scope 0 at ui/consts/unnormalized-param-env.rs:22:23: 22:24
    }
}

fn <impl at ui/consts/unnormalized-param-env.rs:22:1: 22:48>::trajectory_free(_1: &ObstacleSpace2df32, _2: &TF) -> () {
    debug self => _1;                    // in scope 0 at ui/consts/unnormalized-param-env.rs:23:32: 23:37
    debug t => _2;                       // in scope 0 at ui/consts/unnormalized-param-env.rs:23:39: 23:40
    let mut _0: ();                      // return place in scope 0 at ui/consts/unnormalized-param-env.rs:24:5: 24:5

    bb0: {
        return;                          // scope 0 at ui/consts/unnormalized-param-env.rs:28:6: 28:6
    }
}

<impl at ui/consts/unnormalized-param-env.rs:22:1: 22:48>::trajectory_free::{constant#0}: usize = {
    let mut _0: usize;                   // return place in scope 0 at ui/consts/unnormalized-param-env.rs:26:20: 26:21

    bb0: {
        _0 = const _;                    // scope 0 at ui/consts/unnormalized-param-env.rs:26:20: 26:21
        return;                          // scope 0 at ui/consts/unnormalized-param-env.rs:26:20: 26:21
    }
}

fn main() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/consts/unnormalized-param-env.rs:31:11: 31:11

    bb0: {
        return;                          // scope 0 at ui/consts/unnormalized-param-env.rs:31:13: 31:13
    }
}
