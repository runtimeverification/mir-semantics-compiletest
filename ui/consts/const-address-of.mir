// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
const A: *const i32 = {
    let mut _0: *const i32;              // return place in scope 0 at ui/consts/const-address-of.rs:5:10: 5:20
    let _1: &i32;                        // in scope 0 at ui/consts/const-address-of.rs:5:35: 5:37
    let _2: i32;                         // in scope 0 at ui/consts/const-address-of.rs:5:36: 5:37
    let mut _3: &i32;                    // in scope 0 at ui/consts/const-address-of.rs:5:35: 5:37

    bb0: {
        StorageLive(_1);                 // scope 0 at ui/consts/const-address-of.rs:5:35: 5:37
        _3 = const _;                    // scope 0 at ui/consts/const-address-of.rs:5:35: 5:37
                                         // mir::Constant
                                         // + span: ui/consts/const-address-of.rs:5:35: 5:37
                                         // + literal: Const { ty: &i32, val: Unevaluated(A, [], Some(promoted[0])) }
        _1 = &(*_3);                     // scope 0 at ui/consts/const-address-of.rs:5:35: 5:37
        _0 = &raw const (*_1);           // scope 0 at ui/consts/const-address-of.rs:5:23: 5:37
        return;                          // scope 0 at ui/consts/const-address-of.rs:5:1: 5:38
    }
}

promoted[0] in A: &i32 = {
    let mut _0: &i32;                    // return place in scope 0 at ui/consts/const-address-of.rs:5:35: 5:37
    let mut _1: i32;                     // in scope 0 at ui/consts/const-address-of.rs:5:36: 5:37

    bb0: {
        _1 = const 2_i32;                // scope 0 at ui/consts/const-address-of.rs:5:36: 5:37
        _0 = &_1;                        // scope 0 at ui/consts/const-address-of.rs:5:35: 5:37
        return;                          // scope 0 at ui/consts/const-address-of.rs:5:35: 5:37
    }
}

static B: () = {
    let mut _0: ();                      // return place in scope 0 at ui/consts/const-address-of.rs:6:11: 6:13
    let _1: *const i32;                  // in scope 0 at ui/consts/const-address-of.rs:6:18: 6:32
    let _2: &i32;                        // in scope 0 at ui/consts/const-address-of.rs:6:30: 6:32
    let _3: i32;                         // in scope 0 at ui/consts/const-address-of.rs:6:31: 6:32
    let mut _4: &i32;                    // in scope 0 at ui/consts/const-address-of.rs:6:30: 6:32

    bb0: {
        StorageLive(_1);                 // scope 0 at ui/consts/const-address-of.rs:6:18: 6:32
        StorageLive(_2);                 // scope 0 at ui/consts/const-address-of.rs:6:30: 6:32
        _4 = const _;                    // scope 0 at ui/consts/const-address-of.rs:6:30: 6:32
                                         // mir::Constant
                                         // + span: ui/consts/const-address-of.rs:6:30: 6:32
                                         // + literal: Const { ty: &i32, val: Unevaluated(B, [], Some(promoted[0])) }
        _2 = &(*_4);                     // scope 0 at ui/consts/const-address-of.rs:6:30: 6:32
        _1 = &raw const (*_2);           // scope 0 at ui/consts/const-address-of.rs:6:18: 6:32
        StorageDead(_2);                 // scope 0 at ui/consts/const-address-of.rs:6:32: 6:33
        StorageDead(_1);                 // scope 0 at ui/consts/const-address-of.rs:6:32: 6:33
        _0 = const ();                   // scope 0 at ui/consts/const-address-of.rs:6:16: 6:35
        return;                          // scope 0 at ui/consts/const-address-of.rs:6:1: 6:36
    }
}

promoted[0] in B: &i32 = {
    let mut _0: &i32;                    // return place in scope 0 at ui/consts/const-address-of.rs:6:30: 6:32
    let mut _1: i32;                     // in scope 0 at ui/consts/const-address-of.rs:6:31: 6:32

    bb0: {
        _1 = const 2_i32;                // scope 0 at ui/consts/const-address-of.rs:6:31: 6:32
        _0 = &_1;                        // scope 0 at ui/consts/const-address-of.rs:6:30: 6:32
        return;                          // scope 0 at ui/consts/const-address-of.rs:6:30: 6:32
    }
}

static mut C: *const i32 = {
    let mut _0: *const i32;              // return place in scope 0 at ui/consts/const-address-of.rs:7:15: 7:25
    let _1: &i32;                        // in scope 0 at ui/consts/const-address-of.rs:7:40: 7:42
    let _2: i32;                         // in scope 0 at ui/consts/const-address-of.rs:7:41: 7:42
    let mut _3: &i32;                    // in scope 0 at ui/consts/const-address-of.rs:7:40: 7:42

    bb0: {
        StorageLive(_1);                 // scope 0 at ui/consts/const-address-of.rs:7:40: 7:42
        _3 = const _;                    // scope 0 at ui/consts/const-address-of.rs:7:40: 7:42
                                         // mir::Constant
                                         // + span: ui/consts/const-address-of.rs:7:40: 7:42
                                         // + literal: Const { ty: &i32, val: Unevaluated(C, [], Some(promoted[0])) }
        _1 = &(*_3);                     // scope 0 at ui/consts/const-address-of.rs:7:40: 7:42
        _0 = &raw const (*_1);           // scope 0 at ui/consts/const-address-of.rs:7:28: 7:42
        return;                          // scope 0 at ui/consts/const-address-of.rs:7:1: 7:43
    }
}

promoted[0] in C: &i32 = {
    let mut _0: &i32;                    // return place in scope 0 at ui/consts/const-address-of.rs:7:40: 7:42
    let mut _1: i32;                     // in scope 0 at ui/consts/const-address-of.rs:7:41: 7:42

    bb0: {
        _1 = const 2_i32;                // scope 0 at ui/consts/const-address-of.rs:7:41: 7:42
        _0 = &_1;                        // scope 0 at ui/consts/const-address-of.rs:7:40: 7:42
        return;                          // scope 0 at ui/consts/const-address-of.rs:7:40: 7:42
    }
}

const D: () = {
    let mut _0: ();                      // return place in scope 0 at ui/consts/const-address-of.rs:8:10: 8:12
    let _1: i32;                         // in scope 0 at ui/consts/const-address-of.rs:8:21: 8:22
    let _2: *const i32;                  // in scope 0 at ui/consts/const-address-of.rs:8:28: 8:40
    scope 1 {
        debug x => _1;                   // in scope 1 at ui/consts/const-address-of.rs:8:21: 8:22
    }

    bb0: {
        StorageLive(_1);                 // scope 0 at ui/consts/const-address-of.rs:8:21: 8:22
        _1 = const 2_i32;                // scope 0 at ui/consts/const-address-of.rs:8:25: 8:26
        StorageLive(_2);                 // scope 1 at ui/consts/const-address-of.rs:8:28: 8:40
        _2 = &raw const _1;              // scope 1 at ui/consts/const-address-of.rs:8:28: 8:40
        StorageDead(_2);                 // scope 1 at ui/consts/const-address-of.rs:8:40: 8:41
        _0 = const ();                   // scope 0 at ui/consts/const-address-of.rs:8:15: 8:43
        StorageDead(_1);                 // scope 0 at ui/consts/const-address-of.rs:8:42: 8:43
        return;                          // scope 0 at ui/consts/const-address-of.rs:8:1: 8:44
    }
}

static E: () = {
    let mut _0: ();                      // return place in scope 0 at ui/consts/const-address-of.rs:9:11: 9:13
    let _1: i32;                         // in scope 0 at ui/consts/const-address-of.rs:9:22: 9:23
    let _2: *const i32;                  // in scope 0 at ui/consts/const-address-of.rs:9:29: 9:41
    scope 1 {
        debug x => _1;                   // in scope 1 at ui/consts/const-address-of.rs:9:22: 9:23
    }

    bb0: {
        StorageLive(_1);                 // scope 0 at ui/consts/const-address-of.rs:9:22: 9:23
        _1 = const 2_i32;                // scope 0 at ui/consts/const-address-of.rs:9:26: 9:27
        StorageLive(_2);                 // scope 1 at ui/consts/const-address-of.rs:9:29: 9:41
        _2 = &raw const _1;              // scope 1 at ui/consts/const-address-of.rs:9:29: 9:41
        StorageDead(_2);                 // scope 1 at ui/consts/const-address-of.rs:9:41: 9:42
        _0 = const ();                   // scope 0 at ui/consts/const-address-of.rs:9:16: 9:44
        StorageDead(_1);                 // scope 0 at ui/consts/const-address-of.rs:9:43: 9:44
        return;                          // scope 0 at ui/consts/const-address-of.rs:9:1: 9:45
    }
}

static mut F: () = {
    let mut _0: ();                      // return place in scope 0 at ui/consts/const-address-of.rs:10:15: 10:17
    let _1: i32;                         // in scope 0 at ui/consts/const-address-of.rs:10:26: 10:27
    let _2: *const i32;                  // in scope 0 at ui/consts/const-address-of.rs:10:33: 10:45
    scope 1 {
        debug x => _1;                   // in scope 1 at ui/consts/const-address-of.rs:10:26: 10:27
    }

    bb0: {
        StorageLive(_1);                 // scope 0 at ui/consts/const-address-of.rs:10:26: 10:27
        _1 = const 2_i32;                // scope 0 at ui/consts/const-address-of.rs:10:30: 10:31
        StorageLive(_2);                 // scope 1 at ui/consts/const-address-of.rs:10:33: 10:45
        _2 = &raw const _1;              // scope 1 at ui/consts/const-address-of.rs:10:33: 10:45
        StorageDead(_2);                 // scope 1 at ui/consts/const-address-of.rs:10:45: 10:46
        _0 = const ();                   // scope 0 at ui/consts/const-address-of.rs:10:20: 10:48
        StorageDead(_1);                 // scope 0 at ui/consts/const-address-of.rs:10:47: 10:48
        return;                          // scope 0 at ui/consts/const-address-of.rs:10:1: 10:49
    }
}

fn const_ptr() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/consts/const-address-of.rs:12:22: 12:22
    let _1: i32;                         // in scope 0 at ui/consts/const-address-of.rs:13:9: 13:10
    scope 1 {
        debug x => _1;                   // in scope 1 at ui/consts/const-address-of.rs:13:9: 13:10
        let _2: *const i32;              // in scope 1 at ui/consts/const-address-of.rs:14:9: 14:12
        scope 2 {
            debug ptr => _2;             // in scope 2 at ui/consts/const-address-of.rs:14:9: 14:12
            let _3: &i32;                // in scope 2 at ui/consts/const-address-of.rs:15:9: 15:10
            scope 3 {
                debug r => _3;           // in scope 3 at ui/consts/const-address-of.rs:15:9: 15:10
                let _4: *const i32;      // in scope 3 at ui/consts/const-address-of.rs:16:9: 16:13
                scope 4 {
                    debug ptr2 => _4;    // in scope 4 at ui/consts/const-address-of.rs:16:9: 16:13
                }
            }
        }
    }

    bb0: {
        _1 = const 0_i32;                // scope 0 at ui/consts/const-address-of.rs:13:13: 13:14
        _2 = &raw const _1;              // scope 1 at ui/consts/const-address-of.rs:14:15: 14:27
        _3 = &_1;                        // scope 2 at ui/consts/const-address-of.rs:15:13: 15:15
        _4 = &raw const (*_3);           // scope 3 at ui/consts/const-address-of.rs:16:16: 16:29
        return;                          // scope 0 at ui/consts/const-address-of.rs:17:2: 17:2
    }
}

// MIR FOR CTFE
fn const_ptr() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/consts/const-address-of.rs:12:22: 12:22
    let _1: i32;                         // in scope 0 at ui/consts/const-address-of.rs:13:9: 13:10
    scope 1 {
        debug x => _1;                   // in scope 1 at ui/consts/const-address-of.rs:13:9: 13:10
        let _2: *const i32;              // in scope 1 at ui/consts/const-address-of.rs:14:9: 14:12
        scope 2 {
            debug ptr => _2;             // in scope 2 at ui/consts/const-address-of.rs:14:9: 14:12
            let _3: &i32;                // in scope 2 at ui/consts/const-address-of.rs:15:9: 15:10
            scope 3 {
                debug r => _3;           // in scope 3 at ui/consts/const-address-of.rs:15:9: 15:10
                let _4: *const i32;      // in scope 3 at ui/consts/const-address-of.rs:16:9: 16:13
                scope 4 {
                    debug ptr2 => _4;    // in scope 4 at ui/consts/const-address-of.rs:16:9: 16:13
                }
            }
        }
    }

    bb0: {
        StorageLive(_1);                 // scope 0 at ui/consts/const-address-of.rs:13:9: 13:10
        _1 = const 0_i32;                // scope 0 at ui/consts/const-address-of.rs:13:13: 13:14
        StorageLive(_2);                 // scope 1 at ui/consts/const-address-of.rs:14:9: 14:12
        _2 = &raw const _1;              // scope 1 at ui/consts/const-address-of.rs:14:15: 14:27
        StorageLive(_3);                 // scope 2 at ui/consts/const-address-of.rs:15:9: 15:10
        _3 = &_1;                        // scope 2 at ui/consts/const-address-of.rs:15:13: 15:15
        StorageLive(_4);                 // scope 3 at ui/consts/const-address-of.rs:16:9: 16:13
        _4 = &raw const (*_3);           // scope 3 at ui/consts/const-address-of.rs:16:16: 16:29
        _0 = const ();                   // scope 0 at ui/consts/const-address-of.rs:12:22: 17:2
        StorageDead(_4);                 // scope 3 at ui/consts/const-address-of.rs:17:1: 17:2
        StorageDead(_3);                 // scope 2 at ui/consts/const-address-of.rs:17:1: 17:2
        StorageDead(_2);                 // scope 1 at ui/consts/const-address-of.rs:17:1: 17:2
        StorageDead(_1);                 // scope 0 at ui/consts/const-address-of.rs:17:1: 17:2
        return;                          // scope 0 at ui/consts/const-address-of.rs:17:2: 17:2
    }
}

fn main() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/consts/const-address-of.rs:19:11: 19:11

    bb0: {
        return;                          // scope 0 at ui/consts/const-address-of.rs:19:13: 19:13
    }
}
