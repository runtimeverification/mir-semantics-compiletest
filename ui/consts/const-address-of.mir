// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
const A: *const i32 = {
    let mut _0: *const i32;
    let _1: &i32;
    let _2: i32;
    let mut _3: &i32;

    bb0: {
        StorageLive(_1);
        _3 = const _;
        _1 = &(*_3);
        _0 = &raw const (*_1);
        return;
    }
}

promoted[0] in A: &i32 = {
    let mut _0: &i32;
    let mut _1: i32;

    bb0: {
        _1 = const 2_i32;
        _0 = &_1;
        return;
    }
}

static B: () = {
    let mut _0: ();
    let _1: *const i32;
    let _2: &i32;
    let _3: i32;
    let mut _4: &i32;

    bb0: {
        StorageLive(_1);
        StorageLive(_2);
        _4 = const _;
        _2 = &(*_4);
        _1 = &raw const (*_2);
        StorageDead(_2);
        StorageDead(_1);
        _0 = const ();
        return;
    }
}

promoted[0] in B: &i32 = {
    let mut _0: &i32;
    let mut _1: i32;

    bb0: {
        _1 = const 2_i32;
        _0 = &_1;
        return;
    }
}

static mut C: *const i32 = {
    let mut _0: *const i32;
    let _1: &i32;
    let _2: i32;
    let mut _3: &i32;

    bb0: {
        StorageLive(_1);
        _3 = const _;
        _1 = &(*_3);
        _0 = &raw const (*_1);
        return;
    }
}

promoted[0] in C: &i32 = {
    let mut _0: &i32;
    let mut _1: i32;

    bb0: {
        _1 = const 2_i32;
        _0 = &_1;
        return;
    }
}

const D: () = {
    let mut _0: ();
    let _1: i32;
    let _2: *const i32;
    scope 1 {
        debug x => _1;
    }

    bb0: {
        StorageLive(_1);
        _1 = const 2_i32;
        StorageLive(_2);
        _2 = &raw const _1;
        StorageDead(_2);
        _0 = const ();
        StorageDead(_1);
        return;
    }
}

static E: () = {
    let mut _0: ();
    let _1: i32;
    let _2: *const i32;
    scope 1 {
        debug x => _1;
    }

    bb0: {
        StorageLive(_1);
        _1 = const 2_i32;
        StorageLive(_2);
        _2 = &raw const _1;
        StorageDead(_2);
        _0 = const ();
        StorageDead(_1);
        return;
    }
}

static mut F: () = {
    let mut _0: ();
    let _1: i32;
    let _2: *const i32;
    scope 1 {
        debug x => _1;
    }

    bb0: {
        StorageLive(_1);
        _1 = const 2_i32;
        StorageLive(_2);
        _2 = &raw const _1;
        StorageDead(_2);
        _0 = const ();
        StorageDead(_1);
        return;
    }
}

fn const_ptr() -> () {
    let mut _0: ();
    let _1: i32;
    scope 1 {
        debug x => const 0_i32;
        let _2: *const i32;
        scope 2 {
            debug ptr => _2;
            let _3: &i32;
            scope 3 {
                debug r => _3;
                let _4: *const i32;
                scope 4 {
                    debug ptr2 => _4;
                }
            }
        }
    }

    bb0: {
        _1 = const 0_i32;
        _2 = &raw const _1;
        _3 = &_1;
        _4 = &raw const (*_3);
        return;
    }
}

// MIR FOR CTFE
fn const_ptr() -> () {
    let mut _0: ();
    let _1: i32;
    scope 1 {
        debug x => _1;
        let _2: *const i32;
        scope 2 {
            debug ptr => _2;
            let _3: &i32;
            scope 3 {
                debug r => _3;
                let _4: *const i32;
                scope 4 {
                    debug ptr2 => _4;
                }
            }
        }
    }

    bb0: {
        StorageLive(_1);
        _1 = const 0_i32;
        StorageLive(_2);
        _2 = &raw const _1;
        StorageLive(_3);
        _3 = &_1;
        StorageLive(_4);
        _4 = &raw const (*_3);
        _0 = const ();
        StorageDead(_4);
        StorageDead(_3);
        StorageDead(_2);
        StorageDead(_1);
        return;
    }
}

fn main() -> () {
    let mut _0: ();

    bb0: {
        return;
    }
}
