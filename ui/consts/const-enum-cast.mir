// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
B::B1::{constant#0}: isize = {
    let mut _0: isize;                   // return place in scope 0 at ui/consts/const-enum-cast.rs:5:13: 5:14

    bb0: {
        _0 = const 4_isize;              // scope 0 at ui/consts/const-enum-cast.rs:5:13: 5:14
        return;                          // scope 0 at ui/consts/const-enum-cast.rs:5:13: 5:14
    }
}

B::B2::{constant#0}: isize = {
    let mut _0: isize;                   // return place in scope 0 at ui/consts/const-enum-cast.rs:5:19: 5:20

    bb0: {
        _0 = const 2_isize;              // scope 0 at ui/consts/const-enum-cast.rs:5:19: 5:20
        return;                          // scope 0 at ui/consts/const-enum-cast.rs:5:19: 5:20
    }
}

Aligned::Zero::{constant#0}: isize = {
    let mut _0: isize;                   // return place in scope 0 at ui/consts/const-enum-cast.rs:10:12: 10:13

    bb0: {
        _0 = const 0_isize;              // scope 0 at ui/consts/const-enum-cast.rs:10:12: 10:13
        return;                          // scope 0 at ui/consts/const-enum-cast.rs:10:12: 10:13
    }
}

Aligned::One::{constant#0}: isize = {
    let mut _0: isize;                   // return place in scope 0 at ui/consts/const-enum-cast.rs:11:11: 11:12

    bb0: {
        _0 = const 1_isize;              // scope 0 at ui/consts/const-enum-cast.rs:11:11: 11:12
        return;                          // scope 0 at ui/consts/const-enum-cast.rs:11:11: 11:12
    }
}

const X: u8 = {
    let mut _0: u8;                      // return place in scope 0 at ui/consts/const-enum-cast.rs:15:10: 15:12
    let _1: Aligned;                     // in scope 0 at ui/consts/const-enum-cast.rs:16:9: 16:16
    let _2: Aligned;                     // in scope 0 at ui/consts/const-enum-cast.rs:17:5: 17:12
    let mut _3: isize;                   // in scope 0 at ui/consts/const-enum-cast.rs:17:5: 17:12
    scope 1 {
        debug aligned => _1;             // in scope 1 at ui/consts/const-enum-cast.rs:16:9: 16:16
    }

    bb0: {
        StorageLive(_1);                 // scope 0 at ui/consts/const-enum-cast.rs:16:9: 16:16
        _1 = Aligned::Zero;              // scope 0 at ui/consts/const-enum-cast.rs:16:19: 16:32
        StorageLive(_2);                 // scope 1 at ui/consts/const-enum-cast.rs:17:5: 17:12
        _2 = move _1;                    // scope 1 at ui/consts/const-enum-cast.rs:17:5: 17:12
        _3 = discriminant(_2);           // scope 1 at ui/consts/const-enum-cast.rs:17:5: 17:18
        _0 = move _3 as u8 (IntToInt);   // scope 1 at ui/consts/const-enum-cast.rs:17:5: 17:18
        StorageDead(_2);                 // scope 1 at ui/consts/const-enum-cast.rs:17:17: 17:18
        StorageDead(_1);                 // scope 0 at ui/consts/const-enum-cast.rs:18:1: 18:2
        return;                          // scope 0 at ui/consts/const-enum-cast.rs:15:1: 18:3
    }
}

fn main() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/consts/const-enum-cast.rs:20:16: 20:16
    let _1: isize;                       // in scope 0 at ui/consts/const-enum-cast.rs:23:9: 23:11
    let mut _3: isize;                   // in scope 0 at ui/consts/const-enum-cast.rs:24:14: 24:28
    let mut _4: (&isize, &isize);        // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _5: &isize;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let _6: &isize;                      // in scope 0 at ui/consts/const-enum-cast.rs:25:16: 25:18
    let mut _7: &isize;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _11: (&isize, &isize);       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _12: &isize;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let _13: &isize;                     // in scope 0 at ui/consts/const-enum-cast.rs:26:16: 26:18
    let mut _14: &isize;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _18: (&isize, &isize);       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _19: &isize;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let mut _20: &isize;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _23: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    let mut _24: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
    let mut _25: isize;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
    let mut _26: isize;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
    let _28: !;                          // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
    let mut _29: core::panicking::AssertKind; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
    let mut _30: &isize;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let _31: &isize;                     // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let mut _32: &isize;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let _33: &isize;                     // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let mut _34: std::option::Option<std::fmt::Arguments<'_>>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
    let mut _35: (&isize, &isize);       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _36: &isize;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let mut _37: &isize;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _40: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    let mut _41: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
    let mut _42: isize;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
    let mut _43: isize;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
    let _45: !;                          // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
    let mut _46: core::panicking::AssertKind; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
    let mut _47: &isize;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let _48: &isize;                     // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let mut _49: &isize;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let _50: &isize;                     // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let mut _51: std::option::Option<std::fmt::Arguments<'_>>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
    let mut _54: isize;                  // in scope 0 at ui/consts/const-enum-cast.rs:33:33: 33:34
    let mut _55: bool;                   // in scope 0 at ui/consts/const-enum-cast.rs:33:33: 33:43
    let mut _56: bool;                   // in scope 0 at ui/consts/const-enum-cast.rs:33:33: 33:43
    let mut _59: isize;                  // in scope 0 at ui/consts/const-enum-cast.rs:34:33: 34:34
    let mut _60: bool;                   // in scope 0 at ui/consts/const-enum-cast.rs:34:33: 34:43
    let mut _61: bool;                   // in scope 0 at ui/consts/const-enum-cast.rs:34:33: 34:43
    let mut _62: (&isize, &isize);       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _63: &isize;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let _64: &isize;                     // in scope 0 at ui/consts/const-enum-cast.rs:35:16: 35:20
    let mut _65: &isize;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _69: (&isize, &isize);       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _70: &isize;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let _71: &isize;                     // in scope 0 at ui/consts/const-enum-cast.rs:36:16: 36:20
    let mut _72: &isize;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _76: (&isize, &isize);       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _77: &isize;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let mut _78: &isize;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _81: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    let mut _82: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
    let mut _83: isize;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
    let mut _84: isize;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
    let _86: !;                          // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
    let mut _87: core::panicking::AssertKind; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
    let mut _88: &isize;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let _89: &isize;                     // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let mut _90: &isize;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let _91: &isize;                     // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let mut _92: std::option::Option<std::fmt::Arguments<'_>>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
    let mut _93: (&isize, &isize);       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _94: &isize;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let mut _95: &isize;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _98: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    let mut _99: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
    let mut _100: isize;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
    let mut _101: isize;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
    let _103: !;                         // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
    let mut _104: core::panicking::AssertKind; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
    let mut _105: &isize;                // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let _106: &isize;                    // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let mut _107: &isize;                // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let _108: &isize;                    // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let mut _109: std::option::Option<std::fmt::Arguments<'_>>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
    let mut _110: (&u8, &u8);            // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _111: &u8;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let mut _112: &u8;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    scope 1 {
        debug a1 => _1;                  // in scope 1 at ui/consts/const-enum-cast.rs:23:9: 23:11
        let _2: isize;                   // in scope 1 at ui/consts/const-enum-cast.rs:24:9: 24:11
        scope 2 {
            debug a2 => _2;              // in scope 2 at ui/consts/const-enum-cast.rs:24:9: 24:11
            let _8: &isize;              // in scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
            let _9: &isize;              // in scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
            let _15: &isize;             // in scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
            let _16: &isize;             // in scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
            let _21: &isize;             // in scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
            let _22: &isize;             // in scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
            let _38: &isize;             // in scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
            let _39: &isize;             // in scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
            let _52: isize;              // in scope 2 at ui/consts/const-enum-cast.rs:33:9: 33:13
            let _53: A;                  // in scope 2 at ui/consts/const-enum-cast.rs:33:22: 33:23
            let mut _122: &isize;        // in scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
            let mut _123: &isize;        // in scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
            let mut _124: &isize;        // in scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
            let mut _125: &isize;        // in scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
            scope 3 {
                debug left_val => _8;    // in scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
                debug right_val => _9;   // in scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
                let _10: core::panicking::AssertKind; // in scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                scope 4 {
                    debug kind => _10;   // in scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                }
            }
            scope 5 {
                debug left_val => _15;   // in scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
                debug right_val => _16;  // in scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
                let _17: core::panicking::AssertKind; // in scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                scope 6 {
                    debug kind => _17;   // in scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                }
            }
            scope 7 {
                debug left_val => _21;   // in scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
                debug right_val => _22;  // in scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
                let _27: core::panicking::AssertKind; // in scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                scope 8 {
                    debug kind => _27;   // in scope 8 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                }
            }
            scope 9 {
                debug left_val => _38;   // in scope 9 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
                debug right_val => _39;  // in scope 9 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
                let _44: core::panicking::AssertKind; // in scope 9 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                scope 10 {
                    debug kind => _44;   // in scope 10 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                }
            }
            scope 11 {
                debug a1_2 => _52;       // in scope 11 at ui/consts/const-enum-cast.rs:33:9: 33:13
                let _57: isize;          // in scope 11 at ui/consts/const-enum-cast.rs:34:9: 34:13
                let _58: B;              // in scope 11 at ui/consts/const-enum-cast.rs:34:22: 34:23
                scope 13 {
                    debug a2_2 => _57;   // in scope 13 at ui/consts/const-enum-cast.rs:34:9: 34:13
                    let _66: &isize;     // in scope 13 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
                    let _67: &isize;     // in scope 13 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
                    let _73: &isize;     // in scope 13 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
                    let _74: &isize;     // in scope 13 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
                    let _79: &isize;     // in scope 13 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
                    let _80: &isize;     // in scope 13 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
                    let _96: &isize;     // in scope 13 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
                    let _97: &isize;     // in scope 13 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
                    let _113: &u8;       // in scope 13 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
                    let _114: &u8;       // in scope 13 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
                    let mut _116: &u8;   // in scope 13 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                    let mut _117: &u8;   // in scope 13 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
                    let mut _118: &isize; // in scope 13 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                    let mut _119: &isize; // in scope 13 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                    let mut _120: &isize; // in scope 13 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                    let mut _121: &isize; // in scope 13 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                    scope 15 {
                        debug left_val => _66; // in scope 15 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
                        debug right_val => _67; // in scope 15 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
                        let _68: core::panicking::AssertKind; // in scope 15 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                        scope 16 {
                            debug kind => _68; // in scope 16 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                        }
                    }
                    scope 17 {
                        debug left_val => _73; // in scope 17 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
                        debug right_val => _74; // in scope 17 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
                        let _75: core::panicking::AssertKind; // in scope 17 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                        scope 18 {
                            debug kind => _75; // in scope 18 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                        }
                    }
                    scope 19 {
                        debug left_val => _79; // in scope 19 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
                        debug right_val => _80; // in scope 19 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
                        let _85: core::panicking::AssertKind; // in scope 19 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                        scope 20 {
                            debug kind => _85; // in scope 20 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                        }
                    }
                    scope 21 {
                        debug left_val => _96; // in scope 21 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
                        debug right_val => _97; // in scope 21 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
                        let _102: core::panicking::AssertKind; // in scope 21 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                        scope 22 {
                            debug kind => _102; // in scope 22 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                        }
                    }
                    scope 23 {
                        debug left_val => _113; // in scope 23 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
                        debug right_val => _114; // in scope 23 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
                        let _115: core::panicking::AssertKind; // in scope 23 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                        scope 24 {
                            debug kind => _115; // in scope 24 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                        }
                    }
                }
                scope 14 {
                    debug v => _58;      // in scope 14 at ui/consts/const-enum-cast.rs:34:22: 34:23
                }
            }
            scope 12 {
                debug v => _53;          // in scope 12 at ui/consts/const-enum-cast.rs:33:22: 33:23
            }
        }
    }

    bb0: {
        _1 = const 1_isize as isize (IntToInt); // scope 0 at ui/consts/const-enum-cast.rs:23:14: 23:28
        _3 = const 2_isize;              // scope 1 at ui/consts/const-enum-cast.rs:24:14: 24:28
        _2 = move _3 as isize (IntToInt); // scope 1 at ui/consts/const-enum-cast.rs:24:14: 24:28
        _6 = const {alloc5: &isize};     // scope 2 at ui/consts/const-enum-cast.rs:25:16: 25:18
                                         // mir::Constant
                                         // + span: ui/consts/const-enum-cast.rs:25:16: 25:18
                                         // + literal: Const { ty: &isize, val: Value(Scalar(alloc5)) }
        _5 = _6;                         // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _125 = const _;                  // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // + literal: Const { ty: &isize, val: Unevaluated(main, [], Some(promoted[9])) }
        _7 = _125;                       // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _4 = (move _5, move _7);         // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _8 = (_4.0: &isize);             // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _9 = (_4.1: &isize);             // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _13 = const {alloc6: &isize};    // scope 2 at ui/consts/const-enum-cast.rs:26:16: 26:18
                                         // mir::Constant
                                         // + span: ui/consts/const-enum-cast.rs:26:16: 26:18
                                         // + literal: Const { ty: &isize, val: Value(Scalar(alloc6)) }
        _12 = _13;                       // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _124 = const _;                  // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // + literal: Const { ty: &isize, val: Unevaluated(main, [], Some(promoted[8])) }
        _14 = _124;                      // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _11 = (move _12, move _14);      // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _15 = (_11.0: &isize);           // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _16 = (_11.1: &isize);           // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _19 = &_1;                       // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _123 = const _;                  // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // + literal: Const { ty: &isize, val: Unevaluated(main, [], Some(promoted[7])) }
        _20 = _123;                      // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _18 = (move _19, move _20);      // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _21 = (_18.0: &isize);           // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _22 = (_18.1: &isize);           // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _25 = (*_21);                    // scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
        _26 = const 1_isize;             // scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
        _24 = Eq(move _25, move _26);    // scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
        _23 = Not(move _24);             // scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
        switchInt(move _23) -> [0: bb2, otherwise: bb1]; // scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    }

    bb1: {
        _27 = const core::panicking::AssertKind::Eq; // scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _29 = const core::panicking::AssertKind::Eq; // scope 8 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _31 = _21;                       // scope 8 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _30 = _31;                       // scope 8 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _33 = _22;                       // scope 8 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _32 = _33;                       // scope 8 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _34 = Option::<Arguments<'_>>::None; // scope 8 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
        _28 = core::panicking::assert_failed::<isize, isize>(move _29, move _30, move _32, move _34); // scope 8 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:53
                                         // + literal: Const { ty: for<'a, 'b, 'c> fn(core::panicking::AssertKind, &'a isize, &'b isize, Option<Arguments<'c>>) -> ! {core::panicking::assert_failed::<isize, isize>}, val: Value(<ZST>) }
    }

    bb2: {
        _36 = &_2;                       // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _122 = const _;                  // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // + literal: Const { ty: &isize, val: Unevaluated(main, [], Some(promoted[6])) }
        _37 = _122;                      // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _35 = (move _36, move _37);      // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _38 = (_35.0: &isize);           // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _39 = (_35.1: &isize);           // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _42 = (*_38);                    // scope 9 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
        _43 = const 2_isize;             // scope 9 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
        _41 = Eq(move _42, move _43);    // scope 9 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
        _40 = Not(move _41);             // scope 9 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
        switchInt(move _40) -> [0: bb4, otherwise: bb3]; // scope 9 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    }

    bb3: {
        _44 = const core::panicking::AssertKind::Eq; // scope 9 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _46 = const core::panicking::AssertKind::Eq; // scope 10 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _48 = _38;                       // scope 10 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _47 = _48;                       // scope 10 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _50 = _39;                       // scope 10 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _49 = _50;                       // scope 10 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _51 = Option::<Arguments<'_>>::None; // scope 10 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
        _45 = core::panicking::assert_failed::<isize, isize>(move _46, move _47, move _49, move _51); // scope 10 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:53
                                         // + literal: Const { ty: for<'a, 'b, 'c> fn(core::panicking::AssertKind, &'a isize, &'b isize, Option<Arguments<'c>>) -> ! {core::panicking::assert_failed::<isize, isize>}, val: Value(<ZST>) }
    }

    bb4: {
        _53 = const A::A1;               // scope 2 at ui/consts/const-enum-cast.rs:33:26: 33:31
                                         // mir::Constant
                                         // + span: ui/consts/const-enum-cast.rs:33:26: 33:31
                                         // + literal: Const { ty: A, val: Value(Scalar(0x00)) }
        _54 = const 0_isize;             // scope 12 at ui/consts/const-enum-cast.rs:33:33: 33:43
        _55 = const true;                // scope 12 at ui/consts/const-enum-cast.rs:33:33: 33:43
        assume(_55);                     // scope 12 at ui/consts/const-enum-cast.rs:33:33: 33:43
        _56 = const true;                // scope 12 at ui/consts/const-enum-cast.rs:33:33: 33:43
        assume(_56);                     // scope 12 at ui/consts/const-enum-cast.rs:33:33: 33:43
        _52 = move _54 as isize (IntToInt); // scope 12 at ui/consts/const-enum-cast.rs:33:33: 33:43
        _58 = const B::B1;               // scope 11 at ui/consts/const-enum-cast.rs:34:26: 34:31
                                         // mir::Constant
                                         // + span: ui/consts/const-enum-cast.rs:34:26: 34:31
                                         // + literal: Const { ty: B, val: Value(Scalar(0x04)) }
        _59 = const 4_isize;             // scope 14 at ui/consts/const-enum-cast.rs:34:33: 34:43
        _60 = const true;                // scope 14 at ui/consts/const-enum-cast.rs:34:33: 34:43
        assume(_60);                     // scope 14 at ui/consts/const-enum-cast.rs:34:33: 34:43
        _61 = const true;                // scope 14 at ui/consts/const-enum-cast.rs:34:33: 34:43
        assume(_61);                     // scope 14 at ui/consts/const-enum-cast.rs:34:33: 34:43
        _57 = move _59 as isize (IntToInt); // scope 14 at ui/consts/const-enum-cast.rs:34:33: 34:43
        _64 = const {alloc7: &isize};    // scope 13 at ui/consts/const-enum-cast.rs:35:16: 35:20
                                         // mir::Constant
                                         // + span: ui/consts/const-enum-cast.rs:35:16: 35:20
                                         // + literal: Const { ty: &isize, val: Value(Scalar(alloc7)) }
        _63 = _64;                       // scope 13 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _121 = const _;                  // scope 13 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // + literal: Const { ty: &isize, val: Unevaluated(main, [], Some(promoted[5])) }
        _65 = _121;                      // scope 13 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _62 = (move _63, move _65);      // scope 13 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _66 = (_62.0: &isize);           // scope 13 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _67 = (_62.1: &isize);           // scope 13 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _71 = const {alloc8: &isize};    // scope 13 at ui/consts/const-enum-cast.rs:36:16: 36:20
                                         // mir::Constant
                                         // + span: ui/consts/const-enum-cast.rs:36:16: 36:20
                                         // + literal: Const { ty: &isize, val: Value(Scalar(alloc8)) }
        _70 = _71;                       // scope 13 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _120 = const _;                  // scope 13 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // + literal: Const { ty: &isize, val: Unevaluated(main, [], Some(promoted[4])) }
        _72 = _120;                      // scope 13 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _69 = (move _70, move _72);      // scope 13 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _73 = (_69.0: &isize);           // scope 13 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _74 = (_69.1: &isize);           // scope 13 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _77 = &_52;                      // scope 13 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _119 = const _;                  // scope 13 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // + literal: Const { ty: &isize, val: Unevaluated(main, [], Some(promoted[3])) }
        _78 = _119;                      // scope 13 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _76 = (move _77, move _78);      // scope 13 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _79 = (_76.0: &isize);           // scope 13 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _80 = (_76.1: &isize);           // scope 13 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _83 = (*_79);                    // scope 19 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
        _84 = const 0_isize;             // scope 19 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
        _82 = Eq(move _83, move _84);    // scope 19 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
        _81 = Not(move _82);             // scope 19 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
        switchInt(move _81) -> [0: bb6, otherwise: bb5]; // scope 19 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    }

    bb5: {
        _85 = const core::panicking::AssertKind::Eq; // scope 19 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _87 = const core::panicking::AssertKind::Eq; // scope 20 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _89 = _79;                       // scope 20 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _88 = _89;                       // scope 20 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _91 = _80;                       // scope 20 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _90 = _91;                       // scope 20 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _92 = Option::<Arguments<'_>>::None; // scope 20 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
        _86 = core::panicking::assert_failed::<isize, isize>(move _87, move _88, move _90, move _92); // scope 20 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:53
                                         // + literal: Const { ty: for<'a, 'b, 'c> fn(core::panicking::AssertKind, &'a isize, &'b isize, Option<Arguments<'c>>) -> ! {core::panicking::assert_failed::<isize, isize>}, val: Value(<ZST>) }
    }

    bb6: {
        _94 = &_57;                      // scope 13 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _118 = const _;                  // scope 13 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // + literal: Const { ty: &isize, val: Unevaluated(main, [], Some(promoted[2])) }
        _95 = _118;                      // scope 13 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _93 = (move _94, move _95);      // scope 13 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _96 = (_93.0: &isize);           // scope 13 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _97 = (_93.1: &isize);           // scope 13 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _100 = (*_96);                   // scope 21 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
        _101 = const 4_isize;            // scope 21 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
        _99 = Eq(move _100, move _101);  // scope 21 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
        _98 = Not(move _99);             // scope 21 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
        switchInt(move _98) -> [0: bb8, otherwise: bb7]; // scope 21 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    }

    bb7: {
        _102 = const core::panicking::AssertKind::Eq; // scope 21 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _104 = const core::panicking::AssertKind::Eq; // scope 22 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _106 = _96;                      // scope 22 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _105 = _106;                     // scope 22 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _108 = _97;                      // scope 22 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _107 = _108;                     // scope 22 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _109 = Option::<Arguments<'_>>::None; // scope 22 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
        _103 = core::panicking::assert_failed::<isize, isize>(move _104, move _105, move _107, move _109); // scope 22 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:53
                                         // + literal: Const { ty: for<'a, 'b, 'c> fn(core::panicking::AssertKind, &'a isize, &'b isize, Option<Arguments<'c>>) -> ! {core::panicking::assert_failed::<isize, isize>}, val: Value(<ZST>) }
    }

    bb8: {
        _117 = const _;                  // scope 13 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
                                         // + literal: Const { ty: &u8, val: Unevaluated(main, [], Some(promoted[1])) }
        _111 = _117;                     // scope 13 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _116 = const _;                  // scope 13 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // + literal: Const { ty: &u8, val: Unevaluated(main, [], Some(promoted[0])) }
        _112 = _116;                     // scope 13 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _110 = (move _111, move _112);   // scope 13 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _113 = (_110.0: &u8);            // scope 13 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _114 = (_110.1: &u8);            // scope 13 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        return;                          // scope 0 at ui/consts/const-enum-cast.rs:41:2: 41:2
    }
}

alloc8 (static: c2_2, size: 8, align: 8) {
    04 00 00 00 00 00 00 00                         │ ........
}

alloc7 (static: c1_2, size: 8, align: 8) {
    00 00 00 00 00 00 00 00                         │ ........
}

alloc6 (static: c2, size: 8, align: 8) {
    02 00 00 00 00 00 00 00                         │ ........
}

alloc5 (static: c1, size: 8, align: 8) {
    01 00 00 00 00 00 00 00                         │ ........
}

promoted[0] in main: &u8 = {
    let mut _0: &u8;                     // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _1: u8;                      // in scope 0 at ui/consts/const-enum-cast.rs:40:19: 40:20

    bb0: {
        _1 = const 0_u8;                 // scope 0 at ui/consts/const-enum-cast.rs:40:19: 40:20
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    }
}

promoted[1] in main: &u8 = {
    let mut _0: &u8;                     // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let mut _1: u8;                      // in scope 0 at ui/consts/const-enum-cast.rs:40:16: 40:17

    bb0: {
        _1 = const _;                    // scope 0 at ui/consts/const-enum-cast.rs:40:16: 40:17
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    }
}

promoted[2] in main: &isize = {
    let mut _0: &isize;                  // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _1: isize;                   // in scope 0 at ui/consts/const-enum-cast.rs:38:22: 38:23

    bb0: {
        _1 = const 4_isize;              // scope 0 at ui/consts/const-enum-cast.rs:38:22: 38:23
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    }
}

promoted[3] in main: &isize = {
    let mut _0: &isize;                  // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _1: isize;                   // in scope 0 at ui/consts/const-enum-cast.rs:37:22: 37:23

    bb0: {
        _1 = const 0_isize;              // scope 0 at ui/consts/const-enum-cast.rs:37:22: 37:23
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    }
}

promoted[4] in main: &isize = {
    let mut _0: &isize;                  // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _1: isize;                   // in scope 0 at ui/consts/const-enum-cast.rs:36:22: 36:23

    bb0: {
        _1 = const 4_isize;              // scope 0 at ui/consts/const-enum-cast.rs:36:22: 36:23
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    }
}

promoted[5] in main: &isize = {
    let mut _0: &isize;                  // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _1: isize;                   // in scope 0 at ui/consts/const-enum-cast.rs:35:22: 35:23

    bb0: {
        _1 = const 0_isize;              // scope 0 at ui/consts/const-enum-cast.rs:35:22: 35:23
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    }
}

promoted[6] in main: &isize = {
    let mut _0: &isize;                  // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _1: isize;                   // in scope 0 at ui/consts/const-enum-cast.rs:28:20: 28:21

    bb0: {
        _1 = const 2_isize;              // scope 0 at ui/consts/const-enum-cast.rs:28:20: 28:21
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    }
}

promoted[7] in main: &isize = {
    let mut _0: &isize;                  // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _1: isize;                   // in scope 0 at ui/consts/const-enum-cast.rs:27:20: 27:21

    bb0: {
        _1 = const 1_isize;              // scope 0 at ui/consts/const-enum-cast.rs:27:20: 27:21
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    }
}

promoted[8] in main: &isize = {
    let mut _0: &isize;                  // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _1: isize;                   // in scope 0 at ui/consts/const-enum-cast.rs:26:20: 26:21

    bb0: {
        _1 = const 2_isize;              // scope 0 at ui/consts/const-enum-cast.rs:26:20: 26:21
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    }
}

promoted[9] in main: &isize = {
    let mut _0: &isize;                  // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _1: isize;                   // in scope 0 at ui/consts/const-enum-cast.rs:25:20: 25:21

    bb0: {
        _1 = const 1_isize;              // scope 0 at ui/consts/const-enum-cast.rs:25:20: 25:21
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    }
}

static c1: isize = {
    let mut _0: isize;                   // return place in scope 0 at ui/consts/const-enum-cast.rs:21:16: 21:21

    bb0: {
        _0 = const 1_isize as isize (IntToInt); // scope 0 at ui/consts/const-enum-cast.rs:21:24: 21:38
        return;                          // scope 0 at ui/consts/const-enum-cast.rs:21:5: 21:39
    }
}

static c2: isize = {
    let mut _0: isize;                   // return place in scope 0 at ui/consts/const-enum-cast.rs:22:16: 22:21
    let mut _1: isize;                   // in scope 0 at ui/consts/const-enum-cast.rs:22:24: 22:38
    let mut _2: (isize, bool);           // in scope 0 at ui/consts/const-enum-cast.rs:22:24: 22:38

    bb0: {
        StorageLive(_1);                 // scope 0 at ui/consts/const-enum-cast.rs:22:24: 22:38
        _2 = CheckedAdd(const _, const 0_isize); // scope 0 at ui/consts/const-enum-cast.rs:22:24: 22:38
        assert(!move (_2.1: bool), "attempt to compute `{} + {}`, which would overflow", const _, const 0_isize) -> bb1; // scope 0 at ui/consts/const-enum-cast.rs:22:24: 22:38
    }

    bb1: {
        _1 = move (_2.0: isize);         // scope 0 at ui/consts/const-enum-cast.rs:22:24: 22:38
        _0 = move _1 as isize (IntToInt); // scope 0 at ui/consts/const-enum-cast.rs:22:24: 22:38
        StorageDead(_1);                 // scope 0 at ui/consts/const-enum-cast.rs:22:37: 22:38
        return;                          // scope 0 at ui/consts/const-enum-cast.rs:22:5: 22:39
    }
}

static c1_2: isize = {
    let mut _0: isize;                   // return place in scope 0 at ui/consts/const-enum-cast.rs:31:18: 31:23
    let _1: A;                           // in scope 0 at ui/consts/const-enum-cast.rs:31:32: 31:33
    let _2: A;                           // in scope 0 at ui/consts/const-enum-cast.rs:31:43: 31:44
    let mut _3: isize;                   // in scope 0 at ui/consts/const-enum-cast.rs:31:43: 31:44
    let mut _4: bool;                    // in scope 0 at ui/consts/const-enum-cast.rs:31:43: 31:53
    let mut _5: bool;                    // in scope 0 at ui/consts/const-enum-cast.rs:31:43: 31:53
    scope 1 {
        debug v => _1;                   // in scope 1 at ui/consts/const-enum-cast.rs:31:32: 31:33
    }

    bb0: {
        StorageLive(_1);                 // scope 0 at ui/consts/const-enum-cast.rs:31:32: 31:33
        _1 = A::A1;                      // scope 0 at ui/consts/const-enum-cast.rs:31:36: 31:41
        StorageLive(_2);                 // scope 1 at ui/consts/const-enum-cast.rs:31:43: 31:44
        _2 = move _1;                    // scope 1 at ui/consts/const-enum-cast.rs:31:43: 31:44
        _3 = discriminant(_2);           // scope 1 at ui/consts/const-enum-cast.rs:31:43: 31:53
        _4 = Ge(const 1_isize, _3);      // scope 1 at ui/consts/const-enum-cast.rs:31:43: 31:53
        assume(_4);                      // scope 1 at ui/consts/const-enum-cast.rs:31:43: 31:53
        _5 = Le(const 0_isize, _3);      // scope 1 at ui/consts/const-enum-cast.rs:31:43: 31:53
        assume(_5);                      // scope 1 at ui/consts/const-enum-cast.rs:31:43: 31:53
        _0 = move _3 as isize (IntToInt); // scope 1 at ui/consts/const-enum-cast.rs:31:43: 31:53
        StorageDead(_2);                 // scope 1 at ui/consts/const-enum-cast.rs:31:52: 31:53
        StorageDead(_1);                 // scope 0 at ui/consts/const-enum-cast.rs:31:54: 31:55
        return;                          // scope 0 at ui/consts/const-enum-cast.rs:31:5: 31:56
    }
}

static c2_2: isize = {
    let mut _0: isize;                   // return place in scope 0 at ui/consts/const-enum-cast.rs:32:18: 32:23
    let _1: B;                           // in scope 0 at ui/consts/const-enum-cast.rs:32:32: 32:33
    let _2: B;                           // in scope 0 at ui/consts/const-enum-cast.rs:32:43: 32:44
    let mut _3: isize;                   // in scope 0 at ui/consts/const-enum-cast.rs:32:43: 32:44
    let mut _4: bool;                    // in scope 0 at ui/consts/const-enum-cast.rs:32:43: 32:53
    let mut _5: bool;                    // in scope 0 at ui/consts/const-enum-cast.rs:32:43: 32:53
    scope 1 {
        debug v => _1;                   // in scope 1 at ui/consts/const-enum-cast.rs:32:32: 32:33
    }

    bb0: {
        StorageLive(_1);                 // scope 0 at ui/consts/const-enum-cast.rs:32:32: 32:33
        _1 = B::B1;                      // scope 0 at ui/consts/const-enum-cast.rs:32:36: 32:41
        StorageLive(_2);                 // scope 1 at ui/consts/const-enum-cast.rs:32:43: 32:44
        _2 = move _1;                    // scope 1 at ui/consts/const-enum-cast.rs:32:43: 32:44
        _3 = discriminant(_2);           // scope 1 at ui/consts/const-enum-cast.rs:32:43: 32:53
        _4 = Ge(const 4_isize, _3);      // scope 1 at ui/consts/const-enum-cast.rs:32:43: 32:53
        assume(_4);                      // scope 1 at ui/consts/const-enum-cast.rs:32:43: 32:53
        _5 = Le(const 2_isize, _3);      // scope 1 at ui/consts/const-enum-cast.rs:32:43: 32:53
        assume(_5);                      // scope 1 at ui/consts/const-enum-cast.rs:32:43: 32:53
        _0 = move _3 as isize (IntToInt); // scope 1 at ui/consts/const-enum-cast.rs:32:43: 32:53
        StorageDead(_2);                 // scope 1 at ui/consts/const-enum-cast.rs:32:52: 32:53
        StorageDead(_1);                 // scope 0 at ui/consts/const-enum-cast.rs:32:54: 32:55
        return;                          // scope 0 at ui/consts/const-enum-cast.rs:32:5: 32:56
    }
}
