// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
const DANGLING: NonNull<u32> = {
    let mut _0: std::ptr::NonNull<u32>;  // return place in scope 0 at ui/consts/const-ptr-nonnull-rpass.rs:10:17: 10:29

    bb0: {
        ConstEvalCounter;                // scope 0 at ui/consts/const-ptr-nonnull-rpass.rs:10:32: 10:51
        _0 = NonNull::<u32>::dangling() -> bb1; // scope 0 at ui/consts/const-ptr-nonnull-rpass.rs:10:32: 10:51
                                         // mir::Constant
                                         // + span: ui/consts/const-ptr-nonnull-rpass.rs:10:32: 10:49
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: fn() -> NonNull<u32> {NonNull::<u32>::dangling}, val: Value(<ZST>) }
    }

    bb1: {
        return;                          // scope 0 at ui/consts/const-ptr-nonnull-rpass.rs:10:1: 10:52
    }
}

const CASTED: NonNull<u32> = {
    let mut _0: std::ptr::NonNull<u32>;  // return place in scope 0 at ui/consts/const-ptr-nonnull-rpass.rs:11:15: 11:27
    let mut _1: std::ptr::NonNull<i32>;  // in scope 0 at ui/consts/const-ptr-nonnull-rpass.rs:11:44: 11:70

    bb0: {
        StorageLive(_1);                 // scope 0 at ui/consts/const-ptr-nonnull-rpass.rs:11:44: 11:70
        ConstEvalCounter;                // scope 0 at ui/consts/const-ptr-nonnull-rpass.rs:11:44: 11:70
        _1 = NonNull::<i32>::dangling() -> bb1; // scope 0 at ui/consts/const-ptr-nonnull-rpass.rs:11:44: 11:70
                                         // mir::Constant
                                         // + span: ui/consts/const-ptr-nonnull-rpass.rs:11:44: 11:68
                                         // + user_ty: UserType(1)
                                         // + literal: Const { ty: fn() -> NonNull<i32> {NonNull::<i32>::dangling}, val: Value(<ZST>) }
    }

    bb1: {
        ConstEvalCounter;                // scope 0 at ui/consts/const-ptr-nonnull-rpass.rs:11:30: 11:71
        _0 = NonNull::<i32>::cast::<u32>(move _1) -> bb2; // scope 0 at ui/consts/const-ptr-nonnull-rpass.rs:11:30: 11:71
                                         // mir::Constant
                                         // + span: ui/consts/const-ptr-nonnull-rpass.rs:11:30: 11:43
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: fn(NonNull<i32>) -> NonNull<u32> {NonNull::<i32>::cast::<u32>}, val: Value(<ZST>) }
    }

    bb2: {
        StorageDead(_1);                 // scope 0 at ui/consts/const-ptr-nonnull-rpass.rs:11:70: 11:71
        return;                          // scope 0 at ui/consts/const-ptr-nonnull-rpass.rs:11:1: 11:72
    }
}

fn main() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/consts/const-ptr-nonnull-rpass.rs:13:15: 13:15
    let mut _1: (&std::ptr::NonNull<u32>, &std::ptr::NonNull<u32>); // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _2: &std::ptr::NonNull<u32>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let mut _3: &std::ptr::NonNull<u32>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let _4: std::ptr::NonNull<u32>;      // in scope 0 at ui/consts/const-ptr-nonnull-rpass.rs:15:26: 15:61
    let mut _5: fn() -> std::ptr::NonNull<u32>; // in scope 0 at ui/consts/const-ptr-nonnull-rpass.rs:15:26: 15:59
    let mut _6: fn() -> std::ptr::NonNull<u32>; // in scope 0 at ui/consts/const-ptr-nonnull-rpass.rs:15:41: 15:58
    let _7: &std::ptr::NonNull<u32>;     // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
    let _8: &std::ptr::NonNull<u32>;     // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
    let mut _9: bool;                    // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    let mut _10: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
    let mut _11: &std::ptr::NonNull<u32>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
    let mut _12: &std::ptr::NonNull<u32>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
    let _14: !;                          // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
    let mut _15: core::panicking::AssertKind; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
    let mut _16: &std::ptr::NonNull<u32>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let _17: &std::ptr::NonNull<u32>;    // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let mut _18: &std::ptr::NonNull<u32>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let _19: &std::ptr::NonNull<u32>;    // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let mut _20: std::option::Option<std::fmt::Arguments<'_>>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
    let mut _21: (&std::ptr::NonNull<u32>, &std::ptr::NonNull<u32>); // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _22: &std::ptr::NonNull<u32>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let mut _23: &std::ptr::NonNull<u32>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let _24: std::ptr::NonNull<u32>;     // in scope 0 at ui/consts/const-ptr-nonnull-rpass.rs:16:24: 16:59
    let mut _25: fn() -> std::ptr::NonNull<u32>; // in scope 0 at ui/consts/const-ptr-nonnull-rpass.rs:16:24: 16:57
    let mut _26: fn() -> std::ptr::NonNull<u32>; // in scope 0 at ui/consts/const-ptr-nonnull-rpass.rs:16:39: 16:56
    let _27: &std::ptr::NonNull<u32>;    // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
    let _28: &std::ptr::NonNull<u32>;    // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
    let mut _29: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    let mut _30: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
    let mut _31: &std::ptr::NonNull<u32>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
    let mut _32: &std::ptr::NonNull<u32>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
    let _34: !;                          // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
    let mut _35: core::panicking::AssertKind; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
    let mut _36: &std::ptr::NonNull<u32>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let _37: &std::ptr::NonNull<u32>;    // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let mut _38: &std::ptr::NonNull<u32>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let _39: &std::ptr::NonNull<u32>;    // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let mut _40: std::option::Option<std::fmt::Arguments<'_>>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
    let mut _41: &std::ptr::NonNull<u32>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let mut _42: &std::ptr::NonNull<u32>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    scope 1 {
        debug left_val => _7;            // in scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        debug right_val => _8;           // in scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        let _13: core::panicking::AssertKind; // in scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
        scope 2 {
            debug kind => _13;           // in scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
        }
    }
    scope 3 {
        debug left_val => _27;           // in scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        debug right_val => _28;          // in scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        let _33: core::panicking::AssertKind; // in scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
        scope 4 {
            debug kind => _33;           // in scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
        }
    }

    bb0: {
        _42 = const _;                   // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
                                         // + literal: Const { ty: &NonNull<u32>, val: Unevaluated(main, [], Some(promoted[1])) }
        _2 = _42;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _6 = NonNull::<u32>::dangling as fn() -> std::ptr::NonNull<u32> (Pointer(ReifyFnPointer)); // scope 0 at ui/consts/const-ptr-nonnull-rpass.rs:15:41: 15:58
                                         // mir::Constant
                                         // + span: ui/consts/const-ptr-nonnull-rpass.rs:15:41: 15:58
                                         // + user_ty: UserType(1)
                                         // + literal: Const { ty: fn() -> NonNull<u32> {NonNull::<u32>::dangling}, val: Value(<ZST>) }
        _5 = test::black_box::<fn() -> NonNull<u32>>(move _6) -> bb1; // scope 0 at ui/consts/const-ptr-nonnull-rpass.rs:15:26: 15:59
                                         // mir::Constant
                                         // + span: ui/consts/const-ptr-nonnull-rpass.rs:15:26: 15:40
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: fn(fn() -> NonNull<u32>) -> fn() -> NonNull<u32> {test::black_box::<fn() -> NonNull<u32>>}, val: Value(<ZST>) }
    }

    bb1: {
        _4 = move _5() -> bb2;           // scope 0 at ui/consts/const-ptr-nonnull-rpass.rs:15:26: 15:61
    }

    bb2: {
        _3 = &_4;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _1 = (move _2, move _3);         // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _7 = (_1.0: &std::ptr::NonNull<u32>); // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _8 = (_1.1: &std::ptr::NonNull<u32>); // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _11 = _7;                        // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
        _12 = _8;                        // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
        _10 = <NonNull<u32> as PartialEq>::eq(move _11, move _12) -> bb3; // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a NonNull<u32>, &'b NonNull<u32>) -> bool {<NonNull<u32> as PartialEq>::eq}, val: Value(<ZST>) }
    }

    bb3: {
        _9 = Not(move _10);              // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
        switchInt(move _9) -> [0: bb5, otherwise: bb4]; // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    }

    bb4: {
        _13 = const core::panicking::AssertKind::Eq; // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _15 = const core::panicking::AssertKind::Eq; // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _17 = _7;                        // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _16 = _17;                       // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _19 = _8;                        // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _18 = _19;                       // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _20 = Option::<Arguments<'_>>::None; // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
        _14 = core::panicking::assert_failed::<NonNull<u32>, NonNull<u32>>(move _15, move _16, move _18, move _20); // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:53
                                         // + literal: Const { ty: for<'a, 'b, 'c> fn(core::panicking::AssertKind, &'a NonNull<u32>, &'b NonNull<u32>, Option<Arguments<'c>>) -> ! {core::panicking::assert_failed::<NonNull<u32>, NonNull<u32>>}, val: Value(<ZST>) }
    }

    bb5: {
        _41 = const _;                   // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
                                         // + literal: Const { ty: &NonNull<u32>, val: Unevaluated(main, [], Some(promoted[0])) }
        _22 = _41;                       // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _26 = NonNull::<u32>::dangling as fn() -> std::ptr::NonNull<u32> (Pointer(ReifyFnPointer)); // scope 0 at ui/consts/const-ptr-nonnull-rpass.rs:16:39: 16:56
                                         // mir::Constant
                                         // + span: ui/consts/const-ptr-nonnull-rpass.rs:16:39: 16:56
                                         // + user_ty: UserType(3)
                                         // + literal: Const { ty: fn() -> NonNull<u32> {NonNull::<u32>::dangling}, val: Value(<ZST>) }
        _25 = test::black_box::<fn() -> NonNull<u32>>(move _26) -> bb6; // scope 0 at ui/consts/const-ptr-nonnull-rpass.rs:16:24: 16:57
                                         // mir::Constant
                                         // + span: ui/consts/const-ptr-nonnull-rpass.rs:16:24: 16:38
                                         // + user_ty: UserType(2)
                                         // + literal: Const { ty: fn(fn() -> NonNull<u32>) -> fn() -> NonNull<u32> {test::black_box::<fn() -> NonNull<u32>>}, val: Value(<ZST>) }
    }

    bb6: {
        _24 = move _25() -> bb7;         // scope 0 at ui/consts/const-ptr-nonnull-rpass.rs:16:24: 16:59
    }

    bb7: {
        _23 = &_24;                      // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _21 = (move _22, move _23);      // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _27 = (_21.0: &std::ptr::NonNull<u32>); // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _28 = (_21.1: &std::ptr::NonNull<u32>); // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _31 = _27;                       // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
        _32 = _28;                       // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
        _30 = <NonNull<u32> as PartialEq>::eq(move _31, move _32) -> bb8; // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a NonNull<u32>, &'b NonNull<u32>) -> bool {<NonNull<u32> as PartialEq>::eq}, val: Value(<ZST>) }
    }

    bb8: {
        _29 = Not(move _30);             // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
        switchInt(move _29) -> [0: bb10, otherwise: bb9]; // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    }

    bb9: {
        _33 = const core::panicking::AssertKind::Eq; // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _35 = const core::panicking::AssertKind::Eq; // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _37 = _27;                       // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _36 = _37;                       // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _39 = _28;                       // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _38 = _39;                       // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _40 = Option::<Arguments<'_>>::None; // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
        _34 = core::panicking::assert_failed::<NonNull<u32>, NonNull<u32>>(move _35, move _36, move _38, move _40); // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:53
                                         // + literal: Const { ty: for<'a, 'b, 'c> fn(core::panicking::AssertKind, &'a NonNull<u32>, &'b NonNull<u32>, Option<Arguments<'c>>) -> ! {core::panicking::assert_failed::<NonNull<u32>, NonNull<u32>>}, val: Value(<ZST>) }
    }

    bb10: {
        return;                          // scope 0 at ui/consts/const-ptr-nonnull-rpass.rs:17:2: 17:2
    }
}

promoted[0] in main: &NonNull<u32> = {
    let mut _0: &std::ptr::NonNull<u32>; // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let mut _1: std::ptr::NonNull<u32>;  // in scope 0 at ui/consts/const-ptr-nonnull-rpass.rs:16:16: 16:22

    bb0: {
        _1 = const _;                    // scope 0 at ui/consts/const-ptr-nonnull-rpass.rs:16:16: 16:22
                                         // mir::Constant
                                         // + span: ui/consts/const-ptr-nonnull-rpass.rs:16:16: 16:22
                                         // + literal: Const { ty: NonNull<u32>, val: Unevaluated(CASTED, [], None) }
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    }
}

promoted[1] in main: &NonNull<u32> = {
    let mut _0: &std::ptr::NonNull<u32>; // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let mut _1: std::ptr::NonNull<u32>;  // in scope 0 at ui/consts/const-ptr-nonnull-rpass.rs:15:16: 15:24

    bb0: {
        _1 = const _;                    // scope 0 at ui/consts/const-ptr-nonnull-rpass.rs:15:16: 15:24
                                         // mir::Constant
                                         // + span: ui/consts/const-ptr-nonnull-rpass.rs:15:16: 15:24
                                         // + literal: Const { ty: NonNull<u32>, val: Unevaluated(DANGLING, [], None) }
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    }
}
