// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
const ARR: [usize; 1] = {
    let mut _0: [usize; 1];              // return place in scope 0 at ui/consts/check_const-feature-gated.rs:3:12: 3:22

    bb0: {
        _0 = [const 2_usize];            // scope 0 at ui/consts/check_const-feature-gated.rs:3:25: 3:28
        return;                          // scope 0 at ui/consts/check_const-feature-gated.rs:3:1: 3:29
    }
}

ARR::{constant#0}: usize = {
    let mut _0: usize;                   // return place in scope 0 at ui/consts/check_const-feature-gated.rs:3:20: 3:21

    bb0: {
        _0 = const 1_usize;              // scope 0 at ui/consts/check_const-feature-gated.rs:3:20: 3:21
        return;                          // scope 0 at ui/consts/check_const-feature-gated.rs:3:20: 3:21
    }
}

fn main() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/consts/check_const-feature-gated.rs:5:11: 5:11
    scope 1 {
    }

    bb0: {
        return;                          // scope 0 at ui/consts/check_const-feature-gated.rs:7:2: 7:2
    }
}
