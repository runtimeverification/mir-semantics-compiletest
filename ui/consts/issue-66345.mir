// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
fn do_nothing(_1: &()) -> () {
    let mut _0: ();                      // return place in scope 0 at ui/consts/issue-66345.rs:7:23: 7:23

    bb0: {
        return;                          // scope 0 at ui/consts/issue-66345.rs:7:25: 7:25
    }
}

fn by_value_1(_1: Foo) -> () {
    debug foo => _1;                     // in scope 0 at ui/consts/issue-66345.rs:13:19: 13:22
    let mut _0: ();                      // return place in scope 0 at ui/consts/issue-66345.rs:13:29: 13:29
    let _2: ();                          // in scope 0 at ui/consts/issue-66345.rs:14:5: 14:25
    let mut _3: &();                     // in scope 0 at ui/consts/issue-66345.rs:14:16: 14:24
    let _4: &();                         // in scope 0 at ui/consts/issue-66345.rs:14:16: 14:24

    bb0: {
        _4 = &(_1.0: ());                // scope 0 at ui/consts/issue-66345.rs:14:16: 14:24
        _3 = _4;                         // scope 0 at ui/consts/issue-66345.rs:14:16: 14:24
        _2 = do_nothing(move _3) -> bb1; // scope 0 at ui/consts/issue-66345.rs:14:5: 14:25
                                         // mir::Constant
                                         // + span: ui/consts/issue-66345.rs:14:5: 14:15
                                         // + literal: Const { ty: for<'a> fn(&'a ()) {do_nothing}, val: Value(<ZST>) }
    }

    bb1: {
        return;                          // scope 0 at ui/consts/issue-66345.rs:15:2: 15:2
    }
}

fn by_value_2(_1: Foo) -> () {
    debug foo => _1;                     // in scope 0 at ui/consts/issue-66345.rs:17:22: 17:25
    let mut _0: ();                      // return place in scope 0 at ui/consts/issue-66345.rs:17:32: 17:32
    let _2: ();                          // in scope 0 at ui/consts/issue-66345.rs:18:5: 18:25
    let mut _3: &();                     // in scope 0 at ui/consts/issue-66345.rs:18:16: 18:24
    let _4: &();                         // in scope 0 at ui/consts/issue-66345.rs:18:16: 18:24

    bb0: {
        _4 = &(_1.0: ());                // scope 0 at ui/consts/issue-66345.rs:18:16: 18:24
        _3 = _4;                         // scope 0 at ui/consts/issue-66345.rs:18:16: 18:24
        _2 = do_nothing(move _3) -> bb1; // scope 0 at ui/consts/issue-66345.rs:18:5: 18:25
                                         // mir::Constant
                                         // + span: ui/consts/issue-66345.rs:18:5: 18:15
                                         // + literal: Const { ty: for<'a> fn(&'a ()) {do_nothing}, val: Value(<ZST>) }
    }

    bb1: {
        return;                          // scope 0 at ui/consts/issue-66345.rs:19:2: 19:2
    }
}

fn main() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/consts/issue-66345.rs:21:11: 21:11
    let _1: ();                          // in scope 0 at ui/consts/issue-66345.rs:22:5: 22:32
    let mut _2: Foo;                     // in scope 0 at ui/consts/issue-66345.rs:22:16: 22:31
    let _3: ();                          // in scope 0 at ui/consts/issue-66345.rs:23:5: 23:38
    let mut _4: Foo;                     // in scope 0 at ui/consts/issue-66345.rs:23:22: 23:37

    bb0: {
        _1 = by_value_1(move _2) -> bb1; // scope 0 at ui/consts/issue-66345.rs:22:5: 22:32
                                         // mir::Constant
                                         // + span: ui/consts/issue-66345.rs:22:5: 22:15
                                         // + literal: Const { ty: fn(Foo) {by_value_1}, val: Value(<ZST>) }
    }

    bb1: {
        _3 = by_value_2::<()>(move _4) -> bb2; // scope 0 at ui/consts/issue-66345.rs:23:5: 23:38
                                         // mir::Constant
                                         // + span: ui/consts/issue-66345.rs:23:5: 23:21
                                         // + literal: Const { ty: fn(Foo) {by_value_2::<()>}, val: Value(<ZST>) }
    }

    bb2: {
        return;                          // scope 0 at ui/consts/issue-66345.rs:24:2: 24:2
    }
}
