// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
fn <impl at ui/consts/extra-const-ub/issue-100771.rs:4:10: 4:19>::eq(_1: &Foo, _2: &Foo) -> bool {
    debug self => _1;                    // in scope 0 at ui/consts/extra-const-ub/issue-100771.rs:4:10: 4:19
    debug other => _2;                   // in scope 0 at ui/consts/extra-const-ub/issue-100771.rs:4:10: 4:19
    let mut _0: bool;                    // return place in scope 0 at ui/consts/extra-const-ub/issue-100771.rs:4:10: 4:19
    let mut _3: &(i64, u32, u32, u32);   // in scope 0 at ui/consts/extra-const-ub/issue-100771.rs:7:5: 7:32
    let _4: (i64, u32, u32, u32);        // in scope 0 at ui/consts/extra-const-ub/issue-100771.rs:7:5: 7:32
    let mut _5: &(i64, u32, u32, u32);   // in scope 0 at ui/consts/extra-const-ub/issue-100771.rs:7:5: 7:32
    let _6: (i64, u32, u32, u32);        // in scope 0 at ui/consts/extra-const-ub/issue-100771.rs:7:5: 7:32

    bb0: {
        _4 = ((*_1).0: (i64, u32, u32, u32)); // scope 0 at ui/consts/extra-const-ub/issue-100771.rs:7:5: 7:32
        _3 = &_4;                        // scope 0 at ui/consts/extra-const-ub/issue-100771.rs:7:5: 7:32
        _6 = ((*_2).0: (i64, u32, u32, u32)); // scope 0 at ui/consts/extra-const-ub/issue-100771.rs:7:5: 7:32
        _5 = &_6;                        // scope 0 at ui/consts/extra-const-ub/issue-100771.rs:7:5: 7:32
        _0 = <(i64, u32, u32, u32) as PartialEq>::eq(move _3, move _5) -> bb1; // scope 0 at ui/consts/extra-const-ub/issue-100771.rs:7:5: 7:32
                                         // mir::Constant
                                         // + span: ui/consts/extra-const-ub/issue-100771.rs:7:5: 7:32
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a (i64, u32, u32, u32), &'b (i64, u32, u32, u32)) -> bool {<(i64, u32, u32, u32) as PartialEq>::eq}, val: Value(<ZST>) }
    }

    bb1: {
        return;                          // scope 0 at ui/consts/extra-const-ub/issue-100771.rs:4:19: 4:19
    }
}

fn <impl at ui/consts/extra-const-ub/issue-100771.rs:4:21: 4:23>::assert_receiver_is_total_eq(_1: &Foo) -> () {
    debug self => _1;                    // in scope 0 at ui/consts/extra-const-ub/issue-100771.rs:4:21: 4:23
    let mut _0: ();                      // return place in scope 0 at ui/consts/extra-const-ub/issue-100771.rs:4:21: 4:23
    scope 1 {
    }

    bb0: {
        return;                          // scope 0 at ui/consts/extra-const-ub/issue-100771.rs:4:23: 4:23
    }
}

fn <impl at ui/consts/extra-const-ub/issue-100771.rs:4:31: 4:36>::clone(_1: &Foo) -> Foo {
    debug self => _1;                    // in scope 0 at ui/consts/extra-const-ub/issue-100771.rs:4:31: 4:36
    let mut _0: Foo;                     // return place in scope 0 at ui/consts/extra-const-ub/issue-100771.rs:4:31: 4:36
    scope 1 {
    }

    bb0: {
        _0 = (*_1);                      // scope 1 at ui/consts/extra-const-ub/issue-100771.rs:4:31: 4:36
        return;                          // scope 0 at ui/consts/extra-const-ub/issue-100771.rs:4:36: 4:36
    }
}

const FOO: Foo = {
    let mut _0: Foo;                     // return place in scope 0 at ui/consts/extra-const-ub/issue-100771.rs:10:12: 10:15
    let mut _1: (i64, u32, u32, u32);    // in scope 0 at ui/consts/extra-const-ub/issue-100771.rs:11:12: 11:24

    bb0: {
        StorageLive(_1);                 // scope 0 at ui/consts/extra-const-ub/issue-100771.rs:11:12: 11:24
        _1 = (const 5_i64, const 6_u32, const 7_u32, const 8_u32); // scope 0 at ui/consts/extra-const-ub/issue-100771.rs:11:12: 11:24
        _0 = Foo { field: move _1 };     // scope 0 at ui/consts/extra-const-ub/issue-100771.rs:10:18: 12:2
        StorageDead(_1);                 // scope 0 at ui/consts/extra-const-ub/issue-100771.rs:12:1: 12:2
        return;                          // scope 0 at ui/consts/extra-const-ub/issue-100771.rs:10:1: 12:3
    }
}

fn main() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/consts/extra-const-ub/issue-100771.rs:14:11: 14:11

    bb0: {
        return;                          // scope 0 at ui/consts/extra-const-ub/issue-100771.rs:20:2: 20:2
    }
}
