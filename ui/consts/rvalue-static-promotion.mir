// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
const NONE_CELL_STRING: Option<Cell<String>> = {
    let mut _0: std::option::Option<std::cell::Cell<std::string::String>>; // return place in scope 0 at ui/consts/rvalue-static-promotion.rs:5:25: 5:45

    bb0: {
        _0 = Option::<Cell<String>>::None; // scope 0 at ui/consts/rvalue-static-promotion.rs:5:48: 5:52
        return;                          // scope 0 at ui/consts/rvalue-static-promotion.rs:5:1: 5:53
    }
}

const <impl at ui/consts/rvalue-static-promotion.rs:8:1: 8:15>::FOO: Option<Box<T>> = {
    let mut _0: std::option::Option<std::boxed::Box<T>>; // return place in scope 0 at ui/consts/rvalue-static-promotion.rs:9:16: 9:30

    bb0: {
        _0 = Option::<Box<T>>::None;     // scope 0 at ui/consts/rvalue-static-promotion.rs:9:33: 9:37
        return;                          // scope 0 at ui/consts/rvalue-static-promotion.rs:9:5: 9:38
    }
}

fn main() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/consts/rvalue-static-promotion.rs:12:11: 12:11
    scope 1 {
        scope 2 {
            scope 3 {
                scope 4 {
                }
            }
        }
    }

    bb0: {
        return;                          // scope 0 at ui/consts/rvalue-static-promotion.rs:19:2: 19:2
    }
}

promoted[0] in main: &Option<Box<()>> = {
    let mut _0: &std::option::Option<std::boxed::Box<()>>; // return place in scope 0 at ui/consts/rvalue-static-promotion.rs:18:39: 18:48
    let mut _1: std::option::Option<std::boxed::Box<()>>; // in scope 0 at ui/consts/rvalue-static-promotion.rs:18:40: 18:48

    bb0: {
        _1 = const _;                    // scope 0 at ui/consts/rvalue-static-promotion.rs:18:40: 18:48
                                         // mir::Constant
                                         // + span: ui/consts/rvalue-static-promotion.rs:18:40: 18:48
                                         // + user_ty: UserType(7)
                                         // + literal: Const { ty: Option<Box<()>>, val: Unevaluated(Foo::<T>::FOO, [()], None) }
        _0 = &_1;                        // scope 0 at ui/consts/rvalue-static-promotion.rs:18:39: 18:48
        return;                          // scope 0 at ui/consts/rvalue-static-promotion.rs:18:39: 18:48
    }
}

promoted[1] in main: &Option<Cell<String>> = {
    let mut _0: &std::option::Option<std::cell::Cell<std::string::String>>; // return place in scope 0 at ui/consts/rvalue-static-promotion.rs:17:44: 17:61
    let mut _1: std::option::Option<std::cell::Cell<std::string::String>>; // in scope 0 at ui/consts/rvalue-static-promotion.rs:17:45: 17:61

    bb0: {
        _1 = const _;                    // scope 0 at ui/consts/rvalue-static-promotion.rs:17:45: 17:61
                                         // mir::Constant
                                         // + span: ui/consts/rvalue-static-promotion.rs:17:45: 17:61
                                         // + literal: Const { ty: Option<Cell<String>>, val: Unevaluated(NONE_CELL_STRING, [], None) }
        _0 = &_1;                        // scope 0 at ui/consts/rvalue-static-promotion.rs:17:44: 17:61
        return;                          // scope 0 at ui/consts/rvalue-static-promotion.rs:17:44: 17:61
    }
}

promoted[2] in main: &Option<u32> = {
    let mut _0: &std::option::Option<u32>; // return place in scope 0 at ui/consts/rvalue-static-promotion.rs:14:35: 14:40
    let mut _1: std::option::Option<u32>; // in scope 0 at ui/consts/rvalue-static-promotion.rs:14:36: 14:40

    bb0: {
        _1 = Option::<u32>::None;        // scope 0 at ui/consts/rvalue-static-promotion.rs:14:36: 14:40
        _0 = &_1;                        // scope 0 at ui/consts/rvalue-static-promotion.rs:14:35: 14:40
        return;                          // scope 0 at ui/consts/rvalue-static-promotion.rs:14:35: 14:40
    }
}

promoted[3] in main: &u32 = {
    let mut _0: &u32;                    // return place in scope 0 at ui/consts/rvalue-static-promotion.rs:13:27: 13:30
    let mut _1: u32;                     // in scope 0 at ui/consts/rvalue-static-promotion.rs:13:28: 13:30

    bb0: {
        _1 = const 42_u32;               // scope 0 at ui/consts/rvalue-static-promotion.rs:13:28: 13:30
        _0 = &_1;                        // scope 0 at ui/consts/rvalue-static-promotion.rs:13:27: 13:30
        return;                          // scope 0 at ui/consts/rvalue-static-promotion.rs:13:27: 13:30
    }
}

fn Foo(_1: T) -> Foo<T> {
    let mut _0: Foo<T>;                  // return place in scope 0 at ui/consts/rvalue-static-promotion.rs:7:1: 7:14

    bb0: {
        _0 = Foo::<T>(move _1);          // scope 0 at ui/consts/rvalue-static-promotion.rs:7:1: 7:14
        return;                          // scope 0 at ui/consts/rvalue-static-promotion.rs:7:1: 7:14
    }
}

// MIR FOR CTFE
fn Foo(_1: T) -> Foo<T> {
    let mut _0: Foo<T>;                  // return place in scope 0 at ui/consts/rvalue-static-promotion.rs:7:1: 7:14

    bb0: {
        _0 = Foo::<T>(move _1);          // scope 0 at ui/consts/rvalue-static-promotion.rs:7:1: 7:14
        return;                          // scope 0 at ui/consts/rvalue-static-promotion.rs:7:1: 7:14
    }
}
