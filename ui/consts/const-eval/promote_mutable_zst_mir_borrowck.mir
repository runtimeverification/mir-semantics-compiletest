// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
fn main() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/consts/const-eval/promote_mutable_zst_mir_borrowck.rs:3:15: 3:15
    let _1: &mut [u8; 0];                // in scope 0 at ui/consts/const-eval/promote_mutable_zst_mir_borrowck.rs:4:9: 4:10
    let mut _2: &mut [u8; 0];            // in scope 0 at ui/consts/const-eval/promote_mutable_zst_mir_borrowck.rs:4:35: 4:42
    let mut _3: &mut [u8; 0];            // in scope 0 at ui/consts/const-eval/promote_mutable_zst_mir_borrowck.rs:4:35: 4:42
    scope 1 {
        debug y => _1;                   // in scope 1 at ui/consts/const-eval/promote_mutable_zst_mir_borrowck.rs:4:9: 4:10
    }

    bb0: {
        _3 = const _;                    // scope 0 at ui/consts/const-eval/promote_mutable_zst_mir_borrowck.rs:4:35: 4:42
                                         // mir::Constant
                                         // + span: ui/consts/const-eval/promote_mutable_zst_mir_borrowck.rs:4:35: 4:42
                                         // + literal: Const { ty: &mut [u8; 0], val: Unevaluated(main, [], Some(promoted[0])) }
        _2 = &mut (*_3);                 // scope 0 at ui/consts/const-eval/promote_mutable_zst_mir_borrowck.rs:4:35: 4:42
        _1 = &mut (*_2);                 // scope 0 at ui/consts/const-eval/promote_mutable_zst_mir_borrowck.rs:4:35: 4:42
        return;                          // scope 0 at ui/consts/const-eval/promote_mutable_zst_mir_borrowck.rs:5:2: 5:2
    }
}

promoted[0] in main: &mut [u8; 0] = {
    let mut _0: &mut [u8; 0];            // return place in scope 0 at ui/consts/const-eval/promote_mutable_zst_mir_borrowck.rs:4:35: 4:42
    let mut _1: [u8; 0];                 // in scope 0 at ui/consts/const-eval/promote_mutable_zst_mir_borrowck.rs:4:40: 4:42

    bb0: {
        _1 = [];                         // scope 0 at ui/consts/const-eval/promote_mutable_zst_mir_borrowck.rs:4:40: 4:42
        _0 = &mut _1;                    // scope 0 at ui/consts/const-eval/promote_mutable_zst_mir_borrowck.rs:4:35: 4:42
        return;                          // scope 0 at ui/consts/const-eval/promote_mutable_zst_mir_borrowck.rs:4:35: 4:42
    }
}

main::{constant#0}: usize = {
    let mut _0: usize;                   // return place in scope 0 at ui/consts/const-eval/promote_mutable_zst_mir_borrowck.rs:4:30: 4:31

    bb0: {
        _0 = const 0_usize;              // scope 0 at ui/consts/const-eval/promote_mutable_zst_mir_borrowck.rs:4:30: 4:31
        return;                          // scope 0 at ui/consts/const-eval/promote_mutable_zst_mir_borrowck.rs:4:30: 4:31
    }
}
