// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
const FOO: *const u8 = {
    let mut _0: *const u8;
    let mut _1: *const Opaque;
    let mut _2: *const i32;
    let mut _3: *const i32;
    let _4: &i32;
    let _5: i32;
    let mut _6: &i32;

    bb0: {
        StorageLive(_1);
        StorageLive(_2);
        StorageLive(_3);
        StorageLive(_4);
        _6 = const _;
        _4 = &(*_6);
        _3 = &raw const (*_4);
        _2 = _3;
        _1 = move _2 as *const Opaque (PtrToPtr);
        StorageDead(_2);
        _0 = move _1 as *const u8 (PtrToPtr);
        StorageDead(_4);
        StorageDead(_3);
        StorageDead(_1);
        return;
    }
}

promoted[0] in FOO: &i32 = {
    let mut _0: &i32;
    let mut _1: i32;

    bb0: {
        _1 = const 42_i32;
        _0 = &_1;
        return;
    }
}

fn main() -> () {
    let mut _0: ();
    scope 1 {
        debug _foo => const _;
    }

    bb0: {
        return;
    }
}
