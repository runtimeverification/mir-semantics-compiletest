// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
const FOO: *const u8 = {
    let mut _0: *const u8;               // return place in scope 0 at ui/consts/const-eval/extern_fat_pointer.rs:9:12: 9:21
    let mut _1: *const Opaque;           // in scope 0 at ui/consts/const-eval/extern_fat_pointer.rs:9:24: 9:56
    let mut _2: *const i32;              // in scope 0 at ui/consts/const-eval/extern_fat_pointer.rs:9:24: 9:39
    let mut _3: *const i32;              // in scope 0 at ui/consts/const-eval/extern_fat_pointer.rs:9:24: 9:39
    let _4: &i32;                        // in scope 0 at ui/consts/const-eval/extern_fat_pointer.rs:9:24: 9:27
    let _5: i32;                         // in scope 0 at ui/consts/const-eval/extern_fat_pointer.rs:9:25: 9:27
    let mut _6: &i32;                    // in scope 0 at ui/consts/const-eval/extern_fat_pointer.rs:9:24: 9:27

    bb0: {
        StorageLive(_1);                 // scope 0 at ui/consts/const-eval/extern_fat_pointer.rs:9:24: 9:56
        StorageLive(_2);                 // scope 0 at ui/consts/const-eval/extern_fat_pointer.rs:9:24: 9:39
        StorageLive(_3);                 // scope 0 at ui/consts/const-eval/extern_fat_pointer.rs:9:24: 9:39
        StorageLive(_4);                 // scope 0 at ui/consts/const-eval/extern_fat_pointer.rs:9:24: 9:27
        _6 = const _;                    // scope 0 at ui/consts/const-eval/extern_fat_pointer.rs:9:24: 9:27
                                         // mir::Constant
                                         // + span: ui/consts/const-eval/extern_fat_pointer.rs:9:24: 9:27
                                         // + literal: Const { ty: &i32, val: Unevaluated(FOO, [], Some(promoted[0])) }
        _4 = &(*_6);                     // scope 0 at ui/consts/const-eval/extern_fat_pointer.rs:9:24: 9:27
        _3 = &raw const (*_4);           // scope 0 at ui/consts/const-eval/extern_fat_pointer.rs:9:24: 9:27
        _2 = _3;                         // scope 0 at ui/consts/const-eval/extern_fat_pointer.rs:9:24: 9:39
        _1 = move _2 as *const Opaque (PtrToPtr); // scope 0 at ui/consts/const-eval/extern_fat_pointer.rs:9:24: 9:56
        StorageDead(_2);                 // scope 0 at ui/consts/const-eval/extern_fat_pointer.rs:9:55: 9:56
        _0 = move _1 as *const u8 (PtrToPtr); // scope 0 at ui/consts/const-eval/extern_fat_pointer.rs:9:24: 9:69
        StorageDead(_4);                 // scope 0 at ui/consts/const-eval/extern_fat_pointer.rs:9:68: 9:69
        StorageDead(_3);                 // scope 0 at ui/consts/const-eval/extern_fat_pointer.rs:9:68: 9:69
        StorageDead(_1);                 // scope 0 at ui/consts/const-eval/extern_fat_pointer.rs:9:68: 9:69
        return;                          // scope 0 at ui/consts/const-eval/extern_fat_pointer.rs:9:1: 9:70
    }
}

promoted[0] in FOO: &i32 = {
    let mut _0: &i32;                    // return place in scope 0 at ui/consts/const-eval/extern_fat_pointer.rs:9:24: 9:27
    let mut _1: i32;                     // in scope 0 at ui/consts/const-eval/extern_fat_pointer.rs:9:25: 9:27

    bb0: {
        _1 = const 42_i32;               // scope 0 at ui/consts/const-eval/extern_fat_pointer.rs:9:25: 9:27
        _0 = &_1;                        // scope 0 at ui/consts/const-eval/extern_fat_pointer.rs:9:24: 9:27
        return;                          // scope 0 at ui/consts/const-eval/extern_fat_pointer.rs:9:24: 9:27
    }
}

fn main() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/consts/const-eval/extern_fat_pointer.rs:11:11: 11:11
    let _1: *const u8;                   // in scope 0 at ui/consts/const-eval/extern_fat_pointer.rs:12:9: 12:13
    scope 1 {
        debug _foo => _1;                // in scope 1 at ui/consts/const-eval/extern_fat_pointer.rs:12:9: 12:13
    }

    bb0: {
        _1 = const _;                    // scope 0 at ui/consts/const-eval/extern_fat_pointer.rs:12:16: 12:19
                                         // mir::Constant
                                         // + span: ui/consts/const-eval/extern_fat_pointer.rs:12:16: 12:19
                                         // + literal: Const { ty: *const u8, val: Unevaluated(FOO, [], None) }
        return;                          // scope 0 at ui/consts/const-eval/extern_fat_pointer.rs:13:2: 13:2
    }
}
