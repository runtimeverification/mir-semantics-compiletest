// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
static NONE: Option<String> = {
    let mut _0: std::option::Option<std::string::String>; // return place in scope 0 at ui/consts/const-eval/promote-static.rs:5:14: 5:28

    bb0: {
        _0 = Option::<String>::None;     // scope 0 at ui/consts/const-eval/promote-static.rs:5:31: 5:35
        return;                          // scope 0 at ui/consts/const-eval/promote-static.rs:5:1: 5:36
    }
}

static NONE_REF_REF: &&Option<String> = {
    let mut _0: &&std::option::Option<std::string::String>; // return place in scope 0 at ui/consts/const-eval/promote-static.rs:7:22: 7:38
    let _1: &&std::option::Option<std::string::String>; // in scope 0 at ui/consts/const-eval/promote-static.rs:8:9: 8:10
    let _2: &std::option::Option<std::string::String>; // in scope 0 at ui/consts/const-eval/promote-static.rs:8:14: 8:19
    let _3: &std::option::Option<std::string::String>; // in scope 0 at ui/consts/const-eval/promote-static.rs:8:15: 8:19
    let mut _4: &&std::option::Option<std::string::String>; // in scope 0 at ui/consts/const-eval/promote-static.rs:8:13: 8:19
    scope 1 {
        debug x => _1;                   // in scope 1 at ui/consts/const-eval/promote-static.rs:8:9: 8:10
    }

    bb0: {
        StorageLive(_1);                 // scope 0 at ui/consts/const-eval/promote-static.rs:8:9: 8:10
        _4 = const _;                    // scope 0 at ui/consts/const-eval/promote-static.rs:8:13: 8:19
                                         // mir::Constant
                                         // + span: ui/consts/const-eval/promote-static.rs:8:13: 8:19
                                         // + literal: Const { ty: &&Option<String>, val: Unevaluated(NONE_REF_REF, [], Some(promoted[0])) }
        _1 = &(*_4);                     // scope 0 at ui/consts/const-eval/promote-static.rs:8:13: 8:19
        _0 = &(*_1);                     // scope 1 at ui/consts/const-eval/promote-static.rs:9:5: 9:6
        StorageDead(_1);                 // scope 0 at ui/consts/const-eval/promote-static.rs:10:1: 10:2
        return;                          // scope 0 at ui/consts/const-eval/promote-static.rs:7:1: 10:3
    }
}

promoted[0] in NONE_REF_REF: &&Option<String> = {
    let mut _0: &&std::option::Option<std::string::String>; // return place in scope 0 at ui/consts/const-eval/promote-static.rs:8:13: 8:19
    let mut _1: &std::option::Option<std::string::String>; // in scope 0 at ui/consts/const-eval/promote-static.rs:8:14: 8:19
    let mut _2: &std::option::Option<std::string::String>; // in scope 0 at ui/consts/const-eval/promote-static.rs:8:15: 8:19

    bb0: {
        _2 = const {alloc1: &Option<String>}; // scope 0 at ui/consts/const-eval/promote-static.rs:8:15: 8:19
                                         // mir::Constant
                                         // + span: ui/consts/const-eval/promote-static.rs:8:15: 8:19
                                         // + literal: Const { ty: &Option<String>, val: Value(Scalar(alloc1)) }
        _1 = &(*_2);                     // scope 0 at ui/consts/const-eval/promote-static.rs:8:14: 8:19
        _0 = &_1;                        // scope 0 at ui/consts/const-eval/promote-static.rs:8:13: 8:19
        return;                          // scope 0 at ui/consts/const-eval/promote-static.rs:8:13: 8:19
    }
}

alloc1 (static: NONE, size: 24, align: 8) {
    0x00 │ __ __ __ __ __ __ __ __ 00 00 00 00 00 00 00 00 │ ░░░░░░░░........
    0x10 │ __ __ __ __ __ __ __ __                         │ ░░░░░░░░
}

fn main() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/consts/const-eval/promote-static.rs:12:11: 12:11
    let _1: ();                          // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:62
    let mut _2: std::fmt::Arguments<'_>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _3: &[&str];                 // in scope 0 at ui/consts/const-eval/promote-static.rs:13:14: 13:20
    let mut _4: &[&str; 2];              // in scope 0 at ui/consts/const-eval/promote-static.rs:13:14: 13:20
    let _5: &[&str; 2];                  // in scope 0 at ui/consts/const-eval/promote-static.rs:13:14: 13:20
    let mut _6: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _7: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let _8: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let _9: [core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _10: core::fmt::ArgumentV1<'_>; // in scope 0 at ui/consts/const-eval/promote-static.rs:13:22: 13:34
    let mut _11: &&&std::option::Option<std::string::String>; // in scope 0 at ui/consts/const-eval/promote-static.rs:13:22: 13:34
    let _12: &&&std::option::Option<std::string::String>; // in scope 0 at ui/consts/const-eval/promote-static.rs:13:22: 13:34
    let _13: &&&std::option::Option<std::string::String>; // in scope 0 at ui/consts/const-eval/promote-static.rs:13:22: 13:34
    let mut _14: &[&str; 2];             // in scope 0 at ui/consts/const-eval/promote-static.rs:13:14: 13:20

    bb0: {
        _14 = const _;                   // scope 0 at ui/consts/const-eval/promote-static.rs:13:14: 13:20
                                         // mir::Constant
                                         // + span: ui/consts/const-eval/promote-static.rs:13:14: 13:20
                                         // + literal: Const { ty: &[&str; 2], val: Unevaluated(main, [], Some(promoted[0])) }
        _5 = _14;                        // scope 0 at ui/consts/const-eval/promote-static.rs:13:14: 13:20
        _4 = _5;                         // scope 0 at ui/consts/const-eval/promote-static.rs:13:14: 13:20
        _3 = move _4 as &[&str] (Pointer(Unsize)); // scope 0 at ui/consts/const-eval/promote-static.rs:13:14: 13:20
        _13 = const {alloc2: &&&Option<String>}; // scope 0 at ui/consts/const-eval/promote-static.rs:13:22: 13:34
                                         // mir::Constant
                                         // + span: ui/consts/const-eval/promote-static.rs:13:22: 13:34
                                         // + literal: Const { ty: &&&Option<String>, val: Value(Scalar(alloc2)) }
        _12 = _13;                       // scope 0 at ui/consts/const-eval/promote-static.rs:13:22: 13:34
        _11 = _12;                       // scope 0 at ui/consts/const-eval/promote-static.rs:13:22: 13:34
        _10 = core::fmt::ArgumentV1::<'_>::new_debug::<&&Option<String>>(move _11) -> bb1; // scope 0 at ui/consts/const-eval/promote-static.rs:13:22: 13:34
                                         // mir::Constant
                                         // + span: ui/consts/const-eval/promote-static.rs:13:22: 13:34
                                         // + user_ty: UserType(1)
                                         // + literal: Const { ty: for<'b> fn(&'b &&Option<String>) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_debug::<&&Option<String>>}, val: Value(<ZST>) }
    }

    bb1: {
        _9 = [move _10];                 // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _8 = &_9;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _7 = _8;                         // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _6 = move _7 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _2 = Arguments::<'_>::new_v1(move _3, move _6) -> bb2; // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb2: {
        _1 = _print(move _2) -> bb3;     // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:62
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:27
                                         // + literal: Const { ty: for<'a> fn(Arguments<'a>) {_print}, val: Value(<ZST>) }
    }

    bb3: {
        return;                          // scope 0 at ui/consts/const-eval/promote-static.rs:14:2: 14:2
    }
}

alloc2 (static: NONE_REF_REF, size: 8, align: 8) {
    ╾───────alloc7────────╼                         │ ╾──────╼
}

alloc7 (size: 8, align: 8) {
    ╾───────alloc1────────╼                         │ ╾──────╼
}

alloc1 (static: NONE, size: 24, align: 8) {
    0x00 │ __ __ __ __ __ __ __ __ 00 00 00 00 00 00 00 00 │ ░░░░░░░░........
    0x10 │ __ __ __ __ __ __ __ __                         │ ░░░░░░░░
}

promoted[0] in main: &[&str; 2] = {
    let mut _0: &[&str; 2];              // return place in scope 0 at ui/consts/const-eval/promote-static.rs:13:14: 13:20
    let mut _1: [&str; 2];               // in scope 0 at ui/consts/const-eval/promote-static.rs:13:14: 13:20

    bb0: {
        _1 = [const "", const "\n"];     // scope 0 at ui/consts/const-eval/promote-static.rs:13:14: 13:20
                                         // mir::Constant
                                         // + span: ui/consts/const-eval/promote-static.rs:13:14: 13:20
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
                                         // mir::Constant
                                         // + span: ui/consts/const-eval/promote-static.rs:13:14: 13:20
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at ui/consts/const-eval/promote-static.rs:13:14: 13:20
        return;                          // scope 0 at ui/consts/const-eval/promote-static.rs:13:14: 13:20
    }
}
