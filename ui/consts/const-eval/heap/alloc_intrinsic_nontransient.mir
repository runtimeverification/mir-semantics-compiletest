// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
const FOO: &i32 = {
    let mut _0: &i32;                    // return place in scope 0 at ui/consts/const-eval/heap/alloc_intrinsic_nontransient.rs:7:12: 7:16

    bb0: {
        ConstEvalCounter;                // scope 0 at ui/consts/const-eval/heap/alloc_intrinsic_nontransient.rs:7:19: 7:24
        _0 = foo() -> bb1;               // scope 0 at ui/consts/const-eval/heap/alloc_intrinsic_nontransient.rs:7:19: 7:24
                                         // mir::Constant
                                         // + span: ui/consts/const-eval/heap/alloc_intrinsic_nontransient.rs:7:19: 7:22
                                         // + literal: Const { ty: fn() -> &'static i32 {foo}, val: Value(<ZST>) }
    }

    bb1: {
        return;                          // scope 0 at ui/consts/const-eval/heap/alloc_intrinsic_nontransient.rs:7:1: 7:25
    }
}

fn foo() -> &i32 {
    let mut _0: &i32;                    // return place in scope 0 at ui/consts/const-eval/heap/alloc_intrinsic_nontransient.rs:15:14: 15:17
    let _1: *mut i32;                    // in scope 0 at ui/consts/const-eval/heap/alloc_intrinsic_nontransient.rs:10:9: 10:10
    let mut _3: *mut u8;                 // in scope 0 at ui/consts/const-eval/heap/alloc_intrinsic_nontransient.rs:11:17: 11:49
    scope 1 {
        debug t => _1;                   // in scope 1 at ui/consts/const-eval/heap/alloc_intrinsic_nontransient.rs:10:9: 10:10
        scope 4 {
        }
    }
    scope 2 {
        let _2: *mut i32;                // in scope 2 at ui/consts/const-eval/heap/alloc_intrinsic_nontransient.rs:11:13: 11:14
        scope 3 {
            debug i => _2;               // in scope 3 at ui/consts/const-eval/heap/alloc_intrinsic_nontransient.rs:11:13: 11:14
        }
    }

    bb0: {
        _3 = const_allocate(const 4_usize, const 4_usize) -> bb1; // scope 2 at ui/consts/const-eval/heap/alloc_intrinsic_nontransient.rs:11:17: 11:49
                                         // mir::Constant
                                         // + span: ui/consts/const-eval/heap/alloc_intrinsic_nontransient.rs:11:17: 11:43
                                         // + literal: Const { ty: unsafe extern "rust-intrinsic" fn(usize, usize) -> *mut u8 {const_allocate}, val: Value(<ZST>) }
    }

    bb1: {
        _2 = move _3 as *mut i32 (PtrToPtr); // scope 2 at ui/consts/const-eval/heap/alloc_intrinsic_nontransient.rs:11:17: 11:62
        (*_2) = const 20_i32;            // scope 3 at ui/consts/const-eval/heap/alloc_intrinsic_nontransient.rs:12:9: 12:16
        _1 = _2;                         // scope 3 at ui/consts/const-eval/heap/alloc_intrinsic_nontransient.rs:13:9: 13:10
        _0 = &(*_1);                     // scope 4 at ui/consts/const-eval/heap/alloc_intrinsic_nontransient.rs:15:14: 15:17
        return;                          // scope 0 at ui/consts/const-eval/heap/alloc_intrinsic_nontransient.rs:16:2: 16:2
    }
}

// MIR FOR CTFE
fn foo() -> &i32 {
    let mut _0: &i32;                    // return place in scope 0 at ui/consts/const-eval/heap/alloc_intrinsic_nontransient.rs:9:19: 9:31
    let _1: *mut i32;                    // in scope 0 at ui/consts/const-eval/heap/alloc_intrinsic_nontransient.rs:10:9: 10:10
    let mut _3: *mut u8;                 // in scope 0 at ui/consts/const-eval/heap/alloc_intrinsic_nontransient.rs:11:17: 11:49
    let _4: &i32;                        // in scope 0 at ui/consts/const-eval/heap/alloc_intrinsic_nontransient.rs:15:14: 15:17
    scope 1 {
        debug t => _1;                   // in scope 1 at ui/consts/const-eval/heap/alloc_intrinsic_nontransient.rs:10:9: 10:10
        scope 4 {
        }
    }
    scope 2 {
        let _2: *mut i32;                // in scope 2 at ui/consts/const-eval/heap/alloc_intrinsic_nontransient.rs:11:13: 11:14
        scope 3 {
            debug i => _2;               // in scope 3 at ui/consts/const-eval/heap/alloc_intrinsic_nontransient.rs:11:13: 11:14
        }
    }

    bb0: {
        StorageLive(_1);                 // scope 0 at ui/consts/const-eval/heap/alloc_intrinsic_nontransient.rs:10:9: 10:10
        StorageLive(_2);                 // scope 2 at ui/consts/const-eval/heap/alloc_intrinsic_nontransient.rs:11:13: 11:14
        StorageLive(_3);                 // scope 2 at ui/consts/const-eval/heap/alloc_intrinsic_nontransient.rs:11:17: 11:49
        ConstEvalCounter;                // scope 2 at ui/consts/const-eval/heap/alloc_intrinsic_nontransient.rs:11:17: 11:49
        _3 = const_allocate(const 4_usize, const 4_usize) -> bb1; // scope 2 at ui/consts/const-eval/heap/alloc_intrinsic_nontransient.rs:11:17: 11:49
                                         // mir::Constant
                                         // + span: ui/consts/const-eval/heap/alloc_intrinsic_nontransient.rs:11:17: 11:43
                                         // + literal: Const { ty: unsafe extern "rust-intrinsic" fn(usize, usize) -> *mut u8 {const_allocate}, val: Value(<ZST>) }
    }

    bb1: {
        _2 = move _3 as *mut i32 (PtrToPtr); // scope 2 at ui/consts/const-eval/heap/alloc_intrinsic_nontransient.rs:11:17: 11:62
        StorageDead(_3);                 // scope 2 at ui/consts/const-eval/heap/alloc_intrinsic_nontransient.rs:11:61: 11:62
        (*_2) = const 20_i32;            // scope 3 at ui/consts/const-eval/heap/alloc_intrinsic_nontransient.rs:12:9: 12:16
        _1 = _2;                         // scope 3 at ui/consts/const-eval/heap/alloc_intrinsic_nontransient.rs:13:9: 13:10
        StorageDead(_2);                 // scope 2 at ui/consts/const-eval/heap/alloc_intrinsic_nontransient.rs:14:5: 14:6
        StorageLive(_4);                 // scope 4 at ui/consts/const-eval/heap/alloc_intrinsic_nontransient.rs:15:14: 15:17
        _4 = &(*_1);                     // scope 4 at ui/consts/const-eval/heap/alloc_intrinsic_nontransient.rs:15:14: 15:17
        _0 = &(*_4);                     // scope 4 at ui/consts/const-eval/heap/alloc_intrinsic_nontransient.rs:15:14: 15:17
        StorageDead(_1);                 // scope 0 at ui/consts/const-eval/heap/alloc_intrinsic_nontransient.rs:16:1: 16:2
        StorageDead(_4);                 // scope 0 at ui/consts/const-eval/heap/alloc_intrinsic_nontransient.rs:16:1: 16:2
        return;                          // scope 0 at ui/consts/const-eval/heap/alloc_intrinsic_nontransient.rs:16:2: 16:2
    }
}

fn main() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/consts/const-eval/heap/alloc_intrinsic_nontransient.rs:17:11: 17:11
    let mut _1: (&i32, &i32);            // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _2: &i32;                    // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let _3: &i32;                        // in scope 0 at ui/consts/const-eval/heap/alloc_intrinsic_nontransient.rs:18:17: 18:20
    let mut _4: &i32;                    // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let _5: &i32;                        // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
    let _6: &i32;                        // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
    let mut _8: &i32;                    // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    scope 1 {
        debug left_val => _5;            // in scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        debug right_val => _6;           // in scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        let _7: core::panicking::AssertKind; // in scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
        scope 2 {
            debug kind => _7;            // in scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
        }
    }

    bb0: {
        _3 = const _;                    // scope 0 at ui/consts/const-eval/heap/alloc_intrinsic_nontransient.rs:18:17: 18:20
                                         // mir::Constant
                                         // + span: ui/consts/const-eval/heap/alloc_intrinsic_nontransient.rs:18:17: 18:20
                                         // + literal: Const { ty: &i32, val: Unevaluated(FOO, [], None) }
        _2 = _3;                         // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _8 = const _;                    // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // + literal: Const { ty: &i32, val: Unevaluated(main, [], Some(promoted[0])) }
        _4 = _8;                         // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _1 = (move _2, move _4);         // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _5 = (_1.0: &i32);               // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _6 = (_1.1: &i32);               // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        return;                          // scope 0 at ui/consts/const-eval/heap/alloc_intrinsic_nontransient.rs:19:2: 19:2
    }
}

promoted[0] in main: &i32 = {
    let mut _0: &i32;                    // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _1: i32;                     // in scope 0 at ui/consts/const-eval/heap/alloc_intrinsic_nontransient.rs:18:22: 18:24

    bb0: {
        _1 = const 20_i32;               // scope 0 at ui/consts/const-eval/heap/alloc_intrinsic_nontransient.rs:18:22: 18:24
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    }
}
