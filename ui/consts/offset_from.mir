// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
const OFFSET: usize = {
    let mut _0: usize;                   // return place in scope 0 at ui/consts/offset_from.rs:16:19: 16:24
    let _1: std::mem::MaybeUninit<Struct>; // in scope 0 at ui/consts/offset_from.rs:17:9: 17:15
    let mut _3: *const std::mem::MaybeUninit<Struct>; // in scope 0 at ui/consts/offset_from.rs:18:35: 18:54
    let mut _4: *const std::mem::MaybeUninit<Struct>; // in scope 0 at ui/consts/offset_from.rs:18:35: 18:54
    let _5: &std::mem::MaybeUninit<Struct>; // in scope 0 at ui/consts/offset_from.rs:18:35: 18:42
    let mut _7: *const ();               // in scope 0 at ui/consts/offset_from.rs:22:30: 22:61
    let _8: &();                         // in scope 0 at ui/consts/offset_from.rs:22:30: 22:48
    let mut _10: *const u8;              // in scope 0 at ui/consts/offset_from.rs:23:27: 23:36
    let mut _11: *const u8;              // in scope 0 at ui/consts/offset_from.rs:23:49: 23:70
    let mut _12: *const Struct;          // in scope 0 at ui/consts/offset_from.rs:23:49: 23:57
    let mut _13: isize;                  // in scope 0 at ui/consts/offset_from.rs:24:5: 24:11
    scope 1 {
        debug uninit => _1;              // in scope 1 at ui/consts/offset_from.rs:17:9: 17:15
        let _2: *const Struct;           // in scope 1 at ui/consts/offset_from.rs:18:9: 18:17
        scope 2 {
            debug base_ptr => _2;        // in scope 2 at ui/consts/offset_from.rs:18:9: 18:17
            let _6: *const u8;           // in scope 2 at ui/consts/offset_from.rs:22:9: 22:18
            scope 3 {
                debug field_ptr => _6;   // in scope 3 at ui/consts/offset_from.rs:22:9: 22:18
                let _9: isize;           // in scope 3 at ui/consts/offset_from.rs:23:9: 23:15
                scope 5 {
                    debug offset => _9;  // in scope 5 at ui/consts/offset_from.rs:23:9: 23:15
                }
                scope 6 {
                }
            }
            scope 4 {
            }
        }
    }

    bb0: {
        StorageLive(_1);                 // scope 0 at ui/consts/offset_from.rs:17:9: 17:15
        ConstEvalCounter;                // scope 0 at ui/consts/offset_from.rs:17:18: 17:59
        _1 = MaybeUninit::<Struct>::uninit() -> bb1; // scope 0 at ui/consts/offset_from.rs:17:18: 17:59
                                         // mir::Constant
                                         // + span: ui/consts/offset_from.rs:17:18: 17:57
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: fn() -> MaybeUninit<Struct> {MaybeUninit::<Struct>::uninit}, val: Value(<ZST>) }
    }

    bb1: {
        StorageLive(_2);                 // scope 1 at ui/consts/offset_from.rs:18:9: 18:17
        StorageLive(_3);                 // scope 1 at ui/consts/offset_from.rs:18:35: 18:54
        StorageLive(_4);                 // scope 1 at ui/consts/offset_from.rs:18:35: 18:54
        StorageLive(_5);                 // scope 1 at ui/consts/offset_from.rs:18:35: 18:42
        _5 = &_1;                        // scope 1 at ui/consts/offset_from.rs:18:35: 18:42
        _4 = &raw const (*_5);           // scope 1 at ui/consts/offset_from.rs:18:35: 18:42
        _3 = _4;                         // scope 1 at ui/consts/offset_from.rs:18:35: 18:54
        _2 = move _3 as *const Struct (PtrToPtr); // scope 1 at ui/consts/offset_from.rs:18:35: 18:71
        StorageDead(_3);                 // scope 1 at ui/consts/offset_from.rs:18:70: 18:71
        StorageDead(_5);                 // scope 1 at ui/consts/offset_from.rs:18:71: 18:72
        StorageDead(_4);                 // scope 1 at ui/consts/offset_from.rs:18:71: 18:72
        StorageLive(_6);                 // scope 2 at ui/consts/offset_from.rs:22:9: 22:18
        StorageLive(_7);                 // scope 4 at ui/consts/offset_from.rs:22:30: 22:61
        StorageLive(_8);                 // scope 4 at ui/consts/offset_from.rs:22:30: 22:48
        _8 = &((*_2).0: ());             // scope 4 at ui/consts/offset_from.rs:22:30: 22:48
        _7 = &raw const (*_8);           // scope 4 at ui/consts/offset_from.rs:22:30: 22:48
        _6 = move _7 as *const u8 (PtrToPtr); // scope 4 at ui/consts/offset_from.rs:22:30: 22:74
        StorageDead(_7);                 // scope 4 at ui/consts/offset_from.rs:22:73: 22:74
        StorageDead(_8);                 // scope 2 at ui/consts/offset_from.rs:22:76: 22:77
        StorageLive(_9);                 // scope 3 at ui/consts/offset_from.rs:23:9: 23:15
        StorageLive(_10);                // scope 6 at ui/consts/offset_from.rs:23:27: 23:36
        _10 = _6;                        // scope 6 at ui/consts/offset_from.rs:23:27: 23:36
        StorageLive(_11);                // scope 6 at ui/consts/offset_from.rs:23:49: 23:70
        StorageLive(_12);                // scope 6 at ui/consts/offset_from.rs:23:49: 23:57
        _12 = _2;                        // scope 6 at ui/consts/offset_from.rs:23:49: 23:57
        _11 = move _12 as *const u8 (PtrToPtr); // scope 6 at ui/consts/offset_from.rs:23:49: 23:70
        StorageDead(_12);                // scope 6 at ui/consts/offset_from.rs:23:69: 23:70
        ConstEvalCounter;                // scope 6 at ui/consts/offset_from.rs:23:27: 23:71
        _9 = ptr::const_ptr::<impl *const u8>::offset_from(move _10, move _11) -> bb2; // scope 6 at ui/consts/offset_from.rs:23:27: 23:71
                                         // mir::Constant
                                         // + span: ui/consts/offset_from.rs:23:37: 23:48
                                         // + literal: Const { ty: unsafe fn(*const u8, *const u8) -> isize {ptr::const_ptr::<impl *const u8>::offset_from}, val: Value(<ZST>) }
    }

    bb2: {
        StorageDead(_11);                // scope 6 at ui/consts/offset_from.rs:23:70: 23:71
        StorageDead(_10);                // scope 6 at ui/consts/offset_from.rs:23:70: 23:71
        StorageLive(_13);                // scope 5 at ui/consts/offset_from.rs:24:5: 24:11
        _13 = _9;                        // scope 5 at ui/consts/offset_from.rs:24:5: 24:11
        _0 = move _13 as usize (IntToInt); // scope 5 at ui/consts/offset_from.rs:24:5: 24:20
        StorageDead(_13);                // scope 5 at ui/consts/offset_from.rs:24:19: 24:20
        StorageDead(_9);                 // scope 3 at ui/consts/offset_from.rs:25:1: 25:2
        StorageDead(_6);                 // scope 2 at ui/consts/offset_from.rs:25:1: 25:2
        StorageDead(_2);                 // scope 1 at ui/consts/offset_from.rs:25:1: 25:2
        StorageDead(_1);                 // scope 0 at ui/consts/offset_from.rs:25:1: 25:2
        return;                          // scope 0 at ui/consts/offset_from.rs:16:1: 25:3
    }
}

const OFFSET_2: usize = {
    let mut _0: usize;                   // return place in scope 0 at ui/consts/offset_from.rs:27:21: 27:26
    let _1: std::mem::MaybeUninit<Struct2>; // in scope 0 at ui/consts/offset_from.rs:28:9: 28:15
    let mut _3: *const std::mem::MaybeUninit<Struct2>; // in scope 0 at ui/consts/offset_from.rs:29:36: 29:55
    let mut _4: *const std::mem::MaybeUninit<Struct2>; // in scope 0 at ui/consts/offset_from.rs:29:36: 29:55
    let _5: &std::mem::MaybeUninit<Struct2>; // in scope 0 at ui/consts/offset_from.rs:29:36: 29:43
    let _7: &u8;                         // in scope 0 at ui/consts/offset_from.rs:30:30: 30:48
    let mut _9: *const u8;               // in scope 0 at ui/consts/offset_from.rs:31:27: 31:36
    let mut _10: *const u8;              // in scope 0 at ui/consts/offset_from.rs:31:49: 31:70
    let mut _11: *const Struct2;         // in scope 0 at ui/consts/offset_from.rs:31:49: 31:57
    let mut _12: isize;                  // in scope 0 at ui/consts/offset_from.rs:32:5: 32:11
    scope 1 {
        debug uninit => _1;              // in scope 1 at ui/consts/offset_from.rs:28:9: 28:15
        let _2: *const Struct2;          // in scope 1 at ui/consts/offset_from.rs:29:9: 29:17
        scope 2 {
            debug base_ptr => _2;        // in scope 2 at ui/consts/offset_from.rs:29:9: 29:17
            let _6: *const u8;           // in scope 2 at ui/consts/offset_from.rs:30:9: 30:18
            scope 3 {
                debug field_ptr => _6;   // in scope 3 at ui/consts/offset_from.rs:30:9: 30:18
                let _8: isize;           // in scope 3 at ui/consts/offset_from.rs:31:9: 31:15
                scope 5 {
                    debug offset => _8;  // in scope 5 at ui/consts/offset_from.rs:31:9: 31:15
                }
                scope 6 {
                }
            }
            scope 4 {
            }
        }
    }

    bb0: {
        StorageLive(_1);                 // scope 0 at ui/consts/offset_from.rs:28:9: 28:15
        ConstEvalCounter;                // scope 0 at ui/consts/offset_from.rs:28:18: 28:60
        _1 = MaybeUninit::<Struct2>::uninit() -> bb1; // scope 0 at ui/consts/offset_from.rs:28:18: 28:60
                                         // mir::Constant
                                         // + span: ui/consts/offset_from.rs:28:18: 28:58
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: fn() -> MaybeUninit<Struct2> {MaybeUninit::<Struct2>::uninit}, val: Value(<ZST>) }
    }

    bb1: {
        StorageLive(_2);                 // scope 1 at ui/consts/offset_from.rs:29:9: 29:17
        StorageLive(_3);                 // scope 1 at ui/consts/offset_from.rs:29:36: 29:55
        StorageLive(_4);                 // scope 1 at ui/consts/offset_from.rs:29:36: 29:55
        StorageLive(_5);                 // scope 1 at ui/consts/offset_from.rs:29:36: 29:43
        _5 = &_1;                        // scope 1 at ui/consts/offset_from.rs:29:36: 29:43
        _4 = &raw const (*_5);           // scope 1 at ui/consts/offset_from.rs:29:36: 29:43
        _3 = _4;                         // scope 1 at ui/consts/offset_from.rs:29:36: 29:55
        _2 = move _3 as *const Struct2 (PtrToPtr); // scope 1 at ui/consts/offset_from.rs:29:36: 29:73
        StorageDead(_3);                 // scope 1 at ui/consts/offset_from.rs:29:72: 29:73
        StorageDead(_5);                 // scope 1 at ui/consts/offset_from.rs:29:73: 29:74
        StorageDead(_4);                 // scope 1 at ui/consts/offset_from.rs:29:73: 29:74
        StorageLive(_6);                 // scope 2 at ui/consts/offset_from.rs:30:9: 30:18
        StorageLive(_7);                 // scope 4 at ui/consts/offset_from.rs:30:30: 30:48
        _7 = &((*_2).1: u8);             // scope 4 at ui/consts/offset_from.rs:30:30: 30:48
        _6 = &raw const (*_7);           // scope 4 at ui/consts/offset_from.rs:30:30: 30:48
        StorageDead(_7);                 // scope 2 at ui/consts/offset_from.rs:30:63: 30:64
        StorageLive(_8);                 // scope 3 at ui/consts/offset_from.rs:31:9: 31:15
        StorageLive(_9);                 // scope 6 at ui/consts/offset_from.rs:31:27: 31:36
        _9 = _6;                         // scope 6 at ui/consts/offset_from.rs:31:27: 31:36
        StorageLive(_10);                // scope 6 at ui/consts/offset_from.rs:31:49: 31:70
        StorageLive(_11);                // scope 6 at ui/consts/offset_from.rs:31:49: 31:57
        _11 = _2;                        // scope 6 at ui/consts/offset_from.rs:31:49: 31:57
        _10 = move _11 as *const u8 (PtrToPtr); // scope 6 at ui/consts/offset_from.rs:31:49: 31:70
        StorageDead(_11);                // scope 6 at ui/consts/offset_from.rs:31:69: 31:70
        ConstEvalCounter;                // scope 6 at ui/consts/offset_from.rs:31:27: 31:71
        _8 = ptr::const_ptr::<impl *const u8>::offset_from(move _9, move _10) -> bb2; // scope 6 at ui/consts/offset_from.rs:31:27: 31:71
                                         // mir::Constant
                                         // + span: ui/consts/offset_from.rs:31:37: 31:48
                                         // + literal: Const { ty: unsafe fn(*const u8, *const u8) -> isize {ptr::const_ptr::<impl *const u8>::offset_from}, val: Value(<ZST>) }
    }

    bb2: {
        StorageDead(_10);                // scope 6 at ui/consts/offset_from.rs:31:70: 31:71
        StorageDead(_9);                 // scope 6 at ui/consts/offset_from.rs:31:70: 31:71
        StorageLive(_12);                // scope 5 at ui/consts/offset_from.rs:32:5: 32:11
        _12 = _8;                        // scope 5 at ui/consts/offset_from.rs:32:5: 32:11
        _0 = move _12 as usize (IntToInt); // scope 5 at ui/consts/offset_from.rs:32:5: 32:20
        StorageDead(_12);                // scope 5 at ui/consts/offset_from.rs:32:19: 32:20
        StorageDead(_8);                 // scope 3 at ui/consts/offset_from.rs:33:1: 33:2
        StorageDead(_6);                 // scope 2 at ui/consts/offset_from.rs:33:1: 33:2
        StorageDead(_2);                 // scope 1 at ui/consts/offset_from.rs:33:1: 33:2
        StorageDead(_1);                 // scope 0 at ui/consts/offset_from.rs:33:1: 33:2
        return;                          // scope 0 at ui/consts/offset_from.rs:27:1: 33:3
    }
}

const OVERFLOW: isize = {
    let mut _0: isize;                   // return place in scope 0 at ui/consts/offset_from.rs:35:21: 35:26
    let _1: std::mem::MaybeUninit<Struct2>; // in scope 0 at ui/consts/offset_from.rs:36:9: 36:15
    let mut _3: *const std::mem::MaybeUninit<Struct2>; // in scope 0 at ui/consts/offset_from.rs:37:36: 37:55
    let mut _4: *const std::mem::MaybeUninit<Struct2>; // in scope 0 at ui/consts/offset_from.rs:37:36: 37:55
    let _5: &std::mem::MaybeUninit<Struct2>; // in scope 0 at ui/consts/offset_from.rs:37:36: 37:43
    let _7: &u8;                         // in scope 0 at ui/consts/offset_from.rs:38:30: 38:48
    let mut _8: *const u8;               // in scope 0 at ui/consts/offset_from.rs:39:14: 39:37
    let mut _9: *const Struct2;          // in scope 0 at ui/consts/offset_from.rs:39:15: 39:23
    let mut _10: *const u8;              // in scope 0 at ui/consts/offset_from.rs:39:50: 39:59
    scope 1 {
        debug uninit => _1;              // in scope 1 at ui/consts/offset_from.rs:36:9: 36:15
        let _2: *const Struct2;          // in scope 1 at ui/consts/offset_from.rs:37:9: 37:17
        scope 2 {
            debug base_ptr => _2;        // in scope 2 at ui/consts/offset_from.rs:37:9: 37:17
            let _6: *const u8;           // in scope 2 at ui/consts/offset_from.rs:38:9: 38:18
            scope 3 {
                debug field_ptr => _6;   // in scope 3 at ui/consts/offset_from.rs:38:9: 38:18
                scope 5 {
                }
            }
            scope 4 {
            }
        }
    }

    bb0: {
        StorageLive(_1);                 // scope 0 at ui/consts/offset_from.rs:36:9: 36:15
        ConstEvalCounter;                // scope 0 at ui/consts/offset_from.rs:36:18: 36:60
        _1 = MaybeUninit::<Struct2>::uninit() -> bb1; // scope 0 at ui/consts/offset_from.rs:36:18: 36:60
                                         // mir::Constant
                                         // + span: ui/consts/offset_from.rs:36:18: 36:58
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: fn() -> MaybeUninit<Struct2> {MaybeUninit::<Struct2>::uninit}, val: Value(<ZST>) }
    }

    bb1: {
        StorageLive(_2);                 // scope 1 at ui/consts/offset_from.rs:37:9: 37:17
        StorageLive(_3);                 // scope 1 at ui/consts/offset_from.rs:37:36: 37:55
        StorageLive(_4);                 // scope 1 at ui/consts/offset_from.rs:37:36: 37:55
        StorageLive(_5);                 // scope 1 at ui/consts/offset_from.rs:37:36: 37:43
        _5 = &_1;                        // scope 1 at ui/consts/offset_from.rs:37:36: 37:43
        _4 = &raw const (*_5);           // scope 1 at ui/consts/offset_from.rs:37:36: 37:43
        _3 = _4;                         // scope 1 at ui/consts/offset_from.rs:37:36: 37:55
        _2 = move _3 as *const Struct2 (PtrToPtr); // scope 1 at ui/consts/offset_from.rs:37:36: 37:73
        StorageDead(_3);                 // scope 1 at ui/consts/offset_from.rs:37:72: 37:73
        StorageDead(_5);                 // scope 1 at ui/consts/offset_from.rs:37:73: 37:74
        StorageDead(_4);                 // scope 1 at ui/consts/offset_from.rs:37:73: 37:74
        StorageLive(_6);                 // scope 2 at ui/consts/offset_from.rs:38:9: 38:18
        StorageLive(_7);                 // scope 4 at ui/consts/offset_from.rs:38:30: 38:48
        _7 = &((*_2).1: u8);             // scope 4 at ui/consts/offset_from.rs:38:30: 38:48
        _6 = &raw const (*_7);           // scope 4 at ui/consts/offset_from.rs:38:30: 38:48
        StorageDead(_7);                 // scope 2 at ui/consts/offset_from.rs:38:63: 38:64
        StorageLive(_8);                 // scope 5 at ui/consts/offset_from.rs:39:14: 39:37
        StorageLive(_9);                 // scope 5 at ui/consts/offset_from.rs:39:15: 39:23
        _9 = _2;                         // scope 5 at ui/consts/offset_from.rs:39:15: 39:23
        _8 = move _9 as *const u8 (PtrToPtr); // scope 5 at ui/consts/offset_from.rs:39:14: 39:37
        StorageDead(_9);                 // scope 5 at ui/consts/offset_from.rs:39:36: 39:37
        StorageLive(_10);                // scope 5 at ui/consts/offset_from.rs:39:50: 39:59
        _10 = _6;                        // scope 5 at ui/consts/offset_from.rs:39:50: 39:59
        ConstEvalCounter;                // scope 5 at ui/consts/offset_from.rs:39:14: 39:60
        _0 = ptr::const_ptr::<impl *const u8>::offset_from(move _8, move _10) -> bb2; // scope 5 at ui/consts/offset_from.rs:39:14: 39:60
                                         // mir::Constant
                                         // + span: ui/consts/offset_from.rs:39:38: 39:49
                                         // + literal: Const { ty: unsafe fn(*const u8, *const u8) -> isize {ptr::const_ptr::<impl *const u8>::offset_from}, val: Value(<ZST>) }
    }

    bb2: {
        StorageDead(_10);                // scope 5 at ui/consts/offset_from.rs:39:59: 39:60
        StorageDead(_8);                 // scope 5 at ui/consts/offset_from.rs:39:59: 39:60
        StorageDead(_6);                 // scope 2 at ui/consts/offset_from.rs:40:1: 40:2
        StorageDead(_2);                 // scope 1 at ui/consts/offset_from.rs:40:1: 40:2
        StorageDead(_1);                 // scope 0 at ui/consts/offset_from.rs:40:1: 40:2
        return;                          // scope 0 at ui/consts/offset_from.rs:35:1: 40:3
    }
}

const OFFSET_EQUAL_INTS: isize = {
    let mut _0: isize;                   // return place in scope 0 at ui/consts/offset_from.rs:42:30: 42:35
    let _1: *const u8;                   // in scope 0 at ui/consts/offset_from.rs:43:9: 43:12
    let mut _2: *const u8;               // in scope 0 at ui/consts/offset_from.rs:44:14: 44:17
    let mut _3: *const u8;               // in scope 0 at ui/consts/offset_from.rs:44:30: 44:33
    scope 1 {
        debug ptr => _1;                 // in scope 1 at ui/consts/offset_from.rs:43:9: 43:12
        scope 2 {
        }
    }

    bb0: {
        StorageLive(_1);                 // scope 0 at ui/consts/offset_from.rs:43:9: 43:12
        _1 = const 1_usize as *const u8 (PointerFromExposedAddress); // scope 0 at ui/consts/offset_from.rs:43:15: 43:29
        StorageLive(_2);                 // scope 2 at ui/consts/offset_from.rs:44:14: 44:17
        _2 = _1;                         // scope 2 at ui/consts/offset_from.rs:44:14: 44:17
        StorageLive(_3);                 // scope 2 at ui/consts/offset_from.rs:44:30: 44:33
        _3 = _1;                         // scope 2 at ui/consts/offset_from.rs:44:30: 44:33
        ConstEvalCounter;                // scope 2 at ui/consts/offset_from.rs:44:14: 44:34
        _0 = ptr::const_ptr::<impl *const u8>::offset_from(move _2, move _3) -> bb1; // scope 2 at ui/consts/offset_from.rs:44:14: 44:34
                                         // mir::Constant
                                         // + span: ui/consts/offset_from.rs:44:18: 44:29
                                         // + literal: Const { ty: unsafe fn(*const u8, *const u8) -> isize {ptr::const_ptr::<impl *const u8>::offset_from}, val: Value(<ZST>) }
    }

    bb1: {
        StorageDead(_3);                 // scope 2 at ui/consts/offset_from.rs:44:33: 44:34
        StorageDead(_2);                 // scope 2 at ui/consts/offset_from.rs:44:33: 44:34
        StorageDead(_1);                 // scope 0 at ui/consts/offset_from.rs:45:1: 45:2
        return;                          // scope 0 at ui/consts/offset_from.rs:42:1: 45:3
    }
}

const OFFSET_UNSIGNED: usize = {
    let mut _0: usize;                   // return place in scope 0 at ui/consts/offset_from.rs:47:28: 47:33
    let _1: [char; 3];                   // in scope 0 at ui/consts/offset_from.rs:48:9: 48:10
    let mut _3: &[char];                 // in scope 0 at ui/consts/offset_from.rs:49:15: 49:25
    let mut _4: &[char; 3];              // in scope 0 at ui/consts/offset_from.rs:49:15: 49:25
    let mut _5: *const char;             // in scope 0 at ui/consts/offset_from.rs:50:14: 50:24
    let mut _6: *const char;             // in scope 0 at ui/consts/offset_from.rs:50:14: 50:17
    let mut _7: *const char;             // in scope 0 at ui/consts/offset_from.rs:50:33: 50:36
    scope 1 {
        debug a => _1;                   // in scope 1 at ui/consts/offset_from.rs:48:9: 48:10
        let _2: *const char;             // in scope 1 at ui/consts/offset_from.rs:49:9: 49:12
        scope 2 {
            debug ptr => _2;             // in scope 2 at ui/consts/offset_from.rs:49:9: 49:12
            scope 3 {
            }
        }
    }

    bb0: {
        StorageLive(_1);                 // scope 0 at ui/consts/offset_from.rs:48:9: 48:10
        _1 = [const 'a', const 'b', const 'c']; // scope 0 at ui/consts/offset_from.rs:48:13: 48:28
        StorageLive(_2);                 // scope 1 at ui/consts/offset_from.rs:49:9: 49:12
        StorageLive(_3);                 // scope 1 at ui/consts/offset_from.rs:49:15: 49:25
        StorageLive(_4);                 // scope 1 at ui/consts/offset_from.rs:49:15: 49:25
        _4 = &_1;                        // scope 1 at ui/consts/offset_from.rs:49:15: 49:25
        _3 = move _4 as &[char] (Pointer(Unsize)); // scope 1 at ui/consts/offset_from.rs:49:15: 49:25
        StorageDead(_4);                 // scope 1 at ui/consts/offset_from.rs:49:15: 49:16
        ConstEvalCounter;                // scope 1 at ui/consts/offset_from.rs:49:15: 49:25
        _2 = core::slice::<impl [char]>::as_ptr(move _3) -> bb1; // scope 1 at ui/consts/offset_from.rs:49:15: 49:25
                                         // mir::Constant
                                         // + span: ui/consts/offset_from.rs:49:17: 49:23
                                         // + literal: Const { ty: for<'a> fn(&'a [char]) -> *const char {core::slice::<impl [char]>::as_ptr}, val: Value(<ZST>) }
    }

    bb1: {
        StorageDead(_3);                 // scope 1 at ui/consts/offset_from.rs:49:24: 49:25
        StorageLive(_5);                 // scope 3 at ui/consts/offset_from.rs:50:14: 50:24
        StorageLive(_6);                 // scope 3 at ui/consts/offset_from.rs:50:14: 50:17
        _6 = _2;                         // scope 3 at ui/consts/offset_from.rs:50:14: 50:17
        ConstEvalCounter;                // scope 3 at ui/consts/offset_from.rs:50:14: 50:24
        _5 = ptr::const_ptr::<impl *const char>::add(move _6, const 2_usize) -> bb2; // scope 3 at ui/consts/offset_from.rs:50:14: 50:24
                                         // mir::Constant
                                         // + span: ui/consts/offset_from.rs:50:18: 50:21
                                         // + literal: Const { ty: unsafe fn(*const char, usize) -> *const char {ptr::const_ptr::<impl *const char>::add}, val: Value(<ZST>) }
    }

    bb2: {
        StorageDead(_6);                 // scope 3 at ui/consts/offset_from.rs:50:23: 50:24
        StorageLive(_7);                 // scope 3 at ui/consts/offset_from.rs:50:33: 50:36
        _7 = _2;                         // scope 3 at ui/consts/offset_from.rs:50:33: 50:36
        ConstEvalCounter;                // scope 3 at ui/consts/offset_from.rs:50:14: 50:37
        _0 = ptr::const_ptr::<impl *const char>::sub_ptr(move _5, move _7) -> bb3; // scope 3 at ui/consts/offset_from.rs:50:14: 50:37
                                         // mir::Constant
                                         // + span: ui/consts/offset_from.rs:50:25: 50:32
                                         // + literal: Const { ty: unsafe fn(*const char, *const char) -> usize {ptr::const_ptr::<impl *const char>::sub_ptr}, val: Value(<ZST>) }
    }

    bb3: {
        StorageDead(_7);                 // scope 3 at ui/consts/offset_from.rs:50:36: 50:37
        StorageDead(_5);                 // scope 3 at ui/consts/offset_from.rs:50:36: 50:37
        StorageDead(_2);                 // scope 1 at ui/consts/offset_from.rs:51:1: 51:2
        StorageDead(_1);                 // scope 0 at ui/consts/offset_from.rs:51:1: 51:2
        return;                          // scope 0 at ui/consts/offset_from.rs:47:1: 51:3
    }
}

fn main() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/consts/offset_from.rs:53:11: 53:11
    let mut _1: (&usize, &usize);        // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _2: &usize;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let mut _3: &usize;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let _4: &usize;                      // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
    let _5: &usize;                      // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
    let mut _7: (&usize, &usize);        // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _8: &usize;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let mut _9: &usize;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let _10: &usize;                     // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
    let _11: &usize;                     // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
    let mut _13: (&isize, &isize);       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _14: &isize;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let mut _15: &isize;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let _16: &isize;                     // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
    let _17: &isize;                     // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
    let mut _19: (&isize, &isize);       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _20: &isize;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let mut _21: &isize;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let _22: &isize;                     // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
    let _23: &isize;                     // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
    let mut _25: (&usize, &usize);       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _26: &usize;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let mut _27: &usize;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let _28: &usize;                     // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
    let _29: &usize;                     // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
    let mut _31: &usize;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _32: &usize;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let mut _33: &isize;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _34: &isize;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let mut _35: &isize;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _36: &isize;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let mut _37: &usize;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _38: &usize;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let mut _39: &usize;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _40: &usize;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    scope 1 {
        debug left_val => _4;            // in scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        debug right_val => _5;           // in scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        let _6: core::panicking::AssertKind; // in scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
        scope 2 {
            debug kind => _6;            // in scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
        }
    }
    scope 3 {
        debug left_val => _10;           // in scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        debug right_val => _11;          // in scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        let _12: core::panicking::AssertKind; // in scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
        scope 4 {
            debug kind => _12;           // in scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
        }
    }
    scope 5 {
        debug left_val => _16;           // in scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        debug right_val => _17;          // in scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        let _18: core::panicking::AssertKind; // in scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
        scope 6 {
            debug kind => _18;           // in scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
        }
    }
    scope 7 {
        debug left_val => _22;           // in scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        debug right_val => _23;          // in scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        let _24: core::panicking::AssertKind; // in scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
        scope 8 {
            debug kind => _24;           // in scope 8 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
        }
    }
    scope 9 {
        debug left_val => _28;           // in scope 9 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        debug right_val => _29;          // in scope 9 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        let _30: core::panicking::AssertKind; // in scope 9 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
        scope 10 {
            debug kind => _30;           // in scope 10 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
        }
    }

    bb0: {
        _40 = const _;                   // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
                                         // + literal: Const { ty: &usize, val: Unevaluated(main, [], Some(promoted[9])) }
        _2 = _40;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _39 = const _;                   // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // + literal: Const { ty: &usize, val: Unevaluated(main, [], Some(promoted[8])) }
        _3 = _39;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _1 = (move _2, move _3);         // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _4 = (_1.0: &usize);             // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _5 = (_1.1: &usize);             // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _38 = const _;                   // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
                                         // + literal: Const { ty: &usize, val: Unevaluated(main, [], Some(promoted[7])) }
        _8 = _38;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _37 = const _;                   // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // + literal: Const { ty: &usize, val: Unevaluated(main, [], Some(promoted[6])) }
        _9 = _37;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _7 = (move _8, move _9);         // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _10 = (_7.0: &usize);            // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _11 = (_7.1: &usize);            // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _36 = const _;                   // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
                                         // + literal: Const { ty: &isize, val: Unevaluated(main, [], Some(promoted[5])) }
        _14 = _36;                       // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _35 = const _;                   // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // + literal: Const { ty: &isize, val: Unevaluated(main, [], Some(promoted[4])) }
        _15 = _35;                       // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _13 = (move _14, move _15);      // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _16 = (_13.0: &isize);           // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _17 = (_13.1: &isize);           // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _34 = const _;                   // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
                                         // + literal: Const { ty: &isize, val: Unevaluated(main, [], Some(promoted[3])) }
        _20 = _34;                       // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _33 = const _;                   // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // + literal: Const { ty: &isize, val: Unevaluated(main, [], Some(promoted[2])) }
        _21 = _33;                       // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _19 = (move _20, move _21);      // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _22 = (_19.0: &isize);           // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _23 = (_19.1: &isize);           // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _32 = const _;                   // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
                                         // + literal: Const { ty: &usize, val: Unevaluated(main, [], Some(promoted[1])) }
        _26 = _32;                       // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _31 = const _;                   // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // + literal: Const { ty: &usize, val: Unevaluated(main, [], Some(promoted[0])) }
        _27 = _31;                       // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _25 = (move _26, move _27);      // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _28 = (_25.0: &usize);           // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _29 = (_25.1: &usize);           // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        return;                          // scope 0 at ui/consts/offset_from.rs:59:2: 59:2
    }
}

promoted[0] in main: &usize = {
    let mut _0: &usize;                  // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _1: usize;                   // in scope 0 at ui/consts/offset_from.rs:58:33: 58:34

    bb0: {
        _1 = const 2_usize;              // scope 0 at ui/consts/offset_from.rs:58:33: 58:34
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    }
}

promoted[1] in main: &usize = {
    let mut _0: &usize;                  // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let mut _1: usize;                   // in scope 0 at ui/consts/offset_from.rs:58:16: 58:31

    bb0: {
        _1 = const _;                    // scope 0 at ui/consts/offset_from.rs:58:16: 58:31
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    }
}

promoted[2] in main: &isize = {
    let mut _0: &isize;                  // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _1: isize;                   // in scope 0 at ui/consts/offset_from.rs:57:35: 57:36

    bb0: {
        _1 = const 0_isize;              // scope 0 at ui/consts/offset_from.rs:57:35: 57:36
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    }
}

promoted[3] in main: &isize = {
    let mut _0: &isize;                  // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let mut _1: isize;                   // in scope 0 at ui/consts/offset_from.rs:57:16: 57:33

    bb0: {
        _1 = const _;                    // scope 0 at ui/consts/offset_from.rs:57:16: 57:33
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    }
}

promoted[4] in main: &isize = {
    let mut _0: &isize;                  // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _1: isize;                   // in scope 0 at ui/consts/offset_from.rs:56:26: 56:28

    bb0: {
        _1 = const -1_isize;             // scope 0 at ui/consts/offset_from.rs:56:26: 56:28
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    }
}

promoted[5] in main: &isize = {
    let mut _0: &isize;                  // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let mut _1: isize;                   // in scope 0 at ui/consts/offset_from.rs:56:16: 56:24

    bb0: {
        _1 = const _;                    // scope 0 at ui/consts/offset_from.rs:56:16: 56:24
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    }
}

promoted[6] in main: &usize = {
    let mut _0: &usize;                  // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _1: usize;                   // in scope 0 at ui/consts/offset_from.rs:55:26: 55:27

    bb0: {
        _1 = const 1_usize;              // scope 0 at ui/consts/offset_from.rs:55:26: 55:27
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    }
}

promoted[7] in main: &usize = {
    let mut _0: &usize;                  // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let mut _1: usize;                   // in scope 0 at ui/consts/offset_from.rs:55:16: 55:24

    bb0: {
        _1 = const _;                    // scope 0 at ui/consts/offset_from.rs:55:16: 55:24
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    }
}

promoted[8] in main: &usize = {
    let mut _0: &usize;                  // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _1: usize;                   // in scope 0 at ui/consts/offset_from.rs:54:24: 54:25

    bb0: {
        _1 = const 0_usize;              // scope 0 at ui/consts/offset_from.rs:54:24: 54:25
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    }
}

promoted[9] in main: &usize = {
    let mut _0: &usize;                  // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let mut _1: usize;                   // in scope 0 at ui/consts/offset_from.rs:54:16: 54:22

    bb0: {
        _1 = const _;                    // scope 0 at ui/consts/offset_from.rs:54:16: 54:22
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    }
}
