// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
fn <impl at ui/consts/promoted-validation-55454.rs:4:10: 4:19>::eq(_1: &This<T>, _2: &This<T>) -> bool {
    debug self => _1;                    // in scope 0 at ui/consts/promoted-validation-55454.rs:4:10: 4:19
    debug other => _2;                   // in scope 0 at ui/consts/promoted-validation-55454.rs:4:10: 4:19
    let mut _0: bool;                    // return place in scope 0 at ui/consts/promoted-validation-55454.rs:4:10: 4:19
    let mut _3: &T;                      // in scope 0 at ui/consts/promoted-validation-55454.rs:5:16: 5:17
    let mut _4: &T;                      // in scope 0 at ui/consts/promoted-validation-55454.rs:5:16: 5:17

    bb0: {
        _3 = &((*_1).0: T);              // scope 0 at ui/consts/promoted-validation-55454.rs:5:16: 5:17
        _4 = &((*_2).0: T);              // scope 0 at ui/consts/promoted-validation-55454.rs:5:16: 5:17
        _0 = <T as PartialEq>::eq(move _3, move _4) -> bb1; // scope 0 at ui/consts/promoted-validation-55454.rs:5:16: 5:17
                                         // mir::Constant
                                         // + span: ui/consts/promoted-validation-55454.rs:5:16: 5:17
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a T, &'b T) -> bool {<T as PartialEq>::eq}, val: Value(<ZST>) }
    }

    bb1: {
        return;                          // scope 0 at ui/consts/promoted-validation-55454.rs:4:19: 4:19
    }
}

fn main() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/consts/promoted-validation-55454.rs:7:11: 7:11
    let _1: bool;                        // in scope 0 at ui/consts/promoted-validation-55454.rs:8:5: 8:37
    let mut _2: &This<std::option::Option<&i32>>; // in scope 0 at ui/consts/promoted-validation-55454.rs:8:5: 8:19
    let mut _3: &This<std::option::Option<&i32>>; // in scope 0 at ui/consts/promoted-validation-55454.rs:8:23: 8:37
    let mut _4: &This<std::option::Option<&i32>>; // in scope 0 at ui/consts/promoted-validation-55454.rs:8:23: 8:37
    let mut _5: &This<std::option::Option<&i32>>; // in scope 0 at ui/consts/promoted-validation-55454.rs:8:5: 8:19

    bb0: {
        _5 = const _;                    // scope 0 at ui/consts/promoted-validation-55454.rs:8:5: 8:19
                                         // mir::Constant
                                         // + span: ui/consts/promoted-validation-55454.rs:8:5: 8:19
                                         // + literal: Const { ty: &This<Option<&i32>>, val: Unevaluated(main, [], Some(promoted[1])) }
        _2 = _5;                         // scope 0 at ui/consts/promoted-validation-55454.rs:8:5: 8:19
        _4 = const _;                    // scope 0 at ui/consts/promoted-validation-55454.rs:8:23: 8:37
                                         // mir::Constant
                                         // + span: ui/consts/promoted-validation-55454.rs:8:23: 8:37
                                         // + literal: Const { ty: &This<Option<&i32>>, val: Unevaluated(main, [], Some(promoted[0])) }
        _3 = _4;                         // scope 0 at ui/consts/promoted-validation-55454.rs:8:23: 8:37
        _1 = <This<Option<&i32>> as PartialEq>::eq(move _2, move _3) -> bb1; // scope 0 at ui/consts/promoted-validation-55454.rs:8:5: 8:37
                                         // mir::Constant
                                         // + span: ui/consts/promoted-validation-55454.rs:8:5: 8:37
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a This<Option<&i32>>, &'b This<Option<&i32>>) -> bool {<This<Option<&i32>> as PartialEq>::eq}, val: Value(<ZST>) }
    }

    bb1: {
        return;                          // scope 0 at ui/consts/promoted-validation-55454.rs:9:2: 9:2
    }
}

promoted[0] in main: &This<Option<&i32>> = {
    let mut _0: &This<std::option::Option<&i32>>; // return place in scope 0 at ui/consts/promoted-validation-55454.rs:8:23: 8:37
    let mut _1: This<std::option::Option<&i32>>; // in scope 0 at ui/consts/promoted-validation-55454.rs:8:23: 8:37
    let mut _2: std::option::Option<&i32>; // in scope 0 at ui/consts/promoted-validation-55454.rs:8:28: 8:36
    let mut _3: &i32;                    // in scope 0 at ui/consts/promoted-validation-55454.rs:8:33: 8:35
    let mut _4: &i32;                    // in scope 0 at ui/consts/promoted-validation-55454.rs:8:33: 8:35
    let mut _5: i32;                     // in scope 0 at ui/consts/promoted-validation-55454.rs:8:34: 8:35

    bb0: {
        _5 = const 1_i32;                // scope 0 at ui/consts/promoted-validation-55454.rs:8:34: 8:35
        _4 = &_5;                        // scope 0 at ui/consts/promoted-validation-55454.rs:8:33: 8:35
        _3 = &(*_4);                     // scope 0 at ui/consts/promoted-validation-55454.rs:8:33: 8:35
        _2 = Option::<&i32>::Some(move _3); // scope 0 at ui/consts/promoted-validation-55454.rs:8:28: 8:36
        _1 = This::<Option<&i32>>(move _2); // scope 0 at ui/consts/promoted-validation-55454.rs:8:23: 8:37
        _0 = &_1;                        // scope 0 at ui/consts/promoted-validation-55454.rs:8:23: 8:37
        return;                          // scope 0 at ui/consts/promoted-validation-55454.rs:8:23: 8:37
    }
}

promoted[1] in main: &This<Option<&i32>> = {
    let mut _0: &This<std::option::Option<&i32>>; // return place in scope 0 at ui/consts/promoted-validation-55454.rs:8:5: 8:19
    let mut _1: This<std::option::Option<&i32>>; // in scope 0 at ui/consts/promoted-validation-55454.rs:8:5: 8:19
    let mut _2: std::option::Option<&i32>; // in scope 0 at ui/consts/promoted-validation-55454.rs:8:10: 8:18
    let mut _3: &i32;                    // in scope 0 at ui/consts/promoted-validation-55454.rs:8:15: 8:17
    let mut _4: i32;                     // in scope 0 at ui/consts/promoted-validation-55454.rs:8:16: 8:17

    bb0: {
        _4 = const 1_i32;                // scope 0 at ui/consts/promoted-validation-55454.rs:8:16: 8:17
        _3 = &_4;                        // scope 0 at ui/consts/promoted-validation-55454.rs:8:15: 8:17
        _2 = Option::<&i32>::Some(move _3); // scope 0 at ui/consts/promoted-validation-55454.rs:8:10: 8:18
        _1 = This::<Option<&i32>>(move _2); // scope 0 at ui/consts/promoted-validation-55454.rs:8:5: 8:19
        _0 = &_1;                        // scope 0 at ui/consts/promoted-validation-55454.rs:8:5: 8:19
        return;                          // scope 0 at ui/consts/promoted-validation-55454.rs:8:5: 8:19
    }
}

fn This(_1: T) -> This<T> {
    let mut _0: This<T>;                 // return place in scope 0 at ui/consts/promoted-validation-55454.rs:5:1: 5:15

    bb0: {
        _0 = This::<T>(move _1);         // scope 0 at ui/consts/promoted-validation-55454.rs:5:1: 5:15
        return;                          // scope 0 at ui/consts/promoted-validation-55454.rs:5:1: 5:15
    }
}

// MIR FOR CTFE
fn This(_1: T) -> This<T> {
    let mut _0: This<T>;                 // return place in scope 0 at ui/consts/promoted-validation-55454.rs:5:1: 5:15

    bb0: {
        _0 = This::<T>(move _1);         // scope 0 at ui/consts/promoted-validation-55454.rs:5:1: 5:15
        return;                          // scope 0 at ui/consts/promoted-validation-55454.rs:5:1: 5:15
    }
}
