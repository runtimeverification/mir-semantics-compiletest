// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
const FOO: &*const i32 = {
    let mut _0: &*const i32;             // return place in scope 0 at ui/consts/raw_pointer_promoted.rs:3:16: 3:35
    let _1: &*const i32;                 // in scope 0 at ui/consts/raw_pointer_promoted.rs:3:38: 3:48
    let _2: *const i32;                  // in scope 0 at ui/consts/raw_pointer_promoted.rs:3:39: 3:48
    let _3: &i32;                        // in scope 0 at ui/consts/raw_pointer_promoted.rs:3:40: 3:42
    let _4: i32;                         // in scope 0 at ui/consts/raw_pointer_promoted.rs:3:41: 3:42
    let mut _5: &*const i32;             // in scope 0 at ui/consts/raw_pointer_promoted.rs:3:38: 3:48

    bb0: {
        StorageLive(_1);                 // scope 0 at ui/consts/raw_pointer_promoted.rs:3:38: 3:48
        _5 = const _;                    // scope 0 at ui/consts/raw_pointer_promoted.rs:3:38: 3:48
                                         // mir::Constant
                                         // + span: ui/consts/raw_pointer_promoted.rs:3:38: 3:48
                                         // + literal: Const { ty: &*const i32, val: Unevaluated(FOO, [], Some(promoted[0])) }
        _1 = &(*_5);                     // scope 0 at ui/consts/raw_pointer_promoted.rs:3:38: 3:48
        _0 = &(*_1);                     // scope 0 at ui/consts/raw_pointer_promoted.rs:3:38: 3:48
        StorageDead(_1);                 // scope 0 at ui/consts/raw_pointer_promoted.rs:3:47: 3:48
        return;                          // scope 0 at ui/consts/raw_pointer_promoted.rs:3:1: 3:49
    }
}

promoted[0] in FOO: &*const i32 = {
    let mut _0: &*const i32;             // return place in scope 0 at ui/consts/raw_pointer_promoted.rs:3:38: 3:48
    let mut _1: *const i32;              // in scope 0 at ui/consts/raw_pointer_promoted.rs:3:39: 3:48
    let mut _2: &i32;                    // in scope 0 at ui/consts/raw_pointer_promoted.rs:3:40: 3:42
    let mut _3: i32;                     // in scope 0 at ui/consts/raw_pointer_promoted.rs:3:41: 3:42

    bb0: {
        _3 = const 0_i32;                // scope 0 at ui/consts/raw_pointer_promoted.rs:3:41: 3:42
        _2 = &_3;                        // scope 0 at ui/consts/raw_pointer_promoted.rs:3:40: 3:42
        _1 = &raw const (*_2);           // scope 0 at ui/consts/raw_pointer_promoted.rs:3:40: 3:42
        _0 = &_1;                        // scope 0 at ui/consts/raw_pointer_promoted.rs:3:38: 3:48
        return;                          // scope 0 at ui/consts/raw_pointer_promoted.rs:3:38: 3:48
    }
}

fn main() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/consts/raw_pointer_promoted.rs:5:11: 5:11

    bb0: {
        return;                          // scope 0 at ui/consts/raw_pointer_promoted.rs:5:13: 5:13
    }
}
