// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
fn dummy(_1: u32) -> u32 {
    debug v => _1;                       // in scope 0 at ui/consts/const-unsafe-fn.rs:5:23: 5:24
    let mut _0: u32;                     // return place in scope 0 at ui/consts/const-unsafe-fn.rs:5:34: 5:37
    let mut _2: u32;                     // in scope 0 at ui/consts/const-unsafe-fn.rs:6:6: 6:7

    bb0: {
        _2 = _1;                         // scope 0 at ui/consts/const-unsafe-fn.rs:6:6: 6:7
        _0 = Not(move _2);               // scope 0 at ui/consts/const-unsafe-fn.rs:6:5: 6:7
        return;                          // scope 0 at ui/consts/const-unsafe-fn.rs:7:2: 7:2
    }
}

// MIR FOR CTFE
fn dummy(_1: u32) -> u32 {
    debug v => _1;                       // in scope 0 at ui/consts/const-unsafe-fn.rs:5:23: 5:24
    let mut _0: u32;                     // return place in scope 0 at ui/consts/const-unsafe-fn.rs:5:34: 5:37
    let mut _2: u32;                     // in scope 0 at ui/consts/const-unsafe-fn.rs:6:6: 6:7

    bb0: {
        StorageLive(_2);                 // scope 0 at ui/consts/const-unsafe-fn.rs:6:6: 6:7
        _2 = _1;                         // scope 0 at ui/consts/const-unsafe-fn.rs:6:6: 6:7
        _0 = Not(move _2);               // scope 0 at ui/consts/const-unsafe-fn.rs:6:5: 6:7
        StorageDead(_2);                 // scope 0 at ui/consts/const-unsafe-fn.rs:6:6: 6:7
        return;                          // scope 0 at ui/consts/const-unsafe-fn.rs:7:2: 7:2
    }
}

fn <impl at ui/consts/const-unsafe-fn.rs:10:1: 10:10>::new() -> Type {
    let mut _0: Type;                    // return place in scope 0 at ui/consts/const-unsafe-fn.rs:11:30: 11:34

    bb0: {
        return;                          // scope 0 at ui/consts/const-unsafe-fn.rs:13:6: 13:6
    }
}

// MIR FOR CTFE
fn <impl at ui/consts/const-unsafe-fn.rs:10:1: 10:10>::new() -> Type {
    let mut _0: Type;                    // return place in scope 0 at ui/consts/const-unsafe-fn.rs:11:30: 11:34

    bb0: {
        _0 = Type;                       // scope 0 at ui/consts/const-unsafe-fn.rs:12:9: 12:13
        return;                          // scope 0 at ui/consts/const-unsafe-fn.rs:13:6: 13:6
    }
}

const VAL: u32 = {
    let mut _0: u32;                     // return place in scope 0 at ui/consts/const-unsafe-fn.rs:16:12: 16:15
    scope 1 {
    }

    bb0: {
        ConstEvalCounter;                // scope 1 at ui/consts/const-unsafe-fn.rs:16:27: 16:40
        _0 = dummy(const 65535_u32) -> bb1; // scope 1 at ui/consts/const-unsafe-fn.rs:16:27: 16:40
                                         // mir::Constant
                                         // + span: ui/consts/const-unsafe-fn.rs:16:27: 16:32
                                         // + literal: Const { ty: unsafe fn(u32) -> u32 {dummy}, val: Value(<ZST>) }
    }

    bb1: {
        return;                          // scope 0 at ui/consts/const-unsafe-fn.rs:16:1: 16:43
    }
}

const TYPE_INST: Type = {
    let mut _0: Type;                    // return place in scope 0 at ui/consts/const-unsafe-fn.rs:17:18: 17:22
    scope 1 {
    }

    bb0: {
        ConstEvalCounter;                // scope 1 at ui/consts/const-unsafe-fn.rs:17:34: 17:45
        _0 = Type::new() -> bb1;         // scope 1 at ui/consts/const-unsafe-fn.rs:17:34: 17:45
                                         // mir::Constant
                                         // + span: ui/consts/const-unsafe-fn.rs:17:34: 17:43
                                         // + literal: Const { ty: unsafe fn() -> Type {Type::new}, val: Value(<ZST>) }
    }

    bb1: {
        return;                          // scope 0 at ui/consts/const-unsafe-fn.rs:17:1: 17:48
    }
}

fn main() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/consts/const-unsafe-fn.rs:19:11: 19:11
    let mut _1: (&u32, &u32);            // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _2: &u32;                    // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let mut _3: &u32;                    // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let _4: &u32;                        // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
    let _5: &u32;                        // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
    let mut _7: &u32;                    // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _8: &u32;                    // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    scope 1 {
        debug left_val => _4;            // in scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        debug right_val => _5;           // in scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        let _6: core::panicking::AssertKind; // in scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
        scope 2 {
            debug kind => _6;            // in scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
        }
    }

    bb0: {
        _8 = const _;                    // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
                                         // + literal: Const { ty: &u32, val: Unevaluated(main, [], Some(promoted[1])) }
        _2 = _8;                         // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _7 = const _;                    // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // + literal: Const { ty: &u32, val: Unevaluated(main, [], Some(promoted[0])) }
        _3 = _7;                         // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _1 = (move _2, move _3);         // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _4 = (_1.0: &u32);               // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _5 = (_1.1: &u32);               // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        return;                          // scope 0 at ui/consts/const-unsafe-fn.rs:21:2: 21:2
    }
}

promoted[0] in main: &u32 = {
    let mut _0: &u32;                    // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _1: u32;                     // in scope 0 at ui/consts/const-unsafe-fn.rs:20:21: 20:31

    bb0: {
        _1 = const 4294901760_u32;       // scope 0 at ui/consts/const-unsafe-fn.rs:20:21: 20:31
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    }
}

promoted[1] in main: &u32 = {
    let mut _0: &u32;                    // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let mut _1: u32;                     // in scope 0 at ui/consts/const-unsafe-fn.rs:20:16: 20:19

    bb0: {
        _1 = const _;                    // scope 0 at ui/consts/const-unsafe-fn.rs:20:16: 20:19
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    }
}
