// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
static FOO: Foo = {
    let mut _0: Foo;                     // return place in scope 0 at ui/consts/zst_no_llvm_alloc.rs:6:13: 6:16

    bb0: {
        _0 = Foo;                        // scope 0 at ui/consts/zst_no_llvm_alloc.rs:6:19: 6:22
        return;                          // scope 0 at ui/consts/zst_no_llvm_alloc.rs:6:1: 6:23
    }
}

fn main() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/consts/zst_no_llvm_alloc.rs:8:11: 8:11
    let _1: &();                         // in scope 0 at ui/consts/zst_no_llvm_alloc.rs:9:9: 9:10
    let _2: &();                         // in scope 0 at ui/consts/zst_no_llvm_alloc.rs:9:26: 9:29
    let mut _3: (&usize, &usize);        // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:88:15: 88:32
    let mut _4: &usize;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:88:16: 88:22
    let _5: usize;                       // in scope 0 at ui/consts/zst_no_llvm_alloc.rs:10:16: 10:39
    let mut _6: *const ();               // in scope 0 at ui/consts/zst_no_llvm_alloc.rs:10:16: 10:30
    let mut _7: &usize;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:88:24: 88:31
    let mut _10: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:90:20: 90:43
    let mut _11: usize;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:90:20: 90:29
    let mut _12: usize;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:90:33: 90:43
    let _14: !;                          // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:95:21: 95:114
    let mut _15: core::panicking::AssertKind; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:95:54: 95:58
    let mut _16: &usize;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:95:60: 95:70
    let _17: &usize;                     // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:95:60: 95:70
    let mut _18: &usize;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:95:72: 95:83
    let _19: &usize;                     // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:95:72: 95:83
    let mut _20: std::option::Option<std::fmt::Arguments<'_>>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:95:85: 95:113
    let _22: &Foo;                       // in scope 0 at ui/consts/zst_no_llvm_alloc.rs:11:27: 11:31
    let mut _23: (&usize, &usize);       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:88:15: 88:32
    let mut _24: &usize;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:88:16: 88:22
    let _25: usize;                      // in scope 0 at ui/consts/zst_no_llvm_alloc.rs:12:16: 12:40
    let mut _26: *const Foo;             // in scope 0 at ui/consts/zst_no_llvm_alloc.rs:12:16: 12:31
    let mut _27: &usize;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:88:24: 88:31
    let mut _30: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:90:20: 90:43
    let mut _31: usize;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:90:20: 90:29
    let mut _32: usize;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:90:33: 90:43
    let _34: !;                          // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:95:21: 95:114
    let mut _35: core::panicking::AssertKind; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:95:54: 95:58
    let mut _36: &usize;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:95:60: 95:70
    let _37: &usize;                     // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:95:60: 95:70
    let mut _38: &usize;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:95:72: 95:83
    let _39: &usize;                     // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:95:72: 95:83
    let mut _40: std::option::Option<std::fmt::Arguments<'_>>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:95:85: 95:113
    let mut _41: (&usize, &usize);       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:88:15: 88:32
    let mut _42: &usize;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:88:16: 88:22
    let _43: usize;                      // in scope 0 at ui/consts/zst_no_llvm_alloc.rs:15:16: 15:43
    let mut _44: *const Foo;             // in scope 0 at ui/consts/zst_no_llvm_alloc.rs:15:16: 15:34
    let _45: &Foo;                       // in scope 0 at ui/consts/zst_no_llvm_alloc.rs:15:16: 15:20
    let _46: &Foo;                       // in scope 0 at ui/consts/zst_no_llvm_alloc.rs:15:17: 15:20
    let mut _47: &usize;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:88:24: 88:31
    let mut _50: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:90:20: 90:43
    let mut _51: usize;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:90:20: 90:29
    let mut _52: usize;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:90:33: 90:43
    let _54: !;                          // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:95:21: 95:114
    let mut _55: core::panicking::AssertKind; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:95:54: 95:58
    let mut _56: &usize;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:95:60: 95:70
    let _57: &usize;                     // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:95:60: 95:70
    let mut _58: &usize;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:95:72: 95:83
    let _59: &usize;                     // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:95:72: 95:83
    let mut _60: std::option::Option<std::fmt::Arguments<'_>>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:95:85: 95:113
    let mut _61: (&*const i32, &*const i32); // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:88:15: 88:32
    let mut _62: &*const i32;            // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:88:16: 88:22
    let _63: *const i32;                 // in scope 0 at ui/consts/zst_no_llvm_alloc.rs:19:16: 19:42
    let mut _64: &std::vec::Vec<i32>;    // in scope 0 at ui/consts/zst_no_llvm_alloc.rs:19:16: 19:42
    let _65: std::vec::Vec<i32>;         // in scope 0 at ui/consts/zst_no_llvm_alloc.rs:19:16: 19:33
    let mut _66: &*const i32;            // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:88:24: 88:31
    let _67: *const i32;                 // in scope 0 at ui/consts/zst_no_llvm_alloc.rs:19:44: 19:72
    let mut _68: &[i32];                 // in scope 0 at ui/consts/zst_no_llvm_alloc.rs:19:44: 19:72
    let _69: &[i32];                     // in scope 0 at ui/consts/zst_no_llvm_alloc.rs:19:44: 19:63
    let mut _72: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:90:20: 90:43
    let mut _73: *const i32;             // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:90:20: 90:29
    let mut _74: *const i32;             // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:90:33: 90:43
    let _76: !;                          // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:95:21: 95:114
    let mut _77: core::panicking::AssertKind; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:95:54: 95:58
    let mut _78: &*const i32;            // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:95:60: 95:70
    let _79: &*const i32;                // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:95:60: 95:70
    let mut _80: &*const i32;            // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:95:72: 95:83
    let _81: &*const i32;                // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:95:72: 95:83
    let mut _82: std::option::Option<std::fmt::Arguments<'_>>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:95:85: 95:113
    let mut _83: (&*const i32, &*const i32); // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:88:15: 88:32
    let mut _84: &*const i32;            // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:88:16: 88:22
    let _85: *const i32;                 // in scope 0 at ui/consts/zst_no_llvm_alloc.rs:20:16: 20:48
    let mut _86: &[i32];                 // in scope 0 at ui/consts/zst_no_llvm_alloc.rs:20:16: 20:48
    let _87: std::boxed::Box<[i32]>;     // in scope 0 at ui/consts/zst_no_llvm_alloc.rs:20:16: 20:39
    let mut _88: &*const i32;            // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:88:24: 88:31
    let _89: *const i32;                 // in scope 0 at ui/consts/zst_no_llvm_alloc.rs:20:50: 20:64
    let mut _90: &[i32];                 // in scope 0 at ui/consts/zst_no_llvm_alloc.rs:20:50: 20:64
    let mut _91: &[i32; 0];              // in scope 0 at ui/consts/zst_no_llvm_alloc.rs:20:50: 20:64
    let _92: &[i32; 0];                  // in scope 0 at ui/consts/zst_no_llvm_alloc.rs:20:50: 20:55
    let mut _95: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:90:20: 90:43
    let mut _96: *const i32;             // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:90:20: 90:29
    let mut _97: *const i32;             // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:90:33: 90:43
    let _99: !;                          // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:95:21: 95:114
    let mut _100: core::panicking::AssertKind; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:95:54: 95:58
    let mut _101: &*const i32;           // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:95:60: 95:70
    let _102: &*const i32;               // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:95:60: 95:70
    let mut _103: &*const i32;           // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:95:72: 95:83
    let _104: &*const i32;               // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:95:72: 95:83
    let mut _105: std::option::Option<std::fmt::Arguments<'_>>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:95:85: 95:113
    let mut _111: &();                   // in scope 0 at ui/consts/zst_no_llvm_alloc.rs:9:26: 9:29
    let mut _112: *const [i32];          // in scope 0 at ui/consts/zst_no_llvm_alloc.rs:20:16: 20:39
    scope 1 {
        debug x => _1;                   // in scope 1 at ui/consts/zst_no_llvm_alloc.rs:9:9: 9:10
        let _8: &usize;                  // in scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:89:14: 89:22
        let _9: &usize;                  // in scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:89:24: 89:33
        let _21: &Foo;                   // in scope 1 at ui/consts/zst_no_llvm_alloc.rs:11:9: 11:10
        let mut _109: &Foo;              // in scope 1 at ui/consts/zst_no_llvm_alloc.rs:11:27: 11:31
        let mut _110: &usize;            // in scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:88:24: 88:31
        scope 2 {
            debug left_val => _8;        // in scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:89:14: 89:22
            debug right_val => _9;       // in scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:89:24: 89:33
            let _13: core::panicking::AssertKind; // in scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:91:25: 91:29
            scope 3 {
                debug kind => _13;       // in scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:91:25: 91:29
            }
        }
        scope 4 {
            debug x => _21;              // in scope 4 at ui/consts/zst_no_llvm_alloc.rs:11:9: 11:10
            let _28: &usize;             // in scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:89:14: 89:22
            let _29: &usize;             // in scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:89:24: 89:33
            let _48: &usize;             // in scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:89:14: 89:22
            let _49: &usize;             // in scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:89:24: 89:33
            let _70: &*const i32;        // in scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:89:14: 89:22
            let _71: &*const i32;        // in scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:89:24: 89:33
            let _93: &*const i32;        // in scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:89:14: 89:22
            let _94: &*const i32;        // in scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:89:24: 89:33
            let mut _106: &[i32; 0];     // in scope 4 at ui/consts/zst_no_llvm_alloc.rs:20:50: 20:55
            let mut _107: &usize;        // in scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:88:24: 88:31
            let mut _108: &usize;        // in scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:88:24: 88:31
            scope 5 {
                debug left_val => _28;   // in scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:89:14: 89:22
                debug right_val => _29;  // in scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:89:24: 89:33
                let _33: core::panicking::AssertKind; // in scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:91:25: 91:29
                scope 6 {
                    debug kind => _33;   // in scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:91:25: 91:29
                }
            }
            scope 7 {
                debug left_val => _48;   // in scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:89:14: 89:22
                debug right_val => _49;  // in scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:89:24: 89:33
                let _53: core::panicking::AssertKind; // in scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:91:25: 91:29
                scope 8 {
                    debug kind => _53;   // in scope 8 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:91:25: 91:29
                }
            }
            scope 9 {
                debug left_val => _70;   // in scope 9 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:89:14: 89:22
                debug right_val => _71;  // in scope 9 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:89:24: 89:33
                let _75: core::panicking::AssertKind; // in scope 9 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:91:25: 91:29
                scope 10 {
                    debug kind => _75;   // in scope 10 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:91:25: 91:29
                }
            }
            scope 11 {
                debug left_val => _93;   // in scope 11 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:89:14: 89:22
                debug right_val => _94;  // in scope 11 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:89:24: 89:33
                let _98: core::panicking::AssertKind; // in scope 11 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:91:25: 91:29
                scope 12 {
                    debug kind => _98;   // in scope 12 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:91:25: 91:29
                }
            }
        }
    }

    bb0: {
        _111 = const _;                  // scope 0 at ui/consts/zst_no_llvm_alloc.rs:9:26: 9:29
                                         // mir::Constant
                                         // + span: ui/consts/zst_no_llvm_alloc.rs:9:26: 9:29
                                         // + literal: Const { ty: &(), val: Unevaluated(main, [], Some(promoted[5])) }
        _2 = _111;                       // scope 0 at ui/consts/zst_no_llvm_alloc.rs:9:26: 9:29
        _1 = _2;                         // scope 0 at ui/consts/zst_no_llvm_alloc.rs:9:26: 9:29
        _6 = &raw const (*_1);           // scope 1 at ui/consts/zst_no_llvm_alloc.rs:10:16: 10:17
        _5 = move _6 as usize (PointerExposeAddress); // scope 1 at ui/consts/zst_no_llvm_alloc.rs:10:16: 10:39
        _4 = &_5;                        // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:88:16: 88:22
        _110 = const _;                  // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:88:24: 88:31
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:88:24: 88:31
                                         // + literal: Const { ty: &usize, val: Unevaluated(main, [], Some(promoted[4])) }
        _7 = _110;                       // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:88:24: 88:31
        _3 = (move _4, move _7);         // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:88:15: 88:32
        _8 = (_3.0: &usize);             // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:89:14: 89:22
        _9 = (_3.1: &usize);             // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:89:24: 89:33
        _11 = (*_8);                     // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:90:20: 90:29
        _12 = const 1_usize;             // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:90:33: 90:43
        _10 = Eq(move _11, move _12);    // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:90:20: 90:43
        switchInt(move _10) -> [0: bb2, otherwise: bb1]; // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:90:20: 90:43
    }

    bb1: {
        _13 = const core::panicking::AssertKind::Ne; // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:91:32: 91:65
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:91:32: 91:65
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x01)) }
        _15 = const core::panicking::AssertKind::Ne; // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:95:54: 95:58
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:95:54: 95:58
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x01)) }
        _17 = _8;                        // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:95:60: 95:70
        _16 = _17;                       // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:95:60: 95:70
        _19 = _9;                        // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:95:72: 95:83
        _18 = _19;                       // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:95:72: 95:83
        _20 = Option::<Arguments<'_>>::None; // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:95:85: 95:113
        _14 = core::panicking::assert_failed::<usize, usize>(move _15, move _16, move _18, move _20); // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:95:21: 95:114
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:95:21: 95:53
                                         // + literal: Const { ty: for<'a, 'b, 'c> fn(core::panicking::AssertKind, &'a usize, &'b usize, Option<Arguments<'c>>) -> ! {core::panicking::assert_failed::<usize, usize>}, val: Value(<ZST>) }
    }

    bb2: {
        _109 = const _;                  // scope 1 at ui/consts/zst_no_llvm_alloc.rs:11:27: 11:31
                                         // mir::Constant
                                         // + span: ui/consts/zst_no_llvm_alloc.rs:11:27: 11:31
                                         // + literal: Const { ty: &Foo, val: Unevaluated(main, [], Some(promoted[3])) }
        _22 = _109;                      // scope 1 at ui/consts/zst_no_llvm_alloc.rs:11:27: 11:31
        _21 = _22;                       // scope 1 at ui/consts/zst_no_llvm_alloc.rs:11:27: 11:31
        _26 = &raw const (*_21);         // scope 4 at ui/consts/zst_no_llvm_alloc.rs:12:16: 12:17
        _25 = move _26 as usize (PointerExposeAddress); // scope 4 at ui/consts/zst_no_llvm_alloc.rs:12:16: 12:40
        _24 = &_25;                      // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:88:16: 88:22
        _108 = const _;                  // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:88:24: 88:31
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:88:24: 88:31
                                         // + literal: Const { ty: &usize, val: Unevaluated(main, [], Some(promoted[2])) }
        _27 = _108;                      // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:88:24: 88:31
        _23 = (move _24, move _27);      // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:88:15: 88:32
        _28 = (_23.0: &usize);           // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:89:14: 89:22
        _29 = (_23.1: &usize);           // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:89:24: 89:33
        _31 = (*_28);                    // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:90:20: 90:29
        _32 = const 4_usize;             // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:90:33: 90:43
        _30 = Eq(move _31, move _32);    // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:90:20: 90:43
        switchInt(move _30) -> [0: bb4, otherwise: bb3]; // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:90:20: 90:43
    }

    bb3: {
        _33 = const core::panicking::AssertKind::Ne; // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:91:32: 91:65
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:91:32: 91:65
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x01)) }
        _35 = const core::panicking::AssertKind::Ne; // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:95:54: 95:58
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:95:54: 95:58
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x01)) }
        _37 = _28;                       // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:95:60: 95:70
        _36 = _37;                       // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:95:60: 95:70
        _39 = _29;                       // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:95:72: 95:83
        _38 = _39;                       // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:95:72: 95:83
        _40 = Option::<Arguments<'_>>::None; // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:95:85: 95:113
        _34 = core::panicking::assert_failed::<usize, usize>(move _35, move _36, move _38, move _40); // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:95:21: 95:114
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:95:21: 95:53
                                         // + literal: Const { ty: for<'a, 'b, 'c> fn(core::panicking::AssertKind, &'a usize, &'b usize, Option<Arguments<'c>>) -> ! {core::panicking::assert_failed::<usize, usize>}, val: Value(<ZST>) }
    }

    bb4: {
        _46 = const {alloc1: &Foo};      // scope 4 at ui/consts/zst_no_llvm_alloc.rs:15:17: 15:20
                                         // mir::Constant
                                         // + span: ui/consts/zst_no_llvm_alloc.rs:15:17: 15:20
                                         // + literal: Const { ty: &Foo, val: Value(Scalar(alloc1)) }
        _45 = _46;                       // scope 4 at ui/consts/zst_no_llvm_alloc.rs:15:16: 15:20
        _44 = &raw const (*_45);         // scope 4 at ui/consts/zst_no_llvm_alloc.rs:15:16: 15:20
        _43 = move _44 as usize (PointerExposeAddress); // scope 4 at ui/consts/zst_no_llvm_alloc.rs:15:16: 15:43
        _42 = &_43;                      // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:88:16: 88:22
        _107 = const _;                  // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:88:24: 88:31
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:88:24: 88:31
                                         // + literal: Const { ty: &usize, val: Unevaluated(main, [], Some(promoted[1])) }
        _47 = _107;                      // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:88:24: 88:31
        _41 = (move _42, move _47);      // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:88:15: 88:32
        _48 = (_41.0: &usize);           // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:89:14: 89:22
        _49 = (_41.1: &usize);           // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:89:24: 89:33
        _51 = (*_48);                    // scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:90:20: 90:29
        _52 = const 4_usize;             // scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:90:33: 90:43
        _50 = Eq(move _51, move _52);    // scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:90:20: 90:43
        switchInt(move _50) -> [0: bb6, otherwise: bb5]; // scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:90:20: 90:43
    }

    bb5: {
        _53 = const core::panicking::AssertKind::Ne; // scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:91:32: 91:65
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:91:32: 91:65
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x01)) }
        _55 = const core::panicking::AssertKind::Ne; // scope 8 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:95:54: 95:58
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:95:54: 95:58
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x01)) }
        _57 = _48;                       // scope 8 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:95:60: 95:70
        _56 = _57;                       // scope 8 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:95:60: 95:70
        _59 = _49;                       // scope 8 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:95:72: 95:83
        _58 = _59;                       // scope 8 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:95:72: 95:83
        _60 = Option::<Arguments<'_>>::None; // scope 8 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:95:85: 95:113
        _54 = core::panicking::assert_failed::<usize, usize>(move _55, move _56, move _58, move _60); // scope 8 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:95:21: 95:114
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:95:21: 95:53
                                         // + literal: Const { ty: for<'a, 'b, 'c> fn(core::panicking::AssertKind, &'a usize, &'b usize, Option<Arguments<'c>>) -> ! {core::panicking::assert_failed::<usize, usize>}, val: Value(<ZST>) }
    }

    bb6: {
        _65 = Vec::<i32>::new() -> bb7;  // scope 4 at ui/consts/zst_no_llvm_alloc.rs:19:16: 19:33
                                         // mir::Constant
                                         // + span: ui/consts/zst_no_llvm_alloc.rs:19:16: 19:31
                                         // + user_ty: UserType(4)
                                         // + literal: Const { ty: fn() -> Vec<i32> {Vec::<i32>::new}, val: Value(<ZST>) }
    }

    bb7: {
        _64 = &_65;                      // scope 4 at ui/consts/zst_no_llvm_alloc.rs:19:16: 19:42
        _63 = Vec::<i32>::as_ptr(move _64) -> [return: bb8, unwind: bb21]; // scope 4 at ui/consts/zst_no_llvm_alloc.rs:19:16: 19:42
                                         // mir::Constant
                                         // + span: ui/consts/zst_no_llvm_alloc.rs:19:34: 19:40
                                         // + literal: Const { ty: for<'a> fn(&'a Vec<i32>) -> *const i32 {Vec::<i32>::as_ptr}, val: Value(<ZST>) }
    }

    bb8: {
        _62 = &_63;                      // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:88:16: 88:22
        _69 = <&[i32] as Default>::default() -> [return: bb9, unwind: bb21]; // scope 4 at ui/consts/zst_no_llvm_alloc.rs:19:44: 19:63
                                         // mir::Constant
                                         // + span: ui/consts/zst_no_llvm_alloc.rs:19:44: 19:61
                                         // + user_ty: UserType(5)
                                         // + literal: Const { ty: fn() -> &[i32] {<&[i32] as Default>::default}, val: Value(<ZST>) }
    }

    bb9: {
        _68 = _69;                       // scope 4 at ui/consts/zst_no_llvm_alloc.rs:19:44: 19:72
        _67 = core::slice::<impl [i32]>::as_ptr(move _68) -> [return: bb10, unwind: bb21]; // scope 4 at ui/consts/zst_no_llvm_alloc.rs:19:44: 19:72
                                         // mir::Constant
                                         // + span: ui/consts/zst_no_llvm_alloc.rs:19:64: 19:70
                                         // + literal: Const { ty: for<'a> fn(&'a [i32]) -> *const i32 {core::slice::<impl [i32]>::as_ptr}, val: Value(<ZST>) }
    }

    bb10: {
        _66 = &_67;                      // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:88:24: 88:31
        _61 = (move _62, move _66);      // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:88:15: 88:32
        _70 = (_61.0: &*const i32);      // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:89:14: 89:22
        _71 = (_61.1: &*const i32);      // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:89:24: 89:33
        _73 = (*_70);                    // scope 9 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:90:20: 90:29
        _74 = (*_71);                    // scope 9 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:90:33: 90:43
        _72 = Eq(move _73, move _74);    // scope 9 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:90:20: 90:43
        switchInt(move _72) -> [0: bb12, otherwise: bb11]; // scope 9 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:90:20: 90:43
    }

    bb11: {
        _75 = const core::panicking::AssertKind::Ne; // scope 9 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:91:32: 91:65
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:91:32: 91:65
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x01)) }
        _77 = const core::panicking::AssertKind::Ne; // scope 10 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:95:54: 95:58
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:95:54: 95:58
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x01)) }
        _79 = _70;                       // scope 10 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:95:60: 95:70
        _78 = _79;                       // scope 10 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:95:60: 95:70
        _81 = _71;                       // scope 10 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:95:72: 95:83
        _80 = _81;                       // scope 10 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:95:72: 95:83
        _82 = Option::<Arguments<'_>>::None; // scope 10 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:95:85: 95:113
        _76 = core::panicking::assert_failed::<*const i32, *const i32>(move _77, move _78, move _80, move _82) -> bb21; // scope 10 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:95:21: 95:114
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:95:21: 95:53
                                         // + literal: Const { ty: for<'a, 'b, 'c> fn(core::panicking::AssertKind, &'a *const i32, &'b *const i32, Option<Arguments<'c>>) -> ! {core::panicking::assert_failed::<*const i32, *const i32>}, val: Value(<ZST>) }
    }

    bb12: {
        drop(_65) -> bb13;               // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:98:9: 98:10
    }

    bb13: {
        _87 = <Box<[i32]> as Default>::default() -> bb14; // scope 4 at ui/consts/zst_no_llvm_alloc.rs:20:16: 20:39
                                         // mir::Constant
                                         // + span: ui/consts/zst_no_llvm_alloc.rs:20:16: 20:37
                                         // + literal: Const { ty: fn() -> Box<[i32]> {<Box<[i32]> as Default>::default}, val: Value(<ZST>) }
    }

    bb14: {
        _112 = (((_87.0: std::ptr::Unique<[i32]>).0: std::ptr::NonNull<[i32]>).0: *const [i32]); // scope 4 at ui/consts/zst_no_llvm_alloc.rs:20:16: 20:48
        _86 = &(*_112);                  // scope 4 at ui/consts/zst_no_llvm_alloc.rs:20:16: 20:48
        _85 = core::slice::<impl [i32]>::as_ptr(move _86) -> [return: bb15, unwind: bb20]; // scope 4 at ui/consts/zst_no_llvm_alloc.rs:20:16: 20:48
                                         // mir::Constant
                                         // + span: ui/consts/zst_no_llvm_alloc.rs:20:40: 20:46
                                         // + literal: Const { ty: for<'a> fn(&'a [i32]) -> *const i32 {core::slice::<impl [i32]>::as_ptr}, val: Value(<ZST>) }
    }

    bb15: {
        _84 = &_85;                      // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:88:16: 88:22
        _106 = const _;                  // scope 4 at ui/consts/zst_no_llvm_alloc.rs:20:50: 20:55
                                         // mir::Constant
                                         // + span: ui/consts/zst_no_llvm_alloc.rs:20:50: 20:55
                                         // + literal: Const { ty: &[i32; 0], val: Unevaluated(main, [], Some(promoted[0])) }
        _92 = _106;                      // scope 4 at ui/consts/zst_no_llvm_alloc.rs:20:50: 20:55
        _91 = _92;                       // scope 4 at ui/consts/zst_no_llvm_alloc.rs:20:50: 20:64
        _90 = move _91 as &[i32] (Pointer(Unsize)); // scope 4 at ui/consts/zst_no_llvm_alloc.rs:20:50: 20:64
        _89 = core::slice::<impl [i32]>::as_ptr(move _90) -> [return: bb16, unwind: bb20]; // scope 4 at ui/consts/zst_no_llvm_alloc.rs:20:50: 20:64
                                         // mir::Constant
                                         // + span: ui/consts/zst_no_llvm_alloc.rs:20:56: 20:62
                                         // + literal: Const { ty: for<'a> fn(&'a [i32]) -> *const i32 {core::slice::<impl [i32]>::as_ptr}, val: Value(<ZST>) }
    }

    bb16: {
        _88 = &_89;                      // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:88:24: 88:31
        _83 = (move _84, move _88);      // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:88:15: 88:32
        _93 = (_83.0: &*const i32);      // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:89:14: 89:22
        _94 = (_83.1: &*const i32);      // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:89:24: 89:33
        _96 = (*_93);                    // scope 11 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:90:20: 90:29
        _97 = (*_94);                    // scope 11 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:90:33: 90:43
        _95 = Eq(move _96, move _97);    // scope 11 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:90:20: 90:43
        switchInt(move _95) -> [0: bb18, otherwise: bb17]; // scope 11 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:90:20: 90:43
    }

    bb17: {
        _98 = const core::panicking::AssertKind::Ne; // scope 11 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:91:32: 91:65
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:91:32: 91:65
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x01)) }
        _100 = const core::panicking::AssertKind::Ne; // scope 12 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:95:54: 95:58
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:95:54: 95:58
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x01)) }
        _102 = _93;                      // scope 12 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:95:60: 95:70
        _101 = _102;                     // scope 12 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:95:60: 95:70
        _104 = _94;                      // scope 12 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:95:72: 95:83
        _103 = _104;                     // scope 12 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:95:72: 95:83
        _105 = Option::<Arguments<'_>>::None; // scope 12 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:95:85: 95:113
        _99 = core::panicking::assert_failed::<*const i32, *const i32>(move _100, move _101, move _103, move _105) -> bb20; // scope 12 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:95:21: 95:114
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:95:21: 95:53
                                         // + literal: Const { ty: for<'a, 'b, 'c> fn(core::panicking::AssertKind, &'a *const i32, &'b *const i32, Option<Arguments<'c>>) -> ! {core::panicking::assert_failed::<*const i32, *const i32>}, val: Value(<ZST>) }
    }

    bb18: {
        drop(_87) -> bb19;               // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:98:9: 98:10
    }

    bb19: {
        return;                          // scope 0 at ui/consts/zst_no_llvm_alloc.rs:21:2: 21:2
    }

    bb20 (cleanup): {
        drop(_87) -> bb22;               // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:98:9: 98:10
    }

    bb21 (cleanup): {
        drop(_65) -> bb22;               // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:98:9: 98:10
    }

    bb22 (cleanup): {
        resume;                          // scope 0 at ui/consts/zst_no_llvm_alloc.rs:8:1: 21:2
    }
}

alloc1 (static: FOO, size: 0, align: 4) {}

promoted[0] in main: &[i32; 0] = {
    let mut _0: &[i32; 0];               // return place in scope 0 at ui/consts/zst_no_llvm_alloc.rs:20:50: 20:55
    let mut _1: [i32; 0];                // in scope 0 at ui/consts/zst_no_llvm_alloc.rs:20:52: 20:54

    bb0: {
        _1 = [];                         // scope 0 at ui/consts/zst_no_llvm_alloc.rs:20:52: 20:54
        _0 = &_1;                        // scope 0 at ui/consts/zst_no_llvm_alloc.rs:20:50: 20:55
        return;                          // scope 0 at ui/consts/zst_no_llvm_alloc.rs:20:50: 20:55
    }
}

promoted[1] in main: &usize = {
    let mut _0: &usize;                  // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:88:24: 88:31
    let mut _1: usize;                   // in scope 0 at ui/consts/zst_no_llvm_alloc.rs:15:45: 15:46

    bb0: {
        _1 = const 4_usize;              // scope 0 at ui/consts/zst_no_llvm_alloc.rs:15:45: 15:46
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:88:24: 88:31
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:88:24: 88:31
    }
}

promoted[2] in main: &usize = {
    let mut _0: &usize;                  // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:88:24: 88:31
    let mut _1: usize;                   // in scope 0 at ui/consts/zst_no_llvm_alloc.rs:12:42: 12:43

    bb0: {
        _1 = const 4_usize;              // scope 0 at ui/consts/zst_no_llvm_alloc.rs:12:42: 12:43
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:88:24: 88:31
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:88:24: 88:31
    }
}

promoted[3] in main: &Foo = {
    let mut _0: &Foo;                    // return place in scope 0 at ui/consts/zst_no_llvm_alloc.rs:11:27: 11:31
    let mut _1: Foo;                     // in scope 0 at ui/consts/zst_no_llvm_alloc.rs:11:28: 11:31

    bb0: {
        _1 = Foo;                        // scope 0 at ui/consts/zst_no_llvm_alloc.rs:11:28: 11:31
        _0 = &_1;                        // scope 0 at ui/consts/zst_no_llvm_alloc.rs:11:27: 11:31
        return;                          // scope 0 at ui/consts/zst_no_llvm_alloc.rs:11:27: 11:31
    }
}

promoted[4] in main: &usize = {
    let mut _0: &usize;                  // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:88:24: 88:31
    let mut _1: usize;                   // in scope 0 at ui/consts/zst_no_llvm_alloc.rs:10:41: 10:42

    bb0: {
        _1 = const 1_usize;              // scope 0 at ui/consts/zst_no_llvm_alloc.rs:10:41: 10:42
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:88:24: 88:31
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:88:24: 88:31
    }
}

promoted[5] in main: &() = {
    let mut _0: &();                     // return place in scope 0 at ui/consts/zst_no_llvm_alloc.rs:9:26: 9:29
    let mut _1: ();                      // in scope 0 at ui/consts/zst_no_llvm_alloc.rs:9:27: 9:29

    bb0: {
        _1 = ();                         // scope 0 at ui/consts/zst_no_llvm_alloc.rs:9:27: 9:29
        _0 = &_1;                        // scope 0 at ui/consts/zst_no_llvm_alloc.rs:9:26: 9:29
        return;                          // scope 0 at ui/consts/zst_no_llvm_alloc.rs:9:26: 9:29
    }
}
