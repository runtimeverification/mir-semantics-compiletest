// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
fn RunQueryDsl::first(_1: Self, _2: &Conn) -> U {
    debug self => _1;                    // in scope 0 at ui/consts/issue-68264-overflow.rs:33:17: 33:21
    debug _conn => _2;                   // in scope 0 at ui/consts/issue-68264-overflow.rs:33:23: 33:28
    let mut _0: U;                       // return place in scope 0 at ui/consts/issue-68264-overflow.rs:33:40: 33:41
    let mut _3: !;                       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:706:9: 706:52

    bb0: {
        _3 = core::panicking::panic(const "not implemented") -> bb1; // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:706:9: 706:52
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:706:9: 706:33
                                         // + literal: Const { ty: fn(&'static str) -> ! {core::panicking::panic}, val: Value(<ZST>) }
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:706:34: 706:51
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
    }

    bb1 (cleanup): {
        drop(_1) -> bb2;                 // scope 0 at ui/consts/issue-68264-overflow.rs:40:5: 40:6
    }

    bb2 (cleanup): {
        resume;                          // scope 0 at ui/consts/issue-68264-overflow.rs:33:5: 40:6
    }
}

fn main() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/consts/issue-68264-overflow.rs:43:11: 43:11

    bb0: {
        return;                          // scope 0 at ui/consts/issue-68264-overflow.rs:43:13: 43:13
    }
}
