// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
static x: (i32, i32) = {
    let mut _0: (i32, i32);              // return place in scope 0 at ui/consts/const-rec-and-tup.rs:10:12: 10:21

    bb0: {
        _0 = (const -287375139_i32, const -904811746_i32); // scope 0 at ui/consts/const-rec-and-tup.rs:10:24: 10:48
        return;                          // scope 0 at ui/consts/const-rec-and-tup.rs:10:1: 10:49
    }
}

static y: AnotherPair = {
    let mut _0: AnotherPair;             // return place in scope 0 at ui/consts/const-rec-and-tup.rs:11:12: 11:23
    let mut _1: (i64, i64);              // in scope 0 at ui/consts/const-rec-and-tup.rs:11:42: 12:63
    let mut _2: Pair;                    // in scope 0 at ui/consts/const-rec-and-tup.rs:13:32: 14:65

    bb0: {
        StorageLive(_1);                 // scope 0 at ui/consts/const-rec-and-tup.rs:11:42: 12:63
        _1 = (const -1085102592571150096_i64, const -6076574518398440533_i64); // scope 0 at ui/consts/const-rec-and-tup.rs:11:42: 12:63
        StorageLive(_2);                 // scope 0 at ui/consts/const-rec-and-tup.rs:13:32: 14:65
        _2 = Pair { a: const 3.1415926535897931f64, b: const 2.7182818284590451f64 }; // scope 0 at ui/consts/const-rec-and-tup.rs:13:32: 14:65
        _0 = AnotherPair { x: move _1, y: move _2 }; // scope 0 at ui/consts/const-rec-and-tup.rs:11:26: 14:66
        StorageDead(_2);                 // scope 0 at ui/consts/const-rec-and-tup.rs:14:65: 14:66
        StorageDead(_1);                 // scope 0 at ui/consts/const-rec-and-tup.rs:14:65: 14:66
        return;                          // scope 0 at ui/consts/const-rec-and-tup.rs:11:1: 14:67
    }
}

fn main() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/consts/const-rec-and-tup.rs:16:15: 16:15
    let _1: i64;                         // in scope 0 at ui/consts/const-rec-and-tup.rs:17:10: 17:11
    let mut _2: &AnotherPair;            // in scope 0 at ui/consts/const-rec-and-tup.rs:17:18: 17:19
    let mut _3: (&i64, &i64);            // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _4: &i64;                    // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let mut _5: &i64;                    // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _8: bool;                    // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    let mut _9: bool;                    // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
    let mut _10: i64;                    // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
    let mut _11: i64;                    // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
    let _13: !;                          // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
    let mut _14: core::panicking::AssertKind; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
    let mut _15: &i64;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let _16: &i64;                       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let mut _17: &i64;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let _18: &i64;                       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let mut _19: std::option::Option<std::fmt::Arguments<'_>>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
    let _20: ();                         // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:62
    let mut _21: std::fmt::Arguments<'_>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _22: &[&str];                // in scope 0 at ui/consts/const-rec-and-tup.rs:19:14: 19:21
    let mut _23: &[&str; 2];             // in scope 0 at ui/consts/const-rec-and-tup.rs:19:14: 19:21
    let _24: &[&str; 2];                 // in scope 0 at ui/consts/const-rec-and-tup.rs:19:14: 19:21
    let mut _25: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _26: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let _27: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let _28: [core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _29: core::fmt::ArgumentV1<'_>; // in scope 0 at ui/consts/const-rec-and-tup.rs:19:23: 19:24
    let mut _30: &i64;                   // in scope 0 at ui/consts/const-rec-and-tup.rs:19:23: 19:24
    let _31: &i64;                       // in scope 0 at ui/consts/const-rec-and-tup.rs:19:23: 19:24
    let mut _32: &[std::fmt::rt::v1::Argument]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _33: &[std::fmt::rt::v1::Argument; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let _34: &[std::fmt::rt::v1::Argument; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let _35: [std::fmt::rt::v1::Argument; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _36: std::fmt::rt::v1::Argument; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _37: std::fmt::rt::v1::Alignment; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _38: std::fmt::rt::v1::Count; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _39: std::fmt::rt::v1::Count; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _40: core::fmt::UnsafeArg;   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    scope 1 {
        debug p => _1;                   // in scope 1 at ui/consts/const-rec-and-tup.rs:17:10: 17:11
        let _6: &i64;                    // in scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        let _7: &i64;                    // in scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        let mut _41: &[&str; 2];         // in scope 1 at ui/consts/const-rec-and-tup.rs:19:14: 19:21
        let mut _42: &i64;               // in scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        scope 2 {
            debug left_val => _6;        // in scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
            debug right_val => _7;       // in scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
            let _12: core::panicking::AssertKind; // in scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
            scope 3 {
                debug kind => _12;       // in scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
            }
        }
        scope 4 {
        }
    }

    bb0: {
        _2 = const {alloc1: &AnotherPair}; // scope 0 at ui/consts/const-rec-and-tup.rs:17:18: 17:19
                                         // mir::Constant
                                         // + span: ui/consts/const-rec-and-tup.rs:17:18: 17:19
                                         // + literal: Const { ty: &AnotherPair, val: Value(Scalar(alloc1)) }
        _1 = (((*_2).0: (i64, i64)).0: i64); // scope 0 at ui/consts/const-rec-and-tup.rs:17:10: 17:11
        _4 = &_1;                        // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _42 = const _;                   // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // + literal: Const { ty: &i64, val: Unevaluated(main, [], Some(promoted[1])) }
        _5 = _42;                        // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _3 = (move _4, move _5);         // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _6 = (_3.0: &i64);               // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _7 = (_3.1: &i64);               // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _10 = (*_6);                     // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
        _11 = const -1085102592571150096_i64; // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
        _9 = Eq(move _10, move _11);     // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
        _8 = Not(move _9);               // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
        switchInt(move _8) -> [0: bb2, otherwise: bb1]; // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    }

    bb1: {
        _12 = const core::panicking::AssertKind::Eq; // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _14 = const core::panicking::AssertKind::Eq; // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _16 = _6;                        // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _15 = _16;                       // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _18 = _7;                        // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _17 = _18;                       // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _19 = Option::<Arguments<'_>>::None; // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
        _13 = core::panicking::assert_failed::<i64, i64>(move _14, move _15, move _17, move _19); // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:53
                                         // + literal: Const { ty: for<'a, 'b, 'c> fn(core::panicking::AssertKind, &'a i64, &'b i64, Option<Arguments<'c>>) -> ! {core::panicking::assert_failed::<i64, i64>}, val: Value(<ZST>) }
    }

    bb2: {
        _41 = const _;                   // scope 1 at ui/consts/const-rec-and-tup.rs:19:14: 19:21
                                         // mir::Constant
                                         // + span: ui/consts/const-rec-and-tup.rs:19:14: 19:21
                                         // + literal: Const { ty: &[&str; 2], val: Unevaluated(main, [], Some(promoted[0])) }
        _24 = _41;                       // scope 1 at ui/consts/const-rec-and-tup.rs:19:14: 19:21
        _23 = _24;                       // scope 1 at ui/consts/const-rec-and-tup.rs:19:14: 19:21
        _22 = move _23 as &[&str] (Pointer(Unsize)); // scope 1 at ui/consts/const-rec-and-tup.rs:19:14: 19:21
        _31 = &_1;                       // scope 1 at ui/consts/const-rec-and-tup.rs:19:23: 19:24
        _30 = _31;                       // scope 1 at ui/consts/const-rec-and-tup.rs:19:23: 19:24
        _29 = core::fmt::ArgumentV1::<'_>::new_lower_hex::<i64>(move _30) -> bb3; // scope 1 at ui/consts/const-rec-and-tup.rs:19:23: 19:24
                                         // mir::Constant
                                         // + span: ui/consts/const-rec-and-tup.rs:19:23: 19:24
                                         // + user_ty: UserType(1)
                                         // + literal: Const { ty: for<'b> fn(&'b i64) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_lower_hex::<i64>}, val: Value(<ZST>) }
    }

    bb3: {
        _28 = [move _29];                // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _27 = &_28;                      // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _26 = _27;                       // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _25 = move _26 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _37 = const std::fmt::rt::v1::Alignment::Unknown; // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // + literal: Const { ty: std::fmt::rt::v1::Alignment, val: Value(Scalar(0x03)) }
        _38 = Implied;                   // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _39 = Implied;                   // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _36 = Argument::new(const 0_usize, const ' ', move _37, const 4_u32, move _38, move _39) -> bb4; // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // + literal: Const { ty: fn(usize, char, std::fmt::rt::v1::Alignment, u32, Count, Count) -> Argument {Argument::new}, val: Value(<ZST>) }
    }

    bb4: {
        _35 = [move _36];                // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _34 = &_35;                      // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _33 = _34;                       // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _32 = move _33 as &[std::fmt::rt::v1::Argument] (Pointer(Unsize)); // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _40 = core::fmt::UnsafeArg::new() -> bb5; // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // + literal: Const { ty: unsafe fn() -> core::fmt::UnsafeArg {core::fmt::UnsafeArg::new}, val: Value(<ZST>) }
    }

    bb5: {
        _21 = Arguments::<'_>::new_v1_formatted(move _22, move _25, move _32, move _40) -> bb6; // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>], &[Argument], core::fmt::UnsafeArg) -> Arguments<'_> {Arguments::<'_>::new_v1_formatted}, val: Value(<ZST>) }
    }

    bb6: {
        _20 = _print(move _21) -> bb7;   // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:62
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:27
                                         // + literal: Const { ty: for<'a> fn(Arguments<'a>) {_print}, val: Value(<ZST>) }
    }

    bb7: {
        return;                          // scope 0 at ui/consts/const-rec-and-tup.rs:20:2: 20:2
    }
}

alloc1 (static: y, size: 32, align: 8) {
    0x00 │ f0 f0 f0 f0 f0 f0 f0 f0 ab ab ab ab ab ab ab ab │ ................
    0x10 │ 18 2d 44 54 fb 21 09 40 69 57 14 8b 0a bf 05 40 │ .-DT.!.@iW.....@
}

promoted[0] in main: &[&str; 2] = {
    let mut _0: &[&str; 2];              // return place in scope 0 at ui/consts/const-rec-and-tup.rs:19:14: 19:21
    let mut _1: [&str; 2];               // in scope 0 at ui/consts/const-rec-and-tup.rs:19:14: 19:21

    bb0: {
        _1 = [const "", const "\n"];     // scope 0 at ui/consts/const-rec-and-tup.rs:19:14: 19:21
                                         // mir::Constant
                                         // + span: ui/consts/const-rec-and-tup.rs:19:14: 19:21
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
                                         // mir::Constant
                                         // + span: ui/consts/const-rec-and-tup.rs:19:14: 19:21
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at ui/consts/const-rec-and-tup.rs:19:14: 19:21
        return;                          // scope 0 at ui/consts/const-rec-and-tup.rs:19:14: 19:21
    }
}

promoted[1] in main: &i64 = {
    let mut _0: &i64;                    // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _1: i64;                     // in scope 0 at ui/consts/const-rec-and-tup.rs:18:19: 18:40

    bb0: {
        _1 = const -1085102592571150096_i64; // scope 0 at ui/consts/const-rec-and-tup.rs:18:19: 18:40
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    }
}
