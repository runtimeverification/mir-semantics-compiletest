// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
static bar: Bar = {
    let mut _0: Bar;                     // return place in scope 0 at ui/consts/const-struct-offsets.rs:16:13: 16:16
    let mut _1: Foo;                     // in scope 0 at ui/consts/const-struct-offsets.rs:16:34: 16:48

    bb0: {
        StorageLive(_1);                 // scope 0 at ui/consts/const-struct-offsets.rs:16:34: 16:48
        _1 = Foo::IntVal(const 0_i32);   // scope 0 at ui/consts/const-struct-offsets.rs:16:34: 16:48
        _0 = Bar { i: const 0_i32, v: move _1 }; // scope 0 at ui/consts/const-struct-offsets.rs:16:19: 16:50
        StorageDead(_1);                 // scope 0 at ui/consts/const-struct-offsets.rs:16:49: 16:50
        return;                          // scope 0 at ui/consts/const-struct-offsets.rs:16:1: 16:51
    }
}

fn main() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/consts/const-struct-offsets.rs:18:15: 18:15

    bb0: {
        return;                          // scope 0 at ui/consts/const-struct-offsets.rs:18:17: 18:17
    }
}

fn Foo::IntVal(_1: i32) -> Foo {
    let mut _0: Foo;                     // return place in scope 0 at ui/consts/const-struct-offsets.rs:7:5: 7:11

    bb0: {
        _0 = Foo::IntVal(move _1);       // scope 0 at ui/consts/const-struct-offsets.rs:7:5: 7:11
        return;                          // scope 0 at ui/consts/const-struct-offsets.rs:7:5: 7:11
    }
}

// MIR FOR CTFE
fn Foo::IntVal(_1: i32) -> Foo {
    let mut _0: Foo;                     // return place in scope 0 at ui/consts/const-struct-offsets.rs:7:5: 7:11

    bb0: {
        _0 = Foo::IntVal(move _1);       // scope 0 at ui/consts/const-struct-offsets.rs:7:5: 7:11
        return;                          // scope 0 at ui/consts/const-struct-offsets.rs:7:5: 7:11
    }
}

fn Foo::Int64Val(_1: i64) -> Foo {
    let mut _0: Foo;                     // return place in scope 0 at ui/consts/const-struct-offsets.rs:8:5: 8:13

    bb0: {
        _0 = Foo::Int64Val(move _1);     // scope 0 at ui/consts/const-struct-offsets.rs:8:5: 8:13
        return;                          // scope 0 at ui/consts/const-struct-offsets.rs:8:5: 8:13
    }
}

// MIR FOR CTFE
fn Foo::Int64Val(_1: i64) -> Foo {
    let mut _0: Foo;                     // return place in scope 0 at ui/consts/const-struct-offsets.rs:8:5: 8:13

    bb0: {
        _0 = Foo::Int64Val(move _1);     // scope 0 at ui/consts/const-struct-offsets.rs:8:5: 8:13
        return;                          // scope 0 at ui/consts/const-struct-offsets.rs:8:5: 8:13
    }
}
