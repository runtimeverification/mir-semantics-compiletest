// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
fn main() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/consts/issue-3521_fixed.rs:2:11: 2:11
    let _1: ();                          // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:62
    let mut _2: std::fmt::Arguments<'_>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _3: &[&str];                 // in scope 0 at ui/consts/issue-3521_fixed.rs:12:14: 12:20
    let mut _4: &[&str; 2];              // in scope 0 at ui/consts/issue-3521_fixed.rs:12:14: 12:20
    let _5: &[&str; 2];                  // in scope 0 at ui/consts/issue-3521_fixed.rs:12:14: 12:20
    let mut _6: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _7: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let _8: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let _9: [core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _10: core::fmt::ArgumentV1<'_>; // in scope 0 at ui/consts/issue-3521_fixed.rs:12:22: 12:32
    let mut _11: &main::Stuff;           // in scope 0 at ui/consts/issue-3521_fixed.rs:12:22: 12:32
    let _12: &main::Stuff;               // in scope 0 at ui/consts/issue-3521_fixed.rs:12:22: 12:32
    let mut _13: &main::Stuff;           // in scope 0 at ui/consts/issue-3521_fixed.rs:12:22: 12:32
    let mut _14: &[&str; 2];             // in scope 0 at ui/consts/issue-3521_fixed.rs:12:14: 12:20

    bb0: {
        _14 = const _;                   // scope 0 at ui/consts/issue-3521_fixed.rs:12:14: 12:20
                                         // mir::Constant
                                         // + span: ui/consts/issue-3521_fixed.rs:12:14: 12:20
                                         // + literal: Const { ty: &[&str; 2], val: Unevaluated(main, [], Some(promoted[1])) }
        _5 = _14;                        // scope 0 at ui/consts/issue-3521_fixed.rs:12:14: 12:20
        _4 = _5;                         // scope 0 at ui/consts/issue-3521_fixed.rs:12:14: 12:20
        _3 = move _4 as &[&str] (Pointer(Unsize)); // scope 0 at ui/consts/issue-3521_fixed.rs:12:14: 12:20
        _13 = const _;                   // scope 0 at ui/consts/issue-3521_fixed.rs:12:22: 12:32
                                         // mir::Constant
                                         // + span: ui/consts/issue-3521_fixed.rs:12:22: 12:32
                                         // + literal: Const { ty: &Stuff, val: Unevaluated(main, [], Some(promoted[0])) }
        _12 = _13;                       // scope 0 at ui/consts/issue-3521_fixed.rs:12:22: 12:32
        _11 = _12;                       // scope 0 at ui/consts/issue-3521_fixed.rs:12:22: 12:32
        _10 = core::fmt::ArgumentV1::<'_>::new_debug::<Stuff>(move _11) -> bb1; // scope 0 at ui/consts/issue-3521_fixed.rs:12:22: 12:32
                                         // mir::Constant
                                         // + span: ui/consts/issue-3521_fixed.rs:12:22: 12:32
                                         // + user_ty: UserType(1)
                                         // + literal: Const { ty: for<'b> fn(&'b Stuff) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_debug::<Stuff>}, val: Value(<ZST>) }
    }

    bb1: {
        _9 = [move _10];                 // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _8 = &_9;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _7 = _8;                         // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _6 = move _7 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _2 = Arguments::<'_>::new_v1(move _3, move _6) -> bb2; // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb2: {
        _1 = _print(move _2) -> bb3;     // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:62
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:27
                                         // + literal: Const { ty: for<'a> fn(Arguments<'a>) {_print}, val: Value(<ZST>) }
    }

    bb3: {
        return;                          // scope 0 at ui/consts/issue-3521_fixed.rs:13:2: 13:2
    }
}

promoted[0] in main: &Stuff = {
    let mut _0: &main::Stuff;            // return place in scope 0 at ui/consts/issue-3521_fixed.rs:12:22: 12:32
    let mut _1: main::Stuff;             // in scope 0 at ui/consts/issue-3521_fixed.rs:12:22: 12:32

    bb0: {
        _1 = Stuff::Bar;                 // scope 0 at ui/consts/issue-3521_fixed.rs:12:22: 12:32
        _0 = &_1;                        // scope 0 at ui/consts/issue-3521_fixed.rs:12:22: 12:32
        return;                          // scope 0 at ui/consts/issue-3521_fixed.rs:12:22: 12:32
    }
}

promoted[1] in main: &[&str; 2] = {
    let mut _0: &[&str; 2];              // return place in scope 0 at ui/consts/issue-3521_fixed.rs:12:14: 12:20
    let mut _1: [&str; 2];               // in scope 0 at ui/consts/issue-3521_fixed.rs:12:14: 12:20

    bb0: {
        _1 = [const "", const "\n"];     // scope 0 at ui/consts/issue-3521_fixed.rs:12:14: 12:20
                                         // mir::Constant
                                         // + span: ui/consts/issue-3521_fixed.rs:12:14: 12:20
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
                                         // mir::Constant
                                         // + span: ui/consts/issue-3521_fixed.rs:12:14: 12:20
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at ui/consts/issue-3521_fixed.rs:12:14: 12:20
        return;                          // scope 0 at ui/consts/issue-3521_fixed.rs:12:14: 12:20
    }
}

const foo: isize = {
    let mut _0: isize;                   // return place in scope 0 at ui/consts/issue-3521_fixed.rs:4:16: 4:21

    bb0: {
        _0 = const 100_isize;            // scope 0 at ui/consts/issue-3521_fixed.rs:4:24: 4:27
        return;                          // scope 0 at ui/consts/issue-3521_fixed.rs:4:5: 4:28
    }
}

Stuff::Bar::{constant#0}: isize = {
    let mut _0: isize;                   // return place in scope 0 at ui/consts/issue-3521_fixed.rs:8:15: 8:18

    bb0: {
        _0 = const _;                    // scope 0 at ui/consts/issue-3521_fixed.rs:8:15: 8:18
        return;                          // scope 0 at ui/consts/issue-3521_fixed.rs:8:15: 8:18
    }
}

fn main::<impl at ui/consts/issue-3521_fixed.rs:6:14: 6:19>::fmt(_1: &Stuff, _2: &mut Formatter<'_>) -> Result<(), std::fmt::Error> {
    debug self => _1;                    // in scope 0 at ui/consts/issue-3521_fixed.rs:6:14: 6:19
    debug f => _2;                       // in scope 0 at ui/consts/issue-3521_fixed.rs:6:14: 6:19
    let mut _0: std::result::Result<(), std::fmt::Error>; // return place in scope 0 at ui/consts/issue-3521_fixed.rs:6:14: 6:19
    let mut _3: &mut std::fmt::Formatter<'_>; // in scope 0 at ui/consts/issue-3521_fixed.rs:6:14: 6:19
    let mut _4: &str;                    // in scope 0 at ui/consts/issue-3521_fixed.rs:6:14: 6:19
    let _5: &str;                        // in scope 0 at ui/consts/issue-3521_fixed.rs:6:14: 6:19

    bb0: {
        _3 = &mut (*_2);                 // scope 0 at ui/consts/issue-3521_fixed.rs:6:14: 6:19
        _5 = const "Bar";                // scope 0 at ui/consts/issue-3521_fixed.rs:6:14: 6:19
                                         // mir::Constant
                                         // + span: ui/consts/issue-3521_fixed.rs:6:14: 6:19
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _4 = _5;                         // scope 0 at ui/consts/issue-3521_fixed.rs:6:14: 6:19
        _0 = Formatter::<'_>::write_str(move _3, move _4) -> bb1; // scope 0 at ui/consts/issue-3521_fixed.rs:6:14: 6:19
                                         // mir::Constant
                                         // + span: ui/consts/issue-3521_fixed.rs:6:14: 6:19
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a mut Formatter<'_>, &'b str) -> Result<(), std::fmt::Error> {Formatter::<'_>::write_str}, val: Value(<ZST>) }
    }

    bb1: {
        return;                          // scope 0 at ui/consts/issue-3521_fixed.rs:6:19: 6:19
    }
}
