// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
fn main() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/consts/issue-77062-large-zst-array.rs:3:11: 3:11
    scope 1 {
    }

    bb0: {
        return;                          // scope 0 at ui/consts/issue-77062-large-zst-array.rs:5:2: 5:2
    }
}

promoted[0] in main: &[(); usize::MAX] = {
    let mut _0: &[(); usize::MAX];       // return place in scope 0 at ui/consts/issue-77062-large-zst-array.rs:4:13: 4:30
    let mut _1: [(); usize::MAX];        // in scope 0 at ui/consts/issue-77062-large-zst-array.rs:4:14: 4:30
    let mut _2: ();                      // in scope 0 at ui/consts/issue-77062-large-zst-array.rs:4:15: 4:17

    bb0: {
        _2 = ();                         // scope 0 at ui/consts/issue-77062-large-zst-array.rs:4:15: 4:17
        _1 = [move _2; usize::MAX];      // scope 0 at ui/consts/issue-77062-large-zst-array.rs:4:14: 4:30
        _0 = &_1;                        // scope 0 at ui/consts/issue-77062-large-zst-array.rs:4:13: 4:30
        return;                          // scope 0 at ui/consts/issue-77062-large-zst-array.rs:4:13: 4:30
    }
}

main::{constant#0}: usize = {
    let mut _0: usize;                   // return place in scope 0 at ui/consts/issue-77062-large-zst-array.rs:4:19: 4:29

    bb0: {
        _0 = const _;                    // scope 0 at ui/consts/issue-77062-large-zst-array.rs:4:19: 4:29
        return;                          // scope 0 at ui/consts/issue-77062-large-zst-array.rs:4:19: 4:29
    }
}
