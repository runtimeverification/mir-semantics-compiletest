// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
static mut FOO: Foo = {
    let mut _0: Foo;                     // return place in scope 0 at ui/consts/static-raw-pointer-interning2.rs:3:17: 3:20
    let mut _1: *mut i32;                // in scope 0 at ui/consts/static-raw-pointer-interning2.rs:4:12: 4:47
    let mut _2: *mut [i32];              // in scope 0 at ui/consts/static-raw-pointer-interning2.rs:4:12: 4:35
    let mut _3: *mut [i32; 1];           // in scope 0 at ui/consts/static-raw-pointer-interning2.rs:4:12: 4:21
    let mut _4: &mut [i32; 1];           // in scope 0 at ui/consts/static-raw-pointer-interning2.rs:4:12: 4:21
    let mut _5: [i32; 1];                // in scope 0 at ui/consts/static-raw-pointer-interning2.rs:4:17: 4:21

    bb0: {
        StorageLive(_1);                 // scope 0 at ui/consts/static-raw-pointer-interning2.rs:4:12: 4:47
        StorageLive(_2);                 // scope 0 at ui/consts/static-raw-pointer-interning2.rs:4:12: 4:35
        StorageLive(_3);                 // scope 0 at ui/consts/static-raw-pointer-interning2.rs:4:12: 4:21
        StorageLive(_4);                 // scope 0 at ui/consts/static-raw-pointer-interning2.rs:4:12: 4:21
        StorageLive(_5);                 // scope 0 at ui/consts/static-raw-pointer-interning2.rs:4:17: 4:21
        _5 = [const 42_i32];             // scope 0 at ui/consts/static-raw-pointer-interning2.rs:4:17: 4:21
        _4 = &mut _5;                    // scope 0 at ui/consts/static-raw-pointer-interning2.rs:4:12: 4:21
        _3 = &raw mut (*_4);             // scope 0 at ui/consts/static-raw-pointer-interning2.rs:4:12: 4:21
        _2 = move _3 as *mut [i32] (Pointer(Unsize)); // scope 0 at ui/consts/static-raw-pointer-interning2.rs:4:12: 4:21
        StorageDead(_3);                 // scope 0 at ui/consts/static-raw-pointer-interning2.rs:4:20: 4:21
        _1 = move _2 as *mut i32 (PtrToPtr); // scope 0 at ui/consts/static-raw-pointer-interning2.rs:4:12: 4:47
        StorageDead(_2);                 // scope 0 at ui/consts/static-raw-pointer-interning2.rs:4:46: 4:47
        _0 = Foo { field: move _1 };     // scope 0 at ui/consts/static-raw-pointer-interning2.rs:3:23: 5:2
        StorageDead(_4);                 // scope 0 at ui/consts/static-raw-pointer-interning2.rs:5:1: 5:2
        StorageDead(_1);                 // scope 0 at ui/consts/static-raw-pointer-interning2.rs:5:1: 5:2
        return;                          // scope 0 at ui/consts/static-raw-pointer-interning2.rs:3:1: 5:3
    }
}

fn main() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/consts/static-raw-pointer-interning2.rs:13:11: 13:11
    let mut _1: (&i32, &i32);            // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _2: &i32;                    // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let _3: i32;                         // in scope 0 at ui/consts/static-raw-pointer-interning2.rs:14:16: 14:54
    let mut _4: *mut Foo;                // in scope 0 at ui/consts/static-raw-pointer-interning2.rs:14:26: 14:29
    let mut _5: *mut Foo;                // in scope 0 at ui/consts/static-raw-pointer-interning2.rs:14:43: 14:46
    let mut _6: &i32;                    // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let _7: &i32;                        // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
    let _8: &i32;                        // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
    let mut _9: bool;                    // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    let mut _10: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
    let mut _11: i32;                    // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
    let mut _12: i32;                    // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
    let _14: !;                          // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
    let mut _15: core::panicking::AssertKind; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
    let mut _16: &i32;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let _17: &i32;                       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let mut _18: &i32;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let _19: &i32;                       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let mut _20: std::option::Option<std::fmt::Arguments<'_>>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
    let mut _21: &i32;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _22: *mut i32;               // in scope 0 at ui/consts/static-raw-pointer-interning2.rs:14:26: 14:29
    let mut _23: *mut i32;               // in scope 0 at ui/consts/static-raw-pointer-interning2.rs:14:43: 14:46
    scope 1 {
    }
    scope 2 {
        debug left_val => _7;            // in scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        debug right_val => _8;           // in scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        let _13: core::panicking::AssertKind; // in scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
        scope 3 {
            debug kind => _13;           // in scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
        }
    }

    bb0: {
        _4 = const {alloc1: *mut Foo};   // scope 1 at ui/consts/static-raw-pointer-interning2.rs:14:26: 14:29
                                         // mir::Constant
                                         // + span: ui/consts/static-raw-pointer-interning2.rs:14:26: 14:29
                                         // + literal: Const { ty: *mut Foo, val: Value(Scalar(alloc1)) }
        _22 = deref_copy ((*_4).0: *mut i32); // scope 1 at ui/consts/static-raw-pointer-interning2.rs:14:25: 14:40
        (*_22) = const 69_i32;           // scope 1 at ui/consts/static-raw-pointer-interning2.rs:14:25: 14:40
        _5 = const {alloc1: *mut Foo};   // scope 1 at ui/consts/static-raw-pointer-interning2.rs:14:43: 14:46
                                         // mir::Constant
                                         // + span: ui/consts/static-raw-pointer-interning2.rs:14:43: 14:46
                                         // + literal: Const { ty: *mut Foo, val: Value(Scalar(alloc1)) }
        _23 = deref_copy ((*_5).0: *mut i32); // scope 1 at ui/consts/static-raw-pointer-interning2.rs:14:42: 14:52
        _3 = (*_23);                     // scope 1 at ui/consts/static-raw-pointer-interning2.rs:14:42: 14:52
        _2 = &_3;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _21 = const _;                   // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // + literal: Const { ty: &i32, val: Unevaluated(main, [], Some(promoted[0])) }
        _6 = _21;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _1 = (move _2, move _6);         // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _7 = (_1.0: &i32);               // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _8 = (_1.1: &i32);               // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _11 = (*_7);                     // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
        _12 = const 69_i32;              // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
        _10 = Eq(move _11, move _12);    // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
        _9 = Not(move _10);              // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
        switchInt(move _9) -> [0: bb2, otherwise: bb1]; // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    }

    bb1: {
        _13 = const core::panicking::AssertKind::Eq; // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _15 = const core::panicking::AssertKind::Eq; // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _17 = _7;                        // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _16 = _17;                       // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _19 = _8;                        // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _18 = _19;                       // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _20 = Option::<Arguments<'_>>::None; // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
        _14 = core::panicking::assert_failed::<i32, i32>(move _15, move _16, move _18, move _20); // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:53
                                         // + literal: Const { ty: for<'a, 'b, 'c> fn(core::panicking::AssertKind, &'a i32, &'b i32, Option<Arguments<'c>>) -> ! {core::panicking::assert_failed::<i32, i32>}, val: Value(<ZST>) }
    }

    bb2: {
        return;                          // scope 0 at ui/consts/static-raw-pointer-interning2.rs:15:2: 15:2
    }
}

alloc1 (static: FOO, size: 8, align: 8) {
    ╾───────alloc3────────╼                         │ ╾──────╼
}

alloc3 (size: 4, align: 4) {
    2a 00 00 00                                     │ *...
}

promoted[0] in main: &i32 = {
    let mut _0: &i32;                    // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _1: i32;                     // in scope 0 at ui/consts/static-raw-pointer-interning2.rs:14:56: 14:58

    bb0: {
        _1 = const 69_i32;               // scope 0 at ui/consts/static-raw-pointer-interning2.rs:14:56: 14:58
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    }
}
