// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
fn <impl at ui/consts/const-size_of_val-align_of_val.rs:10:10: 10:15>::clone(_1: &Bar) -> Bar {
    debug self => _1;                    // in scope 0 at ui/consts/const-size_of_val-align_of_val.rs:10:10: 10:15
    let mut _0: Bar;                     // return place in scope 0 at ui/consts/const-size_of_val-align_of_val.rs:10:10: 10:15
    scope 1 {
        scope 2 {
        }
    }

    bb0: {
        _0 = (*_1);                      // scope 2 at ui/consts/const-size_of_val-align_of_val.rs:10:10: 10:15
        return;                          // scope 0 at ui/consts/const-size_of_val-align_of_val.rs:10:15: 10:15
    }
}

Ugh::_a::{constant#0}: usize = {
    let mut _0: usize;                   // return place in scope 0 at ui/consts/const-size_of_val-align_of_val.rs:18:14: 18:15

    bb0: {
        _0 = const 3_usize;              // scope 0 at ui/consts/const-size_of_val-align_of_val.rs:18:14: 18:15
        return;                          // scope 0 at ui/consts/const-size_of_val-align_of_val.rs:18:14: 18:15
    }
}

const FOO: Foo = {
    let mut _0: Foo;                     // return place in scope 0 at ui/consts/const-size_of_val-align_of_val.rs:22:12: 22:15

    bb0: {
        _0 = Foo(const 4_u32);           // scope 0 at ui/consts/const-size_of_val-align_of_val.rs:22:18: 22:24
        return;                          // scope 0 at ui/consts/const-size_of_val-align_of_val.rs:22:1: 22:25
    }
}

const BAR: Bar = {
    let mut _0: Bar;                     // return place in scope 0 at ui/consts/const-size_of_val-align_of_val.rs:23:12: 23:15

    bb0: {
        _0 = Bar { _x: const 4_u8, _y: const 1_u16, _z: const 2_u8 }; // scope 0 at ui/consts/const-size_of_val-align_of_val.rs:23:18: 23:45
        return;                          // scope 0 at ui/consts/const-size_of_val-align_of_val.rs:23:1: 23:46
    }
}

const UGH: Ugh = {
    let mut _0: Ugh;                     // return place in scope 0 at ui/consts/const-size_of_val-align_of_val.rs:24:12: 24:15
    let mut _1: [u8; 3];                 // in scope 0 at ui/consts/const-size_of_val-align_of_val.rs:24:28: 24:34

    bb0: {
        StorageLive(_1);                 // scope 0 at ui/consts/const-size_of_val-align_of_val.rs:24:28: 24:34
        _1 = [const 0_u8; 3];            // scope 0 at ui/consts/const-size_of_val-align_of_val.rs:24:28: 24:34
        _0 = Ugh { _a: move _1 };        // scope 0 at ui/consts/const-size_of_val-align_of_val.rs:24:18: 24:36
        StorageDead(_1);                 // scope 0 at ui/consts/const-size_of_val-align_of_val.rs:24:35: 24:36
        return;                          // scope 0 at ui/consts/const-size_of_val-align_of_val.rs:24:1: 24:37
    }
}

UGH::{constant#0}: usize = {
    let mut _0: usize;                   // return place in scope 0 at ui/consts/const-size_of_val-align_of_val.rs:24:32: 24:33

    bb0: {
        _0 = const 3_usize;              // scope 0 at ui/consts/const-size_of_val-align_of_val.rs:24:32: 24:33
        return;                          // scope 0 at ui/consts/const-size_of_val-align_of_val.rs:24:32: 24:33
    }
}

const SIZE_OF_FOO: usize = {
    let mut _0: usize;                   // return place in scope 0 at ui/consts/const-size_of_val-align_of_val.rs:26:20: 26:25
    let mut _1: &Foo;                    // in scope 0 at ui/consts/const-size_of_val-align_of_val.rs:26:45: 26:49
    let _2: &Foo;                        // in scope 0 at ui/consts/const-size_of_val-align_of_val.rs:26:45: 26:49
    let _3: Foo;                         // in scope 0 at ui/consts/const-size_of_val-align_of_val.rs:26:46: 26:49
    let mut _4: &Foo;                    // in scope 0 at ui/consts/const-size_of_val-align_of_val.rs:26:45: 26:49

    bb0: {
        StorageLive(_1);                 // scope 0 at ui/consts/const-size_of_val-align_of_val.rs:26:45: 26:49
        StorageLive(_2);                 // scope 0 at ui/consts/const-size_of_val-align_of_val.rs:26:45: 26:49
        _4 = const _;                    // scope 0 at ui/consts/const-size_of_val-align_of_val.rs:26:45: 26:49
                                         // mir::Constant
                                         // + span: ui/consts/const-size_of_val-align_of_val.rs:26:45: 26:49
                                         // + literal: Const { ty: &Foo, val: Unevaluated(SIZE_OF_FOO, [], Some(promoted[0])) }
        _2 = &(*_4);                     // scope 0 at ui/consts/const-size_of_val-align_of_val.rs:26:45: 26:49
        _1 = &(*_2);                     // scope 0 at ui/consts/const-size_of_val-align_of_val.rs:26:45: 26:49
        ConstEvalCounter;                // scope 0 at ui/consts/const-size_of_val-align_of_val.rs:26:28: 26:50
        _0 = std::mem::size_of_val::<Foo>(move _1) -> bb1; // scope 0 at ui/consts/const-size_of_val-align_of_val.rs:26:28: 26:50
                                         // mir::Constant
                                         // + span: ui/consts/const-size_of_val-align_of_val.rs:26:28: 26:44
                                         // + literal: Const { ty: for<'a> fn(&'a Foo) -> usize {std::mem::size_of_val::<Foo>}, val: Value(<ZST>) }
    }

    bb1: {
        StorageDead(_2);                 // scope 0 at ui/consts/const-size_of_val-align_of_val.rs:26:49: 26:50
        StorageDead(_1);                 // scope 0 at ui/consts/const-size_of_val-align_of_val.rs:26:49: 26:50
        return;                          // scope 0 at ui/consts/const-size_of_val-align_of_val.rs:26:1: 26:51
    }
}

promoted[0] in SIZE_OF_FOO: &Foo = {
    let mut _0: &Foo;                    // return place in scope 0 at ui/consts/const-size_of_val-align_of_val.rs:26:45: 26:49
    let mut _1: Foo;                     // in scope 0 at ui/consts/const-size_of_val-align_of_val.rs:26:46: 26:49

    bb0: {
        _1 = const _;                    // scope 0 at ui/consts/const-size_of_val-align_of_val.rs:26:46: 26:49
                                         // mir::Constant
                                         // + span: ui/consts/const-size_of_val-align_of_val.rs:26:46: 26:49
                                         // + literal: Const { ty: Foo, val: Unevaluated(FOO, [], None) }
        _0 = &_1;                        // scope 0 at ui/consts/const-size_of_val-align_of_val.rs:26:45: 26:49
        return;                          // scope 0 at ui/consts/const-size_of_val-align_of_val.rs:26:45: 26:49
    }
}

const SIZE_OF_BAR: usize = {
    let mut _0: usize;                   // return place in scope 0 at ui/consts/const-size_of_val-align_of_val.rs:27:20: 27:25
    let mut _1: &Bar;                    // in scope 0 at ui/consts/const-size_of_val-align_of_val.rs:27:45: 27:49
    let _2: &Bar;                        // in scope 0 at ui/consts/const-size_of_val-align_of_val.rs:27:45: 27:49
    let _3: Bar;                         // in scope 0 at ui/consts/const-size_of_val-align_of_val.rs:27:46: 27:49
    let mut _4: &Bar;                    // in scope 0 at ui/consts/const-size_of_val-align_of_val.rs:27:45: 27:49

    bb0: {
        StorageLive(_1);                 // scope 0 at ui/consts/const-size_of_val-align_of_val.rs:27:45: 27:49
        StorageLive(_2);                 // scope 0 at ui/consts/const-size_of_val-align_of_val.rs:27:45: 27:49
        _4 = const _;                    // scope 0 at ui/consts/const-size_of_val-align_of_val.rs:27:45: 27:49
                                         // mir::Constant
                                         // + span: ui/consts/const-size_of_val-align_of_val.rs:27:45: 27:49
                                         // + literal: Const { ty: &Bar, val: Unevaluated(SIZE_OF_BAR, [], Some(promoted[0])) }
        _2 = &(*_4);                     // scope 0 at ui/consts/const-size_of_val-align_of_val.rs:27:45: 27:49
        _1 = &(*_2);                     // scope 0 at ui/consts/const-size_of_val-align_of_val.rs:27:45: 27:49
        ConstEvalCounter;                // scope 0 at ui/consts/const-size_of_val-align_of_val.rs:27:28: 27:50
        _0 = std::mem::size_of_val::<Bar>(move _1) -> bb1; // scope 0 at ui/consts/const-size_of_val-align_of_val.rs:27:28: 27:50
                                         // mir::Constant
                                         // + span: ui/consts/const-size_of_val-align_of_val.rs:27:28: 27:44
                                         // + literal: Const { ty: for<'a> fn(&'a Bar) -> usize {std::mem::size_of_val::<Bar>}, val: Value(<ZST>) }
    }

    bb1: {
        StorageDead(_2);                 // scope 0 at ui/consts/const-size_of_val-align_of_val.rs:27:49: 27:50
        StorageDead(_1);                 // scope 0 at ui/consts/const-size_of_val-align_of_val.rs:27:49: 27:50
        return;                          // scope 0 at ui/consts/const-size_of_val-align_of_val.rs:27:1: 27:51
    }
}

promoted[0] in SIZE_OF_BAR: &Bar = {
    let mut _0: &Bar;                    // return place in scope 0 at ui/consts/const-size_of_val-align_of_val.rs:27:45: 27:49
    let mut _1: Bar;                     // in scope 0 at ui/consts/const-size_of_val-align_of_val.rs:27:46: 27:49

    bb0: {
        _1 = const _;                    // scope 0 at ui/consts/const-size_of_val-align_of_val.rs:27:46: 27:49
                                         // mir::Constant
                                         // + span: ui/consts/const-size_of_val-align_of_val.rs:27:46: 27:49
                                         // + literal: Const { ty: Bar, val: Unevaluated(BAR, [], None) }
        _0 = &_1;                        // scope 0 at ui/consts/const-size_of_val-align_of_val.rs:27:45: 27:49
        return;                          // scope 0 at ui/consts/const-size_of_val-align_of_val.rs:27:45: 27:49
    }
}

const SIZE_OF_UGH: usize = {
    let mut _0: usize;                   // return place in scope 0 at ui/consts/const-size_of_val-align_of_val.rs:28:20: 28:25
    let mut _1: &Ugh;                    // in scope 0 at ui/consts/const-size_of_val-align_of_val.rs:28:45: 28:49
    let _2: &Ugh;                        // in scope 0 at ui/consts/const-size_of_val-align_of_val.rs:28:45: 28:49
    let _3: Ugh;                         // in scope 0 at ui/consts/const-size_of_val-align_of_val.rs:28:46: 28:49
    let mut _4: &Ugh;                    // in scope 0 at ui/consts/const-size_of_val-align_of_val.rs:28:45: 28:49

    bb0: {
        StorageLive(_1);                 // scope 0 at ui/consts/const-size_of_val-align_of_val.rs:28:45: 28:49
        StorageLive(_2);                 // scope 0 at ui/consts/const-size_of_val-align_of_val.rs:28:45: 28:49
        _4 = const _;                    // scope 0 at ui/consts/const-size_of_val-align_of_val.rs:28:45: 28:49
                                         // mir::Constant
                                         // + span: ui/consts/const-size_of_val-align_of_val.rs:28:45: 28:49
                                         // + literal: Const { ty: &Ugh, val: Unevaluated(SIZE_OF_UGH, [], Some(promoted[0])) }
        _2 = &(*_4);                     // scope 0 at ui/consts/const-size_of_val-align_of_val.rs:28:45: 28:49
        _1 = &(*_2);                     // scope 0 at ui/consts/const-size_of_val-align_of_val.rs:28:45: 28:49
        ConstEvalCounter;                // scope 0 at ui/consts/const-size_of_val-align_of_val.rs:28:28: 28:50
        _0 = std::mem::size_of_val::<Ugh>(move _1) -> bb1; // scope 0 at ui/consts/const-size_of_val-align_of_val.rs:28:28: 28:50
                                         // mir::Constant
                                         // + span: ui/consts/const-size_of_val-align_of_val.rs:28:28: 28:44
                                         // + literal: Const { ty: for<'a> fn(&'a Ugh) -> usize {std::mem::size_of_val::<Ugh>}, val: Value(<ZST>) }
    }

    bb1: {
        StorageDead(_2);                 // scope 0 at ui/consts/const-size_of_val-align_of_val.rs:28:49: 28:50
        StorageDead(_1);                 // scope 0 at ui/consts/const-size_of_val-align_of_val.rs:28:49: 28:50
        return;                          // scope 0 at ui/consts/const-size_of_val-align_of_val.rs:28:1: 28:51
    }
}

promoted[0] in SIZE_OF_UGH: &Ugh = {
    let mut _0: &Ugh;                    // return place in scope 0 at ui/consts/const-size_of_val-align_of_val.rs:28:45: 28:49
    let mut _1: Ugh;                     // in scope 0 at ui/consts/const-size_of_val-align_of_val.rs:28:46: 28:49

    bb0: {
        _1 = const _;                    // scope 0 at ui/consts/const-size_of_val-align_of_val.rs:28:46: 28:49
                                         // mir::Constant
                                         // + span: ui/consts/const-size_of_val-align_of_val.rs:28:46: 28:49
                                         // + literal: Const { ty: Ugh, val: Unevaluated(UGH, [], None) }
        _0 = &_1;                        // scope 0 at ui/consts/const-size_of_val-align_of_val.rs:28:45: 28:49
        return;                          // scope 0 at ui/consts/const-size_of_val-align_of_val.rs:28:45: 28:49
    }
}

const ALIGN_OF_FOO: usize = {
    let mut _0: usize;                   // return place in scope 0 at ui/consts/const-size_of_val-align_of_val.rs:30:21: 30:26
    let mut _1: &Foo;                    // in scope 0 at ui/consts/const-size_of_val-align_of_val.rs:30:47: 30:51
    let _2: &Foo;                        // in scope 0 at ui/consts/const-size_of_val-align_of_val.rs:30:47: 30:51
    let _3: Foo;                         // in scope 0 at ui/consts/const-size_of_val-align_of_val.rs:30:48: 30:51
    let mut _4: &Foo;                    // in scope 0 at ui/consts/const-size_of_val-align_of_val.rs:30:47: 30:51

    bb0: {
        StorageLive(_1);                 // scope 0 at ui/consts/const-size_of_val-align_of_val.rs:30:47: 30:51
        StorageLive(_2);                 // scope 0 at ui/consts/const-size_of_val-align_of_val.rs:30:47: 30:51
        _4 = const _;                    // scope 0 at ui/consts/const-size_of_val-align_of_val.rs:30:47: 30:51
                                         // mir::Constant
                                         // + span: ui/consts/const-size_of_val-align_of_val.rs:30:47: 30:51
                                         // + literal: Const { ty: &Foo, val: Unevaluated(ALIGN_OF_FOO, [], Some(promoted[0])) }
        _2 = &(*_4);                     // scope 0 at ui/consts/const-size_of_val-align_of_val.rs:30:47: 30:51
        _1 = &(*_2);                     // scope 0 at ui/consts/const-size_of_val-align_of_val.rs:30:47: 30:51
        ConstEvalCounter;                // scope 0 at ui/consts/const-size_of_val-align_of_val.rs:30:29: 30:52
        _0 = align_of_val::<Foo>(move _1) -> bb1; // scope 0 at ui/consts/const-size_of_val-align_of_val.rs:30:29: 30:52
                                         // mir::Constant
                                         // + span: ui/consts/const-size_of_val-align_of_val.rs:30:29: 30:46
                                         // + literal: Const { ty: for<'a> fn(&'a Foo) -> usize {align_of_val::<Foo>}, val: Value(<ZST>) }
    }

    bb1: {
        StorageDead(_2);                 // scope 0 at ui/consts/const-size_of_val-align_of_val.rs:30:51: 30:52
        StorageDead(_1);                 // scope 0 at ui/consts/const-size_of_val-align_of_val.rs:30:51: 30:52
        return;                          // scope 0 at ui/consts/const-size_of_val-align_of_val.rs:30:1: 30:53
    }
}

promoted[0] in ALIGN_OF_FOO: &Foo = {
    let mut _0: &Foo;                    // return place in scope 0 at ui/consts/const-size_of_val-align_of_val.rs:30:47: 30:51
    let mut _1: Foo;                     // in scope 0 at ui/consts/const-size_of_val-align_of_val.rs:30:48: 30:51

    bb0: {
        _1 = const _;                    // scope 0 at ui/consts/const-size_of_val-align_of_val.rs:30:48: 30:51
                                         // mir::Constant
                                         // + span: ui/consts/const-size_of_val-align_of_val.rs:30:48: 30:51
                                         // + literal: Const { ty: Foo, val: Unevaluated(FOO, [], None) }
        _0 = &_1;                        // scope 0 at ui/consts/const-size_of_val-align_of_val.rs:30:47: 30:51
        return;                          // scope 0 at ui/consts/const-size_of_val-align_of_val.rs:30:47: 30:51
    }
}

const ALIGN_OF_BAR: usize = {
    let mut _0: usize;                   // return place in scope 0 at ui/consts/const-size_of_val-align_of_val.rs:31:21: 31:26
    let mut _1: &Bar;                    // in scope 0 at ui/consts/const-size_of_val-align_of_val.rs:31:47: 31:51
    let _2: &Bar;                        // in scope 0 at ui/consts/const-size_of_val-align_of_val.rs:31:47: 31:51
    let _3: Bar;                         // in scope 0 at ui/consts/const-size_of_val-align_of_val.rs:31:48: 31:51
    let mut _4: &Bar;                    // in scope 0 at ui/consts/const-size_of_val-align_of_val.rs:31:47: 31:51

    bb0: {
        StorageLive(_1);                 // scope 0 at ui/consts/const-size_of_val-align_of_val.rs:31:47: 31:51
        StorageLive(_2);                 // scope 0 at ui/consts/const-size_of_val-align_of_val.rs:31:47: 31:51
        _4 = const _;                    // scope 0 at ui/consts/const-size_of_val-align_of_val.rs:31:47: 31:51
                                         // mir::Constant
                                         // + span: ui/consts/const-size_of_val-align_of_val.rs:31:47: 31:51
                                         // + literal: Const { ty: &Bar, val: Unevaluated(ALIGN_OF_BAR, [], Some(promoted[0])) }
        _2 = &(*_4);                     // scope 0 at ui/consts/const-size_of_val-align_of_val.rs:31:47: 31:51
        _1 = &(*_2);                     // scope 0 at ui/consts/const-size_of_val-align_of_val.rs:31:47: 31:51
        ConstEvalCounter;                // scope 0 at ui/consts/const-size_of_val-align_of_val.rs:31:29: 31:52
        _0 = align_of_val::<Bar>(move _1) -> bb1; // scope 0 at ui/consts/const-size_of_val-align_of_val.rs:31:29: 31:52
                                         // mir::Constant
                                         // + span: ui/consts/const-size_of_val-align_of_val.rs:31:29: 31:46
                                         // + literal: Const { ty: for<'a> fn(&'a Bar) -> usize {align_of_val::<Bar>}, val: Value(<ZST>) }
    }

    bb1: {
        StorageDead(_2);                 // scope 0 at ui/consts/const-size_of_val-align_of_val.rs:31:51: 31:52
        StorageDead(_1);                 // scope 0 at ui/consts/const-size_of_val-align_of_val.rs:31:51: 31:52
        return;                          // scope 0 at ui/consts/const-size_of_val-align_of_val.rs:31:1: 31:53
    }
}

promoted[0] in ALIGN_OF_BAR: &Bar = {
    let mut _0: &Bar;                    // return place in scope 0 at ui/consts/const-size_of_val-align_of_val.rs:31:47: 31:51
    let mut _1: Bar;                     // in scope 0 at ui/consts/const-size_of_val-align_of_val.rs:31:48: 31:51

    bb0: {
        _1 = const _;                    // scope 0 at ui/consts/const-size_of_val-align_of_val.rs:31:48: 31:51
                                         // mir::Constant
                                         // + span: ui/consts/const-size_of_val-align_of_val.rs:31:48: 31:51
                                         // + literal: Const { ty: Bar, val: Unevaluated(BAR, [], None) }
        _0 = &_1;                        // scope 0 at ui/consts/const-size_of_val-align_of_val.rs:31:47: 31:51
        return;                          // scope 0 at ui/consts/const-size_of_val-align_of_val.rs:31:47: 31:51
    }
}

const ALIGN_OF_UGH: usize = {
    let mut _0: usize;                   // return place in scope 0 at ui/consts/const-size_of_val-align_of_val.rs:32:21: 32:26
    let mut _1: &Ugh;                    // in scope 0 at ui/consts/const-size_of_val-align_of_val.rs:32:47: 32:51
    let _2: &Ugh;                        // in scope 0 at ui/consts/const-size_of_val-align_of_val.rs:32:47: 32:51
    let _3: Ugh;                         // in scope 0 at ui/consts/const-size_of_val-align_of_val.rs:32:48: 32:51
    let mut _4: &Ugh;                    // in scope 0 at ui/consts/const-size_of_val-align_of_val.rs:32:47: 32:51

    bb0: {
        StorageLive(_1);                 // scope 0 at ui/consts/const-size_of_val-align_of_val.rs:32:47: 32:51
        StorageLive(_2);                 // scope 0 at ui/consts/const-size_of_val-align_of_val.rs:32:47: 32:51
        _4 = const _;                    // scope 0 at ui/consts/const-size_of_val-align_of_val.rs:32:47: 32:51
                                         // mir::Constant
                                         // + span: ui/consts/const-size_of_val-align_of_val.rs:32:47: 32:51
                                         // + literal: Const { ty: &Ugh, val: Unevaluated(ALIGN_OF_UGH, [], Some(promoted[0])) }
        _2 = &(*_4);                     // scope 0 at ui/consts/const-size_of_val-align_of_val.rs:32:47: 32:51
        _1 = &(*_2);                     // scope 0 at ui/consts/const-size_of_val-align_of_val.rs:32:47: 32:51
        ConstEvalCounter;                // scope 0 at ui/consts/const-size_of_val-align_of_val.rs:32:29: 32:52
        _0 = align_of_val::<Ugh>(move _1) -> bb1; // scope 0 at ui/consts/const-size_of_val-align_of_val.rs:32:29: 32:52
                                         // mir::Constant
                                         // + span: ui/consts/const-size_of_val-align_of_val.rs:32:29: 32:46
                                         // + literal: Const { ty: for<'a> fn(&'a Ugh) -> usize {align_of_val::<Ugh>}, val: Value(<ZST>) }
    }

    bb1: {
        StorageDead(_2);                 // scope 0 at ui/consts/const-size_of_val-align_of_val.rs:32:51: 32:52
        StorageDead(_1);                 // scope 0 at ui/consts/const-size_of_val-align_of_val.rs:32:51: 32:52
        return;                          // scope 0 at ui/consts/const-size_of_val-align_of_val.rs:32:1: 32:53
    }
}

promoted[0] in ALIGN_OF_UGH: &Ugh = {
    let mut _0: &Ugh;                    // return place in scope 0 at ui/consts/const-size_of_val-align_of_val.rs:32:47: 32:51
    let mut _1: Ugh;                     // in scope 0 at ui/consts/const-size_of_val-align_of_val.rs:32:48: 32:51

    bb0: {
        _1 = const _;                    // scope 0 at ui/consts/const-size_of_val-align_of_val.rs:32:48: 32:51
                                         // mir::Constant
                                         // + span: ui/consts/const-size_of_val-align_of_val.rs:32:48: 32:51
                                         // + literal: Const { ty: Ugh, val: Unevaluated(UGH, [], None) }
        _0 = &_1;                        // scope 0 at ui/consts/const-size_of_val-align_of_val.rs:32:47: 32:51
        return;                          // scope 0 at ui/consts/const-size_of_val-align_of_val.rs:32:47: 32:51
    }
}

const SIZE_OF_SLICE: usize = {
    let mut _0: usize;                   // return place in scope 0 at ui/consts/const-size_of_val-align_of_val.rs:34:22: 34:27
    let mut _1: &[u8];                   // in scope 0 at ui/consts/const-size_of_val-align_of_val.rs:34:47: 34:66
    let _2: &[u8];                       // in scope 0 at ui/consts/const-size_of_val-align_of_val.rs:34:47: 34:66
    let mut _3: &str;                    // in scope 0 at ui/consts/const-size_of_val-align_of_val.rs:34:47: 34:66
    let _4: &str;                        // in scope 0 at ui/consts/const-size_of_val-align_of_val.rs:34:47: 34:55

    bb0: {
        StorageLive(_1);                 // scope 0 at ui/consts/const-size_of_val-align_of_val.rs:34:47: 34:66
        StorageLive(_2);                 // scope 0 at ui/consts/const-size_of_val-align_of_val.rs:34:47: 34:66
        StorageLive(_3);                 // scope 0 at ui/consts/const-size_of_val-align_of_val.rs:34:47: 34:66
        StorageLive(_4);                 // scope 0 at ui/consts/const-size_of_val-align_of_val.rs:34:47: 34:55
        _4 = const "foobar";             // scope 0 at ui/consts/const-size_of_val-align_of_val.rs:34:47: 34:55
                                         // mir::Constant
                                         // + span: ui/consts/const-size_of_val-align_of_val.rs:34:47: 34:55
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _3 = &(*_4);                     // scope 0 at ui/consts/const-size_of_val-align_of_val.rs:34:47: 34:66
        ConstEvalCounter;                // scope 0 at ui/consts/const-size_of_val-align_of_val.rs:34:47: 34:66
        _2 = core::str::<impl str>::as_bytes(move _3) -> bb1; // scope 0 at ui/consts/const-size_of_val-align_of_val.rs:34:47: 34:66
                                         // mir::Constant
                                         // + span: ui/consts/const-size_of_val-align_of_val.rs:34:56: 34:64
                                         // + literal: Const { ty: for<'a> fn(&'a str) -> &'a [u8] {core::str::<impl str>::as_bytes}, val: Value(<ZST>) }
    }

    bb1: {
        _1 = &(*_2);                     // scope 0 at ui/consts/const-size_of_val-align_of_val.rs:34:47: 34:66
        StorageDead(_3);                 // scope 0 at ui/consts/const-size_of_val-align_of_val.rs:34:65: 34:66
        ConstEvalCounter;                // scope 0 at ui/consts/const-size_of_val-align_of_val.rs:34:30: 34:67
        _0 = std::mem::size_of_val::<[u8]>(move _1) -> bb2; // scope 0 at ui/consts/const-size_of_val-align_of_val.rs:34:30: 34:67
                                         // mir::Constant
                                         // + span: ui/consts/const-size_of_val-align_of_val.rs:34:30: 34:46
                                         // + literal: Const { ty: for<'a> fn(&'a [u8]) -> usize {std::mem::size_of_val::<[u8]>}, val: Value(<ZST>) }
    }

    bb2: {
        StorageDead(_4);                 // scope 0 at ui/consts/const-size_of_val-align_of_val.rs:34:66: 34:67
        StorageDead(_2);                 // scope 0 at ui/consts/const-size_of_val-align_of_val.rs:34:66: 34:67
        StorageDead(_1);                 // scope 0 at ui/consts/const-size_of_val-align_of_val.rs:34:66: 34:67
        return;                          // scope 0 at ui/consts/const-size_of_val-align_of_val.rs:34:1: 34:68
    }
}

const SIZE_OF_DANGLING: usize = {
    let mut _0: usize;                   // return place in scope 0 at ui/consts/const-size_of_val-align_of_val.rs:36:25: 36:30
    let mut _1: *const i32;              // in scope 0 at ui/consts/const-size_of_val-align_of_val.rs:36:63: 36:82
    scope 1 {
    }

    bb0: {
        StorageLive(_1);                 // scope 1 at ui/consts/const-size_of_val-align_of_val.rs:36:63: 36:82
        _1 = const 256_usize as *const i32 (PointerFromExposedAddress); // scope 1 at ui/consts/const-size_of_val-align_of_val.rs:36:63: 36:82
        ConstEvalCounter;                // scope 1 at ui/consts/const-size_of_val-align_of_val.rs:36:42: 36:83
        _0 = size_of_val_raw::<i32>(move _1) -> bb1; // scope 1 at ui/consts/const-size_of_val-align_of_val.rs:36:42: 36:83
                                         // mir::Constant
                                         // + span: ui/consts/const-size_of_val-align_of_val.rs:36:42: 36:62
                                         // + literal: Const { ty: unsafe fn(*const i32) -> usize {size_of_val_raw::<i32>}, val: Value(<ZST>) }
    }

    bb1: {
        StorageDead(_1);                 // scope 1 at ui/consts/const-size_of_val-align_of_val.rs:36:82: 36:83
        return;                          // scope 0 at ui/consts/const-size_of_val-align_of_val.rs:36:1: 36:86
    }
}

const SIZE_OF_BIG: usize = {
    let mut _0: usize;                   // return place in scope 0 at ui/consts/const-size_of_val-align_of_val.rs:37:20: 37:25
    let mut _1: *const [u8];             // in scope 0 at ui/consts/const-size_of_val-align_of_val.rs:38:35: 38:97
    let mut _2: *const u8;               // in scope 0 at ui/consts/const-size_of_val-align_of_val.rs:38:61: 38:75
    let mut _3: usize;                   // in scope 0 at ui/consts/const-size_of_val-align_of_val.rs:38:77: 38:96
    scope 1 {
    }

    bb0: {
        StorageLive(_1);                 // scope 1 at ui/consts/const-size_of_val-align_of_val.rs:38:35: 38:97
        StorageLive(_2);                 // scope 1 at ui/consts/const-size_of_val-align_of_val.rs:38:61: 38:75
        _2 = const 0_usize as *const u8 (PointerFromExposedAddress); // scope 1 at ui/consts/const-size_of_val-align_of_val.rs:38:61: 38:75
        StorageLive(_3);                 // scope 1 at ui/consts/const-size_of_val-align_of_val.rs:38:77: 38:96
        _3 = const _ as usize (IntToInt); // scope 1 at ui/consts/const-size_of_val-align_of_val.rs:38:77: 38:96
        ConstEvalCounter;                // scope 1 at ui/consts/const-size_of_val-align_of_val.rs:38:35: 38:97
        _1 = slice_from_raw_parts::<u8>(move _2, move _3) -> bb1; // scope 1 at ui/consts/const-size_of_val-align_of_val.rs:38:35: 38:97
                                         // mir::Constant
                                         // + span: ui/consts/const-size_of_val-align_of_val.rs:38:35: 38:60
                                         // + literal: Const { ty: fn(*const u8, usize) -> *const [u8] {slice_from_raw_parts::<u8>}, val: Value(<ZST>) }
    }

    bb1: {
        StorageDead(_3);                 // scope 1 at ui/consts/const-size_of_val-align_of_val.rs:38:96: 38:97
        StorageDead(_2);                 // scope 1 at ui/consts/const-size_of_val-align_of_val.rs:38:96: 38:97
        ConstEvalCounter;                // scope 1 at ui/consts/const-size_of_val-align_of_val.rs:38:14: 38:98
        _0 = size_of_val_raw::<[u8]>(move _1) -> bb2; // scope 1 at ui/consts/const-size_of_val-align_of_val.rs:38:14: 38:98
                                         // mir::Constant
                                         // + span: ui/consts/const-size_of_val-align_of_val.rs:38:14: 38:34
                                         // + literal: Const { ty: unsafe fn(*const [u8]) -> usize {size_of_val_raw::<[u8]>}, val: Value(<ZST>) }
    }

    bb2: {
        StorageDead(_1);                 // scope 1 at ui/consts/const-size_of_val-align_of_val.rs:38:97: 38:98
        return;                          // scope 0 at ui/consts/const-size_of_val-align_of_val.rs:37:1: 38:101
    }
}

const ALIGN_OF_DANGLING: usize = {
    let mut _0: usize;                   // return place in scope 0 at ui/consts/const-size_of_val-align_of_val.rs:39:26: 39:31
    let mut _1: *const i16;              // in scope 0 at ui/consts/const-size_of_val-align_of_val.rs:39:65: 39:84
    scope 1 {
    }

    bb0: {
        StorageLive(_1);                 // scope 1 at ui/consts/const-size_of_val-align_of_val.rs:39:65: 39:84
        _1 = const 256_usize as *const i16 (PointerFromExposedAddress); // scope 1 at ui/consts/const-size_of_val-align_of_val.rs:39:65: 39:84
        ConstEvalCounter;                // scope 1 at ui/consts/const-size_of_val-align_of_val.rs:39:43: 39:85
        _0 = align_of_val_raw::<i16>(move _1) -> bb1; // scope 1 at ui/consts/const-size_of_val-align_of_val.rs:39:43: 39:85
                                         // mir::Constant
                                         // + span: ui/consts/const-size_of_val-align_of_val.rs:39:43: 39:64
                                         // + literal: Const { ty: unsafe fn(*const i16) -> usize {align_of_val_raw::<i16>}, val: Value(<ZST>) }
    }

    bb1: {
        StorageDead(_1);                 // scope 1 at ui/consts/const-size_of_val-align_of_val.rs:39:84: 39:85
        return;                          // scope 0 at ui/consts/const-size_of_val-align_of_val.rs:39:1: 39:88
    }
}

fn main() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/consts/const-size_of_val-align_of_val.rs:41:11: 41:11
    let mut _1: (&usize, &usize);        // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _2: &usize;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let mut _3: &usize;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let _4: &usize;                      // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
    let _5: &usize;                      // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
    let mut _7: (&usize, &usize);        // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _8: &usize;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let mut _9: &usize;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let _10: &usize;                     // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
    let _11: &usize;                     // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
    let mut _13: (&usize, &usize);       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _14: &usize;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let mut _15: &usize;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let _16: &usize;                     // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
    let _17: &usize;                     // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
    let mut _19: (&usize, &usize);       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _20: &usize;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let mut _21: &usize;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let _22: &usize;                     // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
    let _23: &usize;                     // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
    let mut _25: (&usize, &usize);       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _26: &usize;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let mut _27: &usize;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let _28: &usize;                     // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
    let _29: &usize;                     // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
    let mut _31: (&usize, &usize);       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _32: &usize;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let mut _33: &usize;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let _34: &usize;                     // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
    let _35: &usize;                     // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
    let mut _37: (&usize, &usize);       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _38: &usize;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let mut _39: &usize;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let _40: &usize;                     // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
    let _41: &usize;                     // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
    let mut _43: (&usize, &usize);       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _44: &usize;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let mut _45: &usize;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let _46: &usize;                     // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
    let _47: &usize;                     // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
    let mut _49: (&usize, &usize);       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _50: &usize;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let mut _51: &usize;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let _52: &usize;                     // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
    let _53: &usize;                     // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
    let mut _55: (&usize, &usize);       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _56: &usize;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let mut _57: &usize;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let _58: usize;                      // in scope 0 at ui/consts/const-size_of_val-align_of_val.rs:54:31: 54:45
    let mut _59: &str;                   // in scope 0 at ui/consts/const-size_of_val-align_of_val.rs:54:31: 54:45
    let _60: &str;                       // in scope 0 at ui/consts/const-size_of_val-align_of_val.rs:54:31: 54:39
    let _61: &usize;                     // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
    let _62: &usize;                     // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
    let mut _63: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    let mut _64: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
    let mut _65: usize;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
    let mut _66: usize;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
    let _68: !;                          // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
    let mut _69: core::panicking::AssertKind; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
    let mut _70: &usize;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let _71: &usize;                     // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let mut _72: &usize;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let _73: &usize;                     // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let mut _74: std::option::Option<std::fmt::Arguments<'_>>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
    let mut _75: &usize;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let mut _76: &usize;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _77: &usize;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let mut _78: &usize;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _79: &usize;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let mut _80: &usize;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _81: &usize;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let mut _82: &usize;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _83: &usize;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let mut _84: &usize;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _85: &usize;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let mut _86: &usize;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _87: &usize;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let mut _88: &usize;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _89: &usize;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let mut _90: &usize;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _91: &usize;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let mut _92: &usize;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _93: &usize;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    scope 1 {
        debug left_val => _4;            // in scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        debug right_val => _5;           // in scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        let _6: core::panicking::AssertKind; // in scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
        scope 2 {
            debug kind => _6;            // in scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
        }
    }
    scope 3 {
        debug left_val => _10;           // in scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        debug right_val => _11;          // in scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        let _12: core::panicking::AssertKind; // in scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
        scope 4 {
            debug kind => _12;           // in scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
        }
    }
    scope 5 {
        debug left_val => _16;           // in scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        debug right_val => _17;          // in scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        let _18: core::panicking::AssertKind; // in scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
        scope 6 {
            debug kind => _18;           // in scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
        }
    }
    scope 7 {
        debug left_val => _22;           // in scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        debug right_val => _23;          // in scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        let _24: core::panicking::AssertKind; // in scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
        scope 8 {
            debug kind => _24;           // in scope 8 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
        }
    }
    scope 9 {
        debug left_val => _28;           // in scope 9 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        debug right_val => _29;          // in scope 9 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        let _30: core::panicking::AssertKind; // in scope 9 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
        scope 10 {
            debug kind => _30;           // in scope 10 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
        }
    }
    scope 11 {
        debug left_val => _34;           // in scope 11 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        debug right_val => _35;          // in scope 11 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        let _36: core::panicking::AssertKind; // in scope 11 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
        scope 12 {
            debug kind => _36;           // in scope 12 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
        }
    }
    scope 13 {
        debug left_val => _40;           // in scope 13 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        debug right_val => _41;          // in scope 13 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        let _42: core::panicking::AssertKind; // in scope 13 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
        scope 14 {
            debug kind => _42;           // in scope 14 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
        }
    }
    scope 15 {
        debug left_val => _46;           // in scope 15 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        debug right_val => _47;          // in scope 15 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        let _48: core::panicking::AssertKind; // in scope 15 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
        scope 16 {
            debug kind => _48;           // in scope 16 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
        }
    }
    scope 17 {
        debug left_val => _52;           // in scope 17 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        debug right_val => _53;          // in scope 17 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        let _54: core::panicking::AssertKind; // in scope 17 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
        scope 18 {
            debug kind => _54;           // in scope 18 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
        }
    }
    scope 19 {
        debug left_val => _61;           // in scope 19 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        debug right_val => _62;          // in scope 19 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        let _67: core::panicking::AssertKind; // in scope 19 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
        scope 20 {
            debug kind => _67;           // in scope 20 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
        }
    }

    bb0: {
        _93 = const _;                   // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
                                         // + literal: Const { ty: &usize, val: Unevaluated(main, [], Some(promoted[18])) }
        _2 = _93;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _92 = const _;                   // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // + literal: Const { ty: &usize, val: Unevaluated(main, [], Some(promoted[17])) }
        _3 = _92;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _1 = (move _2, move _3);         // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _4 = (_1.0: &usize);             // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _5 = (_1.1: &usize);             // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _91 = const _;                   // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
                                         // + literal: Const { ty: &usize, val: Unevaluated(main, [], Some(promoted[16])) }
        _8 = _91;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _90 = const _;                   // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // + literal: Const { ty: &usize, val: Unevaluated(main, [], Some(promoted[15])) }
        _9 = _90;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _7 = (move _8, move _9);         // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _10 = (_7.0: &usize);            // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _11 = (_7.1: &usize);            // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _89 = const _;                   // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
                                         // + literal: Const { ty: &usize, val: Unevaluated(main, [], Some(promoted[14])) }
        _14 = _89;                       // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _88 = const _;                   // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // + literal: Const { ty: &usize, val: Unevaluated(main, [], Some(promoted[13])) }
        _15 = _88;                       // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _13 = (move _14, move _15);      // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _16 = (_13.0: &usize);           // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _17 = (_13.1: &usize);           // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _87 = const _;                   // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
                                         // + literal: Const { ty: &usize, val: Unevaluated(main, [], Some(promoted[12])) }
        _20 = _87;                       // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _86 = const _;                   // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // + literal: Const { ty: &usize, val: Unevaluated(main, [], Some(promoted[11])) }
        _21 = _86;                       // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _19 = (move _20, move _21);      // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _22 = (_19.0: &usize);           // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _23 = (_19.1: &usize);           // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _85 = const _;                   // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
                                         // + literal: Const { ty: &usize, val: Unevaluated(main, [], Some(promoted[10])) }
        _26 = _85;                       // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _84 = const _;                   // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // + literal: Const { ty: &usize, val: Unevaluated(main, [], Some(promoted[9])) }
        _27 = _84;                       // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _25 = (move _26, move _27);      // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _28 = (_25.0: &usize);           // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _29 = (_25.1: &usize);           // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _83 = const _;                   // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
                                         // + literal: Const { ty: &usize, val: Unevaluated(main, [], Some(promoted[8])) }
        _32 = _83;                       // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _82 = const _;                   // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // + literal: Const { ty: &usize, val: Unevaluated(main, [], Some(promoted[7])) }
        _33 = _82;                       // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _31 = (move _32, move _33);      // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _34 = (_31.0: &usize);           // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _35 = (_31.1: &usize);           // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _81 = const _;                   // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
                                         // + literal: Const { ty: &usize, val: Unevaluated(main, [], Some(promoted[6])) }
        _38 = _81;                       // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _80 = const _;                   // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // + literal: Const { ty: &usize, val: Unevaluated(main, [], Some(promoted[5])) }
        _39 = _80;                       // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _37 = (move _38, move _39);      // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _40 = (_37.0: &usize);           // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _41 = (_37.1: &usize);           // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _79 = const _;                   // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
                                         // + literal: Const { ty: &usize, val: Unevaluated(main, [], Some(promoted[4])) }
        _44 = _79;                       // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _78 = const _;                   // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // + literal: Const { ty: &usize, val: Unevaluated(main, [], Some(promoted[3])) }
        _45 = _78;                       // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _43 = (move _44, move _45);      // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _46 = (_43.0: &usize);           // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _47 = (_43.1: &usize);           // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _77 = const _;                   // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
                                         // + literal: Const { ty: &usize, val: Unevaluated(main, [], Some(promoted[2])) }
        _50 = _77;                       // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _76 = const _;                   // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // + literal: Const { ty: &usize, val: Unevaluated(main, [], Some(promoted[1])) }
        _51 = _76;                       // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _49 = (move _50, move _51);      // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _52 = (_49.0: &usize);           // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _53 = (_49.1: &usize);           // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _75 = const _;                   // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
                                         // + literal: Const { ty: &usize, val: Unevaluated(main, [], Some(promoted[0])) }
        _56 = _75;                       // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _60 = const "foobar";            // scope 0 at ui/consts/const-size_of_val-align_of_val.rs:54:31: 54:39
                                         // mir::Constant
                                         // + span: ui/consts/const-size_of_val-align_of_val.rs:54:31: 54:39
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _59 = _60;                       // scope 0 at ui/consts/const-size_of_val-align_of_val.rs:54:31: 54:45
        _58 = core::str::<impl str>::len(move _59) -> bb1; // scope 0 at ui/consts/const-size_of_val-align_of_val.rs:54:31: 54:45
                                         // mir::Constant
                                         // + span: ui/consts/const-size_of_val-align_of_val.rs:54:40: 54:43
                                         // + literal: Const { ty: for<'a> fn(&'a str) -> usize {core::str::<impl str>::len}, val: Value(<ZST>) }
    }

    bb1: {
        _57 = &_58;                      // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _55 = (move _56, move _57);      // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _61 = (_55.0: &usize);           // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _62 = (_55.1: &usize);           // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _65 = const 6_usize;             // scope 19 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
        _66 = (*_62);                    // scope 19 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
        _64 = Eq(move _65, move _66);    // scope 19 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
        _63 = Not(move _64);             // scope 19 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
        switchInt(move _63) -> [0: bb3, otherwise: bb2]; // scope 19 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    }

    bb2: {
        _67 = const core::panicking::AssertKind::Eq; // scope 19 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _69 = const core::panicking::AssertKind::Eq; // scope 20 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _71 = _61;                       // scope 20 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _70 = _71;                       // scope 20 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _73 = _62;                       // scope 20 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _72 = _73;                       // scope 20 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _74 = Option::<Arguments<'_>>::None; // scope 20 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
        _68 = core::panicking::assert_failed::<usize, usize>(move _69, move _70, move _72, move _74); // scope 20 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:53
                                         // + literal: Const { ty: for<'a, 'b, 'c> fn(core::panicking::AssertKind, &'a usize, &'b usize, Option<Arguments<'c>>) -> ! {core::panicking::assert_failed::<usize, usize>}, val: Value(<ZST>) }
    }

    bb3: {
        return;                          // scope 0 at ui/consts/const-size_of_val-align_of_val.rs:55:2: 55:2
    }
}

promoted[0] in main: &usize = {
    let mut _0: &usize;                  // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let mut _1: usize;                   // in scope 0 at ui/consts/const-size_of_val-align_of_val.rs:54:16: 54:29

    bb0: {
        _1 = const _;                    // scope 0 at ui/consts/const-size_of_val-align_of_val.rs:54:16: 54:29
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    }
}

promoted[1] in main: &usize = {
    let mut _0: &usize;                  // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _1: usize;                   // in scope 0 at ui/consts/const-size_of_val-align_of_val.rs:52:35: 52:57

    bb0: {
        _1 = align_of::<i16>() -> bb1;   // scope 0 at ui/consts/const-size_of_val-align_of_val.rs:52:35: 52:57
                                         // mir::Constant
                                         // + span: ui/consts/const-size_of_val-align_of_val.rs:52:35: 52:55
                                         // + literal: Const { ty: fn() -> usize {align_of::<i16>}, val: Value(<ZST>) }
    }

    bb1: {
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    }
}

promoted[2] in main: &usize = {
    let mut _0: &usize;                  // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let mut _1: usize;                   // in scope 0 at ui/consts/const-size_of_val-align_of_val.rs:52:16: 52:33

    bb0: {
        _1 = const _;                    // scope 0 at ui/consts/const-size_of_val-align_of_val.rs:52:16: 52:33
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    }
}

promoted[3] in main: &usize = {
    let mut _0: &usize;                  // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _1: usize;                   // in scope 0 at ui/consts/const-size_of_val-align_of_val.rs:51:29: 51:48

    bb0: {
        _1 = const _ as usize (IntToInt); // scope 0 at ui/consts/const-size_of_val-align_of_val.rs:51:29: 51:48
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    }
}

promoted[4] in main: &usize = {
    let mut _0: &usize;                  // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let mut _1: usize;                   // in scope 0 at ui/consts/const-size_of_val-align_of_val.rs:51:16: 51:27

    bb0: {
        _1 = const _;                    // scope 0 at ui/consts/const-size_of_val-align_of_val.rs:51:16: 51:27
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    }
}

promoted[5] in main: &usize = {
    let mut _0: &usize;                  // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _1: usize;                   // in scope 0 at ui/consts/const-size_of_val-align_of_val.rs:50:34: 50:55

    bb0: {
        _1 = std::mem::size_of::<i32>() -> bb1; // scope 0 at ui/consts/const-size_of_val-align_of_val.rs:50:34: 50:55
                                         // mir::Constant
                                         // + span: ui/consts/const-size_of_val-align_of_val.rs:50:34: 50:53
                                         // + literal: Const { ty: fn() -> usize {std::mem::size_of::<i32>}, val: Value(<ZST>) }
    }

    bb1: {
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    }
}

promoted[6] in main: &usize = {
    let mut _0: &usize;                  // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let mut _1: usize;                   // in scope 0 at ui/consts/const-size_of_val-align_of_val.rs:50:16: 50:32

    bb0: {
        _1 = const _;                    // scope 0 at ui/consts/const-size_of_val-align_of_val.rs:50:16: 50:32
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    }
}

promoted[7] in main: &usize = {
    let mut _0: &usize;                  // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _1: usize;                   // in scope 0 at ui/consts/const-size_of_val-align_of_val.rs:48:30: 48:52

    bb0: {
        _1 = align_of::<Ugh>() -> bb1;   // scope 0 at ui/consts/const-size_of_val-align_of_val.rs:48:30: 48:52
                                         // mir::Constant
                                         // + span: ui/consts/const-size_of_val-align_of_val.rs:48:30: 48:50
                                         // + literal: Const { ty: fn() -> usize {align_of::<Ugh>}, val: Value(<ZST>) }
    }

    bb1: {
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    }
}

promoted[8] in main: &usize = {
    let mut _0: &usize;                  // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let mut _1: usize;                   // in scope 0 at ui/consts/const-size_of_val-align_of_val.rs:48:16: 48:28

    bb0: {
        _1 = const _;                    // scope 0 at ui/consts/const-size_of_val-align_of_val.rs:48:16: 48:28
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    }
}

promoted[9] in main: &usize = {
    let mut _0: &usize;                  // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _1: usize;                   // in scope 0 at ui/consts/const-size_of_val-align_of_val.rs:47:30: 47:52

    bb0: {
        _1 = align_of::<Bar>() -> bb1;   // scope 0 at ui/consts/const-size_of_val-align_of_val.rs:47:30: 47:52
                                         // mir::Constant
                                         // + span: ui/consts/const-size_of_val-align_of_val.rs:47:30: 47:50
                                         // + literal: Const { ty: fn() -> usize {align_of::<Bar>}, val: Value(<ZST>) }
    }

    bb1: {
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    }
}

promoted[10] in main: &usize = {
    let mut _0: &usize;                  // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let mut _1: usize;                   // in scope 0 at ui/consts/const-size_of_val-align_of_val.rs:47:16: 47:28

    bb0: {
        _1 = const _;                    // scope 0 at ui/consts/const-size_of_val-align_of_val.rs:47:16: 47:28
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    }
}

promoted[11] in main: &usize = {
    let mut _0: &usize;                  // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _1: usize;                   // in scope 0 at ui/consts/const-size_of_val-align_of_val.rs:46:30: 46:52

    bb0: {
        _1 = align_of::<Foo>() -> bb1;   // scope 0 at ui/consts/const-size_of_val-align_of_val.rs:46:30: 46:52
                                         // mir::Constant
                                         // + span: ui/consts/const-size_of_val-align_of_val.rs:46:30: 46:50
                                         // + literal: Const { ty: fn() -> usize {align_of::<Foo>}, val: Value(<ZST>) }
    }

    bb1: {
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    }
}

promoted[12] in main: &usize = {
    let mut _0: &usize;                  // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let mut _1: usize;                   // in scope 0 at ui/consts/const-size_of_val-align_of_val.rs:46:16: 46:28

    bb0: {
        _1 = const _;                    // scope 0 at ui/consts/const-size_of_val-align_of_val.rs:46:16: 46:28
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    }
}

promoted[13] in main: &usize = {
    let mut _0: &usize;                  // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _1: usize;                   // in scope 0 at ui/consts/const-size_of_val-align_of_val.rs:44:29: 44:50

    bb0: {
        _1 = std::mem::size_of::<Ugh>() -> bb1; // scope 0 at ui/consts/const-size_of_val-align_of_val.rs:44:29: 44:50
                                         // mir::Constant
                                         // + span: ui/consts/const-size_of_val-align_of_val.rs:44:29: 44:48
                                         // + literal: Const { ty: fn() -> usize {std::mem::size_of::<Ugh>}, val: Value(<ZST>) }
    }

    bb1: {
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    }
}

promoted[14] in main: &usize = {
    let mut _0: &usize;                  // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let mut _1: usize;                   // in scope 0 at ui/consts/const-size_of_val-align_of_val.rs:44:16: 44:27

    bb0: {
        _1 = const _;                    // scope 0 at ui/consts/const-size_of_val-align_of_val.rs:44:16: 44:27
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    }
}

promoted[15] in main: &usize = {
    let mut _0: &usize;                  // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _1: usize;                   // in scope 0 at ui/consts/const-size_of_val-align_of_val.rs:43:29: 43:50

    bb0: {
        _1 = std::mem::size_of::<Bar>() -> bb1; // scope 0 at ui/consts/const-size_of_val-align_of_val.rs:43:29: 43:50
                                         // mir::Constant
                                         // + span: ui/consts/const-size_of_val-align_of_val.rs:43:29: 43:48
                                         // + literal: Const { ty: fn() -> usize {std::mem::size_of::<Bar>}, val: Value(<ZST>) }
    }

    bb1: {
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    }
}

promoted[16] in main: &usize = {
    let mut _0: &usize;                  // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let mut _1: usize;                   // in scope 0 at ui/consts/const-size_of_val-align_of_val.rs:43:16: 43:27

    bb0: {
        _1 = const _;                    // scope 0 at ui/consts/const-size_of_val-align_of_val.rs:43:16: 43:27
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    }
}

promoted[17] in main: &usize = {
    let mut _0: &usize;                  // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _1: usize;                   // in scope 0 at ui/consts/const-size_of_val-align_of_val.rs:42:29: 42:50

    bb0: {
        _1 = std::mem::size_of::<Foo>() -> bb1; // scope 0 at ui/consts/const-size_of_val-align_of_val.rs:42:29: 42:50
                                         // mir::Constant
                                         // + span: ui/consts/const-size_of_val-align_of_val.rs:42:29: 42:48
                                         // + literal: Const { ty: fn() -> usize {std::mem::size_of::<Foo>}, val: Value(<ZST>) }
    }

    bb1: {
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    }
}

promoted[18] in main: &usize = {
    let mut _0: &usize;                  // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let mut _1: usize;                   // in scope 0 at ui/consts/const-size_of_val-align_of_val.rs:42:16: 42:27

    bb0: {
        _1 = const _;                    // scope 0 at ui/consts/const-size_of_val-align_of_val.rs:42:16: 42:27
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    }
}

fn Foo(_1: u32) -> Foo {
    let mut _0: Foo;                     // return place in scope 0 at ui/consts/const-size_of_val-align_of_val.rs:8:1: 8:11

    bb0: {
        _0 = Foo(move _1);               // scope 0 at ui/consts/const-size_of_val-align_of_val.rs:8:1: 8:11
        return;                          // scope 0 at ui/consts/const-size_of_val-align_of_val.rs:8:1: 8:11
    }
}

// MIR FOR CTFE
fn Foo(_1: u32) -> Foo {
    let mut _0: Foo;                     // return place in scope 0 at ui/consts/const-size_of_val-align_of_val.rs:8:1: 8:11

    bb0: {
        _0 = Foo(move _1);               // scope 0 at ui/consts/const-size_of_val-align_of_val.rs:8:1: 8:11
        return;                          // scope 0 at ui/consts/const-size_of_val-align_of_val.rs:8:1: 8:11
    }
}
