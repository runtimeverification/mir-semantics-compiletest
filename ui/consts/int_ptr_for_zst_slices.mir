// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
const FOO: &str = {
    let mut _0: &str;                    // return place in scope 0 at ui/consts/int_ptr_for_zst_slices.rs:3:12: 3:16
    let _1: &str;                        // in scope 0 at ui/consts/int_ptr_for_zst_slices.rs:3:28: 3:86
    let _2: *const str;                  // in scope 0 at ui/consts/int_ptr_for_zst_slices.rs:3:30: 3:86
    let mut _3: *const [u8];             // in scope 0 at ui/consts/int_ptr_for_zst_slices.rs:3:31: 3:71
    let mut _4: *const [u8; 0];          // in scope 0 at ui/consts/int_ptr_for_zst_slices.rs:3:31: 3:56
    scope 1 {
    }

    bb0: {
        StorageLive(_1);                 // scope 1 at ui/consts/int_ptr_for_zst_slices.rs:3:28: 3:86
        StorageLive(_2);                 // scope 1 at ui/consts/int_ptr_for_zst_slices.rs:3:30: 3:86
        StorageLive(_3);                 // scope 1 at ui/consts/int_ptr_for_zst_slices.rs:3:31: 3:71
        StorageLive(_4);                 // scope 1 at ui/consts/int_ptr_for_zst_slices.rs:3:31: 3:56
        _4 = const 1_usize as *const [u8; 0] (PointerFromExposedAddress); // scope 1 at ui/consts/int_ptr_for_zst_slices.rs:3:31: 3:56
        _3 = move _4 as *const [u8] (Pointer(Unsize)); // scope 1 at ui/consts/int_ptr_for_zst_slices.rs:3:31: 3:56
        StorageDead(_4);                 // scope 1 at ui/consts/int_ptr_for_zst_slices.rs:3:55: 3:56
        _2 = move _3 as *const str (PtrToPtr); // scope 1 at ui/consts/int_ptr_for_zst_slices.rs:3:30: 3:86
        StorageDead(_3);                 // scope 1 at ui/consts/int_ptr_for_zst_slices.rs:3:85: 3:86
        _1 = &(*_2);                     // scope 1 at ui/consts/int_ptr_for_zst_slices.rs:3:28: 3:86
        _0 = &(*_1);                     // scope 1 at ui/consts/int_ptr_for_zst_slices.rs:3:28: 3:86
        StorageDead(_1);                 // scope 0 at ui/consts/int_ptr_for_zst_slices.rs:3:87: 3:88
        return;                          // scope 0 at ui/consts/int_ptr_for_zst_slices.rs:3:1: 3:89
    }
}

FOO::{constant#0}: usize = {
    let mut _0: usize;                   // return place in scope 0 at ui/consts/int_ptr_for_zst_slices.rs:3:54: 3:55

    bb0: {
        _0 = const 0_usize;              // scope 0 at ui/consts/int_ptr_for_zst_slices.rs:3:54: 3:55
        return;                          // scope 0 at ui/consts/int_ptr_for_zst_slices.rs:3:54: 3:55
    }
}

fn main() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/consts/int_ptr_for_zst_slices.rs:5:11: 5:11

    bb0: {
        return;                          // scope 0 at ui/consts/int_ptr_for_zst_slices.rs:5:13: 5:13
    }
}
