// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
fn <impl at ui/consts/ice-48279.rs:7:10: 7:19>::eq(_1: &NonZeroU32, _2: &NonZeroU32) -> bool {
    debug self => _1;                    // in scope 0 at ui/consts/ice-48279.rs:7:10: 7:19
    debug other => _2;                   // in scope 0 at ui/consts/ice-48279.rs:7:10: 7:19
    let mut _0: bool;                    // return place in scope 0 at ui/consts/ice-48279.rs:7:10: 7:19
    let mut _3: u32;                     // in scope 0 at ui/consts/ice-48279.rs:9:5: 9:15
    let mut _4: u32;                     // in scope 0 at ui/consts/ice-48279.rs:9:5: 9:15

    bb0: {
        _3 = ((*_1).0: u32);             // scope 0 at ui/consts/ice-48279.rs:9:5: 9:15
        _4 = ((*_2).0: u32);             // scope 0 at ui/consts/ice-48279.rs:9:5: 9:15
        _0 = Eq(move _3, move _4);       // scope 0 at ui/consts/ice-48279.rs:9:5: 9:15
        return;                          // scope 0 at ui/consts/ice-48279.rs:7:19: 7:19
    }
}

fn <impl at ui/consts/ice-48279.rs:7:21: 7:23>::assert_receiver_is_total_eq(_1: &NonZeroU32) -> () {
    debug self => _1;                    // in scope 0 at ui/consts/ice-48279.rs:7:21: 7:23
    let mut _0: ();                      // return place in scope 0 at ui/consts/ice-48279.rs:7:21: 7:23
    scope 1 {
    }

    bb0: {
        return;                          // scope 0 at ui/consts/ice-48279.rs:7:23: 7:23
    }
}

fn <impl at ui/consts/ice-48279.rs:12:1: 12:16>::new_unchecked(_1: u32) -> NonZeroU32 {
    debug value => _1;                   // in scope 0 at ui/consts/ice-48279.rs:13:35: 13:40
    let mut _0: NonZeroU32;              // return place in scope 0 at ui/consts/ice-48279.rs:13:50: 13:54
    let mut _2: u32;                     // in scope 0 at ui/consts/ice-48279.rs:14:22: 14:27

    bb0: {
        _2 = _1;                         // scope 0 at ui/consts/ice-48279.rs:14:22: 14:27
        _0 = NonZeroU32 { value: move _2 }; // scope 0 at ui/consts/ice-48279.rs:14:9: 14:29
        return;                          // scope 0 at ui/consts/ice-48279.rs:15:6: 15:6
    }
}

// MIR FOR CTFE
fn <impl at ui/consts/ice-48279.rs:12:1: 12:16>::new_unchecked(_1: u32) -> NonZeroU32 {
    debug value => _1;                   // in scope 0 at ui/consts/ice-48279.rs:13:35: 13:40
    let mut _0: NonZeroU32;              // return place in scope 0 at ui/consts/ice-48279.rs:13:50: 13:54
    let mut _2: u32;                     // in scope 0 at ui/consts/ice-48279.rs:14:22: 14:27

    bb0: {
        StorageLive(_2);                 // scope 0 at ui/consts/ice-48279.rs:14:22: 14:27
        _2 = _1;                         // scope 0 at ui/consts/ice-48279.rs:14:22: 14:27
        _0 = NonZeroU32 { value: move _2 }; // scope 0 at ui/consts/ice-48279.rs:14:9: 14:29
        StorageDead(_2);                 // scope 0 at ui/consts/ice-48279.rs:14:28: 14:29
        return;                          // scope 0 at ui/consts/ice-48279.rs:15:6: 15:6
    }
}

const FOO_ATOM: NonZeroU32 = {
    let mut _0: NonZeroU32;              // return place in scope 0 at ui/consts/ice-48279.rs:19:21: 19:31
    scope 1 {
    }

    bb0: {
        _0 = NonZeroU32 { value: const 7_u32 }; // scope 1 at ui/consts/ice-48279.rs:19:43: 19:66
        return;                          // scope 0 at ui/consts/ice-48279.rs:19:1: 19:69
    }
}

fn main() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/consts/ice-48279.rs:21:11: 21:11

    bb0: {
        return;                          // scope 0 at ui/consts/ice-48279.rs:26:2: 26:2
    }
}
