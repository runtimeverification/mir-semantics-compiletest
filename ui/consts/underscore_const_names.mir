// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
const _: () = {
    let mut _0: ();                      // return place in scope 0 at ui/consts/underscore_const_names.rs:20:11: 20:13

    bb0: {
        _0 = ();                         // scope 0 at ui/consts/underscore_const_names.rs:20:16: 20:18
        return;                          // scope 0 at ui/consts/underscore_const_names.rs:20:1: 20:19
    }
}

const _: i32 = {
    let mut _0: i32;                     // return place in scope 0 at ui/consts/underscore_const_names.rs:22:11: 22:14

    bb0: {
        _0 = const 42_i32;               // scope 0 at ui/consts/underscore_const_names.rs:22:17: 22:19
        return;                          // scope 0 at ui/consts/underscore_const_names.rs:22:1: 22:20
    }
}

const _: Str = {
    let mut _0: Str;                     // return place in scope 0 at ui/consts/underscore_const_names.rs:23:11: 23:14

    bb0: {
        _0 = Str;                        // scope 0 at ui/consts/underscore_const_names.rs:23:17: 23:22
        return;                          // scope 0 at ui/consts/underscore_const_names.rs:23:1: 23:23
    }
}

const _: () = {
    let mut _0: ();                      // return place in scope 0 at ui/consts/underscore_const_names.rs:11:19: 11:21
    let mut _1: _::ImplementsTrait<Str>; // in scope 0 at ui/consts/underscore_const_names.rs:14:21: 14:60
    let mut _2: std::marker::PhantomData<Str>; // in scope 0 at ui/consts/underscore_const_names.rs:14:48: 14:59
    scope 1 {
    }

    bb0: {
        StorageLive(_1);                 // scope 0 at ui/consts/underscore_const_names.rs:14:21: 14:60
        StorageLive(_2);                 // scope 0 at ui/consts/underscore_const_names.rs:14:48: 14:59
        _2 = PhantomData::<Str>;         // scope 0 at ui/consts/underscore_const_names.rs:14:48: 14:59
        _1 = _::ImplementsTrait::<Str>(move _2); // scope 0 at ui/consts/underscore_const_names.rs:14:21: 14:60
        StorageDead(_2);                 // scope 0 at ui/consts/underscore_const_names.rs:14:59: 14:60
        StorageDead(_1);                 // scope 0 at ui/consts/underscore_const_names.rs:14:60: 14:61
        _0 = ();                         // scope 1 at ui/consts/underscore_const_names.rs:15:13: 15:15
        return;                          // scope 0 at ui/consts/underscore_const_names.rs:11:9: 16:11
    }
}

const _: () = {
    let mut _0: ();                      // return place in scope 0 at ui/consts/underscore_const_names.rs:11:19: 11:21
    let mut _1: _::ImplementsTrait<Str>; // in scope 0 at ui/consts/underscore_const_names.rs:14:21: 14:60
    let mut _2: std::marker::PhantomData<Str>; // in scope 0 at ui/consts/underscore_const_names.rs:14:48: 14:59
    scope 1 {
    }

    bb0: {
        StorageLive(_1);                 // scope 0 at ui/consts/underscore_const_names.rs:14:21: 14:60
        StorageLive(_2);                 // scope 0 at ui/consts/underscore_const_names.rs:14:48: 14:59
        _2 = PhantomData::<Str>;         // scope 0 at ui/consts/underscore_const_names.rs:14:48: 14:59
        _1 = _::ImplementsTrait::<Str>(move _2); // scope 0 at ui/consts/underscore_const_names.rs:14:21: 14:60
        StorageDead(_2);                 // scope 0 at ui/consts/underscore_const_names.rs:14:59: 14:60
        StorageDead(_1);                 // scope 0 at ui/consts/underscore_const_names.rs:14:60: 14:61
        _0 = ();                         // scope 1 at ui/consts/underscore_const_names.rs:15:13: 15:15
        return;                          // scope 0 at ui/consts/underscore_const_names.rs:11:9: 16:11
    }
}

fn main() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/consts/underscore_const_names.rs:28:11: 28:11

    bb0: {
        return;                          // scope 0 at ui/consts/underscore_const_names.rs:31:2: 31:2
    }
}

const main::_: () = {
    let mut _0: ();                      // return place in scope 0 at ui/consts/underscore_const_names.rs:11:19: 11:21
    let mut _1: main::_::ImplementsTrait<Str>; // in scope 0 at ui/consts/underscore_const_names.rs:14:21: 14:60
    let mut _2: std::marker::PhantomData<Str>; // in scope 0 at ui/consts/underscore_const_names.rs:14:48: 14:59
    scope 1 {
    }

    bb0: {
        StorageLive(_1);                 // scope 0 at ui/consts/underscore_const_names.rs:14:21: 14:60
        StorageLive(_2);                 // scope 0 at ui/consts/underscore_const_names.rs:14:48: 14:59
        _2 = PhantomData::<Str>;         // scope 0 at ui/consts/underscore_const_names.rs:14:48: 14:59
        _1 = main::_::ImplementsTrait::<Str>(move _2); // scope 0 at ui/consts/underscore_const_names.rs:14:21: 14:60
        StorageDead(_2);                 // scope 0 at ui/consts/underscore_const_names.rs:14:59: 14:60
        StorageDead(_1);                 // scope 0 at ui/consts/underscore_const_names.rs:14:60: 14:61
        _0 = ();                         // scope 1 at ui/consts/underscore_const_names.rs:15:13: 15:15
        return;                          // scope 0 at ui/consts/underscore_const_names.rs:11:9: 16:11
    }
}

const main::_: () = {
    let mut _0: ();                      // return place in scope 0 at ui/consts/underscore_const_names.rs:11:19: 11:21
    let mut _1: main::_::ImplementsTrait<Str>; // in scope 0 at ui/consts/underscore_const_names.rs:14:21: 14:60
    let mut _2: std::marker::PhantomData<Str>; // in scope 0 at ui/consts/underscore_const_names.rs:14:48: 14:59
    scope 1 {
    }

    bb0: {
        StorageLive(_1);                 // scope 0 at ui/consts/underscore_const_names.rs:14:21: 14:60
        StorageLive(_2);                 // scope 0 at ui/consts/underscore_const_names.rs:14:48: 14:59
        _2 = PhantomData::<Str>;         // scope 0 at ui/consts/underscore_const_names.rs:14:48: 14:59
        _1 = main::_::ImplementsTrait::<Str>(move _2); // scope 0 at ui/consts/underscore_const_names.rs:14:21: 14:60
        StorageDead(_2);                 // scope 0 at ui/consts/underscore_const_names.rs:14:59: 14:60
        StorageDead(_1);                 // scope 0 at ui/consts/underscore_const_names.rs:14:60: 14:61
        _0 = ();                         // scope 1 at ui/consts/underscore_const_names.rs:15:13: 15:15
        return;                          // scope 0 at ui/consts/underscore_const_names.rs:11:9: 16:11
    }
}

fn _::ImplementsTrait(_1: PhantomData<T>) -> _::ImplementsTrait<T> {
    let mut _0: _::ImplementsTrait<T>;   // return place in scope 0 at ui/consts/underscore_const_names.rs:13:13: 13:46

    bb0: {
        _0 = _::ImplementsTrait::<T>(move _1); // scope 0 at ui/consts/underscore_const_names.rs:13:13: 13:46
        return;                          // scope 0 at ui/consts/underscore_const_names.rs:13:13: 13:46
    }
}

// MIR FOR CTFE
fn _::ImplementsTrait(_1: PhantomData<T>) -> _::ImplementsTrait<T> {
    let mut _0: _::ImplementsTrait<T>;   // return place in scope 0 at ui/consts/underscore_const_names.rs:13:13: 13:46

    bb0: {
        _0 = _::ImplementsTrait::<T>(move _1); // scope 0 at ui/consts/underscore_const_names.rs:13:13: 13:46
        return;                          // scope 0 at ui/consts/underscore_const_names.rs:13:13: 13:46
    }
}

fn _::ImplementsTrait(_1: PhantomData<T>) -> _::ImplementsTrait<T> {
    let mut _0: _::ImplementsTrait<T>;   // return place in scope 0 at ui/consts/underscore_const_names.rs:13:13: 13:46

    bb0: {
        _0 = _::ImplementsTrait::<T>(move _1); // scope 0 at ui/consts/underscore_const_names.rs:13:13: 13:46
        return;                          // scope 0 at ui/consts/underscore_const_names.rs:13:13: 13:46
    }
}

// MIR FOR CTFE
fn _::ImplementsTrait(_1: PhantomData<T>) -> _::ImplementsTrait<T> {
    let mut _0: _::ImplementsTrait<T>;   // return place in scope 0 at ui/consts/underscore_const_names.rs:13:13: 13:46

    bb0: {
        _0 = _::ImplementsTrait::<T>(move _1); // scope 0 at ui/consts/underscore_const_names.rs:13:13: 13:46
        return;                          // scope 0 at ui/consts/underscore_const_names.rs:13:13: 13:46
    }
}

fn main::_::ImplementsTrait(_1: PhantomData<T>) -> main::_::ImplementsTrait<T> {
    let mut _0: main::_::ImplementsTrait<T>; // return place in scope 0 at ui/consts/underscore_const_names.rs:13:13: 13:46

    bb0: {
        _0 = main::_::ImplementsTrait::<T>(move _1); // scope 0 at ui/consts/underscore_const_names.rs:13:13: 13:46
        return;                          // scope 0 at ui/consts/underscore_const_names.rs:13:13: 13:46
    }
}

// MIR FOR CTFE
fn main::_::ImplementsTrait(_1: PhantomData<T>) -> main::_::ImplementsTrait<T> {
    let mut _0: main::_::ImplementsTrait<T>; // return place in scope 0 at ui/consts/underscore_const_names.rs:13:13: 13:46

    bb0: {
        _0 = main::_::ImplementsTrait::<T>(move _1); // scope 0 at ui/consts/underscore_const_names.rs:13:13: 13:46
        return;                          // scope 0 at ui/consts/underscore_const_names.rs:13:13: 13:46
    }
}

fn main::_::ImplementsTrait(_1: PhantomData<T>) -> main::_::ImplementsTrait<T> {
    let mut _0: main::_::ImplementsTrait<T>; // return place in scope 0 at ui/consts/underscore_const_names.rs:13:13: 13:46

    bb0: {
        _0 = main::_::ImplementsTrait::<T>(move _1); // scope 0 at ui/consts/underscore_const_names.rs:13:13: 13:46
        return;                          // scope 0 at ui/consts/underscore_const_names.rs:13:13: 13:46
    }
}

// MIR FOR CTFE
fn main::_::ImplementsTrait(_1: PhantomData<T>) -> main::_::ImplementsTrait<T> {
    let mut _0: main::_::ImplementsTrait<T>; // return place in scope 0 at ui/consts/underscore_const_names.rs:13:13: 13:46

    bb0: {
        _0 = main::_::ImplementsTrait::<T>(move _1); // scope 0 at ui/consts/underscore_const_names.rs:13:13: 13:46
        return;                          // scope 0 at ui/consts/underscore_const_names.rs:13:13: 13:46
    }
}
