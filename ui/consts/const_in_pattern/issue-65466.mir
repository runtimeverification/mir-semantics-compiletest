// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
fn <impl at ui/consts/const_in_pattern/issue-65466.rs:5:10: 5:19>::eq(_1: &O<T>, _2: &O<T>) -> bool {
    debug self => _1;                    // in scope 0 at ui/consts/const_in_pattern/issue-65466.rs:5:10: 5:19
    debug other => _2;                   // in scope 0 at ui/consts/const_in_pattern/issue-65466.rs:5:10: 5:19
    let mut _0: bool;                    // return place in scope 0 at ui/consts/const_in_pattern/issue-65466.rs:5:10: 5:19
    let _3: isize;                       // in scope 0 at ui/consts/const_in_pattern/issue-65466.rs:5:10: 5:19
    let mut _4: &O<T>;                   // in scope 0 at ui/consts/const_in_pattern/issue-65466.rs:5:10: 5:19
    let mut _6: &O<T>;                   // in scope 0 at ui/consts/const_in_pattern/issue-65466.rs:5:10: 5:19
    let mut _7: bool;                    // in scope 0 at ui/consts/const_in_pattern/issue-65466.rs:5:10: 5:19
    let mut _8: isize;                   // in scope 0 at ui/consts/const_in_pattern/issue-65466.rs:5:10: 5:19
    let mut _9: isize;                   // in scope 0 at ui/consts/const_in_pattern/issue-65466.rs:5:10: 5:19
    let mut _10: bool;                   // in scope 0 at ui/consts/const_in_pattern/issue-65466.rs:5:10: 5:19
    let mut _11: (&O<T>, &O<T>);         // in scope 0 at ui/consts/const_in_pattern/issue-65466.rs:5:10: 5:19
    let mut _12: &O<T>;                  // in scope 0 at ui/consts/const_in_pattern/issue-65466.rs:5:10: 5:19
    let mut _13: &O<T>;                  // in scope 0 at ui/consts/const_in_pattern/issue-65466.rs:5:10: 5:19
    let mut _14: isize;                  // in scope 0 at ui/consts/const_in_pattern/issue-65466.rs:5:10: 5:19
    let mut _15: isize;                  // in scope 0 at ui/consts/const_in_pattern/issue-65466.rs:5:10: 5:19
    let mut _18: *const T;               // in scope 0 at ui/consts/const_in_pattern/issue-65466.rs:7:10: 7:18
    let mut _19: *const T;               // in scope 0 at ui/consts/const_in_pattern/issue-65466.rs:7:10: 7:18
    let mut _20: &O<T>;                  // in scope 0 at ui/consts/const_in_pattern/issue-65466.rs:5:10: 5:19
    let mut _21: &O<T>;                  // in scope 0 at ui/consts/const_in_pattern/issue-65466.rs:5:10: 5:19
    let mut _22: &O<T>;                  // in scope 0 at ui/consts/const_in_pattern/issue-65466.rs:5:10: 5:19
    let mut _23: &O<T>;                  // in scope 0 at ui/consts/const_in_pattern/issue-65466.rs:5:10: 5:19
    scope 1 {
        debug __self_tag => _3;          // in scope 1 at ui/consts/const_in_pattern/issue-65466.rs:5:10: 5:19
        let _5: isize;                   // in scope 1 at ui/consts/const_in_pattern/issue-65466.rs:5:10: 5:19
        scope 2 {
            debug __arg1_tag => _5;      // in scope 2 at ui/consts/const_in_pattern/issue-65466.rs:5:10: 5:19
            let _16: &*const T;          // in scope 2 at ui/consts/const_in_pattern/issue-65466.rs:7:10: 7:18
            let _17: &*const T;          // in scope 2 at ui/consts/const_in_pattern/issue-65466.rs:7:10: 7:18
            scope 3 {
                debug __self_0 => _16;   // in scope 3 at ui/consts/const_in_pattern/issue-65466.rs:7:10: 7:18
                debug __arg1_0 => _17;   // in scope 3 at ui/consts/const_in_pattern/issue-65466.rs:7:10: 7:18
            }
        }
    }

    bb0: {
        _4 = _1;                         // scope 0 at ui/consts/const_in_pattern/issue-65466.rs:5:10: 5:19
        _3 = discriminant((*_4));        // scope 0 at ui/consts/const_in_pattern/issue-65466.rs:5:10: 5:19
        _6 = _2;                         // scope 1 at ui/consts/const_in_pattern/issue-65466.rs:5:10: 5:19
        _5 = discriminant((*_6));        // scope 1 at ui/consts/const_in_pattern/issue-65466.rs:5:10: 5:19
        _8 = _3;                         // scope 2 at ui/consts/const_in_pattern/issue-65466.rs:5:10: 5:19
        _9 = _5;                         // scope 2 at ui/consts/const_in_pattern/issue-65466.rs:5:10: 5:19
        _7 = Eq(move _8, move _9);       // scope 2 at ui/consts/const_in_pattern/issue-65466.rs:5:10: 5:19
        switchInt(move _7) -> [0: bb1, otherwise: bb2]; // scope 2 at ui/consts/const_in_pattern/issue-65466.rs:5:10: 5:19
    }

    bb1: {
        _0 = const false;                // scope 2 at ui/consts/const_in_pattern/issue-65466.rs:5:10: 5:19
        goto -> bb3;                     // scope 2 at ui/consts/const_in_pattern/issue-65466.rs:5:10: 5:19
    }

    bb2: {
        _12 = _1;                        // scope 2 at ui/consts/const_in_pattern/issue-65466.rs:5:10: 5:19
        _13 = _2;                        // scope 2 at ui/consts/const_in_pattern/issue-65466.rs:5:10: 5:19
        _11 = (move _12, move _13);      // scope 2 at ui/consts/const_in_pattern/issue-65466.rs:5:10: 5:19
        _20 = deref_copy (_11.0: &O<T>); // scope 2 at ui/consts/const_in_pattern/issue-65466.rs:5:10: 5:19
        _15 = discriminant((*_20));      // scope 2 at ui/consts/const_in_pattern/issue-65466.rs:5:10: 5:19
        switchInt(move _15) -> [0: bb4, otherwise: bb5]; // scope 2 at ui/consts/const_in_pattern/issue-65466.rs:5:10: 5:19
    }

    bb3: {
        return;                          // scope 0 at ui/consts/const_in_pattern/issue-65466.rs:5:19: 5:19
    }

    bb4: {
        _21 = deref_copy (_11.1: &O<T>); // scope 2 at ui/consts/const_in_pattern/issue-65466.rs:5:10: 5:19
        _14 = discriminant((*_21));      // scope 2 at ui/consts/const_in_pattern/issue-65466.rs:5:10: 5:19
        switchInt(move _14) -> [0: bb6, otherwise: bb5]; // scope 2 at ui/consts/const_in_pattern/issue-65466.rs:5:10: 5:19
    }

    bb5: {
        _10 = const true;                // scope 2 at ui/consts/const_in_pattern/issue-65466.rs:5:10: 5:19
        goto -> bb7;                     // scope 2 at ui/consts/const_in_pattern/issue-65466.rs:5:10: 5:19
    }

    bb6: {
        _22 = deref_copy (_11.0: &O<T>); // scope 2 at ui/consts/const_in_pattern/issue-65466.rs:7:10: 7:18
        _16 = &(((*_22) as Some).0: *const T); // scope 2 at ui/consts/const_in_pattern/issue-65466.rs:7:10: 7:18
        _23 = deref_copy (_11.1: &O<T>); // scope 2 at ui/consts/const_in_pattern/issue-65466.rs:7:10: 7:18
        _17 = &(((*_23) as Some).0: *const T); // scope 2 at ui/consts/const_in_pattern/issue-65466.rs:7:10: 7:18
        _18 = (*_16);                    // scope 3 at ui/consts/const_in_pattern/issue-65466.rs:7:10: 7:18
        _19 = (*_17);                    // scope 3 at ui/consts/const_in_pattern/issue-65466.rs:7:10: 7:18
        _10 = Eq(move _18, move _19);    // scope 3 at ui/consts/const_in_pattern/issue-65466.rs:7:10: 7:18
        goto -> bb7;                     // scope 2 at ui/consts/const_in_pattern/issue-65466.rs:5:18: 5:19
    }

    bb7: {
        _0 = move _10;                   // scope 2 at ui/consts/const_in_pattern/issue-65466.rs:5:10: 5:19
        goto -> bb3;                     // scope 2 at ui/consts/const_in_pattern/issue-65466.rs:5:10: 5:19
    }
}

fn <impl at ui/consts/const_in_pattern/issue-65466.rs:5:21: 5:23>::assert_receiver_is_total_eq(_1: &O<T>) -> () {
    debug self => _1;                    // in scope 0 at ui/consts/const_in_pattern/issue-65466.rs:5:21: 5:23
    let mut _0: ();                      // return place in scope 0 at ui/consts/const_in_pattern/issue-65466.rs:5:21: 5:23
    scope 1 {
    }

    bb0: {
        return;                          // scope 0 at ui/consts/const_in_pattern/issue-65466.rs:5:23: 5:23
    }
}

const C: &[O<B>] = {
    let mut _0: &[O<B>];                 // return place in scope 0 at ui/consts/const_in_pattern/issue-65466.rs:13:10: 13:17
    let mut _1: &[O<B>; 1];              // in scope 0 at ui/consts/const_in_pattern/issue-65466.rs:13:20: 13:30
    let _2: &[O<B>; 1];                  // in scope 0 at ui/consts/const_in_pattern/issue-65466.rs:13:20: 13:30
    let _3: [O<B>; 1];                   // in scope 0 at ui/consts/const_in_pattern/issue-65466.rs:13:21: 13:30
    let mut _4: O<B>;                    // in scope 0 at ui/consts/const_in_pattern/issue-65466.rs:13:22: 13:29
    let mut _5: &[O<B>; 1];              // in scope 0 at ui/consts/const_in_pattern/issue-65466.rs:13:20: 13:30

    bb0: {
        StorageLive(_1);                 // scope 0 at ui/consts/const_in_pattern/issue-65466.rs:13:20: 13:30
        StorageLive(_2);                 // scope 0 at ui/consts/const_in_pattern/issue-65466.rs:13:20: 13:30
        _5 = const _;                    // scope 0 at ui/consts/const_in_pattern/issue-65466.rs:13:20: 13:30
                                         // mir::Constant
                                         // + span: ui/consts/const_in_pattern/issue-65466.rs:13:20: 13:30
                                         // + literal: Const { ty: &[O<B>; 1], val: Unevaluated(C, [], Some(promoted[0])) }
        _2 = &(*_5);                     // scope 0 at ui/consts/const_in_pattern/issue-65466.rs:13:20: 13:30
        _1 = &(*_2);                     // scope 0 at ui/consts/const_in_pattern/issue-65466.rs:13:20: 13:30
        _0 = move _1 as &[O<B>] (Pointer(Unsize)); // scope 0 at ui/consts/const_in_pattern/issue-65466.rs:13:20: 13:30
        StorageDead(_2);                 // scope 0 at ui/consts/const_in_pattern/issue-65466.rs:13:29: 13:30
        StorageDead(_1);                 // scope 0 at ui/consts/const_in_pattern/issue-65466.rs:13:29: 13:30
        return;                          // scope 0 at ui/consts/const_in_pattern/issue-65466.rs:13:1: 13:31
    }
}

promoted[0] in C: &[O<B>; 1] = {
    let mut _0: &[O<B>; 1];              // return place in scope 0 at ui/consts/const_in_pattern/issue-65466.rs:13:20: 13:30
    let mut _1: [O<B>; 1];               // in scope 0 at ui/consts/const_in_pattern/issue-65466.rs:13:21: 13:30
    let mut _2: O<B>;                    // in scope 0 at ui/consts/const_in_pattern/issue-65466.rs:13:22: 13:29

    bb0: {
        _2 = O::<B>::None;               // scope 0 at ui/consts/const_in_pattern/issue-65466.rs:13:22: 13:29
        _1 = [move _2];                  // scope 0 at ui/consts/const_in_pattern/issue-65466.rs:13:21: 13:30
        _0 = &_1;                        // scope 0 at ui/consts/const_in_pattern/issue-65466.rs:13:20: 13:30
        return;                          // scope 0 at ui/consts/const_in_pattern/issue-65466.rs:13:20: 13:30
    }
}

fn main() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/consts/const_in_pattern/issue-65466.rs:15:11: 15:11
    let _1: O<B>;                        // in scope 0 at ui/consts/const_in_pattern/issue-65466.rs:16:9: 16:10
    let mut _2: &[O<B>];                 // in scope 0 at ui/consts/const_in_pattern/issue-65466.rs:17:11: 17:19
    let _3: &[O<B>];                     // in scope 0 at ui/consts/const_in_pattern/issue-65466.rs:17:12: 17:19
    let mut _4: &[O<B>; 1];              // in scope 0 at ui/consts/const_in_pattern/issue-65466.rs:17:12: 17:15
    let _5: [O<B>; 1];                   // in scope 0 at ui/consts/const_in_pattern/issue-65466.rs:17:12: 17:15
    let mut _6: O<B>;                    // in scope 0 at ui/consts/const_in_pattern/issue-65466.rs:17:13: 17:14
    let mut _7: std::ops::RangeFull;     // in scope 0 at ui/consts/const_in_pattern/issue-65466.rs:17:16: 17:18
    let mut _8: usize;                   // in scope 0 at ui/consts/const_in_pattern/issue-65466.rs:18:9: 18:10
    let mut _9: usize;                   // in scope 0 at ui/consts/const_in_pattern/issue-65466.rs:18:9: 18:10
    let mut _10: bool;                   // in scope 0 at ui/consts/const_in_pattern/issue-65466.rs:18:9: 18:10
    scope 1 {
        debug x => _1;                   // in scope 1 at ui/consts/const_in_pattern/issue-65466.rs:16:9: 16:10
    }

    bb0: {
        _1 = O::<B>::None;               // scope 0 at ui/consts/const_in_pattern/issue-65466.rs:16:13: 16:20
        _6 = move _1;                    // scope 1 at ui/consts/const_in_pattern/issue-65466.rs:17:13: 17:14
        _5 = [move _6];                  // scope 1 at ui/consts/const_in_pattern/issue-65466.rs:17:12: 17:15
        _4 = &_5;                        // scope 1 at ui/consts/const_in_pattern/issue-65466.rs:17:12: 17:15
        _3 = <[O<B>; 1] as Index<RangeFull>>::index(move _4, move _7) -> bb1; // scope 1 at ui/consts/const_in_pattern/issue-65466.rs:17:12: 17:19
                                         // mir::Constant
                                         // + span: ui/consts/const_in_pattern/issue-65466.rs:17:12: 17:19
                                         // + literal: Const { ty: for<'a> fn(&'a [O<B>; 1], RangeFull) -> &'a <[O<B>; 1] as Index<RangeFull>>::Output {<[O<B>; 1] as Index<RangeFull>>::index}, val: Value(<ZST>) }
    }

    bb1: {
        _2 = _3;                         // scope 1 at ui/consts/const_in_pattern/issue-65466.rs:17:11: 17:19
        _8 = Len((*_2));                 // scope 1 at ui/consts/const_in_pattern/issue-65466.rs:18:9: 18:10
        _9 = const 1_usize;              // scope 1 at ui/consts/const_in_pattern/issue-65466.rs:18:9: 18:10
        _10 = Eq(move _8, move _9);      // scope 1 at ui/consts/const_in_pattern/issue-65466.rs:18:9: 18:10
        switchInt(move _10) -> [0: bb3, otherwise: bb2]; // scope 1 at ui/consts/const_in_pattern/issue-65466.rs:18:9: 18:10
    }

    bb2: {
        goto -> bb3;                     // scope 1 at ui/consts/const_in_pattern/issue-65466.rs:17:5: 17:19
    }

    bb3: {
        return;                          // scope 0 at ui/consts/const_in_pattern/issue-65466.rs:21:2: 21:2
    }
}

fn O::Some(_1: *const T) -> O<T> {
    let mut _0: O<T>;                    // return place in scope 0 at ui/consts/const_in_pattern/issue-65466.rs:7:5: 7:9

    bb0: {
        _0 = O::<T>::Some(move _1);      // scope 0 at ui/consts/const_in_pattern/issue-65466.rs:7:5: 7:9
        return;                          // scope 0 at ui/consts/const_in_pattern/issue-65466.rs:7:5: 7:9
    }
}

// MIR FOR CTFE
fn O::Some(_1: *const T) -> O<T> {
    let mut _0: O<T>;                    // return place in scope 0 at ui/consts/const_in_pattern/issue-65466.rs:7:5: 7:9

    bb0: {
        _0 = O::<T>::Some(move _1);      // scope 0 at ui/consts/const_in_pattern/issue-65466.rs:7:5: 7:9
        return;                          // scope 0 at ui/consts/const_in_pattern/issue-65466.rs:7:5: 7:9
    }
}
