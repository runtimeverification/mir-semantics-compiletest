// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
fn main() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/consts/closure-structural-match-issue-90013.rs:5:11: 5:11

    bb0: {
        return;                          // scope 0 at ui/consts/closure-structural-match-issue-90013.rs:7:2: 7:2
    }
}

main::{constant#0}: [closure@ui/consts/closure-structural-match-issue-90013.rs:6:13: 6:15] = {
    let mut _0: [closure@ui/consts/closure-structural-match-issue-90013.rs:6:13: 6:15]; // return place in scope 0 at ui/consts/closure-structural-match-issue-90013.rs:6:11: 6:20

    bb0: {
        _0 = [closure@ui/consts/closure-structural-match-issue-90013.rs:6:13: 6:15]; // scope 0 at ui/consts/closure-structural-match-issue-90013.rs:6:13: 6:18
                                         // closure
                                         // + def_id: DefId(0:5 ~ closure_structural_match_issue_90013[70ad]::main::{constant#0}::{closure#0})
                                         // + substs: [
                                         //     i8,
                                         //     extern "rust-call" fn(()),
                                         //     (),
                                         // ]
        return;                          // scope 0 at ui/consts/closure-structural-match-issue-90013.rs:6:11: 6:20
    }
}

fn main::{constant#0}::{closure#0}(_1: &[closure@ui/consts/closure-structural-match-issue-90013.rs:6:13: 6:15]) -> () {
    let mut _0: ();                      // return place in scope 0 at ui/consts/closure-structural-match-issue-90013.rs:6:16: 6:16

    bb0: {
        return;                          // scope 0 at ui/consts/closure-structural-match-issue-90013.rs:6:18: 6:18
    }
}
