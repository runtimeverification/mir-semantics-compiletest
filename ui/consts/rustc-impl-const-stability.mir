// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
fn <impl at ui/consts/rustc-impl-const-stability.rs:15:1: 15:28>::default() -> Data {
    let mut _0: Data;                    // return place in scope 0 at ui/consts/rustc-impl-const-stability.rs:16:21: 16:25

    bb0: {
        _0 = const Data {{ _data: 42_u128 }}; // scope 0 at ui/consts/rustc-impl-const-stability.rs:17:9: 17:27
                                         // mir::Constant
                                         // + span: ui/consts/rustc-impl-const-stability.rs:17:9: 17:27
                                         // + literal: Const { ty: Data, val: Value(Scalar(0x0000000000000000000000000000002a)) }
        return;                          // scope 0 at ui/consts/rustc-impl-const-stability.rs:18:6: 18:6
    }
}

// MIR FOR CTFE
fn <impl at ui/consts/rustc-impl-const-stability.rs:15:1: 15:28>::default() -> Data {
    let mut _0: Data;                    // return place in scope 0 at ui/consts/rustc-impl-const-stability.rs:16:21: 16:25

    bb0: {
        _0 = Data { _data: const 42_u128 }; // scope 0 at ui/consts/rustc-impl-const-stability.rs:17:9: 17:27
        return;                          // scope 0 at ui/consts/rustc-impl-const-stability.rs:18:6: 18:6
    }
}
