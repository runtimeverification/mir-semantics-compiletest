// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
fn main() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/stdlib-unit-tests/seq-compare.rs:3:15: 3:15
    let mut _1: bool;                    // in scope 0 at ui/stdlib-unit-tests/seq-compare.rs:4:5: 4:57
    let mut _2: bool;                    // in scope 0 at ui/stdlib-unit-tests/seq-compare.rs:4:13: 4:56
    let mut _3: &std::string::String;    // in scope 0 at ui/stdlib-unit-tests/seq-compare.rs:4:14: 4:33
    let _4: std::string::String;         // in scope 0 at ui/stdlib-unit-tests/seq-compare.rs:4:14: 4:33
    let mut _5: &str;                    // in scope 0 at ui/stdlib-unit-tests/seq-compare.rs:4:14: 4:33
    let _6: &str;                        // in scope 0 at ui/stdlib-unit-tests/seq-compare.rs:4:14: 4:21
    let mut _7: &std::string::String;    // in scope 0 at ui/stdlib-unit-tests/seq-compare.rs:4:36: 4:55
    let _8: std::string::String;         // in scope 0 at ui/stdlib-unit-tests/seq-compare.rs:4:36: 4:55
    let mut _9: &str;                    // in scope 0 at ui/stdlib-unit-tests/seq-compare.rs:4:36: 4:55
    let _10: &str;                       // in scope 0 at ui/stdlib-unit-tests/seq-compare.rs:4:36: 4:43
    let mut _11: !;                      // in scope 0 at ui/stdlib-unit-tests/seq-compare.rs:4:5: 4:57
    let mut _12: bool;                   // in scope 0 at ui/stdlib-unit-tests/seq-compare.rs:5:5: 5:58
    let mut _13: bool;                   // in scope 0 at ui/stdlib-unit-tests/seq-compare.rs:5:13: 5:57
    let mut _14: &std::string::String;   // in scope 0 at ui/stdlib-unit-tests/seq-compare.rs:5:14: 5:34
    let _15: std::string::String;        // in scope 0 at ui/stdlib-unit-tests/seq-compare.rs:5:14: 5:34
    let mut _16: &str;                   // in scope 0 at ui/stdlib-unit-tests/seq-compare.rs:5:14: 5:34
    let _17: &str;                       // in scope 0 at ui/stdlib-unit-tests/seq-compare.rs:5:14: 5:22
    let mut _18: &std::string::String;   // in scope 0 at ui/stdlib-unit-tests/seq-compare.rs:5:37: 5:56
    let _19: std::string::String;        // in scope 0 at ui/stdlib-unit-tests/seq-compare.rs:5:37: 5:56
    let mut _20: &str;                   // in scope 0 at ui/stdlib-unit-tests/seq-compare.rs:5:37: 5:56
    let _21: &str;                       // in scope 0 at ui/stdlib-unit-tests/seq-compare.rs:5:37: 5:44
    let mut _22: !;                      // in scope 0 at ui/stdlib-unit-tests/seq-compare.rs:5:5: 5:58
    let mut _23: bool;                   // in scope 0 at ui/stdlib-unit-tests/seq-compare.rs:6:5: 6:58
    let mut _24: bool;                   // in scope 0 at ui/stdlib-unit-tests/seq-compare.rs:6:13: 6:57
    let mut _25: &std::string::String;   // in scope 0 at ui/stdlib-unit-tests/seq-compare.rs:6:14: 6:33
    let _26: std::string::String;        // in scope 0 at ui/stdlib-unit-tests/seq-compare.rs:6:14: 6:33
    let mut _27: &str;                   // in scope 0 at ui/stdlib-unit-tests/seq-compare.rs:6:14: 6:33
    let _28: &str;                       // in scope 0 at ui/stdlib-unit-tests/seq-compare.rs:6:14: 6:21
    let mut _29: &std::string::String;   // in scope 0 at ui/stdlib-unit-tests/seq-compare.rs:6:37: 6:56
    let _30: std::string::String;        // in scope 0 at ui/stdlib-unit-tests/seq-compare.rs:6:37: 6:56
    let mut _31: &str;                   // in scope 0 at ui/stdlib-unit-tests/seq-compare.rs:6:37: 6:56
    let _32: &str;                       // in scope 0 at ui/stdlib-unit-tests/seq-compare.rs:6:37: 6:44
    let mut _33: !;                      // in scope 0 at ui/stdlib-unit-tests/seq-compare.rs:6:5: 6:58
    let mut _34: bool;                   // in scope 0 at ui/stdlib-unit-tests/seq-compare.rs:7:5: 7:48
    let mut _35: bool;                   // in scope 0 at ui/stdlib-unit-tests/seq-compare.rs:7:13: 7:47
    let mut _36: &std::vec::Vec<i32>;    // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:50:36: 53:10
    let _37: std::vec::Vec<i32>;         // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:50:36: 53:10
    let mut _38: std::boxed::Box<[i32]>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
    let mut _39: std::boxed::Box<[i32; 4]>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
    let mut _40: usize;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
    let mut _41: usize;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
    let mut _42: *mut u8;                // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
    let mut _43: std::boxed::Box<[i32; 4]>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
    let mut _44: &std::vec::Vec<i32>;    // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:50:36: 53:10
    let _45: std::vec::Vec<i32>;         // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:50:36: 53:10
    let mut _46: std::boxed::Box<[i32]>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
    let mut _47: std::boxed::Box<[i32; 3]>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
    let mut _48: usize;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
    let mut _49: usize;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
    let mut _50: *mut u8;                // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
    let mut _51: std::boxed::Box<[i32; 3]>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
    let mut _52: !;                      // in scope 0 at ui/stdlib-unit-tests/seq-compare.rs:7:5: 7:48
    let mut _53: bool;                   // in scope 0 at ui/stdlib-unit-tests/seq-compare.rs:8:5: 8:48
    let mut _54: bool;                   // in scope 0 at ui/stdlib-unit-tests/seq-compare.rs:8:13: 8:47
    let mut _55: &std::vec::Vec<i32>;    // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:50:36: 53:10
    let _56: std::vec::Vec<i32>;         // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:50:36: 53:10
    let mut _57: std::boxed::Box<[i32]>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
    let mut _58: std::boxed::Box<[i32; 3]>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
    let mut _59: usize;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
    let mut _60: usize;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
    let mut _61: *mut u8;                // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
    let mut _62: std::boxed::Box<[i32; 3]>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
    let mut _63: &std::vec::Vec<i32>;    // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:50:36: 53:10
    let _64: std::vec::Vec<i32>;         // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:50:36: 53:10
    let mut _65: std::boxed::Box<[i32]>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
    let mut _66: std::boxed::Box<[i32; 4]>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
    let mut _67: usize;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
    let mut _68: usize;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
    let mut _69: *mut u8;                // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
    let mut _70: std::boxed::Box<[i32; 4]>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
    let mut _71: !;                      // in scope 0 at ui/stdlib-unit-tests/seq-compare.rs:8:5: 8:48
    let mut _72: bool;                   // in scope 0 at ui/stdlib-unit-tests/seq-compare.rs:9:5: 9:51
    let mut _73: bool;                   // in scope 0 at ui/stdlib-unit-tests/seq-compare.rs:9:13: 9:50
    let mut _74: &std::vec::Vec<i32>;    // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:50:36: 53:10
    let _75: std::vec::Vec<i32>;         // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:50:36: 53:10
    let mut _76: std::boxed::Box<[i32]>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
    let mut _77: std::boxed::Box<[i32; 4]>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
    let mut _78: usize;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
    let mut _79: usize;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
    let mut _80: *mut u8;                // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
    let mut _81: std::boxed::Box<[i32; 4]>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
    let mut _82: &std::vec::Vec<i32>;    // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:50:36: 53:10
    let _83: std::vec::Vec<i32>;         // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:50:36: 53:10
    let mut _84: std::boxed::Box<[i32]>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
    let mut _85: std::boxed::Box<[i32; 4]>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
    let mut _86: usize;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
    let mut _87: usize;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
    let mut _88: *mut u8;                // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
    let mut _89: std::boxed::Box<[i32; 4]>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
    let mut _90: !;                      // in scope 0 at ui/stdlib-unit-tests/seq-compare.rs:9:5: 9:51
    let mut _91: bool;                   // in scope 0 at ui/stdlib-unit-tests/seq-compare.rs:10:5: 10:51
    let mut _92: bool;                   // in scope 0 at ui/stdlib-unit-tests/seq-compare.rs:10:13: 10:50
    let mut _93: &std::vec::Vec<i32>;    // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:50:36: 53:10
    let _94: std::vec::Vec<i32>;         // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:50:36: 53:10
    let mut _95: std::boxed::Box<[i32]>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
    let mut _96: std::boxed::Box<[i32; 4]>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
    let mut _97: usize;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
    let mut _98: usize;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
    let mut _99: *mut u8;                // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
    let mut _100: std::boxed::Box<[i32; 4]>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
    let mut _101: &std::vec::Vec<i32>;   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:50:36: 53:10
    let _102: std::vec::Vec<i32>;        // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:50:36: 53:10
    let mut _103: std::boxed::Box<[i32]>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
    let mut _104: std::boxed::Box<[i32; 4]>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
    let mut _105: usize;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
    let mut _106: usize;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
    let mut _107: *mut u8;               // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
    let mut _108: std::boxed::Box<[i32; 4]>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
    let mut _109: !;                     // in scope 0 at ui/stdlib-unit-tests/seq-compare.rs:10:5: 10:51
    let mut _110: bool;                  // in scope 0 at ui/stdlib-unit-tests/seq-compare.rs:11:5: 11:46
    let mut _111: bool;                  // in scope 0 at ui/stdlib-unit-tests/seq-compare.rs:11:13: 11:45
    let mut _112: &std::vec::Vec<i32>;   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:50:36: 53:10
    let _113: std::vec::Vec<i32>;        // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:50:36: 53:10
    let mut _114: std::boxed::Box<[i32]>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
    let mut _115: std::boxed::Box<[i32; 3]>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
    let mut _116: usize;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
    let mut _117: usize;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
    let mut _118: *mut u8;               // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
    let mut _119: std::boxed::Box<[i32; 3]>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
    let mut _120: &std::vec::Vec<i32>;   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:50:36: 53:10
    let _121: std::vec::Vec<i32>;        // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:50:36: 53:10
    let mut _122: std::boxed::Box<[i32]>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
    let mut _123: std::boxed::Box<[i32; 3]>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
    let mut _124: usize;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
    let mut _125: usize;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
    let mut _126: *mut u8;               // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
    let mut _127: std::boxed::Box<[i32; 3]>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
    let mut _128: !;                     // in scope 0 at ui/stdlib-unit-tests/seq-compare.rs:11:5: 11:46
    let mut _129: bool;                  // in scope 0 at ui/stdlib-unit-tests/seq-compare.rs:12:5: 12:49
    let mut _130: bool;                  // in scope 0 at ui/stdlib-unit-tests/seq-compare.rs:12:13: 12:48
    let mut _131: &std::vec::Vec<i32>;   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:50:36: 53:10
    let _132: std::vec::Vec<i32>;        // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:50:36: 53:10
    let mut _133: std::boxed::Box<[i32]>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
    let mut _134: std::boxed::Box<[i32; 3]>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
    let mut _135: usize;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
    let mut _136: usize;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
    let mut _137: *mut u8;               // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
    let mut _138: std::boxed::Box<[i32; 3]>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
    let mut _139: &std::vec::Vec<i32>;   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:50:36: 53:10
    let _140: std::vec::Vec<i32>;        // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:50:36: 53:10
    let mut _141: std::boxed::Box<[i32]>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
    let mut _142: std::boxed::Box<[i32; 4]>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
    let mut _143: usize;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
    let mut _144: usize;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
    let mut _145: *mut u8;               // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
    let mut _146: std::boxed::Box<[i32; 4]>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
    let mut _147: !;                     // in scope 0 at ui/stdlib-unit-tests/seq-compare.rs:12:5: 12:49
    let mut _148: bool;                  // in scope 0 at ui/stdlib-unit-tests/seq-compare.rs:13:5: 13:48
    let mut _149: bool;                  // in scope 0 at ui/stdlib-unit-tests/seq-compare.rs:13:13: 13:47
    let mut _150: &std::vec::Vec<i32>;   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:50:36: 53:10
    let _151: std::vec::Vec<i32>;        // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:50:36: 53:10
    let mut _152: std::boxed::Box<[i32]>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
    let mut _153: std::boxed::Box<[i32; 4]>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
    let mut _154: usize;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
    let mut _155: usize;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
    let mut _156: *mut u8;               // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
    let mut _157: std::boxed::Box<[i32; 4]>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
    let mut _158: &std::vec::Vec<i32>;   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:50:36: 53:10
    let _159: std::vec::Vec<i32>;        // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:50:36: 53:10
    let mut _160: std::boxed::Box<[i32]>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
    let mut _161: std::boxed::Box<[i32; 3]>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
    let mut _162: usize;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
    let mut _163: usize;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
    let mut _164: *mut u8;               // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
    let mut _165: std::boxed::Box<[i32; 3]>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
    let mut _166: !;                     // in scope 0 at ui/stdlib-unit-tests/seq-compare.rs:13:5: 13:48
    let mut _167: (&std::vec::Vec<i32>, &std::vec::Vec<i32>); // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _168: &std::vec::Vec<i32>;   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let _169: std::vec::Vec<i32>;        // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:50:36: 53:10
    let mut _170: std::boxed::Box<[i32]>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
    let mut _171: std::boxed::Box<[i32; 3]>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
    let mut _172: usize;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
    let mut _173: usize;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
    let mut _174: *mut u8;               // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
    let mut _175: std::boxed::Box<[i32; 3]>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
    let mut _176: &std::vec::Vec<i32>;   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let _177: std::vec::Vec<i32>;        // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:50:36: 53:10
    let mut _178: std::boxed::Box<[i32]>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
    let mut _179: std::boxed::Box<[i32; 3]>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
    let mut _180: usize;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
    let mut _181: usize;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
    let mut _182: *mut u8;               // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
    let mut _183: std::boxed::Box<[i32; 3]>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
    let _184: &std::vec::Vec<i32>;       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
    let _185: &std::vec::Vec<i32>;       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
    let mut _186: bool;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    let mut _187: bool;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
    let mut _188: &std::vec::Vec<i32>;   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
    let mut _189: &std::vec::Vec<i32>;   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
    let _191: !;                         // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
    let mut _192: core::panicking::AssertKind; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
    let mut _193: &std::vec::Vec<i32>;   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let _194: &std::vec::Vec<i32>;       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let mut _195: &std::vec::Vec<i32>;   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let _196: &std::vec::Vec<i32>;       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let mut _197: std::option::Option<std::fmt::Arguments<'_>>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
    let mut _198: bool;                  // in scope 0 at ui/stdlib-unit-tests/seq-compare.rs:15:5: 15:46
    let mut _199: bool;                  // in scope 0 at ui/stdlib-unit-tests/seq-compare.rs:15:13: 15:45
    let mut _200: &std::vec::Vec<i32>;   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:50:36: 53:10
    let _201: std::vec::Vec<i32>;        // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:50:36: 53:10
    let mut _202: std::boxed::Box<[i32]>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
    let mut _203: std::boxed::Box<[i32; 3]>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
    let mut _204: usize;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
    let mut _205: usize;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
    let mut _206: *mut u8;               // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
    let mut _207: std::boxed::Box<[i32; 3]>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
    let mut _208: &std::vec::Vec<i32>;   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:50:36: 53:10
    let _209: std::vec::Vec<i32>;        // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:50:36: 53:10
    let mut _210: std::boxed::Box<[i32]>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
    let mut _211: std::boxed::Box<[i32; 3]>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
    let mut _212: usize;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
    let mut _213: usize;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
    let mut _214: *mut u8;               // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
    let mut _215: std::boxed::Box<[i32; 3]>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
    let mut _216: !;                     // in scope 0 at ui/stdlib-unit-tests/seq-compare.rs:15:5: 15:46
    let mut _217: *const [i32; 4];       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
    let mut _218: *const [i32; 3];       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
    let mut _219: *const [i32; 3];       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
    let mut _220: *const [i32; 4];       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
    let mut _221: *const [i32; 4];       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
    let mut _222: *const [i32; 4];       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
    let mut _223: *const [i32; 4];       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
    let mut _224: *const [i32; 4];       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
    let mut _225: *const [i32; 3];       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
    let mut _226: *const [i32; 3];       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
    let mut _227: *const [i32; 3];       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
    let mut _228: *const [i32; 4];       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
    let mut _229: *const [i32; 4];       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
    let mut _230: *const [i32; 3];       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
    let mut _231: *const [i32; 3];       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
    let mut _232: *const [i32; 3];       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
    let mut _233: *const [i32; 3];       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
    let mut _234: *const [i32; 3];       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
    scope 1 {
    }
    scope 2 {
    }
    scope 3 {
    }
    scope 4 {
    }
    scope 5 {
    }
    scope 6 {
    }
    scope 7 {
    }
    scope 8 {
    }
    scope 9 {
    }
    scope 10 {
    }
    scope 11 {
    }
    scope 12 {
    }
    scope 13 {
    }
    scope 14 {
    }
    scope 15 {
    }
    scope 16 {
    }
    scope 17 {
        debug left_val => _184;          // in scope 17 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        debug right_val => _185;         // in scope 17 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        let _190: core::panicking::AssertKind; // in scope 17 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
        scope 18 {
            debug kind => _190;          // in scope 18 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
        }
    }
    scope 19 {
    }
    scope 20 {
    }

    bb0: {
        _6 = const "hello";              // scope 0 at ui/stdlib-unit-tests/seq-compare.rs:4:14: 4:21
                                         // mir::Constant
                                         // + span: ui/stdlib-unit-tests/seq-compare.rs:4:14: 4:21
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _5 = _6;                         // scope 0 at ui/stdlib-unit-tests/seq-compare.rs:4:14: 4:33
        _4 = <str as ToString>::to_string(move _5) -> bb1; // scope 0 at ui/stdlib-unit-tests/seq-compare.rs:4:14: 4:33
                                         // mir::Constant
                                         // + span: ui/stdlib-unit-tests/seq-compare.rs:4:22: 4:31
                                         // + literal: Const { ty: for<'a> fn(&'a str) -> String {<str as ToString>::to_string}, val: Value(<ZST>) }
    }

    bb1: {
        _3 = &_4;                        // scope 0 at ui/stdlib-unit-tests/seq-compare.rs:4:14: 4:33
        _10 = const "hellr";             // scope 0 at ui/stdlib-unit-tests/seq-compare.rs:4:36: 4:43
                                         // mir::Constant
                                         // + span: ui/stdlib-unit-tests/seq-compare.rs:4:36: 4:43
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _9 = _10;                        // scope 0 at ui/stdlib-unit-tests/seq-compare.rs:4:36: 4:55
        _8 = <str as ToString>::to_string(move _9) -> [return: bb2, unwind: bb126]; // scope 0 at ui/stdlib-unit-tests/seq-compare.rs:4:36: 4:55
                                         // mir::Constant
                                         // + span: ui/stdlib-unit-tests/seq-compare.rs:4:44: 4:53
                                         // + literal: Const { ty: for<'a> fn(&'a str) -> String {<str as ToString>::to_string}, val: Value(<ZST>) }
    }

    bb2: {
        _7 = &_8;                        // scope 0 at ui/stdlib-unit-tests/seq-compare.rs:4:36: 4:55
        _2 = <String as PartialOrd>::lt(move _3, move _7) -> [return: bb3, unwind: bb125]; // scope 0 at ui/stdlib-unit-tests/seq-compare.rs:4:13: 4:56
                                         // mir::Constant
                                         // + span: ui/stdlib-unit-tests/seq-compare.rs:4:13: 4:56
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a String, &'b String) -> bool {<String as PartialOrd>::lt}, val: Value(<ZST>) }
    }

    bb3: {
        _1 = Not(move _2);               // scope 0 at ui/stdlib-unit-tests/seq-compare.rs:4:5: 4:57
        drop(_8) -> [return: bb4, unwind: bb126]; // scope 0 at ui/stdlib-unit-tests/seq-compare.rs:4:56: 4:57
    }

    bb4: {
        drop(_4) -> bb5;                 // scope 0 at ui/stdlib-unit-tests/seq-compare.rs:4:56: 4:57
    }

    bb5: {
        switchInt(move _1) -> [0: bb7, otherwise: bb6]; // scope 0 at ui/stdlib-unit-tests/seq-compare.rs:4:5: 4:57
    }

    bb6: {
        _11 = core::panicking::panic(const "assertion failed: (\\\"hello\\\".to_string() < \\\"hellr\\\".to_string())"); // scope 0 at ui/stdlib-unit-tests/seq-compare.rs:4:5: 4:57
                                         // mir::Constant
                                         // + span: ui/stdlib-unit-tests/seq-compare.rs:4:5: 4:57
                                         // + literal: Const { ty: fn(&'static str) -> ! {core::panicking::panic}, val: Value(<ZST>) }
                                         // mir::Constant
                                         // + span: no-location
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
    }

    bb7: {
        _17 = const "hello ";            // scope 0 at ui/stdlib-unit-tests/seq-compare.rs:5:14: 5:22
                                         // mir::Constant
                                         // + span: ui/stdlib-unit-tests/seq-compare.rs:5:14: 5:22
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _16 = _17;                       // scope 0 at ui/stdlib-unit-tests/seq-compare.rs:5:14: 5:34
        _15 = <str as ToString>::to_string(move _16) -> bb8; // scope 0 at ui/stdlib-unit-tests/seq-compare.rs:5:14: 5:34
                                         // mir::Constant
                                         // + span: ui/stdlib-unit-tests/seq-compare.rs:5:23: 5:32
                                         // + literal: Const { ty: for<'a> fn(&'a str) -> String {<str as ToString>::to_string}, val: Value(<ZST>) }
    }

    bb8: {
        _14 = &_15;                      // scope 0 at ui/stdlib-unit-tests/seq-compare.rs:5:14: 5:34
        _21 = const "hello";             // scope 0 at ui/stdlib-unit-tests/seq-compare.rs:5:37: 5:44
                                         // mir::Constant
                                         // + span: ui/stdlib-unit-tests/seq-compare.rs:5:37: 5:44
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _20 = _21;                       // scope 0 at ui/stdlib-unit-tests/seq-compare.rs:5:37: 5:56
        _19 = <str as ToString>::to_string(move _20) -> [return: bb9, unwind: bb124]; // scope 0 at ui/stdlib-unit-tests/seq-compare.rs:5:37: 5:56
                                         // mir::Constant
                                         // + span: ui/stdlib-unit-tests/seq-compare.rs:5:45: 5:54
                                         // + literal: Const { ty: for<'a> fn(&'a str) -> String {<str as ToString>::to_string}, val: Value(<ZST>) }
    }

    bb9: {
        _18 = &_19;                      // scope 0 at ui/stdlib-unit-tests/seq-compare.rs:5:37: 5:56
        _13 = <String as PartialOrd>::gt(move _14, move _18) -> [return: bb10, unwind: bb123]; // scope 0 at ui/stdlib-unit-tests/seq-compare.rs:5:13: 5:57
                                         // mir::Constant
                                         // + span: ui/stdlib-unit-tests/seq-compare.rs:5:13: 5:57
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a String, &'b String) -> bool {<String as PartialOrd>::gt}, val: Value(<ZST>) }
    }

    bb10: {
        _12 = Not(move _13);             // scope 0 at ui/stdlib-unit-tests/seq-compare.rs:5:5: 5:58
        drop(_19) -> [return: bb11, unwind: bb124]; // scope 0 at ui/stdlib-unit-tests/seq-compare.rs:5:57: 5:58
    }

    bb11: {
        drop(_15) -> bb12;               // scope 0 at ui/stdlib-unit-tests/seq-compare.rs:5:57: 5:58
    }

    bb12: {
        switchInt(move _12) -> [0: bb14, otherwise: bb13]; // scope 0 at ui/stdlib-unit-tests/seq-compare.rs:5:5: 5:58
    }

    bb13: {
        _22 = core::panicking::panic(const "assertion failed: (\\\"hello \\\".to_string() > \\\"hello\\\".to_string())"); // scope 0 at ui/stdlib-unit-tests/seq-compare.rs:5:5: 5:58
                                         // mir::Constant
                                         // + span: ui/stdlib-unit-tests/seq-compare.rs:5:5: 5:58
                                         // + literal: Const { ty: fn(&'static str) -> ! {core::panicking::panic}, val: Value(<ZST>) }
                                         // mir::Constant
                                         // + span: no-location
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
    }

    bb14: {
        _28 = const "hello";             // scope 0 at ui/stdlib-unit-tests/seq-compare.rs:6:14: 6:21
                                         // mir::Constant
                                         // + span: ui/stdlib-unit-tests/seq-compare.rs:6:14: 6:21
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _27 = _28;                       // scope 0 at ui/stdlib-unit-tests/seq-compare.rs:6:14: 6:33
        _26 = <str as ToString>::to_string(move _27) -> bb15; // scope 0 at ui/stdlib-unit-tests/seq-compare.rs:6:14: 6:33
                                         // mir::Constant
                                         // + span: ui/stdlib-unit-tests/seq-compare.rs:6:22: 6:31
                                         // + literal: Const { ty: for<'a> fn(&'a str) -> String {<str as ToString>::to_string}, val: Value(<ZST>) }
    }

    bb15: {
        _25 = &_26;                      // scope 0 at ui/stdlib-unit-tests/seq-compare.rs:6:14: 6:33
        _32 = const "there";             // scope 0 at ui/stdlib-unit-tests/seq-compare.rs:6:37: 6:44
                                         // mir::Constant
                                         // + span: ui/stdlib-unit-tests/seq-compare.rs:6:37: 6:44
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _31 = _32;                       // scope 0 at ui/stdlib-unit-tests/seq-compare.rs:6:37: 6:56
        _30 = <str as ToString>::to_string(move _31) -> [return: bb16, unwind: bb122]; // scope 0 at ui/stdlib-unit-tests/seq-compare.rs:6:37: 6:56
                                         // mir::Constant
                                         // + span: ui/stdlib-unit-tests/seq-compare.rs:6:45: 6:54
                                         // + literal: Const { ty: for<'a> fn(&'a str) -> String {<str as ToString>::to_string}, val: Value(<ZST>) }
    }

    bb16: {
        _29 = &_30;                      // scope 0 at ui/stdlib-unit-tests/seq-compare.rs:6:37: 6:56
        _24 = <String as PartialEq>::ne(move _25, move _29) -> [return: bb17, unwind: bb121]; // scope 0 at ui/stdlib-unit-tests/seq-compare.rs:6:13: 6:57
                                         // mir::Constant
                                         // + span: ui/stdlib-unit-tests/seq-compare.rs:6:13: 6:57
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a String, &'b String) -> bool {<String as PartialEq>::ne}, val: Value(<ZST>) }
    }

    bb17: {
        _23 = Not(move _24);             // scope 0 at ui/stdlib-unit-tests/seq-compare.rs:6:5: 6:58
        drop(_30) -> [return: bb18, unwind: bb122]; // scope 0 at ui/stdlib-unit-tests/seq-compare.rs:6:57: 6:58
    }

    bb18: {
        drop(_26) -> bb19;               // scope 0 at ui/stdlib-unit-tests/seq-compare.rs:6:57: 6:58
    }

    bb19: {
        switchInt(move _23) -> [0: bb21, otherwise: bb20]; // scope 0 at ui/stdlib-unit-tests/seq-compare.rs:6:5: 6:58
    }

    bb20: {
        _33 = core::panicking::panic(const "assertion failed: (\\\"hello\\\".to_string() != \\\"there\\\".to_string())"); // scope 0 at ui/stdlib-unit-tests/seq-compare.rs:6:5: 6:58
                                         // mir::Constant
                                         // + span: ui/stdlib-unit-tests/seq-compare.rs:6:5: 6:58
                                         // + literal: Const { ty: fn(&'static str) -> ! {core::panicking::panic}, val: Value(<ZST>) }
                                         // mir::Constant
                                         // + span: no-location
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
    }

    bb21: {
        _40 = const 16_usize;            // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
        _41 = const 4_usize;             // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
        _42 = alloc::alloc::exchange_malloc(move _40, move _41) -> bb22; // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
                                         // + literal: Const { ty: unsafe fn(usize, usize) -> *mut u8 {alloc::alloc::exchange_malloc}, val: Value(<ZST>) }
    }

    bb22: {
        _43 = ShallowInitBox(move _42, [i32; 4]); // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
        _217 = (((_43.0: std::ptr::Unique<[i32; 4]>).0: std::ptr::NonNull<[i32; 4]>).0: *const [i32; 4]); // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:37: 52:46
        (*_217) = [const 1_i32, const 2_i32, const 3_i32, const 4_i32]; // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:37: 52:46
        _39 = move _43;                  // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
        _38 = move _39 as std::boxed::Box<[i32]> (Pointer(Unsize)); // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
        _37 = slice::<impl [i32]>::into_vec::<std::alloc::Global>(move _38) -> bb23; // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:50:36: 53:10
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:50:36: 50:51
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: fn(Box<[i32]>) -> Vec<i32> {slice::<impl [i32]>::into_vec::<std::alloc::Global>}, val: Value(<ZST>) }
    }

    bb23: {
        _36 = &_37;                      // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:50:36: 53:10
        _48 = const 12_usize;            // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
        _49 = const 4_usize;             // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
        _50 = alloc::alloc::exchange_malloc(move _48, move _49) -> [return: bb24, unwind: bb120]; // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
                                         // + literal: Const { ty: unsafe fn(usize, usize) -> *mut u8 {alloc::alloc::exchange_malloc}, val: Value(<ZST>) }
    }

    bb24: {
        _51 = ShallowInitBox(move _50, [i32; 3]); // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
        _218 = (((_51.0: std::ptr::Unique<[i32; 3]>).0: std::ptr::NonNull<[i32; 3]>).0: *const [i32; 3]); // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:37: 52:46
        (*_218) = [const 1_i32, const 2_i32, const 3_i32]; // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:37: 52:46
        _47 = move _51;                  // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
        _46 = move _47 as std::boxed::Box<[i32]> (Pointer(Unsize)); // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
        _45 = slice::<impl [i32]>::into_vec::<std::alloc::Global>(move _46) -> [return: bb25, unwind: bb120]; // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:50:36: 53:10
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:50:36: 50:51
                                         // + user_ty: UserType(1)
                                         // + literal: Const { ty: fn(Box<[i32]>) -> Vec<i32> {slice::<impl [i32]>::into_vec::<std::alloc::Global>}, val: Value(<ZST>) }
    }

    bb25: {
        _44 = &_45;                      // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:50:36: 53:10
        _35 = <Vec<i32> as PartialOrd>::gt(move _36, move _44) -> [return: bb26, unwind: bb119]; // scope 0 at ui/stdlib-unit-tests/seq-compare.rs:7:13: 7:47
                                         // mir::Constant
                                         // + span: ui/stdlib-unit-tests/seq-compare.rs:7:13: 7:47
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a Vec<i32>, &'b Vec<i32>) -> bool {<Vec<i32> as PartialOrd>::gt}, val: Value(<ZST>) }
    }

    bb26: {
        _34 = Not(move _35);             // scope 0 at ui/stdlib-unit-tests/seq-compare.rs:7:5: 7:48
        drop(_45) -> [return: bb27, unwind: bb120]; // scope 0 at ui/stdlib-unit-tests/seq-compare.rs:7:47: 7:48
    }

    bb27: {
        drop(_37) -> bb28;               // scope 0 at ui/stdlib-unit-tests/seq-compare.rs:7:47: 7:48
    }

    bb28: {
        switchInt(move _34) -> [0: bb30, otherwise: bb29]; // scope 0 at ui/stdlib-unit-tests/seq-compare.rs:7:5: 7:48
    }

    bb29: {
        _52 = core::panicking::panic(const "assertion failed: (vec![1, 2, 3, 4] > vec![1, 2, 3])"); // scope 0 at ui/stdlib-unit-tests/seq-compare.rs:7:5: 7:48
                                         // mir::Constant
                                         // + span: ui/stdlib-unit-tests/seq-compare.rs:7:5: 7:48
                                         // + literal: Const { ty: fn(&'static str) -> ! {core::panicking::panic}, val: Value(<ZST>) }
                                         // mir::Constant
                                         // + span: no-location
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
    }

    bb30: {
        _59 = const 12_usize;            // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
        _60 = const 4_usize;             // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
        _61 = alloc::alloc::exchange_malloc(move _59, move _60) -> bb31; // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
                                         // + literal: Const { ty: unsafe fn(usize, usize) -> *mut u8 {alloc::alloc::exchange_malloc}, val: Value(<ZST>) }
    }

    bb31: {
        _62 = ShallowInitBox(move _61, [i32; 3]); // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
        _219 = (((_62.0: std::ptr::Unique<[i32; 3]>).0: std::ptr::NonNull<[i32; 3]>).0: *const [i32; 3]); // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:37: 52:46
        (*_219) = [const 1_i32, const 2_i32, const 3_i32]; // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:37: 52:46
        _58 = move _62;                  // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
        _57 = move _58 as std::boxed::Box<[i32]> (Pointer(Unsize)); // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
        _56 = slice::<impl [i32]>::into_vec::<std::alloc::Global>(move _57) -> bb32; // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:50:36: 53:10
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:50:36: 50:51
                                         // + user_ty: UserType(2)
                                         // + literal: Const { ty: fn(Box<[i32]>) -> Vec<i32> {slice::<impl [i32]>::into_vec::<std::alloc::Global>}, val: Value(<ZST>) }
    }

    bb32: {
        _55 = &_56;                      // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:50:36: 53:10
        _67 = const 16_usize;            // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
        _68 = const 4_usize;             // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
        _69 = alloc::alloc::exchange_malloc(move _67, move _68) -> [return: bb33, unwind: bb118]; // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
                                         // + literal: Const { ty: unsafe fn(usize, usize) -> *mut u8 {alloc::alloc::exchange_malloc}, val: Value(<ZST>) }
    }

    bb33: {
        _70 = ShallowInitBox(move _69, [i32; 4]); // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
        _220 = (((_70.0: std::ptr::Unique<[i32; 4]>).0: std::ptr::NonNull<[i32; 4]>).0: *const [i32; 4]); // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:37: 52:46
        (*_220) = [const 1_i32, const 2_i32, const 3_i32, const 4_i32]; // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:37: 52:46
        _66 = move _70;                  // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
        _65 = move _66 as std::boxed::Box<[i32]> (Pointer(Unsize)); // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
        _64 = slice::<impl [i32]>::into_vec::<std::alloc::Global>(move _65) -> [return: bb34, unwind: bb118]; // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:50:36: 53:10
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:50:36: 50:51
                                         // + user_ty: UserType(3)
                                         // + literal: Const { ty: fn(Box<[i32]>) -> Vec<i32> {slice::<impl [i32]>::into_vec::<std::alloc::Global>}, val: Value(<ZST>) }
    }

    bb34: {
        _63 = &_64;                      // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:50:36: 53:10
        _54 = <Vec<i32> as PartialOrd>::lt(move _55, move _63) -> [return: bb35, unwind: bb117]; // scope 0 at ui/stdlib-unit-tests/seq-compare.rs:8:13: 8:47
                                         // mir::Constant
                                         // + span: ui/stdlib-unit-tests/seq-compare.rs:8:13: 8:47
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a Vec<i32>, &'b Vec<i32>) -> bool {<Vec<i32> as PartialOrd>::lt}, val: Value(<ZST>) }
    }

    bb35: {
        _53 = Not(move _54);             // scope 0 at ui/stdlib-unit-tests/seq-compare.rs:8:5: 8:48
        drop(_64) -> [return: bb36, unwind: bb118]; // scope 0 at ui/stdlib-unit-tests/seq-compare.rs:8:47: 8:48
    }

    bb36: {
        drop(_56) -> bb37;               // scope 0 at ui/stdlib-unit-tests/seq-compare.rs:8:47: 8:48
    }

    bb37: {
        switchInt(move _53) -> [0: bb39, otherwise: bb38]; // scope 0 at ui/stdlib-unit-tests/seq-compare.rs:8:5: 8:48
    }

    bb38: {
        _71 = core::panicking::panic(const "assertion failed: (vec![1, 2, 3] < vec![1, 2, 3, 4])"); // scope 0 at ui/stdlib-unit-tests/seq-compare.rs:8:5: 8:48
                                         // mir::Constant
                                         // + span: ui/stdlib-unit-tests/seq-compare.rs:8:5: 8:48
                                         // + literal: Const { ty: fn(&'static str) -> ! {core::panicking::panic}, val: Value(<ZST>) }
                                         // mir::Constant
                                         // + span: no-location
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
    }

    bb39: {
        _78 = const 16_usize;            // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
        _79 = const 4_usize;             // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
        _80 = alloc::alloc::exchange_malloc(move _78, move _79) -> bb40; // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
                                         // + literal: Const { ty: unsafe fn(usize, usize) -> *mut u8 {alloc::alloc::exchange_malloc}, val: Value(<ZST>) }
    }

    bb40: {
        _81 = ShallowInitBox(move _80, [i32; 4]); // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
        _221 = (((_81.0: std::ptr::Unique<[i32; 4]>).0: std::ptr::NonNull<[i32; 4]>).0: *const [i32; 4]); // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:37: 52:46
        (*_221) = [const 1_i32, const 2_i32, const 4_i32, const 4_i32]; // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:37: 52:46
        _77 = move _81;                  // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
        _76 = move _77 as std::boxed::Box<[i32]> (Pointer(Unsize)); // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
        _75 = slice::<impl [i32]>::into_vec::<std::alloc::Global>(move _76) -> bb41; // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:50:36: 53:10
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:50:36: 50:51
                                         // + user_ty: UserType(4)
                                         // + literal: Const { ty: fn(Box<[i32]>) -> Vec<i32> {slice::<impl [i32]>::into_vec::<std::alloc::Global>}, val: Value(<ZST>) }
    }

    bb41: {
        _74 = &_75;                      // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:50:36: 53:10
        _86 = const 16_usize;            // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
        _87 = const 4_usize;             // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
        _88 = alloc::alloc::exchange_malloc(move _86, move _87) -> [return: bb42, unwind: bb116]; // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
                                         // + literal: Const { ty: unsafe fn(usize, usize) -> *mut u8 {alloc::alloc::exchange_malloc}, val: Value(<ZST>) }
    }

    bb42: {
        _89 = ShallowInitBox(move _88, [i32; 4]); // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
        _222 = (((_89.0: std::ptr::Unique<[i32; 4]>).0: std::ptr::NonNull<[i32; 4]>).0: *const [i32; 4]); // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:37: 52:46
        (*_222) = [const 1_i32, const 2_i32, const 3_i32, const 4_i32]; // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:37: 52:46
        _85 = move _89;                  // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
        _84 = move _85 as std::boxed::Box<[i32]> (Pointer(Unsize)); // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
        _83 = slice::<impl [i32]>::into_vec::<std::alloc::Global>(move _84) -> [return: bb43, unwind: bb116]; // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:50:36: 53:10
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:50:36: 50:51
                                         // + user_ty: UserType(5)
                                         // + literal: Const { ty: fn(Box<[i32]>) -> Vec<i32> {slice::<impl [i32]>::into_vec::<std::alloc::Global>}, val: Value(<ZST>) }
    }

    bb43: {
        _82 = &_83;                      // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:50:36: 53:10
        _73 = <Vec<i32> as PartialOrd>::gt(move _74, move _82) -> [return: bb44, unwind: bb115]; // scope 0 at ui/stdlib-unit-tests/seq-compare.rs:9:13: 9:50
                                         // mir::Constant
                                         // + span: ui/stdlib-unit-tests/seq-compare.rs:9:13: 9:50
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a Vec<i32>, &'b Vec<i32>) -> bool {<Vec<i32> as PartialOrd>::gt}, val: Value(<ZST>) }
    }

    bb44: {
        _72 = Not(move _73);             // scope 0 at ui/stdlib-unit-tests/seq-compare.rs:9:5: 9:51
        drop(_83) -> [return: bb45, unwind: bb116]; // scope 0 at ui/stdlib-unit-tests/seq-compare.rs:9:50: 9:51
    }

    bb45: {
        drop(_75) -> bb46;               // scope 0 at ui/stdlib-unit-tests/seq-compare.rs:9:50: 9:51
    }

    bb46: {
        switchInt(move _72) -> [0: bb48, otherwise: bb47]; // scope 0 at ui/stdlib-unit-tests/seq-compare.rs:9:5: 9:51
    }

    bb47: {
        _90 = core::panicking::panic(const "assertion failed: (vec![1, 2, 4, 4] > vec![1, 2, 3, 4])"); // scope 0 at ui/stdlib-unit-tests/seq-compare.rs:9:5: 9:51
                                         // mir::Constant
                                         // + span: ui/stdlib-unit-tests/seq-compare.rs:9:5: 9:51
                                         // + literal: Const { ty: fn(&'static str) -> ! {core::panicking::panic}, val: Value(<ZST>) }
                                         // mir::Constant
                                         // + span: no-location
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
    }

    bb48: {
        _97 = const 16_usize;            // scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
        _98 = const 4_usize;             // scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
        _99 = alloc::alloc::exchange_malloc(move _97, move _98) -> bb49; // scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
                                         // + literal: Const { ty: unsafe fn(usize, usize) -> *mut u8 {alloc::alloc::exchange_malloc}, val: Value(<ZST>) }
    }

    bb49: {
        _100 = ShallowInitBox(move _99, [i32; 4]); // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
        _223 = (((_100.0: std::ptr::Unique<[i32; 4]>).0: std::ptr::NonNull<[i32; 4]>).0: *const [i32; 4]); // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:37: 52:46
        (*_223) = [const 1_i32, const 2_i32, const 3_i32, const 4_i32]; // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:37: 52:46
        _96 = move _100;                 // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
        _95 = move _96 as std::boxed::Box<[i32]> (Pointer(Unsize)); // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
        _94 = slice::<impl [i32]>::into_vec::<std::alloc::Global>(move _95) -> bb50; // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:50:36: 53:10
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:50:36: 50:51
                                         // + user_ty: UserType(6)
                                         // + literal: Const { ty: fn(Box<[i32]>) -> Vec<i32> {slice::<impl [i32]>::into_vec::<std::alloc::Global>}, val: Value(<ZST>) }
    }

    bb50: {
        _93 = &_94;                      // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:50:36: 53:10
        _105 = const 16_usize;           // scope 8 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
        _106 = const 4_usize;            // scope 8 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
        _107 = alloc::alloc::exchange_malloc(move _105, move _106) -> [return: bb51, unwind: bb114]; // scope 8 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
                                         // + literal: Const { ty: unsafe fn(usize, usize) -> *mut u8 {alloc::alloc::exchange_malloc}, val: Value(<ZST>) }
    }

    bb51: {
        _108 = ShallowInitBox(move _107, [i32; 4]); // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
        _224 = (((_108.0: std::ptr::Unique<[i32; 4]>).0: std::ptr::NonNull<[i32; 4]>).0: *const [i32; 4]); // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:37: 52:46
        (*_224) = [const 1_i32, const 2_i32, const 4_i32, const 4_i32]; // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:37: 52:46
        _104 = move _108;                // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
        _103 = move _104 as std::boxed::Box<[i32]> (Pointer(Unsize)); // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
        _102 = slice::<impl [i32]>::into_vec::<std::alloc::Global>(move _103) -> [return: bb52, unwind: bb114]; // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:50:36: 53:10
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:50:36: 50:51
                                         // + user_ty: UserType(7)
                                         // + literal: Const { ty: fn(Box<[i32]>) -> Vec<i32> {slice::<impl [i32]>::into_vec::<std::alloc::Global>}, val: Value(<ZST>) }
    }

    bb52: {
        _101 = &_102;                    // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:50:36: 53:10
        _92 = <Vec<i32> as PartialOrd>::lt(move _93, move _101) -> [return: bb53, unwind: bb113]; // scope 0 at ui/stdlib-unit-tests/seq-compare.rs:10:13: 10:50
                                         // mir::Constant
                                         // + span: ui/stdlib-unit-tests/seq-compare.rs:10:13: 10:50
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a Vec<i32>, &'b Vec<i32>) -> bool {<Vec<i32> as PartialOrd>::lt}, val: Value(<ZST>) }
    }

    bb53: {
        _91 = Not(move _92);             // scope 0 at ui/stdlib-unit-tests/seq-compare.rs:10:5: 10:51
        drop(_102) -> [return: bb54, unwind: bb114]; // scope 0 at ui/stdlib-unit-tests/seq-compare.rs:10:50: 10:51
    }

    bb54: {
        drop(_94) -> bb55;               // scope 0 at ui/stdlib-unit-tests/seq-compare.rs:10:50: 10:51
    }

    bb55: {
        switchInt(move _91) -> [0: bb57, otherwise: bb56]; // scope 0 at ui/stdlib-unit-tests/seq-compare.rs:10:5: 10:51
    }

    bb56: {
        _109 = core::panicking::panic(const "assertion failed: (vec![1, 2, 3, 4] < vec![1, 2, 4, 4])"); // scope 0 at ui/stdlib-unit-tests/seq-compare.rs:10:5: 10:51
                                         // mir::Constant
                                         // + span: ui/stdlib-unit-tests/seq-compare.rs:10:5: 10:51
                                         // + literal: Const { ty: fn(&'static str) -> ! {core::panicking::panic}, val: Value(<ZST>) }
                                         // mir::Constant
                                         // + span: no-location
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
    }

    bb57: {
        _116 = const 12_usize;           // scope 9 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
        _117 = const 4_usize;            // scope 9 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
        _118 = alloc::alloc::exchange_malloc(move _116, move _117) -> bb58; // scope 9 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
                                         // + literal: Const { ty: unsafe fn(usize, usize) -> *mut u8 {alloc::alloc::exchange_malloc}, val: Value(<ZST>) }
    }

    bb58: {
        _119 = ShallowInitBox(move _118, [i32; 3]); // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
        _225 = (((_119.0: std::ptr::Unique<[i32; 3]>).0: std::ptr::NonNull<[i32; 3]>).0: *const [i32; 3]); // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:37: 52:46
        (*_225) = [const 1_i32, const 2_i32, const 3_i32]; // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:37: 52:46
        _115 = move _119;                // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
        _114 = move _115 as std::boxed::Box<[i32]> (Pointer(Unsize)); // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
        _113 = slice::<impl [i32]>::into_vec::<std::alloc::Global>(move _114) -> bb59; // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:50:36: 53:10
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:50:36: 50:51
                                         // + user_ty: UserType(8)
                                         // + literal: Const { ty: fn(Box<[i32]>) -> Vec<i32> {slice::<impl [i32]>::into_vec::<std::alloc::Global>}, val: Value(<ZST>) }
    }

    bb59: {
        _112 = &_113;                    // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:50:36: 53:10
        _124 = const 12_usize;           // scope 10 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
        _125 = const 4_usize;            // scope 10 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
        _126 = alloc::alloc::exchange_malloc(move _124, move _125) -> [return: bb60, unwind: bb112]; // scope 10 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
                                         // + literal: Const { ty: unsafe fn(usize, usize) -> *mut u8 {alloc::alloc::exchange_malloc}, val: Value(<ZST>) }
    }

    bb60: {
        _127 = ShallowInitBox(move _126, [i32; 3]); // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
        _226 = (((_127.0: std::ptr::Unique<[i32; 3]>).0: std::ptr::NonNull<[i32; 3]>).0: *const [i32; 3]); // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:37: 52:46
        (*_226) = [const 1_i32, const 2_i32, const 3_i32]; // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:37: 52:46
        _123 = move _127;                // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
        _122 = move _123 as std::boxed::Box<[i32]> (Pointer(Unsize)); // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
        _121 = slice::<impl [i32]>::into_vec::<std::alloc::Global>(move _122) -> [return: bb61, unwind: bb112]; // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:50:36: 53:10
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:50:36: 50:51
                                         // + user_ty: UserType(9)
                                         // + literal: Const { ty: fn(Box<[i32]>) -> Vec<i32> {slice::<impl [i32]>::into_vec::<std::alloc::Global>}, val: Value(<ZST>) }
    }

    bb61: {
        _120 = &_121;                    // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:50:36: 53:10
        _111 = <Vec<i32> as PartialOrd>::le(move _112, move _120) -> [return: bb62, unwind: bb111]; // scope 0 at ui/stdlib-unit-tests/seq-compare.rs:11:13: 11:45
                                         // mir::Constant
                                         // + span: ui/stdlib-unit-tests/seq-compare.rs:11:13: 11:45
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a Vec<i32>, &'b Vec<i32>) -> bool {<Vec<i32> as PartialOrd>::le}, val: Value(<ZST>) }
    }

    bb62: {
        _110 = Not(move _111);           // scope 0 at ui/stdlib-unit-tests/seq-compare.rs:11:5: 11:46
        drop(_121) -> [return: bb63, unwind: bb112]; // scope 0 at ui/stdlib-unit-tests/seq-compare.rs:11:45: 11:46
    }

    bb63: {
        drop(_113) -> bb64;              // scope 0 at ui/stdlib-unit-tests/seq-compare.rs:11:45: 11:46
    }

    bb64: {
        switchInt(move _110) -> [0: bb66, otherwise: bb65]; // scope 0 at ui/stdlib-unit-tests/seq-compare.rs:11:5: 11:46
    }

    bb65: {
        _128 = core::panicking::panic(const "assertion failed: (vec![1, 2, 3] <= vec![1, 2, 3])"); // scope 0 at ui/stdlib-unit-tests/seq-compare.rs:11:5: 11:46
                                         // mir::Constant
                                         // + span: ui/stdlib-unit-tests/seq-compare.rs:11:5: 11:46
                                         // + literal: Const { ty: fn(&'static str) -> ! {core::panicking::panic}, val: Value(<ZST>) }
                                         // mir::Constant
                                         // + span: no-location
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
    }

    bb66: {
        _135 = const 12_usize;           // scope 11 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
        _136 = const 4_usize;            // scope 11 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
        _137 = alloc::alloc::exchange_malloc(move _135, move _136) -> bb67; // scope 11 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
                                         // + literal: Const { ty: unsafe fn(usize, usize) -> *mut u8 {alloc::alloc::exchange_malloc}, val: Value(<ZST>) }
    }

    bb67: {
        _138 = ShallowInitBox(move _137, [i32; 3]); // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
        _227 = (((_138.0: std::ptr::Unique<[i32; 3]>).0: std::ptr::NonNull<[i32; 3]>).0: *const [i32; 3]); // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:37: 52:46
        (*_227) = [const 1_i32, const 2_i32, const 3_i32]; // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:37: 52:46
        _134 = move _138;                // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
        _133 = move _134 as std::boxed::Box<[i32]> (Pointer(Unsize)); // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
        _132 = slice::<impl [i32]>::into_vec::<std::alloc::Global>(move _133) -> bb68; // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:50:36: 53:10
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:50:36: 50:51
                                         // + user_ty: UserType(10)
                                         // + literal: Const { ty: fn(Box<[i32]>) -> Vec<i32> {slice::<impl [i32]>::into_vec::<std::alloc::Global>}, val: Value(<ZST>) }
    }

    bb68: {
        _131 = &_132;                    // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:50:36: 53:10
        _143 = const 16_usize;           // scope 12 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
        _144 = const 4_usize;            // scope 12 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
        _145 = alloc::alloc::exchange_malloc(move _143, move _144) -> [return: bb69, unwind: bb110]; // scope 12 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
                                         // + literal: Const { ty: unsafe fn(usize, usize) -> *mut u8 {alloc::alloc::exchange_malloc}, val: Value(<ZST>) }
    }

    bb69: {
        _146 = ShallowInitBox(move _145, [i32; 4]); // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
        _228 = (((_146.0: std::ptr::Unique<[i32; 4]>).0: std::ptr::NonNull<[i32; 4]>).0: *const [i32; 4]); // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:37: 52:46
        (*_228) = [const 1_i32, const 2_i32, const 3_i32, const 3_i32]; // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:37: 52:46
        _142 = move _146;                // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
        _141 = move _142 as std::boxed::Box<[i32]> (Pointer(Unsize)); // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
        _140 = slice::<impl [i32]>::into_vec::<std::alloc::Global>(move _141) -> [return: bb70, unwind: bb110]; // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:50:36: 53:10
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:50:36: 50:51
                                         // + user_ty: UserType(11)
                                         // + literal: Const { ty: fn(Box<[i32]>) -> Vec<i32> {slice::<impl [i32]>::into_vec::<std::alloc::Global>}, val: Value(<ZST>) }
    }

    bb70: {
        _139 = &_140;                    // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:50:36: 53:10
        _130 = <Vec<i32> as PartialOrd>::le(move _131, move _139) -> [return: bb71, unwind: bb109]; // scope 0 at ui/stdlib-unit-tests/seq-compare.rs:12:13: 12:48
                                         // mir::Constant
                                         // + span: ui/stdlib-unit-tests/seq-compare.rs:12:13: 12:48
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a Vec<i32>, &'b Vec<i32>) -> bool {<Vec<i32> as PartialOrd>::le}, val: Value(<ZST>) }
    }

    bb71: {
        _129 = Not(move _130);           // scope 0 at ui/stdlib-unit-tests/seq-compare.rs:12:5: 12:49
        drop(_140) -> [return: bb72, unwind: bb110]; // scope 0 at ui/stdlib-unit-tests/seq-compare.rs:12:48: 12:49
    }

    bb72: {
        drop(_132) -> bb73;              // scope 0 at ui/stdlib-unit-tests/seq-compare.rs:12:48: 12:49
    }

    bb73: {
        switchInt(move _129) -> [0: bb75, otherwise: bb74]; // scope 0 at ui/stdlib-unit-tests/seq-compare.rs:12:5: 12:49
    }

    bb74: {
        _147 = core::panicking::panic(const "assertion failed: (vec![1, 2, 3] <= vec![1, 2, 3, 3])"); // scope 0 at ui/stdlib-unit-tests/seq-compare.rs:12:5: 12:49
                                         // mir::Constant
                                         // + span: ui/stdlib-unit-tests/seq-compare.rs:12:5: 12:49
                                         // + literal: Const { ty: fn(&'static str) -> ! {core::panicking::panic}, val: Value(<ZST>) }
                                         // mir::Constant
                                         // + span: no-location
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
    }

    bb75: {
        _154 = const 16_usize;           // scope 13 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
        _155 = const 4_usize;            // scope 13 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
        _156 = alloc::alloc::exchange_malloc(move _154, move _155) -> bb76; // scope 13 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
                                         // + literal: Const { ty: unsafe fn(usize, usize) -> *mut u8 {alloc::alloc::exchange_malloc}, val: Value(<ZST>) }
    }

    bb76: {
        _157 = ShallowInitBox(move _156, [i32; 4]); // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
        _229 = (((_157.0: std::ptr::Unique<[i32; 4]>).0: std::ptr::NonNull<[i32; 4]>).0: *const [i32; 4]); // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:37: 52:46
        (*_229) = [const 1_i32, const 2_i32, const 3_i32, const 4_i32]; // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:37: 52:46
        _153 = move _157;                // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
        _152 = move _153 as std::boxed::Box<[i32]> (Pointer(Unsize)); // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
        _151 = slice::<impl [i32]>::into_vec::<std::alloc::Global>(move _152) -> bb77; // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:50:36: 53:10
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:50:36: 50:51
                                         // + user_ty: UserType(12)
                                         // + literal: Const { ty: fn(Box<[i32]>) -> Vec<i32> {slice::<impl [i32]>::into_vec::<std::alloc::Global>}, val: Value(<ZST>) }
    }

    bb77: {
        _150 = &_151;                    // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:50:36: 53:10
        _162 = const 12_usize;           // scope 14 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
        _163 = const 4_usize;            // scope 14 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
        _164 = alloc::alloc::exchange_malloc(move _162, move _163) -> [return: bb78, unwind: bb108]; // scope 14 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
                                         // + literal: Const { ty: unsafe fn(usize, usize) -> *mut u8 {alloc::alloc::exchange_malloc}, val: Value(<ZST>) }
    }

    bb78: {
        _165 = ShallowInitBox(move _164, [i32; 3]); // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
        _230 = (((_165.0: std::ptr::Unique<[i32; 3]>).0: std::ptr::NonNull<[i32; 3]>).0: *const [i32; 3]); // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:37: 52:46
        (*_230) = [const 1_i32, const 2_i32, const 3_i32]; // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:37: 52:46
        _161 = move _165;                // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
        _160 = move _161 as std::boxed::Box<[i32]> (Pointer(Unsize)); // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
        _159 = slice::<impl [i32]>::into_vec::<std::alloc::Global>(move _160) -> [return: bb79, unwind: bb108]; // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:50:36: 53:10
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:50:36: 50:51
                                         // + user_ty: UserType(13)
                                         // + literal: Const { ty: fn(Box<[i32]>) -> Vec<i32> {slice::<impl [i32]>::into_vec::<std::alloc::Global>}, val: Value(<ZST>) }
    }

    bb79: {
        _158 = &_159;                    // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:50:36: 53:10
        _149 = <Vec<i32> as PartialOrd>::gt(move _150, move _158) -> [return: bb80, unwind: bb107]; // scope 0 at ui/stdlib-unit-tests/seq-compare.rs:13:13: 13:47
                                         // mir::Constant
                                         // + span: ui/stdlib-unit-tests/seq-compare.rs:13:13: 13:47
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a Vec<i32>, &'b Vec<i32>) -> bool {<Vec<i32> as PartialOrd>::gt}, val: Value(<ZST>) }
    }

    bb80: {
        _148 = Not(move _149);           // scope 0 at ui/stdlib-unit-tests/seq-compare.rs:13:5: 13:48
        drop(_159) -> [return: bb81, unwind: bb108]; // scope 0 at ui/stdlib-unit-tests/seq-compare.rs:13:47: 13:48
    }

    bb81: {
        drop(_151) -> bb82;              // scope 0 at ui/stdlib-unit-tests/seq-compare.rs:13:47: 13:48
    }

    bb82: {
        switchInt(move _148) -> [0: bb84, otherwise: bb83]; // scope 0 at ui/stdlib-unit-tests/seq-compare.rs:13:5: 13:48
    }

    bb83: {
        _166 = core::panicking::panic(const "assertion failed: (vec![1, 2, 3, 4] > vec![1, 2, 3])"); // scope 0 at ui/stdlib-unit-tests/seq-compare.rs:13:5: 13:48
                                         // mir::Constant
                                         // + span: ui/stdlib-unit-tests/seq-compare.rs:13:5: 13:48
                                         // + literal: Const { ty: fn(&'static str) -> ! {core::panicking::panic}, val: Value(<ZST>) }
                                         // mir::Constant
                                         // + span: no-location
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
    }

    bb84: {
        _172 = const 12_usize;           // scope 15 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
        _173 = const 4_usize;            // scope 15 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
        _174 = alloc::alloc::exchange_malloc(move _172, move _173) -> bb85; // scope 15 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
                                         // + literal: Const { ty: unsafe fn(usize, usize) -> *mut u8 {alloc::alloc::exchange_malloc}, val: Value(<ZST>) }
    }

    bb85: {
        _175 = ShallowInitBox(move _174, [i32; 3]); // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
        _231 = (((_175.0: std::ptr::Unique<[i32; 3]>).0: std::ptr::NonNull<[i32; 3]>).0: *const [i32; 3]); // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:37: 52:46
        (*_231) = [const 1_i32, const 2_i32, const 3_i32]; // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:37: 52:46
        _171 = move _175;                // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
        _170 = move _171 as std::boxed::Box<[i32]> (Pointer(Unsize)); // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
        _169 = slice::<impl [i32]>::into_vec::<std::alloc::Global>(move _170) -> bb86; // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:50:36: 53:10
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:50:36: 50:51
                                         // + user_ty: UserType(14)
                                         // + literal: Const { ty: fn(Box<[i32]>) -> Vec<i32> {slice::<impl [i32]>::into_vec::<std::alloc::Global>}, val: Value(<ZST>) }
    }

    bb86: {
        _168 = &_169;                    // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _180 = const 12_usize;           // scope 16 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
        _181 = const 4_usize;            // scope 16 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
        _182 = alloc::alloc::exchange_malloc(move _180, move _181) -> [return: bb87, unwind: bb106]; // scope 16 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
                                         // + literal: Const { ty: unsafe fn(usize, usize) -> *mut u8 {alloc::alloc::exchange_malloc}, val: Value(<ZST>) }
    }

    bb87: {
        _183 = ShallowInitBox(move _182, [i32; 3]); // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
        _232 = (((_183.0: std::ptr::Unique<[i32; 3]>).0: std::ptr::NonNull<[i32; 3]>).0: *const [i32; 3]); // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:37: 52:46
        (*_232) = [const 1_i32, const 2_i32, const 3_i32]; // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:37: 52:46
        _179 = move _183;                // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
        _178 = move _179 as std::boxed::Box<[i32]> (Pointer(Unsize)); // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
        _177 = slice::<impl [i32]>::into_vec::<std::alloc::Global>(move _178) -> [return: bb88, unwind: bb106]; // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:50:36: 53:10
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:50:36: 50:51
                                         // + user_ty: UserType(15)
                                         // + literal: Const { ty: fn(Box<[i32]>) -> Vec<i32> {slice::<impl [i32]>::into_vec::<std::alloc::Global>}, val: Value(<ZST>) }
    }

    bb88: {
        _176 = &_177;                    // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _167 = (move _168, move _176);   // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _184 = (_167.0: &std::vec::Vec<i32>); // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _185 = (_167.1: &std::vec::Vec<i32>); // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _188 = _184;                     // scope 17 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
        _189 = _185;                     // scope 17 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
        _187 = <Vec<i32> as PartialEq>::eq(move _188, move _189) -> [return: bb89, unwind: bb105]; // scope 17 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a Vec<i32>, &'b Vec<i32>) -> bool {<Vec<i32> as PartialEq>::eq}, val: Value(<ZST>) }
    }

    bb89: {
        _186 = Not(move _187);           // scope 17 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
        switchInt(move _186) -> [0: bb91, otherwise: bb90]; // scope 17 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    }

    bb90: {
        _190 = const core::panicking::AssertKind::Eq; // scope 17 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _192 = const core::panicking::AssertKind::Eq; // scope 18 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _194 = _184;                     // scope 18 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _193 = _194;                     // scope 18 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _196 = _185;                     // scope 18 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _195 = _196;                     // scope 18 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _197 = Option::<Arguments<'_>>::None; // scope 18 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
        _191 = core::panicking::assert_failed::<Vec<i32>, Vec<i32>>(move _192, move _193, move _195, move _197) -> bb105; // scope 18 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:53
                                         // + literal: Const { ty: for<'a, 'b, 'c> fn(core::panicking::AssertKind, &'a Vec<i32>, &'b Vec<i32>, Option<Arguments<'c>>) -> ! {core::panicking::assert_failed::<Vec<i32>, Vec<i32>>}, val: Value(<ZST>) }
    }

    bb91: {
        drop(_177) -> [return: bb92, unwind: bb106]; // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:48:9: 48:10
    }

    bb92: {
        drop(_169) -> bb93;              // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:48:9: 48:10
    }

    bb93: {
        _204 = const 12_usize;           // scope 19 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
        _205 = const 4_usize;            // scope 19 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
        _206 = alloc::alloc::exchange_malloc(move _204, move _205) -> bb94; // scope 19 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
                                         // + literal: Const { ty: unsafe fn(usize, usize) -> *mut u8 {alloc::alloc::exchange_malloc}, val: Value(<ZST>) }
    }

    bb94: {
        _207 = ShallowInitBox(move _206, [i32; 3]); // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
        _233 = (((_207.0: std::ptr::Unique<[i32; 3]>).0: std::ptr::NonNull<[i32; 3]>).0: *const [i32; 3]); // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:37: 52:46
        (*_233) = [const 1_i32, const 2_i32, const 3_i32]; // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:37: 52:46
        _203 = move _207;                // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
        _202 = move _203 as std::boxed::Box<[i32]> (Pointer(Unsize)); // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
        _201 = slice::<impl [i32]>::into_vec::<std::alloc::Global>(move _202) -> bb95; // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:50:36: 53:10
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:50:36: 50:51
                                         // + user_ty: UserType(16)
                                         // + literal: Const { ty: fn(Box<[i32]>) -> Vec<i32> {slice::<impl [i32]>::into_vec::<std::alloc::Global>}, val: Value(<ZST>) }
    }

    bb95: {
        _200 = &_201;                    // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:50:36: 53:10
        _212 = const 12_usize;           // scope 20 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
        _213 = const 4_usize;            // scope 20 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
        _214 = alloc::alloc::exchange_malloc(move _212, move _213) -> [return: bb96, unwind: bb104]; // scope 20 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
                                         // + literal: Const { ty: unsafe fn(usize, usize) -> *mut u8 {alloc::alloc::exchange_malloc}, val: Value(<ZST>) }
    }

    bb96: {
        _215 = ShallowInitBox(move _214, [i32; 3]); // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
        _234 = (((_215.0: std::ptr::Unique<[i32; 3]>).0: std::ptr::NonNull<[i32; 3]>).0: *const [i32; 3]); // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:37: 52:46
        (*_234) = [const 1_i32, const 1_i32, const 3_i32]; // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:37: 52:46
        _211 = move _215;                // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
        _210 = move _211 as std::boxed::Box<[i32]> (Pointer(Unsize)); // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
        _209 = slice::<impl [i32]>::into_vec::<std::alloc::Global>(move _210) -> [return: bb97, unwind: bb104]; // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:50:36: 53:10
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:50:36: 50:51
                                         // + user_ty: UserType(17)
                                         // + literal: Const { ty: fn(Box<[i32]>) -> Vec<i32> {slice::<impl [i32]>::into_vec::<std::alloc::Global>}, val: Value(<ZST>) }
    }

    bb97: {
        _208 = &_209;                    // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:50:36: 53:10
        _199 = <Vec<i32> as PartialEq>::ne(move _200, move _208) -> [return: bb98, unwind: bb103]; // scope 0 at ui/stdlib-unit-tests/seq-compare.rs:15:13: 15:45
                                         // mir::Constant
                                         // + span: ui/stdlib-unit-tests/seq-compare.rs:15:13: 15:45
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a Vec<i32>, &'b Vec<i32>) -> bool {<Vec<i32> as PartialEq>::ne}, val: Value(<ZST>) }
    }

    bb98: {
        _198 = Not(move _199);           // scope 0 at ui/stdlib-unit-tests/seq-compare.rs:15:5: 15:46
        drop(_209) -> [return: bb99, unwind: bb104]; // scope 0 at ui/stdlib-unit-tests/seq-compare.rs:15:45: 15:46
    }

    bb99: {
        drop(_201) -> bb100;             // scope 0 at ui/stdlib-unit-tests/seq-compare.rs:15:45: 15:46
    }

    bb100: {
        switchInt(move _198) -> [0: bb102, otherwise: bb101]; // scope 0 at ui/stdlib-unit-tests/seq-compare.rs:15:5: 15:46
    }

    bb101: {
        _216 = core::panicking::panic(const "assertion failed: (vec![1, 2, 3] != vec![1, 1, 3])"); // scope 0 at ui/stdlib-unit-tests/seq-compare.rs:15:5: 15:46
                                         // mir::Constant
                                         // + span: ui/stdlib-unit-tests/seq-compare.rs:15:5: 15:46
                                         // + literal: Const { ty: fn(&'static str) -> ! {core::panicking::panic}, val: Value(<ZST>) }
                                         // mir::Constant
                                         // + span: no-location
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
    }

    bb102: {
        return;                          // scope 0 at ui/stdlib-unit-tests/seq-compare.rs:16:2: 16:2
    }

    bb103 (cleanup): {
        drop(_209) -> bb104;             // scope 0 at ui/stdlib-unit-tests/seq-compare.rs:15:45: 15:46
    }

    bb104 (cleanup): {
        drop(_201) -> bb127;             // scope 0 at ui/stdlib-unit-tests/seq-compare.rs:15:45: 15:46
    }

    bb105 (cleanup): {
        drop(_177) -> bb106;             // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:48:9: 48:10
    }

    bb106 (cleanup): {
        drop(_169) -> bb127;             // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:48:9: 48:10
    }

    bb107 (cleanup): {
        drop(_159) -> bb108;             // scope 0 at ui/stdlib-unit-tests/seq-compare.rs:13:47: 13:48
    }

    bb108 (cleanup): {
        drop(_151) -> bb127;             // scope 0 at ui/stdlib-unit-tests/seq-compare.rs:13:47: 13:48
    }

    bb109 (cleanup): {
        drop(_140) -> bb110;             // scope 0 at ui/stdlib-unit-tests/seq-compare.rs:12:48: 12:49
    }

    bb110 (cleanup): {
        drop(_132) -> bb127;             // scope 0 at ui/stdlib-unit-tests/seq-compare.rs:12:48: 12:49
    }

    bb111 (cleanup): {
        drop(_121) -> bb112;             // scope 0 at ui/stdlib-unit-tests/seq-compare.rs:11:45: 11:46
    }

    bb112 (cleanup): {
        drop(_113) -> bb127;             // scope 0 at ui/stdlib-unit-tests/seq-compare.rs:11:45: 11:46
    }

    bb113 (cleanup): {
        drop(_102) -> bb114;             // scope 0 at ui/stdlib-unit-tests/seq-compare.rs:10:50: 10:51
    }

    bb114 (cleanup): {
        drop(_94) -> bb127;              // scope 0 at ui/stdlib-unit-tests/seq-compare.rs:10:50: 10:51
    }

    bb115 (cleanup): {
        drop(_83) -> bb116;              // scope 0 at ui/stdlib-unit-tests/seq-compare.rs:9:50: 9:51
    }

    bb116 (cleanup): {
        drop(_75) -> bb127;              // scope 0 at ui/stdlib-unit-tests/seq-compare.rs:9:50: 9:51
    }

    bb117 (cleanup): {
        drop(_64) -> bb118;              // scope 0 at ui/stdlib-unit-tests/seq-compare.rs:8:47: 8:48
    }

    bb118 (cleanup): {
        drop(_56) -> bb127;              // scope 0 at ui/stdlib-unit-tests/seq-compare.rs:8:47: 8:48
    }

    bb119 (cleanup): {
        drop(_45) -> bb120;              // scope 0 at ui/stdlib-unit-tests/seq-compare.rs:7:47: 7:48
    }

    bb120 (cleanup): {
        drop(_37) -> bb127;              // scope 0 at ui/stdlib-unit-tests/seq-compare.rs:7:47: 7:48
    }

    bb121 (cleanup): {
        drop(_30) -> bb122;              // scope 0 at ui/stdlib-unit-tests/seq-compare.rs:6:57: 6:58
    }

    bb122 (cleanup): {
        drop(_26) -> bb127;              // scope 0 at ui/stdlib-unit-tests/seq-compare.rs:6:57: 6:58
    }

    bb123 (cleanup): {
        drop(_19) -> bb124;              // scope 0 at ui/stdlib-unit-tests/seq-compare.rs:5:57: 5:58
    }

    bb124 (cleanup): {
        drop(_15) -> bb127;              // scope 0 at ui/stdlib-unit-tests/seq-compare.rs:5:57: 5:58
    }

    bb125 (cleanup): {
        drop(_8) -> bb126;               // scope 0 at ui/stdlib-unit-tests/seq-compare.rs:4:56: 4:57
    }

    bb126 (cleanup): {
        drop(_4) -> bb127;               // scope 0 at ui/stdlib-unit-tests/seq-compare.rs:4:56: 4:57
    }

    bb127 (cleanup): {
        resume;                          // scope 0 at ui/stdlib-unit-tests/seq-compare.rs:3:1: 16:2
    }
}
