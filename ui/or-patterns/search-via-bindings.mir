// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
fn search(_1: (bool, bool, bool)) -> u32 {
    debug target => _1;                  // in scope 0 at ui/or-patterns/search-via-bindings.rs:5:11: 5:17
    let _2: ((bool, bool), (bool, bool), (bool, bool)); // in scope 0 at ui/or-patterns/search-via-bindings.rs:6:9: 6:10
    let mut _3: (bool, bool);            // in scope 0 at ui/or-patterns/search-via-bindings.rs:6:14: 6:27
    let mut _4: (bool, bool);            // in scope 0 at ui/or-patterns/search-via-bindings.rs:6:29: 6:42
    let mut _5: (bool, bool);            // in scope 0 at ui/or-patterns/search-via-bindings.rs:6:44: 6:57
    let mut _12: bool;                   // in scope 0 at ui/or-patterns/search-via-bindings.rs:10:16: 13:14
    let mut _13: (u32, bool);            // in scope 0 at ui/or-patterns/search-via-bindings.rs:11:17: 11:33
    let mut _14: &(bool, bool, bool);    // in scope 0 at ui/or-patterns/search-via-bindings.rs:12:17: 12:26
    let _15: (bool, bool, bool);         // in scope 0 at ui/or-patterns/search-via-bindings.rs:12:17: 12:26
    let mut _16: bool;                   // in scope 0 at ui/or-patterns/search-via-bindings.rs:12:18: 12:19
    let mut _17: bool;                   // in scope 0 at ui/or-patterns/search-via-bindings.rs:12:21: 12:22
    let mut _18: bool;                   // in scope 0 at ui/or-patterns/search-via-bindings.rs:12:24: 12:25
    let mut _19: &(bool, bool, bool);    // in scope 0 at ui/or-patterns/search-via-bindings.rs:12:30: 12:36
    let mut _20: bool;                   // in scope 0 at ui/or-patterns/search-via-bindings.rs:10:16: 13:14
    let mut _21: (u32, bool);            // in scope 0 at ui/or-patterns/search-via-bindings.rs:11:17: 11:33
    let mut _22: &(bool, bool, bool);    // in scope 0 at ui/or-patterns/search-via-bindings.rs:12:17: 12:26
    let _23: (bool, bool, bool);         // in scope 0 at ui/or-patterns/search-via-bindings.rs:12:17: 12:26
    let mut _24: bool;                   // in scope 0 at ui/or-patterns/search-via-bindings.rs:12:18: 12:19
    let mut _25: bool;                   // in scope 0 at ui/or-patterns/search-via-bindings.rs:12:21: 12:22
    let mut _26: bool;                   // in scope 0 at ui/or-patterns/search-via-bindings.rs:12:24: 12:25
    let mut _27: &(bool, bool, bool);    // in scope 0 at ui/or-patterns/search-via-bindings.rs:12:30: 12:36
    let mut _28: bool;                   // in scope 0 at ui/or-patterns/search-via-bindings.rs:10:16: 13:14
    let mut _29: (u32, bool);            // in scope 0 at ui/or-patterns/search-via-bindings.rs:11:17: 11:33
    let mut _30: &(bool, bool, bool);    // in scope 0 at ui/or-patterns/search-via-bindings.rs:12:17: 12:26
    let _31: (bool, bool, bool);         // in scope 0 at ui/or-patterns/search-via-bindings.rs:12:17: 12:26
    let mut _32: bool;                   // in scope 0 at ui/or-patterns/search-via-bindings.rs:12:18: 12:19
    let mut _33: bool;                   // in scope 0 at ui/or-patterns/search-via-bindings.rs:12:21: 12:22
    let mut _34: bool;                   // in scope 0 at ui/or-patterns/search-via-bindings.rs:12:24: 12:25
    let mut _35: &(bool, bool, bool);    // in scope 0 at ui/or-patterns/search-via-bindings.rs:12:30: 12:36
    let mut _36: bool;                   // in scope 0 at ui/or-patterns/search-via-bindings.rs:10:16: 13:14
    let mut _37: (u32, bool);            // in scope 0 at ui/or-patterns/search-via-bindings.rs:11:17: 11:33
    let mut _38: &(bool, bool, bool);    // in scope 0 at ui/or-patterns/search-via-bindings.rs:12:17: 12:26
    let _39: (bool, bool, bool);         // in scope 0 at ui/or-patterns/search-via-bindings.rs:12:17: 12:26
    let mut _40: bool;                   // in scope 0 at ui/or-patterns/search-via-bindings.rs:12:18: 12:19
    let mut _41: bool;                   // in scope 0 at ui/or-patterns/search-via-bindings.rs:12:21: 12:22
    let mut _42: bool;                   // in scope 0 at ui/or-patterns/search-via-bindings.rs:12:24: 12:25
    let mut _43: &(bool, bool, bool);    // in scope 0 at ui/or-patterns/search-via-bindings.rs:12:30: 12:36
    let mut _44: bool;                   // in scope 0 at ui/or-patterns/search-via-bindings.rs:10:16: 13:14
    let mut _45: (u32, bool);            // in scope 0 at ui/or-patterns/search-via-bindings.rs:11:17: 11:33
    let mut _46: &(bool, bool, bool);    // in scope 0 at ui/or-patterns/search-via-bindings.rs:12:17: 12:26
    let _47: (bool, bool, bool);         // in scope 0 at ui/or-patterns/search-via-bindings.rs:12:17: 12:26
    let mut _48: bool;                   // in scope 0 at ui/or-patterns/search-via-bindings.rs:12:18: 12:19
    let mut _49: bool;                   // in scope 0 at ui/or-patterns/search-via-bindings.rs:12:21: 12:22
    let mut _50: bool;                   // in scope 0 at ui/or-patterns/search-via-bindings.rs:12:24: 12:25
    let mut _51: &(bool, bool, bool);    // in scope 0 at ui/or-patterns/search-via-bindings.rs:12:30: 12:36
    let mut _52: bool;                   // in scope 0 at ui/or-patterns/search-via-bindings.rs:10:16: 13:14
    let mut _53: (u32, bool);            // in scope 0 at ui/or-patterns/search-via-bindings.rs:11:17: 11:33
    let mut _54: &(bool, bool, bool);    // in scope 0 at ui/or-patterns/search-via-bindings.rs:12:17: 12:26
    let _55: (bool, bool, bool);         // in scope 0 at ui/or-patterns/search-via-bindings.rs:12:17: 12:26
    let mut _56: bool;                   // in scope 0 at ui/or-patterns/search-via-bindings.rs:12:18: 12:19
    let mut _57: bool;                   // in scope 0 at ui/or-patterns/search-via-bindings.rs:12:21: 12:22
    let mut _58: bool;                   // in scope 0 at ui/or-patterns/search-via-bindings.rs:12:24: 12:25
    let mut _59: &(bool, bool, bool);    // in scope 0 at ui/or-patterns/search-via-bindings.rs:12:30: 12:36
    let mut _60: bool;                   // in scope 0 at ui/or-patterns/search-via-bindings.rs:10:16: 13:14
    let mut _61: (u32, bool);            // in scope 0 at ui/or-patterns/search-via-bindings.rs:11:17: 11:33
    let mut _62: &(bool, bool, bool);    // in scope 0 at ui/or-patterns/search-via-bindings.rs:12:17: 12:26
    let _63: (bool, bool, bool);         // in scope 0 at ui/or-patterns/search-via-bindings.rs:12:17: 12:26
    let mut _64: bool;                   // in scope 0 at ui/or-patterns/search-via-bindings.rs:12:18: 12:19
    let mut _65: bool;                   // in scope 0 at ui/or-patterns/search-via-bindings.rs:12:21: 12:22
    let mut _66: bool;                   // in scope 0 at ui/or-patterns/search-via-bindings.rs:12:24: 12:25
    let mut _67: &(bool, bool, bool);    // in scope 0 at ui/or-patterns/search-via-bindings.rs:12:30: 12:36
    let mut _68: bool;                   // in scope 0 at ui/or-patterns/search-via-bindings.rs:10:16: 13:14
    let mut _69: (u32, bool);            // in scope 0 at ui/or-patterns/search-via-bindings.rs:11:17: 11:33
    let mut _70: &(bool, bool, bool);    // in scope 0 at ui/or-patterns/search-via-bindings.rs:12:17: 12:26
    let _71: (bool, bool, bool);         // in scope 0 at ui/or-patterns/search-via-bindings.rs:12:17: 12:26
    let mut _72: bool;                   // in scope 0 at ui/or-patterns/search-via-bindings.rs:12:18: 12:19
    let mut _73: bool;                   // in scope 0 at ui/or-patterns/search-via-bindings.rs:12:21: 12:22
    let mut _74: bool;                   // in scope 0 at ui/or-patterns/search-via-bindings.rs:12:24: 12:25
    let mut _75: &(bool, bool, bool);    // in scope 0 at ui/or-patterns/search-via-bindings.rs:12:30: 12:36
    let mut _76: !;                      // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/panic.rs:68:9: 68:77
    scope 1 {
        debug x => _2;                   // in scope 1 at ui/or-patterns/search-via-bindings.rs:6:9: 6:10
        let mut _0: u32;                 // return place in scope 1 at ui/or-patterns/search-via-bindings.rs:7:9: 7:24
        scope 2 {
            debug guard_count => _0;     // in scope 2 at ui/or-patterns/search-via-bindings.rs:7:9: 7:24
            let _6: bool;                // in scope 2 at ui/or-patterns/search-via-bindings.rs:9:11: 9:12
            let _7: &bool;               // in scope 2 at ui/or-patterns/search-via-bindings.rs:9:11: 9:12
            let _8: bool;                // in scope 2 at ui/or-patterns/search-via-bindings.rs:9:28: 9:29
            let _9: &bool;               // in scope 2 at ui/or-patterns/search-via-bindings.rs:9:28: 9:29
            let _10: bool;               // in scope 2 at ui/or-patterns/search-via-bindings.rs:9:53: 9:54
            let _11: &bool;              // in scope 2 at ui/or-patterns/search-via-bindings.rs:9:53: 9:54
            scope 3 {
                debug a => _6;           // in scope 3 at ui/or-patterns/search-via-bindings.rs:9:11: 9:12
                debug a => _7;           // in scope 3 at ui/or-patterns/search-via-bindings.rs:9:11: 9:12
                debug b => _8;           // in scope 3 at ui/or-patterns/search-via-bindings.rs:9:28: 9:29
                debug b => _9;           // in scope 3 at ui/or-patterns/search-via-bindings.rs:9:28: 9:29
                debug c => _10;          // in scope 3 at ui/or-patterns/search-via-bindings.rs:9:53: 9:54
                debug c => _11;          // in scope 3 at ui/or-patterns/search-via-bindings.rs:9:53: 9:54
            }
        }
    }

    bb0: {
        _3 = const (false, true);        // scope 0 at ui/or-patterns/search-via-bindings.rs:6:14: 6:27
        _4 = const (false, true);        // scope 0 at ui/or-patterns/search-via-bindings.rs:6:29: 6:42
        _5 = const (false, true);        // scope 0 at ui/or-patterns/search-via-bindings.rs:6:44: 6:57
        _2 = (move _3, move _4, move _5); // scope 0 at ui/or-patterns/search-via-bindings.rs:6:13: 6:58
        _0 = const 0_u32;                // scope 1 at ui/or-patterns/search-via-bindings.rs:7:27: 7:28
        _7 = &((_2.0: (bool, bool)).0: bool); // scope 2 at ui/or-patterns/search-via-bindings.rs:9:11: 9:12
        _9 = &((_2.1: (bool, bool)).0: bool); // scope 2 at ui/or-patterns/search-via-bindings.rs:9:28: 9:29
        _11 = &((_2.2: (bool, bool)).0: bool); // scope 2 at ui/or-patterns/search-via-bindings.rs:9:53: 9:54
        _13 = CheckedAdd(_0, const 1_u32); // scope 2 at ui/or-patterns/search-via-bindings.rs:11:17: 11:33
        assert(!move (_13.1: bool), "attempt to compute `{} + {}`, which would overflow", _0, const 1_u32) -> bb10; // scope 2 at ui/or-patterns/search-via-bindings.rs:11:17: 11:33
    }

    bb1: {
        _76 = core::panicking::panic(const "internal error: entered unreachable code"); // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/panic.rs:68:9: 68:77
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/panic.rs:68:9: 68:33
                                         // + literal: Const { ty: fn(&'static str) -> ! {core::panicking::panic}, val: Value(<ZST>) }
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/panic.rs:68:34: 68:76
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
    }

    bb2: {
        switchInt(((_2.2: (bool, bool)).0: bool)) -> [0: bb17, otherwise: bb6]; // scope 2 at ui/or-patterns/search-via-bindings.rs:9:52: 9:82
    }

    bb3: {
        switchInt(((_2.2: (bool, bool)).0: bool)) -> [0: bb25, otherwise: bb7]; // scope 2 at ui/or-patterns/search-via-bindings.rs:9:52: 9:82
    }

    bb4: {
        switchInt(((_2.2: (bool, bool)).0: bool)) -> [0: bb33, otherwise: bb8]; // scope 2 at ui/or-patterns/search-via-bindings.rs:9:52: 9:82
    }

    bb5: {
        switchInt(((_2.2: (bool, bool)).1: bool)) -> [0: bb2, otherwise: bb13]; // scope 2 at ui/or-patterns/search-via-bindings.rs:9:52: 9:82
    }

    bb6: {
        switchInt(((_2.2: (bool, bool)).1: bool)) -> [0: bb3, otherwise: bb21]; // scope 2 at ui/or-patterns/search-via-bindings.rs:9:52: 9:82
    }

    bb7: {
        switchInt(((_2.2: (bool, bool)).1: bool)) -> [0: bb4, otherwise: bb29]; // scope 2 at ui/or-patterns/search-via-bindings.rs:9:52: 9:82
    }

    bb8: {
        switchInt(((_2.2: (bool, bool)).1: bool)) -> [0: bb1, otherwise: bb37]; // scope 2 at ui/or-patterns/search-via-bindings.rs:9:52: 9:82
    }

    bb9: {
        return;                          // scope 0 at ui/or-patterns/search-via-bindings.rs:19:2: 19:2
    }

    bb10: {
        _0 = move (_13.0: u32);          // scope 2 at ui/or-patterns/search-via-bindings.rs:11:17: 11:33
        _16 = (*_7);                     // scope 2 at ui/or-patterns/search-via-bindings.rs:12:18: 12:19
        _17 = (*_9);                     // scope 2 at ui/or-patterns/search-via-bindings.rs:12:21: 12:22
        _18 = (*_11);                    // scope 2 at ui/or-patterns/search-via-bindings.rs:12:24: 12:25
        _15 = (move _16, move _17, move _18); // scope 2 at ui/or-patterns/search-via-bindings.rs:12:17: 12:26
        _14 = &_15;                      // scope 2 at ui/or-patterns/search-via-bindings.rs:12:17: 12:26
        _19 = &_1;                       // scope 2 at ui/or-patterns/search-via-bindings.rs:12:30: 12:36
        _12 = <(bool, bool, bool) as PartialEq>::eq(move _14, move _19) -> bb11; // scope 2 at ui/or-patterns/search-via-bindings.rs:12:17: 12:36
                                         // mir::Constant
                                         // + span: ui/or-patterns/search-via-bindings.rs:12:17: 12:36
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a (bool, bool, bool), &'b (bool, bool, bool)) -> bool {<(bool, bool, bool) as PartialEq>::eq}, val: Value(<ZST>) }
    }

    bb11: {
        switchInt(move _12) -> [0: bb5, otherwise: bb12]; // scope 2 at ui/or-patterns/search-via-bindings.rs:10:16: 13:14
    }

    bb12: {
        _6 = ((_2.0: (bool, bool)).0: bool); // scope 2 at ui/or-patterns/search-via-bindings.rs:9:11: 9:12
        _8 = ((_2.1: (bool, bool)).0: bool); // scope 2 at ui/or-patterns/search-via-bindings.rs:9:28: 9:29
        _10 = ((_2.2: (bool, bool)).0: bool); // scope 2 at ui/or-patterns/search-via-bindings.rs:9:53: 9:54
        goto -> bb9;                     // scope 2 at ui/or-patterns/search-via-bindings.rs:8:5: 18:6
    }

    bb13: {
        _7 = &((_2.0: (bool, bool)).0: bool); // scope 2 at ui/or-patterns/search-via-bindings.rs:9:11: 9:12
        _9 = &((_2.1: (bool, bool)).0: bool); // scope 2 at ui/or-patterns/search-via-bindings.rs:9:28: 9:29
        _11 = &((_2.2: (bool, bool)).1: bool); // scope 2 at ui/or-patterns/search-via-bindings.rs:9:73: 9:74
        _21 = CheckedAdd(_0, const 1_u32); // scope 2 at ui/or-patterns/search-via-bindings.rs:11:17: 11:33
        assert(!move (_21.1: bool), "attempt to compute `{} + {}`, which would overflow", _0, const 1_u32) -> bb14; // scope 2 at ui/or-patterns/search-via-bindings.rs:11:17: 11:33
    }

    bb14: {
        _0 = move (_21.0: u32);          // scope 2 at ui/or-patterns/search-via-bindings.rs:11:17: 11:33
        _24 = (*_7);                     // scope 2 at ui/or-patterns/search-via-bindings.rs:12:18: 12:19
        _25 = (*_9);                     // scope 2 at ui/or-patterns/search-via-bindings.rs:12:21: 12:22
        _26 = (*_11);                    // scope 2 at ui/or-patterns/search-via-bindings.rs:12:24: 12:25
        _23 = (move _24, move _25, move _26); // scope 2 at ui/or-patterns/search-via-bindings.rs:12:17: 12:26
        _22 = &_23;                      // scope 2 at ui/or-patterns/search-via-bindings.rs:12:17: 12:26
        _27 = &_1;                       // scope 2 at ui/or-patterns/search-via-bindings.rs:12:30: 12:36
        _20 = <(bool, bool, bool) as PartialEq>::eq(move _22, move _27) -> bb15; // scope 2 at ui/or-patterns/search-via-bindings.rs:12:17: 12:36
                                         // mir::Constant
                                         // + span: ui/or-patterns/search-via-bindings.rs:12:17: 12:36
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a (bool, bool, bool), &'b (bool, bool, bool)) -> bool {<(bool, bool, bool) as PartialEq>::eq}, val: Value(<ZST>) }
    }

    bb15: {
        switchInt(move _20) -> [0: bb2, otherwise: bb16]; // scope 2 at ui/or-patterns/search-via-bindings.rs:10:16: 13:14
    }

    bb16: {
        _6 = ((_2.0: (bool, bool)).0: bool); // scope 2 at ui/or-patterns/search-via-bindings.rs:9:11: 9:12
        _8 = ((_2.1: (bool, bool)).0: bool); // scope 2 at ui/or-patterns/search-via-bindings.rs:9:28: 9:29
        _10 = ((_2.2: (bool, bool)).1: bool); // scope 2 at ui/or-patterns/search-via-bindings.rs:9:73: 9:74
        goto -> bb9;                     // scope 2 at ui/or-patterns/search-via-bindings.rs:8:5: 18:6
    }

    bb17: {
        _7 = &((_2.0: (bool, bool)).0: bool); // scope 2 at ui/or-patterns/search-via-bindings.rs:9:11: 9:12
        _9 = &((_2.1: (bool, bool)).1: bool); // scope 2 at ui/or-patterns/search-via-bindings.rs:9:44: 9:45
        _11 = &((_2.2: (bool, bool)).0: bool); // scope 2 at ui/or-patterns/search-via-bindings.rs:9:53: 9:54
        _29 = CheckedAdd(_0, const 1_u32); // scope 2 at ui/or-patterns/search-via-bindings.rs:11:17: 11:33
        assert(!move (_29.1: bool), "attempt to compute `{} + {}`, which would overflow", _0, const 1_u32) -> bb18; // scope 2 at ui/or-patterns/search-via-bindings.rs:11:17: 11:33
    }

    bb18: {
        _0 = move (_29.0: u32);          // scope 2 at ui/or-patterns/search-via-bindings.rs:11:17: 11:33
        _32 = (*_7);                     // scope 2 at ui/or-patterns/search-via-bindings.rs:12:18: 12:19
        _33 = (*_9);                     // scope 2 at ui/or-patterns/search-via-bindings.rs:12:21: 12:22
        _34 = (*_11);                    // scope 2 at ui/or-patterns/search-via-bindings.rs:12:24: 12:25
        _31 = (move _32, move _33, move _34); // scope 2 at ui/or-patterns/search-via-bindings.rs:12:17: 12:26
        _30 = &_31;                      // scope 2 at ui/or-patterns/search-via-bindings.rs:12:17: 12:26
        _35 = &_1;                       // scope 2 at ui/or-patterns/search-via-bindings.rs:12:30: 12:36
        _28 = <(bool, bool, bool) as PartialEq>::eq(move _30, move _35) -> bb19; // scope 2 at ui/or-patterns/search-via-bindings.rs:12:17: 12:36
                                         // mir::Constant
                                         // + span: ui/or-patterns/search-via-bindings.rs:12:17: 12:36
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a (bool, bool, bool), &'b (bool, bool, bool)) -> bool {<(bool, bool, bool) as PartialEq>::eq}, val: Value(<ZST>) }
    }

    bb19: {
        switchInt(move _28) -> [0: bb6, otherwise: bb20]; // scope 2 at ui/or-patterns/search-via-bindings.rs:10:16: 13:14
    }

    bb20: {
        _6 = ((_2.0: (bool, bool)).0: bool); // scope 2 at ui/or-patterns/search-via-bindings.rs:9:11: 9:12
        _8 = ((_2.1: (bool, bool)).1: bool); // scope 2 at ui/or-patterns/search-via-bindings.rs:9:44: 9:45
        _10 = ((_2.2: (bool, bool)).0: bool); // scope 2 at ui/or-patterns/search-via-bindings.rs:9:53: 9:54
        goto -> bb9;                     // scope 2 at ui/or-patterns/search-via-bindings.rs:8:5: 18:6
    }

    bb21: {
        _7 = &((_2.0: (bool, bool)).0: bool); // scope 2 at ui/or-patterns/search-via-bindings.rs:9:11: 9:12
        _9 = &((_2.1: (bool, bool)).1: bool); // scope 2 at ui/or-patterns/search-via-bindings.rs:9:44: 9:45
        _11 = &((_2.2: (bool, bool)).1: bool); // scope 2 at ui/or-patterns/search-via-bindings.rs:9:73: 9:74
        _37 = CheckedAdd(_0, const 1_u32); // scope 2 at ui/or-patterns/search-via-bindings.rs:11:17: 11:33
        assert(!move (_37.1: bool), "attempt to compute `{} + {}`, which would overflow", _0, const 1_u32) -> bb22; // scope 2 at ui/or-patterns/search-via-bindings.rs:11:17: 11:33
    }

    bb22: {
        _0 = move (_37.0: u32);          // scope 2 at ui/or-patterns/search-via-bindings.rs:11:17: 11:33
        _40 = (*_7);                     // scope 2 at ui/or-patterns/search-via-bindings.rs:12:18: 12:19
        _41 = (*_9);                     // scope 2 at ui/or-patterns/search-via-bindings.rs:12:21: 12:22
        _42 = (*_11);                    // scope 2 at ui/or-patterns/search-via-bindings.rs:12:24: 12:25
        _39 = (move _40, move _41, move _42); // scope 2 at ui/or-patterns/search-via-bindings.rs:12:17: 12:26
        _38 = &_39;                      // scope 2 at ui/or-patterns/search-via-bindings.rs:12:17: 12:26
        _43 = &_1;                       // scope 2 at ui/or-patterns/search-via-bindings.rs:12:30: 12:36
        _36 = <(bool, bool, bool) as PartialEq>::eq(move _38, move _43) -> bb23; // scope 2 at ui/or-patterns/search-via-bindings.rs:12:17: 12:36
                                         // mir::Constant
                                         // + span: ui/or-patterns/search-via-bindings.rs:12:17: 12:36
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a (bool, bool, bool), &'b (bool, bool, bool)) -> bool {<(bool, bool, bool) as PartialEq>::eq}, val: Value(<ZST>) }
    }

    bb23: {
        switchInt(move _36) -> [0: bb3, otherwise: bb24]; // scope 2 at ui/or-patterns/search-via-bindings.rs:10:16: 13:14
    }

    bb24: {
        _6 = ((_2.0: (bool, bool)).0: bool); // scope 2 at ui/or-patterns/search-via-bindings.rs:9:11: 9:12
        _8 = ((_2.1: (bool, bool)).1: bool); // scope 2 at ui/or-patterns/search-via-bindings.rs:9:44: 9:45
        _10 = ((_2.2: (bool, bool)).1: bool); // scope 2 at ui/or-patterns/search-via-bindings.rs:9:73: 9:74
        goto -> bb9;                     // scope 2 at ui/or-patterns/search-via-bindings.rs:8:5: 18:6
    }

    bb25: {
        _7 = &((_2.0: (bool, bool)).1: bool); // scope 2 at ui/or-patterns/search-via-bindings.rs:9:23: 9:24
        _9 = &((_2.1: (bool, bool)).0: bool); // scope 2 at ui/or-patterns/search-via-bindings.rs:9:28: 9:29
        _11 = &((_2.2: (bool, bool)).0: bool); // scope 2 at ui/or-patterns/search-via-bindings.rs:9:53: 9:54
        _45 = CheckedAdd(_0, const 1_u32); // scope 2 at ui/or-patterns/search-via-bindings.rs:11:17: 11:33
        assert(!move (_45.1: bool), "attempt to compute `{} + {}`, which would overflow", _0, const 1_u32) -> bb26; // scope 2 at ui/or-patterns/search-via-bindings.rs:11:17: 11:33
    }

    bb26: {
        _0 = move (_45.0: u32);          // scope 2 at ui/or-patterns/search-via-bindings.rs:11:17: 11:33
        _48 = (*_7);                     // scope 2 at ui/or-patterns/search-via-bindings.rs:12:18: 12:19
        _49 = (*_9);                     // scope 2 at ui/or-patterns/search-via-bindings.rs:12:21: 12:22
        _50 = (*_11);                    // scope 2 at ui/or-patterns/search-via-bindings.rs:12:24: 12:25
        _47 = (move _48, move _49, move _50); // scope 2 at ui/or-patterns/search-via-bindings.rs:12:17: 12:26
        _46 = &_47;                      // scope 2 at ui/or-patterns/search-via-bindings.rs:12:17: 12:26
        _51 = &_1;                       // scope 2 at ui/or-patterns/search-via-bindings.rs:12:30: 12:36
        _44 = <(bool, bool, bool) as PartialEq>::eq(move _46, move _51) -> bb27; // scope 2 at ui/or-patterns/search-via-bindings.rs:12:17: 12:36
                                         // mir::Constant
                                         // + span: ui/or-patterns/search-via-bindings.rs:12:17: 12:36
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a (bool, bool, bool), &'b (bool, bool, bool)) -> bool {<(bool, bool, bool) as PartialEq>::eq}, val: Value(<ZST>) }
    }

    bb27: {
        switchInt(move _44) -> [0: bb7, otherwise: bb28]; // scope 2 at ui/or-patterns/search-via-bindings.rs:10:16: 13:14
    }

    bb28: {
        _6 = ((_2.0: (bool, bool)).1: bool); // scope 2 at ui/or-patterns/search-via-bindings.rs:9:23: 9:24
        _8 = ((_2.1: (bool, bool)).0: bool); // scope 2 at ui/or-patterns/search-via-bindings.rs:9:28: 9:29
        _10 = ((_2.2: (bool, bool)).0: bool); // scope 2 at ui/or-patterns/search-via-bindings.rs:9:53: 9:54
        goto -> bb9;                     // scope 2 at ui/or-patterns/search-via-bindings.rs:8:5: 18:6
    }

    bb29: {
        _7 = &((_2.0: (bool, bool)).1: bool); // scope 2 at ui/or-patterns/search-via-bindings.rs:9:23: 9:24
        _9 = &((_2.1: (bool, bool)).0: bool); // scope 2 at ui/or-patterns/search-via-bindings.rs:9:28: 9:29
        _11 = &((_2.2: (bool, bool)).1: bool); // scope 2 at ui/or-patterns/search-via-bindings.rs:9:73: 9:74
        _53 = CheckedAdd(_0, const 1_u32); // scope 2 at ui/or-patterns/search-via-bindings.rs:11:17: 11:33
        assert(!move (_53.1: bool), "attempt to compute `{} + {}`, which would overflow", _0, const 1_u32) -> bb30; // scope 2 at ui/or-patterns/search-via-bindings.rs:11:17: 11:33
    }

    bb30: {
        _0 = move (_53.0: u32);          // scope 2 at ui/or-patterns/search-via-bindings.rs:11:17: 11:33
        _56 = (*_7);                     // scope 2 at ui/or-patterns/search-via-bindings.rs:12:18: 12:19
        _57 = (*_9);                     // scope 2 at ui/or-patterns/search-via-bindings.rs:12:21: 12:22
        _58 = (*_11);                    // scope 2 at ui/or-patterns/search-via-bindings.rs:12:24: 12:25
        _55 = (move _56, move _57, move _58); // scope 2 at ui/or-patterns/search-via-bindings.rs:12:17: 12:26
        _54 = &_55;                      // scope 2 at ui/or-patterns/search-via-bindings.rs:12:17: 12:26
        _59 = &_1;                       // scope 2 at ui/or-patterns/search-via-bindings.rs:12:30: 12:36
        _52 = <(bool, bool, bool) as PartialEq>::eq(move _54, move _59) -> bb31; // scope 2 at ui/or-patterns/search-via-bindings.rs:12:17: 12:36
                                         // mir::Constant
                                         // + span: ui/or-patterns/search-via-bindings.rs:12:17: 12:36
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a (bool, bool, bool), &'b (bool, bool, bool)) -> bool {<(bool, bool, bool) as PartialEq>::eq}, val: Value(<ZST>) }
    }

    bb31: {
        switchInt(move _52) -> [0: bb4, otherwise: bb32]; // scope 2 at ui/or-patterns/search-via-bindings.rs:10:16: 13:14
    }

    bb32: {
        _6 = ((_2.0: (bool, bool)).1: bool); // scope 2 at ui/or-patterns/search-via-bindings.rs:9:23: 9:24
        _8 = ((_2.1: (bool, bool)).0: bool); // scope 2 at ui/or-patterns/search-via-bindings.rs:9:28: 9:29
        _10 = ((_2.2: (bool, bool)).1: bool); // scope 2 at ui/or-patterns/search-via-bindings.rs:9:73: 9:74
        goto -> bb9;                     // scope 2 at ui/or-patterns/search-via-bindings.rs:8:5: 18:6
    }

    bb33: {
        _7 = &((_2.0: (bool, bool)).1: bool); // scope 2 at ui/or-patterns/search-via-bindings.rs:9:23: 9:24
        _9 = &((_2.1: (bool, bool)).1: bool); // scope 2 at ui/or-patterns/search-via-bindings.rs:9:44: 9:45
        _11 = &((_2.2: (bool, bool)).0: bool); // scope 2 at ui/or-patterns/search-via-bindings.rs:9:53: 9:54
        _61 = CheckedAdd(_0, const 1_u32); // scope 2 at ui/or-patterns/search-via-bindings.rs:11:17: 11:33
        assert(!move (_61.1: bool), "attempt to compute `{} + {}`, which would overflow", _0, const 1_u32) -> bb34; // scope 2 at ui/or-patterns/search-via-bindings.rs:11:17: 11:33
    }

    bb34: {
        _0 = move (_61.0: u32);          // scope 2 at ui/or-patterns/search-via-bindings.rs:11:17: 11:33
        _64 = (*_7);                     // scope 2 at ui/or-patterns/search-via-bindings.rs:12:18: 12:19
        _65 = (*_9);                     // scope 2 at ui/or-patterns/search-via-bindings.rs:12:21: 12:22
        _66 = (*_11);                    // scope 2 at ui/or-patterns/search-via-bindings.rs:12:24: 12:25
        _63 = (move _64, move _65, move _66); // scope 2 at ui/or-patterns/search-via-bindings.rs:12:17: 12:26
        _62 = &_63;                      // scope 2 at ui/or-patterns/search-via-bindings.rs:12:17: 12:26
        _67 = &_1;                       // scope 2 at ui/or-patterns/search-via-bindings.rs:12:30: 12:36
        _60 = <(bool, bool, bool) as PartialEq>::eq(move _62, move _67) -> bb35; // scope 2 at ui/or-patterns/search-via-bindings.rs:12:17: 12:36
                                         // mir::Constant
                                         // + span: ui/or-patterns/search-via-bindings.rs:12:17: 12:36
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a (bool, bool, bool), &'b (bool, bool, bool)) -> bool {<(bool, bool, bool) as PartialEq>::eq}, val: Value(<ZST>) }
    }

    bb35: {
        switchInt(move _60) -> [0: bb8, otherwise: bb36]; // scope 2 at ui/or-patterns/search-via-bindings.rs:10:16: 13:14
    }

    bb36: {
        _6 = ((_2.0: (bool, bool)).1: bool); // scope 2 at ui/or-patterns/search-via-bindings.rs:9:23: 9:24
        _8 = ((_2.1: (bool, bool)).1: bool); // scope 2 at ui/or-patterns/search-via-bindings.rs:9:44: 9:45
        _10 = ((_2.2: (bool, bool)).0: bool); // scope 2 at ui/or-patterns/search-via-bindings.rs:9:53: 9:54
        goto -> bb9;                     // scope 2 at ui/or-patterns/search-via-bindings.rs:8:5: 18:6
    }

    bb37: {
        _7 = &((_2.0: (bool, bool)).1: bool); // scope 2 at ui/or-patterns/search-via-bindings.rs:9:23: 9:24
        _9 = &((_2.1: (bool, bool)).1: bool); // scope 2 at ui/or-patterns/search-via-bindings.rs:9:44: 9:45
        _11 = &((_2.2: (bool, bool)).1: bool); // scope 2 at ui/or-patterns/search-via-bindings.rs:9:73: 9:74
        _69 = CheckedAdd(_0, const 1_u32); // scope 2 at ui/or-patterns/search-via-bindings.rs:11:17: 11:33
        assert(!move (_69.1: bool), "attempt to compute `{} + {}`, which would overflow", _0, const 1_u32) -> bb38; // scope 2 at ui/or-patterns/search-via-bindings.rs:11:17: 11:33
    }

    bb38: {
        _0 = move (_69.0: u32);          // scope 2 at ui/or-patterns/search-via-bindings.rs:11:17: 11:33
        _72 = (*_7);                     // scope 2 at ui/or-patterns/search-via-bindings.rs:12:18: 12:19
        _73 = (*_9);                     // scope 2 at ui/or-patterns/search-via-bindings.rs:12:21: 12:22
        _74 = (*_11);                    // scope 2 at ui/or-patterns/search-via-bindings.rs:12:24: 12:25
        _71 = (move _72, move _73, move _74); // scope 2 at ui/or-patterns/search-via-bindings.rs:12:17: 12:26
        _70 = &_71;                      // scope 2 at ui/or-patterns/search-via-bindings.rs:12:17: 12:26
        _75 = &_1;                       // scope 2 at ui/or-patterns/search-via-bindings.rs:12:30: 12:36
        _68 = <(bool, bool, bool) as PartialEq>::eq(move _70, move _75) -> bb39; // scope 2 at ui/or-patterns/search-via-bindings.rs:12:17: 12:36
                                         // mir::Constant
                                         // + span: ui/or-patterns/search-via-bindings.rs:12:17: 12:36
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a (bool, bool, bool), &'b (bool, bool, bool)) -> bool {<(bool, bool, bool) as PartialEq>::eq}, val: Value(<ZST>) }
    }

    bb39: {
        switchInt(move _68) -> [0: bb1, otherwise: bb40]; // scope 2 at ui/or-patterns/search-via-bindings.rs:10:16: 13:14
    }

    bb40: {
        _6 = ((_2.0: (bool, bool)).1: bool); // scope 2 at ui/or-patterns/search-via-bindings.rs:9:23: 9:24
        _8 = ((_2.1: (bool, bool)).1: bool); // scope 2 at ui/or-patterns/search-via-bindings.rs:9:44: 9:45
        _10 = ((_2.2: (bool, bool)).1: bool); // scope 2 at ui/or-patterns/search-via-bindings.rs:9:73: 9:74
        goto -> bb9;                     // scope 2 at ui/or-patterns/search-via-bindings.rs:8:5: 18:6
    }
}

fn search_old_style(_1: (bool, bool, bool)) -> u32 {
    debug target => _1;                  // in scope 0 at ui/or-patterns/search-via-bindings.rs:22:21: 22:27
    let _2: ((bool, bool), (bool, bool), (bool, bool)); // in scope 0 at ui/or-patterns/search-via-bindings.rs:23:9: 23:10
    let mut _3: (bool, bool);            // in scope 0 at ui/or-patterns/search-via-bindings.rs:23:14: 23:27
    let mut _4: (bool, bool);            // in scope 0 at ui/or-patterns/search-via-bindings.rs:23:29: 23:42
    let mut _5: (bool, bool);            // in scope 0 at ui/or-patterns/search-via-bindings.rs:23:44: 23:57
    let mut _12: bool;                   // in scope 0 at ui/or-patterns/search-via-bindings.rs:34:16: 37:14
    let mut _13: (u32, bool);            // in scope 0 at ui/or-patterns/search-via-bindings.rs:35:17: 35:33
    let mut _14: &(bool, bool, bool);    // in scope 0 at ui/or-patterns/search-via-bindings.rs:36:17: 36:26
    let _15: (bool, bool, bool);         // in scope 0 at ui/or-patterns/search-via-bindings.rs:36:17: 36:26
    let mut _16: bool;                   // in scope 0 at ui/or-patterns/search-via-bindings.rs:36:18: 36:19
    let mut _17: bool;                   // in scope 0 at ui/or-patterns/search-via-bindings.rs:36:21: 36:22
    let mut _18: bool;                   // in scope 0 at ui/or-patterns/search-via-bindings.rs:36:24: 36:25
    let mut _19: &(bool, bool, bool);    // in scope 0 at ui/or-patterns/search-via-bindings.rs:36:30: 36:36
    let mut _20: bool;                   // in scope 0 at ui/or-patterns/search-via-bindings.rs:34:16: 37:14
    let mut _21: (u32, bool);            // in scope 0 at ui/or-patterns/search-via-bindings.rs:35:17: 35:33
    let mut _22: &(bool, bool, bool);    // in scope 0 at ui/or-patterns/search-via-bindings.rs:36:17: 36:26
    let _23: (bool, bool, bool);         // in scope 0 at ui/or-patterns/search-via-bindings.rs:36:17: 36:26
    let mut _24: bool;                   // in scope 0 at ui/or-patterns/search-via-bindings.rs:36:18: 36:19
    let mut _25: bool;                   // in scope 0 at ui/or-patterns/search-via-bindings.rs:36:21: 36:22
    let mut _26: bool;                   // in scope 0 at ui/or-patterns/search-via-bindings.rs:36:24: 36:25
    let mut _27: &(bool, bool, bool);    // in scope 0 at ui/or-patterns/search-via-bindings.rs:36:30: 36:36
    let mut _28: bool;                   // in scope 0 at ui/or-patterns/search-via-bindings.rs:34:16: 37:14
    let mut _29: (u32, bool);            // in scope 0 at ui/or-patterns/search-via-bindings.rs:35:17: 35:33
    let mut _30: &(bool, bool, bool);    // in scope 0 at ui/or-patterns/search-via-bindings.rs:36:17: 36:26
    let _31: (bool, bool, bool);         // in scope 0 at ui/or-patterns/search-via-bindings.rs:36:17: 36:26
    let mut _32: bool;                   // in scope 0 at ui/or-patterns/search-via-bindings.rs:36:18: 36:19
    let mut _33: bool;                   // in scope 0 at ui/or-patterns/search-via-bindings.rs:36:21: 36:22
    let mut _34: bool;                   // in scope 0 at ui/or-patterns/search-via-bindings.rs:36:24: 36:25
    let mut _35: &(bool, bool, bool);    // in scope 0 at ui/or-patterns/search-via-bindings.rs:36:30: 36:36
    let mut _36: bool;                   // in scope 0 at ui/or-patterns/search-via-bindings.rs:34:16: 37:14
    let mut _37: (u32, bool);            // in scope 0 at ui/or-patterns/search-via-bindings.rs:35:17: 35:33
    let mut _38: &(bool, bool, bool);    // in scope 0 at ui/or-patterns/search-via-bindings.rs:36:17: 36:26
    let _39: (bool, bool, bool);         // in scope 0 at ui/or-patterns/search-via-bindings.rs:36:17: 36:26
    let mut _40: bool;                   // in scope 0 at ui/or-patterns/search-via-bindings.rs:36:18: 36:19
    let mut _41: bool;                   // in scope 0 at ui/or-patterns/search-via-bindings.rs:36:21: 36:22
    let mut _42: bool;                   // in scope 0 at ui/or-patterns/search-via-bindings.rs:36:24: 36:25
    let mut _43: &(bool, bool, bool);    // in scope 0 at ui/or-patterns/search-via-bindings.rs:36:30: 36:36
    let mut _44: bool;                   // in scope 0 at ui/or-patterns/search-via-bindings.rs:34:16: 37:14
    let mut _45: (u32, bool);            // in scope 0 at ui/or-patterns/search-via-bindings.rs:35:17: 35:33
    let mut _46: &(bool, bool, bool);    // in scope 0 at ui/or-patterns/search-via-bindings.rs:36:17: 36:26
    let _47: (bool, bool, bool);         // in scope 0 at ui/or-patterns/search-via-bindings.rs:36:17: 36:26
    let mut _48: bool;                   // in scope 0 at ui/or-patterns/search-via-bindings.rs:36:18: 36:19
    let mut _49: bool;                   // in scope 0 at ui/or-patterns/search-via-bindings.rs:36:21: 36:22
    let mut _50: bool;                   // in scope 0 at ui/or-patterns/search-via-bindings.rs:36:24: 36:25
    let mut _51: &(bool, bool, bool);    // in scope 0 at ui/or-patterns/search-via-bindings.rs:36:30: 36:36
    let mut _52: bool;                   // in scope 0 at ui/or-patterns/search-via-bindings.rs:34:16: 37:14
    let mut _53: (u32, bool);            // in scope 0 at ui/or-patterns/search-via-bindings.rs:35:17: 35:33
    let mut _54: &(bool, bool, bool);    // in scope 0 at ui/or-patterns/search-via-bindings.rs:36:17: 36:26
    let _55: (bool, bool, bool);         // in scope 0 at ui/or-patterns/search-via-bindings.rs:36:17: 36:26
    let mut _56: bool;                   // in scope 0 at ui/or-patterns/search-via-bindings.rs:36:18: 36:19
    let mut _57: bool;                   // in scope 0 at ui/or-patterns/search-via-bindings.rs:36:21: 36:22
    let mut _58: bool;                   // in scope 0 at ui/or-patterns/search-via-bindings.rs:36:24: 36:25
    let mut _59: &(bool, bool, bool);    // in scope 0 at ui/or-patterns/search-via-bindings.rs:36:30: 36:36
    let mut _60: bool;                   // in scope 0 at ui/or-patterns/search-via-bindings.rs:34:16: 37:14
    let mut _61: (u32, bool);            // in scope 0 at ui/or-patterns/search-via-bindings.rs:35:17: 35:33
    let mut _62: &(bool, bool, bool);    // in scope 0 at ui/or-patterns/search-via-bindings.rs:36:17: 36:26
    let _63: (bool, bool, bool);         // in scope 0 at ui/or-patterns/search-via-bindings.rs:36:17: 36:26
    let mut _64: bool;                   // in scope 0 at ui/or-patterns/search-via-bindings.rs:36:18: 36:19
    let mut _65: bool;                   // in scope 0 at ui/or-patterns/search-via-bindings.rs:36:21: 36:22
    let mut _66: bool;                   // in scope 0 at ui/or-patterns/search-via-bindings.rs:36:24: 36:25
    let mut _67: &(bool, bool, bool);    // in scope 0 at ui/or-patterns/search-via-bindings.rs:36:30: 36:36
    let mut _68: bool;                   // in scope 0 at ui/or-patterns/search-via-bindings.rs:34:16: 37:14
    let mut _69: (u32, bool);            // in scope 0 at ui/or-patterns/search-via-bindings.rs:35:17: 35:33
    let mut _70: &(bool, bool, bool);    // in scope 0 at ui/or-patterns/search-via-bindings.rs:36:17: 36:26
    let _71: (bool, bool, bool);         // in scope 0 at ui/or-patterns/search-via-bindings.rs:36:17: 36:26
    let mut _72: bool;                   // in scope 0 at ui/or-patterns/search-via-bindings.rs:36:18: 36:19
    let mut _73: bool;                   // in scope 0 at ui/or-patterns/search-via-bindings.rs:36:21: 36:22
    let mut _74: bool;                   // in scope 0 at ui/or-patterns/search-via-bindings.rs:36:24: 36:25
    let mut _75: &(bool, bool, bool);    // in scope 0 at ui/or-patterns/search-via-bindings.rs:36:30: 36:36
    let mut _76: !;                      // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/panic.rs:68:9: 68:77
    scope 1 {
        debug x => _2;                   // in scope 1 at ui/or-patterns/search-via-bindings.rs:23:9: 23:10
        let mut _0: u32;                 // return place in scope 1 at ui/or-patterns/search-via-bindings.rs:24:9: 24:24
        scope 2 {
            debug guard_count => _0;     // in scope 2 at ui/or-patterns/search-via-bindings.rs:24:9: 24:24
            let _6: bool;                // in scope 2 at ui/or-patterns/search-via-bindings.rs:26:11: 26:12
            let _7: &bool;               // in scope 2 at ui/or-patterns/search-via-bindings.rs:26:11: 26:12
            let _8: bool;                // in scope 2 at ui/or-patterns/search-via-bindings.rs:26:19: 26:20
            let _9: &bool;               // in scope 2 at ui/or-patterns/search-via-bindings.rs:26:19: 26:20
            let _10: bool;               // in scope 2 at ui/or-patterns/search-via-bindings.rs:26:31: 26:32
            let _11: &bool;              // in scope 2 at ui/or-patterns/search-via-bindings.rs:26:31: 26:32
            scope 3 {
                debug a => _6;           // in scope 3 at ui/or-patterns/search-via-bindings.rs:26:11: 26:12
                debug a => _7;           // in scope 3 at ui/or-patterns/search-via-bindings.rs:26:11: 26:12
                debug b => _8;           // in scope 3 at ui/or-patterns/search-via-bindings.rs:26:19: 26:20
                debug b => _9;           // in scope 3 at ui/or-patterns/search-via-bindings.rs:26:19: 26:20
                debug c => _10;          // in scope 3 at ui/or-patterns/search-via-bindings.rs:26:31: 26:32
                debug c => _11;          // in scope 3 at ui/or-patterns/search-via-bindings.rs:26:31: 26:32
            }
        }
    }

    bb0: {
        _3 = const (false, true);        // scope 0 at ui/or-patterns/search-via-bindings.rs:23:14: 23:27
        _4 = const (false, true);        // scope 0 at ui/or-patterns/search-via-bindings.rs:23:29: 23:42
        _5 = const (false, true);        // scope 0 at ui/or-patterns/search-via-bindings.rs:23:44: 23:57
        _2 = (move _3, move _4, move _5); // scope 0 at ui/or-patterns/search-via-bindings.rs:23:13: 23:58
        _0 = const 0_u32;                // scope 1 at ui/or-patterns/search-via-bindings.rs:24:27: 24:28
        _7 = &((_2.0: (bool, bool)).0: bool); // scope 2 at ui/or-patterns/search-via-bindings.rs:26:11: 26:12
        _9 = &((_2.1: (bool, bool)).0: bool); // scope 2 at ui/or-patterns/search-via-bindings.rs:26:19: 26:20
        _11 = &((_2.2: (bool, bool)).0: bool); // scope 2 at ui/or-patterns/search-via-bindings.rs:26:31: 26:32
        _13 = CheckedAdd(_0, const 1_u32); // scope 2 at ui/or-patterns/search-via-bindings.rs:35:17: 35:33
        assert(!move (_13.1: bool), "attempt to compute `{} + {}`, which would overflow", _0, const 1_u32) -> bb10; // scope 2 at ui/or-patterns/search-via-bindings.rs:35:17: 35:33
    }

    bb1: {
        switchInt(((_2.2: (bool, bool)).1: bool)) -> [0: bb2, otherwise: bb13]; // scope 2 at ui/or-patterns/search-via-bindings.rs:25:5: 25:12
    }

    bb2: {
        switchInt(((_2.2: (bool, bool)).0: bool)) -> [0: bb17, otherwise: bb3]; // scope 2 at ui/or-patterns/search-via-bindings.rs:25:5: 25:12
    }

    bb3: {
        switchInt(((_2.2: (bool, bool)).1: bool)) -> [0: bb4, otherwise: bb21]; // scope 2 at ui/or-patterns/search-via-bindings.rs:25:5: 25:12
    }

    bb4: {
        switchInt(((_2.2: (bool, bool)).0: bool)) -> [0: bb25, otherwise: bb5]; // scope 2 at ui/or-patterns/search-via-bindings.rs:25:5: 25:12
    }

    bb5: {
        switchInt(((_2.2: (bool, bool)).1: bool)) -> [0: bb6, otherwise: bb29]; // scope 2 at ui/or-patterns/search-via-bindings.rs:25:5: 25:12
    }

    bb6: {
        switchInt(((_2.2: (bool, bool)).0: bool)) -> [0: bb33, otherwise: bb7]; // scope 2 at ui/or-patterns/search-via-bindings.rs:25:5: 25:12
    }

    bb7: {
        switchInt(((_2.2: (bool, bool)).1: bool)) -> [0: bb8, otherwise: bb37]; // scope 2 at ui/or-patterns/search-via-bindings.rs:25:5: 25:12
    }

    bb8: {
        _76 = core::panicking::panic(const "internal error: entered unreachable code"); // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/panic.rs:68:9: 68:77
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/panic.rs:68:9: 68:33
                                         // + literal: Const { ty: fn(&'static str) -> ! {core::panicking::panic}, val: Value(<ZST>) }
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/panic.rs:68:34: 68:76
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
    }

    bb9: {
        return;                          // scope 0 at ui/or-patterns/search-via-bindings.rs:43:2: 43:2
    }

    bb10: {
        _0 = move (_13.0: u32);          // scope 2 at ui/or-patterns/search-via-bindings.rs:35:17: 35:33
        _16 = (*_7);                     // scope 2 at ui/or-patterns/search-via-bindings.rs:36:18: 36:19
        _17 = (*_9);                     // scope 2 at ui/or-patterns/search-via-bindings.rs:36:21: 36:22
        _18 = (*_11);                    // scope 2 at ui/or-patterns/search-via-bindings.rs:36:24: 36:25
        _15 = (move _16, move _17, move _18); // scope 2 at ui/or-patterns/search-via-bindings.rs:36:17: 36:26
        _14 = &_15;                      // scope 2 at ui/or-patterns/search-via-bindings.rs:36:17: 36:26
        _19 = &_1;                       // scope 2 at ui/or-patterns/search-via-bindings.rs:36:30: 36:36
        _12 = <(bool, bool, bool) as PartialEq>::eq(move _14, move _19) -> bb11; // scope 2 at ui/or-patterns/search-via-bindings.rs:36:17: 36:36
                                         // mir::Constant
                                         // + span: ui/or-patterns/search-via-bindings.rs:36:17: 36:36
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a (bool, bool, bool), &'b (bool, bool, bool)) -> bool {<(bool, bool, bool) as PartialEq>::eq}, val: Value(<ZST>) }
    }

    bb11: {
        switchInt(move _12) -> [0: bb1, otherwise: bb12]; // scope 2 at ui/or-patterns/search-via-bindings.rs:34:16: 37:14
    }

    bb12: {
        _6 = ((_2.0: (bool, bool)).0: bool); // scope 2 at ui/or-patterns/search-via-bindings.rs:26:11: 26:12
        _8 = ((_2.1: (bool, bool)).0: bool); // scope 2 at ui/or-patterns/search-via-bindings.rs:26:19: 26:20
        _10 = ((_2.2: (bool, bool)).0: bool); // scope 2 at ui/or-patterns/search-via-bindings.rs:26:31: 26:32
        goto -> bb9;                     // scope 2 at ui/or-patterns/search-via-bindings.rs:25:5: 42:6
    }

    bb13: {
        _7 = &((_2.0: (bool, bool)).0: bool); // scope 2 at ui/or-patterns/search-via-bindings.rs:27:13: 27:14
        _9 = &((_2.1: (bool, bool)).0: bool); // scope 2 at ui/or-patterns/search-via-bindings.rs:27:21: 27:22
        _11 = &((_2.2: (bool, bool)).1: bool); // scope 2 at ui/or-patterns/search-via-bindings.rs:27:36: 27:37
        _21 = CheckedAdd(_0, const 1_u32); // scope 2 at ui/or-patterns/search-via-bindings.rs:35:17: 35:33
        assert(!move (_21.1: bool), "attempt to compute `{} + {}`, which would overflow", _0, const 1_u32) -> bb14; // scope 2 at ui/or-patterns/search-via-bindings.rs:35:17: 35:33
    }

    bb14: {
        _0 = move (_21.0: u32);          // scope 2 at ui/or-patterns/search-via-bindings.rs:35:17: 35:33
        _24 = (*_7);                     // scope 2 at ui/or-patterns/search-via-bindings.rs:36:18: 36:19
        _25 = (*_9);                     // scope 2 at ui/or-patterns/search-via-bindings.rs:36:21: 36:22
        _26 = (*_11);                    // scope 2 at ui/or-patterns/search-via-bindings.rs:36:24: 36:25
        _23 = (move _24, move _25, move _26); // scope 2 at ui/or-patterns/search-via-bindings.rs:36:17: 36:26
        _22 = &_23;                      // scope 2 at ui/or-patterns/search-via-bindings.rs:36:17: 36:26
        _27 = &_1;                       // scope 2 at ui/or-patterns/search-via-bindings.rs:36:30: 36:36
        _20 = <(bool, bool, bool) as PartialEq>::eq(move _22, move _27) -> bb15; // scope 2 at ui/or-patterns/search-via-bindings.rs:36:17: 36:36
                                         // mir::Constant
                                         // + span: ui/or-patterns/search-via-bindings.rs:36:17: 36:36
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a (bool, bool, bool), &'b (bool, bool, bool)) -> bool {<(bool, bool, bool) as PartialEq>::eq}, val: Value(<ZST>) }
    }

    bb15: {
        switchInt(move _20) -> [0: bb2, otherwise: bb16]; // scope 2 at ui/or-patterns/search-via-bindings.rs:34:16: 37:14
    }

    bb16: {
        _6 = ((_2.0: (bool, bool)).0: bool); // scope 2 at ui/or-patterns/search-via-bindings.rs:27:13: 27:14
        _8 = ((_2.1: (bool, bool)).0: bool); // scope 2 at ui/or-patterns/search-via-bindings.rs:27:21: 27:22
        _10 = ((_2.2: (bool, bool)).1: bool); // scope 2 at ui/or-patterns/search-via-bindings.rs:27:36: 27:37
        goto -> bb9;                     // scope 2 at ui/or-patterns/search-via-bindings.rs:25:5: 42:6
    }

    bb17: {
        _7 = &((_2.0: (bool, bool)).0: bool); // scope 2 at ui/or-patterns/search-via-bindings.rs:28:13: 28:14
        _9 = &((_2.1: (bool, bool)).1: bool); // scope 2 at ui/or-patterns/search-via-bindings.rs:28:24: 28:25
        _11 = &((_2.2: (bool, bool)).0: bool); // scope 2 at ui/or-patterns/search-via-bindings.rs:28:33: 28:34
        _29 = CheckedAdd(_0, const 1_u32); // scope 2 at ui/or-patterns/search-via-bindings.rs:35:17: 35:33
        assert(!move (_29.1: bool), "attempt to compute `{} + {}`, which would overflow", _0, const 1_u32) -> bb18; // scope 2 at ui/or-patterns/search-via-bindings.rs:35:17: 35:33
    }

    bb18: {
        _0 = move (_29.0: u32);          // scope 2 at ui/or-patterns/search-via-bindings.rs:35:17: 35:33
        _32 = (*_7);                     // scope 2 at ui/or-patterns/search-via-bindings.rs:36:18: 36:19
        _33 = (*_9);                     // scope 2 at ui/or-patterns/search-via-bindings.rs:36:21: 36:22
        _34 = (*_11);                    // scope 2 at ui/or-patterns/search-via-bindings.rs:36:24: 36:25
        _31 = (move _32, move _33, move _34); // scope 2 at ui/or-patterns/search-via-bindings.rs:36:17: 36:26
        _30 = &_31;                      // scope 2 at ui/or-patterns/search-via-bindings.rs:36:17: 36:26
        _35 = &_1;                       // scope 2 at ui/or-patterns/search-via-bindings.rs:36:30: 36:36
        _28 = <(bool, bool, bool) as PartialEq>::eq(move _30, move _35) -> bb19; // scope 2 at ui/or-patterns/search-via-bindings.rs:36:17: 36:36
                                         // mir::Constant
                                         // + span: ui/or-patterns/search-via-bindings.rs:36:17: 36:36
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a (bool, bool, bool), &'b (bool, bool, bool)) -> bool {<(bool, bool, bool) as PartialEq>::eq}, val: Value(<ZST>) }
    }

    bb19: {
        switchInt(move _28) -> [0: bb3, otherwise: bb20]; // scope 2 at ui/or-patterns/search-via-bindings.rs:34:16: 37:14
    }

    bb20: {
        _6 = ((_2.0: (bool, bool)).0: bool); // scope 2 at ui/or-patterns/search-via-bindings.rs:28:13: 28:14
        _8 = ((_2.1: (bool, bool)).1: bool); // scope 2 at ui/or-patterns/search-via-bindings.rs:28:24: 28:25
        _10 = ((_2.2: (bool, bool)).0: bool); // scope 2 at ui/or-patterns/search-via-bindings.rs:28:33: 28:34
        goto -> bb9;                     // scope 2 at ui/or-patterns/search-via-bindings.rs:25:5: 42:6
    }

    bb21: {
        _7 = &((_2.0: (bool, bool)).0: bool); // scope 2 at ui/or-patterns/search-via-bindings.rs:29:13: 29:14
        _9 = &((_2.1: (bool, bool)).1: bool); // scope 2 at ui/or-patterns/search-via-bindings.rs:29:24: 29:25
        _11 = &((_2.2: (bool, bool)).1: bool); // scope 2 at ui/or-patterns/search-via-bindings.rs:29:36: 29:37
        _37 = CheckedAdd(_0, const 1_u32); // scope 2 at ui/or-patterns/search-via-bindings.rs:35:17: 35:33
        assert(!move (_37.1: bool), "attempt to compute `{} + {}`, which would overflow", _0, const 1_u32) -> bb22; // scope 2 at ui/or-patterns/search-via-bindings.rs:35:17: 35:33
    }

    bb22: {
        _0 = move (_37.0: u32);          // scope 2 at ui/or-patterns/search-via-bindings.rs:35:17: 35:33
        _40 = (*_7);                     // scope 2 at ui/or-patterns/search-via-bindings.rs:36:18: 36:19
        _41 = (*_9);                     // scope 2 at ui/or-patterns/search-via-bindings.rs:36:21: 36:22
        _42 = (*_11);                    // scope 2 at ui/or-patterns/search-via-bindings.rs:36:24: 36:25
        _39 = (move _40, move _41, move _42); // scope 2 at ui/or-patterns/search-via-bindings.rs:36:17: 36:26
        _38 = &_39;                      // scope 2 at ui/or-patterns/search-via-bindings.rs:36:17: 36:26
        _43 = &_1;                       // scope 2 at ui/or-patterns/search-via-bindings.rs:36:30: 36:36
        _36 = <(bool, bool, bool) as PartialEq>::eq(move _38, move _43) -> bb23; // scope 2 at ui/or-patterns/search-via-bindings.rs:36:17: 36:36
                                         // mir::Constant
                                         // + span: ui/or-patterns/search-via-bindings.rs:36:17: 36:36
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a (bool, bool, bool), &'b (bool, bool, bool)) -> bool {<(bool, bool, bool) as PartialEq>::eq}, val: Value(<ZST>) }
    }

    bb23: {
        switchInt(move _36) -> [0: bb4, otherwise: bb24]; // scope 2 at ui/or-patterns/search-via-bindings.rs:34:16: 37:14
    }

    bb24: {
        _6 = ((_2.0: (bool, bool)).0: bool); // scope 2 at ui/or-patterns/search-via-bindings.rs:29:13: 29:14
        _8 = ((_2.1: (bool, bool)).1: bool); // scope 2 at ui/or-patterns/search-via-bindings.rs:29:24: 29:25
        _10 = ((_2.2: (bool, bool)).1: bool); // scope 2 at ui/or-patterns/search-via-bindings.rs:29:36: 29:37
        goto -> bb9;                     // scope 2 at ui/or-patterns/search-via-bindings.rs:25:5: 42:6
    }

    bb25: {
        _7 = &((_2.0: (bool, bool)).1: bool); // scope 2 at ui/or-patterns/search-via-bindings.rs:30:16: 30:17
        _9 = &((_2.1: (bool, bool)).0: bool); // scope 2 at ui/or-patterns/search-via-bindings.rs:30:21: 30:22
        _11 = &((_2.2: (bool, bool)).0: bool); // scope 2 at ui/or-patterns/search-via-bindings.rs:30:33: 30:34
        _45 = CheckedAdd(_0, const 1_u32); // scope 2 at ui/or-patterns/search-via-bindings.rs:35:17: 35:33
        assert(!move (_45.1: bool), "attempt to compute `{} + {}`, which would overflow", _0, const 1_u32) -> bb26; // scope 2 at ui/or-patterns/search-via-bindings.rs:35:17: 35:33
    }

    bb26: {
        _0 = move (_45.0: u32);          // scope 2 at ui/or-patterns/search-via-bindings.rs:35:17: 35:33
        _48 = (*_7);                     // scope 2 at ui/or-patterns/search-via-bindings.rs:36:18: 36:19
        _49 = (*_9);                     // scope 2 at ui/or-patterns/search-via-bindings.rs:36:21: 36:22
        _50 = (*_11);                    // scope 2 at ui/or-patterns/search-via-bindings.rs:36:24: 36:25
        _47 = (move _48, move _49, move _50); // scope 2 at ui/or-patterns/search-via-bindings.rs:36:17: 36:26
        _46 = &_47;                      // scope 2 at ui/or-patterns/search-via-bindings.rs:36:17: 36:26
        _51 = &_1;                       // scope 2 at ui/or-patterns/search-via-bindings.rs:36:30: 36:36
        _44 = <(bool, bool, bool) as PartialEq>::eq(move _46, move _51) -> bb27; // scope 2 at ui/or-patterns/search-via-bindings.rs:36:17: 36:36
                                         // mir::Constant
                                         // + span: ui/or-patterns/search-via-bindings.rs:36:17: 36:36
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a (bool, bool, bool), &'b (bool, bool, bool)) -> bool {<(bool, bool, bool) as PartialEq>::eq}, val: Value(<ZST>) }
    }

    bb27: {
        switchInt(move _44) -> [0: bb5, otherwise: bb28]; // scope 2 at ui/or-patterns/search-via-bindings.rs:34:16: 37:14
    }

    bb28: {
        _6 = ((_2.0: (bool, bool)).1: bool); // scope 2 at ui/or-patterns/search-via-bindings.rs:30:16: 30:17
        _8 = ((_2.1: (bool, bool)).0: bool); // scope 2 at ui/or-patterns/search-via-bindings.rs:30:21: 30:22
        _10 = ((_2.2: (bool, bool)).0: bool); // scope 2 at ui/or-patterns/search-via-bindings.rs:30:33: 30:34
        goto -> bb9;                     // scope 2 at ui/or-patterns/search-via-bindings.rs:25:5: 42:6
    }

    bb29: {
        _7 = &((_2.0: (bool, bool)).1: bool); // scope 2 at ui/or-patterns/search-via-bindings.rs:31:16: 31:17
        _9 = &((_2.1: (bool, bool)).0: bool); // scope 2 at ui/or-patterns/search-via-bindings.rs:31:21: 31:22
        _11 = &((_2.2: (bool, bool)).1: bool); // scope 2 at ui/or-patterns/search-via-bindings.rs:31:36: 31:37
        _53 = CheckedAdd(_0, const 1_u32); // scope 2 at ui/or-patterns/search-via-bindings.rs:35:17: 35:33
        assert(!move (_53.1: bool), "attempt to compute `{} + {}`, which would overflow", _0, const 1_u32) -> bb30; // scope 2 at ui/or-patterns/search-via-bindings.rs:35:17: 35:33
    }

    bb30: {
        _0 = move (_53.0: u32);          // scope 2 at ui/or-patterns/search-via-bindings.rs:35:17: 35:33
        _56 = (*_7);                     // scope 2 at ui/or-patterns/search-via-bindings.rs:36:18: 36:19
        _57 = (*_9);                     // scope 2 at ui/or-patterns/search-via-bindings.rs:36:21: 36:22
        _58 = (*_11);                    // scope 2 at ui/or-patterns/search-via-bindings.rs:36:24: 36:25
        _55 = (move _56, move _57, move _58); // scope 2 at ui/or-patterns/search-via-bindings.rs:36:17: 36:26
        _54 = &_55;                      // scope 2 at ui/or-patterns/search-via-bindings.rs:36:17: 36:26
        _59 = &_1;                       // scope 2 at ui/or-patterns/search-via-bindings.rs:36:30: 36:36
        _52 = <(bool, bool, bool) as PartialEq>::eq(move _54, move _59) -> bb31; // scope 2 at ui/or-patterns/search-via-bindings.rs:36:17: 36:36
                                         // mir::Constant
                                         // + span: ui/or-patterns/search-via-bindings.rs:36:17: 36:36
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a (bool, bool, bool), &'b (bool, bool, bool)) -> bool {<(bool, bool, bool) as PartialEq>::eq}, val: Value(<ZST>) }
    }

    bb31: {
        switchInt(move _52) -> [0: bb6, otherwise: bb32]; // scope 2 at ui/or-patterns/search-via-bindings.rs:34:16: 37:14
    }

    bb32: {
        _6 = ((_2.0: (bool, bool)).1: bool); // scope 2 at ui/or-patterns/search-via-bindings.rs:31:16: 31:17
        _8 = ((_2.1: (bool, bool)).0: bool); // scope 2 at ui/or-patterns/search-via-bindings.rs:31:21: 31:22
        _10 = ((_2.2: (bool, bool)).1: bool); // scope 2 at ui/or-patterns/search-via-bindings.rs:31:36: 31:37
        goto -> bb9;                     // scope 2 at ui/or-patterns/search-via-bindings.rs:25:5: 42:6
    }

    bb33: {
        _7 = &((_2.0: (bool, bool)).1: bool); // scope 2 at ui/or-patterns/search-via-bindings.rs:32:16: 32:17
        _9 = &((_2.1: (bool, bool)).1: bool); // scope 2 at ui/or-patterns/search-via-bindings.rs:32:24: 32:25
        _11 = &((_2.2: (bool, bool)).0: bool); // scope 2 at ui/or-patterns/search-via-bindings.rs:32:33: 32:34
        _61 = CheckedAdd(_0, const 1_u32); // scope 2 at ui/or-patterns/search-via-bindings.rs:35:17: 35:33
        assert(!move (_61.1: bool), "attempt to compute `{} + {}`, which would overflow", _0, const 1_u32) -> bb34; // scope 2 at ui/or-patterns/search-via-bindings.rs:35:17: 35:33
    }

    bb34: {
        _0 = move (_61.0: u32);          // scope 2 at ui/or-patterns/search-via-bindings.rs:35:17: 35:33
        _64 = (*_7);                     // scope 2 at ui/or-patterns/search-via-bindings.rs:36:18: 36:19
        _65 = (*_9);                     // scope 2 at ui/or-patterns/search-via-bindings.rs:36:21: 36:22
        _66 = (*_11);                    // scope 2 at ui/or-patterns/search-via-bindings.rs:36:24: 36:25
        _63 = (move _64, move _65, move _66); // scope 2 at ui/or-patterns/search-via-bindings.rs:36:17: 36:26
        _62 = &_63;                      // scope 2 at ui/or-patterns/search-via-bindings.rs:36:17: 36:26
        _67 = &_1;                       // scope 2 at ui/or-patterns/search-via-bindings.rs:36:30: 36:36
        _60 = <(bool, bool, bool) as PartialEq>::eq(move _62, move _67) -> bb35; // scope 2 at ui/or-patterns/search-via-bindings.rs:36:17: 36:36
                                         // mir::Constant
                                         // + span: ui/or-patterns/search-via-bindings.rs:36:17: 36:36
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a (bool, bool, bool), &'b (bool, bool, bool)) -> bool {<(bool, bool, bool) as PartialEq>::eq}, val: Value(<ZST>) }
    }

    bb35: {
        switchInt(move _60) -> [0: bb7, otherwise: bb36]; // scope 2 at ui/or-patterns/search-via-bindings.rs:34:16: 37:14
    }

    bb36: {
        _6 = ((_2.0: (bool, bool)).1: bool); // scope 2 at ui/or-patterns/search-via-bindings.rs:32:16: 32:17
        _8 = ((_2.1: (bool, bool)).1: bool); // scope 2 at ui/or-patterns/search-via-bindings.rs:32:24: 32:25
        _10 = ((_2.2: (bool, bool)).0: bool); // scope 2 at ui/or-patterns/search-via-bindings.rs:32:33: 32:34
        goto -> bb9;                     // scope 2 at ui/or-patterns/search-via-bindings.rs:25:5: 42:6
    }

    bb37: {
        _7 = &((_2.0: (bool, bool)).1: bool); // scope 2 at ui/or-patterns/search-via-bindings.rs:33:16: 33:17
        _9 = &((_2.1: (bool, bool)).1: bool); // scope 2 at ui/or-patterns/search-via-bindings.rs:33:24: 33:25
        _11 = &((_2.2: (bool, bool)).1: bool); // scope 2 at ui/or-patterns/search-via-bindings.rs:33:36: 33:37
        _69 = CheckedAdd(_0, const 1_u32); // scope 2 at ui/or-patterns/search-via-bindings.rs:35:17: 35:33
        assert(!move (_69.1: bool), "attempt to compute `{} + {}`, which would overflow", _0, const 1_u32) -> bb38; // scope 2 at ui/or-patterns/search-via-bindings.rs:35:17: 35:33
    }

    bb38: {
        _0 = move (_69.0: u32);          // scope 2 at ui/or-patterns/search-via-bindings.rs:35:17: 35:33
        _72 = (*_7);                     // scope 2 at ui/or-patterns/search-via-bindings.rs:36:18: 36:19
        _73 = (*_9);                     // scope 2 at ui/or-patterns/search-via-bindings.rs:36:21: 36:22
        _74 = (*_11);                    // scope 2 at ui/or-patterns/search-via-bindings.rs:36:24: 36:25
        _71 = (move _72, move _73, move _74); // scope 2 at ui/or-patterns/search-via-bindings.rs:36:17: 36:26
        _70 = &_71;                      // scope 2 at ui/or-patterns/search-via-bindings.rs:36:17: 36:26
        _75 = &_1;                       // scope 2 at ui/or-patterns/search-via-bindings.rs:36:30: 36:36
        _68 = <(bool, bool, bool) as PartialEq>::eq(move _70, move _75) -> bb39; // scope 2 at ui/or-patterns/search-via-bindings.rs:36:17: 36:36
                                         // mir::Constant
                                         // + span: ui/or-patterns/search-via-bindings.rs:36:17: 36:36
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a (bool, bool, bool), &'b (bool, bool, bool)) -> bool {<(bool, bool, bool) as PartialEq>::eq}, val: Value(<ZST>) }
    }

    bb39: {
        switchInt(move _68) -> [0: bb8, otherwise: bb40]; // scope 2 at ui/or-patterns/search-via-bindings.rs:34:16: 37:14
    }

    bb40: {
        _6 = ((_2.0: (bool, bool)).1: bool); // scope 2 at ui/or-patterns/search-via-bindings.rs:33:16: 33:17
        _8 = ((_2.1: (bool, bool)).1: bool); // scope 2 at ui/or-patterns/search-via-bindings.rs:33:24: 33:25
        _10 = ((_2.2: (bool, bool)).1: bool); // scope 2 at ui/or-patterns/search-via-bindings.rs:33:36: 33:37
        goto -> bb9;                     // scope 2 at ui/or-patterns/search-via-bindings.rs:25:5: 42:6
    }
}

fn main() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/or-patterns/search-via-bindings.rs:45:11: 45:11
    let mut _1: (&u32, &u32);            // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _2: &u32;                    // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let _3: u32;                         // in scope 0 at ui/or-patterns/search-via-bindings.rs:46:16: 46:45
    let mut _4: (bool, bool, bool);      // in scope 0 at ui/or-patterns/search-via-bindings.rs:46:23: 46:44
    let mut _5: &u32;                    // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let _6: &u32;                        // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
    let _7: &u32;                        // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
    let mut _8: bool;                    // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    let mut _9: bool;                    // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
    let mut _10: u32;                    // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
    let mut _11: u32;                    // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
    let _13: !;                          // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
    let mut _14: core::panicking::AssertKind; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
    let mut _15: &u32;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let _16: &u32;                       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let mut _17: &u32;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let _18: &u32;                       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let mut _19: std::option::Option<std::fmt::Arguments<'_>>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
    let mut _20: (&u32, &u32);           // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _21: &u32;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let _22: u32;                        // in scope 0 at ui/or-patterns/search-via-bindings.rs:47:16: 47:44
    let mut _23: (bool, bool, bool);     // in scope 0 at ui/or-patterns/search-via-bindings.rs:47:23: 47:43
    let mut _24: &u32;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let _25: &u32;                       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
    let _26: &u32;                       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
    let mut _27: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    let mut _28: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
    let mut _29: u32;                    // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
    let mut _30: u32;                    // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
    let _32: !;                          // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
    let mut _33: core::panicking::AssertKind; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
    let mut _34: &u32;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let _35: &u32;                       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let mut _36: &u32;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let _37: &u32;                       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let mut _38: std::option::Option<std::fmt::Arguments<'_>>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
    let mut _39: (&u32, &u32);           // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _40: &u32;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let _41: u32;                        // in scope 0 at ui/or-patterns/search-via-bindings.rs:48:16: 48:44
    let mut _42: (bool, bool, bool);     // in scope 0 at ui/or-patterns/search-via-bindings.rs:48:23: 48:43
    let mut _43: &u32;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let _44: &u32;                       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
    let _45: &u32;                       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
    let mut _46: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    let mut _47: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
    let mut _48: u32;                    // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
    let mut _49: u32;                    // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
    let _51: !;                          // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
    let mut _52: core::panicking::AssertKind; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
    let mut _53: &u32;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let _54: &u32;                       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let mut _55: &u32;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let _56: &u32;                       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let mut _57: std::option::Option<std::fmt::Arguments<'_>>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
    let mut _58: (&u32, &u32);           // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _59: &u32;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let _60: u32;                        // in scope 0 at ui/or-patterns/search-via-bindings.rs:49:16: 49:43
    let mut _61: (bool, bool, bool);     // in scope 0 at ui/or-patterns/search-via-bindings.rs:49:23: 49:42
    let mut _62: &u32;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let _63: &u32;                       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
    let _64: &u32;                       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
    let mut _65: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    let mut _66: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
    let mut _67: u32;                    // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
    let mut _68: u32;                    // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
    let _70: !;                          // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
    let mut _71: core::panicking::AssertKind; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
    let mut _72: &u32;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let _73: &u32;                       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let mut _74: &u32;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let _75: &u32;                       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let mut _76: std::option::Option<std::fmt::Arguments<'_>>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
    let mut _77: (&u32, &u32);           // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _78: &u32;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let _79: u32;                        // in scope 0 at ui/or-patterns/search-via-bindings.rs:50:16: 50:44
    let mut _80: (bool, bool, bool);     // in scope 0 at ui/or-patterns/search-via-bindings.rs:50:23: 50:43
    let mut _81: &u32;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let _82: &u32;                       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
    let _83: &u32;                       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
    let mut _84: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    let mut _85: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
    let mut _86: u32;                    // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
    let mut _87: u32;                    // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
    let _89: !;                          // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
    let mut _90: core::panicking::AssertKind; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
    let mut _91: &u32;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let _92: &u32;                       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let mut _93: &u32;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let _94: &u32;                       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let mut _95: std::option::Option<std::fmt::Arguments<'_>>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
    let mut _96: (&u32, &u32);           // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _97: &u32;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let _98: u32;                        // in scope 0 at ui/or-patterns/search-via-bindings.rs:51:16: 51:43
    let mut _99: (bool, bool, bool);     // in scope 0 at ui/or-patterns/search-via-bindings.rs:51:23: 51:42
    let mut _100: &u32;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let _101: &u32;                      // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
    let _102: &u32;                      // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
    let mut _103: bool;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    let mut _104: bool;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
    let mut _105: u32;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
    let mut _106: u32;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
    let _108: !;                         // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
    let mut _109: core::panicking::AssertKind; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
    let mut _110: &u32;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let _111: &u32;                      // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let mut _112: &u32;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let _113: &u32;                      // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let mut _114: std::option::Option<std::fmt::Arguments<'_>>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
    let mut _115: (&u32, &u32);          // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _116: &u32;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let _117: u32;                       // in scope 0 at ui/or-patterns/search-via-bindings.rs:52:16: 52:43
    let mut _118: (bool, bool, bool);    // in scope 0 at ui/or-patterns/search-via-bindings.rs:52:23: 52:42
    let mut _119: &u32;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let _120: &u32;                      // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
    let _121: &u32;                      // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
    let mut _122: bool;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    let mut _123: bool;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
    let mut _124: u32;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
    let mut _125: u32;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
    let _127: !;                         // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
    let mut _128: core::panicking::AssertKind; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
    let mut _129: &u32;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let _130: &u32;                      // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let mut _131: &u32;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let _132: &u32;                      // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let mut _133: std::option::Option<std::fmt::Arguments<'_>>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
    let mut _134: (&u32, &u32);          // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _135: &u32;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let _136: u32;                       // in scope 0 at ui/or-patterns/search-via-bindings.rs:53:16: 53:42
    let mut _137: (bool, bool, bool);    // in scope 0 at ui/or-patterns/search-via-bindings.rs:53:23: 53:41
    let mut _138: &u32;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let _139: &u32;                      // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
    let _140: &u32;                      // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
    let mut _141: bool;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    let mut _142: bool;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
    let mut _143: u32;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
    let mut _144: u32;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
    let _146: !;                         // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
    let mut _147: core::panicking::AssertKind; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
    let mut _148: &u32;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let _149: &u32;                      // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let mut _150: &u32;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let _151: &u32;                      // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let mut _152: std::option::Option<std::fmt::Arguments<'_>>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
    let mut _153: (&u32, &u32);          // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _154: &u32;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let _155: u32;                       // in scope 0 at ui/or-patterns/search-via-bindings.rs:55:16: 55:55
    let mut _156: (bool, bool, bool);    // in scope 0 at ui/or-patterns/search-via-bindings.rs:55:33: 55:54
    let mut _157: &u32;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let _158: &u32;                      // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
    let _159: &u32;                      // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
    let mut _160: bool;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    let mut _161: bool;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
    let mut _162: u32;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
    let mut _163: u32;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
    let _165: !;                         // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
    let mut _166: core::panicking::AssertKind; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
    let mut _167: &u32;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let _168: &u32;                      // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let mut _169: &u32;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let _170: &u32;                      // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let mut _171: std::option::Option<std::fmt::Arguments<'_>>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
    let mut _172: (&u32, &u32);          // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _173: &u32;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let _174: u32;                       // in scope 0 at ui/or-patterns/search-via-bindings.rs:56:16: 56:54
    let mut _175: (bool, bool, bool);    // in scope 0 at ui/or-patterns/search-via-bindings.rs:56:33: 56:53
    let mut _176: &u32;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let _177: &u32;                      // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
    let _178: &u32;                      // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
    let mut _179: bool;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    let mut _180: bool;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
    let mut _181: u32;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
    let mut _182: u32;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
    let _184: !;                         // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
    let mut _185: core::panicking::AssertKind; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
    let mut _186: &u32;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let _187: &u32;                      // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let mut _188: &u32;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let _189: &u32;                      // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let mut _190: std::option::Option<std::fmt::Arguments<'_>>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
    let mut _191: (&u32, &u32);          // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _192: &u32;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let _193: u32;                       // in scope 0 at ui/or-patterns/search-via-bindings.rs:57:16: 57:54
    let mut _194: (bool, bool, bool);    // in scope 0 at ui/or-patterns/search-via-bindings.rs:57:33: 57:53
    let mut _195: &u32;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let _196: &u32;                      // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
    let _197: &u32;                      // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
    let mut _198: bool;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    let mut _199: bool;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
    let mut _200: u32;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
    let mut _201: u32;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
    let _203: !;                         // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
    let mut _204: core::panicking::AssertKind; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
    let mut _205: &u32;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let _206: &u32;                      // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let mut _207: &u32;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let _208: &u32;                      // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let mut _209: std::option::Option<std::fmt::Arguments<'_>>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
    let mut _210: (&u32, &u32);          // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _211: &u32;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let _212: u32;                       // in scope 0 at ui/or-patterns/search-via-bindings.rs:58:16: 58:53
    let mut _213: (bool, bool, bool);    // in scope 0 at ui/or-patterns/search-via-bindings.rs:58:33: 58:52
    let mut _214: &u32;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let _215: &u32;                      // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
    let _216: &u32;                      // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
    let mut _217: bool;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    let mut _218: bool;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
    let mut _219: u32;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
    let mut _220: u32;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
    let _222: !;                         // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
    let mut _223: core::panicking::AssertKind; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
    let mut _224: &u32;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let _225: &u32;                      // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let mut _226: &u32;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let _227: &u32;                      // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let mut _228: std::option::Option<std::fmt::Arguments<'_>>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
    let mut _229: (&u32, &u32);          // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _230: &u32;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let _231: u32;                       // in scope 0 at ui/or-patterns/search-via-bindings.rs:59:16: 59:54
    let mut _232: (bool, bool, bool);    // in scope 0 at ui/or-patterns/search-via-bindings.rs:59:33: 59:53
    let mut _233: &u32;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let _234: &u32;                      // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
    let _235: &u32;                      // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
    let mut _236: bool;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    let mut _237: bool;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
    let mut _238: u32;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
    let mut _239: u32;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
    let _241: !;                         // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
    let mut _242: core::panicking::AssertKind; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
    let mut _243: &u32;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let _244: &u32;                      // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let mut _245: &u32;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let _246: &u32;                      // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let mut _247: std::option::Option<std::fmt::Arguments<'_>>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
    let mut _248: (&u32, &u32);          // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _249: &u32;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let _250: u32;                       // in scope 0 at ui/or-patterns/search-via-bindings.rs:60:16: 60:53
    let mut _251: (bool, bool, bool);    // in scope 0 at ui/or-patterns/search-via-bindings.rs:60:33: 60:52
    let mut _252: &u32;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let _253: &u32;                      // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
    let _254: &u32;                      // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
    let mut _255: bool;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    let mut _256: bool;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
    let mut _257: u32;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
    let mut _258: u32;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
    let _260: !;                         // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
    let mut _261: core::panicking::AssertKind; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
    let mut _262: &u32;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let _263: &u32;                      // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let mut _264: &u32;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let _265: &u32;                      // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let mut _266: std::option::Option<std::fmt::Arguments<'_>>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
    let mut _267: (&u32, &u32);          // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _268: &u32;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let _269: u32;                       // in scope 0 at ui/or-patterns/search-via-bindings.rs:61:16: 61:53
    let mut _270: (bool, bool, bool);    // in scope 0 at ui/or-patterns/search-via-bindings.rs:61:33: 61:52
    let mut _271: &u32;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let _272: &u32;                      // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
    let _273: &u32;                      // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
    let mut _274: bool;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    let mut _275: bool;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
    let mut _276: u32;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
    let mut _277: u32;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
    let _279: !;                         // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
    let mut _280: core::panicking::AssertKind; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
    let mut _281: &u32;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let _282: &u32;                      // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let mut _283: &u32;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let _284: &u32;                      // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let mut _285: std::option::Option<std::fmt::Arguments<'_>>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
    let mut _286: (&u32, &u32);          // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _287: &u32;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let _288: u32;                       // in scope 0 at ui/or-patterns/search-via-bindings.rs:62:16: 62:52
    let mut _289: (bool, bool, bool);    // in scope 0 at ui/or-patterns/search-via-bindings.rs:62:33: 62:51
    let mut _290: &u32;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let _291: &u32;                      // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
    let _292: &u32;                      // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
    let mut _293: bool;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    let mut _294: bool;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
    let mut _295: u32;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
    let mut _296: u32;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
    let _298: !;                         // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
    let mut _299: core::panicking::AssertKind; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
    let mut _300: &u32;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let _301: &u32;                      // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let mut _302: &u32;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let _303: &u32;                      // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let mut _304: std::option::Option<std::fmt::Arguments<'_>>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
    let mut _305: &u32;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _306: &u32;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _307: &u32;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _308: &u32;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _309: &u32;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _310: &u32;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _311: &u32;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _312: &u32;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _313: &u32;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _314: &u32;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _315: &u32;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _316: &u32;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _317: &u32;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _318: &u32;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _319: &u32;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _320: &u32;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    scope 1 {
        debug left_val => _6;            // in scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        debug right_val => _7;           // in scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        let _12: core::panicking::AssertKind; // in scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
        scope 2 {
            debug kind => _12;           // in scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
        }
    }
    scope 3 {
        debug left_val => _25;           // in scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        debug right_val => _26;          // in scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        let _31: core::panicking::AssertKind; // in scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
        scope 4 {
            debug kind => _31;           // in scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
        }
    }
    scope 5 {
        debug left_val => _44;           // in scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        debug right_val => _45;          // in scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        let _50: core::panicking::AssertKind; // in scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
        scope 6 {
            debug kind => _50;           // in scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
        }
    }
    scope 7 {
        debug left_val => _63;           // in scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        debug right_val => _64;          // in scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        let _69: core::panicking::AssertKind; // in scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
        scope 8 {
            debug kind => _69;           // in scope 8 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
        }
    }
    scope 9 {
        debug left_val => _82;           // in scope 9 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        debug right_val => _83;          // in scope 9 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        let _88: core::panicking::AssertKind; // in scope 9 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
        scope 10 {
            debug kind => _88;           // in scope 10 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
        }
    }
    scope 11 {
        debug left_val => _101;          // in scope 11 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        debug right_val => _102;         // in scope 11 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        let _107: core::panicking::AssertKind; // in scope 11 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
        scope 12 {
            debug kind => _107;          // in scope 12 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
        }
    }
    scope 13 {
        debug left_val => _120;          // in scope 13 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        debug right_val => _121;         // in scope 13 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        let _126: core::panicking::AssertKind; // in scope 13 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
        scope 14 {
            debug kind => _126;          // in scope 14 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
        }
    }
    scope 15 {
        debug left_val => _139;          // in scope 15 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        debug right_val => _140;         // in scope 15 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        let _145: core::panicking::AssertKind; // in scope 15 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
        scope 16 {
            debug kind => _145;          // in scope 16 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
        }
    }
    scope 17 {
        debug left_val => _158;          // in scope 17 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        debug right_val => _159;         // in scope 17 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        let _164: core::panicking::AssertKind; // in scope 17 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
        scope 18 {
            debug kind => _164;          // in scope 18 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
        }
    }
    scope 19 {
        debug left_val => _177;          // in scope 19 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        debug right_val => _178;         // in scope 19 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        let _183: core::panicking::AssertKind; // in scope 19 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
        scope 20 {
            debug kind => _183;          // in scope 20 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
        }
    }
    scope 21 {
        debug left_val => _196;          // in scope 21 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        debug right_val => _197;         // in scope 21 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        let _202: core::panicking::AssertKind; // in scope 21 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
        scope 22 {
            debug kind => _202;          // in scope 22 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
        }
    }
    scope 23 {
        debug left_val => _215;          // in scope 23 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        debug right_val => _216;         // in scope 23 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        let _221: core::panicking::AssertKind; // in scope 23 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
        scope 24 {
            debug kind => _221;          // in scope 24 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
        }
    }
    scope 25 {
        debug left_val => _234;          // in scope 25 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        debug right_val => _235;         // in scope 25 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        let _240: core::panicking::AssertKind; // in scope 25 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
        scope 26 {
            debug kind => _240;          // in scope 26 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
        }
    }
    scope 27 {
        debug left_val => _253;          // in scope 27 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        debug right_val => _254;         // in scope 27 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        let _259: core::panicking::AssertKind; // in scope 27 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
        scope 28 {
            debug kind => _259;          // in scope 28 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
        }
    }
    scope 29 {
        debug left_val => _272;          // in scope 29 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        debug right_val => _273;         // in scope 29 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        let _278: core::panicking::AssertKind; // in scope 29 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
        scope 30 {
            debug kind => _278;          // in scope 30 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
        }
    }
    scope 31 {
        debug left_val => _291;          // in scope 31 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        debug right_val => _292;         // in scope 31 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        let _297: core::panicking::AssertKind; // in scope 31 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
        scope 32 {
            debug kind => _297;          // in scope 32 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
        }
    }

    bb0: {
        _4 = (const false, const false, const false); // scope 0 at ui/or-patterns/search-via-bindings.rs:46:23: 46:44
        _3 = search(move _4) -> bb1;     // scope 0 at ui/or-patterns/search-via-bindings.rs:46:16: 46:45
                                         // mir::Constant
                                         // + span: ui/or-patterns/search-via-bindings.rs:46:16: 46:22
                                         // + literal: Const { ty: fn((bool, bool, bool)) -> u32 {search}, val: Value(<ZST>) }
    }

    bb1: {
        _2 = &_3;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _320 = const _;                  // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // + literal: Const { ty: &u32, val: Unevaluated(main, [], Some(promoted[15])) }
        _5 = _320;                       // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _1 = (move _2, move _5);         // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _6 = (_1.0: &u32);               // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _7 = (_1.1: &u32);               // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _10 = (*_6);                     // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
        _11 = const 1_u32;               // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
        _9 = Eq(move _10, move _11);     // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
        _8 = Not(move _9);               // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
        switchInt(move _8) -> [0: bb3, otherwise: bb2]; // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    }

    bb2: {
        _12 = const core::panicking::AssertKind::Eq; // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _14 = const core::panicking::AssertKind::Eq; // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _16 = _6;                        // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _15 = _16;                       // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _18 = _7;                        // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _17 = _18;                       // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _19 = Option::<Arguments<'_>>::None; // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
        _13 = core::panicking::assert_failed::<u32, u32>(move _14, move _15, move _17, move _19); // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:53
                                         // + literal: Const { ty: for<'a, 'b, 'c> fn(core::panicking::AssertKind, &'a u32, &'b u32, Option<Arguments<'c>>) -> ! {core::panicking::assert_failed::<u32, u32>}, val: Value(<ZST>) }
    }

    bb3: {
        _23 = (const false, const false, const true); // scope 0 at ui/or-patterns/search-via-bindings.rs:47:23: 47:43
        _22 = search(move _23) -> bb4;   // scope 0 at ui/or-patterns/search-via-bindings.rs:47:16: 47:44
                                         // mir::Constant
                                         // + span: ui/or-patterns/search-via-bindings.rs:47:16: 47:22
                                         // + literal: Const { ty: fn((bool, bool, bool)) -> u32 {search}, val: Value(<ZST>) }
    }

    bb4: {
        _21 = &_22;                      // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _319 = const _;                  // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // + literal: Const { ty: &u32, val: Unevaluated(main, [], Some(promoted[14])) }
        _24 = _319;                      // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _20 = (move _21, move _24);      // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _25 = (_20.0: &u32);             // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _26 = (_20.1: &u32);             // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _29 = (*_25);                    // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
        _30 = const 2_u32;               // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
        _28 = Eq(move _29, move _30);    // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
        _27 = Not(move _28);             // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
        switchInt(move _27) -> [0: bb6, otherwise: bb5]; // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    }

    bb5: {
        _31 = const core::panicking::AssertKind::Eq; // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _33 = const core::panicking::AssertKind::Eq; // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _35 = _25;                       // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _34 = _35;                       // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _37 = _26;                       // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _36 = _37;                       // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _38 = Option::<Arguments<'_>>::None; // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
        _32 = core::panicking::assert_failed::<u32, u32>(move _33, move _34, move _36, move _38); // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:53
                                         // + literal: Const { ty: for<'a, 'b, 'c> fn(core::panicking::AssertKind, &'a u32, &'b u32, Option<Arguments<'c>>) -> ! {core::panicking::assert_failed::<u32, u32>}, val: Value(<ZST>) }
    }

    bb6: {
        _42 = (const false, const true, const false); // scope 0 at ui/or-patterns/search-via-bindings.rs:48:23: 48:43
        _41 = search(move _42) -> bb7;   // scope 0 at ui/or-patterns/search-via-bindings.rs:48:16: 48:44
                                         // mir::Constant
                                         // + span: ui/or-patterns/search-via-bindings.rs:48:16: 48:22
                                         // + literal: Const { ty: fn((bool, bool, bool)) -> u32 {search}, val: Value(<ZST>) }
    }

    bb7: {
        _40 = &_41;                      // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _318 = const _;                  // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // + literal: Const { ty: &u32, val: Unevaluated(main, [], Some(promoted[13])) }
        _43 = _318;                      // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _39 = (move _40, move _43);      // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _44 = (_39.0: &u32);             // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _45 = (_39.1: &u32);             // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _48 = (*_44);                    // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
        _49 = const 3_u32;               // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
        _47 = Eq(move _48, move _49);    // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
        _46 = Not(move _47);             // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
        switchInt(move _46) -> [0: bb9, otherwise: bb8]; // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    }

    bb8: {
        _50 = const core::panicking::AssertKind::Eq; // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _52 = const core::panicking::AssertKind::Eq; // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _54 = _44;                       // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _53 = _54;                       // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _56 = _45;                       // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _55 = _56;                       // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _57 = Option::<Arguments<'_>>::None; // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
        _51 = core::panicking::assert_failed::<u32, u32>(move _52, move _53, move _55, move _57); // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:53
                                         // + literal: Const { ty: for<'a, 'b, 'c> fn(core::panicking::AssertKind, &'a u32, &'b u32, Option<Arguments<'c>>) -> ! {core::panicking::assert_failed::<u32, u32>}, val: Value(<ZST>) }
    }

    bb9: {
        _61 = (const false, const true, const true); // scope 0 at ui/or-patterns/search-via-bindings.rs:49:23: 49:42
        _60 = search(move _61) -> bb10;  // scope 0 at ui/or-patterns/search-via-bindings.rs:49:16: 49:43
                                         // mir::Constant
                                         // + span: ui/or-patterns/search-via-bindings.rs:49:16: 49:22
                                         // + literal: Const { ty: fn((bool, bool, bool)) -> u32 {search}, val: Value(<ZST>) }
    }

    bb10: {
        _59 = &_60;                      // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _317 = const _;                  // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // + literal: Const { ty: &u32, val: Unevaluated(main, [], Some(promoted[12])) }
        _62 = _317;                      // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _58 = (move _59, move _62);      // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _63 = (_58.0: &u32);             // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _64 = (_58.1: &u32);             // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _67 = (*_63);                    // scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
        _68 = const 4_u32;               // scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
        _66 = Eq(move _67, move _68);    // scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
        _65 = Not(move _66);             // scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
        switchInt(move _65) -> [0: bb12, otherwise: bb11]; // scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    }

    bb11: {
        _69 = const core::panicking::AssertKind::Eq; // scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _71 = const core::panicking::AssertKind::Eq; // scope 8 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _73 = _63;                       // scope 8 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _72 = _73;                       // scope 8 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _75 = _64;                       // scope 8 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _74 = _75;                       // scope 8 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _76 = Option::<Arguments<'_>>::None; // scope 8 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
        _70 = core::panicking::assert_failed::<u32, u32>(move _71, move _72, move _74, move _76); // scope 8 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:53
                                         // + literal: Const { ty: for<'a, 'b, 'c> fn(core::panicking::AssertKind, &'a u32, &'b u32, Option<Arguments<'c>>) -> ! {core::panicking::assert_failed::<u32, u32>}, val: Value(<ZST>) }
    }

    bb12: {
        _80 = (const true, const false, const false); // scope 0 at ui/or-patterns/search-via-bindings.rs:50:23: 50:43
        _79 = search(move _80) -> bb13;  // scope 0 at ui/or-patterns/search-via-bindings.rs:50:16: 50:44
                                         // mir::Constant
                                         // + span: ui/or-patterns/search-via-bindings.rs:50:16: 50:22
                                         // + literal: Const { ty: fn((bool, bool, bool)) -> u32 {search}, val: Value(<ZST>) }
    }

    bb13: {
        _78 = &_79;                      // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _316 = const _;                  // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // + literal: Const { ty: &u32, val: Unevaluated(main, [], Some(promoted[11])) }
        _81 = _316;                      // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _77 = (move _78, move _81);      // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _82 = (_77.0: &u32);             // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _83 = (_77.1: &u32);             // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _86 = (*_82);                    // scope 9 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
        _87 = const 5_u32;               // scope 9 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
        _85 = Eq(move _86, move _87);    // scope 9 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
        _84 = Not(move _85);             // scope 9 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
        switchInt(move _84) -> [0: bb15, otherwise: bb14]; // scope 9 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    }

    bb14: {
        _88 = const core::panicking::AssertKind::Eq; // scope 9 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _90 = const core::panicking::AssertKind::Eq; // scope 10 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _92 = _82;                       // scope 10 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _91 = _92;                       // scope 10 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _94 = _83;                       // scope 10 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _93 = _94;                       // scope 10 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _95 = Option::<Arguments<'_>>::None; // scope 10 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
        _89 = core::panicking::assert_failed::<u32, u32>(move _90, move _91, move _93, move _95); // scope 10 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:53
                                         // + literal: Const { ty: for<'a, 'b, 'c> fn(core::panicking::AssertKind, &'a u32, &'b u32, Option<Arguments<'c>>) -> ! {core::panicking::assert_failed::<u32, u32>}, val: Value(<ZST>) }
    }

    bb15: {
        _99 = (const true, const false, const true); // scope 0 at ui/or-patterns/search-via-bindings.rs:51:23: 51:42
        _98 = search(move _99) -> bb16;  // scope 0 at ui/or-patterns/search-via-bindings.rs:51:16: 51:43
                                         // mir::Constant
                                         // + span: ui/or-patterns/search-via-bindings.rs:51:16: 51:22
                                         // + literal: Const { ty: fn((bool, bool, bool)) -> u32 {search}, val: Value(<ZST>) }
    }

    bb16: {
        _97 = &_98;                      // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _315 = const _;                  // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // + literal: Const { ty: &u32, val: Unevaluated(main, [], Some(promoted[10])) }
        _100 = _315;                     // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _96 = (move _97, move _100);     // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _101 = (_96.0: &u32);            // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _102 = (_96.1: &u32);            // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _105 = (*_101);                  // scope 11 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
        _106 = const 6_u32;              // scope 11 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
        _104 = Eq(move _105, move _106); // scope 11 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
        _103 = Not(move _104);           // scope 11 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
        switchInt(move _103) -> [0: bb18, otherwise: bb17]; // scope 11 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    }

    bb17: {
        _107 = const core::panicking::AssertKind::Eq; // scope 11 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _109 = const core::panicking::AssertKind::Eq; // scope 12 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _111 = _101;                     // scope 12 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _110 = _111;                     // scope 12 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _113 = _102;                     // scope 12 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _112 = _113;                     // scope 12 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _114 = Option::<Arguments<'_>>::None; // scope 12 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
        _108 = core::panicking::assert_failed::<u32, u32>(move _109, move _110, move _112, move _114); // scope 12 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:53
                                         // + literal: Const { ty: for<'a, 'b, 'c> fn(core::panicking::AssertKind, &'a u32, &'b u32, Option<Arguments<'c>>) -> ! {core::panicking::assert_failed::<u32, u32>}, val: Value(<ZST>) }
    }

    bb18: {
        _118 = (const true, const true, const false); // scope 0 at ui/or-patterns/search-via-bindings.rs:52:23: 52:42
        _117 = search(move _118) -> bb19; // scope 0 at ui/or-patterns/search-via-bindings.rs:52:16: 52:43
                                         // mir::Constant
                                         // + span: ui/or-patterns/search-via-bindings.rs:52:16: 52:22
                                         // + literal: Const { ty: fn((bool, bool, bool)) -> u32 {search}, val: Value(<ZST>) }
    }

    bb19: {
        _116 = &_117;                    // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _314 = const _;                  // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // + literal: Const { ty: &u32, val: Unevaluated(main, [], Some(promoted[9])) }
        _119 = _314;                     // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _115 = (move _116, move _119);   // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _120 = (_115.0: &u32);           // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _121 = (_115.1: &u32);           // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _124 = (*_120);                  // scope 13 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
        _125 = const 7_u32;              // scope 13 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
        _123 = Eq(move _124, move _125); // scope 13 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
        _122 = Not(move _123);           // scope 13 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
        switchInt(move _122) -> [0: bb21, otherwise: bb20]; // scope 13 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    }

    bb20: {
        _126 = const core::panicking::AssertKind::Eq; // scope 13 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _128 = const core::panicking::AssertKind::Eq; // scope 14 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _130 = _120;                     // scope 14 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _129 = _130;                     // scope 14 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _132 = _121;                     // scope 14 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _131 = _132;                     // scope 14 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _133 = Option::<Arguments<'_>>::None; // scope 14 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
        _127 = core::panicking::assert_failed::<u32, u32>(move _128, move _129, move _131, move _133); // scope 14 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:53
                                         // + literal: Const { ty: for<'a, 'b, 'c> fn(core::panicking::AssertKind, &'a u32, &'b u32, Option<Arguments<'c>>) -> ! {core::panicking::assert_failed::<u32, u32>}, val: Value(<ZST>) }
    }

    bb21: {
        _137 = (const true, const true, const true); // scope 0 at ui/or-patterns/search-via-bindings.rs:53:23: 53:41
        _136 = search(move _137) -> bb22; // scope 0 at ui/or-patterns/search-via-bindings.rs:53:16: 53:42
                                         // mir::Constant
                                         // + span: ui/or-patterns/search-via-bindings.rs:53:16: 53:22
                                         // + literal: Const { ty: fn((bool, bool, bool)) -> u32 {search}, val: Value(<ZST>) }
    }

    bb22: {
        _135 = &_136;                    // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _313 = const _;                  // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // + literal: Const { ty: &u32, val: Unevaluated(main, [], Some(promoted[8])) }
        _138 = _313;                     // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _134 = (move _135, move _138);   // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _139 = (_134.0: &u32);           // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _140 = (_134.1: &u32);           // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _143 = (*_139);                  // scope 15 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
        _144 = const 8_u32;              // scope 15 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
        _142 = Eq(move _143, move _144); // scope 15 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
        _141 = Not(move _142);           // scope 15 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
        switchInt(move _141) -> [0: bb24, otherwise: bb23]; // scope 15 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    }

    bb23: {
        _145 = const core::panicking::AssertKind::Eq; // scope 15 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _147 = const core::panicking::AssertKind::Eq; // scope 16 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _149 = _139;                     // scope 16 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _148 = _149;                     // scope 16 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _151 = _140;                     // scope 16 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _150 = _151;                     // scope 16 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _152 = Option::<Arguments<'_>>::None; // scope 16 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
        _146 = core::panicking::assert_failed::<u32, u32>(move _147, move _148, move _150, move _152); // scope 16 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:53
                                         // + literal: Const { ty: for<'a, 'b, 'c> fn(core::panicking::AssertKind, &'a u32, &'b u32, Option<Arguments<'c>>) -> ! {core::panicking::assert_failed::<u32, u32>}, val: Value(<ZST>) }
    }

    bb24: {
        _156 = (const false, const false, const false); // scope 0 at ui/or-patterns/search-via-bindings.rs:55:33: 55:54
        _155 = search_old_style(move _156) -> bb25; // scope 0 at ui/or-patterns/search-via-bindings.rs:55:16: 55:55
                                         // mir::Constant
                                         // + span: ui/or-patterns/search-via-bindings.rs:55:16: 55:32
                                         // + literal: Const { ty: fn((bool, bool, bool)) -> u32 {search_old_style}, val: Value(<ZST>) }
    }

    bb25: {
        _154 = &_155;                    // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _312 = const _;                  // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // + literal: Const { ty: &u32, val: Unevaluated(main, [], Some(promoted[7])) }
        _157 = _312;                     // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _153 = (move _154, move _157);   // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _158 = (_153.0: &u32);           // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _159 = (_153.1: &u32);           // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _162 = (*_158);                  // scope 17 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
        _163 = const 1_u32;              // scope 17 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
        _161 = Eq(move _162, move _163); // scope 17 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
        _160 = Not(move _161);           // scope 17 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
        switchInt(move _160) -> [0: bb27, otherwise: bb26]; // scope 17 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    }

    bb26: {
        _164 = const core::panicking::AssertKind::Eq; // scope 17 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _166 = const core::panicking::AssertKind::Eq; // scope 18 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _168 = _158;                     // scope 18 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _167 = _168;                     // scope 18 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _170 = _159;                     // scope 18 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _169 = _170;                     // scope 18 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _171 = Option::<Arguments<'_>>::None; // scope 18 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
        _165 = core::panicking::assert_failed::<u32, u32>(move _166, move _167, move _169, move _171); // scope 18 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:53
                                         // + literal: Const { ty: for<'a, 'b, 'c> fn(core::panicking::AssertKind, &'a u32, &'b u32, Option<Arguments<'c>>) -> ! {core::panicking::assert_failed::<u32, u32>}, val: Value(<ZST>) }
    }

    bb27: {
        _175 = (const false, const false, const true); // scope 0 at ui/or-patterns/search-via-bindings.rs:56:33: 56:53
        _174 = search_old_style(move _175) -> bb28; // scope 0 at ui/or-patterns/search-via-bindings.rs:56:16: 56:54
                                         // mir::Constant
                                         // + span: ui/or-patterns/search-via-bindings.rs:56:16: 56:32
                                         // + literal: Const { ty: fn((bool, bool, bool)) -> u32 {search_old_style}, val: Value(<ZST>) }
    }

    bb28: {
        _173 = &_174;                    // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _311 = const _;                  // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // + literal: Const { ty: &u32, val: Unevaluated(main, [], Some(promoted[6])) }
        _176 = _311;                     // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _172 = (move _173, move _176);   // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _177 = (_172.0: &u32);           // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _178 = (_172.1: &u32);           // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _181 = (*_177);                  // scope 19 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
        _182 = const 2_u32;              // scope 19 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
        _180 = Eq(move _181, move _182); // scope 19 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
        _179 = Not(move _180);           // scope 19 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
        switchInt(move _179) -> [0: bb30, otherwise: bb29]; // scope 19 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    }

    bb29: {
        _183 = const core::panicking::AssertKind::Eq; // scope 19 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _185 = const core::panicking::AssertKind::Eq; // scope 20 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _187 = _177;                     // scope 20 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _186 = _187;                     // scope 20 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _189 = _178;                     // scope 20 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _188 = _189;                     // scope 20 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _190 = Option::<Arguments<'_>>::None; // scope 20 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
        _184 = core::panicking::assert_failed::<u32, u32>(move _185, move _186, move _188, move _190); // scope 20 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:53
                                         // + literal: Const { ty: for<'a, 'b, 'c> fn(core::panicking::AssertKind, &'a u32, &'b u32, Option<Arguments<'c>>) -> ! {core::panicking::assert_failed::<u32, u32>}, val: Value(<ZST>) }
    }

    bb30: {
        _194 = (const false, const true, const false); // scope 0 at ui/or-patterns/search-via-bindings.rs:57:33: 57:53
        _193 = search_old_style(move _194) -> bb31; // scope 0 at ui/or-patterns/search-via-bindings.rs:57:16: 57:54
                                         // mir::Constant
                                         // + span: ui/or-patterns/search-via-bindings.rs:57:16: 57:32
                                         // + literal: Const { ty: fn((bool, bool, bool)) -> u32 {search_old_style}, val: Value(<ZST>) }
    }

    bb31: {
        _192 = &_193;                    // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _310 = const _;                  // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // + literal: Const { ty: &u32, val: Unevaluated(main, [], Some(promoted[5])) }
        _195 = _310;                     // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _191 = (move _192, move _195);   // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _196 = (_191.0: &u32);           // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _197 = (_191.1: &u32);           // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _200 = (*_196);                  // scope 21 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
        _201 = const 3_u32;              // scope 21 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
        _199 = Eq(move _200, move _201); // scope 21 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
        _198 = Not(move _199);           // scope 21 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
        switchInt(move _198) -> [0: bb33, otherwise: bb32]; // scope 21 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    }

    bb32: {
        _202 = const core::panicking::AssertKind::Eq; // scope 21 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _204 = const core::panicking::AssertKind::Eq; // scope 22 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _206 = _196;                     // scope 22 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _205 = _206;                     // scope 22 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _208 = _197;                     // scope 22 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _207 = _208;                     // scope 22 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _209 = Option::<Arguments<'_>>::None; // scope 22 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
        _203 = core::panicking::assert_failed::<u32, u32>(move _204, move _205, move _207, move _209); // scope 22 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:53
                                         // + literal: Const { ty: for<'a, 'b, 'c> fn(core::panicking::AssertKind, &'a u32, &'b u32, Option<Arguments<'c>>) -> ! {core::panicking::assert_failed::<u32, u32>}, val: Value(<ZST>) }
    }

    bb33: {
        _213 = (const false, const true, const true); // scope 0 at ui/or-patterns/search-via-bindings.rs:58:33: 58:52
        _212 = search_old_style(move _213) -> bb34; // scope 0 at ui/or-patterns/search-via-bindings.rs:58:16: 58:53
                                         // mir::Constant
                                         // + span: ui/or-patterns/search-via-bindings.rs:58:16: 58:32
                                         // + literal: Const { ty: fn((bool, bool, bool)) -> u32 {search_old_style}, val: Value(<ZST>) }
    }

    bb34: {
        _211 = &_212;                    // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _309 = const _;                  // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // + literal: Const { ty: &u32, val: Unevaluated(main, [], Some(promoted[4])) }
        _214 = _309;                     // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _210 = (move _211, move _214);   // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _215 = (_210.0: &u32);           // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _216 = (_210.1: &u32);           // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _219 = (*_215);                  // scope 23 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
        _220 = const 4_u32;              // scope 23 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
        _218 = Eq(move _219, move _220); // scope 23 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
        _217 = Not(move _218);           // scope 23 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
        switchInt(move _217) -> [0: bb36, otherwise: bb35]; // scope 23 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    }

    bb35: {
        _221 = const core::panicking::AssertKind::Eq; // scope 23 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _223 = const core::panicking::AssertKind::Eq; // scope 24 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _225 = _215;                     // scope 24 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _224 = _225;                     // scope 24 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _227 = _216;                     // scope 24 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _226 = _227;                     // scope 24 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _228 = Option::<Arguments<'_>>::None; // scope 24 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
        _222 = core::panicking::assert_failed::<u32, u32>(move _223, move _224, move _226, move _228); // scope 24 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:53
                                         // + literal: Const { ty: for<'a, 'b, 'c> fn(core::panicking::AssertKind, &'a u32, &'b u32, Option<Arguments<'c>>) -> ! {core::panicking::assert_failed::<u32, u32>}, val: Value(<ZST>) }
    }

    bb36: {
        _232 = (const true, const false, const false); // scope 0 at ui/or-patterns/search-via-bindings.rs:59:33: 59:53
        _231 = search_old_style(move _232) -> bb37; // scope 0 at ui/or-patterns/search-via-bindings.rs:59:16: 59:54
                                         // mir::Constant
                                         // + span: ui/or-patterns/search-via-bindings.rs:59:16: 59:32
                                         // + literal: Const { ty: fn((bool, bool, bool)) -> u32 {search_old_style}, val: Value(<ZST>) }
    }

    bb37: {
        _230 = &_231;                    // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _308 = const _;                  // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // + literal: Const { ty: &u32, val: Unevaluated(main, [], Some(promoted[3])) }
        _233 = _308;                     // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _229 = (move _230, move _233);   // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _234 = (_229.0: &u32);           // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _235 = (_229.1: &u32);           // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _238 = (*_234);                  // scope 25 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
        _239 = const 5_u32;              // scope 25 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
        _237 = Eq(move _238, move _239); // scope 25 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
        _236 = Not(move _237);           // scope 25 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
        switchInt(move _236) -> [0: bb39, otherwise: bb38]; // scope 25 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    }

    bb38: {
        _240 = const core::panicking::AssertKind::Eq; // scope 25 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _242 = const core::panicking::AssertKind::Eq; // scope 26 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _244 = _234;                     // scope 26 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _243 = _244;                     // scope 26 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _246 = _235;                     // scope 26 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _245 = _246;                     // scope 26 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _247 = Option::<Arguments<'_>>::None; // scope 26 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
        _241 = core::panicking::assert_failed::<u32, u32>(move _242, move _243, move _245, move _247); // scope 26 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:53
                                         // + literal: Const { ty: for<'a, 'b, 'c> fn(core::panicking::AssertKind, &'a u32, &'b u32, Option<Arguments<'c>>) -> ! {core::panicking::assert_failed::<u32, u32>}, val: Value(<ZST>) }
    }

    bb39: {
        _251 = (const true, const false, const true); // scope 0 at ui/or-patterns/search-via-bindings.rs:60:33: 60:52
        _250 = search_old_style(move _251) -> bb40; // scope 0 at ui/or-patterns/search-via-bindings.rs:60:16: 60:53
                                         // mir::Constant
                                         // + span: ui/or-patterns/search-via-bindings.rs:60:16: 60:32
                                         // + literal: Const { ty: fn((bool, bool, bool)) -> u32 {search_old_style}, val: Value(<ZST>) }
    }

    bb40: {
        _249 = &_250;                    // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _307 = const _;                  // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // + literal: Const { ty: &u32, val: Unevaluated(main, [], Some(promoted[2])) }
        _252 = _307;                     // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _248 = (move _249, move _252);   // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _253 = (_248.0: &u32);           // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _254 = (_248.1: &u32);           // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _257 = (*_253);                  // scope 27 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
        _258 = const 6_u32;              // scope 27 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
        _256 = Eq(move _257, move _258); // scope 27 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
        _255 = Not(move _256);           // scope 27 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
        switchInt(move _255) -> [0: bb42, otherwise: bb41]; // scope 27 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    }

    bb41: {
        _259 = const core::panicking::AssertKind::Eq; // scope 27 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _261 = const core::panicking::AssertKind::Eq; // scope 28 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _263 = _253;                     // scope 28 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _262 = _263;                     // scope 28 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _265 = _254;                     // scope 28 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _264 = _265;                     // scope 28 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _266 = Option::<Arguments<'_>>::None; // scope 28 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
        _260 = core::panicking::assert_failed::<u32, u32>(move _261, move _262, move _264, move _266); // scope 28 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:53
                                         // + literal: Const { ty: for<'a, 'b, 'c> fn(core::panicking::AssertKind, &'a u32, &'b u32, Option<Arguments<'c>>) -> ! {core::panicking::assert_failed::<u32, u32>}, val: Value(<ZST>) }
    }

    bb42: {
        _270 = (const true, const true, const false); // scope 0 at ui/or-patterns/search-via-bindings.rs:61:33: 61:52
        _269 = search_old_style(move _270) -> bb43; // scope 0 at ui/or-patterns/search-via-bindings.rs:61:16: 61:53
                                         // mir::Constant
                                         // + span: ui/or-patterns/search-via-bindings.rs:61:16: 61:32
                                         // + literal: Const { ty: fn((bool, bool, bool)) -> u32 {search_old_style}, val: Value(<ZST>) }
    }

    bb43: {
        _268 = &_269;                    // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _306 = const _;                  // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // + literal: Const { ty: &u32, val: Unevaluated(main, [], Some(promoted[1])) }
        _271 = _306;                     // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _267 = (move _268, move _271);   // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _272 = (_267.0: &u32);           // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _273 = (_267.1: &u32);           // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _276 = (*_272);                  // scope 29 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
        _277 = const 7_u32;              // scope 29 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
        _275 = Eq(move _276, move _277); // scope 29 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
        _274 = Not(move _275);           // scope 29 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
        switchInt(move _274) -> [0: bb45, otherwise: bb44]; // scope 29 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    }

    bb44: {
        _278 = const core::panicking::AssertKind::Eq; // scope 29 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _280 = const core::panicking::AssertKind::Eq; // scope 30 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _282 = _272;                     // scope 30 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _281 = _282;                     // scope 30 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _284 = _273;                     // scope 30 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _283 = _284;                     // scope 30 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _285 = Option::<Arguments<'_>>::None; // scope 30 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
        _279 = core::panicking::assert_failed::<u32, u32>(move _280, move _281, move _283, move _285); // scope 30 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:53
                                         // + literal: Const { ty: for<'a, 'b, 'c> fn(core::panicking::AssertKind, &'a u32, &'b u32, Option<Arguments<'c>>) -> ! {core::panicking::assert_failed::<u32, u32>}, val: Value(<ZST>) }
    }

    bb45: {
        _289 = (const true, const true, const true); // scope 0 at ui/or-patterns/search-via-bindings.rs:62:33: 62:51
        _288 = search_old_style(move _289) -> bb46; // scope 0 at ui/or-patterns/search-via-bindings.rs:62:16: 62:52
                                         // mir::Constant
                                         // + span: ui/or-patterns/search-via-bindings.rs:62:16: 62:32
                                         // + literal: Const { ty: fn((bool, bool, bool)) -> u32 {search_old_style}, val: Value(<ZST>) }
    }

    bb46: {
        _287 = &_288;                    // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _305 = const _;                  // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // + literal: Const { ty: &u32, val: Unevaluated(main, [], Some(promoted[0])) }
        _290 = _305;                     // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _286 = (move _287, move _290);   // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _291 = (_286.0: &u32);           // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _292 = (_286.1: &u32);           // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _295 = (*_291);                  // scope 31 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
        _296 = const 8_u32;              // scope 31 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
        _294 = Eq(move _295, move _296); // scope 31 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
        _293 = Not(move _294);           // scope 31 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
        switchInt(move _293) -> [0: bb48, otherwise: bb47]; // scope 31 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    }

    bb47: {
        _297 = const core::panicking::AssertKind::Eq; // scope 31 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _299 = const core::panicking::AssertKind::Eq; // scope 32 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _301 = _291;                     // scope 32 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _300 = _301;                     // scope 32 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _303 = _292;                     // scope 32 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _302 = _303;                     // scope 32 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _304 = Option::<Arguments<'_>>::None; // scope 32 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
        _298 = core::panicking::assert_failed::<u32, u32>(move _299, move _300, move _302, move _304); // scope 32 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:53
                                         // + literal: Const { ty: for<'a, 'b, 'c> fn(core::panicking::AssertKind, &'a u32, &'b u32, Option<Arguments<'c>>) -> ! {core::panicking::assert_failed::<u32, u32>}, val: Value(<ZST>) }
    }

    bb48: {
        return;                          // scope 0 at ui/or-patterns/search-via-bindings.rs:63:2: 63:2
    }
}

promoted[0] in main: &u32 = {
    let mut _0: &u32;                    // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _1: u32;                     // in scope 0 at ui/or-patterns/search-via-bindings.rs:62:54: 62:55

    bb0: {
        _1 = const 8_u32;                // scope 0 at ui/or-patterns/search-via-bindings.rs:62:54: 62:55
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    }
}

promoted[1] in main: &u32 = {
    let mut _0: &u32;                    // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _1: u32;                     // in scope 0 at ui/or-patterns/search-via-bindings.rs:61:55: 61:56

    bb0: {
        _1 = const 7_u32;                // scope 0 at ui/or-patterns/search-via-bindings.rs:61:55: 61:56
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    }
}

promoted[2] in main: &u32 = {
    let mut _0: &u32;                    // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _1: u32;                     // in scope 0 at ui/or-patterns/search-via-bindings.rs:60:55: 60:56

    bb0: {
        _1 = const 6_u32;                // scope 0 at ui/or-patterns/search-via-bindings.rs:60:55: 60:56
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    }
}

promoted[3] in main: &u32 = {
    let mut _0: &u32;                    // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _1: u32;                     // in scope 0 at ui/or-patterns/search-via-bindings.rs:59:56: 59:57

    bb0: {
        _1 = const 5_u32;                // scope 0 at ui/or-patterns/search-via-bindings.rs:59:56: 59:57
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    }
}

promoted[4] in main: &u32 = {
    let mut _0: &u32;                    // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _1: u32;                     // in scope 0 at ui/or-patterns/search-via-bindings.rs:58:55: 58:56

    bb0: {
        _1 = const 4_u32;                // scope 0 at ui/or-patterns/search-via-bindings.rs:58:55: 58:56
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    }
}

promoted[5] in main: &u32 = {
    let mut _0: &u32;                    // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _1: u32;                     // in scope 0 at ui/or-patterns/search-via-bindings.rs:57:56: 57:57

    bb0: {
        _1 = const 3_u32;                // scope 0 at ui/or-patterns/search-via-bindings.rs:57:56: 57:57
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    }
}

promoted[6] in main: &u32 = {
    let mut _0: &u32;                    // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _1: u32;                     // in scope 0 at ui/or-patterns/search-via-bindings.rs:56:56: 56:57

    bb0: {
        _1 = const 2_u32;                // scope 0 at ui/or-patterns/search-via-bindings.rs:56:56: 56:57
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    }
}

promoted[7] in main: &u32 = {
    let mut _0: &u32;                    // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _1: u32;                     // in scope 0 at ui/or-patterns/search-via-bindings.rs:55:57: 55:58

    bb0: {
        _1 = const 1_u32;                // scope 0 at ui/or-patterns/search-via-bindings.rs:55:57: 55:58
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    }
}

promoted[8] in main: &u32 = {
    let mut _0: &u32;                    // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _1: u32;                     // in scope 0 at ui/or-patterns/search-via-bindings.rs:53:44: 53:45

    bb0: {
        _1 = const 8_u32;                // scope 0 at ui/or-patterns/search-via-bindings.rs:53:44: 53:45
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    }
}

promoted[9] in main: &u32 = {
    let mut _0: &u32;                    // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _1: u32;                     // in scope 0 at ui/or-patterns/search-via-bindings.rs:52:45: 52:46

    bb0: {
        _1 = const 7_u32;                // scope 0 at ui/or-patterns/search-via-bindings.rs:52:45: 52:46
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    }
}

promoted[10] in main: &u32 = {
    let mut _0: &u32;                    // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _1: u32;                     // in scope 0 at ui/or-patterns/search-via-bindings.rs:51:45: 51:46

    bb0: {
        _1 = const 6_u32;                // scope 0 at ui/or-patterns/search-via-bindings.rs:51:45: 51:46
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    }
}

promoted[11] in main: &u32 = {
    let mut _0: &u32;                    // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _1: u32;                     // in scope 0 at ui/or-patterns/search-via-bindings.rs:50:46: 50:47

    bb0: {
        _1 = const 5_u32;                // scope 0 at ui/or-patterns/search-via-bindings.rs:50:46: 50:47
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    }
}

promoted[12] in main: &u32 = {
    let mut _0: &u32;                    // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _1: u32;                     // in scope 0 at ui/or-patterns/search-via-bindings.rs:49:45: 49:46

    bb0: {
        _1 = const 4_u32;                // scope 0 at ui/or-patterns/search-via-bindings.rs:49:45: 49:46
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    }
}

promoted[13] in main: &u32 = {
    let mut _0: &u32;                    // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _1: u32;                     // in scope 0 at ui/or-patterns/search-via-bindings.rs:48:46: 48:47

    bb0: {
        _1 = const 3_u32;                // scope 0 at ui/or-patterns/search-via-bindings.rs:48:46: 48:47
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    }
}

promoted[14] in main: &u32 = {
    let mut _0: &u32;                    // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _1: u32;                     // in scope 0 at ui/or-patterns/search-via-bindings.rs:47:46: 47:47

    bb0: {
        _1 = const 2_u32;                // scope 0 at ui/or-patterns/search-via-bindings.rs:47:46: 47:47
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    }
}

promoted[15] in main: &u32 = {
    let mut _0: &u32;                    // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _1: u32;                     // in scope 0 at ui/or-patterns/search-via-bindings.rs:46:47: 46:48

    bb0: {
        _1 = const 1_u32;                // scope 0 at ui/or-patterns/search-via-bindings.rs:46:47: 46:48
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    }
}
