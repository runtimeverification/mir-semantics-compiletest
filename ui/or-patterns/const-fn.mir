// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
fn foo(_1: Result<i32, i32>) -> () {
    let mut _0: ();                      // return place in scope 0 at ui/or-patterns/const-fn.rs:3:50: 3:50
    let _2: i32;                         // in scope 0 at ui/or-patterns/const-fn.rs:3:18: 3:19
    let mut _3: isize;                   // in scope 0 at ui/or-patterns/const-fn.rs:3:15: 3:20
    scope 1 {
        debug a => _2;                   // in scope 1 at ui/or-patterns/const-fn.rs:3:18: 3:19
        let _4: std::result::Result<i32, i32>; // in scope 1 at ui/or-patterns/const-fn.rs:4:9: 4:10
        scope 2 {
            debug x => _4;               // in scope 2 at ui/or-patterns/const-fn.rs:4:9: 4:10
            let _5: i32;                 // in scope 2 at ui/or-patterns/const-fn.rs:5:13: 5:14
            scope 3 {
                debug y => _5;           // in scope 3 at ui/or-patterns/const-fn.rs:5:13: 5:14
            }
        }
    }

    bb0: {
        _3 = discriminant(_1);           // scope 0 at ui/or-patterns/const-fn.rs:3:15: 3:29
        switchInt(move _3) -> [0: bb4, 1: bb1, otherwise: bb2]; // scope 0 at ui/or-patterns/const-fn.rs:3:15: 3:29
    }

    bb1: {
        _2 = ((_1 as Err).0: i32);       // scope 0 at ui/or-patterns/const-fn.rs:3:27: 3:28
        goto -> bb3;                     // scope 0 at ui/or-patterns/const-fn.rs:3:15: 3:29
    }

    bb2: {
        unreachable;                     // scope 0 at ui/or-patterns/const-fn.rs:3:15: 3:29
    }

    bb3: {
        _4 = Result::<i32, i32>::Ok(const 3_i32); // scope 1 at ui/or-patterns/const-fn.rs:4:13: 4:18
        _5 = ((_4 as Ok).0: i32);        // scope 2 at ui/or-patterns/const-fn.rs:5:13: 5:14
        return;                          // scope 0 at ui/or-patterns/const-fn.rs:6:2: 6:2
    }

    bb4: {
        _2 = ((_1 as Ok).0: i32);        // scope 0 at ui/or-patterns/const-fn.rs:3:18: 3:19
        goto -> bb3;                     // scope 0 at ui/or-patterns/const-fn.rs:3:15: 3:29
    }
}

// MIR FOR CTFE
fn foo(_1: Result<i32, i32>) -> () {
    let mut _0: ();                      // return place in scope 0 at ui/or-patterns/const-fn.rs:3:50: 3:50
    let _2: i32;                         // in scope 0 at ui/or-patterns/const-fn.rs:3:18: 3:19
    let mut _3: isize;                   // in scope 0 at ui/or-patterns/const-fn.rs:3:15: 3:20
    let mut _6: isize;                   // in scope 0 at ui/or-patterns/const-fn.rs:5:10: 5:15
    scope 1 {
        debug a => _2;                   // in scope 1 at ui/or-patterns/const-fn.rs:3:18: 3:19
        let _4: std::result::Result<i32, i32>; // in scope 1 at ui/or-patterns/const-fn.rs:4:9: 4:10
        scope 2 {
            debug x => _4;               // in scope 2 at ui/or-patterns/const-fn.rs:4:9: 4:10
            let _5: i32;                 // in scope 2 at ui/or-patterns/const-fn.rs:5:13: 5:14
            scope 3 {
                debug y => _5;           // in scope 3 at ui/or-patterns/const-fn.rs:5:13: 5:14
            }
        }
    }

    bb0: {
        _3 = discriminant(_1);           // scope 0 at ui/or-patterns/const-fn.rs:3:15: 3:29
        switchInt(move _3) -> [0: bb4, 1: bb1, otherwise: bb2]; // scope 0 at ui/or-patterns/const-fn.rs:3:15: 3:29
    }

    bb1: {
        StorageLive(_2);                 // scope 0 at ui/or-patterns/const-fn.rs:3:27: 3:28
        _2 = ((_1 as Err).0: i32);       // scope 0 at ui/or-patterns/const-fn.rs:3:27: 3:28
        goto -> bb3;                     // scope 0 at ui/or-patterns/const-fn.rs:3:15: 3:29
    }

    bb2: {
        unreachable;                     // scope 0 at ui/or-patterns/const-fn.rs:3:15: 3:29
    }

    bb3: {
        StorageLive(_4);                 // scope 1 at ui/or-patterns/const-fn.rs:4:9: 4:10
        _4 = Result::<i32, i32>::Ok(const 3_i32); // scope 1 at ui/or-patterns/const-fn.rs:4:13: 4:18
        _6 = discriminant(_4);           // scope 2 at ui/or-patterns/const-fn.rs:5:10: 5:24
        switchInt(move _6) -> [0: bb8, 1: bb5, otherwise: bb6]; // scope 2 at ui/or-patterns/const-fn.rs:5:10: 5:24
    }

    bb4: {
        StorageLive(_2);                 // scope 0 at ui/or-patterns/const-fn.rs:3:18: 3:19
        _2 = ((_1 as Ok).0: i32);        // scope 0 at ui/or-patterns/const-fn.rs:3:18: 3:19
        goto -> bb3;                     // scope 0 at ui/or-patterns/const-fn.rs:3:15: 3:29
    }

    bb5: {
        StorageLive(_5);                 // scope 2 at ui/or-patterns/const-fn.rs:5:22: 5:23
        _5 = ((_4 as Err).0: i32);       // scope 2 at ui/or-patterns/const-fn.rs:5:22: 5:23
        goto -> bb7;                     // scope 2 at ui/or-patterns/const-fn.rs:5:10: 5:24
    }

    bb6: {
        unreachable;                     // scope 2 at ui/or-patterns/const-fn.rs:5:10: 5:24
    }

    bb7: {
        _0 = const ();                   // scope 1 at ui/or-patterns/const-fn.rs:3:50: 6:2
        StorageDead(_5);                 // scope 2 at ui/or-patterns/const-fn.rs:6:1: 6:2
        StorageDead(_4);                 // scope 1 at ui/or-patterns/const-fn.rs:6:1: 6:2
        StorageDead(_2);                 // scope 0 at ui/or-patterns/const-fn.rs:6:1: 6:2
        return;                          // scope 0 at ui/or-patterns/const-fn.rs:6:2: 6:2
    }

    bb8: {
        StorageLive(_5);                 // scope 2 at ui/or-patterns/const-fn.rs:5:13: 5:14
        _5 = ((_4 as Ok).0: i32);        // scope 2 at ui/or-patterns/const-fn.rs:5:13: 5:14
        goto -> bb7;                     // scope 2 at ui/or-patterns/const-fn.rs:5:10: 5:24
    }
}

const X: () = {
    let mut _0: ();                      // return place in scope 0 at ui/or-patterns/const-fn.rs:8:10: 8:12
    let _1: std::result::Result<i32, i32>; // in scope 0 at ui/or-patterns/const-fn.rs:9:9: 9:10
    let mut _3: isize;                   // in scope 0 at ui/or-patterns/const-fn.rs:10:10: 10:15
    scope 1 {
        debug x => _1;                   // in scope 1 at ui/or-patterns/const-fn.rs:9:9: 9:10
        let _2: i32;                     // in scope 1 at ui/or-patterns/const-fn.rs:10:13: 10:14
        scope 2 {
            debug y => _2;               // in scope 2 at ui/or-patterns/const-fn.rs:10:13: 10:14
        }
    }

    bb0: {
        StorageLive(_1);                 // scope 0 at ui/or-patterns/const-fn.rs:9:9: 9:10
        _1 = Result::<i32, i32>::Ok(const 3_i32); // scope 0 at ui/or-patterns/const-fn.rs:9:13: 9:18
        _3 = discriminant(_1);           // scope 1 at ui/or-patterns/const-fn.rs:10:10: 10:24
        switchInt(move _3) -> [0: bb4, 1: bb1, otherwise: bb2]; // scope 1 at ui/or-patterns/const-fn.rs:10:10: 10:24
    }

    bb1: {
        StorageLive(_2);                 // scope 1 at ui/or-patterns/const-fn.rs:10:22: 10:23
        _2 = ((_1 as Err).0: i32);       // scope 1 at ui/or-patterns/const-fn.rs:10:22: 10:23
        goto -> bb3;                     // scope 1 at ui/or-patterns/const-fn.rs:10:10: 10:24
    }

    bb2: {
        unreachable;                     // scope 1 at ui/or-patterns/const-fn.rs:10:10: 10:24
    }

    bb3: {
        _0 = const ();                   // scope 0 at ui/or-patterns/const-fn.rs:8:15: 11:2
        StorageDead(_2);                 // scope 1 at ui/or-patterns/const-fn.rs:11:1: 11:2
        StorageDead(_1);                 // scope 0 at ui/or-patterns/const-fn.rs:11:1: 11:2
        return;                          // scope 0 at ui/or-patterns/const-fn.rs:8:1: 11:3
    }

    bb4: {
        StorageLive(_2);                 // scope 1 at ui/or-patterns/const-fn.rs:10:13: 10:14
        _2 = ((_1 as Ok).0: i32);        // scope 1 at ui/or-patterns/const-fn.rs:10:13: 10:14
        goto -> bb3;                     // scope 1 at ui/or-patterns/const-fn.rs:10:10: 10:24
    }
}

static Y: () = {
    let mut _0: ();                      // return place in scope 0 at ui/or-patterns/const-fn.rs:13:11: 13:13
    let _1: std::result::Result<i32, i32>; // in scope 0 at ui/or-patterns/const-fn.rs:14:9: 14:10
    let mut _3: isize;                   // in scope 0 at ui/or-patterns/const-fn.rs:15:10: 15:15
    scope 1 {
        debug x => _1;                   // in scope 1 at ui/or-patterns/const-fn.rs:14:9: 14:10
        let _2: i32;                     // in scope 1 at ui/or-patterns/const-fn.rs:15:13: 15:14
        scope 2 {
            debug y => _2;               // in scope 2 at ui/or-patterns/const-fn.rs:15:13: 15:14
        }
    }

    bb0: {
        StorageLive(_1);                 // scope 0 at ui/or-patterns/const-fn.rs:14:9: 14:10
        _1 = Result::<i32, i32>::Ok(const 3_i32); // scope 0 at ui/or-patterns/const-fn.rs:14:13: 14:18
        _3 = discriminant(_1);           // scope 1 at ui/or-patterns/const-fn.rs:15:10: 15:24
        switchInt(move _3) -> [0: bb4, 1: bb1, otherwise: bb2]; // scope 1 at ui/or-patterns/const-fn.rs:15:10: 15:24
    }

    bb1: {
        StorageLive(_2);                 // scope 1 at ui/or-patterns/const-fn.rs:15:22: 15:23
        _2 = ((_1 as Err).0: i32);       // scope 1 at ui/or-patterns/const-fn.rs:15:22: 15:23
        goto -> bb3;                     // scope 1 at ui/or-patterns/const-fn.rs:15:10: 15:24
    }

    bb2: {
        unreachable;                     // scope 1 at ui/or-patterns/const-fn.rs:15:10: 15:24
    }

    bb3: {
        _0 = const ();                   // scope 0 at ui/or-patterns/const-fn.rs:13:16: 16:2
        StorageDead(_2);                 // scope 1 at ui/or-patterns/const-fn.rs:16:1: 16:2
        StorageDead(_1);                 // scope 0 at ui/or-patterns/const-fn.rs:16:1: 16:2
        return;                          // scope 0 at ui/or-patterns/const-fn.rs:13:1: 16:3
    }

    bb4: {
        StorageLive(_2);                 // scope 1 at ui/or-patterns/const-fn.rs:15:13: 15:14
        _2 = ((_1 as Ok).0: i32);        // scope 1 at ui/or-patterns/const-fn.rs:15:13: 15:14
        goto -> bb3;                     // scope 1 at ui/or-patterns/const-fn.rs:15:10: 15:24
    }
}

static mut Z: () = {
    let mut _0: ();                      // return place in scope 0 at ui/or-patterns/const-fn.rs:18:15: 18:17
    let _1: std::result::Result<i32, i32>; // in scope 0 at ui/or-patterns/const-fn.rs:19:9: 19:10
    let mut _3: isize;                   // in scope 0 at ui/or-patterns/const-fn.rs:20:10: 20:15
    scope 1 {
        debug x => _1;                   // in scope 1 at ui/or-patterns/const-fn.rs:19:9: 19:10
        let _2: i32;                     // in scope 1 at ui/or-patterns/const-fn.rs:20:13: 20:14
        scope 2 {
            debug y => _2;               // in scope 2 at ui/or-patterns/const-fn.rs:20:13: 20:14
        }
    }

    bb0: {
        StorageLive(_1);                 // scope 0 at ui/or-patterns/const-fn.rs:19:9: 19:10
        _1 = Result::<i32, i32>::Ok(const 3_i32); // scope 0 at ui/or-patterns/const-fn.rs:19:13: 19:18
        _3 = discriminant(_1);           // scope 1 at ui/or-patterns/const-fn.rs:20:10: 20:24
        switchInt(move _3) -> [0: bb4, 1: bb1, otherwise: bb2]; // scope 1 at ui/or-patterns/const-fn.rs:20:10: 20:24
    }

    bb1: {
        StorageLive(_2);                 // scope 1 at ui/or-patterns/const-fn.rs:20:22: 20:23
        _2 = ((_1 as Err).0: i32);       // scope 1 at ui/or-patterns/const-fn.rs:20:22: 20:23
        goto -> bb3;                     // scope 1 at ui/or-patterns/const-fn.rs:20:10: 20:24
    }

    bb2: {
        unreachable;                     // scope 1 at ui/or-patterns/const-fn.rs:20:10: 20:24
    }

    bb3: {
        _0 = const ();                   // scope 0 at ui/or-patterns/const-fn.rs:18:20: 21:2
        StorageDead(_2);                 // scope 1 at ui/or-patterns/const-fn.rs:21:1: 21:2
        StorageDead(_1);                 // scope 0 at ui/or-patterns/const-fn.rs:21:1: 21:2
        return;                          // scope 0 at ui/or-patterns/const-fn.rs:18:1: 21:3
    }

    bb4: {
        StorageLive(_2);                 // scope 1 at ui/or-patterns/const-fn.rs:20:13: 20:14
        _2 = ((_1 as Ok).0: i32);        // scope 1 at ui/or-patterns/const-fn.rs:20:13: 20:14
        goto -> bb3;                     // scope 1 at ui/or-patterns/const-fn.rs:20:10: 20:24
    }
}

fn main() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/or-patterns/const-fn.rs:23:11: 23:11
    scope 1 {
    }

    bb0: {
        return;                          // scope 0 at ui/or-patterns/const-fn.rs:29:2: 29:2
    }
}

main::{constant#0}: usize = {
    let mut _0: usize;                   // return place in scope 0 at ui/or-patterns/const-fn.rs:24:17: 28:6
    let _1: std::result::Result<i32, i32>; // in scope 0 at ui/or-patterns/const-fn.rs:25:13: 25:14
    let mut _3: isize;                   // in scope 0 at ui/or-patterns/const-fn.rs:26:14: 26:19
    scope 1 {
        debug x => _1;                   // in scope 1 at ui/or-patterns/const-fn.rs:25:13: 25:14
        let _2: i32;                     // in scope 1 at ui/or-patterns/const-fn.rs:26:17: 26:18
        scope 2 {
            debug y => _2;               // in scope 2 at ui/or-patterns/const-fn.rs:26:17: 26:18
        }
    }

    bb0: {
        StorageLive(_1);                 // scope 0 at ui/or-patterns/const-fn.rs:25:13: 25:14
        _1 = Result::<i32, i32>::Ok(const 3_i32); // scope 0 at ui/or-patterns/const-fn.rs:25:17: 25:22
        _3 = discriminant(_1);           // scope 1 at ui/or-patterns/const-fn.rs:26:14: 26:28
        switchInt(move _3) -> [0: bb4, 1: bb1, otherwise: bb2]; // scope 1 at ui/or-patterns/const-fn.rs:26:14: 26:28
    }

    bb1: {
        StorageLive(_2);                 // scope 1 at ui/or-patterns/const-fn.rs:26:26: 26:27
        _2 = ((_1 as Err).0: i32);       // scope 1 at ui/or-patterns/const-fn.rs:26:26: 26:27
        goto -> bb3;                     // scope 1 at ui/or-patterns/const-fn.rs:26:14: 26:28
    }

    bb2: {
        unreachable;                     // scope 1 at ui/or-patterns/const-fn.rs:26:14: 26:28
    }

    bb3: {
        _0 = const 2_usize;              // scope 2 at ui/or-patterns/const-fn.rs:27:9: 27:10
        StorageDead(_2);                 // scope 1 at ui/or-patterns/const-fn.rs:28:5: 28:6
        StorageDead(_1);                 // scope 0 at ui/or-patterns/const-fn.rs:28:5: 28:6
        return;                          // scope 0 at ui/or-patterns/const-fn.rs:24:17: 28:6
    }

    bb4: {
        StorageLive(_2);                 // scope 1 at ui/or-patterns/const-fn.rs:26:17: 26:18
        _2 = ((_1 as Ok).0: i32);        // scope 1 at ui/or-patterns/const-fn.rs:26:17: 26:18
        goto -> bb3;                     // scope 1 at ui/or-patterns/const-fn.rs:26:14: 26:28
    }
}
