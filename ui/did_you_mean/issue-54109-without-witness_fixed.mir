// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
fn main() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/did_you_mean/issue-54109-without-witness_fixed.rs:7:11: 7:11

    bb0: {
        return;                          // scope 0 at ui/did_you_mean/issue-54109-without-witness_fixed.rs:7:13: 7:13
    }
}

fn test_and() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/did_you_mean/issue-54109-without-witness_fixed.rs:9:15: 9:15
    let _1: bool;                        // in scope 0 at ui/did_you_mean/issue-54109-without-witness_fixed.rs:10:9: 10:10
    let mut _3: bool;                    // in scope 0 at ui/did_you_mean/issue-54109-without-witness_fixed.rs:15:8: 15:14
    let mut _4: bool;                    // in scope 0 at ui/did_you_mean/issue-54109-without-witness_fixed.rs:15:8: 15:9
    let mut _5: bool;                    // in scope 0 at ui/did_you_mean/issue-54109-without-witness_fixed.rs:15:13: 15:14
    let _6: ();                          // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:62
    let mut _7: std::fmt::Arguments<'_>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _8: &[&str];                 // in scope 0 at ui/did_you_mean/issue-54109-without-witness_fixed.rs:16:18: 16:24
    let mut _9: &[&str; 1];              // in scope 0 at ui/did_you_mean/issue-54109-without-witness_fixed.rs:16:18: 16:24
    let _10: &[&str; 1];                 // in scope 0 at ui/did_you_mean/issue-54109-without-witness_fixed.rs:16:18: 16:24
    let mut _11: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _12: &[core::fmt::ArgumentV1<'_>; 0]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let _13: &[core::fmt::ArgumentV1<'_>; 0]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    scope 1 {
        debug a => _1;                   // in scope 1 at ui/did_you_mean/issue-54109-without-witness_fixed.rs:10:9: 10:10
        let _2: bool;                    // in scope 1 at ui/did_you_mean/issue-54109-without-witness_fixed.rs:11:9: 11:10
        scope 2 {
            debug b => _2;               // in scope 2 at ui/did_you_mean/issue-54109-without-witness_fixed.rs:11:9: 11:10
            scope 3 {
                let mut _14: &[core::fmt::ArgumentV1<'_>; 0]; // in scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                let mut _15: &[&str; 1]; // in scope 3 at ui/did_you_mean/issue-54109-without-witness_fixed.rs:16:18: 16:24
            }
        }
    }

    bb0: {
        _1 = const true;                 // scope 0 at ui/did_you_mean/issue-54109-without-witness_fixed.rs:10:13: 10:17
        _2 = const false;                // scope 1 at ui/did_you_mean/issue-54109-without-witness_fixed.rs:11:13: 11:18
        _4 = _1;                         // scope 3 at ui/did_you_mean/issue-54109-without-witness_fixed.rs:15:8: 15:9
        switchInt(move _4) -> [0: bb1, otherwise: bb2]; // scope 3 at ui/did_you_mean/issue-54109-without-witness_fixed.rs:15:8: 15:14
    }

    bb1: {
        _3 = const false;                // scope 3 at ui/did_you_mean/issue-54109-without-witness_fixed.rs:15:8: 15:14
        goto -> bb3;                     // scope 3 at ui/did_you_mean/issue-54109-without-witness_fixed.rs:15:8: 15:14
    }

    bb2: {
        _5 = _2;                         // scope 3 at ui/did_you_mean/issue-54109-without-witness_fixed.rs:15:13: 15:14
        _3 = move _5;                    // scope 3 at ui/did_you_mean/issue-54109-without-witness_fixed.rs:15:8: 15:14
        goto -> bb3;                     // scope 3 at ui/did_you_mean/issue-54109-without-witness_fixed.rs:15:8: 15:14
    }

    bb3: {
        switchInt(move _3) -> [0: bb6, otherwise: bb4]; // scope 3 at ui/did_you_mean/issue-54109-without-witness_fixed.rs:15:8: 15:14
    }

    bb4: {
        _15 = const _;                   // scope 3 at ui/did_you_mean/issue-54109-without-witness_fixed.rs:16:18: 16:24
                                         // mir::Constant
                                         // + span: ui/did_you_mean/issue-54109-without-witness_fixed.rs:16:18: 16:24
                                         // + literal: Const { ty: &[&str; 1], val: Unevaluated(test_and, [], Some(promoted[1])) }
        _10 = _15;                       // scope 3 at ui/did_you_mean/issue-54109-without-witness_fixed.rs:16:18: 16:24
        _9 = _10;                        // scope 3 at ui/did_you_mean/issue-54109-without-witness_fixed.rs:16:18: 16:24
        _8 = move _9 as &[&str] (Pointer(Unsize)); // scope 3 at ui/did_you_mean/issue-54109-without-witness_fixed.rs:16:18: 16:24
        _14 = const _;                   // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // + literal: Const { ty: &[core::fmt::ArgumentV1<'_>; 0], val: Unevaluated(test_and, [], Some(promoted[0])) }
        _13 = _14;                       // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _12 = _13;                       // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _11 = move _12 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _7 = Arguments::<'_>::new_v1(move _8, move _11) -> bb5; // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb5: {
        _6 = _print(move _7) -> bb6;     // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:62
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:27
                                         // + literal: Const { ty: for<'a> fn(Arguments<'a>) {_print}, val: Value(<ZST>) }
    }

    bb6: {
        return;                          // scope 0 at ui/did_you_mean/issue-54109-without-witness_fixed.rs:18:2: 18:2
    }
}

promoted[0] in test_and: &[core::fmt::ArgumentV1<'_>; 0] = {
    let mut _0: &[core::fmt::ArgumentV1<'_>; 0]; // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _1: [core::fmt::ArgumentV1<'_>; 0]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61

    bb0: {
        _1 = [];                         // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    }
}

promoted[1] in test_and: &[&str; 1] = {
    let mut _0: &[&str; 1];              // return place in scope 0 at ui/did_you_mean/issue-54109-without-witness_fixed.rs:16:18: 16:24
    let mut _1: [&str; 1];               // in scope 0 at ui/did_you_mean/issue-54109-without-witness_fixed.rs:16:18: 16:24

    bb0: {
        _1 = [const "both\n"];           // scope 0 at ui/did_you_mean/issue-54109-without-witness_fixed.rs:16:18: 16:24
                                         // mir::Constant
                                         // + span: ui/did_you_mean/issue-54109-without-witness_fixed.rs:16:18: 16:24
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at ui/did_you_mean/issue-54109-without-witness_fixed.rs:16:18: 16:24
        return;                          // scope 0 at ui/did_you_mean/issue-54109-without-witness_fixed.rs:16:18: 16:24
    }
}

fn test_or() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/did_you_mean/issue-54109-without-witness_fixed.rs:20:14: 20:14
    let _1: bool;                        // in scope 0 at ui/did_you_mean/issue-54109-without-witness_fixed.rs:21:9: 21:10
    let mut _3: bool;                    // in scope 0 at ui/did_you_mean/issue-54109-without-witness_fixed.rs:26:8: 26:14
    let mut _4: bool;                    // in scope 0 at ui/did_you_mean/issue-54109-without-witness_fixed.rs:26:8: 26:9
    let mut _5: bool;                    // in scope 0 at ui/did_you_mean/issue-54109-without-witness_fixed.rs:26:13: 26:14
    let _6: ();                          // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:62
    let mut _7: std::fmt::Arguments<'_>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _8: &[&str];                 // in scope 0 at ui/did_you_mean/issue-54109-without-witness_fixed.rs:27:18: 27:24
    let mut _9: &[&str; 1];              // in scope 0 at ui/did_you_mean/issue-54109-without-witness_fixed.rs:27:18: 27:24
    let _10: &[&str; 1];                 // in scope 0 at ui/did_you_mean/issue-54109-without-witness_fixed.rs:27:18: 27:24
    let mut _11: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _12: &[core::fmt::ArgumentV1<'_>; 0]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let _13: &[core::fmt::ArgumentV1<'_>; 0]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    scope 1 {
        debug a => _1;                   // in scope 1 at ui/did_you_mean/issue-54109-without-witness_fixed.rs:21:9: 21:10
        let _2: bool;                    // in scope 1 at ui/did_you_mean/issue-54109-without-witness_fixed.rs:22:9: 22:10
        scope 2 {
            debug b => _2;               // in scope 2 at ui/did_you_mean/issue-54109-without-witness_fixed.rs:22:9: 22:10
            scope 3 {
                let mut _14: &[core::fmt::ArgumentV1<'_>; 0]; // in scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                let mut _15: &[&str; 1]; // in scope 3 at ui/did_you_mean/issue-54109-without-witness_fixed.rs:27:18: 27:24
            }
        }
    }

    bb0: {
        _1 = const true;                 // scope 0 at ui/did_you_mean/issue-54109-without-witness_fixed.rs:21:13: 21:17
        _2 = const false;                // scope 1 at ui/did_you_mean/issue-54109-without-witness_fixed.rs:22:13: 22:18
        _4 = _1;                         // scope 3 at ui/did_you_mean/issue-54109-without-witness_fixed.rs:26:8: 26:9
        switchInt(move _4) -> [0: bb2, otherwise: bb1]; // scope 3 at ui/did_you_mean/issue-54109-without-witness_fixed.rs:26:8: 26:14
    }

    bb1: {
        _3 = const true;                 // scope 3 at ui/did_you_mean/issue-54109-without-witness_fixed.rs:26:8: 26:14
        goto -> bb3;                     // scope 3 at ui/did_you_mean/issue-54109-without-witness_fixed.rs:26:8: 26:14
    }

    bb2: {
        _5 = _2;                         // scope 3 at ui/did_you_mean/issue-54109-without-witness_fixed.rs:26:13: 26:14
        _3 = move _5;                    // scope 3 at ui/did_you_mean/issue-54109-without-witness_fixed.rs:26:8: 26:14
        goto -> bb3;                     // scope 3 at ui/did_you_mean/issue-54109-without-witness_fixed.rs:26:8: 26:14
    }

    bb3: {
        switchInt(move _3) -> [0: bb6, otherwise: bb4]; // scope 3 at ui/did_you_mean/issue-54109-without-witness_fixed.rs:26:8: 26:14
    }

    bb4: {
        _15 = const _;                   // scope 3 at ui/did_you_mean/issue-54109-without-witness_fixed.rs:27:18: 27:24
                                         // mir::Constant
                                         // + span: ui/did_you_mean/issue-54109-without-witness_fixed.rs:27:18: 27:24
                                         // + literal: Const { ty: &[&str; 1], val: Unevaluated(test_or, [], Some(promoted[1])) }
        _10 = _15;                       // scope 3 at ui/did_you_mean/issue-54109-without-witness_fixed.rs:27:18: 27:24
        _9 = _10;                        // scope 3 at ui/did_you_mean/issue-54109-without-witness_fixed.rs:27:18: 27:24
        _8 = move _9 as &[&str] (Pointer(Unsize)); // scope 3 at ui/did_you_mean/issue-54109-without-witness_fixed.rs:27:18: 27:24
        _14 = const _;                   // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // + literal: Const { ty: &[core::fmt::ArgumentV1<'_>; 0], val: Unevaluated(test_or, [], Some(promoted[0])) }
        _13 = _14;                       // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _12 = _13;                       // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _11 = move _12 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _7 = Arguments::<'_>::new_v1(move _8, move _11) -> bb5; // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb5: {
        _6 = _print(move _7) -> bb6;     // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:62
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:27
                                         // + literal: Const { ty: for<'a> fn(Arguments<'a>) {_print}, val: Value(<ZST>) }
    }

    bb6: {
        return;                          // scope 0 at ui/did_you_mean/issue-54109-without-witness_fixed.rs:29:2: 29:2
    }
}

promoted[0] in test_or: &[core::fmt::ArgumentV1<'_>; 0] = {
    let mut _0: &[core::fmt::ArgumentV1<'_>; 0]; // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _1: [core::fmt::ArgumentV1<'_>; 0]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61

    bb0: {
        _1 = [];                         // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    }
}

promoted[1] in test_or: &[&str; 1] = {
    let mut _0: &[&str; 1];              // return place in scope 0 at ui/did_you_mean/issue-54109-without-witness_fixed.rs:27:18: 27:24
    let mut _1: [&str; 1];               // in scope 0 at ui/did_you_mean/issue-54109-without-witness_fixed.rs:27:18: 27:24

    bb0: {
        _1 = [const "both\n"];           // scope 0 at ui/did_you_mean/issue-54109-without-witness_fixed.rs:27:18: 27:24
                                         // mir::Constant
                                         // + span: ui/did_you_mean/issue-54109-without-witness_fixed.rs:27:18: 27:24
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at ui/did_you_mean/issue-54109-without-witness_fixed.rs:27:18: 27:24
        return;                          // scope 0 at ui/did_you_mean/issue-54109-without-witness_fixed.rs:27:18: 27:24
    }
}

fn test_and_par() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/did_you_mean/issue-54109-without-witness_fixed.rs:31:19: 31:19
    let _1: bool;                        // in scope 0 at ui/did_you_mean/issue-54109-without-witness_fixed.rs:32:9: 32:10
    let mut _3: bool;                    // in scope 0 at ui/did_you_mean/issue-54109-without-witness_fixed.rs:34:8: 34:16
    let mut _4: bool;                    // in scope 0 at ui/did_you_mean/issue-54109-without-witness_fixed.rs:34:14: 34:15
    let _5: ();                          // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:62
    let mut _6: std::fmt::Arguments<'_>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _7: &[&str];                 // in scope 0 at ui/did_you_mean/issue-54109-without-witness_fixed.rs:35:18: 35:24
    let mut _8: &[&str; 1];              // in scope 0 at ui/did_you_mean/issue-54109-without-witness_fixed.rs:35:18: 35:24
    let _9: &[&str; 1];                  // in scope 0 at ui/did_you_mean/issue-54109-without-witness_fixed.rs:35:18: 35:24
    let mut _10: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _11: &[core::fmt::ArgumentV1<'_>; 0]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let _12: &[core::fmt::ArgumentV1<'_>; 0]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    scope 1 {
        debug a => _1;                   // in scope 1 at ui/did_you_mean/issue-54109-without-witness_fixed.rs:32:9: 32:10
        let _2: bool;                    // in scope 1 at ui/did_you_mean/issue-54109-without-witness_fixed.rs:33:9: 33:10
        scope 2 {
            debug b => _2;               // in scope 2 at ui/did_you_mean/issue-54109-without-witness_fixed.rs:33:9: 33:10
            let mut _13: &[core::fmt::ArgumentV1<'_>; 0]; // in scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
            let mut _14: &[&str; 1];     // in scope 2 at ui/did_you_mean/issue-54109-without-witness_fixed.rs:35:18: 35:24
        }
    }

    bb0: {
        _1 = const true;                 // scope 0 at ui/did_you_mean/issue-54109-without-witness_fixed.rs:32:13: 32:17
        _2 = const false;                // scope 1 at ui/did_you_mean/issue-54109-without-witness_fixed.rs:33:13: 33:18
        _4 = _2;                         // scope 2 at ui/did_you_mean/issue-54109-without-witness_fixed.rs:34:14: 34:15
        _3 = move _4;                    // scope 2 at ui/did_you_mean/issue-54109-without-witness_fixed.rs:34:8: 34:16
        switchInt(move _3) -> [0: bb3, otherwise: bb1]; // scope 2 at ui/did_you_mean/issue-54109-without-witness_fixed.rs:34:8: 34:16
    }

    bb1: {
        _14 = const _;                   // scope 2 at ui/did_you_mean/issue-54109-without-witness_fixed.rs:35:18: 35:24
                                         // mir::Constant
                                         // + span: ui/did_you_mean/issue-54109-without-witness_fixed.rs:35:18: 35:24
                                         // + literal: Const { ty: &[&str; 1], val: Unevaluated(test_and_par, [], Some(promoted[1])) }
        _9 = _14;                        // scope 2 at ui/did_you_mean/issue-54109-without-witness_fixed.rs:35:18: 35:24
        _8 = _9;                         // scope 2 at ui/did_you_mean/issue-54109-without-witness_fixed.rs:35:18: 35:24
        _7 = move _8 as &[&str] (Pointer(Unsize)); // scope 2 at ui/did_you_mean/issue-54109-without-witness_fixed.rs:35:18: 35:24
        _13 = const _;                   // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // + literal: Const { ty: &[core::fmt::ArgumentV1<'_>; 0], val: Unevaluated(test_and_par, [], Some(promoted[0])) }
        _12 = _13;                       // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _11 = _12;                       // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _10 = move _11 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _6 = Arguments::<'_>::new_v1(move _7, move _10) -> bb2; // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb2: {
        _5 = _print(move _6) -> bb3;     // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:62
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:27
                                         // + literal: Const { ty: for<'a> fn(Arguments<'a>) {_print}, val: Value(<ZST>) }
    }

    bb3: {
        return;                          // scope 0 at ui/did_you_mean/issue-54109-without-witness_fixed.rs:37:2: 37:2
    }
}

promoted[0] in test_and_par: &[core::fmt::ArgumentV1<'_>; 0] = {
    let mut _0: &[core::fmt::ArgumentV1<'_>; 0]; // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _1: [core::fmt::ArgumentV1<'_>; 0]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61

    bb0: {
        _1 = [];                         // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    }
}

promoted[1] in test_and_par: &[&str; 1] = {
    let mut _0: &[&str; 1];              // return place in scope 0 at ui/did_you_mean/issue-54109-without-witness_fixed.rs:35:18: 35:24
    let mut _1: [&str; 1];               // in scope 0 at ui/did_you_mean/issue-54109-without-witness_fixed.rs:35:18: 35:24

    bb0: {
        _1 = [const "both\n"];           // scope 0 at ui/did_you_mean/issue-54109-without-witness_fixed.rs:35:18: 35:24
                                         // mir::Constant
                                         // + span: ui/did_you_mean/issue-54109-without-witness_fixed.rs:35:18: 35:24
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at ui/did_you_mean/issue-54109-without-witness_fixed.rs:35:18: 35:24
        return;                          // scope 0 at ui/did_you_mean/issue-54109-without-witness_fixed.rs:35:18: 35:24
    }
}

fn test_or_par() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/did_you_mean/issue-54109-without-witness_fixed.rs:39:18: 39:18
    let _1: bool;                        // in scope 0 at ui/did_you_mean/issue-54109-without-witness_fixed.rs:40:9: 40:10
    let mut _3: bool;                    // in scope 0 at ui/did_you_mean/issue-54109-without-witness_fixed.rs:42:8: 42:16
    let _4: ();                          // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:62
    let mut _5: std::fmt::Arguments<'_>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _6: &[&str];                 // in scope 0 at ui/did_you_mean/issue-54109-without-witness_fixed.rs:43:18: 43:24
    let mut _7: &[&str; 1];              // in scope 0 at ui/did_you_mean/issue-54109-without-witness_fixed.rs:43:18: 43:24
    let _8: &[&str; 1];                  // in scope 0 at ui/did_you_mean/issue-54109-without-witness_fixed.rs:43:18: 43:24
    let mut _9: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _10: &[core::fmt::ArgumentV1<'_>; 0]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let _11: &[core::fmt::ArgumentV1<'_>; 0]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    scope 1 {
        debug a => _1;                   // in scope 1 at ui/did_you_mean/issue-54109-without-witness_fixed.rs:40:9: 40:10
        let _2: bool;                    // in scope 1 at ui/did_you_mean/issue-54109-without-witness_fixed.rs:41:9: 41:10
        scope 2 {
            debug b => _2;               // in scope 2 at ui/did_you_mean/issue-54109-without-witness_fixed.rs:41:9: 41:10
            let mut _12: &[core::fmt::ArgumentV1<'_>; 0]; // in scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
            let mut _13: &[&str; 1];     // in scope 2 at ui/did_you_mean/issue-54109-without-witness_fixed.rs:43:18: 43:24
        }
    }

    bb0: {
        _1 = const true;                 // scope 0 at ui/did_you_mean/issue-54109-without-witness_fixed.rs:40:13: 40:17
        _2 = const false;                // scope 1 at ui/did_you_mean/issue-54109-without-witness_fixed.rs:41:13: 41:18
        _3 = const true;                 // scope 2 at ui/did_you_mean/issue-54109-without-witness_fixed.rs:42:8: 42:16
        switchInt(move _3) -> [0: bb3, otherwise: bb1]; // scope 2 at ui/did_you_mean/issue-54109-without-witness_fixed.rs:42:8: 42:16
    }

    bb1: {
        _13 = const _;                   // scope 2 at ui/did_you_mean/issue-54109-without-witness_fixed.rs:43:18: 43:24
                                         // mir::Constant
                                         // + span: ui/did_you_mean/issue-54109-without-witness_fixed.rs:43:18: 43:24
                                         // + literal: Const { ty: &[&str; 1], val: Unevaluated(test_or_par, [], Some(promoted[1])) }
        _8 = _13;                        // scope 2 at ui/did_you_mean/issue-54109-without-witness_fixed.rs:43:18: 43:24
        _7 = _8;                         // scope 2 at ui/did_you_mean/issue-54109-without-witness_fixed.rs:43:18: 43:24
        _6 = move _7 as &[&str] (Pointer(Unsize)); // scope 2 at ui/did_you_mean/issue-54109-without-witness_fixed.rs:43:18: 43:24
        _12 = const _;                   // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // + literal: Const { ty: &[core::fmt::ArgumentV1<'_>; 0], val: Unevaluated(test_or_par, [], Some(promoted[0])) }
        _11 = _12;                       // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _10 = _11;                       // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _9 = move _10 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _5 = Arguments::<'_>::new_v1(move _6, move _9) -> bb2; // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb2: {
        _4 = _print(move _5) -> bb3;     // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:62
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:27
                                         // + literal: Const { ty: for<'a> fn(Arguments<'a>) {_print}, val: Value(<ZST>) }
    }

    bb3: {
        return;                          // scope 0 at ui/did_you_mean/issue-54109-without-witness_fixed.rs:45:2: 45:2
    }
}

promoted[0] in test_or_par: &[core::fmt::ArgumentV1<'_>; 0] = {
    let mut _0: &[core::fmt::ArgumentV1<'_>; 0]; // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _1: [core::fmt::ArgumentV1<'_>; 0]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61

    bb0: {
        _1 = [];                         // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    }
}

promoted[1] in test_or_par: &[&str; 1] = {
    let mut _0: &[&str; 1];              // return place in scope 0 at ui/did_you_mean/issue-54109-without-witness_fixed.rs:43:18: 43:24
    let mut _1: [&str; 1];               // in scope 0 at ui/did_you_mean/issue-54109-without-witness_fixed.rs:43:18: 43:24

    bb0: {
        _1 = [const "both\n"];           // scope 0 at ui/did_you_mean/issue-54109-without-witness_fixed.rs:43:18: 43:24
                                         // mir::Constant
                                         // + span: ui/did_you_mean/issue-54109-without-witness_fixed.rs:43:18: 43:24
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at ui/did_you_mean/issue-54109-without-witness_fixed.rs:43:18: 43:24
        return;                          // scope 0 at ui/did_you_mean/issue-54109-without-witness_fixed.rs:43:18: 43:24
    }
}

fn test_while_and() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/did_you_mean/issue-54109-without-witness_fixed.rs:47:21: 47:21
    let _1: bool;                        // in scope 0 at ui/did_you_mean/issue-54109-without-witness_fixed.rs:48:9: 48:10
    let mut _3: bool;                    // in scope 0 at ui/did_you_mean/issue-54109-without-witness_fixed.rs:50:11: 50:17
    let mut _4: bool;                    // in scope 0 at ui/did_you_mean/issue-54109-without-witness_fixed.rs:50:11: 50:12
    let mut _5: bool;                    // in scope 0 at ui/did_you_mean/issue-54109-without-witness_fixed.rs:50:16: 50:17
    let _6: ();                          // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:62
    let mut _7: std::fmt::Arguments<'_>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _8: &[&str];                 // in scope 0 at ui/did_you_mean/issue-54109-without-witness_fixed.rs:51:18: 51:24
    let mut _9: &[&str; 1];              // in scope 0 at ui/did_you_mean/issue-54109-without-witness_fixed.rs:51:18: 51:24
    let _10: &[&str; 1];                 // in scope 0 at ui/did_you_mean/issue-54109-without-witness_fixed.rs:51:18: 51:24
    let mut _11: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _12: &[core::fmt::ArgumentV1<'_>; 0]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let _13: &[core::fmt::ArgumentV1<'_>; 0]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    scope 1 {
        debug a => _1;                   // in scope 1 at ui/did_you_mean/issue-54109-without-witness_fixed.rs:48:9: 48:10
        let _2: bool;                    // in scope 1 at ui/did_you_mean/issue-54109-without-witness_fixed.rs:49:9: 49:10
        scope 2 {
            debug b => _2;               // in scope 2 at ui/did_you_mean/issue-54109-without-witness_fixed.rs:49:9: 49:10
            let mut _14: &[core::fmt::ArgumentV1<'_>; 0]; // in scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
            let mut _15: &[&str; 1];     // in scope 2 at ui/did_you_mean/issue-54109-without-witness_fixed.rs:51:18: 51:24
        }
    }

    bb0: {
        _1 = const true;                 // scope 0 at ui/did_you_mean/issue-54109-without-witness_fixed.rs:48:13: 48:17
        _2 = const false;                // scope 1 at ui/did_you_mean/issue-54109-without-witness_fixed.rs:49:13: 49:18
        goto -> bb1;                     // scope 2 at ui/did_you_mean/issue-54109-without-witness_fixed.rs:50:5: 52:6
    }

    bb1: {
        _4 = _1;                         // scope 2 at ui/did_you_mean/issue-54109-without-witness_fixed.rs:50:11: 50:12
        switchInt(move _4) -> [0: bb2, otherwise: bb3]; // scope 2 at ui/did_you_mean/issue-54109-without-witness_fixed.rs:50:11: 50:17
    }

    bb2: {
        _3 = const false;                // scope 2 at ui/did_you_mean/issue-54109-without-witness_fixed.rs:50:11: 50:17
        goto -> bb4;                     // scope 2 at ui/did_you_mean/issue-54109-without-witness_fixed.rs:50:11: 50:17
    }

    bb3: {
        _5 = _2;                         // scope 2 at ui/did_you_mean/issue-54109-without-witness_fixed.rs:50:16: 50:17
        _3 = move _5;                    // scope 2 at ui/did_you_mean/issue-54109-without-witness_fixed.rs:50:11: 50:17
        goto -> bb4;                     // scope 2 at ui/did_you_mean/issue-54109-without-witness_fixed.rs:50:11: 50:17
    }

    bb4: {
        switchInt(move _3) -> [0: bb7, otherwise: bb5]; // scope 2 at ui/did_you_mean/issue-54109-without-witness_fixed.rs:50:11: 50:17
    }

    bb5: {
        _15 = const _;                   // scope 2 at ui/did_you_mean/issue-54109-without-witness_fixed.rs:51:18: 51:24
                                         // mir::Constant
                                         // + span: ui/did_you_mean/issue-54109-without-witness_fixed.rs:51:18: 51:24
                                         // + literal: Const { ty: &[&str; 1], val: Unevaluated(test_while_and, [], Some(promoted[1])) }
        _10 = _15;                       // scope 2 at ui/did_you_mean/issue-54109-without-witness_fixed.rs:51:18: 51:24
        _9 = _10;                        // scope 2 at ui/did_you_mean/issue-54109-without-witness_fixed.rs:51:18: 51:24
        _8 = move _9 as &[&str] (Pointer(Unsize)); // scope 2 at ui/did_you_mean/issue-54109-without-witness_fixed.rs:51:18: 51:24
        _14 = const _;                   // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // + literal: Const { ty: &[core::fmt::ArgumentV1<'_>; 0], val: Unevaluated(test_while_and, [], Some(promoted[0])) }
        _13 = _14;                       // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _12 = _13;                       // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _11 = move _12 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _7 = Arguments::<'_>::new_v1(move _8, move _11) -> bb6; // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb6: {
        _6 = _print(move _7) -> bb1;     // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:62
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:27
                                         // + literal: Const { ty: for<'a> fn(Arguments<'a>) {_print}, val: Value(<ZST>) }
    }

    bb7: {
        return;                          // scope 0 at ui/did_you_mean/issue-54109-without-witness_fixed.rs:53:2: 53:2
    }
}

promoted[0] in test_while_and: &[core::fmt::ArgumentV1<'_>; 0] = {
    let mut _0: &[core::fmt::ArgumentV1<'_>; 0]; // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _1: [core::fmt::ArgumentV1<'_>; 0]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61

    bb0: {
        _1 = [];                         // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    }
}

promoted[1] in test_while_and: &[&str; 1] = {
    let mut _0: &[&str; 1];              // return place in scope 0 at ui/did_you_mean/issue-54109-without-witness_fixed.rs:51:18: 51:24
    let mut _1: [&str; 1];               // in scope 0 at ui/did_you_mean/issue-54109-without-witness_fixed.rs:51:18: 51:24

    bb0: {
        _1 = [const "both\n"];           // scope 0 at ui/did_you_mean/issue-54109-without-witness_fixed.rs:51:18: 51:24
                                         // mir::Constant
                                         // + span: ui/did_you_mean/issue-54109-without-witness_fixed.rs:51:18: 51:24
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at ui/did_you_mean/issue-54109-without-witness_fixed.rs:51:18: 51:24
        return;                          // scope 0 at ui/did_you_mean/issue-54109-without-witness_fixed.rs:51:18: 51:24
    }
}

fn test_while_or() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/did_you_mean/issue-54109-without-witness_fixed.rs:55:20: 55:20
    let _1: bool;                        // in scope 0 at ui/did_you_mean/issue-54109-without-witness_fixed.rs:56:9: 56:10
    let mut _3: bool;                    // in scope 0 at ui/did_you_mean/issue-54109-without-witness_fixed.rs:58:11: 58:17
    let mut _4: bool;                    // in scope 0 at ui/did_you_mean/issue-54109-without-witness_fixed.rs:58:11: 58:12
    let mut _5: bool;                    // in scope 0 at ui/did_you_mean/issue-54109-without-witness_fixed.rs:58:16: 58:17
    let _6: ();                          // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:62
    let mut _7: std::fmt::Arguments<'_>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _8: &[&str];                 // in scope 0 at ui/did_you_mean/issue-54109-without-witness_fixed.rs:59:18: 59:24
    let mut _9: &[&str; 1];              // in scope 0 at ui/did_you_mean/issue-54109-without-witness_fixed.rs:59:18: 59:24
    let _10: &[&str; 1];                 // in scope 0 at ui/did_you_mean/issue-54109-without-witness_fixed.rs:59:18: 59:24
    let mut _11: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _12: &[core::fmt::ArgumentV1<'_>; 0]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let _13: &[core::fmt::ArgumentV1<'_>; 0]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    scope 1 {
        debug a => _1;                   // in scope 1 at ui/did_you_mean/issue-54109-without-witness_fixed.rs:56:9: 56:10
        let _2: bool;                    // in scope 1 at ui/did_you_mean/issue-54109-without-witness_fixed.rs:57:9: 57:10
        scope 2 {
            debug b => _2;               // in scope 2 at ui/did_you_mean/issue-54109-without-witness_fixed.rs:57:9: 57:10
            let mut _14: &[core::fmt::ArgumentV1<'_>; 0]; // in scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
            let mut _15: &[&str; 1];     // in scope 2 at ui/did_you_mean/issue-54109-without-witness_fixed.rs:59:18: 59:24
        }
    }

    bb0: {
        _1 = const true;                 // scope 0 at ui/did_you_mean/issue-54109-without-witness_fixed.rs:56:13: 56:17
        _2 = const false;                // scope 1 at ui/did_you_mean/issue-54109-without-witness_fixed.rs:57:13: 57:18
        goto -> bb1;                     // scope 2 at ui/did_you_mean/issue-54109-without-witness_fixed.rs:58:5: 60:6
    }

    bb1: {
        _4 = _1;                         // scope 2 at ui/did_you_mean/issue-54109-without-witness_fixed.rs:58:11: 58:12
        switchInt(move _4) -> [0: bb3, otherwise: bb2]; // scope 2 at ui/did_you_mean/issue-54109-without-witness_fixed.rs:58:11: 58:17
    }

    bb2: {
        _3 = const true;                 // scope 2 at ui/did_you_mean/issue-54109-without-witness_fixed.rs:58:11: 58:17
        goto -> bb4;                     // scope 2 at ui/did_you_mean/issue-54109-without-witness_fixed.rs:58:11: 58:17
    }

    bb3: {
        _5 = _2;                         // scope 2 at ui/did_you_mean/issue-54109-without-witness_fixed.rs:58:16: 58:17
        _3 = move _5;                    // scope 2 at ui/did_you_mean/issue-54109-without-witness_fixed.rs:58:11: 58:17
        goto -> bb4;                     // scope 2 at ui/did_you_mean/issue-54109-without-witness_fixed.rs:58:11: 58:17
    }

    bb4: {
        switchInt(move _3) -> [0: bb7, otherwise: bb5]; // scope 2 at ui/did_you_mean/issue-54109-without-witness_fixed.rs:58:11: 58:17
    }

    bb5: {
        _15 = const _;                   // scope 2 at ui/did_you_mean/issue-54109-without-witness_fixed.rs:59:18: 59:24
                                         // mir::Constant
                                         // + span: ui/did_you_mean/issue-54109-without-witness_fixed.rs:59:18: 59:24
                                         // + literal: Const { ty: &[&str; 1], val: Unevaluated(test_while_or, [], Some(promoted[1])) }
        _10 = _15;                       // scope 2 at ui/did_you_mean/issue-54109-without-witness_fixed.rs:59:18: 59:24
        _9 = _10;                        // scope 2 at ui/did_you_mean/issue-54109-without-witness_fixed.rs:59:18: 59:24
        _8 = move _9 as &[&str] (Pointer(Unsize)); // scope 2 at ui/did_you_mean/issue-54109-without-witness_fixed.rs:59:18: 59:24
        _14 = const _;                   // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // + literal: Const { ty: &[core::fmt::ArgumentV1<'_>; 0], val: Unevaluated(test_while_or, [], Some(promoted[0])) }
        _13 = _14;                       // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _12 = _13;                       // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _11 = move _12 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _7 = Arguments::<'_>::new_v1(move _8, move _11) -> bb6; // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb6: {
        _6 = _print(move _7) -> bb1;     // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:62
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:27
                                         // + literal: Const { ty: for<'a> fn(Arguments<'a>) {_print}, val: Value(<ZST>) }
    }

    bb7: {
        return;                          // scope 0 at ui/did_you_mean/issue-54109-without-witness_fixed.rs:61:2: 61:2
    }
}

promoted[0] in test_while_or: &[core::fmt::ArgumentV1<'_>; 0] = {
    let mut _0: &[core::fmt::ArgumentV1<'_>; 0]; // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _1: [core::fmt::ArgumentV1<'_>; 0]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61

    bb0: {
        _1 = [];                         // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    }
}

promoted[1] in test_while_or: &[&str; 1] = {
    let mut _0: &[&str; 1];              // return place in scope 0 at ui/did_you_mean/issue-54109-without-witness_fixed.rs:59:18: 59:24
    let mut _1: [&str; 1];               // in scope 0 at ui/did_you_mean/issue-54109-without-witness_fixed.rs:59:18: 59:24

    bb0: {
        _1 = [const "both\n"];           // scope 0 at ui/did_you_mean/issue-54109-without-witness_fixed.rs:59:18: 59:24
                                         // mir::Constant
                                         // + span: ui/did_you_mean/issue-54109-without-witness_fixed.rs:59:18: 59:24
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at ui/did_you_mean/issue-54109-without-witness_fixed.rs:59:18: 59:24
        return;                          // scope 0 at ui/did_you_mean/issue-54109-without-witness_fixed.rs:59:18: 59:24
    }
}
