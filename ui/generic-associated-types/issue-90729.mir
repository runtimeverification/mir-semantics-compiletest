// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
fn <impl at ui/generic-associated-types/issue-90729.rs:23:1: 23:23>::new() -> Bytes<T> {
    let mut _0: Bytes<T>;                // return place in scope 0 at ui/generic-associated-types/issue-90729.rs:27:21: 27:25

    bb0: {
        return;                          // scope 0 at ui/generic-associated-types/issue-90729.rs:31:6: 31:6
    }
}

fn main() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/generic-associated-types/issue-90729.rs:34:11: 34:11
    let _1: Bytes<Utf8>;                 // in scope 0 at ui/generic-associated-types/issue-90729.rs:35:9: 35:11
    scope 1 {
        debug _b => _1;                  // in scope 1 at ui/generic-associated-types/issue-90729.rs:35:9: 35:11
    }

    bb0: {
        _1 = Bytes::<Utf8>::new() -> bb1; // scope 0 at ui/generic-associated-types/issue-90729.rs:35:14: 35:34
                                         // mir::Constant
                                         // + span: ui/generic-associated-types/issue-90729.rs:35:14: 35:32
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: fn() -> Bytes<Utf8> {Bytes::<Utf8>::new}, val: Value(<ZST>) }
    }

    bb1: {
        return;                          // scope 0 at ui/generic-associated-types/issue-90729.rs:36:2: 36:2
    }
}
