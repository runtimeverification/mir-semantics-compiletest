// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
fn MyTrait::do_sth2(_1: <Self as MyTrait>::Assoc<'_, '_>) -> () {
    debug arg => _1;                     // in scope 0 at ui/generic-associated-types/issue-87748.rs:9:16: 9:19
    let mut _0: ();                      // return place in scope 0 at ui/generic-associated-types/issue-87748.rs:9:42: 9:42

    bb0: {
        drop(_1) -> bb1;                 // scope 0 at ui/generic-associated-types/issue-87748.rs:9:43: 9:44
    }

    bb1: {
        return;                          // scope 0 at ui/generic-associated-types/issue-87748.rs:9:44: 9:44
    }
}

fn <impl at ui/generic-associated-types/issue-87748.rs:14:1: 14:21>::do_sth(_1: u32) -> () {
    let mut _0: ();                      // return place in scope 0 at ui/generic-associated-types/issue-87748.rs:17:23: 17:23

    bb0: {
        return;                          // scope 0 at ui/generic-associated-types/issue-87748.rs:17:25: 17:25
    }
}

fn <impl at ui/generic-associated-types/issue-87748.rs:14:1: 14:21>::do_sth2(_1: u32) -> () {
    let mut _0: ();                      // return place in scope 0 at ui/generic-associated-types/issue-87748.rs:18:50: 18:50

    bb0: {
        return;                          // scope 0 at ui/generic-associated-types/issue-87748.rs:18:52: 18:52
    }
}

fn main() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/generic-associated-types/issue-87748.rs:21:11: 21:11

    bb0: {
        return;                          // scope 0 at ui/generic-associated-types/issue-87748.rs:21:13: 21:13
    }
}
