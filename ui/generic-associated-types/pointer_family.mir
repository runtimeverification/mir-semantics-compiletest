// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
fn <impl at ui/generic-associated-types/pointer_family.rs:14:1: 14:33>::new(_1: T) -> Arc<T> {
    debug value => _1;                   // in scope 0 at ui/generic-associated-types/pointer_family.rs:16:15: 16:20
    let mut _0: std::sync::Arc<T>;       // return place in scope 0 at ui/generic-associated-types/pointer_family.rs:16:28: 16:44
    let mut _2: T;                       // in scope 0 at ui/generic-associated-types/pointer_family.rs:17:18: 17:23

    bb0: {
        _2 = move _1;                    // scope 0 at ui/generic-associated-types/pointer_family.rs:17:18: 17:23
        _0 = Arc::<T>::new(move _2) -> bb1; // scope 0 at ui/generic-associated-types/pointer_family.rs:17:9: 17:24
                                         // mir::Constant
                                         // + span: ui/generic-associated-types/pointer_family.rs:17:9: 17:17
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: fn(T) -> Arc<T> {Arc::<T>::new}, val: Value(<ZST>) }
    }

    bb1: {
        return;                          // scope 0 at ui/generic-associated-types/pointer_family.rs:18:6: 18:6
    }
}

fn <impl at ui/generic-associated-types/pointer_family.rs:23:1: 23:32>::new(_1: T) -> Rc<T> {
    debug value => _1;                   // in scope 0 at ui/generic-associated-types/pointer_family.rs:25:15: 25:20
    let mut _0: std::rc::Rc<T>;          // return place in scope 0 at ui/generic-associated-types/pointer_family.rs:25:28: 25:44
    let mut _2: T;                       // in scope 0 at ui/generic-associated-types/pointer_family.rs:26:17: 26:22

    bb0: {
        _2 = move _1;                    // scope 0 at ui/generic-associated-types/pointer_family.rs:26:17: 26:22
        _0 = Rc::<T>::new(move _2) -> bb1; // scope 0 at ui/generic-associated-types/pointer_family.rs:26:9: 26:23
                                         // mir::Constant
                                         // + span: ui/generic-associated-types/pointer_family.rs:26:9: 26:16
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: fn(T) -> Rc<T> {Rc::<T>::new}, val: Value(<ZST>) }
    }

    bb1: {
        return;                          // scope 0 at ui/generic-associated-types/pointer_family.rs:27:6: 27:6
    }
}

fn main() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/generic-associated-types/pointer_family.rs:34:11: 34:11

    bb0: {
        return;                          // scope 0 at ui/generic-associated-types/pointer_family.rs:34:13: 34:13
    }
}
