// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
fn main() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/generic-associated-types/issue-87750.rs:22:11: 22:11
    let _1: Rc<Node<i32, RcFamily>>;     // in scope 0 at ui/generic-associated-types/issue-87750.rs:23:9: 23:14
    scope 1 {
        debug _list => _1;               // in scope 1 at ui/generic-associated-types/issue-87750.rs:23:9: 23:14
    }

    bb0: {
        return;                          // scope 0 at ui/generic-associated-types/issue-87750.rs:24:2: 24:2
    }
}

fn Rc(_1: Box<T>) -> Rc<T> {
    let mut _0: Rc<T>;                   // return place in scope 0 at ui/generic-associated-types/issue-87750.rs:7:1: 7:13

    bb0: {
        _0 = Rc::<T>(move _1);           // scope 0 at ui/generic-associated-types/issue-87750.rs:7:1: 7:13
        return;                          // scope 0 at ui/generic-associated-types/issue-87750.rs:7:1: 7:13
    }
}

// MIR FOR CTFE
fn Rc(_1: Box<T>) -> Rc<T> {
    let mut _0: Rc<T>;                   // return place in scope 0 at ui/generic-associated-types/issue-87750.rs:7:1: 7:13

    bb0: {
        _0 = Rc::<T>(move _1);           // scope 0 at ui/generic-associated-types/issue-87750.rs:7:1: 7:13
        return;                          // scope 0 at ui/generic-associated-types/issue-87750.rs:7:1: 7:13
    }
}

fn Node::Cons(_1: <P as PointerFamily>::Pointer<Node<T, P>>) -> Node<T, P> {
    let mut _0: Node<T, P>;              // return place in scope 0 at ui/generic-associated-types/issue-87750.rs:19:5: 19:9

    bb0: {
        _0 = Node::<T, P>::Cons(move _1); // scope 0 at ui/generic-associated-types/issue-87750.rs:19:5: 19:9
        return;                          // scope 0 at ui/generic-associated-types/issue-87750.rs:19:5: 19:9
    }
}

// MIR FOR CTFE
fn Node::Cons(_1: <P as PointerFamily>::Pointer<Node<T, P>>) -> Node<T, P> {
    let mut _0: Node<T, P>;              // return place in scope 0 at ui/generic-associated-types/issue-87750.rs:19:5: 19:9

    bb0: {
        _0 = Node::<T, P>::Cons(move _1); // scope 0 at ui/generic-associated-types/issue-87750.rs:19:5: 19:9
        return;                          // scope 0 at ui/generic-associated-types/issue-87750.rs:19:5: 19:9
    }
}
