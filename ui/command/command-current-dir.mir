// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
fn main() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/command/command-current-dir.rs:11:11: 11:11
    let _1: std::path::PathBuf;          // in scope 0 at ui/command/command-current-dir.rs:13:9: 13:11
    let mut _2: std::result::Result<std::path::PathBuf, std::io::Error>; // in scope 0 at ui/command/command-current-dir.rs:13:14: 13:32
    let mut _3: bool;                    // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:344:9: 347:10
    let mut _4: std::option::Option<&str>; // in scope 0 at ui/command/command-current-dir.rs:14:17: 14:54
    let mut _5: &std::option::Option<std::string::String>; // in scope 0 at ui/command/command-current-dir.rs:14:17: 14:54
    let _6: std::option::Option<std::string::String>; // in scope 0 at ui/command/command-current-dir.rs:14:17: 14:43
    let mut _7: &mut std::iter::Skip<std::env::Args>; // in scope 0 at ui/command/command-current-dir.rs:14:17: 14:43
    let mut _8: std::iter::Skip<std::env::Args>; // in scope 0 at ui/command/command-current-dir.rs:14:17: 14:36
    let mut _9: std::env::Args;          // in scope 0 at ui/command/command-current-dir.rs:14:17: 14:28
    let mut _10: bool;                   // in scope 0 at ui/command/command-current-dir.rs:14:61: 14:74
    let mut _11: isize;                  // in scope 0 at ui/command/command-current-dir.rs:14:56: 14:75
    let mut _13: std::result::Result<std::path::PathBuf, std::io::Error>; // in scope 0 at ui/command/command-current-dir.rs:15:19: 15:37
    let mut _14: (&&std::ffi::OsStr, &&str); // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _15: &&std::ffi::OsStr;      // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let _16: &std::ffi::OsStr;           // in scope 0 at ui/command/command-current-dir.rs:16:20: 16:44
    let mut _17: std::option::Option<&std::ffi::OsStr>; // in scope 0 at ui/command/command-current-dir.rs:16:20: 16:35
    let mut _18: &std::path::Path;       // in scope 0 at ui/command/command-current-dir.rs:16:20: 16:35
    let _19: &std::path::Path;           // in scope 0 at ui/command/command-current-dir.rs:16:20: 16:35
    let mut _20: &std::path::PathBuf;    // in scope 0 at ui/command/command-current-dir.rs:16:20: 16:35
    let mut _21: &&str;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _24: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    let mut _25: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
    let mut _26: &&std::ffi::OsStr;      // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
    let mut _27: &&str;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
    let _29: !;                          // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
    let mut _30: core::panicking::AssertKind; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
    let mut _31: &&std::ffi::OsStr;      // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let _32: &&std::ffi::OsStr;          // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let mut _33: &&str;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let _34: &&str;                      // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let mut _35: std::option::Option<std::fmt::Arguments<'_>>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
    let _36: !;                          // in scope 0 at ui/command/command-current-dir.rs:17:9: 17:30
    let mut _38: std::option::Option<&std::ffi::OsStr>; // in scope 0 at ui/command/command-current-dir.rs:19:15: 19:29
    let mut _39: &std::path::Path;       // in scope 0 at ui/command/command-current-dir.rs:19:15: 19:29
    let _40: &std::path::Path;           // in scope 0 at ui/command/command-current-dir.rs:19:15: 19:29
    let mut _41: &std::path::PathBuf;    // in scope 0 at ui/command/command-current-dir.rs:19:15: 19:29
    let mut _43: std::option::Option<&std::path::Path>; // in scope 0 at ui/command/command-current-dir.rs:20:15: 20:26
    let mut _44: &std::path::Path;       // in scope 0 at ui/command/command-current-dir.rs:20:15: 20:26
    let _45: &std::path::Path;           // in scope 0 at ui/command/command-current-dir.rs:20:15: 20:26
    let mut _46: &std::path::PathBuf;    // in scope 0 at ui/command/command-current-dir.rs:20:15: 20:26
    let _47: ();                         // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:209:9: 209:63
    let mut _48: std::fmt::Arguments<'_>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:209:29: 209:62
    let mut _49: &[&str];                // in scope 0 at ui/command/command-current-dir.rs:21:15: 21:25
    let mut _50: &[&str; 2];             // in scope 0 at ui/command/command-current-dir.rs:21:15: 21:25
    let _51: &[&str; 2];                 // in scope 0 at ui/command/command-current-dir.rs:21:15: 21:25
    let mut _52: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:209:29: 209:62
    let mut _53: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:209:29: 209:62
    let _54: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:209:29: 209:62
    let _55: [core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:209:29: 209:62
    let mut _56: core::fmt::ArgumentV1<'_>; // in scope 0 at ui/command/command-current-dir.rs:21:27: 21:30
    let mut _57: &&std::path::Path;      // in scope 0 at ui/command/command-current-dir.rs:21:27: 21:30
    let _58: &&std::path::Path;          // in scope 0 at ui/command/command-current-dir.rs:21:27: 21:30
    let _59: ();                         // in scope 0 at ui/command/command-current-dir.rs:27:5: 27:40
    let mut _60: std::result::Result<(), std::io::Error>; // in scope 0 at ui/command/command-current-dir.rs:27:5: 27:31
    let mut _61: &&std::path::Path;      // in scope 0 at ui/command/command-current-dir.rs:27:26: 27:30
    let mut _63: &std::path::Path;       // in scope 0 at ui/command/command-current-dir.rs:28:15: 28:30
    let mut _65: &std::path::Path;       // in scope 0 at ui/command/command-current-dir.rs:29:15: 29:30
    let _66: ();                         // in scope 0 at ui/command/command-current-dir.rs:30:5: 30:38
    let mut _67: std::result::Result<(), std::io::Error>; // in scope 0 at ui/command/command-current-dir.rs:30:5: 30:29
    let mut _68: &std::path::PathBuf;    // in scope 0 at ui/command/command-current-dir.rs:30:24: 30:28
    let _69: ();                         // in scope 0 at ui/command/command-current-dir.rs:31:5: 31:38
    let mut _70: std::result::Result<(), std::io::Error>; // in scope 0 at ui/command/command-current-dir.rs:31:5: 31:29
    let mut _71: &std::path::PathBuf;    // in scope 0 at ui/command/command-current-dir.rs:31:24: 31:28
    let _72: u64;                        // in scope 0 at ui/command/command-current-dir.rs:32:5: 32:42
    let mut _73: std::result::Result<u64, std::io::Error>; // in scope 0 at ui/command/command-current-dir.rs:32:5: 32:33
    let mut _74: &std::path::PathBuf;    // in scope 0 at ui/command/command-current-dir.rs:32:14: 32:17
    let mut _75: std::path::PathBuf;     // in scope 0 at ui/command/command-current-dir.rs:32:19: 32:32
    let mut _76: &std::path::Path;       // in scope 0 at ui/command/command-current-dir.rs:32:19: 32:32
    let _77: &std::path::Path;           // in scope 0 at ui/command/command-current-dir.rs:32:19: 32:32
    let mut _78: &std::path::PathBuf;    // in scope 0 at ui/command/command-current-dir.rs:32:19: 32:32
    let mut _79: &std::ffi::OsStr;       // in scope 0 at ui/command/command-current-dir.rs:32:28: 32:31
    let mut _81: &std::path::Path;       // in scope 0 at ui/command/command-current-dir.rs:41:9: 41:38
    let _82: &std::path::Path;           // in scope 0 at ui/command/command-current-dir.rs:41:9: 41:28
    let mut _83: &str;                   // in scope 0 at ui/command/command-current-dir.rs:41:19: 41:27
    let _84: &str;                       // in scope 0 at ui/command/command-current-dir.rs:41:19: 41:27
    let mut _85: &std::ffi::OsStr;       // in scope 0 at ui/command/command-current-dir.rs:41:34: 41:37
    let mut _87: std::result::Result<std::process::ExitStatus, std::io::Error>; // in scope 0 at ui/command/command-current-dir.rs:44:18: 47:18
    let mut _88: &mut std::process::Command; // in scope 0 at ui/command/command-current-dir.rs:44:18: 47:18
    let mut _89: &mut std::process::Command; // in scope 0 at ui/command/command-current-dir.rs:44:18: 46:28
    let mut _90: &mut std::process::Command; // in scope 0 at ui/command/command-current-dir.rs:44:18: 46:28
    let mut _91: &mut std::process::Command; // in scope 0 at ui/command/command-current-dir.rs:44:18: 45:28
    let mut _92: &mut std::process::Command; // in scope 0 at ui/command/command-current-dir.rs:44:18: 45:28
    let mut _93: std::process::Command;  // in scope 0 at ui/command/command-current-dir.rs:44:18: 44:44
    let mut _94: std::path::PathBuf;     // in scope 0 at ui/command/command-current-dir.rs:44:31: 44:43
    let mut _95: bool;                   // in scope 0 at ui/command/command-current-dir.rs:49:5: 49:30
    let mut _96: bool;                   // in scope 0 at ui/command/command-current-dir.rs:49:13: 49:29
    let mut _97: &std::process::ExitStatus; // in scope 0 at ui/command/command-current-dir.rs:49:13: 49:29
    let mut _98: !;                      // in scope 0 at ui/command/command-current-dir.rs:49:5: 49:30
    scope 1 {
        debug me => _1;                  // in scope 1 at ui/command/command-current-dir.rs:13:9: 13:11
        let _12: std::path::PathBuf;     // in scope 1 at ui/command/command-current-dir.rs:15:13: 15:16
        let _37: &std::ffi::OsStr;       // in scope 1 at ui/command/command-current-dir.rs:19:9: 19:12
        scope 2 {
            debug cwd => _12;            // in scope 2 at ui/command/command-current-dir.rs:15:13: 15:16
            let _22: &&std::ffi::OsStr;  // in scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
            let _23: &&str;              // in scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
            let mut _100: &&str;         // in scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
            scope 3 {
                debug left_val => _22;   // in scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
                debug right_val => _23;  // in scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
                let _28: core::panicking::AssertKind; // in scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                scope 4 {
                    debug kind => _28;   // in scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                }
            }
        }
        scope 5 {
            debug exe => _37;            // in scope 5 at ui/command/command-current-dir.rs:19:9: 19:12
            let _42: &std::path::Path;   // in scope 5 at ui/command/command-current-dir.rs:20:9: 20:12
            scope 6 {
                debug cwd => _42;        // in scope 6 at ui/command/command-current-dir.rs:20:9: 20:12
                let _62: std::path::PathBuf; // in scope 6 at ui/command/command-current-dir.rs:28:9: 28:12
                let mut _99: &[&str; 2]; // in scope 6 at ui/command/command-current-dir.rs:21:15: 21:25
                scope 7 {
                    debug foo => _62;    // in scope 7 at ui/command/command-current-dir.rs:28:9: 28:12
                    let _64: std::path::PathBuf; // in scope 7 at ui/command/command-current-dir.rs:29:9: 29:12
                    scope 8 {
                        debug bar => _64; // in scope 8 at ui/command/command-current-dir.rs:29:9: 29:12
                        let _80: std::path::PathBuf; // in scope 8 at ui/command/command-current-dir.rs:38:9: 38:21
                        scope 9 {
                            debug relative_exe => _80; // in scope 9 at ui/command/command-current-dir.rs:38:9: 38:21
                            let _86: std::process::ExitStatus; // in scope 9 at ui/command/command-current-dir.rs:44:9: 44:15
                            scope 10 {
                                debug status => _86; // in scope 10 at ui/command/command-current-dir.rs:44:9: 44:15
                            }
                        }
                    }
                }
            }
        }
    }

    bb0: {
        _2 = current_exe() -> bb1;       // scope 0 at ui/command/command-current-dir.rs:13:14: 13:32
                                         // mir::Constant
                                         // + span: ui/command/command-current-dir.rs:13:14: 13:30
                                         // + literal: Const { ty: fn() -> Result<PathBuf, std::io::Error> {current_exe}, val: Value(<ZST>) }
    }

    bb1: {
        _1 = Result::<PathBuf, std::io::Error>::unwrap(move _2) -> bb2; // scope 0 at ui/command/command-current-dir.rs:13:14: 13:41
                                         // mir::Constant
                                         // + span: ui/command/command-current-dir.rs:13:33: 13:39
                                         // + literal: Const { ty: fn(Result<PathBuf, std::io::Error>) -> PathBuf {Result::<PathBuf, std::io::Error>::unwrap}, val: Value(<ZST>) }
    }

    bb2: {
        _9 = args() -> [return: bb3, unwind: bb65]; // scope 1 at ui/command/command-current-dir.rs:14:17: 14:28
                                         // mir::Constant
                                         // + span: ui/command/command-current-dir.rs:14:17: 14:26
                                         // + literal: Const { ty: fn() -> Args {args}, val: Value(<ZST>) }
    }

    bb3: {
        _8 = <Args as Iterator>::skip(move _9, const 1_usize) -> [return: bb4, unwind: bb65]; // scope 1 at ui/command/command-current-dir.rs:14:17: 14:36
                                         // mir::Constant
                                         // + span: ui/command/command-current-dir.rs:14:29: 14:33
                                         // + literal: Const { ty: fn(Args, usize) -> Skip<Args> {<Args as Iterator>::skip}, val: Value(<ZST>) }
    }

    bb4: {
        _7 = &mut _8;                    // scope 1 at ui/command/command-current-dir.rs:14:17: 14:43
        _6 = <Skip<Args> as Iterator>::next(move _7) -> [return: bb5, unwind: bb64]; // scope 1 at ui/command/command-current-dir.rs:14:17: 14:43
                                         // mir::Constant
                                         // + span: ui/command/command-current-dir.rs:14:37: 14:41
                                         // + literal: Const { ty: for<'a> fn(&'a mut Skip<Args>) -> Option<<Skip<Args> as Iterator>::Item> {<Skip<Args> as Iterator>::next}, val: Value(<ZST>) }
    }

    bb5: {
        _5 = &_6;                        // scope 1 at ui/command/command-current-dir.rs:14:17: 14:54
        _4 = Option::<String>::as_deref(move _5) -> [return: bb6, unwind: bb63]; // scope 1 at ui/command/command-current-dir.rs:14:17: 14:54
                                         // mir::Constant
                                         // + span: ui/command/command-current-dir.rs:14:44: 14:52
                                         // + literal: Const { ty: for<'a> fn(&'a Option<String>) -> Option<&'a <String as Deref>::Target> {Option::<String>::as_deref}, val: Value(<ZST>) }
    }

    bb6: {
        _11 = discriminant(_4);          // scope 1 at ui/command/command-current-dir.rs:14:17: 14:54
        switchInt(move _11) -> [1: bb8, otherwise: bb7]; // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:344:9: 344:9
    }

    bb7: {
        _3 = const false;                // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:346:18: 346:23
        goto -> bb11;                    // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:346:18: 346:23
    }

    bb8: {
        _10 = <str as PartialEq>::eq(((_4 as Some).0: &str), const "current-dir") -> [return: bb9, unwind: bb63]; // scope 1 at ui/command/command-current-dir.rs:14:61: 14:74
                                         // mir::Constant
                                         // + span: ui/command/command-current-dir.rs:14:61: 14:74
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a str, &'b str) -> bool {<str as PartialEq>::eq}, val: Value(<ZST>) }
                                         // mir::Constant
                                         // + span: ui/command/command-current-dir.rs:14:61: 14:74
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
    }

    bb9: {
        switchInt(move _10) -> [0: bb7, otherwise: bb10]; // scope 1 at ui/command/command-current-dir.rs:14:61: 14:74
    }

    bb10: {
        _3 = const true;                 // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:345:48: 345:52
        goto -> bb11;                    // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:345:48: 345:52
    }

    bb11: {
        drop(_6) -> [return: bb12, unwind: bb64]; // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:347:9: 347:10
    }

    bb12: {
        drop(_8) -> [return: bb13, unwind: bb65]; // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:347:9: 347:10
    }

    bb13: {
        switchInt(move _3) -> [0: bb23, otherwise: bb14]; // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:344:9: 347:10
    }

    bb14: {
        _13 = current_dir() -> [return: bb15, unwind: bb65]; // scope 1 at ui/command/command-current-dir.rs:15:19: 15:37
                                         // mir::Constant
                                         // + span: ui/command/command-current-dir.rs:15:19: 15:35
                                         // + literal: Const { ty: fn() -> Result<PathBuf, std::io::Error> {current_dir}, val: Value(<ZST>) }
    }

    bb15: {
        _12 = Result::<PathBuf, std::io::Error>::unwrap(move _13) -> [return: bb16, unwind: bb65]; // scope 1 at ui/command/command-current-dir.rs:15:19: 15:46
                                         // mir::Constant
                                         // + span: ui/command/command-current-dir.rs:15:38: 15:44
                                         // + literal: Const { ty: fn(Result<PathBuf, std::io::Error>) -> PathBuf {Result::<PathBuf, std::io::Error>::unwrap}, val: Value(<ZST>) }
    }

    bb16: {
        _20 = &_12;                      // scope 2 at ui/command/command-current-dir.rs:16:20: 16:35
        _19 = <PathBuf as Deref>::deref(move _20) -> [return: bb17, unwind: bb62]; // scope 2 at ui/command/command-current-dir.rs:16:20: 16:35
                                         // mir::Constant
                                         // + span: ui/command/command-current-dir.rs:16:20: 16:35
                                         // + literal: Const { ty: for<'a> fn(&'a PathBuf) -> &'a <PathBuf as Deref>::Target {<PathBuf as Deref>::deref}, val: Value(<ZST>) }
    }

    bb17: {
        _18 = _19;                       // scope 2 at ui/command/command-current-dir.rs:16:20: 16:35
        _17 = Path::file_name(move _18) -> [return: bb18, unwind: bb62]; // scope 2 at ui/command/command-current-dir.rs:16:20: 16:35
                                         // mir::Constant
                                         // + span: ui/command/command-current-dir.rs:16:24: 16:33
                                         // + literal: Const { ty: for<'a> fn(&'a Path) -> Option<&'a OsStr> {Path::file_name}, val: Value(<ZST>) }
    }

    bb18: {
        _16 = Option::<&OsStr>::unwrap(move _17) -> [return: bb19, unwind: bb62]; // scope 2 at ui/command/command-current-dir.rs:16:20: 16:44
                                         // mir::Constant
                                         // + span: ui/command/command-current-dir.rs:16:36: 16:42
                                         // + literal: Const { ty: fn(Option<&OsStr>) -> &OsStr {Option::<&OsStr>::unwrap}, val: Value(<ZST>) }
    }

    bb19: {
        _15 = &_16;                      // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _100 = const _;                  // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // + literal: Const { ty: &&str, val: Unevaluated(main, [], Some(promoted[1])) }
        _21 = _100;                      // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _14 = (move _15, move _21);      // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _22 = (_14.0: &&std::ffi::OsStr); // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _23 = (_14.1: &&str);            // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _26 = _22;                       // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
        _27 = _23;                       // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
        _25 = <&OsStr as PartialEq<&str>>::eq(move _26, move _27) -> [return: bb20, unwind: bb62]; // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a &OsStr, &'b &str) -> bool {<&OsStr as PartialEq<&str>>::eq}, val: Value(<ZST>) }
    }

    bb20: {
        _24 = Not(move _25);             // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
        switchInt(move _24) -> [0: bb22, otherwise: bb21]; // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    }

    bb21: {
        _28 = const core::panicking::AssertKind::Eq; // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _30 = const core::panicking::AssertKind::Eq; // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _32 = _22;                       // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _31 = _32;                       // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _34 = _23;                       // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _33 = _34;                       // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _35 = Option::<Arguments<'_>>::None; // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
        _29 = core::panicking::assert_failed::<&OsStr, &str>(move _30, move _31, move _33, move _35) -> bb62; // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:53
                                         // + literal: Const { ty: for<'a, 'b, 'c> fn(core::panicking::AssertKind, &'a &OsStr, &'b &str, Option<Arguments<'c>>) -> ! {core::panicking::assert_failed::<&OsStr, &str>}, val: Value(<ZST>) }
    }

    bb22: {
        _36 = exit(const 0_i32) -> bb62; // scope 2 at ui/command/command-current-dir.rs:17:9: 17:30
                                         // mir::Constant
                                         // + span: ui/command/command-current-dir.rs:17:9: 17:27
                                         // + literal: Const { ty: fn(i32) -> ! {exit}, val: Value(<ZST>) }
    }

    bb23: {
        _41 = &_1;                       // scope 1 at ui/command/command-current-dir.rs:19:15: 19:29
        _40 = <PathBuf as Deref>::deref(move _41) -> [return: bb24, unwind: bb65]; // scope 1 at ui/command/command-current-dir.rs:19:15: 19:29
                                         // mir::Constant
                                         // + span: ui/command/command-current-dir.rs:19:15: 19:29
                                         // + literal: Const { ty: for<'a> fn(&'a PathBuf) -> &'a <PathBuf as Deref>::Target {<PathBuf as Deref>::deref}, val: Value(<ZST>) }
    }

    bb24: {
        _39 = _40;                       // scope 1 at ui/command/command-current-dir.rs:19:15: 19:29
        _38 = Path::file_name(move _39) -> [return: bb25, unwind: bb65]; // scope 1 at ui/command/command-current-dir.rs:19:15: 19:29
                                         // mir::Constant
                                         // + span: ui/command/command-current-dir.rs:19:18: 19:27
                                         // + literal: Const { ty: for<'a> fn(&'a Path) -> Option<&'a OsStr> {Path::file_name}, val: Value(<ZST>) }
    }

    bb25: {
        _37 = Option::<&OsStr>::unwrap(move _38) -> [return: bb26, unwind: bb65]; // scope 1 at ui/command/command-current-dir.rs:19:15: 19:38
                                         // mir::Constant
                                         // + span: ui/command/command-current-dir.rs:19:30: 19:36
                                         // + literal: Const { ty: fn(Option<&OsStr>) -> &OsStr {Option::<&OsStr>::unwrap}, val: Value(<ZST>) }
    }

    bb26: {
        _46 = &_1;                       // scope 5 at ui/command/command-current-dir.rs:20:15: 20:26
        _45 = <PathBuf as Deref>::deref(move _46) -> [return: bb27, unwind: bb65]; // scope 5 at ui/command/command-current-dir.rs:20:15: 20:26
                                         // mir::Constant
                                         // + span: ui/command/command-current-dir.rs:20:15: 20:26
                                         // + literal: Const { ty: for<'a> fn(&'a PathBuf) -> &'a <PathBuf as Deref>::Target {<PathBuf as Deref>::deref}, val: Value(<ZST>) }
    }

    bb27: {
        _44 = _45;                       // scope 5 at ui/command/command-current-dir.rs:20:15: 20:26
        _43 = Path::parent(move _44) -> [return: bb28, unwind: bb65]; // scope 5 at ui/command/command-current-dir.rs:20:15: 20:26
                                         // mir::Constant
                                         // + span: ui/command/command-current-dir.rs:20:18: 20:24
                                         // + literal: Const { ty: for<'a> fn(&'a Path) -> Option<&'a Path> {Path::parent}, val: Value(<ZST>) }
    }

    bb28: {
        _42 = Option::<&Path>::unwrap(move _43) -> [return: bb29, unwind: bb65]; // scope 5 at ui/command/command-current-dir.rs:20:15: 20:35
                                         // mir::Constant
                                         // + span: ui/command/command-current-dir.rs:20:27: 20:33
                                         // + literal: Const { ty: fn(Option<&Path>) -> &Path {Option::<&Path>::unwrap}, val: Value(<ZST>) }
    }

    bb29: {
        _99 = const _;                   // scope 6 at ui/command/command-current-dir.rs:21:15: 21:25
                                         // mir::Constant
                                         // + span: ui/command/command-current-dir.rs:21:15: 21:25
                                         // + literal: Const { ty: &[&str; 2], val: Unevaluated(main, [], Some(promoted[0])) }
        _51 = _99;                       // scope 6 at ui/command/command-current-dir.rs:21:15: 21:25
        _50 = _51;                       // scope 6 at ui/command/command-current-dir.rs:21:15: 21:25
        _49 = move _50 as &[&str] (Pointer(Unsize)); // scope 6 at ui/command/command-current-dir.rs:21:15: 21:25
        _58 = &_42;                      // scope 6 at ui/command/command-current-dir.rs:21:27: 21:30
        _57 = _58;                       // scope 6 at ui/command/command-current-dir.rs:21:27: 21:30
        _56 = core::fmt::ArgumentV1::<'_>::new_debug::<&Path>(move _57) -> [return: bb30, unwind: bb65]; // scope 6 at ui/command/command-current-dir.rs:21:27: 21:30
                                         // mir::Constant
                                         // + span: ui/command/command-current-dir.rs:21:27: 21:30
                                         // + user_ty: UserType(1)
                                         // + literal: Const { ty: for<'b> fn(&'b &Path) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_debug::<&Path>}, val: Value(<ZST>) }
    }

    bb30: {
        _55 = [move _56];                // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:209:29: 209:62
        _54 = &_55;                      // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:209:29: 209:62
        _53 = _54;                       // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:209:29: 209:62
        _52 = move _53 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:209:29: 209:62
        _48 = Arguments::<'_>::new_v1(move _49, move _52) -> [return: bb31, unwind: bb65]; // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:209:29: 209:62
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:209:29: 209:62
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb31: {
        _47 = _eprint(move _48) -> [return: bb32, unwind: bb65]; // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:209:9: 209:63
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:209:9: 209:28
                                         // + literal: Const { ty: for<'a> fn(Arguments<'a>) {_eprint}, val: Value(<ZST>) }
    }

    bb32: {
        _61 = &_42;                      // scope 6 at ui/command/command-current-dir.rs:27:26: 27:30
        _60 = set_current_dir::<&&Path>(move _61) -> [return: bb33, unwind: bb65]; // scope 6 at ui/command/command-current-dir.rs:27:5: 27:31
                                         // mir::Constant
                                         // + span: ui/command/command-current-dir.rs:27:5: 27:25
                                         // + literal: Const { ty: fn(&&Path) -> Result<(), std::io::Error> {set_current_dir::<&&Path>}, val: Value(<ZST>) }
    }

    bb33: {
        _59 = Result::<(), std::io::Error>::unwrap(move _60) -> [return: bb34, unwind: bb65]; // scope 6 at ui/command/command-current-dir.rs:27:5: 27:40
                                         // mir::Constant
                                         // + span: ui/command/command-current-dir.rs:27:32: 27:38
                                         // + literal: Const { ty: fn(Result<(), std::io::Error>) {Result::<(), std::io::Error>::unwrap}, val: Value(<ZST>) }
    }

    bb34: {
        _63 = _42;                       // scope 6 at ui/command/command-current-dir.rs:28:15: 28:30
        _62 = Path::join::<&str>(move _63, const "foo") -> [return: bb35, unwind: bb65]; // scope 6 at ui/command/command-current-dir.rs:28:15: 28:30
                                         // mir::Constant
                                         // + span: ui/command/command-current-dir.rs:28:19: 28:23
                                         // + literal: Const { ty: for<'a> fn(&'a Path, &str) -> PathBuf {Path::join::<&str>}, val: Value(<ZST>) }
                                         // mir::Constant
                                         // + span: ui/command/command-current-dir.rs:28:24: 28:29
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
    }

    bb35: {
        _65 = _42;                       // scope 7 at ui/command/command-current-dir.rs:29:15: 29:30
        _64 = Path::join::<&str>(move _65, const "bar") -> [return: bb36, unwind: bb61]; // scope 7 at ui/command/command-current-dir.rs:29:15: 29:30
                                         // mir::Constant
                                         // + span: ui/command/command-current-dir.rs:29:19: 29:23
                                         // + literal: Const { ty: for<'a> fn(&'a Path, &str) -> PathBuf {Path::join::<&str>}, val: Value(<ZST>) }
                                         // mir::Constant
                                         // + span: ui/command/command-current-dir.rs:29:24: 29:29
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
    }

    bb36: {
        _68 = &_62;                      // scope 8 at ui/command/command-current-dir.rs:30:24: 30:28
        _67 = create_dir_all::<&PathBuf>(move _68) -> [return: bb37, unwind: bb60]; // scope 8 at ui/command/command-current-dir.rs:30:5: 30:29
                                         // mir::Constant
                                         // + span: ui/command/command-current-dir.rs:30:5: 30:23
                                         // + literal: Const { ty: fn(&PathBuf) -> Result<(), std::io::Error> {create_dir_all::<&PathBuf>}, val: Value(<ZST>) }
    }

    bb37: {
        _66 = Result::<(), std::io::Error>::unwrap(move _67) -> [return: bb38, unwind: bb60]; // scope 8 at ui/command/command-current-dir.rs:30:5: 30:38
                                         // mir::Constant
                                         // + span: ui/command/command-current-dir.rs:30:30: 30:36
                                         // + literal: Const { ty: fn(Result<(), std::io::Error>) {Result::<(), std::io::Error>::unwrap}, val: Value(<ZST>) }
    }

    bb38: {
        _71 = &_64;                      // scope 8 at ui/command/command-current-dir.rs:31:24: 31:28
        _70 = create_dir_all::<&PathBuf>(move _71) -> [return: bb39, unwind: bb60]; // scope 8 at ui/command/command-current-dir.rs:31:5: 31:29
                                         // mir::Constant
                                         // + span: ui/command/command-current-dir.rs:31:5: 31:23
                                         // + literal: Const { ty: fn(&PathBuf) -> Result<(), std::io::Error> {create_dir_all::<&PathBuf>}, val: Value(<ZST>) }
    }

    bb39: {
        _69 = Result::<(), std::io::Error>::unwrap(move _70) -> [return: bb40, unwind: bb60]; // scope 8 at ui/command/command-current-dir.rs:31:5: 31:38
                                         // mir::Constant
                                         // + span: ui/command/command-current-dir.rs:31:30: 31:36
                                         // + literal: Const { ty: fn(Result<(), std::io::Error>) {Result::<(), std::io::Error>::unwrap}, val: Value(<ZST>) }
    }

    bb40: {
        _74 = &_1;                       // scope 8 at ui/command/command-current-dir.rs:32:14: 32:17
        _78 = &_62;                      // scope 8 at ui/command/command-current-dir.rs:32:19: 32:32
        _77 = <PathBuf as Deref>::deref(move _78) -> [return: bb41, unwind: bb60]; // scope 8 at ui/command/command-current-dir.rs:32:19: 32:32
                                         // mir::Constant
                                         // + span: ui/command/command-current-dir.rs:32:19: 32:32
                                         // + literal: Const { ty: for<'a> fn(&'a PathBuf) -> &'a <PathBuf as Deref>::Target {<PathBuf as Deref>::deref}, val: Value(<ZST>) }
    }

    bb41: {
        _76 = _77;                       // scope 8 at ui/command/command-current-dir.rs:32:19: 32:32
        _79 = _37;                       // scope 8 at ui/command/command-current-dir.rs:32:28: 32:31
        _75 = Path::join::<&OsStr>(move _76, move _79) -> [return: bb42, unwind: bb60]; // scope 8 at ui/command/command-current-dir.rs:32:19: 32:32
                                         // mir::Constant
                                         // + span: ui/command/command-current-dir.rs:32:23: 32:27
                                         // + literal: Const { ty: for<'a> fn(&'a Path, &OsStr) -> PathBuf {Path::join::<&OsStr>}, val: Value(<ZST>) }
    }

    bb42: {
        _73 = std::fs::copy::<&PathBuf, PathBuf>(move _74, move _75) -> [return: bb43, unwind: bb60]; // scope 8 at ui/command/command-current-dir.rs:32:5: 32:33
                                         // mir::Constant
                                         // + span: ui/command/command-current-dir.rs:32:5: 32:13
                                         // + literal: Const { ty: fn(&PathBuf, PathBuf) -> Result<u64, std::io::Error> {std::fs::copy::<&PathBuf, PathBuf>}, val: Value(<ZST>) }
    }

    bb43: {
        _72 = Result::<u64, std::io::Error>::unwrap(move _73) -> [return: bb44, unwind: bb60]; // scope 8 at ui/command/command-current-dir.rs:32:5: 32:42
                                         // mir::Constant
                                         // + span: ui/command/command-current-dir.rs:32:34: 32:40
                                         // + literal: Const { ty: fn(Result<u64, std::io::Error>) -> u64 {Result::<u64, std::io::Error>::unwrap}, val: Value(<ZST>) }
    }

    bb44: {
        _84 = const "../foo";            // scope 8 at ui/command/command-current-dir.rs:41:19: 41:27
                                         // mir::Constant
                                         // + span: ui/command/command-current-dir.rs:41:19: 41:27
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _83 = _84;                       // scope 8 at ui/command/command-current-dir.rs:41:19: 41:27
        _82 = Path::new::<str>(move _83) -> [return: bb45, unwind: bb60]; // scope 8 at ui/command/command-current-dir.rs:41:9: 41:28
                                         // mir::Constant
                                         // + span: ui/command/command-current-dir.rs:41:9: 41:18
                                         // + user_ty: UserType(3)
                                         // + literal: Const { ty: for<'a> fn(&'a str) -> &'a Path {Path::new::<str>}, val: Value(<ZST>) }
    }

    bb45: {
        _81 = _82;                       // scope 8 at ui/command/command-current-dir.rs:41:9: 41:38
        _85 = _37;                       // scope 8 at ui/command/command-current-dir.rs:41:34: 41:37
        _80 = Path::join::<&OsStr>(move _81, move _85) -> [return: bb46, unwind: bb60]; // scope 8 at ui/command/command-current-dir.rs:41:9: 41:38
                                         // mir::Constant
                                         // + span: ui/command/command-current-dir.rs:41:29: 41:33
                                         // + literal: Const { ty: for<'a> fn(&'a Path, &OsStr) -> PathBuf {Path::join::<&OsStr>}, val: Value(<ZST>) }
    }

    bb46: {
        _94 = move _80;                  // scope 9 at ui/command/command-current-dir.rs:44:31: 44:43
        _93 = Command::new::<PathBuf>(move _94) -> [return: bb47, unwind: bb60]; // scope 9 at ui/command/command-current-dir.rs:44:18: 44:44
                                         // mir::Constant
                                         // + span: ui/command/command-current-dir.rs:44:18: 44:30
                                         // + user_ty: UserType(4)
                                         // + literal: Const { ty: fn(PathBuf) -> Command {Command::new::<PathBuf>}, val: Value(<ZST>) }
    }

    bb47: {
        _92 = &mut _93;                  // scope 9 at ui/command/command-current-dir.rs:44:18: 45:28
        _91 = Command::arg::<&str>(move _92, const "current-dir") -> [return: bb48, unwind: bb59]; // scope 9 at ui/command/command-current-dir.rs:44:18: 45:28
                                         // mir::Constant
                                         // + span: ui/command/command-current-dir.rs:45:10: 45:13
                                         // + literal: Const { ty: for<'a> fn(&'a mut Command, &str) -> &'a mut Command {Command::arg::<&str>}, val: Value(<ZST>) }
                                         // mir::Constant
                                         // + span: ui/command/command-current-dir.rs:45:14: 45:27
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
    }

    bb48: {
        _90 = &mut (*_91);               // scope 9 at ui/command/command-current-dir.rs:44:18: 46:28
        _89 = Command::current_dir::<&str>(move _90, const "bar") -> [return: bb49, unwind: bb59]; // scope 9 at ui/command/command-current-dir.rs:44:18: 46:28
                                         // mir::Constant
                                         // + span: ui/command/command-current-dir.rs:46:10: 46:21
                                         // + literal: Const { ty: for<'a> fn(&'a mut Command, &str) -> &'a mut Command {Command::current_dir::<&str>}, val: Value(<ZST>) }
                                         // mir::Constant
                                         // + span: ui/command/command-current-dir.rs:46:22: 46:27
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
    }

    bb49: {
        _88 = &mut (*_89);               // scope 9 at ui/command/command-current-dir.rs:44:18: 47:18
        _87 = Command::status(move _88) -> [return: bb50, unwind: bb59]; // scope 9 at ui/command/command-current-dir.rs:44:18: 47:18
                                         // mir::Constant
                                         // + span: ui/command/command-current-dir.rs:47:10: 47:16
                                         // + literal: Const { ty: for<'a> fn(&'a mut Command) -> Result<ExitStatus, std::io::Error> {Command::status}, val: Value(<ZST>) }
    }

    bb50: {
        _86 = Result::<ExitStatus, std::io::Error>::unwrap(move _87) -> [return: bb51, unwind: bb59]; // scope 9 at ui/command/command-current-dir.rs:44:18: 48:18
                                         // mir::Constant
                                         // + span: ui/command/command-current-dir.rs:48:10: 48:16
                                         // + literal: Const { ty: fn(Result<ExitStatus, std::io::Error>) -> ExitStatus {Result::<ExitStatus, std::io::Error>::unwrap}, val: Value(<ZST>) }
    }

    bb51: {
        drop(_93) -> [return: bb52, unwind: bb60]; // scope 9 at ui/command/command-current-dir.rs:48:18: 48:19
    }

    bb52: {
        _97 = &_86;                      // scope 10 at ui/command/command-current-dir.rs:49:13: 49:29
        _96 = ExitStatus::success(move _97) -> [return: bb53, unwind: bb60]; // scope 10 at ui/command/command-current-dir.rs:49:13: 49:29
                                         // mir::Constant
                                         // + span: ui/command/command-current-dir.rs:49:20: 49:27
                                         // + literal: Const { ty: for<'a> fn(&'a ExitStatus) -> bool {ExitStatus::success}, val: Value(<ZST>) }
    }

    bb53: {
        _95 = Not(move _96);             // scope 10 at ui/command/command-current-dir.rs:49:5: 49:30
        switchInt(move _95) -> [0: bb55, otherwise: bb54]; // scope 10 at ui/command/command-current-dir.rs:49:5: 49:30
    }

    bb54: {
        _98 = core::panicking::panic(const "assertion failed: status.success()") -> bb60; // scope 10 at ui/command/command-current-dir.rs:49:5: 49:30
                                         // mir::Constant
                                         // + span: ui/command/command-current-dir.rs:49:5: 49:30
                                         // + literal: Const { ty: fn(&'static str) -> ! {core::panicking::panic}, val: Value(<ZST>) }
                                         // mir::Constant
                                         // + span: no-location
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
    }

    bb55: {
        drop(_64) -> [return: bb56, unwind: bb61]; // scope 7 at ui/command/command-current-dir.rs:50:1: 50:2
    }

    bb56: {
        drop(_62) -> [return: bb57, unwind: bb65]; // scope 6 at ui/command/command-current-dir.rs:50:1: 50:2
    }

    bb57: {
        drop(_1) -> bb58;                // scope 0 at ui/command/command-current-dir.rs:50:1: 50:2
    }

    bb58: {
        return;                          // scope 0 at ui/command/command-current-dir.rs:50:2: 50:2
    }

    bb59 (cleanup): {
        drop(_93) -> bb60;               // scope 9 at ui/command/command-current-dir.rs:48:18: 48:19
    }

    bb60 (cleanup): {
        drop(_64) -> bb61;               // scope 7 at ui/command/command-current-dir.rs:50:1: 50:2
    }

    bb61 (cleanup): {
        drop(_62) -> bb65;               // scope 6 at ui/command/command-current-dir.rs:50:1: 50:2
    }

    bb62 (cleanup): {
        drop(_12) -> bb65;               // scope 1 at ui/command/command-current-dir.rs:18:5: 18:6
    }

    bb63 (cleanup): {
        drop(_6) -> bb64;                // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:347:9: 347:10
    }

    bb64 (cleanup): {
        drop(_8) -> bb65;                // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:347:9: 347:10
    }

    bb65 (cleanup): {
        drop(_1) -> bb66;                // scope 0 at ui/command/command-current-dir.rs:50:1: 50:2
    }

    bb66 (cleanup): {
        resume;                          // scope 0 at ui/command/command-current-dir.rs:11:1: 50:2
    }
}

promoted[0] in main: &[&str; 2] = {
    let mut _0: &[&str; 2];              // return place in scope 0 at ui/command/command-current-dir.rs:21:15: 21:25
    let mut _1: [&str; 2];               // in scope 0 at ui/command/command-current-dir.rs:21:15: 21:25

    bb0: {
        _1 = [const "cwd=", const "\n"]; // scope 0 at ui/command/command-current-dir.rs:21:15: 21:25
                                         // mir::Constant
                                         // + span: ui/command/command-current-dir.rs:21:15: 21:25
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
                                         // mir::Constant
                                         // + span: ui/command/command-current-dir.rs:21:15: 21:25
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at ui/command/command-current-dir.rs:21:15: 21:25
        return;                          // scope 0 at ui/command/command-current-dir.rs:21:15: 21:25
    }
}

promoted[1] in main: &&str = {
    let mut _0: &&str;                   // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _1: &str;                    // in scope 0 at ui/command/command-current-dir.rs:16:46: 16:51

    bb0: {
        _1 = const "bar";                // scope 0 at ui/command/command-current-dir.rs:16:46: 16:51
                                         // mir::Constant
                                         // + span: ui/command/command-current-dir.rs:16:46: 16:51
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    }
}
