// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
fn main() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/command/issue-10626.rs:11:16: 11:16
    let _1: std::vec::Vec<std::string::String>; // in scope 0 at ui/command/issue-10626.rs:12:9: 12:13
    let mut _2: std::env::Args;          // in scope 0 at ui/command/issue-10626.rs:12:29: 12:40
    let mut _3: bool;                    // in scope 0 at ui/command/issue-10626.rs:13:8: 13:44
    let mut _4: bool;                    // in scope 0 at ui/command/issue-10626.rs:13:8: 13:22
    let mut _5: usize;                   // in scope 0 at ui/command/issue-10626.rs:13:8: 13:18
    let mut _6: &std::vec::Vec<std::string::String>; // in scope 0 at ui/command/issue-10626.rs:13:8: 13:18
    let mut _7: bool;                    // in scope 0 at ui/command/issue-10626.rs:13:26: 13:44
    let mut _8: &std::string::String;    // in scope 0 at ui/command/issue-10626.rs:13:26: 13:33
    let _9: &std::string::String;        // in scope 0 at ui/command/issue-10626.rs:13:26: 13:33
    let mut _10: &std::vec::Vec<std::string::String>; // in scope 0 at ui/command/issue-10626.rs:13:26: 13:30
    let mut _11: &&str;                  // in scope 0 at ui/command/issue-10626.rs:13:37: 13:44
    let mut _12: std::ops::Range<i32>;   // in scope 0 at ui/command/issue-10626.rs:14:18: 14:25
    let mut _13: std::ops::Range<i32>;   // in scope 0 at ui/command/issue-10626.rs:14:18: 14:25
    let mut _15: std::option::Option<i32>; // in scope 0 at ui/command/issue-10626.rs:14:18: 14:25
    let mut _16: &mut std::ops::Range<i32>; // in scope 0 at ui/command/issue-10626.rs:14:18: 14:25
    let mut _17: &mut std::ops::Range<i32>; // in scope 0 at ui/command/issue-10626.rs:14:18: 14:25
    let mut _18: isize;                  // in scope 0 at ui/command/issue-10626.rs:14:9: 16:10
    let _19: ();                         // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:62
    let mut _20: std::fmt::Arguments<'_>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _21: &[&str];                // in scope 0 at ui/command/issue-10626.rs:15:22: 15:30
    let mut _22: &[&str; 1];             // in scope 0 at ui/command/issue-10626.rs:15:22: 15:30
    let _23: &[&str; 1];                 // in scope 0 at ui/command/issue-10626.rs:15:22: 15:30
    let mut _24: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _25: &[core::fmt::ArgumentV1<'_>; 0]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let _26: &[core::fmt::ArgumentV1<'_>; 0]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _27: std::ops::Range<i32>;   // in scope 0 at ui/command/issue-10626.rs:17:18: 17:25
    let mut _28: std::ops::Range<i32>;   // in scope 0 at ui/command/issue-10626.rs:17:18: 17:25
    let mut _30: std::option::Option<i32>; // in scope 0 at ui/command/issue-10626.rs:17:18: 17:25
    let mut _31: &mut std::ops::Range<i32>; // in scope 0 at ui/command/issue-10626.rs:17:18: 17:25
    let mut _32: &mut std::ops::Range<i32>; // in scope 0 at ui/command/issue-10626.rs:17:18: 17:25
    let mut _33: isize;                  // in scope 0 at ui/command/issue-10626.rs:17:9: 19:10
    let _34: ();                         // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:62
    let mut _35: std::fmt::Arguments<'_>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _36: &[&str];                // in scope 0 at ui/command/issue-10626.rs:18:22: 18:30
    let mut _37: &[&str; 1];             // in scope 0 at ui/command/issue-10626.rs:18:22: 18:30
    let _38: &[&str; 1];                 // in scope 0 at ui/command/issue-10626.rs:18:22: 18:30
    let mut _39: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _40: &[core::fmt::ArgumentV1<'_>; 0]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let _41: &[core::fmt::ArgumentV1<'_>; 0]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _43: &std::string::String;   // in scope 0 at ui/command/issue-10626.rs:23:30: 23:38
    let _44: &std::string::String;       // in scope 0 at ui/command/issue-10626.rs:23:31: 23:38
    let mut _45: &std::vec::Vec<std::string::String>; // in scope 0 at ui/command/issue-10626.rs:23:31: 23:35
    let _46: &mut std::process::Command; // in scope 0 at ui/command/issue-10626.rs:24:5: 24:63
    let mut _47: &mut std::process::Command; // in scope 0 at ui/command/issue-10626.rs:24:5: 24:63
    let mut _48: &mut std::process::Command; // in scope 0 at ui/command/issue-10626.rs:24:5: 24:41
    let mut _49: &mut std::process::Command; // in scope 0 at ui/command/issue-10626.rs:24:5: 24:41
    let mut _50: &mut std::process::Command; // in scope 0 at ui/command/issue-10626.rs:24:5: 24:19
    let mut _51: &mut std::process::Command; // in scope 0 at ui/command/issue-10626.rs:24:5: 24:19
    let mut _52: std::process::Stdio;    // in scope 0 at ui/command/issue-10626.rs:24:27: 24:40
    let mut _53: std::process::Stdio;    // in scope 0 at ui/command/issue-10626.rs:24:49: 24:62
    let _54: ();                         // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:62
    let mut _55: std::fmt::Arguments<'_>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _56: &[&str];                // in scope 0 at ui/command/issue-10626.rs:25:14: 25:20
    let mut _57: &[&str; 2];             // in scope 0 at ui/command/issue-10626.rs:25:14: 25:20
    let _58: &[&str; 2];                 // in scope 0 at ui/command/issue-10626.rs:25:14: 25:20
    let mut _59: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _60: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let _61: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let _62: [core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _63: core::fmt::ArgumentV1<'_>; // in scope 0 at ui/command/issue-10626.rs:25:22: 25:47
    let mut _64: &std::result::Result<std::process::ExitStatus, std::io::Error>; // in scope 0 at ui/command/issue-10626.rs:25:22: 25:47
    let _65: &std::result::Result<std::process::ExitStatus, std::io::Error>; // in scope 0 at ui/command/issue-10626.rs:25:22: 25:47
    let _66: std::result::Result<std::process::ExitStatus, std::io::Error>; // in scope 0 at ui/command/issue-10626.rs:25:22: 25:47
    let mut _67: &mut std::process::Child; // in scope 0 at ui/command/issue-10626.rs:25:22: 25:47
    let mut _68: std::process::Child;    // in scope 0 at ui/command/issue-10626.rs:25:22: 25:40
    let mut _69: std::result::Result<std::process::Child, std::io::Error>; // in scope 0 at ui/command/issue-10626.rs:25:22: 25:31
    let mut _70: &mut std::process::Command; // in scope 0 at ui/command/issue-10626.rs:25:22: 25:31
    scope 1 {
        debug args => _1;                // in scope 1 at ui/command/issue-10626.rs:12:9: 12:13
        let mut _14: std::ops::Range<i32>; // in scope 1 at ui/command/issue-10626.rs:14:18: 14:25
        let mut _29: std::ops::Range<i32>; // in scope 1 at ui/command/issue-10626.rs:17:18: 17:25
        let mut _42: std::process::Command; // in scope 1 at ui/command/issue-10626.rs:23:9: 23:14
        let mut _76: &&str;              // in scope 1 at ui/command/issue-10626.rs:13:37: 13:44
        scope 2 {
            debug iter => _14;           // in scope 2 at ui/command/issue-10626.rs:14:18: 14:25
            let mut _74: &[core::fmt::ArgumentV1<'_>; 0]; // in scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
            let mut _75: &[&str; 1];     // in scope 2 at ui/command/issue-10626.rs:15:22: 15:30
        }
        scope 3 {
            debug iter => _29;           // in scope 3 at ui/command/issue-10626.rs:17:18: 17:25
            let mut _72: &[core::fmt::ArgumentV1<'_>; 0]; // in scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
            let mut _73: &[&str; 1];     // in scope 3 at ui/command/issue-10626.rs:18:22: 18:30
        }
        scope 4 {
            debug p => _42;              // in scope 4 at ui/command/issue-10626.rs:23:9: 23:14
            let mut _71: &[&str; 2];     // in scope 4 at ui/command/issue-10626.rs:25:14: 25:20
        }
    }

    bb0: {
        _2 = args() -> bb1;              // scope 0 at ui/command/issue-10626.rs:12:29: 12:40
                                         // mir::Constant
                                         // + span: ui/command/issue-10626.rs:12:29: 12:38
                                         // + literal: Const { ty: fn() -> Args {args}, val: Value(<ZST>) }
    }

    bb1: {
        _1 = <Args as Iterator>::collect::<Vec<String>>(move _2) -> bb2; // scope 0 at ui/command/issue-10626.rs:12:29: 12:50
                                         // mir::Constant
                                         // + span: ui/command/issue-10626.rs:12:41: 12:48
                                         // + literal: Const { ty: fn(Args) -> Vec<String> {<Args as Iterator>::collect::<Vec<String>>}, val: Value(<ZST>) }
    }

    bb2: {
        _6 = &_1;                        // scope 1 at ui/command/issue-10626.rs:13:8: 13:18
        _5 = Vec::<String>::len(move _6) -> [return: bb6, unwind: bb45]; // scope 1 at ui/command/issue-10626.rs:13:8: 13:18
                                         // mir::Constant
                                         // + span: ui/command/issue-10626.rs:13:13: 13:16
                                         // + literal: Const { ty: for<'a> fn(&'a Vec<String>) -> usize {Vec::<String>::len}, val: Value(<ZST>) }
    }

    bb3: {
        _3 = const false;                // scope 1 at ui/command/issue-10626.rs:13:8: 13:44
        goto -> bb5;                     // scope 1 at ui/command/issue-10626.rs:13:8: 13:44
    }

    bb4: {
        _10 = &_1;                       // scope 1 at ui/command/issue-10626.rs:13:26: 13:30
        _9 = <Vec<String> as Index<usize>>::index(move _10, const 1_usize) -> [return: bb7, unwind: bb45]; // scope 1 at ui/command/issue-10626.rs:13:26: 13:33
                                         // mir::Constant
                                         // + span: ui/command/issue-10626.rs:13:26: 13:33
                                         // + literal: Const { ty: for<'a> fn(&'a Vec<String>, usize) -> &'a <Vec<String> as Index<usize>>::Output {<Vec<String> as Index<usize>>::index}, val: Value(<ZST>) }
    }

    bb5: {
        switchInt(move _3) -> [0: bb24, otherwise: bb9]; // scope 1 at ui/command/issue-10626.rs:13:8: 13:44
    }

    bb6: {
        _4 = Gt(move _5, const 1_usize); // scope 1 at ui/command/issue-10626.rs:13:8: 13:22
        switchInt(move _4) -> [0: bb3, otherwise: bb4]; // scope 1 at ui/command/issue-10626.rs:13:8: 13:44
    }

    bb7: {
        _8 = _9;                         // scope 1 at ui/command/issue-10626.rs:13:26: 13:33
        _76 = const _;                   // scope 1 at ui/command/issue-10626.rs:13:37: 13:44
                                         // mir::Constant
                                         // + span: ui/command/issue-10626.rs:13:37: 13:44
                                         // + literal: Const { ty: &&str, val: Unevaluated(main, [], Some(promoted[5])) }
        _11 = _76;                       // scope 1 at ui/command/issue-10626.rs:13:37: 13:44
        _7 = <String as PartialEq<&str>>::eq(move _8, move _11) -> [return: bb8, unwind: bb45]; // scope 1 at ui/command/issue-10626.rs:13:26: 13:44
                                         // mir::Constant
                                         // + span: ui/command/issue-10626.rs:13:26: 13:44
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a String, &'b &str) -> bool {<String as PartialEq<&str>>::eq}, val: Value(<ZST>) }
    }

    bb8: {
        _3 = move _7;                    // scope 1 at ui/command/issue-10626.rs:13:8: 13:44
        goto -> bb5;                     // scope 1 at ui/command/issue-10626.rs:13:8: 13:44
    }

    bb9: {
        _13 = std::ops::Range::<i32> { start: const 0_i32, end: const 1000_i32 }; // scope 1 at ui/command/issue-10626.rs:14:18: 14:25
        _12 = <std::ops::Range<i32> as IntoIterator>::into_iter(move _13) -> [return: bb10, unwind: bb45]; // scope 1 at ui/command/issue-10626.rs:14:18: 14:25
                                         // mir::Constant
                                         // + span: ui/command/issue-10626.rs:14:18: 14:25
                                         // + literal: Const { ty: fn(std::ops::Range<i32>) -> <std::ops::Range<i32> as IntoIterator>::IntoIter {<std::ops::Range<i32> as IntoIterator>::into_iter}, val: Value(<ZST>) }
    }

    bb10: {
        _14 = move _12;                  // scope 1 at ui/command/issue-10626.rs:14:18: 14:25
        goto -> bb11;                    // scope 2 at ui/command/issue-10626.rs:14:9: 16:10
    }

    bb11: {
        _17 = &mut _14;                  // scope 2 at ui/command/issue-10626.rs:14:18: 14:25
        _16 = &mut (*_17);               // scope 2 at ui/command/issue-10626.rs:14:18: 14:25
        _15 = <std::ops::Range<i32> as Iterator>::next(move _16) -> [return: bb12, unwind: bb45]; // scope 2 at ui/command/issue-10626.rs:14:18: 14:25
                                         // mir::Constant
                                         // + span: ui/command/issue-10626.rs:14:18: 14:25
                                         // + literal: Const { ty: for<'a> fn(&'a mut std::ops::Range<i32>) -> Option<<std::ops::Range<i32> as Iterator>::Item> {<std::ops::Range<i32> as Iterator>::next}, val: Value(<ZST>) }
    }

    bb12: {
        _18 = discriminant(_15);         // scope 2 at ui/command/issue-10626.rs:14:18: 14:25
        switchInt(move _18) -> [0: bb15, 1: bb13, otherwise: bb14]; // scope 2 at ui/command/issue-10626.rs:14:18: 14:25
    }

    bb13: {
        _75 = const _;                   // scope 2 at ui/command/issue-10626.rs:15:22: 15:30
                                         // mir::Constant
                                         // + span: ui/command/issue-10626.rs:15:22: 15:30
                                         // + literal: Const { ty: &[&str; 1], val: Unevaluated(main, [], Some(promoted[4])) }
        _23 = _75;                       // scope 2 at ui/command/issue-10626.rs:15:22: 15:30
        _22 = _23;                       // scope 2 at ui/command/issue-10626.rs:15:22: 15:30
        _21 = move _22 as &[&str] (Pointer(Unsize)); // scope 2 at ui/command/issue-10626.rs:15:22: 15:30
        _74 = const _;                   // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // + literal: Const { ty: &[core::fmt::ArgumentV1<'_>; 0], val: Unevaluated(main, [], Some(promoted[3])) }
        _26 = _74;                       // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _25 = _26;                       // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _24 = move _25 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _20 = Arguments::<'_>::new_v1(move _21, move _24) -> [return: bb16, unwind: bb45]; // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // + user_ty: UserType(2)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb14: {
        unreachable;                     // scope 2 at ui/command/issue-10626.rs:14:18: 14:25
    }

    bb15: {
        _28 = std::ops::Range::<i32> { start: const 0_i32, end: const 1000_i32 }; // scope 1 at ui/command/issue-10626.rs:17:18: 17:25
        _27 = <std::ops::Range<i32> as IntoIterator>::into_iter(move _28) -> [return: bb17, unwind: bb45]; // scope 1 at ui/command/issue-10626.rs:17:18: 17:25
                                         // mir::Constant
                                         // + span: ui/command/issue-10626.rs:17:18: 17:25
                                         // + literal: Const { ty: fn(std::ops::Range<i32>) -> <std::ops::Range<i32> as IntoIterator>::IntoIter {<std::ops::Range<i32> as IntoIterator>::into_iter}, val: Value(<ZST>) }
    }

    bb16: {
        _19 = _print(move _20) -> [return: bb47, unwind: bb45]; // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:62
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:27
                                         // + literal: Const { ty: for<'a> fn(Arguments<'a>) {_print}, val: Value(<ZST>) }
    }

    bb17: {
        _29 = move _27;                  // scope 1 at ui/command/issue-10626.rs:17:18: 17:25
        goto -> bb18;                    // scope 3 at ui/command/issue-10626.rs:17:9: 19:10
    }

    bb18: {
        _32 = &mut _29;                  // scope 3 at ui/command/issue-10626.rs:17:18: 17:25
        _31 = &mut (*_32);               // scope 3 at ui/command/issue-10626.rs:17:18: 17:25
        _30 = <std::ops::Range<i32> as Iterator>::next(move _31) -> [return: bb19, unwind: bb45]; // scope 3 at ui/command/issue-10626.rs:17:18: 17:25
                                         // mir::Constant
                                         // + span: ui/command/issue-10626.rs:17:18: 17:25
                                         // + literal: Const { ty: for<'a> fn(&'a mut std::ops::Range<i32>) -> Option<<std::ops::Range<i32> as Iterator>::Item> {<std::ops::Range<i32> as Iterator>::next}, val: Value(<ZST>) }
    }

    bb19: {
        _33 = discriminant(_30);         // scope 3 at ui/command/issue-10626.rs:17:18: 17:25
        switchInt(move _33) -> [0: bb22, 1: bb20, otherwise: bb21]; // scope 3 at ui/command/issue-10626.rs:17:18: 17:25
    }

    bb20: {
        _73 = const _;                   // scope 3 at ui/command/issue-10626.rs:18:22: 18:30
                                         // mir::Constant
                                         // + span: ui/command/issue-10626.rs:18:22: 18:30
                                         // + literal: Const { ty: &[&str; 1], val: Unevaluated(main, [], Some(promoted[2])) }
        _38 = _73;                       // scope 3 at ui/command/issue-10626.rs:18:22: 18:30
        _37 = _38;                       // scope 3 at ui/command/issue-10626.rs:18:22: 18:30
        _36 = move _37 as &[&str] (Pointer(Unsize)); // scope 3 at ui/command/issue-10626.rs:18:22: 18:30
        _72 = const _;                   // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // + literal: Const { ty: &[core::fmt::ArgumentV1<'_>; 0], val: Unevaluated(main, [], Some(promoted[1])) }
        _41 = _72;                       // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _40 = _41;                       // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _39 = move _40 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _35 = Arguments::<'_>::new_v1(move _36, move _39) -> [return: bb23, unwind: bb45]; // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // + user_ty: UserType(3)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb21: {
        unreachable;                     // scope 3 at ui/command/issue-10626.rs:17:18: 17:25
    }

    bb22: {
        drop(_1) -> bb41;                // scope 0 at ui/command/issue-10626.rs:26:1: 26:2
    }

    bb23: {
        _34 = _print(move _35) -> [return: bb48, unwind: bb45]; // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:62
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:27
                                         // + literal: Const { ty: for<'a> fn(Arguments<'a>) {_print}, val: Value(<ZST>) }
    }

    bb24: {
        _45 = &_1;                       // scope 1 at ui/command/issue-10626.rs:23:31: 23:35
        _44 = <Vec<String> as Index<usize>>::index(move _45, const 0_usize) -> [return: bb25, unwind: bb45]; // scope 1 at ui/command/issue-10626.rs:23:31: 23:38
                                         // mir::Constant
                                         // + span: ui/command/issue-10626.rs:23:31: 23:38
                                         // + literal: Const { ty: for<'a> fn(&'a Vec<String>, usize) -> &'a <Vec<String> as Index<usize>>::Output {<Vec<String> as Index<usize>>::index}, val: Value(<ZST>) }
    }

    bb25: {
        _43 = _44;                       // scope 1 at ui/command/issue-10626.rs:23:30: 23:38
        _42 = Command::new::<&String>(move _43) -> [return: bb26, unwind: bb45]; // scope 1 at ui/command/issue-10626.rs:23:17: 23:39
                                         // mir::Constant
                                         // + span: ui/command/issue-10626.rs:23:17: 23:29
                                         // + user_ty: UserType(4)
                                         // + literal: Const { ty: fn(&String) -> Command {Command::new::<&String>}, val: Value(<ZST>) }
    }

    bb26: {
        _51 = &mut _42;                  // scope 4 at ui/command/issue-10626.rs:24:5: 24:19
        _50 = Command::arg::<&str>(move _51, const "child") -> [return: bb27, unwind: bb44]; // scope 4 at ui/command/issue-10626.rs:24:5: 24:19
                                         // mir::Constant
                                         // + span: ui/command/issue-10626.rs:24:7: 24:10
                                         // + literal: Const { ty: for<'a> fn(&'a mut Command, &str) -> &'a mut Command {Command::arg::<&str>}, val: Value(<ZST>) }
                                         // mir::Constant
                                         // + span: ui/command/issue-10626.rs:24:11: 24:18
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
    }

    bb27: {
        _49 = &mut (*_50);               // scope 4 at ui/command/issue-10626.rs:24:5: 24:41
        _52 = Stdio::null() -> [return: bb28, unwind: bb44]; // scope 4 at ui/command/issue-10626.rs:24:27: 24:40
                                         // mir::Constant
                                         // + span: ui/command/issue-10626.rs:24:27: 24:38
                                         // + literal: Const { ty: fn() -> Stdio {Stdio::null}, val: Value(<ZST>) }
    }

    bb28: {
        _48 = Command::stdout::<Stdio>(move _49, move _52) -> [return: bb29, unwind: bb44]; // scope 4 at ui/command/issue-10626.rs:24:5: 24:41
                                         // mir::Constant
                                         // + span: ui/command/issue-10626.rs:24:20: 24:26
                                         // + literal: Const { ty: for<'a> fn(&'a mut Command, Stdio) -> &'a mut Command {Command::stdout::<Stdio>}, val: Value(<ZST>) }
    }

    bb29: {
        _47 = &mut (*_48);               // scope 4 at ui/command/issue-10626.rs:24:5: 24:63
        _53 = Stdio::null() -> [return: bb30, unwind: bb44]; // scope 4 at ui/command/issue-10626.rs:24:49: 24:62
                                         // mir::Constant
                                         // + span: ui/command/issue-10626.rs:24:49: 24:60
                                         // + literal: Const { ty: fn() -> Stdio {Stdio::null}, val: Value(<ZST>) }
    }

    bb30: {
        _46 = Command::stderr::<Stdio>(move _47, move _53) -> [return: bb31, unwind: bb44]; // scope 4 at ui/command/issue-10626.rs:24:5: 24:63
                                         // mir::Constant
                                         // + span: ui/command/issue-10626.rs:24:42: 24:48
                                         // + literal: Const { ty: for<'a> fn(&'a mut Command, Stdio) -> &'a mut Command {Command::stderr::<Stdio>}, val: Value(<ZST>) }
    }

    bb31: {
        _71 = const _;                   // scope 4 at ui/command/issue-10626.rs:25:14: 25:20
                                         // mir::Constant
                                         // + span: ui/command/issue-10626.rs:25:14: 25:20
                                         // + literal: Const { ty: &[&str; 2], val: Unevaluated(main, [], Some(promoted[0])) }
        _58 = _71;                       // scope 4 at ui/command/issue-10626.rs:25:14: 25:20
        _57 = _58;                       // scope 4 at ui/command/issue-10626.rs:25:14: 25:20
        _56 = move _57 as &[&str] (Pointer(Unsize)); // scope 4 at ui/command/issue-10626.rs:25:14: 25:20
        _70 = &mut _42;                  // scope 4 at ui/command/issue-10626.rs:25:22: 25:31
        _69 = Command::spawn(move _70) -> [return: bb32, unwind: bb44]; // scope 4 at ui/command/issue-10626.rs:25:22: 25:31
                                         // mir::Constant
                                         // + span: ui/command/issue-10626.rs:25:24: 25:29
                                         // + literal: Const { ty: for<'a> fn(&'a mut Command) -> Result<Child, std::io::Error> {Command::spawn}, val: Value(<ZST>) }
    }

    bb32: {
        _68 = Result::<Child, std::io::Error>::unwrap(move _69) -> [return: bb33, unwind: bb44]; // scope 4 at ui/command/issue-10626.rs:25:22: 25:40
                                         // mir::Constant
                                         // + span: ui/command/issue-10626.rs:25:32: 25:38
                                         // + literal: Const { ty: fn(Result<Child, std::io::Error>) -> Child {Result::<Child, std::io::Error>::unwrap}, val: Value(<ZST>) }
    }

    bb33: {
        _67 = &mut _68;                  // scope 4 at ui/command/issue-10626.rs:25:22: 25:47
        _66 = Child::wait(move _67) -> [return: bb34, unwind: bb43]; // scope 4 at ui/command/issue-10626.rs:25:22: 25:47
                                         // mir::Constant
                                         // + span: ui/command/issue-10626.rs:25:41: 25:45
                                         // + literal: Const { ty: for<'a> fn(&'a mut Child) -> Result<ExitStatus, std::io::Error> {Child::wait}, val: Value(<ZST>) }
    }

    bb34: {
        _65 = &_66;                      // scope 4 at ui/command/issue-10626.rs:25:22: 25:47
        _64 = _65;                       // scope 4 at ui/command/issue-10626.rs:25:22: 25:47
        _63 = core::fmt::ArgumentV1::<'_>::new_debug::<Result<ExitStatus, std::io::Error>>(move _64) -> [return: bb35, unwind: bb42]; // scope 4 at ui/command/issue-10626.rs:25:22: 25:47
                                         // mir::Constant
                                         // + span: ui/command/issue-10626.rs:25:22: 25:47
                                         // + user_ty: UserType(6)
                                         // + literal: Const { ty: for<'b> fn(&'b Result<ExitStatus, std::io::Error>) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_debug::<Result<ExitStatus, std::io::Error>>}, val: Value(<ZST>) }
    }

    bb35: {
        _62 = [move _63];                // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _61 = &_62;                      // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _60 = _61;                       // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _59 = move _60 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _55 = Arguments::<'_>::new_v1(move _56, move _59) -> [return: bb36, unwind: bb42]; // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // + user_ty: UserType(5)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb36: {
        _54 = _print(move _55) -> [return: bb37, unwind: bb42]; // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:62
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:27
                                         // + literal: Const { ty: for<'a> fn(Arguments<'a>) {_print}, val: Value(<ZST>) }
    }

    bb37: {
        drop(_66) -> [return: bb38, unwind: bb43]; // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:62: 137:63
    }

    bb38: {
        drop(_68) -> [return: bb39, unwind: bb44]; // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:62: 137:63
    }

    bb39: {
        drop(_42) -> [return: bb40, unwind: bb45]; // scope 1 at ui/command/issue-10626.rs:26:1: 26:2
    }

    bb40: {
        drop(_1) -> bb41;                // scope 0 at ui/command/issue-10626.rs:26:1: 26:2
    }

    bb41: {
        return;                          // scope 0 at ui/command/issue-10626.rs:26:2: 26:2
    }

    bb42 (cleanup): {
        drop(_66) -> bb43;               // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:62: 137:63
    }

    bb43 (cleanup): {
        drop(_68) -> bb44;               // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:62: 137:63
    }

    bb44 (cleanup): {
        drop(_42) -> bb45;               // scope 1 at ui/command/issue-10626.rs:26:1: 26:2
    }

    bb45 (cleanup): {
        drop(_1) -> bb46;                // scope 0 at ui/command/issue-10626.rs:26:1: 26:2
    }

    bb46 (cleanup): {
        resume;                          // scope 0 at ui/command/issue-10626.rs:11:1: 26:2
    }

    bb47: {
        goto -> bb11;                    // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:62
    }

    bb48: {
        goto -> bb18;                    // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:62
    }
}

promoted[0] in main: &[&str; 2] = {
    let mut _0: &[&str; 2];              // return place in scope 0 at ui/command/issue-10626.rs:25:14: 25:20
    let mut _1: [&str; 2];               // in scope 0 at ui/command/issue-10626.rs:25:14: 25:20

    bb0: {
        _1 = [const "", const "\n"];     // scope 0 at ui/command/issue-10626.rs:25:14: 25:20
                                         // mir::Constant
                                         // + span: ui/command/issue-10626.rs:25:14: 25:20
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
                                         // mir::Constant
                                         // + span: ui/command/issue-10626.rs:25:14: 25:20
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at ui/command/issue-10626.rs:25:14: 25:20
        return;                          // scope 0 at ui/command/issue-10626.rs:25:14: 25:20
    }
}

promoted[1] in main: &[core::fmt::ArgumentV1<'_>; 0] = {
    let mut _0: &[core::fmt::ArgumentV1<'_>; 0]; // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _1: [core::fmt::ArgumentV1<'_>; 0]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61

    bb0: {
        _1 = [];                         // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    }
}

promoted[2] in main: &[&str; 1] = {
    let mut _0: &[&str; 1];              // return place in scope 0 at ui/command/issue-10626.rs:18:22: 18:30
    let mut _1: [&str; 1];               // in scope 0 at ui/command/issue-10626.rs:18:22: 18:30

    bb0: {
        _1 = [const "hello?\n"];         // scope 0 at ui/command/issue-10626.rs:18:22: 18:30
                                         // mir::Constant
                                         // + span: ui/command/issue-10626.rs:18:22: 18:30
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at ui/command/issue-10626.rs:18:22: 18:30
        return;                          // scope 0 at ui/command/issue-10626.rs:18:22: 18:30
    }
}

promoted[3] in main: &[core::fmt::ArgumentV1<'_>; 0] = {
    let mut _0: &[core::fmt::ArgumentV1<'_>; 0]; // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _1: [core::fmt::ArgumentV1<'_>; 0]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61

    bb0: {
        _1 = [];                         // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    }
}

promoted[4] in main: &[&str; 1] = {
    let mut _0: &[&str; 1];              // return place in scope 0 at ui/command/issue-10626.rs:15:22: 15:30
    let mut _1: [&str; 1];               // in scope 0 at ui/command/issue-10626.rs:15:22: 15:30

    bb0: {
        _1 = [const "hello?\n"];         // scope 0 at ui/command/issue-10626.rs:15:22: 15:30
                                         // mir::Constant
                                         // + span: ui/command/issue-10626.rs:15:22: 15:30
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at ui/command/issue-10626.rs:15:22: 15:30
        return;                          // scope 0 at ui/command/issue-10626.rs:15:22: 15:30
    }
}

promoted[5] in main: &&str = {
    let mut _0: &&str;                   // return place in scope 0 at ui/command/issue-10626.rs:13:37: 13:44
    let mut _1: &str;                    // in scope 0 at ui/command/issue-10626.rs:13:37: 13:44

    bb0: {
        _1 = const "child";              // scope 0 at ui/command/issue-10626.rs:13:37: 13:44
                                         // mir::Constant
                                         // + span: ui/command/issue-10626.rs:13:37: 13:44
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at ui/command/issue-10626.rs:13:37: 13:44
        return;                          // scope 0 at ui/command/issue-10626.rs:13:37: 13:44
    }
}
