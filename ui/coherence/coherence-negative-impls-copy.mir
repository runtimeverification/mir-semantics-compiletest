// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
fn <impl at ui/coherence/coherence-negative-impls-copy.rs:14:1: 14:23>::drop(_1: &mut WithDrop) -> () {
    debug self => _1;                    // in scope 0 at ui/coherence/coherence-negative-impls-copy.rs:14:34: 14:43
    let mut _0: ();                      // return place in scope 0 at ui/coherence/coherence-negative-impls-copy.rs:14:45: 14:45

    bb0: {
        return;                          // scope 0 at ui/coherence/coherence-negative-impls-copy.rs:14:47: 14:47
    }
}

fn NeverCopy(_1: NonCopy) -> NeverCopy {
    let mut _0: NeverCopy;               // return place in scope 0 at ui/coherence/coherence-negative-impls-copy.rs:8:1: 8:17

    bb0: {
        _0 = NeverCopy(move _1);         // scope 0 at ui/coherence/coherence-negative-impls-copy.rs:8:1: 8:17
        return;                          // scope 0 at ui/coherence/coherence-negative-impls-copy.rs:8:1: 8:17
    }
}

// MIR FOR CTFE
fn NeverCopy(_1: NonCopy) -> NeverCopy {
    let mut _0: NeverCopy;               // return place in scope 0 at ui/coherence/coherence-negative-impls-copy.rs:8:1: 8:17

    bb0: {
        _0 = NeverCopy(move _1);         // scope 0 at ui/coherence/coherence-negative-impls-copy.rs:8:1: 8:17
        return;                          // scope 0 at ui/coherence/coherence-negative-impls-copy.rs:8:1: 8:17
    }
}
