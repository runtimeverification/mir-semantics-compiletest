// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
fn main() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/functions-closures/nullable-pointer-opt-closures.rs:5:15: 5:15
    let _1: i32;                         // in scope 0 at ui/functions-closures/nullable-pointer-opt-closures.rs:7:9: 7:10
    let mut _3: [closure@ui/functions-closures/nullable-pointer-opt-closures.rs:8:18: 8:20]; // in scope 0 at ui/functions-closures/nullable-pointer-opt-closures.rs:8:18: 8:38
    let mut _4: &i32;                    // in scope 0 at ui/functions-closures/nullable-pointer-opt-closures.rs:8:18: 8:38
    let mut _5: (&usize, &usize);        // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _6: &usize;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let _7: usize;                       // in scope 0 at ui/functions-closures/nullable-pointer-opt-closures.rs:12:16: 12:36
    let mut _8: &std::option::Option<[closure@ui/functions-closures/nullable-pointer-opt-closures.rs:8:18: 8:20]>; // in scope 0 at ui/functions-closures/nullable-pointer-opt-closures.rs:12:33: 12:35
    let _9: &std::option::Option<[closure@ui/functions-closures/nullable-pointer-opt-closures.rs:8:18: 8:20]>; // in scope 0 at ui/functions-closures/nullable-pointer-opt-closures.rs:12:33: 12:35
    let mut _10: &usize;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _13: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    let mut _14: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
    let mut _15: usize;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
    let mut _16: usize;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
    let _18: !;                          // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
    let mut _19: core::panicking::AssertKind; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
    let mut _20: &usize;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let _21: &usize;                     // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let mut _22: &usize;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let _23: &usize;                     // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let mut _24: std::option::Option<std::fmt::Arguments<'_>>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
    let mut _27: [closure@ui/functions-closures/nullable-pointer-opt-closures.rs:16:18: 16:25]; // in scope 0 at ui/functions-closures/nullable-pointer-opt-closures.rs:16:18: 16:43
    let mut _28: (&usize, &usize);       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _29: &usize;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let _30: usize;                      // in scope 0 at ui/functions-closures/nullable-pointer-opt-closures.rs:19:16: 19:36
    let mut _31: &std::option::Option<[closure@ui/functions-closures/nullable-pointer-opt-closures.rs:16:18: 16:25]>; // in scope 0 at ui/functions-closures/nullable-pointer-opt-closures.rs:19:33: 19:35
    let _32: &std::option::Option<[closure@ui/functions-closures/nullable-pointer-opt-closures.rs:16:18: 16:25]>; // in scope 0 at ui/functions-closures/nullable-pointer-opt-closures.rs:19:33: 19:35
    let mut _33: &usize;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _36: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    let mut _37: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
    let mut _38: usize;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
    let mut _39: usize;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
    let _41: !;                          // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
    let mut _42: core::panicking::AssertKind; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
    let mut _43: &usize;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let _44: &usize;                     // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let mut _45: &usize;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let _46: &usize;                     // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let mut _47: std::option::Option<std::fmt::Arguments<'_>>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
    let mut _49: &str;                   // in scope 0 at ui/functions-closures/nullable-pointer-opt-closures.rs:22:13: 22:32
    let _50: &str;                       // in scope 0 at ui/functions-closures/nullable-pointer-opt-closures.rs:22:13: 22:20
    let mut _52: [closure@ui/functions-closures/nullable-pointer-opt-closures.rs:23:18: 23:25]; // in scope 0 at ui/functions-closures/nullable-pointer-opt-closures.rs:23:18: 23:43
    let mut _53: (&usize, &usize);       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _54: &usize;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let _55: usize;                      // in scope 0 at ui/functions-closures/nullable-pointer-opt-closures.rs:26:16: 26:36
    let mut _56: &std::option::Option<[closure@ui/functions-closures/nullable-pointer-opt-closures.rs:23:18: 23:25]>; // in scope 0 at ui/functions-closures/nullable-pointer-opt-closures.rs:26:33: 26:35
    let _57: &std::option::Option<[closure@ui/functions-closures/nullable-pointer-opt-closures.rs:23:18: 23:25]>; // in scope 0 at ui/functions-closures/nullable-pointer-opt-closures.rs:26:33: 26:35
    let mut _58: &usize;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _61: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    let mut _62: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
    let mut _63: usize;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
    let mut _64: usize;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
    let _66: !;                          // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
    let mut _67: core::panicking::AssertKind; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
    let mut _68: &usize;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let _69: &usize;                     // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let mut _70: &usize;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let _71: &usize;                     // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let mut _72: std::option::Option<std::fmt::Arguments<'_>>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
    let mut _75: [closure@ui/functions-closures/nullable-pointer-opt-closures.rs:30:18: 30:25]; // in scope 0 at ui/functions-closures/nullable-pointer-opt-closures.rs:30:18: 30:43
    let mut _76: (&usize, &usize);       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _77: &usize;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let _78: usize;                      // in scope 0 at ui/functions-closures/nullable-pointer-opt-closures.rs:33:16: 33:36
    let mut _79: &std::option::Option<[closure@ui/functions-closures/nullable-pointer-opt-closures.rs:30:18: 30:25]>; // in scope 0 at ui/functions-closures/nullable-pointer-opt-closures.rs:33:33: 33:35
    let _80: &std::option::Option<[closure@ui/functions-closures/nullable-pointer-opt-closures.rs:30:18: 30:25]>; // in scope 0 at ui/functions-closures/nullable-pointer-opt-closures.rs:33:33: 33:35
    let mut _81: &usize;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _84: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    let mut _85: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
    let mut _86: usize;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
    let mut _87: usize;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
    let _89: !;                          // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
    let mut _90: core::panicking::AssertKind; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
    let mut _91: &usize;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let _92: &usize;                     // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let mut _93: &usize;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let _94: &usize;                     // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let mut _95: std::option::Option<std::fmt::Arguments<'_>>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
    scope 1 {
        debug a => _1;                   // in scope 1 at ui/functions-closures/nullable-pointer-opt-closures.rs:7:9: 7:10
        let _2: std::option::Option<[closure@ui/functions-closures/nullable-pointer-opt-closures.rs:8:18: 8:20]>; // in scope 1 at ui/functions-closures/nullable-pointer-opt-closures.rs:8:9: 8:10
        scope 2 {
            debug b => _2;               // in scope 2 at ui/functions-closures/nullable-pointer-opt-closures.rs:8:9: 8:10
            let _11: &usize;             // in scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
            let _12: &usize;             // in scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
            let _25: std::boxed::Box<i32>; // in scope 2 at ui/functions-closures/nullable-pointer-opt-closures.rs:15:9: 15:10
            let mut _99: &usize;         // in scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
            scope 3 {
                debug left_val => _11;   // in scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
                debug right_val => _12;  // in scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
                let _17: core::panicking::AssertKind; // in scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                scope 4 {
                    debug kind => _17;   // in scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                }
            }
            scope 5 {
                debug a => _25;          // in scope 5 at ui/functions-closures/nullable-pointer-opt-closures.rs:15:9: 15:10
                let _26: std::option::Option<[closure@ui/functions-closures/nullable-pointer-opt-closures.rs:16:18: 16:25]>; // in scope 5 at ui/functions-closures/nullable-pointer-opt-closures.rs:16:9: 16:10
                scope 6 {
                    debug b => _26;      // in scope 6 at ui/functions-closures/nullable-pointer-opt-closures.rs:16:9: 16:10
                    let _34: &usize;     // in scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
                    let _35: &usize;     // in scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
                    let _48: std::string::String; // in scope 6 at ui/functions-closures/nullable-pointer-opt-closures.rs:22:9: 22:10
                    let mut _98: &usize; // in scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                    scope 7 {
                        debug left_val => _34; // in scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
                        debug right_val => _35; // in scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
                        let _40: core::panicking::AssertKind; // in scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                        scope 8 {
                            debug kind => _40; // in scope 8 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                        }
                    }
                    scope 9 {
                        debug a => _48;  // in scope 9 at ui/functions-closures/nullable-pointer-opt-closures.rs:22:9: 22:10
                        let _51: std::option::Option<[closure@ui/functions-closures/nullable-pointer-opt-closures.rs:23:18: 23:25]>; // in scope 9 at ui/functions-closures/nullable-pointer-opt-closures.rs:23:9: 23:10
                        scope 10 {
                            debug b => _51; // in scope 10 at ui/functions-closures/nullable-pointer-opt-closures.rs:23:9: 23:10
                            let _59: &usize; // in scope 10 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
                            let _60: &usize; // in scope 10 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
                            let _73: i32; // in scope 10 at ui/functions-closures/nullable-pointer-opt-closures.rs:29:9: 29:10
                            let mut _97: &usize; // in scope 10 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                            scope 11 {
                                debug left_val => _59; // in scope 11 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
                                debug right_val => _60; // in scope 11 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
                                let _65: core::panicking::AssertKind; // in scope 11 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                                scope 12 {
                                    debug kind => _65; // in scope 12 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                                }
                            }
                            scope 13 {
                                debug a => _73; // in scope 13 at ui/functions-closures/nullable-pointer-opt-closures.rs:29:9: 29:10
                                let _74: std::option::Option<[closure@ui/functions-closures/nullable-pointer-opt-closures.rs:30:18: 30:25]>; // in scope 13 at ui/functions-closures/nullable-pointer-opt-closures.rs:30:9: 30:10
                                scope 14 {
                                    debug b => _74; // in scope 14 at ui/functions-closures/nullable-pointer-opt-closures.rs:30:9: 30:10
                                    let _82: &usize; // in scope 14 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
                                    let _83: &usize; // in scope 14 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
                                    let mut _96: &usize; // in scope 14 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                    scope 15 {
                                        debug left_val => _82; // in scope 15 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
                                        debug right_val => _83; // in scope 15 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
                                        let _88: core::panicking::AssertKind; // in scope 15 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                                        scope 16 {
                                            debug kind => _88; // in scope 16 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    }

    bb0: {
        _1 = const 10_i32;               // scope 0 at ui/functions-closures/nullable-pointer-opt-closures.rs:7:13: 7:18
        _4 = &_1;                        // scope 1 at ui/functions-closures/nullable-pointer-opt-closures.rs:8:18: 8:38
        _3 = [closure@ui/functions-closures/nullable-pointer-opt-closures.rs:8:18: 8:20] { a: move _4 }; // scope 1 at ui/functions-closures/nullable-pointer-opt-closures.rs:8:18: 8:38
                                         // closure
                                         // + def_id: DefId(0:5 ~ nullable_pointer_opt_closures[8e8f]::main::{closure#0})
                                         // + substs: [
                                         //     i8,
                                         //     extern "rust-call" fn(()),
                                         //     (&i32,),
                                         // ]
        _2 = Option::<[closure@ui/functions-closures/nullable-pointer-opt-closures.rs:8:18: 8:20]>::Some(move _3); // scope 1 at ui/functions-closures/nullable-pointer-opt-closures.rs:8:13: 8:39
        _9 = &_2;                        // scope 2 at ui/functions-closures/nullable-pointer-opt-closures.rs:12:33: 12:35
        _8 = _9;                         // scope 2 at ui/functions-closures/nullable-pointer-opt-closures.rs:12:33: 12:35
        _7 = std::mem::size_of_val::<Option<[closure@ui/functions-closures/nullable-pointer-opt-closures.rs:8:18: 8:20]>>(move _8) -> bb1; // scope 2 at ui/functions-closures/nullable-pointer-opt-closures.rs:12:16: 12:36
                                         // mir::Constant
                                         // + span: ui/functions-closures/nullable-pointer-opt-closures.rs:12:16: 12:32
                                         // + literal: Const { ty: for<'a> fn(&'a Option<[closure@ui/functions-closures/nullable-pointer-opt-closures.rs:8:18: 8:20]>) -> usize {std::mem::size_of_val::<Option<[closure@ui/functions-closures/nullable-pointer-opt-closures.rs:8:18: 8:20]>>}, val: Value(<ZST>) }
    }

    bb1: {
        _6 = &_7;                        // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _99 = const _;                   // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // + literal: Const { ty: &usize, val: Unevaluated(main, [], Some(promoted[3])) }
        _10 = _99;                       // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _5 = (move _6, move _10);        // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _11 = (_5.0: &usize);            // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _12 = (_5.1: &usize);            // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _15 = (*_11);                    // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
        _16 = const 8_usize;             // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
        _14 = Eq(move _15, move _16);    // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
        _13 = Not(move _14);             // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
        switchInt(move _13) -> [0: bb3, otherwise: bb2]; // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    }

    bb2: {
        _17 = const core::panicking::AssertKind::Eq; // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _19 = const core::panicking::AssertKind::Eq; // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _21 = _11;                       // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _20 = _21;                       // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _23 = _12;                       // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _22 = _23;                       // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _24 = Option::<Arguments<'_>>::None; // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
        _18 = core::panicking::assert_failed::<usize, usize>(move _19, move _20, move _22, move _24); // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:53
                                         // + literal: Const { ty: for<'a, 'b, 'c> fn(core::panicking::AssertKind, &'a usize, &'b usize, Option<Arguments<'c>>) -> ! {core::panicking::assert_failed::<usize, usize>}, val: Value(<ZST>) }
    }

    bb3: {
        _25 = Box::<i32>::new(const 12_i32) -> bb4; // scope 2 at ui/functions-closures/nullable-pointer-opt-closures.rs:15:13: 15:28
                                         // mir::Constant
                                         // + span: ui/functions-closures/nullable-pointer-opt-closures.rs:15:13: 15:21
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: fn(i32) -> Box<i32> {Box::<i32>::new}, val: Value(<ZST>) }
    }

    bb4: {
        _27 = [closure@ui/functions-closures/nullable-pointer-opt-closures.rs:16:18: 16:25] { a: move _25 }; // scope 5 at ui/functions-closures/nullable-pointer-opt-closures.rs:16:18: 16:43
                                         // closure
                                         // + def_id: DefId(0:6 ~ nullable_pointer_opt_closures[8e8f]::main::{closure#1})
                                         // + substs: [
                                         //     i8,
                                         //     extern "rust-call" fn(()),
                                         //     (std::boxed::Box<i32>,),
                                         // ]
        _26 = Option::<[closure@ui/functions-closures/nullable-pointer-opt-closures.rs:16:18: 16:25]>::Some(move _27); // scope 5 at ui/functions-closures/nullable-pointer-opt-closures.rs:16:13: 16:44
        _32 = &_26;                      // scope 6 at ui/functions-closures/nullable-pointer-opt-closures.rs:19:33: 19:35
        _31 = _32;                       // scope 6 at ui/functions-closures/nullable-pointer-opt-closures.rs:19:33: 19:35
        _30 = std::mem::size_of_val::<Option<[closure@ui/functions-closures/nullable-pointer-opt-closures.rs:16:18: 16:25]>>(move _31) -> [return: bb5, unwind: bb18]; // scope 6 at ui/functions-closures/nullable-pointer-opt-closures.rs:19:16: 19:36
                                         // mir::Constant
                                         // + span: ui/functions-closures/nullable-pointer-opt-closures.rs:19:16: 19:32
                                         // + literal: Const { ty: for<'a> fn(&'a Option<[closure@ui/functions-closures/nullable-pointer-opt-closures.rs:16:18: 16:25]>) -> usize {std::mem::size_of_val::<Option<[closure@ui/functions-closures/nullable-pointer-opt-closures.rs:16:18: 16:25]>>}, val: Value(<ZST>) }
    }

    bb5: {
        _29 = &_30;                      // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _98 = const _;                   // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // + literal: Const { ty: &usize, val: Unevaluated(main, [], Some(promoted[2])) }
        _33 = _98;                       // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _28 = (move _29, move _33);      // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _34 = (_28.0: &usize);           // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _35 = (_28.1: &usize);           // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _38 = (*_34);                    // scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
        _39 = const 8_usize;             // scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
        _37 = Eq(move _38, move _39);    // scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
        _36 = Not(move _37);             // scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
        switchInt(move _36) -> [0: bb7, otherwise: bb6]; // scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    }

    bb6: {
        _40 = const core::panicking::AssertKind::Eq; // scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _42 = const core::panicking::AssertKind::Eq; // scope 8 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _44 = _34;                       // scope 8 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _43 = _44;                       // scope 8 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _46 = _35;                       // scope 8 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _45 = _46;                       // scope 8 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _47 = Option::<Arguments<'_>>::None; // scope 8 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
        _41 = core::panicking::assert_failed::<usize, usize>(move _42, move _43, move _45, move _47) -> bb18; // scope 8 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:53
                                         // + literal: Const { ty: for<'a, 'b, 'c> fn(core::panicking::AssertKind, &'a usize, &'b usize, Option<Arguments<'c>>) -> ! {core::panicking::assert_failed::<usize, usize>}, val: Value(<ZST>) }
    }

    bb7: {
        _50 = const "Hello";             // scope 6 at ui/functions-closures/nullable-pointer-opt-closures.rs:22:13: 22:20
                                         // mir::Constant
                                         // + span: ui/functions-closures/nullable-pointer-opt-closures.rs:22:13: 22:20
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _49 = _50;                       // scope 6 at ui/functions-closures/nullable-pointer-opt-closures.rs:22:13: 22:32
        _48 = <str as ToString>::to_string(move _49) -> [return: bb8, unwind: bb18]; // scope 6 at ui/functions-closures/nullable-pointer-opt-closures.rs:22:13: 22:32
                                         // mir::Constant
                                         // + span: ui/functions-closures/nullable-pointer-opt-closures.rs:22:21: 22:30
                                         // + literal: Const { ty: for<'a> fn(&'a str) -> String {<str as ToString>::to_string}, val: Value(<ZST>) }
    }

    bb8: {
        _52 = [closure@ui/functions-closures/nullable-pointer-opt-closures.rs:23:18: 23:25] { a: move _48 }; // scope 9 at ui/functions-closures/nullable-pointer-opt-closures.rs:23:18: 23:43
                                         // closure
                                         // + def_id: DefId(0:7 ~ nullable_pointer_opt_closures[8e8f]::main::{closure#2})
                                         // + substs: [
                                         //     i8,
                                         //     extern "rust-call" fn(()),
                                         //     (std::string::String,),
                                         // ]
        _51 = Option::<[closure@ui/functions-closures/nullable-pointer-opt-closures.rs:23:18: 23:25]>::Some(move _52); // scope 9 at ui/functions-closures/nullable-pointer-opt-closures.rs:23:13: 23:44
        _57 = &_51;                      // scope 10 at ui/functions-closures/nullable-pointer-opt-closures.rs:26:33: 26:35
        _56 = _57;                       // scope 10 at ui/functions-closures/nullable-pointer-opt-closures.rs:26:33: 26:35
        _55 = std::mem::size_of_val::<Option<[closure@ui/functions-closures/nullable-pointer-opt-closures.rs:23:18: 23:25]>>(move _56) -> [return: bb9, unwind: bb17]; // scope 10 at ui/functions-closures/nullable-pointer-opt-closures.rs:26:16: 26:36
                                         // mir::Constant
                                         // + span: ui/functions-closures/nullable-pointer-opt-closures.rs:26:16: 26:32
                                         // + literal: Const { ty: for<'a> fn(&'a Option<[closure@ui/functions-closures/nullable-pointer-opt-closures.rs:23:18: 23:25]>) -> usize {std::mem::size_of_val::<Option<[closure@ui/functions-closures/nullable-pointer-opt-closures.rs:23:18: 23:25]>>}, val: Value(<ZST>) }
    }

    bb9: {
        _54 = &_55;                      // scope 10 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _97 = const _;                   // scope 10 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // + literal: Const { ty: &usize, val: Unevaluated(main, [], Some(promoted[1])) }
        _58 = _97;                       // scope 10 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _53 = (move _54, move _58);      // scope 10 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _59 = (_53.0: &usize);           // scope 10 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _60 = (_53.1: &usize);           // scope 10 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _63 = (*_59);                    // scope 11 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
        _64 = const 24_usize;            // scope 11 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
        _62 = Eq(move _63, move _64);    // scope 11 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
        _61 = Not(move _62);             // scope 11 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
        switchInt(move _61) -> [0: bb11, otherwise: bb10]; // scope 11 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    }

    bb10: {
        _65 = const core::panicking::AssertKind::Eq; // scope 11 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _67 = const core::panicking::AssertKind::Eq; // scope 12 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _69 = _59;                       // scope 12 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _68 = _69;                       // scope 12 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _71 = _60;                       // scope 12 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _70 = _71;                       // scope 12 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _72 = Option::<Arguments<'_>>::None; // scope 12 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
        _66 = core::panicking::assert_failed::<usize, usize>(move _67, move _68, move _70, move _72) -> bb17; // scope 12 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:53
                                         // + literal: Const { ty: for<'a, 'b, 'c> fn(core::panicking::AssertKind, &'a usize, &'b usize, Option<Arguments<'c>>) -> ! {core::panicking::assert_failed::<usize, usize>}, val: Value(<ZST>) }
    }

    bb11: {
        _73 = const 14_i32;              // scope 10 at ui/functions-closures/nullable-pointer-opt-closures.rs:29:13: 29:18
        _75 = const {transmute(0x0000000e): [closure@ui/functions-closures/nullable-pointer-opt-closures.rs:30:18: 30:25]}; // scope 13 at ui/functions-closures/nullable-pointer-opt-closures.rs:30:18: 30:43
                                         // mir::Constant
                                         // + span: ui/functions-closures/nullable-pointer-opt-closures.rs:30:18: 30:43
                                         // + literal: Const { ty: [closure@ui/functions-closures/nullable-pointer-opt-closures.rs:30:18: 30:25], val: Value(Scalar(0x0000000e)) }
        _74 = Option::<[closure@ui/functions-closures/nullable-pointer-opt-closures.rs:30:18: 30:25]>::Some(move _75); // scope 13 at ui/functions-closures/nullable-pointer-opt-closures.rs:30:13: 30:44
        _80 = &_74;                      // scope 14 at ui/functions-closures/nullable-pointer-opt-closures.rs:33:33: 33:35
        _79 = _80;                       // scope 14 at ui/functions-closures/nullable-pointer-opt-closures.rs:33:33: 33:35
        _78 = std::mem::size_of_val::<Option<[closure@ui/functions-closures/nullable-pointer-opt-closures.rs:30:18: 30:25]>>(move _79) -> [return: bb12, unwind: bb17]; // scope 14 at ui/functions-closures/nullable-pointer-opt-closures.rs:33:16: 33:36
                                         // mir::Constant
                                         // + span: ui/functions-closures/nullable-pointer-opt-closures.rs:33:16: 33:32
                                         // + literal: Const { ty: for<'a> fn(&'a Option<[closure@ui/functions-closures/nullable-pointer-opt-closures.rs:30:18: 30:25]>) -> usize {std::mem::size_of_val::<Option<[closure@ui/functions-closures/nullable-pointer-opt-closures.rs:30:18: 30:25]>>}, val: Value(<ZST>) }
    }

    bb12: {
        _77 = &_78;                      // scope 14 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _96 = const _;                   // scope 14 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // + literal: Const { ty: &usize, val: Unevaluated(main, [], Some(promoted[0])) }
        _81 = _96;                       // scope 14 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _76 = (move _77, move _81);      // scope 14 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _82 = (_76.0: &usize);           // scope 14 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _83 = (_76.1: &usize);           // scope 14 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _86 = (*_82);                    // scope 15 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
        _87 = const 8_usize;             // scope 15 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
        _85 = Eq(move _86, move _87);    // scope 15 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
        _84 = Not(move _85);             // scope 15 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
        switchInt(move _84) -> [0: bb14, otherwise: bb13]; // scope 15 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    }

    bb13: {
        _88 = const core::panicking::AssertKind::Eq; // scope 15 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _90 = const core::panicking::AssertKind::Eq; // scope 16 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _92 = _82;                       // scope 16 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _91 = _92;                       // scope 16 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _94 = _83;                       // scope 16 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _93 = _94;                       // scope 16 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _95 = Option::<Arguments<'_>>::None; // scope 16 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
        _89 = core::panicking::assert_failed::<usize, usize>(move _90, move _91, move _93, move _95) -> bb17; // scope 16 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:53
                                         // + literal: Const { ty: for<'a, 'b, 'c> fn(core::panicking::AssertKind, &'a usize, &'b usize, Option<Arguments<'c>>) -> ! {core::panicking::assert_failed::<usize, usize>}, val: Value(<ZST>) }
    }

    bb14: {
        drop(_51) -> [return: bb15, unwind: bb18]; // scope 9 at ui/functions-closures/nullable-pointer-opt-closures.rs:34:1: 34:2
    }

    bb15: {
        drop(_26) -> bb16;               // scope 5 at ui/functions-closures/nullable-pointer-opt-closures.rs:34:1: 34:2
    }

    bb16: {
        return;                          // scope 0 at ui/functions-closures/nullable-pointer-opt-closures.rs:34:2: 34:2
    }

    bb17 (cleanup): {
        drop(_51) -> bb18;               // scope 9 at ui/functions-closures/nullable-pointer-opt-closures.rs:34:1: 34:2
    }

    bb18 (cleanup): {
        drop(_26) -> bb19;               // scope 5 at ui/functions-closures/nullable-pointer-opt-closures.rs:34:1: 34:2
    }

    bb19 (cleanup): {
        resume;                          // scope 0 at ui/functions-closures/nullable-pointer-opt-closures.rs:5:1: 34:2
    }
}

promoted[0] in main: &usize = {
    let mut _0: &usize;                  // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _1: usize;                   // in scope 0 at ui/functions-closures/nullable-pointer-opt-closures.rs:33:38: 33:66

    bb0: {
        _1 = std::mem::size_of::<(i32, i32)>() -> bb1; // scope 0 at ui/functions-closures/nullable-pointer-opt-closures.rs:33:38: 33:66
                                         // mir::Constant
                                         // + span: ui/functions-closures/nullable-pointer-opt-closures.rs:33:38: 33:64
                                         // + literal: Const { ty: fn() -> usize {std::mem::size_of::<(i32, i32)>}, val: Value(<ZST>) }
    }

    bb1: {
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    }
}

promoted[1] in main: &usize = {
    let mut _0: &usize;                  // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _1: usize;                   // in scope 0 at ui/functions-closures/nullable-pointer-opt-closures.rs:26:38: 26:62

    bb0: {
        _1 = std::mem::size_of::<String>() -> bb1; // scope 0 at ui/functions-closures/nullable-pointer-opt-closures.rs:26:38: 26:62
                                         // mir::Constant
                                         // + span: ui/functions-closures/nullable-pointer-opt-closures.rs:26:38: 26:60
                                         // + literal: Const { ty: fn() -> usize {std::mem::size_of::<String>}, val: Value(<ZST>) }
    }

    bb1: {
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    }
}

promoted[2] in main: &usize = {
    let mut _0: &usize;                  // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _1: usize;                   // in scope 0 at ui/functions-closures/nullable-pointer-opt-closures.rs:19:38: 19:64

    bb0: {
        _1 = std::mem::size_of::<Box<i32>>() -> bb1; // scope 0 at ui/functions-closures/nullable-pointer-opt-closures.rs:19:38: 19:64
                                         // mir::Constant
                                         // + span: ui/functions-closures/nullable-pointer-opt-closures.rs:19:38: 19:62
                                         // + literal: Const { ty: fn() -> usize {std::mem::size_of::<Box<i32>>}, val: Value(<ZST>) }
    }

    bb1: {
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    }
}

promoted[3] in main: &usize = {
    let mut _0: &usize;                  // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _1: usize;                   // in scope 0 at ui/functions-closures/nullable-pointer-opt-closures.rs:12:38: 12:61

    bb0: {
        _1 = std::mem::size_of::<usize>() -> bb1; // scope 0 at ui/functions-closures/nullable-pointer-opt-closures.rs:12:38: 12:61
                                         // mir::Constant
                                         // + span: ui/functions-closures/nullable-pointer-opt-closures.rs:12:38: 12:59
                                         // + literal: Const { ty: fn() -> usize {std::mem::size_of::<usize>}, val: Value(<ZST>) }
    }

    bb1: {
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    }
}

fn main::{closure#0}(_1: &[closure@ui/functions-closures/nullable-pointer-opt-closures.rs:8:18: 8:20]) -> () {
    debug a => (*((*_1).0: &i32));       // in scope 0 at ui/functions-closures/nullable-pointer-opt-closures.rs:7:9: 7:10
    let mut _0: ();                      // return place in scope 0 at ui/functions-closures/nullable-pointer-opt-closures.rs:8:21: 8:21
    let _2: ();                          // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:62
    let mut _3: std::fmt::Arguments<'_>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _4: &[&str];                 // in scope 0 at ui/functions-closures/nullable-pointer-opt-closures.rs:8:30: 8:34
    let mut _5: &[&str; 2];              // in scope 0 at ui/functions-closures/nullable-pointer-opt-closures.rs:8:30: 8:34
    let _6: &[&str; 2];                  // in scope 0 at ui/functions-closures/nullable-pointer-opt-closures.rs:8:30: 8:34
    let mut _7: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _8: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let _9: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let _10: [core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _11: core::fmt::ArgumentV1<'_>; // in scope 0 at ui/functions-closures/nullable-pointer-opt-closures.rs:8:36: 8:37
    let mut _12: &i32;                   // in scope 0 at ui/functions-closures/nullable-pointer-opt-closures.rs:8:36: 8:37
    let _13: &i32;                       // in scope 0 at ui/functions-closures/nullable-pointer-opt-closures.rs:8:36: 8:37
    let mut _14: &[&str; 2];             // in scope 0 at ui/functions-closures/nullable-pointer-opt-closures.rs:8:30: 8:34
    let mut _15: &i32;                   // in scope 0 at ui/functions-closures/nullable-pointer-opt-closures.rs:8:18: 8:38

    bb0: {
        _14 = const _;                   // scope 0 at ui/functions-closures/nullable-pointer-opt-closures.rs:8:30: 8:34
                                         // mir::Constant
                                         // + span: ui/functions-closures/nullable-pointer-opt-closures.rs:8:30: 8:34
                                         // + literal: Const { ty: &[&str; 2], val: Unevaluated(main::{closure#0}, [<closure_kind>, <closure_signature>, <upvars>], Some(promoted[0])) }
        _6 = _14;                        // scope 0 at ui/functions-closures/nullable-pointer-opt-closures.rs:8:30: 8:34
        _5 = _6;                         // scope 0 at ui/functions-closures/nullable-pointer-opt-closures.rs:8:30: 8:34
        _4 = move _5 as &[&str] (Pointer(Unsize)); // scope 0 at ui/functions-closures/nullable-pointer-opt-closures.rs:8:30: 8:34
        _15 = deref_copy ((*_1).0: &i32); // scope 0 at ui/functions-closures/nullable-pointer-opt-closures.rs:8:36: 8:37
        _13 = _15;                       // scope 0 at ui/functions-closures/nullable-pointer-opt-closures.rs:8:36: 8:37
        _12 = _13;                       // scope 0 at ui/functions-closures/nullable-pointer-opt-closures.rs:8:36: 8:37
        _11 = core::fmt::ArgumentV1::<'_>::new_display::<i32>(move _12) -> bb1; // scope 0 at ui/functions-closures/nullable-pointer-opt-closures.rs:8:36: 8:37
                                         // mir::Constant
                                         // + span: ui/functions-closures/nullable-pointer-opt-closures.rs:8:36: 8:37
                                         // + user_ty: UserType(1)
                                         // + literal: Const { ty: for<'b> fn(&'b i32) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_display::<i32>}, val: Value(<ZST>) }
    }

    bb1: {
        _10 = [move _11];                // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _9 = &_10;                       // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _8 = _9;                         // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _7 = move _8 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _3 = Arguments::<'_>::new_v1(move _4, move _7) -> bb2; // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb2: {
        _2 = _print(move _3) -> bb3;     // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:62
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:27
                                         // + literal: Const { ty: for<'a> fn(Arguments<'a>) {_print}, val: Value(<ZST>) }
    }

    bb3: {
        return;                          // scope 0 at ui/functions-closures/nullable-pointer-opt-closures.rs:8:38: 8:38
    }
}

promoted[0] in main::{closure#0}: &[&str; 2] = {
    let mut _0: &[&str; 2];              // return place in scope 0 at ui/functions-closures/nullable-pointer-opt-closures.rs:8:30: 8:34
    let mut _1: [&str; 2];               // in scope 0 at ui/functions-closures/nullable-pointer-opt-closures.rs:8:30: 8:34

    bb0: {
        _1 = [const "", const "\n"];     // scope 0 at ui/functions-closures/nullable-pointer-opt-closures.rs:8:30: 8:34
                                         // mir::Constant
                                         // + span: ui/functions-closures/nullable-pointer-opt-closures.rs:8:30: 8:34
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
                                         // mir::Constant
                                         // + span: ui/functions-closures/nullable-pointer-opt-closures.rs:8:30: 8:34
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at ui/functions-closures/nullable-pointer-opt-closures.rs:8:30: 8:34
        return;                          // scope 0 at ui/functions-closures/nullable-pointer-opt-closures.rs:8:30: 8:34
    }
}

fn main::{closure#1}(_1: &[closure@ui/functions-closures/nullable-pointer-opt-closures.rs:16:18: 16:25]) -> () {
    debug a => ((*_1).0: std::boxed::Box<i32>); // in scope 0 at ui/functions-closures/nullable-pointer-opt-closures.rs:15:9: 15:10
    let mut _0: ();                      // return place in scope 0 at ui/functions-closures/nullable-pointer-opt-closures.rs:16:26: 16:26
    let _2: ();                          // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:62
    let mut _3: std::fmt::Arguments<'_>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _4: &[&str];                 // in scope 0 at ui/functions-closures/nullable-pointer-opt-closures.rs:16:35: 16:39
    let mut _5: &[&str; 2];              // in scope 0 at ui/functions-closures/nullable-pointer-opt-closures.rs:16:35: 16:39
    let _6: &[&str; 2];                  // in scope 0 at ui/functions-closures/nullable-pointer-opt-closures.rs:16:35: 16:39
    let mut _7: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _8: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let _9: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let _10: [core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _11: core::fmt::ArgumentV1<'_>; // in scope 0 at ui/functions-closures/nullable-pointer-opt-closures.rs:16:41: 16:42
    let mut _12: &std::boxed::Box<i32>;  // in scope 0 at ui/functions-closures/nullable-pointer-opt-closures.rs:16:41: 16:42
    let _13: &std::boxed::Box<i32>;      // in scope 0 at ui/functions-closures/nullable-pointer-opt-closures.rs:16:41: 16:42
    let mut _14: &[&str; 2];             // in scope 0 at ui/functions-closures/nullable-pointer-opt-closures.rs:16:35: 16:39

    bb0: {
        _14 = const _;                   // scope 0 at ui/functions-closures/nullable-pointer-opt-closures.rs:16:35: 16:39
                                         // mir::Constant
                                         // + span: ui/functions-closures/nullable-pointer-opt-closures.rs:16:35: 16:39
                                         // + literal: Const { ty: &[&str; 2], val: Unevaluated(main::{closure#1}, [<closure_kind>, <closure_signature>, <upvars>], Some(promoted[0])) }
        _6 = _14;                        // scope 0 at ui/functions-closures/nullable-pointer-opt-closures.rs:16:35: 16:39
        _5 = _6;                         // scope 0 at ui/functions-closures/nullable-pointer-opt-closures.rs:16:35: 16:39
        _4 = move _5 as &[&str] (Pointer(Unsize)); // scope 0 at ui/functions-closures/nullable-pointer-opt-closures.rs:16:35: 16:39
        _13 = &((*_1).0: std::boxed::Box<i32>); // scope 0 at ui/functions-closures/nullable-pointer-opt-closures.rs:16:41: 16:42
        _12 = _13;                       // scope 0 at ui/functions-closures/nullable-pointer-opt-closures.rs:16:41: 16:42
        _11 = core::fmt::ArgumentV1::<'_>::new_display::<Box<i32>>(move _12) -> bb1; // scope 0 at ui/functions-closures/nullable-pointer-opt-closures.rs:16:41: 16:42
                                         // mir::Constant
                                         // + span: ui/functions-closures/nullable-pointer-opt-closures.rs:16:41: 16:42
                                         // + user_ty: UserType(1)
                                         // + literal: Const { ty: for<'b> fn(&'b Box<i32>) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_display::<Box<i32>>}, val: Value(<ZST>) }
    }

    bb1: {
        _10 = [move _11];                // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _9 = &_10;                       // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _8 = _9;                         // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _7 = move _8 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _3 = Arguments::<'_>::new_v1(move _4, move _7) -> bb2; // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb2: {
        _2 = _print(move _3) -> bb3;     // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:62
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:27
                                         // + literal: Const { ty: for<'a> fn(Arguments<'a>) {_print}, val: Value(<ZST>) }
    }

    bb3: {
        return;                          // scope 0 at ui/functions-closures/nullable-pointer-opt-closures.rs:16:43: 16:43
    }
}

promoted[0] in main::{closure#1}: &[&str; 2] = {
    let mut _0: &[&str; 2];              // return place in scope 0 at ui/functions-closures/nullable-pointer-opt-closures.rs:16:35: 16:39
    let mut _1: [&str; 2];               // in scope 0 at ui/functions-closures/nullable-pointer-opt-closures.rs:16:35: 16:39

    bb0: {
        _1 = [const "", const "\n"];     // scope 0 at ui/functions-closures/nullable-pointer-opt-closures.rs:16:35: 16:39
                                         // mir::Constant
                                         // + span: ui/functions-closures/nullable-pointer-opt-closures.rs:16:35: 16:39
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
                                         // mir::Constant
                                         // + span: ui/functions-closures/nullable-pointer-opt-closures.rs:16:35: 16:39
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at ui/functions-closures/nullable-pointer-opt-closures.rs:16:35: 16:39
        return;                          // scope 0 at ui/functions-closures/nullable-pointer-opt-closures.rs:16:35: 16:39
    }
}

fn main::{closure#2}(_1: &[closure@ui/functions-closures/nullable-pointer-opt-closures.rs:23:18: 23:25]) -> () {
    debug a => ((*_1).0: std::string::String); // in scope 0 at ui/functions-closures/nullable-pointer-opt-closures.rs:22:9: 22:10
    let mut _0: ();                      // return place in scope 0 at ui/functions-closures/nullable-pointer-opt-closures.rs:23:26: 23:26
    let _2: ();                          // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:62
    let mut _3: std::fmt::Arguments<'_>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _4: &[&str];                 // in scope 0 at ui/functions-closures/nullable-pointer-opt-closures.rs:23:35: 23:39
    let mut _5: &[&str; 2];              // in scope 0 at ui/functions-closures/nullable-pointer-opt-closures.rs:23:35: 23:39
    let _6: &[&str; 2];                  // in scope 0 at ui/functions-closures/nullable-pointer-opt-closures.rs:23:35: 23:39
    let mut _7: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _8: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let _9: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let _10: [core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _11: core::fmt::ArgumentV1<'_>; // in scope 0 at ui/functions-closures/nullable-pointer-opt-closures.rs:23:41: 23:42
    let mut _12: &std::string::String;   // in scope 0 at ui/functions-closures/nullable-pointer-opt-closures.rs:23:41: 23:42
    let _13: &std::string::String;       // in scope 0 at ui/functions-closures/nullable-pointer-opt-closures.rs:23:41: 23:42
    let mut _14: &[&str; 2];             // in scope 0 at ui/functions-closures/nullable-pointer-opt-closures.rs:23:35: 23:39

    bb0: {
        _14 = const _;                   // scope 0 at ui/functions-closures/nullable-pointer-opt-closures.rs:23:35: 23:39
                                         // mir::Constant
                                         // + span: ui/functions-closures/nullable-pointer-opt-closures.rs:23:35: 23:39
                                         // + literal: Const { ty: &[&str; 2], val: Unevaluated(main::{closure#2}, [<closure_kind>, <closure_signature>, <upvars>], Some(promoted[0])) }
        _6 = _14;                        // scope 0 at ui/functions-closures/nullable-pointer-opt-closures.rs:23:35: 23:39
        _5 = _6;                         // scope 0 at ui/functions-closures/nullable-pointer-opt-closures.rs:23:35: 23:39
        _4 = move _5 as &[&str] (Pointer(Unsize)); // scope 0 at ui/functions-closures/nullable-pointer-opt-closures.rs:23:35: 23:39
        _13 = &((*_1).0: std::string::String); // scope 0 at ui/functions-closures/nullable-pointer-opt-closures.rs:23:41: 23:42
        _12 = _13;                       // scope 0 at ui/functions-closures/nullable-pointer-opt-closures.rs:23:41: 23:42
        _11 = core::fmt::ArgumentV1::<'_>::new_display::<String>(move _12) -> bb1; // scope 0 at ui/functions-closures/nullable-pointer-opt-closures.rs:23:41: 23:42
                                         // mir::Constant
                                         // + span: ui/functions-closures/nullable-pointer-opt-closures.rs:23:41: 23:42
                                         // + user_ty: UserType(1)
                                         // + literal: Const { ty: for<'b> fn(&'b String) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_display::<String>}, val: Value(<ZST>) }
    }

    bb1: {
        _10 = [move _11];                // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _9 = &_10;                       // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _8 = _9;                         // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _7 = move _8 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _3 = Arguments::<'_>::new_v1(move _4, move _7) -> bb2; // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb2: {
        _2 = _print(move _3) -> bb3;     // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:62
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:27
                                         // + literal: Const { ty: for<'a> fn(Arguments<'a>) {_print}, val: Value(<ZST>) }
    }

    bb3: {
        return;                          // scope 0 at ui/functions-closures/nullable-pointer-opt-closures.rs:23:43: 23:43
    }
}

promoted[0] in main::{closure#2}: &[&str; 2] = {
    let mut _0: &[&str; 2];              // return place in scope 0 at ui/functions-closures/nullable-pointer-opt-closures.rs:23:35: 23:39
    let mut _1: [&str; 2];               // in scope 0 at ui/functions-closures/nullable-pointer-opt-closures.rs:23:35: 23:39

    bb0: {
        _1 = [const "", const "\n"];     // scope 0 at ui/functions-closures/nullable-pointer-opt-closures.rs:23:35: 23:39
                                         // mir::Constant
                                         // + span: ui/functions-closures/nullable-pointer-opt-closures.rs:23:35: 23:39
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
                                         // mir::Constant
                                         // + span: ui/functions-closures/nullable-pointer-opt-closures.rs:23:35: 23:39
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at ui/functions-closures/nullable-pointer-opt-closures.rs:23:35: 23:39
        return;                          // scope 0 at ui/functions-closures/nullable-pointer-opt-closures.rs:23:35: 23:39
    }
}

fn main::{closure#3}(_1: &[closure@ui/functions-closures/nullable-pointer-opt-closures.rs:30:18: 30:25]) -> () {
    debug a => ((*_1).0: i32);           // in scope 0 at ui/functions-closures/nullable-pointer-opt-closures.rs:29:9: 29:10
    let mut _0: ();                      // return place in scope 0 at ui/functions-closures/nullable-pointer-opt-closures.rs:30:26: 30:26
    let _2: ();                          // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:62
    let mut _3: std::fmt::Arguments<'_>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _4: &[&str];                 // in scope 0 at ui/functions-closures/nullable-pointer-opt-closures.rs:30:35: 30:39
    let mut _5: &[&str; 2];              // in scope 0 at ui/functions-closures/nullable-pointer-opt-closures.rs:30:35: 30:39
    let _6: &[&str; 2];                  // in scope 0 at ui/functions-closures/nullable-pointer-opt-closures.rs:30:35: 30:39
    let mut _7: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _8: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let _9: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let _10: [core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _11: core::fmt::ArgumentV1<'_>; // in scope 0 at ui/functions-closures/nullable-pointer-opt-closures.rs:30:41: 30:42
    let mut _12: &i32;                   // in scope 0 at ui/functions-closures/nullable-pointer-opt-closures.rs:30:41: 30:42
    let _13: &i32;                       // in scope 0 at ui/functions-closures/nullable-pointer-opt-closures.rs:30:41: 30:42
    let mut _14: &[&str; 2];             // in scope 0 at ui/functions-closures/nullable-pointer-opt-closures.rs:30:35: 30:39

    bb0: {
        _14 = const _;                   // scope 0 at ui/functions-closures/nullable-pointer-opt-closures.rs:30:35: 30:39
                                         // mir::Constant
                                         // + span: ui/functions-closures/nullable-pointer-opt-closures.rs:30:35: 30:39
                                         // + literal: Const { ty: &[&str; 2], val: Unevaluated(main::{closure#3}, [<closure_kind>, <closure_signature>, <upvars>], Some(promoted[0])) }
        _6 = _14;                        // scope 0 at ui/functions-closures/nullable-pointer-opt-closures.rs:30:35: 30:39
        _5 = _6;                         // scope 0 at ui/functions-closures/nullable-pointer-opt-closures.rs:30:35: 30:39
        _4 = move _5 as &[&str] (Pointer(Unsize)); // scope 0 at ui/functions-closures/nullable-pointer-opt-closures.rs:30:35: 30:39
        _13 = &((*_1).0: i32);           // scope 0 at ui/functions-closures/nullable-pointer-opt-closures.rs:30:41: 30:42
        _12 = _13;                       // scope 0 at ui/functions-closures/nullable-pointer-opt-closures.rs:30:41: 30:42
        _11 = core::fmt::ArgumentV1::<'_>::new_display::<i32>(move _12) -> bb1; // scope 0 at ui/functions-closures/nullable-pointer-opt-closures.rs:30:41: 30:42
                                         // mir::Constant
                                         // + span: ui/functions-closures/nullable-pointer-opt-closures.rs:30:41: 30:42
                                         // + user_ty: UserType(1)
                                         // + literal: Const { ty: for<'b> fn(&'b i32) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_display::<i32>}, val: Value(<ZST>) }
    }

    bb1: {
        _10 = [move _11];                // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _9 = &_10;                       // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _8 = _9;                         // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _7 = move _8 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _3 = Arguments::<'_>::new_v1(move _4, move _7) -> bb2; // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb2: {
        _2 = _print(move _3) -> bb3;     // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:62
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:27
                                         // + literal: Const { ty: for<'a> fn(Arguments<'a>) {_print}, val: Value(<ZST>) }
    }

    bb3: {
        return;                          // scope 0 at ui/functions-closures/nullable-pointer-opt-closures.rs:30:43: 30:43
    }
}

promoted[0] in main::{closure#3}: &[&str; 2] = {
    let mut _0: &[&str; 2];              // return place in scope 0 at ui/functions-closures/nullable-pointer-opt-closures.rs:30:35: 30:39
    let mut _1: [&str; 2];               // in scope 0 at ui/functions-closures/nullable-pointer-opt-closures.rs:30:35: 30:39

    bb0: {
        _1 = [const "", const "\n"];     // scope 0 at ui/functions-closures/nullable-pointer-opt-closures.rs:30:35: 30:39
                                         // mir::Constant
                                         // + span: ui/functions-closures/nullable-pointer-opt-closures.rs:30:35: 30:39
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
                                         // mir::Constant
                                         // + span: ui/functions-closures/nullable-pointer-opt-closures.rs:30:35: 30:39
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at ui/functions-closures/nullable-pointer-opt-closures.rs:30:35: 30:39
        return;                          // scope 0 at ui/functions-closures/nullable-pointer-opt-closures.rs:30:35: 30:39
    }
}
