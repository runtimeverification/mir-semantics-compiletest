// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
fn <impl at ui/log-poly.rs:3:10: 3:15>::fmt(_1: &Numbers, _2: &mut Formatter<'_>) -> Result<(), std::fmt::Error> {
    debug self => _1;                    // in scope 0 at ui/log-poly.rs:3:10: 3:15
    debug f => _2;                       // in scope 0 at ui/log-poly.rs:3:10: 3:15
    let mut _0: std::result::Result<(), std::fmt::Error>; // return place in scope 0 at ui/log-poly.rs:3:10: 3:15
    let mut _3: &mut std::fmt::Formatter<'_>; // in scope 0 at ui/log-poly.rs:3:10: 3:15
    let mut _4: &str;                    // in scope 0 at ui/log-poly.rs:3:10: 3:15
    let _5: &str;                        // in scope 0 at ui/log-poly.rs:3:10: 3:15

    bb0: {
        _3 = &mut (*_2);                 // scope 0 at ui/log-poly.rs:3:10: 3:15
        _5 = const "Three";              // scope 0 at ui/log-poly.rs:3:10: 3:15
                                         // mir::Constant
                                         // + span: ui/log-poly.rs:3:10: 3:15
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _4 = _5;                         // scope 0 at ui/log-poly.rs:3:10: 3:15
        _0 = Formatter::<'_>::write_str(move _3, move _4) -> bb1; // scope 0 at ui/log-poly.rs:3:10: 3:15
                                         // mir::Constant
                                         // + span: ui/log-poly.rs:3:10: 3:15
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a mut Formatter<'_>, &'b str) -> Result<(), std::fmt::Error> {Formatter::<'_>::write_str}, val: Value(<ZST>) }
    }

    bb1: {
        return;                          // scope 0 at ui/log-poly.rs:3:15: 3:15
    }
}

fn main() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/log-poly.rs:8:15: 8:15
    let _1: ();                          // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:62
    let mut _2: std::fmt::Arguments<'_>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _3: &[&str];                 // in scope 0 at ui/log-poly.rs:9:14: 9:20
    let mut _4: &[&str; 2];              // in scope 0 at ui/log-poly.rs:9:14: 9:20
    let _5: &[&str; 2];                  // in scope 0 at ui/log-poly.rs:9:14: 9:20
    let mut _6: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _7: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let _8: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let _9: [core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _10: core::fmt::ArgumentV1<'_>; // in scope 0 at ui/log-poly.rs:9:22: 9:23
    let mut _11: &i32;                   // in scope 0 at ui/log-poly.rs:9:22: 9:23
    let _12: &i32;                       // in scope 0 at ui/log-poly.rs:9:22: 9:23
    let _13: ();                         // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:62
    let mut _14: std::fmt::Arguments<'_>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _15: &[&str];                // in scope 0 at ui/log-poly.rs:10:14: 10:20
    let mut _16: &[&str; 2];             // in scope 0 at ui/log-poly.rs:10:14: 10:20
    let _17: &[&str; 2];                 // in scope 0 at ui/log-poly.rs:10:14: 10:20
    let mut _18: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _19: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let _20: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let _21: [core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _22: core::fmt::ArgumentV1<'_>; // in scope 0 at ui/log-poly.rs:10:22: 10:28
    let mut _23: &f64;                   // in scope 0 at ui/log-poly.rs:10:22: 10:28
    let _24: &f64;                       // in scope 0 at ui/log-poly.rs:10:22: 10:28
    let _25: ();                         // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:62
    let mut _26: std::fmt::Arguments<'_>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _27: &[&str];                // in scope 0 at ui/log-poly.rs:11:14: 11:20
    let mut _28: &[&str; 2];             // in scope 0 at ui/log-poly.rs:11:14: 11:20
    let _29: &[&str; 2];                 // in scope 0 at ui/log-poly.rs:11:14: 11:20
    let mut _30: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _31: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let _32: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let _33: [core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _34: core::fmt::ArgumentV1<'_>; // in scope 0 at ui/log-poly.rs:11:22: 11:36
    let mut _35: &Numbers;               // in scope 0 at ui/log-poly.rs:11:22: 11:36
    let _36: &Numbers;                   // in scope 0 at ui/log-poly.rs:11:22: 11:36
    let _37: ();                         // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:62
    let mut _38: std::fmt::Arguments<'_>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _39: &[&str];                // in scope 0 at ui/log-poly.rs:12:14: 12:20
    let mut _40: &[&str; 2];             // in scope 0 at ui/log-poly.rs:12:14: 12:20
    let _41: &[&str; 2];                 // in scope 0 at ui/log-poly.rs:12:14: 12:20
    let mut _42: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _43: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let _44: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let _45: [core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _46: core::fmt::ArgumentV1<'_>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:50:36: 53:10
    let mut _47: &std::vec::Vec<i32>;    // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:50:36: 53:10
    let _48: &std::vec::Vec<i32>;        // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:50:36: 53:10
    let _49: std::vec::Vec<i32>;         // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:50:36: 53:10
    let mut _50: std::boxed::Box<[i32]>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
    let mut _51: std::boxed::Box<[i32; 1]>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
    let mut _52: usize;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
    let mut _53: usize;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
    let mut _54: *mut u8;                // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
    let mut _55: std::boxed::Box<[i32; 1]>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
    let mut _56: &[&str; 2];             // in scope 0 at ui/log-poly.rs:12:14: 12:20
    let mut _57: &Numbers;               // in scope 0 at ui/log-poly.rs:11:22: 11:36
    let mut _58: &[&str; 2];             // in scope 0 at ui/log-poly.rs:11:14: 11:20
    let mut _59: &f64;                   // in scope 0 at ui/log-poly.rs:10:22: 10:28
    let mut _60: &[&str; 2];             // in scope 0 at ui/log-poly.rs:10:14: 10:20
    let mut _61: &i32;                   // in scope 0 at ui/log-poly.rs:9:22: 9:23
    let mut _62: &[&str; 2];             // in scope 0 at ui/log-poly.rs:9:14: 9:20
    let mut _63: *const [i32; 1];        // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
    scope 1 {
    }

    bb0: {
        _62 = const _;                   // scope 0 at ui/log-poly.rs:9:14: 9:20
                                         // mir::Constant
                                         // + span: ui/log-poly.rs:9:14: 9:20
                                         // + literal: Const { ty: &[&str; 2], val: Unevaluated(main, [], Some(promoted[6])) }
        _5 = _62;                        // scope 0 at ui/log-poly.rs:9:14: 9:20
        _4 = _5;                         // scope 0 at ui/log-poly.rs:9:14: 9:20
        _3 = move _4 as &[&str] (Pointer(Unsize)); // scope 0 at ui/log-poly.rs:9:14: 9:20
        _61 = const _;                   // scope 0 at ui/log-poly.rs:9:22: 9:23
                                         // mir::Constant
                                         // + span: ui/log-poly.rs:9:22: 9:23
                                         // + literal: Const { ty: &i32, val: Unevaluated(main, [], Some(promoted[5])) }
        _12 = _61;                       // scope 0 at ui/log-poly.rs:9:22: 9:23
        _11 = _12;                       // scope 0 at ui/log-poly.rs:9:22: 9:23
        _10 = core::fmt::ArgumentV1::<'_>::new_debug::<i32>(move _11) -> bb1; // scope 0 at ui/log-poly.rs:9:22: 9:23
                                         // mir::Constant
                                         // + span: ui/log-poly.rs:9:22: 9:23
                                         // + user_ty: UserType(1)
                                         // + literal: Const { ty: for<'b> fn(&'b i32) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_debug::<i32>}, val: Value(<ZST>) }
    }

    bb1: {
        _9 = [move _10];                 // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _8 = &_9;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _7 = _8;                         // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _6 = move _7 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _2 = Arguments::<'_>::new_v1(move _3, move _6) -> bb2; // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb2: {
        _1 = _print(move _2) -> bb3;     // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:62
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:27
                                         // + literal: Const { ty: for<'a> fn(Arguments<'a>) {_print}, val: Value(<ZST>) }
    }

    bb3: {
        _60 = const _;                   // scope 0 at ui/log-poly.rs:10:14: 10:20
                                         // mir::Constant
                                         // + span: ui/log-poly.rs:10:14: 10:20
                                         // + literal: Const { ty: &[&str; 2], val: Unevaluated(main, [], Some(promoted[4])) }
        _17 = _60;                       // scope 0 at ui/log-poly.rs:10:14: 10:20
        _16 = _17;                       // scope 0 at ui/log-poly.rs:10:14: 10:20
        _15 = move _16 as &[&str] (Pointer(Unsize)); // scope 0 at ui/log-poly.rs:10:14: 10:20
        _59 = const _;                   // scope 0 at ui/log-poly.rs:10:22: 10:28
                                         // mir::Constant
                                         // + span: ui/log-poly.rs:10:22: 10:28
                                         // + literal: Const { ty: &f64, val: Unevaluated(main, [], Some(promoted[3])) }
        _24 = _59;                       // scope 0 at ui/log-poly.rs:10:22: 10:28
        _23 = _24;                       // scope 0 at ui/log-poly.rs:10:22: 10:28
        _22 = core::fmt::ArgumentV1::<'_>::new_debug::<f64>(move _23) -> bb4; // scope 0 at ui/log-poly.rs:10:22: 10:28
                                         // mir::Constant
                                         // + span: ui/log-poly.rs:10:22: 10:28
                                         // + user_ty: UserType(3)
                                         // + literal: Const { ty: for<'b> fn(&'b f64) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_debug::<f64>}, val: Value(<ZST>) }
    }

    bb4: {
        _21 = [move _22];                // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _20 = &_21;                      // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _19 = _20;                       // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _18 = move _19 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _14 = Arguments::<'_>::new_v1(move _15, move _18) -> bb5; // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // + user_ty: UserType(2)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb5: {
        _13 = _print(move _14) -> bb6;   // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:62
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:27
                                         // + literal: Const { ty: for<'a> fn(Arguments<'a>) {_print}, val: Value(<ZST>) }
    }

    bb6: {
        _58 = const _;                   // scope 0 at ui/log-poly.rs:11:14: 11:20
                                         // mir::Constant
                                         // + span: ui/log-poly.rs:11:14: 11:20
                                         // + literal: Const { ty: &[&str; 2], val: Unevaluated(main, [], Some(promoted[2])) }
        _29 = _58;                       // scope 0 at ui/log-poly.rs:11:14: 11:20
        _28 = _29;                       // scope 0 at ui/log-poly.rs:11:14: 11:20
        _27 = move _28 as &[&str] (Pointer(Unsize)); // scope 0 at ui/log-poly.rs:11:14: 11:20
        _57 = const _;                   // scope 0 at ui/log-poly.rs:11:22: 11:36
                                         // mir::Constant
                                         // + span: ui/log-poly.rs:11:22: 11:36
                                         // + literal: Const { ty: &Numbers, val: Unevaluated(main, [], Some(promoted[1])) }
        _36 = _57;                       // scope 0 at ui/log-poly.rs:11:22: 11:36
        _35 = _36;                       // scope 0 at ui/log-poly.rs:11:22: 11:36
        _34 = core::fmt::ArgumentV1::<'_>::new_debug::<Numbers>(move _35) -> bb7; // scope 0 at ui/log-poly.rs:11:22: 11:36
                                         // mir::Constant
                                         // + span: ui/log-poly.rs:11:22: 11:36
                                         // + user_ty: UserType(5)
                                         // + literal: Const { ty: for<'b> fn(&'b Numbers) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_debug::<Numbers>}, val: Value(<ZST>) }
    }

    bb7: {
        _33 = [move _34];                // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _32 = &_33;                      // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _31 = _32;                       // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _30 = move _31 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _26 = Arguments::<'_>::new_v1(move _27, move _30) -> bb8; // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // + user_ty: UserType(4)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb8: {
        _25 = _print(move _26) -> bb9;   // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:62
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:27
                                         // + literal: Const { ty: for<'a> fn(Arguments<'a>) {_print}, val: Value(<ZST>) }
    }

    bb9: {
        _56 = const _;                   // scope 0 at ui/log-poly.rs:12:14: 12:20
                                         // mir::Constant
                                         // + span: ui/log-poly.rs:12:14: 12:20
                                         // + literal: Const { ty: &[&str; 2], val: Unevaluated(main, [], Some(promoted[0])) }
        _41 = _56;                       // scope 0 at ui/log-poly.rs:12:14: 12:20
        _40 = _41;                       // scope 0 at ui/log-poly.rs:12:14: 12:20
        _39 = move _40 as &[&str] (Pointer(Unsize)); // scope 0 at ui/log-poly.rs:12:14: 12:20
        _52 = const 4_usize;             // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
        _53 = const 4_usize;             // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
        _54 = alloc::alloc::exchange_malloc(move _52, move _53) -> bb10; // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
                                         // + literal: Const { ty: unsafe fn(usize, usize) -> *mut u8 {alloc::alloc::exchange_malloc}, val: Value(<ZST>) }
    }

    bb10: {
        _55 = ShallowInitBox(move _54, [i32; 1]); // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
        _63 = (((_55.0: std::ptr::Unique<[i32; 1]>).0: std::ptr::NonNull<[i32; 1]>).0: *const [i32; 1]); // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:37: 52:46
        (*_63) = [const 4_i32];          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:37: 52:46
        _51 = move _55;                  // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
        _50 = move _51 as std::boxed::Box<[i32]> (Pointer(Unsize)); // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
        _49 = slice::<impl [i32]>::into_vec::<std::alloc::Global>(move _50) -> bb11; // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:50:36: 53:10
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:50:36: 50:51
                                         // + user_ty: UserType(8)
                                         // + literal: Const { ty: fn(Box<[i32]>) -> Vec<i32> {slice::<impl [i32]>::into_vec::<std::alloc::Global>}, val: Value(<ZST>) }
    }

    bb11: {
        _48 = &_49;                      // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:50:36: 53:10
        _47 = _48;                       // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:50:36: 53:10
        _46 = core::fmt::ArgumentV1::<'_>::new_debug::<Vec<i32>>(move _47) -> [return: bb12, unwind: bb16]; // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:50:36: 53:10
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:50:36: 53:10
                                         // + user_ty: UserType(7)
                                         // + literal: Const { ty: for<'b> fn(&'b Vec<i32>) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_debug::<Vec<i32>>}, val: Value(<ZST>) }
    }

    bb12: {
        _45 = [move _46];                // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _44 = &_45;                      // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _43 = _44;                       // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _42 = move _43 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _38 = Arguments::<'_>::new_v1(move _39, move _42) -> [return: bb13, unwind: bb16]; // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // + user_ty: UserType(6)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb13: {
        _37 = _print(move _38) -> [return: bb14, unwind: bb16]; // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:62
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:27
                                         // + literal: Const { ty: for<'a> fn(Arguments<'a>) {_print}, val: Value(<ZST>) }
    }

    bb14: {
        drop(_49) -> bb15;               // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:62: 137:63
    }

    bb15: {
        return;                          // scope 0 at ui/log-poly.rs:13:2: 13:2
    }

    bb16 (cleanup): {
        drop(_49) -> bb17;               // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:62: 137:63
    }

    bb17 (cleanup): {
        resume;                          // scope 0 at ui/log-poly.rs:8:1: 13:2
    }
}

promoted[0] in main: &[&str; 2] = {
    let mut _0: &[&str; 2];              // return place in scope 0 at ui/log-poly.rs:12:14: 12:20
    let mut _1: [&str; 2];               // in scope 0 at ui/log-poly.rs:12:14: 12:20

    bb0: {
        _1 = [const "", const "\n"];     // scope 0 at ui/log-poly.rs:12:14: 12:20
                                         // mir::Constant
                                         // + span: ui/log-poly.rs:12:14: 12:20
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
                                         // mir::Constant
                                         // + span: ui/log-poly.rs:12:14: 12:20
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at ui/log-poly.rs:12:14: 12:20
        return;                          // scope 0 at ui/log-poly.rs:12:14: 12:20
    }
}

promoted[1] in main: &Numbers = {
    let mut _0: &Numbers;                // return place in scope 0 at ui/log-poly.rs:11:22: 11:36
    let mut _1: Numbers;                 // in scope 0 at ui/log-poly.rs:11:22: 11:36

    bb0: {
        _1 = Numbers::Three;             // scope 0 at ui/log-poly.rs:11:22: 11:36
        _0 = &_1;                        // scope 0 at ui/log-poly.rs:11:22: 11:36
        return;                          // scope 0 at ui/log-poly.rs:11:22: 11:36
    }
}

promoted[2] in main: &[&str; 2] = {
    let mut _0: &[&str; 2];              // return place in scope 0 at ui/log-poly.rs:11:14: 11:20
    let mut _1: [&str; 2];               // in scope 0 at ui/log-poly.rs:11:14: 11:20

    bb0: {
        _1 = [const "", const "\n"];     // scope 0 at ui/log-poly.rs:11:14: 11:20
                                         // mir::Constant
                                         // + span: ui/log-poly.rs:11:14: 11:20
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
                                         // mir::Constant
                                         // + span: ui/log-poly.rs:11:14: 11:20
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at ui/log-poly.rs:11:14: 11:20
        return;                          // scope 0 at ui/log-poly.rs:11:14: 11:20
    }
}

promoted[3] in main: &f64 = {
    let mut _0: &f64;                    // return place in scope 0 at ui/log-poly.rs:10:22: 10:28
    let mut _1: f64;                     // in scope 0 at ui/log-poly.rs:10:22: 10:28

    bb0: {
        _1 = const 2f64;                 // scope 0 at ui/log-poly.rs:10:22: 10:28
        _0 = &_1;                        // scope 0 at ui/log-poly.rs:10:22: 10:28
        return;                          // scope 0 at ui/log-poly.rs:10:22: 10:28
    }
}

promoted[4] in main: &[&str; 2] = {
    let mut _0: &[&str; 2];              // return place in scope 0 at ui/log-poly.rs:10:14: 10:20
    let mut _1: [&str; 2];               // in scope 0 at ui/log-poly.rs:10:14: 10:20

    bb0: {
        _1 = [const "", const "\n"];     // scope 0 at ui/log-poly.rs:10:14: 10:20
                                         // mir::Constant
                                         // + span: ui/log-poly.rs:10:14: 10:20
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
                                         // mir::Constant
                                         // + span: ui/log-poly.rs:10:14: 10:20
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at ui/log-poly.rs:10:14: 10:20
        return;                          // scope 0 at ui/log-poly.rs:10:14: 10:20
    }
}

promoted[5] in main: &i32 = {
    let mut _0: &i32;                    // return place in scope 0 at ui/log-poly.rs:9:22: 9:23
    let mut _1: i32;                     // in scope 0 at ui/log-poly.rs:9:22: 9:23

    bb0: {
        _1 = const 1_i32;                // scope 0 at ui/log-poly.rs:9:22: 9:23
        _0 = &_1;                        // scope 0 at ui/log-poly.rs:9:22: 9:23
        return;                          // scope 0 at ui/log-poly.rs:9:22: 9:23
    }
}

promoted[6] in main: &[&str; 2] = {
    let mut _0: &[&str; 2];              // return place in scope 0 at ui/log-poly.rs:9:14: 9:20
    let mut _1: [&str; 2];               // in scope 0 at ui/log-poly.rs:9:14: 9:20

    bb0: {
        _1 = [const "", const "\n"];     // scope 0 at ui/log-poly.rs:9:14: 9:20
                                         // mir::Constant
                                         // + span: ui/log-poly.rs:9:14: 9:20
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
                                         // mir::Constant
                                         // + span: ui/log-poly.rs:9:14: 9:20
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at ui/log-poly.rs:9:14: 9:20
        return;                          // scope 0 at ui/log-poly.rs:9:14: 9:20
    }
}
