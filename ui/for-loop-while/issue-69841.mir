// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
fn main() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/for-loop-while/issue-69841.rs:7:11: 7:11
    let _1: [u8; 2];                     // in scope 0 at ui/for-loop-while/issue-69841.rs:8:9: 8:15
    let mut _3: std::slice::Iter<'_, u8>; // in scope 0 at ui/for-loop-while/issue-69841.rs:11:18: 11:25
    let mut _4: &[u8; 2];                // in scope 0 at ui/for-loop-while/issue-69841.rs:11:18: 11:25
    let mut _6: std::option::Option<&u8>; // in scope 0 at ui/for-loop-while/issue-69841.rs:11:18: 11:25
    let mut _7: &mut std::slice::Iter<'_, u8>; // in scope 0 at ui/for-loop-while/issue-69841.rs:11:18: 11:25
    let mut _8: &mut std::slice::Iter<'_, u8>; // in scope 0 at ui/for-loop-while/issue-69841.rs:11:18: 11:25
    let mut _9: isize;                   // in scope 0 at ui/for-loop-while/issue-69841.rs:11:9: 24:10
    let mut _11: bool;                   // in scope 0 at ui/for-loop-while/issue-69841.rs:13:17: 13:24
    let mut _12: bool;                   // in scope 0 at ui/for-loop-while/issue-69841.rs:13:17: 13:24
    let mut _13: (u64, bool);            // in scope 0 at ui/for-loop-while/issue-69841.rs:14:21: 14:27
    let mut _14: u64;                    // in scope 0 at ui/for-loop-while/issue-69841.rs:15:25: 15:39
    let mut _15: u64;                    // in scope 0 at ui/for-loop-while/issue-69841.rs:15:25: 15:34
    let mut _16: u8;                     // in scope 0 at ui/for-loop-while/issue-69841.rs:15:25: 15:27
    let mut _17: (u64, bool);            // in scope 0 at ui/for-loop-while/issue-69841.rs:15:25: 15:39
    let mut _18: (u64, bool);            // in scope 0 at ui/for-loop-while/issue-69841.rs:15:21: 15:39
    let mut _19: !;                      // in scope 0 at ui/for-loop-while/issue-69841.rs:21:30: 21:64
    let mut _20: u64;                    // in scope 0 at ui/for-loop-while/issue-69841.rs:26:8: 26:9
    let _21: ();                         // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:62
    let mut _22: std::fmt::Arguments<'_>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _23: &[&str];                // in scope 0 at ui/for-loop-while/issue-69841.rs:27:18: 27:40
    let mut _24: &[&str; 1];             // in scope 0 at ui/for-loop-while/issue-69841.rs:27:18: 27:40
    let _25: &[&str; 1];                 // in scope 0 at ui/for-loop-while/issue-69841.rs:27:18: 27:40
    let mut _26: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _27: &[core::fmt::ArgumentV1<'_>; 0]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let _28: &[core::fmt::ArgumentV1<'_>; 0]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _29: !;                      // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/panic.rs:22:9: 22:38
    scope 1 {
        debug buffer => _1;              // in scope 1 at ui/for-loop-while/issue-69841.rs:8:9: 8:15
        let mut _2: u64;                 // in scope 1 at ui/for-loop-while/issue-69841.rs:9:9: 9:14
        scope 2 {
            debug a => _2;               // in scope 2 at ui/for-loop-while/issue-69841.rs:9:9: 9:14
            let mut _5: std::slice::Iter<'_, u8>; // in scope 2 at ui/for-loop-while/issue-69841.rs:11:18: 11:25
            let mut _30: &[core::fmt::ArgumentV1<'_>; 0]; // in scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
            let mut _31: &[&str; 1];     // in scope 2 at ui/for-loop-while/issue-69841.rs:27:18: 27:40
            scope 3 {
                debug iter => _5;        // in scope 3 at ui/for-loop-while/issue-69841.rs:11:18: 11:25
                let _10: &u8;            // in scope 3 at ui/for-loop-while/issue-69841.rs:11:13: 11:14
                scope 4 {
                    debug c => _10;      // in scope 4 at ui/for-loop-while/issue-69841.rs:11:13: 11:14
                    scope 5 {
                    }
                }
            }
        }
    }

    bb0: {
        _1 = [const 49_u8, const 10_u8]; // scope 0 at ui/for-loop-while/issue-69841.rs:8:18: 8:28
        _2 = const 0_u64;                // scope 1 at ui/for-loop-while/issue-69841.rs:9:23: 9:24
        goto -> bb1;                     // scope 2 at ui/for-loop-while/issue-69841.rs:10:5: 25:6
    }

    bb1: {
        _4 = &_1;                        // scope 2 at ui/for-loop-while/issue-69841.rs:11:18: 11:25
        _3 = <&[u8; 2] as IntoIterator>::into_iter(move _4) -> bb2; // scope 2 at ui/for-loop-while/issue-69841.rs:11:18: 11:25
                                         // mir::Constant
                                         // + span: ui/for-loop-while/issue-69841.rs:11:18: 11:25
                                         // + literal: Const { ty: fn(&[u8; 2]) -> <&[u8; 2] as IntoIterator>::IntoIter {<&[u8; 2] as IntoIterator>::into_iter}, val: Value(<ZST>) }
    }

    bb2: {
        _5 = move _3;                    // scope 2 at ui/for-loop-while/issue-69841.rs:11:18: 11:25
        goto -> bb3;                     // scope 3 at ui/for-loop-while/issue-69841.rs:11:9: 24:10
    }

    bb3: {
        _8 = &mut _5;                    // scope 3 at ui/for-loop-while/issue-69841.rs:11:18: 11:25
        _7 = &mut (*_8);                 // scope 3 at ui/for-loop-while/issue-69841.rs:11:18: 11:25
        _6 = <std::slice::Iter<'_, u8> as Iterator>::next(move _7) -> bb4; // scope 3 at ui/for-loop-while/issue-69841.rs:11:18: 11:25
                                         // mir::Constant
                                         // + span: ui/for-loop-while/issue-69841.rs:11:18: 11:25
                                         // + literal: Const { ty: for<'a> fn(&'a mut std::slice::Iter<'_, u8>) -> Option<<std::slice::Iter<'_, u8> as Iterator>::Item> {<std::slice::Iter<'_, u8> as Iterator>::next}, val: Value(<ZST>) }
    }

    bb4: {
        _9 = discriminant(_6);           // scope 3 at ui/for-loop-while/issue-69841.rs:11:18: 11:25
        switchInt(move _9) -> [0: bb1, 1: bb5, otherwise: bb6]; // scope 3 at ui/for-loop-while/issue-69841.rs:11:18: 11:25
    }

    bb5: {
        _10 = ((_6 as Some).0: &u8);     // scope 3 at ui/for-loop-while/issue-69841.rs:11:13: 11:14
        _11 = Le(const 48_u8, (*_10));   // scope 4 at ui/for-loop-while/issue-69841.rs:13:17: 13:24
        switchInt(move _11) -> [0: bb8, otherwise: bb7]; // scope 4 at ui/for-loop-while/issue-69841.rs:13:17: 13:24
    }

    bb6: {
        unreachable;                     // scope 3 at ui/for-loop-while/issue-69841.rs:11:18: 11:25
    }

    bb7: {
        _12 = Le((*_10), const 57_u8);   // scope 4 at ui/for-loop-while/issue-69841.rs:13:17: 13:24
        switchInt(move _12) -> [0: bb8, otherwise: bb10]; // scope 4 at ui/for-loop-while/issue-69841.rs:13:17: 13:24
    }

    bb8: {
        switchInt((*_10)) -> [10: bb14, otherwise: bb9]; // scope 4 at ui/for-loop-while/issue-69841.rs:12:13: 12:20
    }

    bb9: {
        _19 = unreachable_unchecked();   // scope 5 at ui/for-loop-while/issue-69841.rs:21:30: 21:64
                                         // mir::Constant
                                         // + span: ui/for-loop-while/issue-69841.rs:21:30: 21:62
                                         // + literal: Const { ty: unsafe fn() -> ! {unreachable_unchecked}, val: Value(<ZST>) }
    }

    bb10: {
        _13 = CheckedMul(_2, const 10_u64); // scope 4 at ui/for-loop-while/issue-69841.rs:14:21: 14:27
        assert(!move (_13.1: bool), "attempt to compute `{} * {}`, which would overflow", _2, const 10_u64) -> bb11; // scope 4 at ui/for-loop-while/issue-69841.rs:14:21: 14:27
    }

    bb11: {
        _2 = move (_13.0: u64);          // scope 4 at ui/for-loop-while/issue-69841.rs:14:21: 14:27
        _16 = (*_10);                    // scope 4 at ui/for-loop-while/issue-69841.rs:15:25: 15:27
        _15 = move _16 as u64 (IntToInt); // scope 4 at ui/for-loop-while/issue-69841.rs:15:25: 15:34
        _17 = CheckedSub(_15, const 48_u64); // scope 4 at ui/for-loop-while/issue-69841.rs:15:25: 15:39
        assert(!move (_17.1: bool), "attempt to compute `{} - {}`, which would overflow", move _15, const 48_u64) -> bb12; // scope 4 at ui/for-loop-while/issue-69841.rs:15:25: 15:39
    }

    bb12: {
        _14 = move (_17.0: u64);         // scope 4 at ui/for-loop-while/issue-69841.rs:15:25: 15:39
        _18 = CheckedAdd(_2, _14);       // scope 4 at ui/for-loop-while/issue-69841.rs:15:21: 15:39
        assert(!move (_18.1: bool), "attempt to compute `{} + {}`, which would overflow", _2, move _14) -> bb13; // scope 4 at ui/for-loop-while/issue-69841.rs:15:21: 15:39
    }

    bb13: {
        _2 = move (_18.0: u64);          // scope 4 at ui/for-loop-while/issue-69841.rs:15:21: 15:39
        goto -> bb3;                     // scope 3 at ui/for-loop-while/issue-69841.rs:11:9: 24:10
    }

    bb14: {
        _20 = _2;                        // scope 2 at ui/for-loop-while/issue-69841.rs:26:8: 26:9
        switchInt(move _20) -> [1: bb15, otherwise: bb16]; // scope 2 at ui/for-loop-while/issue-69841.rs:26:8: 26:14
    }

    bb15: {
        _31 = const _;                   // scope 2 at ui/for-loop-while/issue-69841.rs:27:18: 27:40
                                         // mir::Constant
                                         // + span: ui/for-loop-while/issue-69841.rs:27:18: 27:40
                                         // + literal: Const { ty: &[&str; 1], val: Unevaluated(main, [], Some(promoted[1])) }
        _25 = _31;                       // scope 2 at ui/for-loop-while/issue-69841.rs:27:18: 27:40
        _24 = _25;                       // scope 2 at ui/for-loop-while/issue-69841.rs:27:18: 27:40
        _23 = move _24 as &[&str] (Pointer(Unsize)); // scope 2 at ui/for-loop-while/issue-69841.rs:27:18: 27:40
        _30 = const _;                   // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // + literal: Const { ty: &[core::fmt::ArgumentV1<'_>; 0], val: Unevaluated(main, [], Some(promoted[0])) }
        _28 = _30;                       // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _27 = _28;                       // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _26 = move _27 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _22 = Arguments::<'_>::new_v1(move _23, move _26) -> bb17; // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // + user_ty: UserType(2)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb16: {
        _29 = begin_panic::<&str>(const "this should be unreachable."); // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/panic.rs:22:9: 22:38
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/panic.rs:22:9: 22:32
                                         // + literal: Const { ty: fn(&str) -> ! {begin_panic::<&str>}, val: Value(<ZST>) }
                                         // mir::Constant
                                         // + span: ui/for-loop-while/issue-69841.rs:29:16: 29:45
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
    }

    bb17: {
        _21 = _print(move _22) -> bb18;  // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:62
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:27
                                         // + literal: Const { ty: for<'a> fn(Arguments<'a>) {_print}, val: Value(<ZST>) }
    }

    bb18: {
        return;                          // scope 0 at ui/for-loop-while/issue-69841.rs:31:2: 31:2
    }
}

promoted[0] in main: &[core::fmt::ArgumentV1<'_>; 0] = {
    let mut _0: &[core::fmt::ArgumentV1<'_>; 0]; // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _1: [core::fmt::ArgumentV1<'_>; 0]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61

    bb0: {
        _1 = [];                         // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    }
}

promoted[1] in main: &[&str; 1] = {
    let mut _0: &[&str; 1];              // return place in scope 0 at ui/for-loop-while/issue-69841.rs:27:18: 27:40
    let mut _1: [&str; 1];               // in scope 0 at ui/for-loop-while/issue-69841.rs:27:18: 27:40

    bb0: {
        _1 = [const "What did you expect?\n"]; // scope 0 at ui/for-loop-while/issue-69841.rs:27:18: 27:40
                                         // mir::Constant
                                         // + span: ui/for-loop-while/issue-69841.rs:27:18: 27:40
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at ui/for-loop-while/issue-69841.rs:27:18: 27:40
        return;                          // scope 0 at ui/for-loop-while/issue-69841.rs:27:18: 27:40
    }
}
