// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
fn main() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/for-loop-while/for-loop-into-iterator.rs:5:11: 5:11
    let mut _1: std::vec::Vec<i32>;      // in scope 0 at ui/for-loop-while/for-loop-into-iterator.rs:6:9: 6:14
    let mut _2: std::boxed::Box<[i32]>;  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
    let mut _3: std::boxed::Box<[i32; 1]>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
    let mut _4: usize;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
    let mut _5: usize;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
    let mut _6: *mut u8;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
    let mut _7: std::boxed::Box<[i32; 1]>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
    let mut _8: std::slice::Iter<'_, i32>; // in scope 0 at ui/for-loop-while/for-loop-into-iterator.rs:8:14: 8:16
    let mut _9: &std::vec::Vec<i32>;     // in scope 0 at ui/for-loop-while/for-loop-into-iterator.rs:8:14: 8:16
    let mut _11: std::option::Option<&i32>; // in scope 0 at ui/for-loop-while/for-loop-into-iterator.rs:8:14: 8:16
    let mut _12: &mut std::slice::Iter<'_, i32>; // in scope 0 at ui/for-loop-while/for-loop-into-iterator.rs:8:14: 8:16
    let mut _13: &mut std::slice::Iter<'_, i32>; // in scope 0 at ui/for-loop-while/for-loop-into-iterator.rs:8:14: 8:16
    let mut _14: isize;                  // in scope 0 at ui/for-loop-while/for-loop-into-iterator.rs:8:5: 10:6
    let mut _16: (&&i32, &&i32);         // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _17: &&i32;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let mut _18: &&i32;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _21: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    let mut _22: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
    let mut _23: &&i32;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
    let mut _24: &&i32;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
    let _26: !;                          // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
    let mut _27: core::panicking::AssertKind; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
    let mut _28: &&i32;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let _29: &&i32;                      // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let mut _30: &&i32;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let _31: &&i32;                      // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let mut _32: std::option::Option<std::fmt::Arguments<'_>>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
    let mut _33: std::slice::IterMut<'_, i32>; // in scope 0 at ui/for-loop-while/for-loop-into-iterator.rs:12:14: 12:20
    let mut _34: &mut std::vec::Vec<i32>; // in scope 0 at ui/for-loop-while/for-loop-into-iterator.rs:12:14: 12:20
    let mut _36: std::option::Option<&mut i32>; // in scope 0 at ui/for-loop-while/for-loop-into-iterator.rs:12:14: 12:20
    let mut _37: &mut std::slice::IterMut<'_, i32>; // in scope 0 at ui/for-loop-while/for-loop-into-iterator.rs:12:14: 12:20
    let mut _38: &mut std::slice::IterMut<'_, i32>; // in scope 0 at ui/for-loop-while/for-loop-into-iterator.rs:12:14: 12:20
    let mut _39: isize;                  // in scope 0 at ui/for-loop-while/for-loop-into-iterator.rs:12:5: 14:6
    let mut _41: (&&mut i32, &&mut i32); // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _42: &&mut i32;              // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let mut _43: &&mut i32;              // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let _44: &mut i32;                   // in scope 0 at ui/for-loop-while/for-loop-into-iterator.rs:13:23: 13:29
    let mut _45: i32;                    // in scope 0 at ui/for-loop-while/for-loop-into-iterator.rs:13:28: 13:29
    let mut _48: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    let mut _49: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
    let mut _50: &&mut i32;              // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
    let mut _51: &&mut i32;              // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
    let _53: !;                          // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
    let mut _54: core::panicking::AssertKind; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
    let mut _55: &&mut i32;              // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let _56: &&mut i32;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let mut _57: &&mut i32;              // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let _58: &&mut i32;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let mut _59: std::option::Option<std::fmt::Arguments<'_>>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
    let mut _60: std::vec::IntoIter<i32>; // in scope 0 at ui/for-loop-while/for-loop-into-iterator.rs:16:14: 16:15
    let mut _61: std::vec::Vec<i32>;     // in scope 0 at ui/for-loop-while/for-loop-into-iterator.rs:16:14: 16:15
    let mut _63: std::option::Option<i32>; // in scope 0 at ui/for-loop-while/for-loop-into-iterator.rs:16:14: 16:15
    let mut _64: &mut std::vec::IntoIter<i32>; // in scope 0 at ui/for-loop-while/for-loop-into-iterator.rs:16:14: 16:15
    let mut _65: &mut std::vec::IntoIter<i32>; // in scope 0 at ui/for-loop-while/for-loop-into-iterator.rs:16:14: 16:15
    let mut _66: isize;                  // in scope 0 at ui/for-loop-while/for-loop-into-iterator.rs:16:5: 18:6
    let mut _68: (&i32, &i32);           // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _69: &i32;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let mut _70: &i32;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _73: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    let mut _74: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
    let mut _75: i32;                    // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
    let mut _76: i32;                    // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
    let _78: !;                          // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
    let mut _79: core::panicking::AssertKind; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
    let mut _80: &i32;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let _81: &i32;                       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let mut _82: &i32;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let _83: &i32;                       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let mut _84: std::option::Option<std::fmt::Arguments<'_>>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
    let mut _87: bool;                   // in scope 0 at ui/for-loop-while/for-loop-into-iterator.rs:19:1: 19:2
    let mut _88: *const [i32; 1];        // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
    scope 1 {
        debug v => _1;                   // in scope 1 at ui/for-loop-while/for-loop-into-iterator.rs:6:9: 6:14
        let mut _10: std::slice::Iter<'_, i32>; // in scope 1 at ui/for-loop-while/for-loop-into-iterator.rs:8:14: 8:16
        let mut _35: std::slice::IterMut<'_, i32>; // in scope 1 at ui/for-loop-while/for-loop-into-iterator.rs:12:14: 12:20
        let mut _62: std::vec::IntoIter<i32>; // in scope 1 at ui/for-loop-while/for-loop-into-iterator.rs:16:14: 16:15
        scope 3 {
            debug iter => _10;           // in scope 3 at ui/for-loop-while/for-loop-into-iterator.rs:8:14: 8:16
            let _15: &i32;               // in scope 3 at ui/for-loop-while/for-loop-into-iterator.rs:8:9: 8:10
            scope 4 {
                debug x => _15;          // in scope 4 at ui/for-loop-while/for-loop-into-iterator.rs:8:9: 8:10
                let _19: &&i32;          // in scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
                let _20: &&i32;          // in scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
                let mut _86: &&i32;      // in scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                scope 5 {
                    debug left_val => _19; // in scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
                    debug right_val => _20; // in scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
                    let _25: core::panicking::AssertKind; // in scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                    scope 6 {
                        debug kind => _25; // in scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                    }
                }
            }
        }
        scope 7 {
            debug iter => _35;           // in scope 7 at ui/for-loop-while/for-loop-into-iterator.rs:12:14: 12:20
            let _40: &mut i32;           // in scope 7 at ui/for-loop-while/for-loop-into-iterator.rs:12:9: 12:10
            scope 8 {
                debug x => _40;          // in scope 8 at ui/for-loop-while/for-loop-into-iterator.rs:12:9: 12:10
                let _46: &&mut i32;      // in scope 8 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
                let _47: &&mut i32;      // in scope 8 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
                scope 9 {
                    debug left_val => _46; // in scope 9 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
                    debug right_val => _47; // in scope 9 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
                    let _52: core::panicking::AssertKind; // in scope 9 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                    scope 10 {
                        debug kind => _52; // in scope 10 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                    }
                }
            }
        }
        scope 11 {
            debug iter => _62;           // in scope 11 at ui/for-loop-while/for-loop-into-iterator.rs:16:14: 16:15
            let _67: i32;                // in scope 11 at ui/for-loop-while/for-loop-into-iterator.rs:16:9: 16:10
            scope 12 {
                debug x => _67;          // in scope 12 at ui/for-loop-while/for-loop-into-iterator.rs:16:9: 16:10
                let _71: &i32;           // in scope 12 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
                let _72: &i32;           // in scope 12 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
                let mut _85: &i32;       // in scope 12 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                scope 13 {
                    debug left_val => _71; // in scope 13 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
                    debug right_val => _72; // in scope 13 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
                    let _77: core::panicking::AssertKind; // in scope 13 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                    scope 14 {
                        debug kind => _77; // in scope 14 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                    }
                }
            }
        }
    }
    scope 2 {
    }

    bb0: {
        _87 = const false;               // scope 0 at ui/for-loop-while/for-loop-into-iterator.rs:6:9: 6:14
        _4 = const 4_usize;              // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
        _5 = const 4_usize;              // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
        _6 = alloc::alloc::exchange_malloc(move _4, move _5) -> bb1; // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
                                         // + literal: Const { ty: unsafe fn(usize, usize) -> *mut u8 {alloc::alloc::exchange_malloc}, val: Value(<ZST>) }
    }

    bb1: {
        _7 = ShallowInitBox(move _6, [i32; 1]); // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
        _88 = (((_7.0: std::ptr::Unique<[i32; 1]>).0: std::ptr::NonNull<[i32; 1]>).0: *const [i32; 1]); // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:37: 52:46
        (*_88) = [const 1_i32];          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:37: 52:46
        _3 = move _7;                    // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
        _2 = move _3 as std::boxed::Box<[i32]> (Pointer(Unsize)); // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
        _1 = slice::<impl [i32]>::into_vec::<std::alloc::Global>(move _2) -> bb2; // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:50:36: 53:10
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:50:36: 50:51
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: fn(Box<[i32]>) -> Vec<i32> {slice::<impl [i32]>::into_vec::<std::alloc::Global>}, val: Value(<ZST>) }
    }

    bb2: {
        _87 = const true;                // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:53:9: 53:10
        _9 = &_1;                        // scope 1 at ui/for-loop-while/for-loop-into-iterator.rs:8:14: 8:16
        _8 = <&Vec<i32> as IntoIterator>::into_iter(move _9) -> [return: bb3, unwind: bb30]; // scope 1 at ui/for-loop-while/for-loop-into-iterator.rs:8:14: 8:16
                                         // mir::Constant
                                         // + span: ui/for-loop-while/for-loop-into-iterator.rs:8:14: 8:16
                                         // + literal: Const { ty: fn(&Vec<i32>) -> <&Vec<i32> as IntoIterator>::IntoIter {<&Vec<i32> as IntoIterator>::into_iter}, val: Value(<ZST>) }
    }

    bb3: {
        _10 = move _8;                   // scope 1 at ui/for-loop-while/for-loop-into-iterator.rs:8:14: 8:16
        goto -> bb4;                     // scope 3 at ui/for-loop-while/for-loop-into-iterator.rs:8:5: 10:6
    }

    bb4: {
        _13 = &mut _10;                  // scope 3 at ui/for-loop-while/for-loop-into-iterator.rs:8:14: 8:16
        _12 = &mut (*_13);               // scope 3 at ui/for-loop-while/for-loop-into-iterator.rs:8:14: 8:16
        _11 = <std::slice::Iter<'_, i32> as Iterator>::next(move _12) -> [return: bb5, unwind: bb30]; // scope 3 at ui/for-loop-while/for-loop-into-iterator.rs:8:14: 8:16
                                         // mir::Constant
                                         // + span: ui/for-loop-while/for-loop-into-iterator.rs:8:14: 8:16
                                         // + literal: Const { ty: for<'a> fn(&'a mut std::slice::Iter<'_, i32>) -> Option<<std::slice::Iter<'_, i32> as Iterator>::Item> {<std::slice::Iter<'_, i32> as Iterator>::next}, val: Value(<ZST>) }
    }

    bb5: {
        _14 = discriminant(_11);         // scope 3 at ui/for-loop-while/for-loop-into-iterator.rs:8:14: 8:16
        switchInt(move _14) -> [0: bb8, 1: bb6, otherwise: bb7]; // scope 3 at ui/for-loop-while/for-loop-into-iterator.rs:8:14: 8:16
    }

    bb6: {
        _15 = ((_11 as Some).0: &i32);   // scope 3 at ui/for-loop-while/for-loop-into-iterator.rs:8:9: 8:10
        _17 = &_15;                      // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _86 = const _;                   // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // + literal: Const { ty: &&i32, val: Unevaluated(main, [], Some(promoted[1])) }
        _18 = _86;                       // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _16 = (move _17, move _18);      // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _19 = (_16.0: &&i32);            // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _20 = (_16.1: &&i32);            // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _23 = _19;                       // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
        _24 = _20;                       // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
        _22 = <&i32 as PartialEq>::eq(move _23, move _24) -> [return: bb9, unwind: bb30]; // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a &i32, &'b &i32) -> bool {<&i32 as PartialEq>::eq}, val: Value(<ZST>) }
    }

    bb7: {
        unreachable;                     // scope 3 at ui/for-loop-while/for-loop-into-iterator.rs:8:14: 8:16
    }

    bb8: {
        _34 = &mut _1;                   // scope 1 at ui/for-loop-while/for-loop-into-iterator.rs:12:14: 12:20
        _33 = <&mut Vec<i32> as IntoIterator>::into_iter(move _34) -> [return: bb11, unwind: bb30]; // scope 1 at ui/for-loop-while/for-loop-into-iterator.rs:12:14: 12:20
                                         // mir::Constant
                                         // + span: ui/for-loop-while/for-loop-into-iterator.rs:12:14: 12:20
                                         // + literal: Const { ty: fn(&mut Vec<i32>) -> <&mut Vec<i32> as IntoIterator>::IntoIter {<&mut Vec<i32> as IntoIterator>::into_iter}, val: Value(<ZST>) }
    }

    bb9: {
        _21 = Not(move _22);             // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
        switchInt(move _21) -> [0: bb4, otherwise: bb10]; // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    }

    bb10: {
        _25 = const core::panicking::AssertKind::Eq; // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _27 = const core::panicking::AssertKind::Eq; // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _29 = _19;                       // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _28 = _29;                       // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _31 = _20;                       // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _30 = _31;                       // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _32 = Option::<Arguments<'_>>::None; // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
        _26 = core::panicking::assert_failed::<&i32, &i32>(move _27, move _28, move _30, move _32) -> bb30; // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:53
                                         // + literal: Const { ty: for<'a, 'b, 'c> fn(core::panicking::AssertKind, &'a &i32, &'b &i32, Option<Arguments<'c>>) -> ! {core::panicking::assert_failed::<&i32, &i32>}, val: Value(<ZST>) }
    }

    bb11: {
        _35 = move _33;                  // scope 1 at ui/for-loop-while/for-loop-into-iterator.rs:12:14: 12:20
        goto -> bb12;                    // scope 7 at ui/for-loop-while/for-loop-into-iterator.rs:12:5: 14:6
    }

    bb12: {
        _38 = &mut _35;                  // scope 7 at ui/for-loop-while/for-loop-into-iterator.rs:12:14: 12:20
        _37 = &mut (*_38);               // scope 7 at ui/for-loop-while/for-loop-into-iterator.rs:12:14: 12:20
        _36 = <std::slice::IterMut<'_, i32> as Iterator>::next(move _37) -> [return: bb13, unwind: bb30]; // scope 7 at ui/for-loop-while/for-loop-into-iterator.rs:12:14: 12:20
                                         // mir::Constant
                                         // + span: ui/for-loop-while/for-loop-into-iterator.rs:12:14: 12:20
                                         // + literal: Const { ty: for<'a> fn(&'a mut std::slice::IterMut<'_, i32>) -> Option<<std::slice::IterMut<'_, i32> as Iterator>::Item> {<std::slice::IterMut<'_, i32> as Iterator>::next}, val: Value(<ZST>) }
    }

    bb13: {
        _39 = discriminant(_36);         // scope 7 at ui/for-loop-while/for-loop-into-iterator.rs:12:14: 12:20
        switchInt(move _39) -> [0: bb16, 1: bb14, otherwise: bb15]; // scope 7 at ui/for-loop-while/for-loop-into-iterator.rs:12:14: 12:20
    }

    bb14: {
        _40 = move ((_36 as Some).0: &mut i32); // scope 7 at ui/for-loop-while/for-loop-into-iterator.rs:12:9: 12:10
        _42 = &_40;                      // scope 8 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _45 = const 1_i32;               // scope 8 at ui/for-loop-while/for-loop-into-iterator.rs:13:28: 13:29
        _44 = &mut _45;                  // scope 8 at ui/for-loop-while/for-loop-into-iterator.rs:13:23: 13:29
        _43 = &_44;                      // scope 8 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _41 = (move _42, move _43);      // scope 8 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _46 = (_41.0: &&mut i32);        // scope 8 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _47 = (_41.1: &&mut i32);        // scope 8 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _50 = _46;                       // scope 9 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
        _51 = _47;                       // scope 9 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
        _49 = <&mut i32 as PartialEq>::eq(move _50, move _51) -> [return: bb17, unwind: bb30]; // scope 9 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a &mut i32, &'b &mut i32) -> bool {<&mut i32 as PartialEq>::eq}, val: Value(<ZST>) }
    }

    bb15: {
        unreachable;                     // scope 7 at ui/for-loop-while/for-loop-into-iterator.rs:12:14: 12:20
    }

    bb16: {
        _87 = const false;               // scope 1 at ui/for-loop-while/for-loop-into-iterator.rs:16:14: 16:15
        _61 = move _1;                   // scope 1 at ui/for-loop-while/for-loop-into-iterator.rs:16:14: 16:15
        _60 = <Vec<i32> as IntoIterator>::into_iter(move _61) -> [return: bb19, unwind: bb30]; // scope 1 at ui/for-loop-while/for-loop-into-iterator.rs:16:14: 16:15
                                         // mir::Constant
                                         // + span: ui/for-loop-while/for-loop-into-iterator.rs:16:14: 16:15
                                         // + literal: Const { ty: fn(Vec<i32>) -> <Vec<i32> as IntoIterator>::IntoIter {<Vec<i32> as IntoIterator>::into_iter}, val: Value(<ZST>) }
    }

    bb17: {
        _48 = Not(move _49);             // scope 9 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
        switchInt(move _48) -> [0: bb12, otherwise: bb18]; // scope 9 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    }

    bb18: {
        _52 = const core::panicking::AssertKind::Eq; // scope 9 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _54 = const core::panicking::AssertKind::Eq; // scope 10 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _56 = _46;                       // scope 10 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _55 = _56;                       // scope 10 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _58 = _47;                       // scope 10 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _57 = _58;                       // scope 10 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _59 = Option::<Arguments<'_>>::None; // scope 10 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
        _53 = core::panicking::assert_failed::<&mut i32, &mut i32>(move _54, move _55, move _57, move _59) -> bb30; // scope 10 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:53
                                         // + literal: Const { ty: for<'a, 'b, 'c> fn(core::panicking::AssertKind, &'a &mut i32, &'b &mut i32, Option<Arguments<'c>>) -> ! {core::panicking::assert_failed::<&mut i32, &mut i32>}, val: Value(<ZST>) }
    }

    bb19: {
        _62 = move _60;                  // scope 1 at ui/for-loop-while/for-loop-into-iterator.rs:16:14: 16:15
        goto -> bb20;                    // scope 11 at ui/for-loop-while/for-loop-into-iterator.rs:16:5: 18:6
    }

    bb20: {
        _65 = &mut _62;                  // scope 11 at ui/for-loop-while/for-loop-into-iterator.rs:16:14: 16:15
        _64 = &mut (*_65);               // scope 11 at ui/for-loop-while/for-loop-into-iterator.rs:16:14: 16:15
        _63 = <std::vec::IntoIter<i32> as Iterator>::next(move _64) -> [return: bb21, unwind: bb27]; // scope 11 at ui/for-loop-while/for-loop-into-iterator.rs:16:14: 16:15
                                         // mir::Constant
                                         // + span: ui/for-loop-while/for-loop-into-iterator.rs:16:14: 16:15
                                         // + literal: Const { ty: for<'a> fn(&'a mut std::vec::IntoIter<i32>) -> Option<<std::vec::IntoIter<i32> as Iterator>::Item> {<std::vec::IntoIter<i32> as Iterator>::next}, val: Value(<ZST>) }
    }

    bb21: {
        _66 = discriminant(_63);         // scope 11 at ui/for-loop-while/for-loop-into-iterator.rs:16:14: 16:15
        switchInt(move _66) -> [0: bb24, 1: bb22, otherwise: bb23]; // scope 11 at ui/for-loop-while/for-loop-into-iterator.rs:16:14: 16:15
    }

    bb22: {
        _67 = ((_63 as Some).0: i32);    // scope 11 at ui/for-loop-while/for-loop-into-iterator.rs:16:9: 16:10
        _69 = &_67;                      // scope 12 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _85 = const _;                   // scope 12 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // + literal: Const { ty: &i32, val: Unevaluated(main, [], Some(promoted[0])) }
        _70 = _85;                       // scope 12 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _68 = (move _69, move _70);      // scope 12 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _71 = (_68.0: &i32);             // scope 12 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _72 = (_68.1: &i32);             // scope 12 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _75 = (*_71);                    // scope 13 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
        _76 = const 1_i32;               // scope 13 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
        _74 = Eq(move _75, move _76);    // scope 13 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
        _73 = Not(move _74);             // scope 13 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
        switchInt(move _73) -> [0: bb20, otherwise: bb25]; // scope 13 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    }

    bb23: {
        unreachable;                     // scope 11 at ui/for-loop-while/for-loop-into-iterator.rs:16:14: 16:15
    }

    bb24: {
        drop(_62) -> [return: bb26, unwind: bb30]; // scope 1 at ui/for-loop-while/for-loop-into-iterator.rs:18:5: 18:6
    }

    bb25: {
        _77 = const core::panicking::AssertKind::Eq; // scope 13 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _79 = const core::panicking::AssertKind::Eq; // scope 14 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _81 = _71;                       // scope 14 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _80 = _81;                       // scope 14 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _83 = _72;                       // scope 14 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _82 = _83;                       // scope 14 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _84 = Option::<Arguments<'_>>::None; // scope 14 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
        _78 = core::panicking::assert_failed::<i32, i32>(move _79, move _80, move _82, move _84) -> bb27; // scope 14 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:53
                                         // + literal: Const { ty: for<'a, 'b, 'c> fn(core::panicking::AssertKind, &'a i32, &'b i32, Option<Arguments<'c>>) -> ! {core::panicking::assert_failed::<i32, i32>}, val: Value(<ZST>) }
    }

    bb26: {
        _87 = const false;               // scope 0 at ui/for-loop-while/for-loop-into-iterator.rs:19:1: 19:2
        return;                          // scope 0 at ui/for-loop-while/for-loop-into-iterator.rs:19:2: 19:2
    }

    bb27 (cleanup): {
        drop(_62) -> bb30;               // scope 1 at ui/for-loop-while/for-loop-into-iterator.rs:18:5: 18:6
    }

    bb28 (cleanup): {
        resume;                          // scope 0 at ui/for-loop-while/for-loop-into-iterator.rs:5:1: 19:2
    }

    bb29 (cleanup): {
        drop(_1) -> bb28;                // scope 0 at ui/for-loop-while/for-loop-into-iterator.rs:19:1: 19:2
    }

    bb30 (cleanup): {
        switchInt(_87) -> [0: bb28, otherwise: bb29]; // scope 0 at ui/for-loop-while/for-loop-into-iterator.rs:19:1: 19:2
    }
}

promoted[0] in main: &i32 = {
    let mut _0: &i32;                    // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _1: i32;                     // in scope 0 at ui/for-loop-while/for-loop-into-iterator.rs:17:23: 17:24

    bb0: {
        _1 = const 1_i32;                // scope 0 at ui/for-loop-while/for-loop-into-iterator.rs:17:23: 17:24
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    }
}

promoted[1] in main: &&i32 = {
    let mut _0: &&i32;                   // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _1: &i32;                    // in scope 0 at ui/for-loop-while/for-loop-into-iterator.rs:9:23: 9:25
    let mut _2: i32;                     // in scope 0 at ui/for-loop-while/for-loop-into-iterator.rs:9:24: 9:25

    bb0: {
        _2 = const 1_i32;                // scope 0 at ui/for-loop-while/for-loop-into-iterator.rs:9:24: 9:25
        _1 = &_2;                        // scope 0 at ui/for-loop-while/for-loop-into-iterator.rs:9:23: 9:25
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    }
}
