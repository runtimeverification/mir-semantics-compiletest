// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
fn main() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/for-loop-while/linear-for-loop.rs:2:15: 2:15
    let _1: std::vec::Vec<i32>;          // in scope 0 at ui/for-loop-while/linear-for-loop.rs:3:9: 3:10
    let mut _2: std::boxed::Box<[i32]>;  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
    let mut _3: std::boxed::Box<[i32; 3]>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
    let mut _4: usize;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
    let mut _5: usize;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
    let mut _6: *mut u8;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
    let mut _7: std::boxed::Box<[i32; 3]>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
    let mut _9: std::slice::Iter<'_, i32>; // in scope 0 at ui/for-loop-while/linear-for-loop.rs:5:14: 5:16
    let mut _10: &std::vec::Vec<i32>;    // in scope 0 at ui/for-loop-while/linear-for-loop.rs:5:14: 5:16
    let mut _12: std::option::Option<&i32>; // in scope 0 at ui/for-loop-while/linear-for-loop.rs:5:14: 5:16
    let mut _13: &mut std::slice::Iter<'_, i32>; // in scope 0 at ui/for-loop-while/linear-for-loop.rs:5:14: 5:16
    let mut _14: &mut std::slice::Iter<'_, i32>; // in scope 0 at ui/for-loop-while/linear-for-loop.rs:5:14: 5:16
    let mut _15: isize;                  // in scope 0 at ui/for-loop-while/linear-for-loop.rs:5:5: 5:49
    let _17: ();                         // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:62
    let mut _18: std::fmt::Arguments<'_>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _19: &[&str];                // in scope 0 at ui/for-loop-while/linear-for-loop.rs:5:28: 5:32
    let mut _20: &[&str; 2];             // in scope 0 at ui/for-loop-while/linear-for-loop.rs:5:28: 5:32
    let _21: &[&str; 2];                 // in scope 0 at ui/for-loop-while/linear-for-loop.rs:5:28: 5:32
    let mut _22: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _23: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let _24: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let _25: [core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _26: core::fmt::ArgumentV1<'_>; // in scope 0 at ui/for-loop-while/linear-for-loop.rs:5:34: 5:36
    let mut _27: &i32;                   // in scope 0 at ui/for-loop-while/linear-for-loop.rs:5:34: 5:36
    let _28: &i32;                       // in scope 0 at ui/for-loop-while/linear-for-loop.rs:5:34: 5:36
    let mut _29: i32;                    // in scope 0 at ui/for-loop-while/linear-for-loop.rs:5:44: 5:46
    let mut _30: (i32, bool);            // in scope 0 at ui/for-loop-while/linear-for-loop.rs:5:39: 5:46
    let _31: ();                         // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:62
    let mut _32: std::fmt::Arguments<'_>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _33: &[&str];                // in scope 0 at ui/for-loop-while/linear-for-loop.rs:6:14: 6:18
    let mut _34: &[&str; 2];             // in scope 0 at ui/for-loop-while/linear-for-loop.rs:6:14: 6:18
    let _35: &[&str; 2];                 // in scope 0 at ui/for-loop-while/linear-for-loop.rs:6:14: 6:18
    let mut _36: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _37: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let _38: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let _39: [core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _40: core::fmt::ArgumentV1<'_>; // in scope 0 at ui/for-loop-while/linear-for-loop.rs:6:20: 6:21
    let mut _41: &i32;                   // in scope 0 at ui/for-loop-while/linear-for-loop.rs:6:20: 6:21
    let _42: &i32;                       // in scope 0 at ui/for-loop-while/linear-for-loop.rs:6:20: 6:21
    let mut _43: (&i32, &i32);           // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _44: &i32;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let mut _45: &i32;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _48: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    let mut _49: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
    let mut _50: i32;                    // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
    let mut _51: i32;                    // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
    let _53: !;                          // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
    let mut _54: core::panicking::AssertKind; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
    let mut _55: &i32;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let _56: &i32;                       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let mut _57: &i32;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let _58: &i32;                       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let mut _59: std::option::Option<std::fmt::Arguments<'_>>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
    let mut _61: &str;                   // in scope 0 at ui/for-loop-while/linear-for-loop.rs:8:13: 8:38
    let _62: &str;                       // in scope 0 at ui/for-loop-while/linear-for-loop.rs:8:13: 8:26
    let mut _64: std::str::Bytes<'_>;    // in scope 0 at ui/for-loop-while/linear-for-loop.rs:10:14: 10:23
    let mut _65: std::str::Bytes<'_>;    // in scope 0 at ui/for-loop-while/linear-for-loop.rs:10:14: 10:23
    let mut _66: &str;                   // in scope 0 at ui/for-loop-while/linear-for-loop.rs:10:14: 10:23
    let _67: &str;                       // in scope 0 at ui/for-loop-while/linear-for-loop.rs:10:14: 10:23
    let mut _68: &std::string::String;   // in scope 0 at ui/for-loop-while/linear-for-loop.rs:10:14: 10:23
    let mut _70: std::option::Option<u8>; // in scope 0 at ui/for-loop-while/linear-for-loop.rs:10:14: 10:23
    let mut _71: &mut std::str::Bytes<'_>; // in scope 0 at ui/for-loop-while/linear-for-loop.rs:10:14: 10:23
    let mut _72: &mut std::str::Bytes<'_>; // in scope 0 at ui/for-loop-while/linear-for-loop.rs:10:14: 10:23
    let mut _73: isize;                  // in scope 0 at ui/for-loop-while/linear-for-loop.rs:10:5: 21:6
    let mut _75: isize;                  // in scope 0 at ui/for-loop-while/linear-for-loop.rs:11:12: 11:13
    let mut _76: (&u8, &u8);             // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _77: &u8;                    // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let mut _78: &u8;                    // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _81: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    let mut _82: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
    let mut _83: u8;                     // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
    let mut _84: u8;                     // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
    let _86: !;                          // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
    let mut _87: core::panicking::AssertKind; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
    let mut _88: &u8;                    // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let _89: &u8;                        // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let mut _90: &u8;                    // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let _91: &u8;                        // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let mut _92: std::option::Option<std::fmt::Arguments<'_>>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
    let mut _93: isize;                  // in scope 0 at ui/for-loop-while/linear-for-loop.rs:12:12: 12:13
    let mut _94: (&u8, &u8);             // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _95: &u8;                    // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let mut _96: &u8;                    // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _99: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    let mut _100: bool;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
    let mut _101: u8;                    // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
    let mut _102: u8;                    // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
    let _104: !;                         // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
    let mut _105: core::panicking::AssertKind; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
    let mut _106: &u8;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let _107: &u8;                       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let mut _108: &u8;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let _109: &u8;                       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let mut _110: std::option::Option<std::fmt::Arguments<'_>>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
    let mut _111: isize;                 // in scope 0 at ui/for-loop-while/linear-for-loop.rs:13:12: 13:13
    let mut _112: (&u8, &u8);            // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _113: &u8;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let mut _114: &u8;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _117: bool;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    let mut _118: bool;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
    let mut _119: u8;                    // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
    let mut _120: u8;                    // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
    let _122: !;                         // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
    let mut _123: core::panicking::AssertKind; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
    let mut _124: &u8;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let _125: &u8;                       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let mut _126: &u8;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let _127: &u8;                       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let mut _128: std::option::Option<std::fmt::Arguments<'_>>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
    let mut _129: isize;                 // in scope 0 at ui/for-loop-while/linear-for-loop.rs:14:12: 14:13
    let mut _130: (&u8, &u8);            // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _131: &u8;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let mut _132: &u8;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _135: bool;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    let mut _136: bool;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
    let mut _137: u8;                    // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
    let mut _138: u8;                    // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
    let _140: !;                         // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
    let mut _141: core::panicking::AssertKind; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
    let mut _142: &u8;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let _143: &u8;                       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let mut _144: &u8;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let _145: &u8;                       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let mut _146: std::option::Option<std::fmt::Arguments<'_>>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
    let mut _147: isize;                 // in scope 0 at ui/for-loop-while/linear-for-loop.rs:15:12: 15:13
    let mut _148: (&u8, &u8);            // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _149: &u8;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let mut _150: &u8;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _153: bool;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    let mut _154: bool;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
    let mut _155: u8;                    // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
    let mut _156: u8;                    // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
    let _158: !;                         // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
    let mut _159: core::panicking::AssertKind; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
    let mut _160: &u8;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let _161: &u8;                       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let mut _162: &u8;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let _163: &u8;                       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let mut _164: std::option::Option<std::fmt::Arguments<'_>>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
    let mut _165: (isize, bool);         // in scope 0 at ui/for-loop-while/linear-for-loop.rs:18:9: 18:15
    let _166: ();                        // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:62
    let mut _167: std::fmt::Arguments<'_>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _168: &[&str];               // in scope 0 at ui/for-loop-while/linear-for-loop.rs:19:18: 19:22
    let mut _169: &[&str; 2];            // in scope 0 at ui/for-loop-while/linear-for-loop.rs:19:18: 19:22
    let _170: &[&str; 2];                // in scope 0 at ui/for-loop-while/linear-for-loop.rs:19:18: 19:22
    let mut _171: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _172: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let _173: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let _174: [core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _175: core::fmt::ArgumentV1<'_>; // in scope 0 at ui/for-loop-while/linear-for-loop.rs:19:24: 19:25
    let mut _176: &isize;                // in scope 0 at ui/for-loop-while/linear-for-loop.rs:19:24: 19:25
    let _177: &isize;                    // in scope 0 at ui/for-loop-while/linear-for-loop.rs:19:24: 19:25
    let _178: ();                        // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:62
    let mut _179: std::fmt::Arguments<'_>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _180: &[&str];               // in scope 0 at ui/for-loop-while/linear-for-loop.rs:20:18: 20:22
    let mut _181: &[&str; 2];            // in scope 0 at ui/for-loop-while/linear-for-loop.rs:20:18: 20:22
    let _182: &[&str; 2];                // in scope 0 at ui/for-loop-while/linear-for-loop.rs:20:18: 20:22
    let mut _183: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _184: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let _185: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let _186: [core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _187: core::fmt::ArgumentV1<'_>; // in scope 0 at ui/for-loop-while/linear-for-loop.rs:20:24: 20:25
    let mut _188: &u8;                   // in scope 0 at ui/for-loop-while/linear-for-loop.rs:20:24: 20:25
    let _189: &u8;                       // in scope 0 at ui/for-loop-while/linear-for-loop.rs:20:24: 20:25
    let mut _190: (&isize, &isize);      // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _191: &isize;                // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let mut _192: &isize;                // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _195: bool;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    let mut _196: bool;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
    let mut _197: isize;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
    let mut _198: isize;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
    let _200: !;                         // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
    let mut _201: core::panicking::AssertKind; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
    let mut _202: &isize;                // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let _203: &isize;                    // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let mut _204: &isize;                // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let _205: &isize;                    // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let mut _206: std::option::Option<std::fmt::Arguments<'_>>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
    let mut _218: *const [i32; 3];       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
    scope 1 {
        debug x => _1;                   // in scope 1 at ui/for-loop-while/linear-for-loop.rs:3:9: 3:10
        let mut _8: i32;                 // in scope 1 at ui/for-loop-while/linear-for-loop.rs:4:9: 4:14
        scope 3 {
            debug y => _8;               // in scope 3 at ui/for-loop-while/linear-for-loop.rs:4:9: 4:14
            let mut _11: std::slice::Iter<'_, i32>; // in scope 3 at ui/for-loop-while/linear-for-loop.rs:5:14: 5:16
            let _46: &i32;               // in scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
            let _47: &i32;               // in scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
            let _60: std::string::String; // in scope 3 at ui/for-loop-while/linear-for-loop.rs:8:9: 8:10
            let mut _215: &i32;          // in scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
            let mut _216: &[&str; 2];    // in scope 3 at ui/for-loop-while/linear-for-loop.rs:6:14: 6:18
            scope 4 {
                debug iter => _11;       // in scope 4 at ui/for-loop-while/linear-for-loop.rs:5:14: 5:16
                let _16: &i32;           // in scope 4 at ui/for-loop-while/linear-for-loop.rs:5:9: 5:10
                scope 5 {
                    debug i => _16;      // in scope 5 at ui/for-loop-while/linear-for-loop.rs:5:9: 5:10
                    let mut _217: &[&str; 2]; // in scope 5 at ui/for-loop-while/linear-for-loop.rs:5:28: 5:32
                }
            }
            scope 6 {
                debug left_val => _46;   // in scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
                debug right_val => _47;  // in scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
                let _52: core::panicking::AssertKind; // in scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                scope 7 {
                    debug kind => _52;   // in scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                }
            }
            scope 8 {
                debug s => _60;          // in scope 8 at ui/for-loop-while/linear-for-loop.rs:8:9: 8:10
                let mut _63: isize;      // in scope 8 at ui/for-loop-while/linear-for-loop.rs:9:9: 9:14
                scope 9 {
                    debug i => _63;      // in scope 9 at ui/for-loop-while/linear-for-loop.rs:9:9: 9:14
                    let mut _69: std::str::Bytes<'_>; // in scope 9 at ui/for-loop-while/linear-for-loop.rs:10:14: 10:23
                    let _193: &isize;    // in scope 9 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
                    let _194: &isize;    // in scope 9 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
                    let mut _207: &isize; // in scope 9 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                    scope 10 {
                        debug iter => _69; // in scope 10 at ui/for-loop-while/linear-for-loop.rs:10:14: 10:23
                        let _74: u8;     // in scope 10 at ui/for-loop-while/linear-for-loop.rs:10:9: 10:10
                        scope 11 {
                            debug c => _74; // in scope 11 at ui/for-loop-while/linear-for-loop.rs:10:9: 10:10
                            let _79: &u8; // in scope 11 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
                            let _80: &u8; // in scope 11 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
                            let _97: &u8; // in scope 11 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
                            let _98: &u8; // in scope 11 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
                            let _115: &u8; // in scope 11 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
                            let _116: &u8; // in scope 11 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
                            let _133: &u8; // in scope 11 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
                            let _134: &u8; // in scope 11 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
                            let _151: &u8; // in scope 11 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
                            let _152: &u8; // in scope 11 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
                            let mut _208: &[&str; 2]; // in scope 11 at ui/for-loop-while/linear-for-loop.rs:20:18: 20:22
                            let mut _209: &[&str; 2]; // in scope 11 at ui/for-loop-while/linear-for-loop.rs:19:18: 19:22
                            let mut _210: &u8; // in scope 11 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                            let mut _211: &u8; // in scope 11 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                            let mut _212: &u8; // in scope 11 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                            let mut _213: &u8; // in scope 11 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                            let mut _214: &u8; // in scope 11 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                            scope 12 {
                                debug left_val => _79; // in scope 12 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
                                debug right_val => _80; // in scope 12 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
                                let _85: core::panicking::AssertKind; // in scope 12 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                                scope 13 {
                                    debug kind => _85; // in scope 13 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                                }
                            }
                            scope 14 {
                                debug left_val => _97; // in scope 14 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
                                debug right_val => _98; // in scope 14 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
                                let _103: core::panicking::AssertKind; // in scope 14 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                                scope 15 {
                                    debug kind => _103; // in scope 15 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                                }
                            }
                            scope 16 {
                                debug left_val => _115; // in scope 16 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
                                debug right_val => _116; // in scope 16 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
                                let _121: core::panicking::AssertKind; // in scope 16 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                                scope 17 {
                                    debug kind => _121; // in scope 17 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                                }
                            }
                            scope 18 {
                                debug left_val => _133; // in scope 18 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
                                debug right_val => _134; // in scope 18 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
                                let _139: core::panicking::AssertKind; // in scope 18 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                                scope 19 {
                                    debug kind => _139; // in scope 19 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                                }
                            }
                            scope 20 {
                                debug left_val => _151; // in scope 20 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
                                debug right_val => _152; // in scope 20 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
                                let _157: core::panicking::AssertKind; // in scope 20 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                                scope 21 {
                                    debug kind => _157; // in scope 21 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                                }
                            }
                        }
                    }
                    scope 22 {
                        debug left_val => _193; // in scope 22 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
                        debug right_val => _194; // in scope 22 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
                        let _199: core::panicking::AssertKind; // in scope 22 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                        scope 23 {
                            debug kind => _199; // in scope 23 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                        }
                    }
                }
            }
        }
    }
    scope 2 {
    }

    bb0: {
        _4 = const 12_usize;             // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
        _5 = const 4_usize;              // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
        _6 = alloc::alloc::exchange_malloc(move _4, move _5) -> bb1; // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
                                         // + literal: Const { ty: unsafe fn(usize, usize) -> *mut u8 {alloc::alloc::exchange_malloc}, val: Value(<ZST>) }
    }

    bb1: {
        _7 = ShallowInitBox(move _6, [i32; 3]); // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
        _218 = (((_7.0: std::ptr::Unique<[i32; 3]>).0: std::ptr::NonNull<[i32; 3]>).0: *const [i32; 3]); // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:37: 52:46
        (*_218) = [const 1_i32, const 2_i32, const 3_i32]; // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:37: 52:46
        _3 = move _7;                    // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
        _2 = move _3 as std::boxed::Box<[i32]> (Pointer(Unsize)); // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
        _1 = slice::<impl [i32]>::into_vec::<std::alloc::Global>(move _2) -> bb2; // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:50:36: 53:10
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:50:36: 50:51
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: fn(Box<[i32]>) -> Vec<i32> {slice::<impl [i32]>::into_vec::<std::alloc::Global>}, val: Value(<ZST>) }
    }

    bb2: {
        _8 = const 0_i32;                // scope 1 at ui/for-loop-while/linear-for-loop.rs:4:17: 4:18
        _10 = &_1;                       // scope 3 at ui/for-loop-while/linear-for-loop.rs:5:14: 5:16
        _9 = <&Vec<i32> as IntoIterator>::into_iter(move _10) -> [return: bb3, unwind: bb53]; // scope 3 at ui/for-loop-while/linear-for-loop.rs:5:14: 5:16
                                         // mir::Constant
                                         // + span: ui/for-loop-while/linear-for-loop.rs:5:14: 5:16
                                         // + literal: Const { ty: fn(&Vec<i32>) -> <&Vec<i32> as IntoIterator>::IntoIter {<&Vec<i32> as IntoIterator>::into_iter}, val: Value(<ZST>) }
    }

    bb3: {
        _11 = move _9;                   // scope 3 at ui/for-loop-while/linear-for-loop.rs:5:14: 5:16
        goto -> bb4;                     // scope 4 at ui/for-loop-while/linear-for-loop.rs:5:5: 5:49
    }

    bb4: {
        _14 = &mut _11;                  // scope 4 at ui/for-loop-while/linear-for-loop.rs:5:14: 5:16
        _13 = &mut (*_14);               // scope 4 at ui/for-loop-while/linear-for-loop.rs:5:14: 5:16
        _12 = <std::slice::Iter<'_, i32> as Iterator>::next(move _13) -> [return: bb5, unwind: bb53]; // scope 4 at ui/for-loop-while/linear-for-loop.rs:5:14: 5:16
                                         // mir::Constant
                                         // + span: ui/for-loop-while/linear-for-loop.rs:5:14: 5:16
                                         // + literal: Const { ty: for<'a> fn(&'a mut std::slice::Iter<'_, i32>) -> Option<<std::slice::Iter<'_, i32> as Iterator>::Item> {<std::slice::Iter<'_, i32> as Iterator>::next}, val: Value(<ZST>) }
    }

    bb5: {
        _15 = discriminant(_12);         // scope 4 at ui/for-loop-while/linear-for-loop.rs:5:14: 5:16
        switchInt(move _15) -> [0: bb8, 1: bb6, otherwise: bb7]; // scope 4 at ui/for-loop-while/linear-for-loop.rs:5:14: 5:16
    }

    bb6: {
        _16 = ((_12 as Some).0: &i32);   // scope 4 at ui/for-loop-while/linear-for-loop.rs:5:9: 5:10
        _217 = const _;                  // scope 5 at ui/for-loop-while/linear-for-loop.rs:5:28: 5:32
                                         // mir::Constant
                                         // + span: ui/for-loop-while/linear-for-loop.rs:5:28: 5:32
                                         // + literal: Const { ty: &[&str; 2], val: Unevaluated(main, [], Some(promoted[10])) }
        _21 = _217;                      // scope 5 at ui/for-loop-while/linear-for-loop.rs:5:28: 5:32
        _20 = _21;                       // scope 5 at ui/for-loop-while/linear-for-loop.rs:5:28: 5:32
        _19 = move _20 as &[&str] (Pointer(Unsize)); // scope 5 at ui/for-loop-while/linear-for-loop.rs:5:28: 5:32
        _28 = _16;                       // scope 5 at ui/for-loop-while/linear-for-loop.rs:5:34: 5:36
        _27 = _28;                       // scope 5 at ui/for-loop-while/linear-for-loop.rs:5:34: 5:36
        _26 = core::fmt::ArgumentV1::<'_>::new_display::<i32>(move _27) -> [return: bb9, unwind: bb53]; // scope 5 at ui/for-loop-while/linear-for-loop.rs:5:34: 5:36
                                         // mir::Constant
                                         // + span: ui/for-loop-while/linear-for-loop.rs:5:34: 5:36
                                         // + user_ty: UserType(2)
                                         // + literal: Const { ty: for<'b> fn(&'b i32) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_display::<i32>}, val: Value(<ZST>) }
    }

    bb7: {
        unreachable;                     // scope 4 at ui/for-loop-while/linear-for-loop.rs:5:14: 5:16
    }

    bb8: {
        _216 = const _;                  // scope 3 at ui/for-loop-while/linear-for-loop.rs:6:14: 6:18
                                         // mir::Constant
                                         // + span: ui/for-loop-while/linear-for-loop.rs:6:14: 6:18
                                         // + literal: Const { ty: &[&str; 2], val: Unevaluated(main, [], Some(promoted[9])) }
        _35 = _216;                      // scope 3 at ui/for-loop-while/linear-for-loop.rs:6:14: 6:18
        _34 = _35;                       // scope 3 at ui/for-loop-while/linear-for-loop.rs:6:14: 6:18
        _33 = move _34 as &[&str] (Pointer(Unsize)); // scope 3 at ui/for-loop-while/linear-for-loop.rs:6:14: 6:18
        _42 = &_8;                       // scope 3 at ui/for-loop-while/linear-for-loop.rs:6:20: 6:21
        _41 = _42;                       // scope 3 at ui/for-loop-while/linear-for-loop.rs:6:20: 6:21
        _40 = core::fmt::ArgumentV1::<'_>::new_display::<i32>(move _41) -> [return: bb13, unwind: bb53]; // scope 3 at ui/for-loop-while/linear-for-loop.rs:6:20: 6:21
                                         // mir::Constant
                                         // + span: ui/for-loop-while/linear-for-loop.rs:6:20: 6:21
                                         // + user_ty: UserType(4)
                                         // + literal: Const { ty: for<'b> fn(&'b i32) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_display::<i32>}, val: Value(<ZST>) }
    }

    bb9: {
        _25 = [move _26];                // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _24 = &_25;                      // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _23 = _24;                       // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _22 = move _23 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _18 = Arguments::<'_>::new_v1(move _19, move _22) -> [return: bb10, unwind: bb53]; // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // + user_ty: UserType(1)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb10: {
        _17 = _print(move _18) -> [return: bb11, unwind: bb53]; // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:62
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:27
                                         // + literal: Const { ty: for<'a> fn(Arguments<'a>) {_print}, val: Value(<ZST>) }
    }

    bb11: {
        _29 = (*_16);                    // scope 5 at ui/for-loop-while/linear-for-loop.rs:5:44: 5:46
        _30 = CheckedAdd(_8, _29);       // scope 5 at ui/for-loop-while/linear-for-loop.rs:5:39: 5:46
        assert(!move (_30.1: bool), "attempt to compute `{} + {}`, which would overflow", _8, move _29) -> [success: bb12, unwind: bb53]; // scope 5 at ui/for-loop-while/linear-for-loop.rs:5:39: 5:46
    }

    bb12: {
        _8 = move (_30.0: i32);          // scope 5 at ui/for-loop-while/linear-for-loop.rs:5:39: 5:46
        goto -> bb4;                     // scope 4 at ui/for-loop-while/linear-for-loop.rs:5:5: 5:49
    }

    bb13: {
        _39 = [move _40];                // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _38 = &_39;                      // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _37 = _38;                       // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _36 = move _37 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _32 = Arguments::<'_>::new_v1(move _33, move _36) -> [return: bb14, unwind: bb53]; // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // + user_ty: UserType(3)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb14: {
        _31 = _print(move _32) -> [return: bb15, unwind: bb53]; // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:62
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:27
                                         // + literal: Const { ty: for<'a> fn(Arguments<'a>) {_print}, val: Value(<ZST>) }
    }

    bb15: {
        _44 = &_8;                       // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _215 = const _;                  // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // + literal: Const { ty: &i32, val: Unevaluated(main, [], Some(promoted[8])) }
        _45 = _215;                      // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _43 = (move _44, move _45);      // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _46 = (_43.0: &i32);             // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _47 = (_43.1: &i32);             // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _50 = (*_46);                    // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
        _51 = const 6_i32;               // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
        _49 = Eq(move _50, move _51);    // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
        _48 = Not(move _49);             // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
        switchInt(move _48) -> [0: bb17, otherwise: bb16]; // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    }

    bb16: {
        _52 = const core::panicking::AssertKind::Eq; // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _54 = const core::panicking::AssertKind::Eq; // scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _56 = _46;                       // scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _55 = _56;                       // scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _58 = _47;                       // scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _57 = _58;                       // scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _59 = Option::<Arguments<'_>>::None; // scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
        _53 = core::panicking::assert_failed::<i32, i32>(move _54, move _55, move _57, move _59) -> bb53; // scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:53
                                         // + literal: Const { ty: for<'a, 'b, 'c> fn(core::panicking::AssertKind, &'a i32, &'b i32, Option<Arguments<'c>>) -> ! {core::panicking::assert_failed::<i32, i32>}, val: Value(<ZST>) }
    }

    bb17: {
        _62 = const "hello there";       // scope 3 at ui/for-loop-while/linear-for-loop.rs:8:13: 8:26
                                         // mir::Constant
                                         // + span: ui/for-loop-while/linear-for-loop.rs:8:13: 8:26
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _61 = _62;                       // scope 3 at ui/for-loop-while/linear-for-loop.rs:8:13: 8:38
        _60 = <str as ToString>::to_string(move _61) -> [return: bb18, unwind: bb53]; // scope 3 at ui/for-loop-while/linear-for-loop.rs:8:13: 8:38
                                         // mir::Constant
                                         // + span: ui/for-loop-while/linear-for-loop.rs:8:27: 8:36
                                         // + literal: Const { ty: for<'a> fn(&'a str) -> String {<str as ToString>::to_string}, val: Value(<ZST>) }
    }

    bb18: {
        _63 = const 0_isize;             // scope 8 at ui/for-loop-while/linear-for-loop.rs:9:24: 9:25
        _68 = &_60;                      // scope 9 at ui/for-loop-while/linear-for-loop.rs:10:14: 10:23
        _67 = <String as Deref>::deref(move _68) -> [return: bb19, unwind: bb52]; // scope 9 at ui/for-loop-while/linear-for-loop.rs:10:14: 10:23
                                         // mir::Constant
                                         // + span: ui/for-loop-while/linear-for-loop.rs:10:14: 10:23
                                         // + literal: Const { ty: for<'a> fn(&'a String) -> &'a <String as Deref>::Target {<String as Deref>::deref}, val: Value(<ZST>) }
    }

    bb19: {
        _66 = _67;                       // scope 9 at ui/for-loop-while/linear-for-loop.rs:10:14: 10:23
        _65 = core::str::<impl str>::bytes(move _66) -> [return: bb20, unwind: bb52]; // scope 9 at ui/for-loop-while/linear-for-loop.rs:10:14: 10:23
                                         // mir::Constant
                                         // + span: ui/for-loop-while/linear-for-loop.rs:10:16: 10:21
                                         // + literal: Const { ty: for<'a> fn(&'a str) -> std::str::Bytes<'a> {core::str::<impl str>::bytes}, val: Value(<ZST>) }
    }

    bb20: {
        _64 = <std::str::Bytes<'_> as IntoIterator>::into_iter(move _65) -> [return: bb21, unwind: bb52]; // scope 9 at ui/for-loop-while/linear-for-loop.rs:10:14: 10:23
                                         // mir::Constant
                                         // + span: ui/for-loop-while/linear-for-loop.rs:10:14: 10:23
                                         // + literal: Const { ty: fn(std::str::Bytes<'_>) -> <std::str::Bytes<'_> as IntoIterator>::IntoIter {<std::str::Bytes<'_> as IntoIterator>::into_iter}, val: Value(<ZST>) }
    }

    bb21: {
        _69 = move _64;                  // scope 9 at ui/for-loop-while/linear-for-loop.rs:10:14: 10:23
        goto -> bb22;                    // scope 10 at ui/for-loop-while/linear-for-loop.rs:10:5: 21:6
    }

    bb22: {
        _72 = &mut _69;                  // scope 10 at ui/for-loop-while/linear-for-loop.rs:10:14: 10:23
        _71 = &mut (*_72);               // scope 10 at ui/for-loop-while/linear-for-loop.rs:10:14: 10:23
        _70 = <std::str::Bytes<'_> as Iterator>::next(move _71) -> [return: bb23, unwind: bb52]; // scope 10 at ui/for-loop-while/linear-for-loop.rs:10:14: 10:23
                                         // mir::Constant
                                         // + span: ui/for-loop-while/linear-for-loop.rs:10:14: 10:23
                                         // + literal: Const { ty: for<'a> fn(&'a mut std::str::Bytes<'_>) -> Option<<std::str::Bytes<'_> as Iterator>::Item> {<std::str::Bytes<'_> as Iterator>::next}, val: Value(<ZST>) }
    }

    bb23: {
        _73 = discriminant(_70);         // scope 10 at ui/for-loop-while/linear-for-loop.rs:10:14: 10:23
        switchInt(move _73) -> [0: bb26, 1: bb24, otherwise: bb25]; // scope 10 at ui/for-loop-while/linear-for-loop.rs:10:14: 10:23
    }

    bb24: {
        _74 = ((_70 as Some).0: u8);     // scope 10 at ui/for-loop-while/linear-for-loop.rs:10:9: 10:10
        _75 = _63;                       // scope 11 at ui/for-loop-while/linear-for-loop.rs:11:12: 11:13
        switchInt(move _75) -> [0: bb27, otherwise: bb29]; // scope 11 at ui/for-loop-while/linear-for-loop.rs:11:12: 11:18
    }

    bb25: {
        unreachable;                     // scope 10 at ui/for-loop-while/linear-for-loop.rs:10:14: 10:23
    }

    bb26: {
        _191 = &_63;                     // scope 9 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _207 = const _;                  // scope 9 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // + literal: Const { ty: &isize, val: Unevaluated(main, [], Some(promoted[0])) }
        _192 = _207;                     // scope 9 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _190 = (move _191, move _192);   // scope 9 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _193 = (_190.0: &isize);         // scope 9 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _194 = (_190.1: &isize);         // scope 9 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _197 = (*_193);                  // scope 22 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
        _198 = const 11_isize;           // scope 22 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
        _196 = Eq(move _197, move _198); // scope 22 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
        _195 = Not(move _196);           // scope 22 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
        switchInt(move _195) -> [0: bb49, otherwise: bb48]; // scope 22 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    }

    bb27: {
        _77 = &_74;                      // scope 11 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _214 = const _;                  // scope 11 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // + literal: Const { ty: &u8, val: Unevaluated(main, [], Some(promoted[7])) }
        _78 = _214;                      // scope 11 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _76 = (move _77, move _78);      // scope 11 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _79 = (_76.0: &u8);              // scope 11 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _80 = (_76.1: &u8);              // scope 11 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _83 = (*_79);                    // scope 12 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
        _84 = const 104_u8;              // scope 12 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
        _82 = Eq(move _83, move _84);    // scope 12 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
        _81 = Not(move _82);             // scope 12 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
        switchInt(move _81) -> [0: bb29, otherwise: bb28]; // scope 12 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    }

    bb28: {
        _85 = const core::panicking::AssertKind::Eq; // scope 12 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _87 = const core::panicking::AssertKind::Eq; // scope 13 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _89 = _79;                       // scope 13 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _88 = _89;                       // scope 13 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _91 = _80;                       // scope 13 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _90 = _91;                       // scope 13 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _92 = Option::<Arguments<'_>>::None; // scope 13 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
        _86 = core::panicking::assert_failed::<u8, u8>(move _87, move _88, move _90, move _92) -> bb52; // scope 13 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:53
                                         // + literal: Const { ty: for<'a, 'b, 'c> fn(core::panicking::AssertKind, &'a u8, &'b u8, Option<Arguments<'c>>) -> ! {core::panicking::assert_failed::<u8, u8>}, val: Value(<ZST>) }
    }

    bb29: {
        _93 = _63;                       // scope 11 at ui/for-loop-while/linear-for-loop.rs:12:12: 12:13
        switchInt(move _93) -> [1: bb30, otherwise: bb32]; // scope 11 at ui/for-loop-while/linear-for-loop.rs:12:12: 12:18
    }

    bb30: {
        _95 = &_74;                      // scope 11 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _213 = const _;                  // scope 11 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // + literal: Const { ty: &u8, val: Unevaluated(main, [], Some(promoted[6])) }
        _96 = _213;                      // scope 11 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _94 = (move _95, move _96);      // scope 11 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _97 = (_94.0: &u8);              // scope 11 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _98 = (_94.1: &u8);              // scope 11 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _101 = (*_97);                   // scope 14 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
        _102 = const 101_u8;             // scope 14 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
        _100 = Eq(move _101, move _102); // scope 14 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
        _99 = Not(move _100);            // scope 14 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
        switchInt(move _99) -> [0: bb32, otherwise: bb31]; // scope 14 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    }

    bb31: {
        _103 = const core::panicking::AssertKind::Eq; // scope 14 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _105 = const core::panicking::AssertKind::Eq; // scope 15 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _107 = _97;                      // scope 15 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _106 = _107;                     // scope 15 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _109 = _98;                      // scope 15 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _108 = _109;                     // scope 15 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _110 = Option::<Arguments<'_>>::None; // scope 15 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
        _104 = core::panicking::assert_failed::<u8, u8>(move _105, move _106, move _108, move _110) -> bb52; // scope 15 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:53
                                         // + literal: Const { ty: for<'a, 'b, 'c> fn(core::panicking::AssertKind, &'a u8, &'b u8, Option<Arguments<'c>>) -> ! {core::panicking::assert_failed::<u8, u8>}, val: Value(<ZST>) }
    }

    bb32: {
        _111 = _63;                      // scope 11 at ui/for-loop-while/linear-for-loop.rs:13:12: 13:13
        switchInt(move _111) -> [2: bb33, otherwise: bb35]; // scope 11 at ui/for-loop-while/linear-for-loop.rs:13:12: 13:18
    }

    bb33: {
        _113 = &_74;                     // scope 11 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _212 = const _;                  // scope 11 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // + literal: Const { ty: &u8, val: Unevaluated(main, [], Some(promoted[5])) }
        _114 = _212;                     // scope 11 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _112 = (move _113, move _114);   // scope 11 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _115 = (_112.0: &u8);            // scope 11 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _116 = (_112.1: &u8);            // scope 11 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _119 = (*_115);                  // scope 16 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
        _120 = const 108_u8;             // scope 16 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
        _118 = Eq(move _119, move _120); // scope 16 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
        _117 = Not(move _118);           // scope 16 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
        switchInt(move _117) -> [0: bb35, otherwise: bb34]; // scope 16 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    }

    bb34: {
        _121 = const core::panicking::AssertKind::Eq; // scope 16 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _123 = const core::panicking::AssertKind::Eq; // scope 17 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _125 = _115;                     // scope 17 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _124 = _125;                     // scope 17 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _127 = _116;                     // scope 17 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _126 = _127;                     // scope 17 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _128 = Option::<Arguments<'_>>::None; // scope 17 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
        _122 = core::panicking::assert_failed::<u8, u8>(move _123, move _124, move _126, move _128) -> bb52; // scope 17 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:53
                                         // + literal: Const { ty: for<'a, 'b, 'c> fn(core::panicking::AssertKind, &'a u8, &'b u8, Option<Arguments<'c>>) -> ! {core::panicking::assert_failed::<u8, u8>}, val: Value(<ZST>) }
    }

    bb35: {
        _129 = _63;                      // scope 11 at ui/for-loop-while/linear-for-loop.rs:14:12: 14:13
        switchInt(move _129) -> [3: bb36, otherwise: bb38]; // scope 11 at ui/for-loop-while/linear-for-loop.rs:14:12: 14:18
    }

    bb36: {
        _131 = &_74;                     // scope 11 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _211 = const _;                  // scope 11 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // + literal: Const { ty: &u8, val: Unevaluated(main, [], Some(promoted[4])) }
        _132 = _211;                     // scope 11 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _130 = (move _131, move _132);   // scope 11 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _133 = (_130.0: &u8);            // scope 11 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _134 = (_130.1: &u8);            // scope 11 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _137 = (*_133);                  // scope 18 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
        _138 = const 108_u8;             // scope 18 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
        _136 = Eq(move _137, move _138); // scope 18 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
        _135 = Not(move _136);           // scope 18 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
        switchInt(move _135) -> [0: bb38, otherwise: bb37]; // scope 18 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    }

    bb37: {
        _139 = const core::panicking::AssertKind::Eq; // scope 18 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _141 = const core::panicking::AssertKind::Eq; // scope 19 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _143 = _133;                     // scope 19 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _142 = _143;                     // scope 19 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _145 = _134;                     // scope 19 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _144 = _145;                     // scope 19 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _146 = Option::<Arguments<'_>>::None; // scope 19 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
        _140 = core::panicking::assert_failed::<u8, u8>(move _141, move _142, move _144, move _146) -> bb52; // scope 19 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:53
                                         // + literal: Const { ty: for<'a, 'b, 'c> fn(core::panicking::AssertKind, &'a u8, &'b u8, Option<Arguments<'c>>) -> ! {core::panicking::assert_failed::<u8, u8>}, val: Value(<ZST>) }
    }

    bb38: {
        _147 = _63;                      // scope 11 at ui/for-loop-while/linear-for-loop.rs:15:12: 15:13
        switchInt(move _147) -> [4: bb39, otherwise: bb41]; // scope 11 at ui/for-loop-while/linear-for-loop.rs:15:12: 15:18
    }

    bb39: {
        _149 = &_74;                     // scope 11 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _210 = const _;                  // scope 11 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // + literal: Const { ty: &u8, val: Unevaluated(main, [], Some(promoted[3])) }
        _150 = _210;                     // scope 11 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _148 = (move _149, move _150);   // scope 11 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _151 = (_148.0: &u8);            // scope 11 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _152 = (_148.1: &u8);            // scope 11 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _155 = (*_151);                  // scope 20 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
        _156 = const 111_u8;             // scope 20 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
        _154 = Eq(move _155, move _156); // scope 20 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
        _153 = Not(move _154);           // scope 20 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
        switchInt(move _153) -> [0: bb41, otherwise: bb40]; // scope 20 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    }

    bb40: {
        _157 = const core::panicking::AssertKind::Eq; // scope 20 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _159 = const core::panicking::AssertKind::Eq; // scope 21 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _161 = _151;                     // scope 21 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _160 = _161;                     // scope 21 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _163 = _152;                     // scope 21 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _162 = _163;                     // scope 21 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _164 = Option::<Arguments<'_>>::None; // scope 21 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
        _158 = core::panicking::assert_failed::<u8, u8>(move _159, move _160, move _162, move _164) -> bb52; // scope 21 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:53
                                         // + literal: Const { ty: for<'a, 'b, 'c> fn(core::panicking::AssertKind, &'a u8, &'b u8, Option<Arguments<'c>>) -> ! {core::panicking::assert_failed::<u8, u8>}, val: Value(<ZST>) }
    }

    bb41: {
        _165 = CheckedAdd(_63, const 1_isize); // scope 11 at ui/for-loop-while/linear-for-loop.rs:18:9: 18:15
        assert(!move (_165.1: bool), "attempt to compute `{} + {}`, which would overflow", _63, const 1_isize) -> [success: bb42, unwind: bb52]; // scope 11 at ui/for-loop-while/linear-for-loop.rs:18:9: 18:15
    }

    bb42: {
        _63 = move (_165.0: isize);      // scope 11 at ui/for-loop-while/linear-for-loop.rs:18:9: 18:15
        _209 = const _;                  // scope 11 at ui/for-loop-while/linear-for-loop.rs:19:18: 19:22
                                         // mir::Constant
                                         // + span: ui/for-loop-while/linear-for-loop.rs:19:18: 19:22
                                         // + literal: Const { ty: &[&str; 2], val: Unevaluated(main, [], Some(promoted[2])) }
        _170 = _209;                     // scope 11 at ui/for-loop-while/linear-for-loop.rs:19:18: 19:22
        _169 = _170;                     // scope 11 at ui/for-loop-while/linear-for-loop.rs:19:18: 19:22
        _168 = move _169 as &[&str] (Pointer(Unsize)); // scope 11 at ui/for-loop-while/linear-for-loop.rs:19:18: 19:22
        _177 = &_63;                     // scope 11 at ui/for-loop-while/linear-for-loop.rs:19:24: 19:25
        _176 = _177;                     // scope 11 at ui/for-loop-while/linear-for-loop.rs:19:24: 19:25
        _175 = core::fmt::ArgumentV1::<'_>::new_display::<isize>(move _176) -> [return: bb43, unwind: bb52]; // scope 11 at ui/for-loop-while/linear-for-loop.rs:19:24: 19:25
                                         // mir::Constant
                                         // + span: ui/for-loop-while/linear-for-loop.rs:19:24: 19:25
                                         // + user_ty: UserType(8)
                                         // + literal: Const { ty: for<'b> fn(&'b isize) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_display::<isize>}, val: Value(<ZST>) }
    }

    bb43: {
        _174 = [move _175];              // scope 11 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _173 = &_174;                    // scope 11 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _172 = _173;                     // scope 11 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _171 = move _172 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 11 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _167 = Arguments::<'_>::new_v1(move _168, move _171) -> [return: bb44, unwind: bb52]; // scope 11 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // + user_ty: UserType(7)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb44: {
        _166 = _print(move _167) -> [return: bb45, unwind: bb52]; // scope 11 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:62
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:27
                                         // + literal: Const { ty: for<'a> fn(Arguments<'a>) {_print}, val: Value(<ZST>) }
    }

    bb45: {
        _208 = const _;                  // scope 11 at ui/for-loop-while/linear-for-loop.rs:20:18: 20:22
                                         // mir::Constant
                                         // + span: ui/for-loop-while/linear-for-loop.rs:20:18: 20:22
                                         // + literal: Const { ty: &[&str; 2], val: Unevaluated(main, [], Some(promoted[1])) }
        _182 = _208;                     // scope 11 at ui/for-loop-while/linear-for-loop.rs:20:18: 20:22
        _181 = _182;                     // scope 11 at ui/for-loop-while/linear-for-loop.rs:20:18: 20:22
        _180 = move _181 as &[&str] (Pointer(Unsize)); // scope 11 at ui/for-loop-while/linear-for-loop.rs:20:18: 20:22
        _189 = &_74;                     // scope 11 at ui/for-loop-while/linear-for-loop.rs:20:24: 20:25
        _188 = _189;                     // scope 11 at ui/for-loop-while/linear-for-loop.rs:20:24: 20:25
        _187 = core::fmt::ArgumentV1::<'_>::new_display::<u8>(move _188) -> [return: bb46, unwind: bb52]; // scope 11 at ui/for-loop-while/linear-for-loop.rs:20:24: 20:25
                                         // mir::Constant
                                         // + span: ui/for-loop-while/linear-for-loop.rs:20:24: 20:25
                                         // + user_ty: UserType(10)
                                         // + literal: Const { ty: for<'b> fn(&'b u8) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_display::<u8>}, val: Value(<ZST>) }
    }

    bb46: {
        _186 = [move _187];              // scope 11 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _185 = &_186;                    // scope 11 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _184 = _185;                     // scope 11 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _183 = move _184 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 11 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _179 = Arguments::<'_>::new_v1(move _180, move _183) -> [return: bb47, unwind: bb52]; // scope 11 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // + user_ty: UserType(9)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb47: {
        _178 = _print(move _179) -> [return: bb55, unwind: bb52]; // scope 11 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:62
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:27
                                         // + literal: Const { ty: for<'a> fn(Arguments<'a>) {_print}, val: Value(<ZST>) }
    }

    bb48: {
        _199 = const core::panicking::AssertKind::Eq; // scope 22 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _201 = const core::panicking::AssertKind::Eq; // scope 23 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _203 = _193;                     // scope 23 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _202 = _203;                     // scope 23 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _205 = _194;                     // scope 23 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _204 = _205;                     // scope 23 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _206 = Option::<Arguments<'_>>::None; // scope 23 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
        _200 = core::panicking::assert_failed::<isize, isize>(move _201, move _202, move _204, move _206) -> bb52; // scope 23 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:53
                                         // + literal: Const { ty: for<'a, 'b, 'c> fn(core::panicking::AssertKind, &'a isize, &'b isize, Option<Arguments<'c>>) -> ! {core::panicking::assert_failed::<isize, isize>}, val: Value(<ZST>) }
    }

    bb49: {
        drop(_60) -> [return: bb50, unwind: bb53]; // scope 3 at ui/for-loop-while/linear-for-loop.rs:23:1: 23:2
    }

    bb50: {
        drop(_1) -> bb51;                // scope 0 at ui/for-loop-while/linear-for-loop.rs:23:1: 23:2
    }

    bb51: {
        return;                          // scope 0 at ui/for-loop-while/linear-for-loop.rs:23:2: 23:2
    }

    bb52 (cleanup): {
        drop(_60) -> bb53;               // scope 3 at ui/for-loop-while/linear-for-loop.rs:23:1: 23:2
    }

    bb53 (cleanup): {
        drop(_1) -> bb54;                // scope 0 at ui/for-loop-while/linear-for-loop.rs:23:1: 23:2
    }

    bb54 (cleanup): {
        resume;                          // scope 0 at ui/for-loop-while/linear-for-loop.rs:2:1: 23:2
    }

    bb55: {
        goto -> bb22;                    // scope 11 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:62
    }
}

promoted[0] in main: &isize = {
    let mut _0: &isize;                  // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _1: isize;                   // in scope 0 at ui/for-loop-while/linear-for-loop.rs:22:19: 22:21

    bb0: {
        _1 = const 11_isize;             // scope 0 at ui/for-loop-while/linear-for-loop.rs:22:19: 22:21
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    }
}

promoted[1] in main: &[&str; 2] = {
    let mut _0: &[&str; 2];              // return place in scope 0 at ui/for-loop-while/linear-for-loop.rs:20:18: 20:22
    let mut _1: [&str; 2];               // in scope 0 at ui/for-loop-while/linear-for-loop.rs:20:18: 20:22

    bb0: {
        _1 = [const "", const "\n"];     // scope 0 at ui/for-loop-while/linear-for-loop.rs:20:18: 20:22
                                         // mir::Constant
                                         // + span: ui/for-loop-while/linear-for-loop.rs:20:18: 20:22
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
                                         // mir::Constant
                                         // + span: ui/for-loop-while/linear-for-loop.rs:20:18: 20:22
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at ui/for-loop-while/linear-for-loop.rs:20:18: 20:22
        return;                          // scope 0 at ui/for-loop-while/linear-for-loop.rs:20:18: 20:22
    }
}

promoted[2] in main: &[&str; 2] = {
    let mut _0: &[&str; 2];              // return place in scope 0 at ui/for-loop-while/linear-for-loop.rs:19:18: 19:22
    let mut _1: [&str; 2];               // in scope 0 at ui/for-loop-while/linear-for-loop.rs:19:18: 19:22

    bb0: {
        _1 = [const "", const "\n"];     // scope 0 at ui/for-loop-while/linear-for-loop.rs:19:18: 19:22
                                         // mir::Constant
                                         // + span: ui/for-loop-while/linear-for-loop.rs:19:18: 19:22
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
                                         // mir::Constant
                                         // + span: ui/for-loop-while/linear-for-loop.rs:19:18: 19:22
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at ui/for-loop-while/linear-for-loop.rs:19:18: 19:22
        return;                          // scope 0 at ui/for-loop-while/linear-for-loop.rs:19:18: 19:22
    }
}

promoted[3] in main: &u8 = {
    let mut _0: &u8;                     // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _1: u8;                      // in scope 0 at ui/for-loop-while/linear-for-loop.rs:15:35: 15:44

    bb0: {
        _1 = const 'o' as u8 (IntToInt); // scope 0 at ui/for-loop-while/linear-for-loop.rs:15:35: 15:44
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    }
}

promoted[4] in main: &u8 = {
    let mut _0: &u8;                     // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _1: u8;                      // in scope 0 at ui/for-loop-while/linear-for-loop.rs:14:35: 14:44

    bb0: {
        _1 = const 'l' as u8 (IntToInt); // scope 0 at ui/for-loop-while/linear-for-loop.rs:14:35: 14:44
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    }
}

promoted[5] in main: &u8 = {
    let mut _0: &u8;                     // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _1: u8;                      // in scope 0 at ui/for-loop-while/linear-for-loop.rs:13:35: 13:44

    bb0: {
        _1 = const 'l' as u8 (IntToInt); // scope 0 at ui/for-loop-while/linear-for-loop.rs:13:35: 13:44
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    }
}

promoted[6] in main: &u8 = {
    let mut _0: &u8;                     // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _1: u8;                      // in scope 0 at ui/for-loop-while/linear-for-loop.rs:12:35: 12:44

    bb0: {
        _1 = const 'e' as u8 (IntToInt); // scope 0 at ui/for-loop-while/linear-for-loop.rs:12:35: 12:44
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    }
}

promoted[7] in main: &u8 = {
    let mut _0: &u8;                     // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _1: u8;                      // in scope 0 at ui/for-loop-while/linear-for-loop.rs:11:35: 11:44

    bb0: {
        _1 = const 'h' as u8 (IntToInt); // scope 0 at ui/for-loop-while/linear-for-loop.rs:11:35: 11:44
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    }
}

promoted[8] in main: &i32 = {
    let mut _0: &i32;                    // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _1: i32;                     // in scope 0 at ui/for-loop-while/linear-for-loop.rs:7:19: 7:20

    bb0: {
        _1 = const 6_i32;                // scope 0 at ui/for-loop-while/linear-for-loop.rs:7:19: 7:20
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    }
}

promoted[9] in main: &[&str; 2] = {
    let mut _0: &[&str; 2];              // return place in scope 0 at ui/for-loop-while/linear-for-loop.rs:6:14: 6:18
    let mut _1: [&str; 2];               // in scope 0 at ui/for-loop-while/linear-for-loop.rs:6:14: 6:18

    bb0: {
        _1 = [const "", const "\n"];     // scope 0 at ui/for-loop-while/linear-for-loop.rs:6:14: 6:18
                                         // mir::Constant
                                         // + span: ui/for-loop-while/linear-for-loop.rs:6:14: 6:18
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
                                         // mir::Constant
                                         // + span: ui/for-loop-while/linear-for-loop.rs:6:14: 6:18
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at ui/for-loop-while/linear-for-loop.rs:6:14: 6:18
        return;                          // scope 0 at ui/for-loop-while/linear-for-loop.rs:6:14: 6:18
    }
}

promoted[10] in main: &[&str; 2] = {
    let mut _0: &[&str; 2];              // return place in scope 0 at ui/for-loop-while/linear-for-loop.rs:5:28: 5:32
    let mut _1: [&str; 2];               // in scope 0 at ui/for-loop-while/linear-for-loop.rs:5:28: 5:32

    bb0: {
        _1 = [const "", const "\n"];     // scope 0 at ui/for-loop-while/linear-for-loop.rs:5:28: 5:32
                                         // mir::Constant
                                         // + span: ui/for-loop-while/linear-for-loop.rs:5:28: 5:32
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
                                         // mir::Constant
                                         // + span: ui/for-loop-while/linear-for-loop.rs:5:28: 5:32
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at ui/for-loop-while/linear-for-loop.rs:5:28: 5:32
        return;                          // scope 0 at ui/for-loop-while/linear-for-loop.rs:5:28: 5:32
    }
}
