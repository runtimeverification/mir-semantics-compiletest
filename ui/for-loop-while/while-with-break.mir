// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
fn main() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/for-loop-while/while-with-break.rs:3:15: 3:15
    let mut _1: isize;                   // in scope 0 at ui/for-loop-while/while-with-break.rs:4:9: 4:14
    let mut _2: bool;                    // in scope 0 at ui/for-loop-while/while-with-break.rs:5:11: 5:18
    let mut _3: isize;                   // in scope 0 at ui/for-loop-while/while-with-break.rs:5:11: 5:12
    let _4: ();                          // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:62
    let mut _5: std::fmt::Arguments<'_>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _6: &[&str];                 // in scope 0 at ui/for-loop-while/while-with-break.rs:6:18: 6:22
    let mut _7: &[&str; 2];              // in scope 0 at ui/for-loop-while/while-with-break.rs:6:18: 6:22
    let _8: &[&str; 2];                  // in scope 0 at ui/for-loop-while/while-with-break.rs:6:18: 6:22
    let mut _9: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _10: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let _11: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let _12: [core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _13: core::fmt::ArgumentV1<'_>; // in scope 0 at ui/for-loop-while/while-with-break.rs:6:24: 6:25
    let mut _14: &isize;                 // in scope 0 at ui/for-loop-while/while-with-break.rs:6:24: 6:25
    let _15: &isize;                     // in scope 0 at ui/for-loop-while/while-with-break.rs:6:24: 6:25
    let mut _16: isize;                  // in scope 0 at ui/for-loop-while/while-with-break.rs:7:13: 7:14
    let mut _17: (isize, bool);          // in scope 0 at ui/for-loop-while/while-with-break.rs:7:13: 7:18
    let mut _18: isize;                  // in scope 0 at ui/for-loop-while/while-with-break.rs:8:12: 8:13
    let mut _20: std::boxed::Box<[isize]>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
    let mut _21: std::boxed::Box<[isize; 5]>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
    let mut _22: usize;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
    let mut _23: usize;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
    let mut _24: *mut u8;                // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
    let mut _25: std::boxed::Box<[isize; 5]>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
    let _26: ();                         // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:62
    let mut _27: std::fmt::Arguments<'_>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _28: &[&str];                // in scope 0 at ui/for-loop-while/while-with-break.rs:12:22: 12:32
    let mut _29: &[&str; 1];             // in scope 0 at ui/for-loop-while/while-with-break.rs:12:22: 12:32
    let _30: &[&str; 1];                 // in scope 0 at ui/for-loop-while/while-with-break.rs:12:22: 12:32
    let mut _31: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _32: &[core::fmt::ArgumentV1<'_>; 0]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let _33: &[core::fmt::ArgumentV1<'_>; 0]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _34: (&isize, &isize);       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _35: &isize;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let mut _36: &isize;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _39: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    let mut _40: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
    let mut _41: isize;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
    let mut _42: isize;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
    let _44: !;                          // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
    let mut _45: core::panicking::AssertKind; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
    let mut _46: &isize;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let _47: &isize;                     // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let mut _48: &isize;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let _49: &isize;                     // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let mut _50: std::option::Option<std::fmt::Arguments<'_>>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
    let mut _55: *const [isize; 5];      // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
    scope 1 {
        debug i => _1;                   // in scope 1 at ui/for-loop-while/while-with-break.rs:4:9: 4:14
        let _19: std::vec::Vec<isize>;   // in scope 1 at ui/for-loop-while/while-with-break.rs:9:17: 9:19
        let _37: &isize;                 // in scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        let _38: &isize;                 // in scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        let mut _51: &isize;             // in scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        let mut _54: &[&str; 2];         // in scope 1 at ui/for-loop-while/while-with-break.rs:6:18: 6:22
        scope 2 {
            debug _v => _19;             // in scope 2 at ui/for-loop-while/while-with-break.rs:9:17: 9:19
            let mut _52: &[core::fmt::ArgumentV1<'_>; 0]; // in scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
            let mut _53: &[&str; 1];     // in scope 2 at ui/for-loop-while/while-with-break.rs:12:22: 12:32
        }
        scope 3 {
        }
        scope 4 {
            debug left_val => _37;       // in scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
            debug right_val => _38;      // in scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
            let _43: core::panicking::AssertKind; // in scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
            scope 5 {
                debug kind => _43;       // in scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
            }
        }
    }

    bb0: {
        _1 = const 90_isize;             // scope 0 at ui/for-loop-while/while-with-break.rs:4:24: 4:26
        goto -> bb1;                     // scope 1 at ui/for-loop-while/while-with-break.rs:5:5: 15:6
    }

    bb1: {
        _3 = _1;                         // scope 1 at ui/for-loop-while/while-with-break.rs:5:11: 5:12
        _2 = Lt(move _3, const 100_isize); // scope 1 at ui/for-loop-while/while-with-break.rs:5:11: 5:18
        switchInt(move _2) -> [0: bb12, otherwise: bb2]; // scope 1 at ui/for-loop-while/while-with-break.rs:5:11: 5:18
    }

    bb2: {
        _54 = const _;                   // scope 1 at ui/for-loop-while/while-with-break.rs:6:18: 6:22
                                         // mir::Constant
                                         // + span: ui/for-loop-while/while-with-break.rs:6:18: 6:22
                                         // + literal: Const { ty: &[&str; 2], val: Unevaluated(main, [], Some(promoted[3])) }
        _8 = _54;                        // scope 1 at ui/for-loop-while/while-with-break.rs:6:18: 6:22
        _7 = _8;                         // scope 1 at ui/for-loop-while/while-with-break.rs:6:18: 6:22
        _6 = move _7 as &[&str] (Pointer(Unsize)); // scope 1 at ui/for-loop-while/while-with-break.rs:6:18: 6:22
        _15 = &_1;                       // scope 1 at ui/for-loop-while/while-with-break.rs:6:24: 6:25
        _14 = _15;                       // scope 1 at ui/for-loop-while/while-with-break.rs:6:24: 6:25
        _13 = core::fmt::ArgumentV1::<'_>::new_display::<isize>(move _14) -> bb3; // scope 1 at ui/for-loop-while/while-with-break.rs:6:24: 6:25
                                         // mir::Constant
                                         // + span: ui/for-loop-while/while-with-break.rs:6:24: 6:25
                                         // + user_ty: UserType(3)
                                         // + literal: Const { ty: for<'b> fn(&'b isize) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_display::<isize>}, val: Value(<ZST>) }
    }

    bb3: {
        _12 = [move _13];                // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _11 = &_12;                      // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _10 = _11;                       // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _9 = move _10 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _5 = Arguments::<'_>::new_v1(move _6, move _9) -> bb4; // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // + user_ty: UserType(2)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb4: {
        _4 = _print(move _5) -> bb5;     // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:62
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:27
                                         // + literal: Const { ty: for<'a> fn(Arguments<'a>) {_print}, val: Value(<ZST>) }
    }

    bb5: {
        _16 = _1;                        // scope 1 at ui/for-loop-while/while-with-break.rs:7:13: 7:14
        _17 = CheckedAdd(_16, const 1_isize); // scope 1 at ui/for-loop-while/while-with-break.rs:7:13: 7:18
        assert(!move (_17.1: bool), "attempt to compute `{} + {}`, which would overflow", move _16, const 1_isize) -> bb6; // scope 1 at ui/for-loop-while/while-with-break.rs:7:13: 7:18
    }

    bb6: {
        _1 = move (_17.0: isize);        // scope 1 at ui/for-loop-while/while-with-break.rs:7:9: 7:18
        _18 = _1;                        // scope 1 at ui/for-loop-while/while-with-break.rs:8:12: 8:13
        switchInt(move _18) -> [95: bb7, otherwise: bb1]; // scope 1 at ui/for-loop-while/while-with-break.rs:8:12: 8:19
    }

    bb7: {
        _22 = const 40_usize;            // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
        _23 = const 8_usize;             // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
        _24 = alloc::alloc::exchange_malloc(move _22, move _23) -> bb8; // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
                                         // + literal: Const { ty: unsafe fn(usize, usize) -> *mut u8 {alloc::alloc::exchange_malloc}, val: Value(<ZST>) }
    }

    bb8: {
        _25 = ShallowInitBox(move _24, [isize; 5]); // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
        _55 = (((_25.0: std::ptr::Unique<[isize; 5]>).0: std::ptr::NonNull<[isize; 5]>).0: *const [isize; 5]); // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:37: 52:46
        (*_55) = [const 1_isize, const 2_isize, const 3_isize, const 4_isize, const 5_isize]; // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:37: 52:46
        _21 = move _25;                  // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
        _20 = move _21 as std::boxed::Box<[isize]> (Pointer(Unsize)); // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
        _19 = slice::<impl [isize]>::into_vec::<std::alloc::Global>(move _20) -> bb9; // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:50:36: 53:10
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:50:36: 50:51
                                         // + user_ty: UserType(5)
                                         // + literal: Const { ty: fn(Box<[isize]>) -> Vec<isize> {slice::<impl [isize]>::into_vec::<std::alloc::Global>}, val: Value(<ZST>) }
    }

    bb9: {
        _53 = const _;                   // scope 2 at ui/for-loop-while/while-with-break.rs:12:22: 12:32
                                         // mir::Constant
                                         // + span: ui/for-loop-while/while-with-break.rs:12:22: 12:32
                                         // + literal: Const { ty: &[&str; 1], val: Unevaluated(main, [], Some(promoted[2])) }
        _30 = _53;                       // scope 2 at ui/for-loop-while/while-with-break.rs:12:22: 12:32
        _29 = _30;                       // scope 2 at ui/for-loop-while/while-with-break.rs:12:22: 12:32
        _28 = move _29 as &[&str] (Pointer(Unsize)); // scope 2 at ui/for-loop-while/while-with-break.rs:12:22: 12:32
        _52 = const _;                   // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // + literal: Const { ty: &[core::fmt::ArgumentV1<'_>; 0], val: Unevaluated(main, [], Some(promoted[1])) }
        _33 = _52;                       // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _32 = _33;                       // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _31 = move _32 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _27 = Arguments::<'_>::new_v1(move _28, move _31) -> [return: bb10, unwind: bb15]; // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // + user_ty: UserType(7)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb10: {
        _26 = _print(move _27) -> [return: bb11, unwind: bb15]; // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:62
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:27
                                         // + literal: Const { ty: for<'a> fn(Arguments<'a>) {_print}, val: Value(<ZST>) }
    }

    bb11: {
        drop(_19) -> bb12;               // scope 1 at ui/for-loop-while/while-with-break.rs:14:9: 14:10
    }

    bb12: {
        _35 = &_1;                       // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _51 = const _;                   // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // + literal: Const { ty: &isize, val: Unevaluated(main, [], Some(promoted[0])) }
        _36 = _51;                       // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _34 = (move _35, move _36);      // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _37 = (_34.0: &isize);           // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _38 = (_34.1: &isize);           // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _41 = (*_37);                    // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
        _42 = const 95_isize;            // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
        _40 = Eq(move _41, move _42);    // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
        _39 = Not(move _40);             // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
        switchInt(move _39) -> [0: bb14, otherwise: bb13]; // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    }

    bb13: {
        _43 = const core::panicking::AssertKind::Eq; // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _45 = const core::panicking::AssertKind::Eq; // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _47 = _37;                       // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _46 = _47;                       // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _49 = _38;                       // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _48 = _49;                       // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _50 = Option::<Arguments<'_>>::None; // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
        _44 = core::panicking::assert_failed::<isize, isize>(move _45, move _46, move _48, move _50); // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:53
                                         // + literal: Const { ty: for<'a, 'b, 'c> fn(core::panicking::AssertKind, &'a isize, &'b isize, Option<Arguments<'c>>) -> ! {core::panicking::assert_failed::<isize, isize>}, val: Value(<ZST>) }
    }

    bb14: {
        return;                          // scope 0 at ui/for-loop-while/while-with-break.rs:17:2: 17:2
    }

    bb15 (cleanup): {
        drop(_19) -> bb16;               // scope 1 at ui/for-loop-while/while-with-break.rs:14:9: 14:10
    }

    bb16 (cleanup): {
        resume;                          // scope 0 at ui/for-loop-while/while-with-break.rs:3:1: 17:2
    }
}

promoted[0] in main: &isize = {
    let mut _0: &isize;                  // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _1: isize;                   // in scope 0 at ui/for-loop-while/while-with-break.rs:16:19: 16:21

    bb0: {
        _1 = const 95_isize;             // scope 0 at ui/for-loop-while/while-with-break.rs:16:19: 16:21
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    }
}

promoted[1] in main: &[core::fmt::ArgumentV1<'_>; 0] = {
    let mut _0: &[core::fmt::ArgumentV1<'_>; 0]; // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _1: [core::fmt::ArgumentV1<'_>; 0]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61

    bb0: {
        _1 = [];                         // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    }
}

promoted[2] in main: &[&str; 1] = {
    let mut _0: &[&str; 1];              // return place in scope 0 at ui/for-loop-while/while-with-break.rs:12:22: 12:32
    let mut _1: [&str; 1];               // in scope 0 at ui/for-loop-while/while-with-break.rs:12:22: 12:32

    bb0: {
        _1 = [const "breaking\n"];       // scope 0 at ui/for-loop-while/while-with-break.rs:12:22: 12:32
                                         // mir::Constant
                                         // + span: ui/for-loop-while/while-with-break.rs:12:22: 12:32
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at ui/for-loop-while/while-with-break.rs:12:22: 12:32
        return;                          // scope 0 at ui/for-loop-while/while-with-break.rs:12:22: 12:32
    }
}

promoted[3] in main: &[&str; 2] = {
    let mut _0: &[&str; 2];              // return place in scope 0 at ui/for-loop-while/while-with-break.rs:6:18: 6:22
    let mut _1: [&str; 2];               // in scope 0 at ui/for-loop-while/while-with-break.rs:6:18: 6:22

    bb0: {
        _1 = [const "", const "\n"];     // scope 0 at ui/for-loop-while/while-with-break.rs:6:18: 6:22
                                         // mir::Constant
                                         // + span: ui/for-loop-while/while-with-break.rs:6:18: 6:22
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
                                         // mir::Constant
                                         // + span: ui/for-loop-while/while-with-break.rs:6:18: 6:22
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at ui/for-loop-while/while-with-break.rs:6:18: 6:22
        return;                          // scope 0 at ui/for-loop-while/while-with-break.rs:6:18: 6:22
    }
}
