// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
fn main() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/for-loop-while/foreach-external-iterators-break.rs:3:15: 3:15
    let _1: [i32; 100];                  // in scope 0 at ui/for-loop-while/foreach-external-iterators-break.rs:4:9: 4:10
    let mut _3: std::slice::Iter<'_, i32>; // in scope 0 at ui/for-loop-while/foreach-external-iterators-break.rs:6:14: 6:20
    let mut _4: &[i32];                  // in scope 0 at ui/for-loop-while/foreach-external-iterators-break.rs:6:14: 6:20
    let _5: &[i32];                      // in scope 0 at ui/for-loop-while/foreach-external-iterators-break.rs:6:15: 6:20
    let mut _6: &[i32; 100];             // in scope 0 at ui/for-loop-while/foreach-external-iterators-break.rs:6:15: 6:16
    let mut _7: std::ops::RangeFull;     // in scope 0 at ui/for-loop-while/foreach-external-iterators-break.rs:6:17: 6:19
    let mut _9: std::option::Option<&i32>; // in scope 0 at ui/for-loop-while/foreach-external-iterators-break.rs:6:14: 6:20
    let mut _10: &mut std::slice::Iter<'_, i32>; // in scope 0 at ui/for-loop-while/foreach-external-iterators-break.rs:6:14: 6:20
    let mut _11: &mut std::slice::Iter<'_, i32>; // in scope 0 at ui/for-loop-while/foreach-external-iterators-break.rs:6:14: 6:20
    let mut _12: isize;                  // in scope 0 at ui/for-loop-while/foreach-external-iterators-break.rs:6:5: 11:6
    let mut _14: bool;                   // in scope 0 at ui/for-loop-while/foreach-external-iterators-break.rs:7:12: 7:18
    let mut _15: i32;                    // in scope 0 at ui/for-loop-while/foreach-external-iterators-break.rs:7:12: 7:13
    let mut _16: i32;                    // in scope 0 at ui/for-loop-while/foreach-external-iterators-break.rs:10:14: 10:16
    let mut _17: (i32, bool);            // in scope 0 at ui/for-loop-while/foreach-external-iterators-break.rs:10:9: 10:16
    let mut _18: (&i32, &i32);           // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _19: &i32;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let mut _20: &i32;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _23: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    let mut _24: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
    let mut _25: i32;                    // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
    let mut _26: i32;                    // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
    let _28: !;                          // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
    let mut _29: core::panicking::AssertKind; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
    let mut _30: &i32;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let _31: &i32;                       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let mut _32: &i32;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let _33: &i32;                       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let mut _34: std::option::Option<std::fmt::Arguments<'_>>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
    scope 1 {
        debug x => _1;                   // in scope 1 at ui/for-loop-while/foreach-external-iterators-break.rs:4:9: 4:10
        let mut _2: i32;                 // in scope 1 at ui/for-loop-while/foreach-external-iterators-break.rs:5:9: 5:14
        scope 2 {
            debug y => _2;               // in scope 2 at ui/for-loop-while/foreach-external-iterators-break.rs:5:9: 5:14
            let mut _8: std::slice::Iter<'_, i32>; // in scope 2 at ui/for-loop-while/foreach-external-iterators-break.rs:6:14: 6:20
            let _21: &i32;               // in scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
            let _22: &i32;               // in scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
            let mut _35: &i32;           // in scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
            scope 3 {
                debug iter => _8;        // in scope 3 at ui/for-loop-while/foreach-external-iterators-break.rs:6:14: 6:20
                let _13: &i32;           // in scope 3 at ui/for-loop-while/foreach-external-iterators-break.rs:6:9: 6:10
                scope 4 {
                    debug i => _13;      // in scope 4 at ui/for-loop-while/foreach-external-iterators-break.rs:6:9: 6:10
                }
            }
            scope 5 {
                debug left_val => _21;   // in scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
                debug right_val => _22;  // in scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
                let _27: core::panicking::AssertKind; // in scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                scope 6 {
                    debug kind => _27;   // in scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                }
            }
        }
    }

    bb0: {
        _1 = [const 1_i32; 100];         // scope 0 at ui/for-loop-while/foreach-external-iterators-break.rs:4:13: 4:21
        _2 = const 0_i32;                // scope 1 at ui/for-loop-while/foreach-external-iterators-break.rs:5:17: 5:18
        _6 = &_1;                        // scope 2 at ui/for-loop-while/foreach-external-iterators-break.rs:6:15: 6:16
        _5 = <[i32; 100] as Index<RangeFull>>::index(move _6, move _7) -> bb1; // scope 2 at ui/for-loop-while/foreach-external-iterators-break.rs:6:15: 6:20
                                         // mir::Constant
                                         // + span: ui/for-loop-while/foreach-external-iterators-break.rs:6:15: 6:20
                                         // + literal: Const { ty: for<'a> fn(&'a [i32; 100], RangeFull) -> &'a <[i32; 100] as Index<RangeFull>>::Output {<[i32; 100] as Index<RangeFull>>::index}, val: Value(<ZST>) }
    }

    bb1: {
        _4 = _5;                         // scope 2 at ui/for-loop-while/foreach-external-iterators-break.rs:6:14: 6:20
        _3 = <&[i32] as IntoIterator>::into_iter(move _4) -> bb2; // scope 2 at ui/for-loop-while/foreach-external-iterators-break.rs:6:14: 6:20
                                         // mir::Constant
                                         // + span: ui/for-loop-while/foreach-external-iterators-break.rs:6:14: 6:20
                                         // + literal: Const { ty: fn(&[i32]) -> <&[i32] as IntoIterator>::IntoIter {<&[i32] as IntoIterator>::into_iter}, val: Value(<ZST>) }
    }

    bb2: {
        _8 = move _3;                    // scope 2 at ui/for-loop-while/foreach-external-iterators-break.rs:6:14: 6:20
        goto -> bb3;                     // scope 3 at ui/for-loop-while/foreach-external-iterators-break.rs:6:5: 11:6
    }

    bb3: {
        _11 = &mut _8;                   // scope 3 at ui/for-loop-while/foreach-external-iterators-break.rs:6:14: 6:20
        _10 = &mut (*_11);               // scope 3 at ui/for-loop-while/foreach-external-iterators-break.rs:6:14: 6:20
        _9 = <std::slice::Iter<'_, i32> as Iterator>::next(move _10) -> bb4; // scope 3 at ui/for-loop-while/foreach-external-iterators-break.rs:6:14: 6:20
                                         // mir::Constant
                                         // + span: ui/for-loop-while/foreach-external-iterators-break.rs:6:14: 6:20
                                         // + literal: Const { ty: for<'a> fn(&'a mut std::slice::Iter<'_, i32>) -> Option<<std::slice::Iter<'_, i32> as Iterator>::Item> {<std::slice::Iter<'_, i32> as Iterator>::next}, val: Value(<ZST>) }
    }

    bb4: {
        _12 = discriminant(_9);          // scope 3 at ui/for-loop-while/foreach-external-iterators-break.rs:6:14: 6:20
        switchInt(move _12) -> [0: bb9, 1: bb5, otherwise: bb6]; // scope 3 at ui/for-loop-while/foreach-external-iterators-break.rs:6:14: 6:20
    }

    bb5: {
        _13 = ((_9 as Some).0: &i32);    // scope 3 at ui/for-loop-while/foreach-external-iterators-break.rs:6:9: 6:10
        _15 = _2;                        // scope 4 at ui/for-loop-while/foreach-external-iterators-break.rs:7:12: 7:13
        _14 = Gt(move _15, const 10_i32); // scope 4 at ui/for-loop-while/foreach-external-iterators-break.rs:7:12: 7:18
        switchInt(move _14) -> [0: bb7, otherwise: bb9]; // scope 4 at ui/for-loop-while/foreach-external-iterators-break.rs:7:12: 7:18
    }

    bb6: {
        unreachable;                     // scope 3 at ui/for-loop-while/foreach-external-iterators-break.rs:6:14: 6:20
    }

    bb7: {
        _16 = (*_13);                    // scope 4 at ui/for-loop-while/foreach-external-iterators-break.rs:10:14: 10:16
        _17 = CheckedAdd(_2, _16);       // scope 4 at ui/for-loop-while/foreach-external-iterators-break.rs:10:9: 10:16
        assert(!move (_17.1: bool), "attempt to compute `{} + {}`, which would overflow", _2, move _16) -> bb8; // scope 4 at ui/for-loop-while/foreach-external-iterators-break.rs:10:9: 10:16
    }

    bb8: {
        _2 = move (_17.0: i32);          // scope 4 at ui/for-loop-while/foreach-external-iterators-break.rs:10:9: 10:16
        goto -> bb3;                     // scope 3 at ui/for-loop-while/foreach-external-iterators-break.rs:6:5: 11:6
    }

    bb9: {
        _19 = &_2;                       // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _35 = const _;                   // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // + literal: Const { ty: &i32, val: Unevaluated(main, [], Some(promoted[0])) }
        _20 = _35;                       // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _18 = (move _19, move _20);      // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _21 = (_18.0: &i32);             // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _22 = (_18.1: &i32);             // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _25 = (*_21);                    // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
        _26 = const 11_i32;              // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
        _24 = Eq(move _25, move _26);    // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
        _23 = Not(move _24);             // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
        switchInt(move _23) -> [0: bb11, otherwise: bb10]; // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    }

    bb10: {
        _27 = const core::panicking::AssertKind::Eq; // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _29 = const core::panicking::AssertKind::Eq; // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _31 = _21;                       // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _30 = _31;                       // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _33 = _22;                       // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _32 = _33;                       // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _34 = Option::<Arguments<'_>>::None; // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
        _28 = core::panicking::assert_failed::<i32, i32>(move _29, move _30, move _32, move _34); // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:53
                                         // + literal: Const { ty: for<'a, 'b, 'c> fn(core::panicking::AssertKind, &'a i32, &'b i32, Option<Arguments<'c>>) -> ! {core::panicking::assert_failed::<i32, i32>}, val: Value(<ZST>) }
    }

    bb11: {
        return;                          // scope 0 at ui/for-loop-while/foreach-external-iterators-break.rs:13:2: 13:2
    }
}

promoted[0] in main: &i32 = {
    let mut _0: &i32;                    // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _1: i32;                     // in scope 0 at ui/for-loop-while/foreach-external-iterators-break.rs:12:19: 12:21

    bb0: {
        _1 = const 11_i32;               // scope 0 at ui/for-loop-while/foreach-external-iterators-break.rs:12:19: 12:21
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    }
}

main::{constant#0}: usize = {
    let mut _0: usize;                   // return place in scope 0 at ui/for-loop-while/foreach-external-iterators-break.rs:4:17: 4:20

    bb0: {
        _0 = const 100_usize;            // scope 0 at ui/for-loop-while/foreach-external-iterators-break.rs:4:17: 4:20
        return;                          // scope 0 at ui/for-loop-while/foreach-external-iterators-break.rs:4:17: 4:20
    }
}
