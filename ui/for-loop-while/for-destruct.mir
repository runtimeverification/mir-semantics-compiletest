// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
fn main() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/for-loop-while/for-destruct.rs:5:15: 5:15
    let mut _1: std::slice::Iter<'_, Pair>; // in scope 0 at ui/for-loop-while/for-destruct.rs:6:16: 6:64
    let mut _2: &std::vec::Vec<Pair>;    // in scope 0 at ui/for-loop-while/for-destruct.rs:6:16: 6:64
    let _3: std::vec::Vec<Pair>;         // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:50:36: 53:10
    let mut _4: std::boxed::Box<[Pair]>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
    let mut _5: std::boxed::Box<[Pair; 2]>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
    let mut _6: usize;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
    let mut _7: usize;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
    let mut _8: *mut u8;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
    let mut _9: std::boxed::Box<[Pair; 2]>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
    let mut _10: Pair;                   // in scope 0 at ui/for-loop-while/for-destruct.rs:6:23: 6:42
    let mut _11: Pair;                   // in scope 0 at ui/for-loop-while/for-destruct.rs:6:44: 6:62
    let mut _12: std::slice::Iter<'_, Pair>; // in scope 0 at ui/for-loop-while/for-destruct.rs:6:16: 6:64
    let mut _13: std::option::Option<&Pair>; // in scope 0 at ui/for-loop-while/for-destruct.rs:6:16: 6:64
    let mut _14: &mut std::slice::Iter<'_, Pair>; // in scope 0 at ui/for-loop-while/for-destruct.rs:6:16: 6:64
    let mut _15: &mut std::slice::Iter<'_, Pair>; // in scope 0 at ui/for-loop-while/for-destruct.rs:6:16: 6:64
    let mut _16: isize;                  // in scope 0 at ui/for-loop-while/for-destruct.rs:6:5: 8:6
    let mut _18: (&isize, &isize);       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _19: &isize;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let _20: isize;                      // in scope 0 at ui/for-loop-while/for-destruct.rs:7:20: 7:33
    let mut _21: isize;                  // in scope 0 at ui/for-loop-while/for-destruct.rs:7:20: 7:25
    let mut _22: isize;                  // in scope 0 at ui/for-loop-while/for-destruct.rs:7:28: 7:33
    let mut _23: (isize, bool);          // in scope 0 at ui/for-loop-while/for-destruct.rs:7:20: 7:33
    let mut _24: &isize;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _27: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    let mut _28: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
    let mut _29: isize;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
    let mut _30: isize;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
    let _32: !;                          // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
    let mut _33: core::panicking::AssertKind; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
    let mut _34: &isize;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let _35: &isize;                     // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let mut _36: &isize;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let _37: &isize;                     // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let mut _38: std::option::Option<std::fmt::Arguments<'_>>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
    let mut _40: *const [Pair; 2];       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
    scope 1 {
    }
    scope 2 {
        debug iter => _12;               // in scope 2 at ui/for-loop-while/for-destruct.rs:6:16: 6:64
        let _17: &Pair;                  // in scope 2 at ui/for-loop-while/for-destruct.rs:6:9: 6:12
        scope 3 {
            debug elt => _17;            // in scope 3 at ui/for-loop-while/for-destruct.rs:6:9: 6:12
            let _25: &isize;             // in scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
            let _26: &isize;             // in scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
            let mut _39: &isize;         // in scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
            scope 4 {
                debug left_val => _25;   // in scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
                debug right_val => _26;  // in scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
                let _31: core::panicking::AssertKind; // in scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                scope 5 {
                    debug kind => _31;   // in scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                }
            }
        }
    }

    bb0: {
        _6 = const 32_usize;             // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
        _7 = const 8_usize;              // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
        _8 = alloc::alloc::exchange_malloc(move _6, move _7) -> bb1; // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
                                         // + literal: Const { ty: unsafe fn(usize, usize) -> *mut u8 {alloc::alloc::exchange_malloc}, val: Value(<ZST>) }
    }

    bb1: {
        _9 = ShallowInitBox(move _8, [Pair; 2]); // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
        _10 = Pair { x: const 10_isize, y: const 20_isize }; // scope 0 at ui/for-loop-while/for-destruct.rs:6:23: 6:42
        _11 = Pair { x: const 30_isize, y: const 0_isize }; // scope 0 at ui/for-loop-while/for-destruct.rs:6:44: 6:62
        _40 = (((_9.0: std::ptr::Unique<[Pair; 2]>).0: std::ptr::NonNull<[Pair; 2]>).0: *const [Pair; 2]); // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:37: 52:46
        (*_40) = [move _10, move _11];   // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:37: 52:46
        _5 = move _9;                    // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
        _4 = move _5 as std::boxed::Box<[Pair]> (Pointer(Unsize)); // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
        _3 = slice::<impl [Pair]>::into_vec::<std::alloc::Global>(move _4) -> bb2; // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:50:36: 53:10
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:50:36: 50:51
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: fn(Box<[Pair]>) -> Vec<Pair> {slice::<impl [Pair]>::into_vec::<std::alloc::Global>}, val: Value(<ZST>) }
    }

    bb2: {
        _2 = &_3;                        // scope 0 at ui/for-loop-while/for-destruct.rs:6:16: 6:64
        _1 = <&Vec<Pair> as IntoIterator>::into_iter(move _2) -> [return: bb3, unwind: bb12]; // scope 0 at ui/for-loop-while/for-destruct.rs:6:16: 6:64
                                         // mir::Constant
                                         // + span: ui/for-loop-while/for-destruct.rs:6:16: 6:64
                                         // + literal: Const { ty: fn(&Vec<Pair>) -> <&Vec<Pair> as IntoIterator>::IntoIter {<&Vec<Pair> as IntoIterator>::into_iter}, val: Value(<ZST>) }
    }

    bb3: {
        _12 = move _1;                   // scope 0 at ui/for-loop-while/for-destruct.rs:6:16: 6:64
        goto -> bb4;                     // scope 2 at ui/for-loop-while/for-destruct.rs:6:5: 8:6
    }

    bb4: {
        _15 = &mut _12;                  // scope 2 at ui/for-loop-while/for-destruct.rs:6:16: 6:64
        _14 = &mut (*_15);               // scope 2 at ui/for-loop-while/for-destruct.rs:6:16: 6:64
        _13 = <std::slice::Iter<'_, Pair> as Iterator>::next(move _14) -> [return: bb5, unwind: bb12]; // scope 2 at ui/for-loop-while/for-destruct.rs:6:16: 6:64
                                         // mir::Constant
                                         // + span: ui/for-loop-while/for-destruct.rs:6:16: 6:64
                                         // + literal: Const { ty: for<'a> fn(&'a mut std::slice::Iter<'_, Pair>) -> Option<<std::slice::Iter<'_, Pair> as Iterator>::Item> {<std::slice::Iter<'_, Pair> as Iterator>::next}, val: Value(<ZST>) }
    }

    bb5: {
        _16 = discriminant(_13);         // scope 2 at ui/for-loop-while/for-destruct.rs:6:16: 6:64
        switchInt(move _16) -> [0: bb8, 1: bb6, otherwise: bb7]; // scope 2 at ui/for-loop-while/for-destruct.rs:6:16: 6:64
    }

    bb6: {
        _17 = ((_13 as Some).0: &Pair);  // scope 2 at ui/for-loop-while/for-destruct.rs:6:9: 6:12
        _21 = ((*_17).0: isize);         // scope 3 at ui/for-loop-while/for-destruct.rs:7:20: 7:25
        _22 = ((*_17).1: isize);         // scope 3 at ui/for-loop-while/for-destruct.rs:7:28: 7:33
        _23 = CheckedAdd(_21, _22);      // scope 3 at ui/for-loop-while/for-destruct.rs:7:20: 7:33
        assert(!move (_23.1: bool), "attempt to compute `{} + {}`, which would overflow", move _21, move _22) -> [success: bb9, unwind: bb12]; // scope 3 at ui/for-loop-while/for-destruct.rs:7:20: 7:33
    }

    bb7: {
        unreachable;                     // scope 2 at ui/for-loop-while/for-destruct.rs:6:16: 6:64
    }

    bb8: {
        drop(_3) -> bb11;                // scope 0 at ui/for-loop-while/for-destruct.rs:8:5: 8:6
    }

    bb9: {
        _20 = move (_23.0: isize);       // scope 3 at ui/for-loop-while/for-destruct.rs:7:20: 7:33
        _19 = &_20;                      // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _39 = const _;                   // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // + literal: Const { ty: &isize, val: Unevaluated(main, [], Some(promoted[0])) }
        _24 = _39;                       // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _18 = (move _19, move _24);      // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _25 = (_18.0: &isize);           // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _26 = (_18.1: &isize);           // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _29 = (*_25);                    // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
        _30 = const 30_isize;            // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
        _28 = Eq(move _29, move _30);    // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
        _27 = Not(move _28);             // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
        switchInt(move _27) -> [0: bb4, otherwise: bb10]; // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    }

    bb10: {
        _31 = const core::panicking::AssertKind::Eq; // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _33 = const core::panicking::AssertKind::Eq; // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _35 = _25;                       // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _34 = _35;                       // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _37 = _26;                       // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _36 = _37;                       // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _38 = Option::<Arguments<'_>>::None; // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
        _32 = core::panicking::assert_failed::<isize, isize>(move _33, move _34, move _36, move _38) -> bb12; // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:53
                                         // + literal: Const { ty: for<'a, 'b, 'c> fn(core::panicking::AssertKind, &'a isize, &'b isize, Option<Arguments<'c>>) -> ! {core::panicking::assert_failed::<isize, isize>}, val: Value(<ZST>) }
    }

    bb11: {
        return;                          // scope 0 at ui/for-loop-while/for-destruct.rs:9:2: 9:2
    }

    bb12 (cleanup): {
        drop(_3) -> bb13;                // scope 0 at ui/for-loop-while/for-destruct.rs:8:5: 8:6
    }

    bb13 (cleanup): {
        resume;                          // scope 0 at ui/for-loop-while/for-destruct.rs:5:1: 9:2
    }
}

promoted[0] in main: &isize = {
    let mut _0: &isize;                  // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _1: isize;                   // in scope 0 at ui/for-loop-while/for-destruct.rs:7:35: 7:37

    bb0: {
        _1 = const 30_isize;             // scope 0 at ui/for-loop-while/for-destruct.rs:7:35: 7:37
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    }
}
