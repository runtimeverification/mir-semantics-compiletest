// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
fn main() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/for-loop-while/loop-break-cont.rs:2:15: 2:15
    let mut _1: usize;                   // in scope 0 at ui/for-loop-while/loop-break-cont.rs:3:7: 3:12
    let _2: ();                          // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:62
    let mut _3: std::fmt::Arguments<'_>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _4: &[&str];                 // in scope 0 at ui/for-loop-while/loop-break-cont.rs:5:14: 5:17
    let mut _5: &[&str; 1];              // in scope 0 at ui/for-loop-while/loop-break-cont.rs:5:14: 5:17
    let _6: &[&str; 1];                  // in scope 0 at ui/for-loop-while/loop-break-cont.rs:5:14: 5:17
    let mut _7: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _8: &[core::fmt::ArgumentV1<'_>; 0]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let _9: &[core::fmt::ArgumentV1<'_>; 0]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _10: (usize, bool);          // in scope 0 at ui/for-loop-while/loop-break-cont.rs:6:5: 6:17
    let mut _11: usize;                  // in scope 0 at ui/for-loop-while/loop-break-cont.rs:7:8: 7:9
    let mut _12: (&usize, &usize);       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _13: &usize;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let mut _14: &usize;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _17: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    let mut _18: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
    let mut _19: usize;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
    let mut _20: usize;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
    let _22: !;                          // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
    let mut _23: core::panicking::AssertKind; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
    let mut _24: &usize;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let _25: &usize;                     // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let mut _26: &usize;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let _27: &usize;                     // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let mut _28: std::option::Option<std::fmt::Arguments<'_>>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
    let mut _30: usize;                  // in scope 0 at ui/for-loop-while/loop-break-cont.rs:14:8: 14:9
    let _31: ();                         // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:62
    let mut _32: std::fmt::Arguments<'_>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _33: &[&str];                // in scope 0 at ui/for-loop-while/loop-break-cont.rs:17:14: 17:17
    let mut _34: &[&str; 1];             // in scope 0 at ui/for-loop-while/loop-break-cont.rs:17:14: 17:17
    let _35: &[&str; 1];                 // in scope 0 at ui/for-loop-while/loop-break-cont.rs:17:14: 17:17
    let mut _36: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _37: &[core::fmt::ArgumentV1<'_>; 0]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let _38: &[core::fmt::ArgumentV1<'_>; 0]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _39: (usize, bool);          // in scope 0 at ui/for-loop-while/loop-break-cont.rs:19:5: 19:17
    let mut _40: usize;                  // in scope 0 at ui/for-loop-while/loop-break-cont.rs:20:8: 20:19
    let mut _41: usize;                  // in scope 0 at ui/for-loop-while/loop-break-cont.rs:20:8: 20:9
    let mut _42: bool;                   // in scope 0 at ui/for-loop-while/loop-break-cont.rs:25:3: 25:20
    let mut _43: bool;                   // in scope 0 at ui/for-loop-while/loop-break-cont.rs:25:11: 25:19
    let mut _44: bool;                   // in scope 0 at ui/for-loop-while/loop-break-cont.rs:25:12: 25:19
    let mut _45: !;                      // in scope 0 at ui/for-loop-while/loop-break-cont.rs:25:3: 25:20
    let _46: ();                         // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:62
    let mut _47: std::fmt::Arguments<'_>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _48: &[&str];                // in scope 0 at ui/for-loop-while/loop-break-cont.rs:27:14: 27:17
    let mut _49: &[&str; 1];             // in scope 0 at ui/for-loop-while/loop-break-cont.rs:27:14: 27:17
    let _50: &[&str; 1];                 // in scope 0 at ui/for-loop-while/loop-break-cont.rs:27:14: 27:17
    let mut _51: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _52: &[core::fmt::ArgumentV1<'_>; 0]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let _53: &[core::fmt::ArgumentV1<'_>; 0]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _54: usize;                  // in scope 0 at ui/for-loop-while/loop-break-cont.rs:28:8: 28:9
    let mut _55: (usize, bool);          // in scope 0 at ui/for-loop-while/loop-break-cont.rs:32:5: 32:17
    let mut _56: usize;                  // in scope 0 at ui/for-loop-while/loop-break-cont.rs:33:8: 33:19
    let mut _57: usize;                  // in scope 0 at ui/for-loop-while/loop-break-cont.rs:33:8: 33:9
    let mut _58: bool;                   // in scope 0 at ui/for-loop-while/loop-break-cont.rs:38:3: 38:19
    let mut _59: bool;                   // in scope 0 at ui/for-loop-while/loop-break-cont.rs:38:11: 38:18
    let mut _60: !;                      // in scope 0 at ui/for-loop-while/loop-break-cont.rs:38:3: 38:19
    scope 1 {
        debug i => _1;                   // in scope 1 at ui/for-loop-while/loop-break-cont.rs:3:7: 3:12
        let _15: &usize;                 // in scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        let _16: &usize;                 // in scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        let mut _29: bool;               // in scope 1 at ui/for-loop-while/loop-break-cont.rs:12:7: 12:18
        let mut _65: &usize;             // in scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        let mut _66: &[core::fmt::ArgumentV1<'_>; 0]; // in scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        let mut _67: &[&str; 1];         // in scope 1 at ui/for-loop-while/loop-break-cont.rs:5:14: 5:17
        scope 2 {
            debug left_val => _15;       // in scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
            debug right_val => _16;      // in scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
            let _21: core::panicking::AssertKind; // in scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
            scope 3 {
                debug kind => _21;       // in scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
            }
        }
        scope 4 {
            debug is_even => _29;        // in scope 4 at ui/for-loop-while/loop-break-cont.rs:12:7: 12:18
            let mut _61: &[core::fmt::ArgumentV1<'_>; 0]; // in scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
            let mut _62: &[&str; 1];     // in scope 4 at ui/for-loop-while/loop-break-cont.rs:17:14: 17:17
            let mut _63: &[core::fmt::ArgumentV1<'_>; 0]; // in scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
            let mut _64: &[&str; 1];     // in scope 4 at ui/for-loop-while/loop-break-cont.rs:27:14: 27:17
        }
    }

    bb0: {
        _1 = const 0_usize;              // scope 0 at ui/for-loop-while/loop-break-cont.rs:3:15: 3:22
        goto -> bb1;                     // scope 1 at ui/for-loop-while/loop-break-cont.rs:4:3: 10:4
    }

    bb1: {
        _67 = const _;                   // scope 1 at ui/for-loop-while/loop-break-cont.rs:5:14: 5:17
                                         // mir::Constant
                                         // + span: ui/for-loop-while/loop-break-cont.rs:5:14: 5:17
                                         // + literal: Const { ty: &[&str; 1], val: Unevaluated(main, [], Some(promoted[6])) }
        _6 = _67;                        // scope 1 at ui/for-loop-while/loop-break-cont.rs:5:14: 5:17
        _5 = _6;                         // scope 1 at ui/for-loop-while/loop-break-cont.rs:5:14: 5:17
        _4 = move _5 as &[&str] (Pointer(Unsize)); // scope 1 at ui/for-loop-while/loop-break-cont.rs:5:14: 5:17
        _66 = const _;                   // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // + literal: Const { ty: &[core::fmt::ArgumentV1<'_>; 0], val: Unevaluated(main, [], Some(promoted[5])) }
        _9 = _66;                        // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _8 = _9;                         // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _7 = move _8 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _3 = Arguments::<'_>::new_v1(move _4, move _7) -> bb2; // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb2: {
        _2 = _print(move _3) -> bb3;     // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:62
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:27
                                         // + literal: Const { ty: for<'a> fn(Arguments<'a>) {_print}, val: Value(<ZST>) }
    }

    bb3: {
        _10 = CheckedAdd(_1, const 1_usize); // scope 1 at ui/for-loop-while/loop-break-cont.rs:6:5: 6:17
        assert(!move (_10.1: bool), "attempt to compute `{} + {}`, which would overflow", _1, const 1_usize) -> bb4; // scope 1 at ui/for-loop-while/loop-break-cont.rs:6:5: 6:17
    }

    bb4: {
        _1 = move (_10.0: usize);        // scope 1 at ui/for-loop-while/loop-break-cont.rs:6:5: 6:17
        _11 = _1;                        // scope 1 at ui/for-loop-while/loop-break-cont.rs:7:8: 7:9
        switchInt(move _11) -> [10: bb5, otherwise: bb1]; // scope 1 at ui/for-loop-while/loop-break-cont.rs:7:8: 7:21
    }

    bb5: {
        _13 = &_1;                       // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _65 = const _;                   // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // + literal: Const { ty: &usize, val: Unevaluated(main, [], Some(promoted[4])) }
        _14 = _65;                       // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _12 = (move _13, move _14);      // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _15 = (_12.0: &usize);           // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _16 = (_12.1: &usize);           // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _19 = (*_15);                    // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
        _20 = const 10_usize;            // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
        _18 = Eq(move _19, move _20);    // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
        _17 = Not(move _18);             // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
        switchInt(move _17) -> [0: bb7, otherwise: bb6]; // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    }

    bb6: {
        _21 = const core::panicking::AssertKind::Eq; // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _23 = const core::panicking::AssertKind::Eq; // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _25 = _15;                       // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _24 = _25;                       // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _27 = _16;                       // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _26 = _27;                       // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _28 = Option::<Arguments<'_>>::None; // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
        _22 = core::panicking::assert_failed::<usize, usize>(move _23, move _24, move _26, move _28); // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:53
                                         // + literal: Const { ty: for<'a, 'b, 'c> fn(core::panicking::AssertKind, &'a usize, &'b usize, Option<Arguments<'c>>) -> ! {core::panicking::assert_failed::<usize, usize>}, val: Value(<ZST>) }
    }

    bb7: {
        _29 = const false;               // scope 1 at ui/for-loop-while/loop-break-cont.rs:12:21: 12:26
        goto -> bb8;                     // scope 4 at ui/for-loop-while/loop-break-cont.rs:13:3: 24:4
    }

    bb8: {
        _30 = _1;                        // scope 4 at ui/for-loop-while/loop-break-cont.rs:14:8: 14:9
        switchInt(move _30) -> [21: bb9, otherwise: bb10]; // scope 4 at ui/for-loop-while/loop-break-cont.rs:14:8: 14:21
    }

    bb9: {
        _44 = _29;                       // scope 4 at ui/for-loop-while/loop-break-cont.rs:25:12: 25:19
        _43 = Not(move _44);             // scope 4 at ui/for-loop-while/loop-break-cont.rs:25:11: 25:19
        _42 = Not(move _43);             // scope 4 at ui/for-loop-while/loop-break-cont.rs:25:3: 25:20
        switchInt(move _42) -> [0: bb16, otherwise: bb15]; // scope 4 at ui/for-loop-while/loop-break-cont.rs:25:3: 25:20
    }

    bb10: {
        _62 = const _;                   // scope 4 at ui/for-loop-while/loop-break-cont.rs:17:14: 17:17
                                         // mir::Constant
                                         // + span: ui/for-loop-while/loop-break-cont.rs:17:14: 17:17
                                         // + literal: Const { ty: &[&str; 1], val: Unevaluated(main, [], Some(promoted[1])) }
        _35 = _62;                       // scope 4 at ui/for-loop-while/loop-break-cont.rs:17:14: 17:17
        _34 = _35;                       // scope 4 at ui/for-loop-while/loop-break-cont.rs:17:14: 17:17
        _33 = move _34 as &[&str] (Pointer(Unsize)); // scope 4 at ui/for-loop-while/loop-break-cont.rs:17:14: 17:17
        _61 = const _;                   // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // + literal: Const { ty: &[core::fmt::ArgumentV1<'_>; 0], val: Unevaluated(main, [], Some(promoted[0])) }
        _38 = _61;                       // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _37 = _38;                       // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _36 = move _37 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _32 = Arguments::<'_>::new_v1(move _33, move _36) -> bb11; // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // + user_ty: UserType(1)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb11: {
        _31 = _print(move _32) -> bb12;  // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:62
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:27
                                         // + literal: Const { ty: for<'a> fn(Arguments<'a>) {_print}, val: Value(<ZST>) }
    }

    bb12: {
        _29 = const false;               // scope 4 at ui/for-loop-while/loop-break-cont.rs:18:5: 18:20
        _39 = CheckedAdd(_1, const 1_usize); // scope 4 at ui/for-loop-while/loop-break-cont.rs:19:5: 19:17
        assert(!move (_39.1: bool), "attempt to compute `{} + {}`, which would overflow", _1, const 1_usize) -> bb13; // scope 4 at ui/for-loop-while/loop-break-cont.rs:19:5: 19:17
    }

    bb13: {
        _1 = move (_39.0: usize);        // scope 4 at ui/for-loop-while/loop-break-cont.rs:19:5: 19:17
        _41 = _1;                        // scope 4 at ui/for-loop-while/loop-break-cont.rs:20:8: 20:9
        _40 = Rem(move _41, const 2_usize); // scope 4 at ui/for-loop-while/loop-break-cont.rs:20:8: 20:19
        switchInt(move _40) -> [0: bb14, otherwise: bb8]; // scope 4 at ui/for-loop-while/loop-break-cont.rs:20:8: 20:30
    }

    bb14: {
        _29 = const true;                // scope 4 at ui/for-loop-while/loop-break-cont.rs:23:5: 23:19
        goto -> bb8;                     // scope 4 at ui/for-loop-while/loop-break-cont.rs:13:3: 24:4
    }

    bb15: {
        _45 = core::panicking::panic(const "assertion failed: !is_even"); // scope 4 at ui/for-loop-while/loop-break-cont.rs:25:3: 25:20
                                         // mir::Constant
                                         // + span: ui/for-loop-while/loop-break-cont.rs:25:3: 25:20
                                         // + literal: Const { ty: fn(&'static str) -> ! {core::panicking::panic}, val: Value(<ZST>) }
                                         // mir::Constant
                                         // + span: no-location
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
    }

    bb16: {
        _64 = const _;                   // scope 4 at ui/for-loop-while/loop-break-cont.rs:27:14: 27:17
                                         // mir::Constant
                                         // + span: ui/for-loop-while/loop-break-cont.rs:27:14: 27:17
                                         // + literal: Const { ty: &[&str; 1], val: Unevaluated(main, [], Some(promoted[3])) }
        _50 = _64;                       // scope 4 at ui/for-loop-while/loop-break-cont.rs:27:14: 27:17
        _49 = _50;                       // scope 4 at ui/for-loop-while/loop-break-cont.rs:27:14: 27:17
        _48 = move _49 as &[&str] (Pointer(Unsize)); // scope 4 at ui/for-loop-while/loop-break-cont.rs:27:14: 27:17
        _63 = const _;                   // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // + literal: Const { ty: &[core::fmt::ArgumentV1<'_>; 0], val: Unevaluated(main, [], Some(promoted[2])) }
        _53 = _63;                       // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _52 = _53;                       // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _51 = move _52 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _47 = Arguments::<'_>::new_v1(move _48, move _51) -> bb17; // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // + user_ty: UserType(2)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb17: {
        _46 = _print(move _47) -> bb18;  // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:62
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:27
                                         // + literal: Const { ty: for<'a> fn(Arguments<'a>) {_print}, val: Value(<ZST>) }
    }

    bb18: {
        _54 = _1;                        // scope 4 at ui/for-loop-while/loop-break-cont.rs:28:8: 28:9
        switchInt(move _54) -> [22: bb19, otherwise: bb20]; // scope 4 at ui/for-loop-while/loop-break-cont.rs:28:8: 28:21
    }

    bb19: {
        _59 = _29;                       // scope 4 at ui/for-loop-while/loop-break-cont.rs:38:11: 38:18
        _58 = Not(move _59);             // scope 4 at ui/for-loop-while/loop-break-cont.rs:38:3: 38:19
        switchInt(move _58) -> [0: bb24, otherwise: bb23]; // scope 4 at ui/for-loop-while/loop-break-cont.rs:38:3: 38:19
    }

    bb20: {
        _29 = const false;               // scope 4 at ui/for-loop-while/loop-break-cont.rs:31:5: 31:20
        _55 = CheckedAdd(_1, const 1_usize); // scope 4 at ui/for-loop-while/loop-break-cont.rs:32:5: 32:17
        assert(!move (_55.1: bool), "attempt to compute `{} + {}`, which would overflow", _1, const 1_usize) -> bb21; // scope 4 at ui/for-loop-while/loop-break-cont.rs:32:5: 32:17
    }

    bb21: {
        _1 = move (_55.0: usize);        // scope 4 at ui/for-loop-while/loop-break-cont.rs:32:5: 32:17
        _57 = _1;                        // scope 4 at ui/for-loop-while/loop-break-cont.rs:33:8: 33:9
        _56 = Rem(move _57, const 2_usize); // scope 4 at ui/for-loop-while/loop-break-cont.rs:33:8: 33:19
        switchInt(move _56) -> [0: bb22, otherwise: bb16]; // scope 4 at ui/for-loop-while/loop-break-cont.rs:33:8: 33:30
    }

    bb22: {
        _29 = const true;                // scope 4 at ui/for-loop-while/loop-break-cont.rs:36:5: 36:19
        goto -> bb16;                    // scope 4 at ui/for-loop-while/loop-break-cont.rs:26:3: 37:4
    }

    bb23: {
        _60 = core::panicking::panic(const "assertion failed: is_even"); // scope 4 at ui/for-loop-while/loop-break-cont.rs:38:3: 38:19
                                         // mir::Constant
                                         // + span: ui/for-loop-while/loop-break-cont.rs:38:3: 38:19
                                         // + literal: Const { ty: fn(&'static str) -> ! {core::panicking::panic}, val: Value(<ZST>) }
                                         // mir::Constant
                                         // + span: no-location
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
    }

    bb24: {
        return;                          // scope 0 at ui/for-loop-while/loop-break-cont.rs:39:2: 39:2
    }
}

promoted[0] in main: &[core::fmt::ArgumentV1<'_>; 0] = {
    let mut _0: &[core::fmt::ArgumentV1<'_>; 0]; // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _1: [core::fmt::ArgumentV1<'_>; 0]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61

    bb0: {
        _1 = [];                         // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    }
}

promoted[1] in main: &[&str; 1] = {
    let mut _0: &[&str; 1];              // return place in scope 0 at ui/for-loop-while/loop-break-cont.rs:17:14: 17:17
    let mut _1: [&str; 1];               // in scope 0 at ui/for-loop-while/loop-break-cont.rs:17:14: 17:17

    bb0: {
        _1 = [const "b\n"];              // scope 0 at ui/for-loop-while/loop-break-cont.rs:17:14: 17:17
                                         // mir::Constant
                                         // + span: ui/for-loop-while/loop-break-cont.rs:17:14: 17:17
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at ui/for-loop-while/loop-break-cont.rs:17:14: 17:17
        return;                          // scope 0 at ui/for-loop-while/loop-break-cont.rs:17:14: 17:17
    }
}

promoted[2] in main: &[core::fmt::ArgumentV1<'_>; 0] = {
    let mut _0: &[core::fmt::ArgumentV1<'_>; 0]; // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _1: [core::fmt::ArgumentV1<'_>; 0]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61

    bb0: {
        _1 = [];                         // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    }
}

promoted[3] in main: &[&str; 1] = {
    let mut _0: &[&str; 1];              // return place in scope 0 at ui/for-loop-while/loop-break-cont.rs:27:14: 27:17
    let mut _1: [&str; 1];               // in scope 0 at ui/for-loop-while/loop-break-cont.rs:27:14: 27:17

    bb0: {
        _1 = [const "c\n"];              // scope 0 at ui/for-loop-while/loop-break-cont.rs:27:14: 27:17
                                         // mir::Constant
                                         // + span: ui/for-loop-while/loop-break-cont.rs:27:14: 27:17
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at ui/for-loop-while/loop-break-cont.rs:27:14: 27:17
        return;                          // scope 0 at ui/for-loop-while/loop-break-cont.rs:27:14: 27:17
    }
}

promoted[4] in main: &usize = {
    let mut _0: &usize;                  // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _1: usize;                   // in scope 0 at ui/for-loop-while/loop-break-cont.rs:11:17: 11:25

    bb0: {
        _1 = const 10_usize;             // scope 0 at ui/for-loop-while/loop-break-cont.rs:11:17: 11:25
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    }
}

promoted[5] in main: &[core::fmt::ArgumentV1<'_>; 0] = {
    let mut _0: &[core::fmt::ArgumentV1<'_>; 0]; // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _1: [core::fmt::ArgumentV1<'_>; 0]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61

    bb0: {
        _1 = [];                         // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    }
}

promoted[6] in main: &[&str; 1] = {
    let mut _0: &[&str; 1];              // return place in scope 0 at ui/for-loop-while/loop-break-cont.rs:5:14: 5:17
    let mut _1: [&str; 1];               // in scope 0 at ui/for-loop-while/loop-break-cont.rs:5:14: 5:17

    bb0: {
        _1 = [const "a\n"];              // scope 0 at ui/for-loop-while/loop-break-cont.rs:5:14: 5:17
                                         // mir::Constant
                                         // + span: ui/for-loop-while/loop-break-cont.rs:5:14: 5:17
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at ui/for-loop-while/loop-break-cont.rs:5:14: 5:17
        return;                          // scope 0 at ui/for-loop-while/loop-break-cont.rs:5:14: 5:17
    }
}
