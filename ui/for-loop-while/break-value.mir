// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
fn int_id(_1: isize) -> isize {
    debug x => _1;                       // in scope 0 at ui/for-loop-while/break-value.rs:5:11: 5:12
    let mut _0: isize;                   // return place in scope 0 at ui/for-loop-while/break-value.rs:5:24: 5:29

    bb0: {
        _0 = _1;                         // scope 0 at ui/for-loop-while/break-value.rs:5:39: 5:40
        return;                          // scope 0 at ui/for-loop-while/break-value.rs:5:43: 5:43
    }
}

fn main() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/for-loop-while/break-value.rs:7:15: 7:15

    bb0: {
        return;                          // scope 0 at ui/for-loop-while/break-value.rs:7:42: 7:42
    }
}
