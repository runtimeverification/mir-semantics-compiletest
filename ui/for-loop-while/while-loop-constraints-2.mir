// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
fn main() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/for-loop-while/while-loop-constraints-2.rs:5:15: 5:15
    let mut _1: isize;                   // in scope 0 at ui/for-loop-while/while-loop-constraints-2.rs:6:9: 6:14
    let mut _4: bool;                    // in scope 0 at ui/for-loop-while/while-loop-constraints-2.rs:9:11: 9:17
    let mut _5: isize;                   // in scope 0 at ui/for-loop-while/while-loop-constraints-2.rs:9:11: 9:12
    let mut _6: (isize, bool);           // in scope 0 at ui/for-loop-while/while-loop-constraints-2.rs:10:9: 10:15
    let _7: ();                          // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:62
    let mut _8: std::fmt::Arguments<'_>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _9: &[&str];                 // in scope 0 at ui/for-loop-while/while-loop-constraints-2.rs:12:18: 12:22
    let mut _10: &[&str; 2];             // in scope 0 at ui/for-loop-while/while-loop-constraints-2.rs:12:18: 12:22
    let _11: &[&str; 2];                 // in scope 0 at ui/for-loop-while/while-loop-constraints-2.rs:12:18: 12:22
    let mut _12: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _13: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let _14: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let _15: [core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _16: core::fmt::ArgumentV1<'_>; // in scope 0 at ui/for-loop-while/while-loop-constraints-2.rs:12:24: 12:25
    let mut _17: &isize;                 // in scope 0 at ui/for-loop-while/while-loop-constraints-2.rs:12:24: 12:25
    let _18: &isize;                     // in scope 0 at ui/for-loop-while/while-loop-constraints-2.rs:12:24: 12:25
    let mut _19: bool;                   // in scope 0 at ui/for-loop-while/while-loop-constraints-2.rs:14:5: 14:34
    let mut _20: bool;                   // in scope 0 at ui/for-loop-while/while-loop-constraints-2.rs:14:13: 14:33
    let mut _21: isize;                  // in scope 0 at ui/for-loop-while/while-loop-constraints-2.rs:14:14: 14:15
    let mut _22: bool;                   // in scope 0 at ui/for-loop-while/while-loop-constraints-2.rs:14:25: 14:32
    let mut _23: isize;                  // in scope 0 at ui/for-loop-while/while-loop-constraints-2.rs:14:25: 14:26
    let mut _24: !;                      // in scope 0 at ui/for-loop-while/while-loop-constraints-2.rs:14:5: 14:34
    scope 1 {
        debug y => _1;                   // in scope 1 at ui/for-loop-while/while-loop-constraints-2.rs:6:9: 6:14
        let mut _2: isize;               // in scope 1 at ui/for-loop-while/while-loop-constraints-2.rs:7:9: 7:14
        scope 2 {
            debug z => _2;               // in scope 2 at ui/for-loop-while/while-loop-constraints-2.rs:7:9: 7:14
            let mut _3: isize;           // in scope 2 at ui/for-loop-while/while-loop-constraints-2.rs:8:9: 8:14
            scope 3 {
                debug x => _3;           // in scope 3 at ui/for-loop-while/while-loop-constraints-2.rs:8:9: 8:14
                let mut _25: &[&str; 2]; // in scope 3 at ui/for-loop-while/while-loop-constraints-2.rs:12:18: 12:22
            }
        }
    }

    bb0: {
        _1 = const 42_isize;             // scope 0 at ui/for-loop-while/while-loop-constraints-2.rs:6:24: 6:26
        _2 = const 42_isize;             // scope 1 at ui/for-loop-while/while-loop-constraints-2.rs:7:24: 7:26
        goto -> bb1;                     // scope 3 at ui/for-loop-while/while-loop-constraints-2.rs:9:5: 13:6
    }

    bb1: {
        _5 = _2;                         // scope 3 at ui/for-loop-while/while-loop-constraints-2.rs:9:11: 9:12
        _4 = Lt(move _5, const 50_isize); // scope 3 at ui/for-loop-while/while-loop-constraints-2.rs:9:11: 9:17
        switchInt(move _4) -> [0: bb6, otherwise: bb2]; // scope 3 at ui/for-loop-while/while-loop-constraints-2.rs:9:11: 9:17
    }

    bb2: {
        _6 = CheckedAdd(_2, const 1_isize); // scope 3 at ui/for-loop-while/while-loop-constraints-2.rs:10:9: 10:15
        assert(!move (_6.1: bool), "attempt to compute `{} + {}`, which would overflow", _2, const 1_isize) -> bb3; // scope 3 at ui/for-loop-while/while-loop-constraints-2.rs:10:9: 10:15
    }

    bb3: {
        _2 = move (_6.0: isize);         // scope 3 at ui/for-loop-while/while-loop-constraints-2.rs:10:9: 10:15
        _25 = const _;                   // scope 3 at ui/for-loop-while/while-loop-constraints-2.rs:12:18: 12:22
                                         // mir::Constant
                                         // + span: ui/for-loop-while/while-loop-constraints-2.rs:12:18: 12:22
                                         // + literal: Const { ty: &[&str; 2], val: Unevaluated(main, [], Some(promoted[0])) }
        _11 = _25;                       // scope 3 at ui/for-loop-while/while-loop-constraints-2.rs:12:18: 12:22
        _10 = _11;                       // scope 3 at ui/for-loop-while/while-loop-constraints-2.rs:12:18: 12:22
        _9 = move _10 as &[&str] (Pointer(Unsize)); // scope 3 at ui/for-loop-while/while-loop-constraints-2.rs:12:18: 12:22
        _18 = &_1;                       // scope 3 at ui/for-loop-while/while-loop-constraints-2.rs:12:24: 12:25
        _17 = _18;                       // scope 3 at ui/for-loop-while/while-loop-constraints-2.rs:12:24: 12:25
        _16 = core::fmt::ArgumentV1::<'_>::new_display::<isize>(move _17) -> bb4; // scope 3 at ui/for-loop-while/while-loop-constraints-2.rs:12:24: 12:25
                                         // mir::Constant
                                         // + span: ui/for-loop-while/while-loop-constraints-2.rs:12:24: 12:25
                                         // + user_ty: UserType(7)
                                         // + literal: Const { ty: for<'b> fn(&'b isize) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_display::<isize>}, val: Value(<ZST>) }
    }

    bb4: {
        _15 = [move _16];                // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _14 = &_15;                      // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _13 = _14;                       // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _12 = move _13 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _8 = Arguments::<'_>::new_v1(move _9, move _12) -> bb5; // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // + user_ty: UserType(6)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb5: {
        _7 = _print(move _8) -> bb1;     // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:62
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:27
                                         // + literal: Const { ty: for<'a> fn(Arguments<'a>) {_print}, val: Value(<ZST>) }
    }

    bb6: {
        _21 = _1;                        // scope 3 at ui/for-loop-while/while-loop-constraints-2.rs:14:14: 14:15
        switchInt(move _21) -> [42: bb8, otherwise: bb7]; // scope 3 at ui/for-loop-while/while-loop-constraints-2.rs:14:13: 14:33
    }

    bb7: {
        _20 = const false;               // scope 3 at ui/for-loop-while/while-loop-constraints-2.rs:14:13: 14:33
        goto -> bb9;                     // scope 3 at ui/for-loop-while/while-loop-constraints-2.rs:14:13: 14:33
    }

    bb8: {
        _23 = _2;                        // scope 3 at ui/for-loop-while/while-loop-constraints-2.rs:14:25: 14:26
        _22 = Eq(move _23, const 50_isize); // scope 3 at ui/for-loop-while/while-loop-constraints-2.rs:14:25: 14:32
        _20 = move _22;                  // scope 3 at ui/for-loop-while/while-loop-constraints-2.rs:14:13: 14:33
        goto -> bb9;                     // scope 3 at ui/for-loop-while/while-loop-constraints-2.rs:14:13: 14:33
    }

    bb9: {
        _19 = Not(move _20);             // scope 3 at ui/for-loop-while/while-loop-constraints-2.rs:14:5: 14:34
        switchInt(move _19) -> [0: bb11, otherwise: bb10]; // scope 3 at ui/for-loop-while/while-loop-constraints-2.rs:14:5: 14:34
    }

    bb10: {
        _24 = core::panicking::panic(const "assertion failed: (y == 42 && z == 50)"); // scope 3 at ui/for-loop-while/while-loop-constraints-2.rs:14:5: 14:34
                                         // mir::Constant
                                         // + span: ui/for-loop-while/while-loop-constraints-2.rs:14:5: 14:34
                                         // + literal: Const { ty: fn(&'static str) -> ! {core::panicking::panic}, val: Value(<ZST>) }
                                         // mir::Constant
                                         // + span: no-location
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
    }

    bb11: {
        return;                          // scope 0 at ui/for-loop-while/while-loop-constraints-2.rs:15:2: 15:2
    }
}

promoted[0] in main: &[&str; 2] = {
    let mut _0: &[&str; 2];              // return place in scope 0 at ui/for-loop-while/while-loop-constraints-2.rs:12:18: 12:22
    let mut _1: [&str; 2];               // in scope 0 at ui/for-loop-while/while-loop-constraints-2.rs:12:18: 12:22

    bb0: {
        _1 = [const "", const "\n"];     // scope 0 at ui/for-loop-while/while-loop-constraints-2.rs:12:18: 12:22
                                         // mir::Constant
                                         // + span: ui/for-loop-while/while-loop-constraints-2.rs:12:18: 12:22
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
                                         // mir::Constant
                                         // + span: ui/for-loop-while/while-loop-constraints-2.rs:12:18: 12:22
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at ui/for-loop-while/while-loop-constraints-2.rs:12:18: 12:22
        return;                          // scope 0 at ui/for-loop-while/while-loop-constraints-2.rs:12:18: 12:22
    }
}
