// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
fn main() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/cast/issue-84213_fixed.rs:7:11: 7:11
    let mut _1: Something;               // in scope 0 at ui/cast/issue-84213_fixed.rs:8:9: 8:22
    let _3: &Something;                  // in scope 0 at ui/cast/issue-84213_fixed.rs:11:33: 11:43
    let mut _5: &mut Something;          // in scope 0 at ui/cast/issue-84213_fixed.rs:14:37: 14:51
    scope 1 {
        debug something => _1;           // in scope 1 at ui/cast/issue-84213_fixed.rs:8:9: 8:22
        scope 2 {
            let _2: *const Something;    // in scope 2 at ui/cast/issue-84213_fixed.rs:11:9: 11:30
            scope 3 {
                debug _pointer_to_something => _2; // in scope 3 at ui/cast/issue-84213_fixed.rs:11:9: 11:30
                let _4: *mut Something;  // in scope 3 at ui/cast/issue-84213_fixed.rs:14:9: 14:34
                scope 4 {
                    debug _mut_pointer_to_something => _4; // in scope 4 at ui/cast/issue-84213_fixed.rs:14:9: 14:34
                }
            }
        }
    }

    bb0: {
        _1 = Something { field: const 1337_u32 }; // scope 0 at ui/cast/issue-84213_fixed.rs:8:25: 8:50
        _3 = &_1;                        // scope 2 at ui/cast/issue-84213_fixed.rs:11:33: 11:43
        _2 = &raw const (*_3);           // scope 2 at ui/cast/issue-84213_fixed.rs:11:33: 11:43
        _5 = &mut _1;                    // scope 3 at ui/cast/issue-84213_fixed.rs:14:37: 14:51
        _4 = &raw mut (*_5);             // scope 3 at ui/cast/issue-84213_fixed.rs:14:37: 14:51
        return;                          // scope 0 at ui/cast/issue-84213_fixed.rs:16:2: 16:2
    }
}
