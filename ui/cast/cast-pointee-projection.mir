// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
fn <impl at ui/cast/cast-pointee-projection.rs:11:1: 11:39>::into_raw(_1: *const <T as Tag<'_>>::Type) -> *mut <T as Tag<'_>>::Type {
    debug this => _1;                    // in scope 0 at ui/cast/cast-pointee-projection.rs:12:17: 12:21
    let mut _0: *mut <T as Tag<'_>>::Type; // return place in scope 0 at ui/cast/cast-pointee-projection.rs:13:9: 13:29
    let mut _2: *const <T as Tag<'_>>::Type; // in scope 0 at ui/cast/cast-pointee-projection.rs:13:9: 13:13

    bb0: {
        _2 = _1;                         // scope 0 at ui/cast/cast-pointee-projection.rs:13:9: 13:13
        _0 = move _2 as *mut <T as Tag<'_>>::Type (PtrToPtr); // scope 0 at ui/cast/cast-pointee-projection.rs:13:9: 13:29
        return;                          // scope 0 at ui/cast/cast-pointee-projection.rs:14:6: 14:6
    }
}

fn main() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/cast/cast-pointee-projection.rs:17:11: 17:11

    bb0: {
        return;                          // scope 0 at ui/cast/cast-pointee-projection.rs:17:13: 17:13
    }
}
