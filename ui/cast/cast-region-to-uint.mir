// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
fn main() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/cast/cast-region-to-uint.rs:3:15: 3:15
    let _1: isize;                       // in scope 0 at ui/cast/cast-region-to-uint.rs:4:9: 4:10
    let _2: ();                          // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:62
    let mut _3: std::fmt::Arguments<'_>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _4: &[&str];                 // in scope 0 at ui/cast/cast-region-to-uint.rs:5:14: 5:23
    let mut _5: &[&str; 2];              // in scope 0 at ui/cast/cast-region-to-uint.rs:5:14: 5:23
    let _6: &[&str; 2];                  // in scope 0 at ui/cast/cast-region-to-uint.rs:5:14: 5:23
    let mut _7: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _8: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let _9: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let _10: [core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _11: core::fmt::ArgumentV1<'_>; // in scope 0 at ui/cast/cast-region-to-uint.rs:5:25: 5:54
    let mut _12: &usize;                 // in scope 0 at ui/cast/cast-region-to-uint.rs:5:25: 5:54
    let _13: &usize;                     // in scope 0 at ui/cast/cast-region-to-uint.rs:5:25: 5:54
    let _14: usize;                      // in scope 0 at ui/cast/cast-region-to-uint.rs:5:25: 5:54
    let mut _15: *const isize;           // in scope 0 at ui/cast/cast-region-to-uint.rs:5:26: 5:44
    let _16: &isize;                     // in scope 0 at ui/cast/cast-region-to-uint.rs:5:26: 5:28
    scope 1 {
        debug x => _1;                   // in scope 1 at ui/cast/cast-region-to-uint.rs:4:9: 4:10
        let mut _17: &[&str; 2];         // in scope 1 at ui/cast/cast-region-to-uint.rs:5:14: 5:23
    }

    bb0: {
        _1 = const 3_isize;              // scope 0 at ui/cast/cast-region-to-uint.rs:4:20: 4:21
        _17 = const _;                   // scope 1 at ui/cast/cast-region-to-uint.rs:5:14: 5:23
                                         // mir::Constant
                                         // + span: ui/cast/cast-region-to-uint.rs:5:14: 5:23
                                         // + literal: Const { ty: &[&str; 2], val: Unevaluated(main, [], Some(promoted[0])) }
        _6 = _17;                        // scope 1 at ui/cast/cast-region-to-uint.rs:5:14: 5:23
        _5 = _6;                         // scope 1 at ui/cast/cast-region-to-uint.rs:5:14: 5:23
        _4 = move _5 as &[&str] (Pointer(Unsize)); // scope 1 at ui/cast/cast-region-to-uint.rs:5:14: 5:23
        _16 = &_1;                       // scope 1 at ui/cast/cast-region-to-uint.rs:5:26: 5:28
        _15 = &raw const (*_16);         // scope 1 at ui/cast/cast-region-to-uint.rs:5:26: 5:28
        _14 = move _15 as usize (PointerExposeAddress); // scope 1 at ui/cast/cast-region-to-uint.rs:5:25: 5:54
        _13 = &_14;                      // scope 1 at ui/cast/cast-region-to-uint.rs:5:25: 5:54
        _12 = _13;                       // scope 1 at ui/cast/cast-region-to-uint.rs:5:25: 5:54
        _11 = core::fmt::ArgumentV1::<'_>::new_lower_hex::<usize>(move _12) -> bb1; // scope 1 at ui/cast/cast-region-to-uint.rs:5:25: 5:54
                                         // mir::Constant
                                         // + span: ui/cast/cast-region-to-uint.rs:5:25: 5:54
                                         // + user_ty: UserType(3)
                                         // + literal: Const { ty: for<'b> fn(&'b usize) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_lower_hex::<usize>}, val: Value(<ZST>) }
    }

    bb1: {
        _10 = [move _11];                // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _9 = &_10;                       // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _8 = _9;                         // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _7 = move _8 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _3 = Arguments::<'_>::new_v1(move _4, move _7) -> bb2; // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // + user_ty: UserType(2)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb2: {
        _2 = _print(move _3) -> bb3;     // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:62
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:27
                                         // + literal: Const { ty: for<'a> fn(Arguments<'a>) {_print}, val: Value(<ZST>) }
    }

    bb3: {
        return;                          // scope 0 at ui/cast/cast-region-to-uint.rs:6:2: 6:2
    }
}

promoted[0] in main: &[&str; 2] = {
    let mut _0: &[&str; 2];              // return place in scope 0 at ui/cast/cast-region-to-uint.rs:5:14: 5:23
    let mut _1: [&str; 2];               // in scope 0 at ui/cast/cast-region-to-uint.rs:5:14: 5:23

    bb0: {
        _1 = [const "&x=", const "\n"];  // scope 0 at ui/cast/cast-region-to-uint.rs:5:14: 5:23
                                         // mir::Constant
                                         // + span: ui/cast/cast-region-to-uint.rs:5:14: 5:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
                                         // mir::Constant
                                         // + span: ui/cast/cast-region-to-uint.rs:5:14: 5:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at ui/cast/cast-region-to-uint.rs:5:14: 5:23
        return;                          // scope 0 at ui/cast/cast-region-to-uint.rs:5:14: 5:23
    }
}
