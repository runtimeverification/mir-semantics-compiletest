// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
fn main() -> () {
    let mut _0: ();
    let _1: *const std::string::String;
    let _2: ();
    let mut _3: std::fmt::Arguments<'_>;
    let mut _4: &[&str];
    let mut _5: &[core::fmt::rt::Argument<'_>];
    let _6: &[core::fmt::rt::Argument<'_>; 1];
    let _7: [core::fmt::rt::Argument<'_>; 1];
    let mut _8: core::fmt::rt::Argument<'_>;
    let _9: &isize;
    let _10: isize;
    let _11: ();
    let mut _12: std::fmt::Arguments<'_>;
    let mut _13: &[&str];
    let mut _14: &[core::fmt::rt::Argument<'_>];
    let _15: &[core::fmt::rt::Argument<'_>; 1];
    let _16: [core::fmt::rt::Argument<'_>; 1];
    let mut _17: core::fmt::rt::Argument<'_>;
    let _18: &usize;
    let _19: usize;
    let _20: ();
    let mut _21: std::fmt::Arguments<'_>;
    let mut _22: &[&str];
    let mut _23: &[core::fmt::rt::Argument<'_>];
    let _24: &[core::fmt::rt::Argument<'_>; 1];
    let _25: [core::fmt::rt::Argument<'_>; 1];
    let mut _26: core::fmt::rt::Argument<'_>;
    let _27: &i8;
    let _28: i8;
    let _29: ();
    let mut _30: std::fmt::Arguments<'_>;
    let mut _31: &[&str];
    let mut _32: &[core::fmt::rt::Argument<'_>];
    let _33: &[core::fmt::rt::Argument<'_>; 1];
    let _34: [core::fmt::rt::Argument<'_>; 1];
    let mut _35: core::fmt::rt::Argument<'_>;
    let _36: &i16;
    let _37: i16;
    let _38: ();
    let mut _39: std::fmt::Arguments<'_>;
    let mut _40: &[&str];
    let mut _41: &[core::fmt::rt::Argument<'_>];
    let _42: &[core::fmt::rt::Argument<'_>; 1];
    let _43: [core::fmt::rt::Argument<'_>; 1];
    let mut _44: core::fmt::rt::Argument<'_>;
    let _45: &i32;
    let _46: i32;
    let _47: ();
    let mut _48: std::fmt::Arguments<'_>;
    let mut _49: &[&str];
    let mut _50: &[core::fmt::rt::Argument<'_>];
    let _51: &[core::fmt::rt::Argument<'_>; 1];
    let _52: [core::fmt::rt::Argument<'_>; 1];
    let mut _53: core::fmt::rt::Argument<'_>;
    let _54: &i64;
    let _55: i64;
    let _56: ();
    let mut _57: std::fmt::Arguments<'_>;
    let mut _58: &[&str];
    let mut _59: &[core::fmt::rt::Argument<'_>];
    let _60: &[core::fmt::rt::Argument<'_>; 1];
    let _61: [core::fmt::rt::Argument<'_>; 1];
    let mut _62: core::fmt::rt::Argument<'_>;
    let _63: &u8;
    let _64: u8;
    let _65: ();
    let mut _66: std::fmt::Arguments<'_>;
    let mut _67: &[&str];
    let mut _68: &[core::fmt::rt::Argument<'_>];
    let _69: &[core::fmt::rt::Argument<'_>; 1];
    let _70: [core::fmt::rt::Argument<'_>; 1];
    let mut _71: core::fmt::rt::Argument<'_>;
    let _72: &u16;
    let _73: u16;
    let _74: ();
    let mut _75: std::fmt::Arguments<'_>;
    let mut _76: &[&str];
    let mut _77: &[core::fmt::rt::Argument<'_>];
    let _78: &[core::fmt::rt::Argument<'_>; 1];
    let _79: [core::fmt::rt::Argument<'_>; 1];
    let mut _80: core::fmt::rt::Argument<'_>;
    let _81: &u32;
    let _82: u32;
    let _83: ();
    let mut _84: std::fmt::Arguments<'_>;
    let mut _85: &[&str];
    let mut _86: &[core::fmt::rt::Argument<'_>];
    let _87: &[core::fmt::rt::Argument<'_>; 1];
    let _88: [core::fmt::rt::Argument<'_>; 1];
    let mut _89: core::fmt::rt::Argument<'_>;
    let _90: &u64;
    let _91: u64;
    let _92: ();
    let mut _93: std::fmt::Arguments<'_>;
    let mut _94: &[&str];
    let mut _95: &[core::fmt::rt::Argument<'_>];
    let _96: &[core::fmt::rt::Argument<'_>; 1];
    let _97: [core::fmt::rt::Argument<'_>; 1];
    let mut _98: core::fmt::rt::Argument<'_>;
    let _99: ();
    let mut _100: std::fmt::Arguments<'_>;
    let mut _101: &[&str];
    let mut _102: &[core::fmt::rt::Argument<'_>];
    let _103: &[core::fmt::rt::Argument<'_>; 1];
    let _104: [core::fmt::rt::Argument<'_>; 1];
    let mut _105: core::fmt::rt::Argument<'_>;
    let _106: ();
    let mut _107: std::fmt::Arguments<'_>;
    let mut _108: &[&str];
    let mut _109: &[core::fmt::rt::Argument<'_>];
    let _110: &[core::fmt::rt::Argument<'_>; 1];
    let _111: [core::fmt::rt::Argument<'_>; 1];
    let mut _112: core::fmt::rt::Argument<'_>;
    let _113: ();
    let mut _114: std::fmt::Arguments<'_>;
    let mut _115: &[&str];
    let mut _116: &[core::fmt::rt::Argument<'_>];
    let _117: &[core::fmt::rt::Argument<'_>; 1];
    let _118: [core::fmt::rt::Argument<'_>; 1];
    let mut _119: core::fmt::rt::Argument<'_>;
    let _120: ();
    let mut _121: std::fmt::Arguments<'_>;
    let mut _122: &[&str];
    let mut _123: &[core::fmt::rt::Argument<'_>];
    let _124: &[core::fmt::rt::Argument<'_>; 1];
    let _125: [core::fmt::rt::Argument<'_>; 1];
    let mut _126: core::fmt::rt::Argument<'_>;
    let _127: ();
    let mut _128: std::fmt::Arguments<'_>;
    let mut _129: &[&str];
    let mut _130: &[core::fmt::rt::Argument<'_>];
    let _131: &[core::fmt::rt::Argument<'_>; 1];
    let _132: [core::fmt::rt::Argument<'_>; 1];
    let mut _133: core::fmt::rt::Argument<'_>;
    let _134: ();
    let mut _135: std::fmt::Arguments<'_>;
    let mut _136: &[&str];
    let mut _137: &[core::fmt::rt::Argument<'_>];
    let _138: &[core::fmt::rt::Argument<'_>; 1];
    let _139: [core::fmt::rt::Argument<'_>; 1];
    let mut _140: core::fmt::rt::Argument<'_>;
    let _141: ();
    let mut _142: std::fmt::Arguments<'_>;
    let mut _143: &[&str];
    let mut _144: &[core::fmt::rt::Argument<'_>];
    let _145: &[core::fmt::rt::Argument<'_>; 1];
    let _146: [core::fmt::rt::Argument<'_>; 1];
    let mut _147: core::fmt::rt::Argument<'_>;
    let _148: ();
    let mut _149: std::fmt::Arguments<'_>;
    let mut _150: &[&str];
    let mut _151: &[core::fmt::rt::Argument<'_>];
    let _152: &[core::fmt::rt::Argument<'_>; 1];
    let _153: [core::fmt::rt::Argument<'_>; 1];
    let mut _154: core::fmt::rt::Argument<'_>;
    let _155: ();
    let mut _156: std::fmt::Arguments<'_>;
    let mut _157: &[&str];
    let mut _158: &[core::fmt::rt::Argument<'_>];
    let _159: &[core::fmt::rt::Argument<'_>; 1];
    let _160: [core::fmt::rt::Argument<'_>; 1];
    let mut _161: core::fmt::rt::Argument<'_>;
    let _162: ();
    let mut _163: std::fmt::Arguments<'_>;
    let mut _164: &[&str];
    let mut _165: &[core::fmt::rt::Argument<'_>];
    let _166: &[core::fmt::rt::Argument<'_>; 1];
    let _167: [core::fmt::rt::Argument<'_>; 1];
    let mut _168: core::fmt::rt::Argument<'_>;
    let _169: ();
    let mut _170: std::fmt::Arguments<'_>;
    let mut _171: &[&str];
    let mut _172: &[core::fmt::rt::Argument<'_>];
    let _173: &[core::fmt::rt::Argument<'_>; 1];
    let _174: [core::fmt::rt::Argument<'_>; 1];
    let mut _175: core::fmt::rt::Argument<'_>;
    let _176: ();
    let mut _177: std::fmt::Arguments<'_>;
    let mut _178: &[&str];
    let mut _179: &[core::fmt::rt::Argument<'_>];
    let _180: &[core::fmt::rt::Argument<'_>; 1];
    let _181: [core::fmt::rt::Argument<'_>; 1];
    let mut _182: core::fmt::rt::Argument<'_>;
    let _183: ();
    let mut _184: std::fmt::Arguments<'_>;
    let mut _185: &[&str];
    let mut _186: &[core::fmt::rt::Argument<'_>];
    let _187: &[core::fmt::rt::Argument<'_>; 1];
    let _188: [core::fmt::rt::Argument<'_>; 1];
    let mut _189: core::fmt::rt::Argument<'_>;
    let _190: ();
    let mut _191: std::fmt::Arguments<'_>;
    let mut _192: &[&str];
    let mut _193: &[core::fmt::rt::Argument<'_>];
    let _194: &[core::fmt::rt::Argument<'_>; 1];
    let _195: [core::fmt::rt::Argument<'_>; 1];
    let mut _196: core::fmt::rt::Argument<'_>;
    let _197: ();
    let mut _198: std::fmt::Arguments<'_>;
    let mut _199: &[&str];
    let mut _200: &[core::fmt::rt::Argument<'_>];
    let _201: &[core::fmt::rt::Argument<'_>; 1];
    let _202: [core::fmt::rt::Argument<'_>; 1];
    let mut _203: core::fmt::rt::Argument<'_>;
    let _204: ();
    let mut _205: std::fmt::Arguments<'_>;
    let mut _206: &[&str];
    let mut _207: &[core::fmt::rt::Argument<'_>];
    let _208: &[core::fmt::rt::Argument<'_>; 1];
    let _209: [core::fmt::rt::Argument<'_>; 1];
    let mut _210: core::fmt::rt::Argument<'_>;
    let _211: ();
    let mut _212: std::fmt::Arguments<'_>;
    let mut _213: &[&str];
    let mut _214: &[core::fmt::rt::Argument<'_>];
    let _215: &[core::fmt::rt::Argument<'_>; 1];
    let _216: [core::fmt::rt::Argument<'_>; 1];
    let mut _217: core::fmt::rt::Argument<'_>;
    let _218: ();
    let mut _219: std::fmt::Arguments<'_>;
    let mut _220: &[&str];
    let mut _221: &[core::fmt::rt::Argument<'_>];
    let _222: &[core::fmt::rt::Argument<'_>; 1];
    let _223: [core::fmt::rt::Argument<'_>; 1];
    let mut _224: core::fmt::rt::Argument<'_>;
    let _225: ();
    let mut _226: std::fmt::Arguments<'_>;
    let mut _227: &[&str];
    let mut _228: &[core::fmt::rt::Argument<'_>];
    let _229: &[core::fmt::rt::Argument<'_>; 1];
    let _230: [core::fmt::rt::Argument<'_>; 1];
    let mut _231: core::fmt::rt::Argument<'_>;
    let _232: ();
    let mut _233: std::fmt::Arguments<'_>;
    let mut _234: &[&str];
    let mut _235: &[core::fmt::rt::Argument<'_>];
    let _236: &[core::fmt::rt::Argument<'_>; 1];
    let _237: [core::fmt::rt::Argument<'_>; 1];
    let mut _238: core::fmt::rt::Argument<'_>;
    let _239: ();
    let mut _240: std::fmt::Arguments<'_>;
    let mut _241: &[&str];
    let mut _242: &[core::fmt::rt::Argument<'_>];
    let _243: &[core::fmt::rt::Argument<'_>; 1];
    let _244: [core::fmt::rt::Argument<'_>; 1];
    let mut _245: core::fmt::rt::Argument<'_>;
    let _246: ();
    let mut _247: std::fmt::Arguments<'_>;
    let mut _248: &[&str];
    let mut _249: &[core::fmt::rt::Argument<'_>];
    let _250: &[core::fmt::rt::Argument<'_>; 1];
    let _251: [core::fmt::rt::Argument<'_>; 1];
    let mut _252: core::fmt::rt::Argument<'_>;
    let _253: ();
    let mut _254: std::fmt::Arguments<'_>;
    let mut _255: &[&str];
    let mut _256: &[core::fmt::rt::Argument<'_>];
    let _257: &[core::fmt::rt::Argument<'_>; 1];
    let _258: [core::fmt::rt::Argument<'_>; 1];
    let mut _259: core::fmt::rt::Argument<'_>;
    let _260: ();
    let mut _261: std::fmt::Arguments<'_>;
    let mut _262: &[&str];
    let mut _263: &[core::fmt::rt::Argument<'_>];
    let _264: &[core::fmt::rt::Argument<'_>; 1];
    let _265: [core::fmt::rt::Argument<'_>; 1];
    let mut _266: core::fmt::rt::Argument<'_>;
    let _267: ();
    let mut _268: std::fmt::Arguments<'_>;
    let mut _269: &[&str];
    let mut _270: &[core::fmt::rt::Argument<'_>];
    let _271: &[core::fmt::rt::Argument<'_>; 1];
    let _272: [core::fmt::rt::Argument<'_>; 1];
    let mut _273: core::fmt::rt::Argument<'_>;
    let _274: ();
    let mut _275: std::fmt::Arguments<'_>;
    let mut _276: &[&str];
    let mut _277: &[core::fmt::rt::Argument<'_>];
    let _278: &[core::fmt::rt::Argument<'_>; 1];
    let _279: [core::fmt::rt::Argument<'_>; 1];
    let mut _280: core::fmt::rt::Argument<'_>;
    let _281: ();
    let mut _282: std::fmt::Arguments<'_>;
    let mut _283: &[&str];
    let mut _284: &[core::fmt::rt::Argument<'_>];
    let _285: &[core::fmt::rt::Argument<'_>; 1];
    let _286: [core::fmt::rt::Argument<'_>; 1];
    let mut _287: core::fmt::rt::Argument<'_>;
    let _288: ();
    let mut _289: std::fmt::Arguments<'_>;
    let mut _290: &[&str];
    let mut _291: &[core::fmt::rt::Argument<'_>];
    let _292: &[core::fmt::rt::Argument<'_>; 1];
    let _293: [core::fmt::rt::Argument<'_>; 1];
    let mut _294: core::fmt::rt::Argument<'_>;
    let _295: ();
    let mut _296: std::fmt::Arguments<'_>;
    let mut _297: &[&str];
    let mut _298: &[core::fmt::rt::Argument<'_>];
    let _299: &[core::fmt::rt::Argument<'_>; 1];
    let _300: [core::fmt::rt::Argument<'_>; 1];
    let mut _301: core::fmt::rt::Argument<'_>;
    let _302: ();
    let mut _303: std::fmt::Arguments<'_>;
    let mut _304: &[&str];
    let mut _305: &[core::fmt::rt::Argument<'_>];
    let _306: &[core::fmt::rt::Argument<'_>; 1];
    let _307: [core::fmt::rt::Argument<'_>; 1];
    let mut _308: core::fmt::rt::Argument<'_>;
    let _309: ();
    let mut _310: std::fmt::Arguments<'_>;
    let mut _311: &[&str];
    let mut _312: &[core::fmt::rt::Argument<'_>];
    let _313: &[core::fmt::rt::Argument<'_>; 1];
    let _314: [core::fmt::rt::Argument<'_>; 1];
    let mut _315: core::fmt::rt::Argument<'_>;
    let _316: ();
    let mut _317: std::fmt::Arguments<'_>;
    let mut _318: &[&str];
    let mut _319: &[core::fmt::rt::Argument<'_>];
    let _320: &[core::fmt::rt::Argument<'_>; 1];
    let _321: [core::fmt::rt::Argument<'_>; 1];
    let mut _322: core::fmt::rt::Argument<'_>;
    let _323: ();
    let mut _324: std::fmt::Arguments<'_>;
    let mut _325: &[&str];
    let mut _326: &[core::fmt::rt::Argument<'_>];
    let _327: &[core::fmt::rt::Argument<'_>; 1];
    let _328: [core::fmt::rt::Argument<'_>; 1];
    let mut _329: core::fmt::rt::Argument<'_>;
    let _330: ();
    let mut _331: std::fmt::Arguments<'_>;
    let mut _332: &[&str];
    let mut _333: &[core::fmt::rt::Argument<'_>];
    let _334: &[core::fmt::rt::Argument<'_>; 1];
    let _335: [core::fmt::rt::Argument<'_>; 1];
    let mut _336: core::fmt::rt::Argument<'_>;
    let _337: ();
    let mut _338: std::fmt::Arguments<'_>;
    let mut _339: &[&str];
    let mut _340: &[core::fmt::rt::Argument<'_>];
    let _341: &[core::fmt::rt::Argument<'_>; 1];
    let _342: [core::fmt::rt::Argument<'_>; 1];
    let mut _343: core::fmt::rt::Argument<'_>;
    let _344: ();
    let mut _345: std::fmt::Arguments<'_>;
    let mut _346: &[&str];
    let mut _347: &[core::fmt::rt::Argument<'_>];
    let _348: &[core::fmt::rt::Argument<'_>; 1];
    let _349: [core::fmt::rt::Argument<'_>; 1];
    let mut _350: core::fmt::rt::Argument<'_>;
    let _351: ();
    let mut _352: std::fmt::Arguments<'_>;
    let mut _353: &[&str];
    let mut _354: &[core::fmt::rt::Argument<'_>];
    let _355: &[core::fmt::rt::Argument<'_>; 1];
    let _356: [core::fmt::rt::Argument<'_>; 1];
    let mut _357: core::fmt::rt::Argument<'_>;
    let _358: ();
    let mut _359: std::fmt::Arguments<'_>;
    let mut _360: &[&str];
    let mut _361: &[core::fmt::rt::Argument<'_>];
    let _362: &[core::fmt::rt::Argument<'_>; 1];
    let _363: [core::fmt::rt::Argument<'_>; 1];
    let mut _364: core::fmt::rt::Argument<'_>;
    let _365: ();
    let mut _366: std::fmt::Arguments<'_>;
    let mut _367: &[&str];
    let mut _368: &[core::fmt::rt::Argument<'_>];
    let _369: &[core::fmt::rt::Argument<'_>; 1];
    let _370: [core::fmt::rt::Argument<'_>; 1];
    let mut _371: core::fmt::rt::Argument<'_>;
    let _372: ();
    let mut _373: std::fmt::Arguments<'_>;
    let mut _374: &[&str];
    let mut _375: &[core::fmt::rt::Argument<'_>];
    let _376: &[core::fmt::rt::Argument<'_>; 1];
    let _377: [core::fmt::rt::Argument<'_>; 1];
    let mut _378: core::fmt::rt::Argument<'_>;
    let _379: ();
    let mut _380: std::fmt::Arguments<'_>;
    let mut _381: &[&str];
    let mut _382: &[core::fmt::rt::Argument<'_>];
    let _383: &[core::fmt::rt::Argument<'_>; 1];
    let _384: [core::fmt::rt::Argument<'_>; 1];
    let mut _385: core::fmt::rt::Argument<'_>;
    let _386: ();
    let mut _387: std::fmt::Arguments<'_>;
    let mut _388: &[&str];
    let mut _389: &[core::fmt::rt::Argument<'_>];
    let _390: &[core::fmt::rt::Argument<'_>; 1];
    let _391: [core::fmt::rt::Argument<'_>; 1];
    let mut _392: core::fmt::rt::Argument<'_>;
    let _393: ();
    let mut _394: std::fmt::Arguments<'_>;
    let mut _395: &[&str];
    let mut _396: &[core::fmt::rt::Argument<'_>];
    let _397: &[core::fmt::rt::Argument<'_>; 1];
    let _398: [core::fmt::rt::Argument<'_>; 1];
    let mut _399: core::fmt::rt::Argument<'_>;
    let _400: ();
    let mut _401: std::fmt::Arguments<'_>;
    let mut _402: &[&str];
    let mut _403: &[core::fmt::rt::Argument<'_>];
    let _404: &[core::fmt::rt::Argument<'_>; 1];
    let _405: [core::fmt::rt::Argument<'_>; 1];
    let mut _406: core::fmt::rt::Argument<'_>;
    let _407: ();
    let mut _408: std::fmt::Arguments<'_>;
    let mut _409: &[&str];
    let mut _410: &[core::fmt::rt::Argument<'_>];
    let _411: &[core::fmt::rt::Argument<'_>; 1];
    let _412: [core::fmt::rt::Argument<'_>; 1];
    let mut _413: core::fmt::rt::Argument<'_>;
    let _414: ();
    let mut _415: std::fmt::Arguments<'_>;
    let mut _416: &[&str];
    let mut _417: &[core::fmt::rt::Argument<'_>];
    let _418: &[core::fmt::rt::Argument<'_>; 1];
    let _419: [core::fmt::rt::Argument<'_>; 1];
    let mut _420: core::fmt::rt::Argument<'_>;
    let _421: ();
    let mut _422: std::fmt::Arguments<'_>;
    let mut _423: &[&str];
    let mut _424: &[core::fmt::rt::Argument<'_>];
    let _425: &[core::fmt::rt::Argument<'_>; 1];
    let _426: [core::fmt::rt::Argument<'_>; 1];
    let mut _427: core::fmt::rt::Argument<'_>;
    let _428: ();
    let mut _429: std::fmt::Arguments<'_>;
    let mut _430: &[&str];
    let mut _431: &[core::fmt::rt::Argument<'_>];
    let _432: &[core::fmt::rt::Argument<'_>; 1];
    let _433: [core::fmt::rt::Argument<'_>; 1];
    let mut _434: core::fmt::rt::Argument<'_>;
    let _435: ();
    let mut _436: std::fmt::Arguments<'_>;
    let mut _437: &[&str];
    let mut _438: &[core::fmt::rt::Argument<'_>];
    let _439: &[core::fmt::rt::Argument<'_>; 1];
    let _440: [core::fmt::rt::Argument<'_>; 1];
    let mut _441: core::fmt::rt::Argument<'_>;
    let _442: ();
    let mut _443: std::fmt::Arguments<'_>;
    let mut _444: &[&str];
    let mut _445: &[core::fmt::rt::Argument<'_>];
    let _446: &[core::fmt::rt::Argument<'_>; 1];
    let _447: [core::fmt::rt::Argument<'_>; 1];
    let mut _448: core::fmt::rt::Argument<'_>;
    let _449: ();
    let mut _450: std::fmt::Arguments<'_>;
    let mut _451: &[&str];
    let mut _452: &[core::fmt::rt::Argument<'_>];
    let _453: &[core::fmt::rt::Argument<'_>; 1];
    let _454: [core::fmt::rt::Argument<'_>; 1];
    let mut _455: core::fmt::rt::Argument<'_>;
    let _456: ();
    let mut _457: std::fmt::Arguments<'_>;
    let mut _458: &[&str];
    let mut _459: &[core::fmt::rt::Argument<'_>];
    let _460: &[core::fmt::rt::Argument<'_>; 1];
    let _461: [core::fmt::rt::Argument<'_>; 1];
    let mut _462: core::fmt::rt::Argument<'_>;
    let _463: ();
    let mut _464: std::fmt::Arguments<'_>;
    let mut _465: &[&str];
    let mut _466: &[core::fmt::rt::Argument<'_>];
    let _467: &[core::fmt::rt::Argument<'_>; 1];
    let _468: [core::fmt::rt::Argument<'_>; 1];
    let mut _469: core::fmt::rt::Argument<'_>;
    let _470: ();
    let mut _471: std::fmt::Arguments<'_>;
    let mut _472: &[&str];
    let mut _473: &[core::fmt::rt::Argument<'_>];
    let _474: &[core::fmt::rt::Argument<'_>; 1];
    let _475: [core::fmt::rt::Argument<'_>; 1];
    let mut _476: core::fmt::rt::Argument<'_>;
    let _477: ();
    let mut _478: std::fmt::Arguments<'_>;
    let mut _479: &[&str];
    let mut _480: &[core::fmt::rt::Argument<'_>];
    let _481: &[core::fmt::rt::Argument<'_>; 1];
    let _482: [core::fmt::rt::Argument<'_>; 1];
    let mut _483: core::fmt::rt::Argument<'_>;
    let _484: ();
    let mut _485: std::fmt::Arguments<'_>;
    let mut _486: &[&str];
    let mut _487: &[core::fmt::rt::Argument<'_>];
    let _488: &[core::fmt::rt::Argument<'_>; 1];
    let _489: [core::fmt::rt::Argument<'_>; 1];
    let mut _490: core::fmt::rt::Argument<'_>;
    let _491: ();
    let mut _492: std::fmt::Arguments<'_>;
    let mut _493: &[&str];
    let mut _494: &[core::fmt::rt::Argument<'_>];
    let _495: &[core::fmt::rt::Argument<'_>; 1];
    let _496: [core::fmt::rt::Argument<'_>; 1];
    let mut _497: core::fmt::rt::Argument<'_>;
    let _498: ();
    let mut _499: std::fmt::Arguments<'_>;
    let mut _500: &[&str];
    let mut _501: &[core::fmt::rt::Argument<'_>];
    let _502: &[core::fmt::rt::Argument<'_>; 1];
    let _503: [core::fmt::rt::Argument<'_>; 1];
    let mut _504: core::fmt::rt::Argument<'_>;
    let _505: ();
    let mut _506: std::fmt::Arguments<'_>;
    let mut _507: &[&str];
    let mut _508: &[core::fmt::rt::Argument<'_>];
    let _509: &[core::fmt::rt::Argument<'_>; 1];
    let _510: [core::fmt::rt::Argument<'_>; 1];
    let mut _511: core::fmt::rt::Argument<'_>;
    let _512: ();
    let mut _513: std::fmt::Arguments<'_>;
    let mut _514: &[&str];
    let mut _515: &[core::fmt::rt::Argument<'_>];
    let _516: &[core::fmt::rt::Argument<'_>; 1];
    let _517: [core::fmt::rt::Argument<'_>; 1];
    let mut _518: core::fmt::rt::Argument<'_>;
    let _519: ();
    let mut _520: std::fmt::Arguments<'_>;
    let mut _521: &[&str];
    let mut _522: &[core::fmt::rt::Argument<'_>];
    let _523: &[core::fmt::rt::Argument<'_>; 1];
    let _524: [core::fmt::rt::Argument<'_>; 1];
    let mut _525: core::fmt::rt::Argument<'_>;
    let _526: ();
    let mut _527: std::fmt::Arguments<'_>;
    let mut _528: &[&str];
    let mut _529: &[core::fmt::rt::Argument<'_>];
    let _530: &[core::fmt::rt::Argument<'_>; 1];
    let _531: [core::fmt::rt::Argument<'_>; 1];
    let mut _532: core::fmt::rt::Argument<'_>;
    let _533: ();
    let mut _534: std::fmt::Arguments<'_>;
    let mut _535: &[&str];
    let mut _536: &[core::fmt::rt::Argument<'_>];
    let _537: &[core::fmt::rt::Argument<'_>; 1];
    let _538: [core::fmt::rt::Argument<'_>; 1];
    let mut _539: core::fmt::rt::Argument<'_>;
    let _540: ();
    let mut _541: std::fmt::Arguments<'_>;
    let mut _542: &[&str];
    let mut _543: &[core::fmt::rt::Argument<'_>];
    let _544: &[core::fmt::rt::Argument<'_>; 1];
    let _545: [core::fmt::rt::Argument<'_>; 1];
    let mut _546: core::fmt::rt::Argument<'_>;
    let _547: ();
    let mut _548: std::fmt::Arguments<'_>;
    let mut _549: &[&str];
    let mut _550: &[core::fmt::rt::Argument<'_>];
    let _551: &[core::fmt::rt::Argument<'_>; 1];
    let _552: [core::fmt::rt::Argument<'_>; 1];
    let mut _553: core::fmt::rt::Argument<'_>;
    let _554: ();
    let mut _555: std::fmt::Arguments<'_>;
    let mut _556: &[&str];
    let mut _557: &[core::fmt::rt::Argument<'_>];
    let _558: &[core::fmt::rt::Argument<'_>; 1];
    let _559: [core::fmt::rt::Argument<'_>; 1];
    let mut _560: core::fmt::rt::Argument<'_>;
    let _561: ();
    let mut _562: std::fmt::Arguments<'_>;
    let mut _563: &[&str];
    let mut _564: &[core::fmt::rt::Argument<'_>];
    let _565: &[core::fmt::rt::Argument<'_>; 1];
    let _566: [core::fmt::rt::Argument<'_>; 1];
    let mut _567: core::fmt::rt::Argument<'_>;
    let _568: ();
    let mut _569: std::fmt::Arguments<'_>;
    let mut _570: &[&str];
    let mut _571: &[core::fmt::rt::Argument<'_>];
    let _572: &[core::fmt::rt::Argument<'_>; 1];
    let _573: [core::fmt::rt::Argument<'_>; 1];
    let mut _574: core::fmt::rt::Argument<'_>;
    let _575: ();
    let mut _576: std::fmt::Arguments<'_>;
    let mut _577: &[&str];
    let mut _578: &[core::fmt::rt::Argument<'_>];
    let _579: &[core::fmt::rt::Argument<'_>; 1];
    let _580: [core::fmt::rt::Argument<'_>; 1];
    let mut _581: core::fmt::rt::Argument<'_>;
    let _582: ();
    let mut _583: std::fmt::Arguments<'_>;
    let mut _584: &[&str];
    let mut _585: &[core::fmt::rt::Argument<'_>];
    let _586: &[core::fmt::rt::Argument<'_>; 1];
    let _587: [core::fmt::rt::Argument<'_>; 1];
    let mut _588: core::fmt::rt::Argument<'_>;
    let _589: ();
    let mut _590: std::fmt::Arguments<'_>;
    let mut _591: &[&str];
    let mut _592: &[core::fmt::rt::Argument<'_>];
    let _593: &[core::fmt::rt::Argument<'_>; 1];
    let _594: [core::fmt::rt::Argument<'_>; 1];
    let mut _595: core::fmt::rt::Argument<'_>;
    let _596: ();
    let mut _597: std::fmt::Arguments<'_>;
    let mut _598: &[&str];
    let mut _599: &[core::fmt::rt::Argument<'_>];
    let _600: &[core::fmt::rt::Argument<'_>; 1];
    let _601: [core::fmt::rt::Argument<'_>; 1];
    let mut _602: core::fmt::rt::Argument<'_>;
    let _603: ();
    let mut _604: std::fmt::Arguments<'_>;
    let mut _605: &[&str];
    let mut _606: &[core::fmt::rt::Argument<'_>];
    let _607: &[core::fmt::rt::Argument<'_>; 1];
    let _608: [core::fmt::rt::Argument<'_>; 1];
    let mut _609: core::fmt::rt::Argument<'_>;
    let _610: ();
    let mut _611: std::fmt::Arguments<'_>;
    let mut _612: &[&str];
    let mut _613: &[core::fmt::rt::Argument<'_>];
    let _614: &[core::fmt::rt::Argument<'_>; 1];
    let _615: [core::fmt::rt::Argument<'_>; 1];
    let mut _616: core::fmt::rt::Argument<'_>;
    let _617: ();
    let mut _618: std::fmt::Arguments<'_>;
    let mut _619: &[&str];
    let mut _620: &[core::fmt::rt::Argument<'_>];
    let _621: &[core::fmt::rt::Argument<'_>; 1];
    let _622: [core::fmt::rt::Argument<'_>; 1];
    let mut _623: core::fmt::rt::Argument<'_>;
    let _624: ();
    let mut _625: std::fmt::Arguments<'_>;
    let mut _626: &[&str];
    let mut _627: &[core::fmt::rt::Argument<'_>];
    let _628: &[core::fmt::rt::Argument<'_>; 1];
    let _629: [core::fmt::rt::Argument<'_>; 1];
    let mut _630: core::fmt::rt::Argument<'_>;
    let _631: ();
    let mut _632: std::fmt::Arguments<'_>;
    let mut _633: &[&str];
    let mut _634: &[core::fmt::rt::Argument<'_>];
    let _635: &[core::fmt::rt::Argument<'_>; 1];
    let _636: [core::fmt::rt::Argument<'_>; 1];
    let mut _637: core::fmt::rt::Argument<'_>;
    let _638: ();
    let mut _639: std::fmt::Arguments<'_>;
    let mut _640: &[&str];
    let mut _641: &[core::fmt::rt::Argument<'_>];
    let _642: &[core::fmt::rt::Argument<'_>; 1];
    let _643: [core::fmt::rt::Argument<'_>; 1];
    let mut _644: core::fmt::rt::Argument<'_>;
    let _645: ();
    let mut _646: std::fmt::Arguments<'_>;
    let mut _647: &[&str];
    let mut _648: &[core::fmt::rt::Argument<'_>];
    let _649: &[core::fmt::rt::Argument<'_>; 1];
    let _650: [core::fmt::rt::Argument<'_>; 1];
    let mut _651: core::fmt::rt::Argument<'_>;
    let _652: ();
    let mut _653: std::fmt::Arguments<'_>;
    let mut _654: &[&str];
    let mut _655: &[core::fmt::rt::Argument<'_>];
    let _656: &[core::fmt::rt::Argument<'_>; 1];
    let _657: [core::fmt::rt::Argument<'_>; 1];
    let mut _658: core::fmt::rt::Argument<'_>;
    let _659: ();
    let mut _660: std::fmt::Arguments<'_>;
    let mut _661: &[&str];
    let mut _662: &[core::fmt::rt::Argument<'_>];
    let _663: &[core::fmt::rt::Argument<'_>; 1];
    let _664: [core::fmt::rt::Argument<'_>; 1];
    let mut _665: core::fmt::rt::Argument<'_>;
    let _666: ();
    let mut _667: std::fmt::Arguments<'_>;
    let mut _668: &[&str];
    let mut _669: &[core::fmt::rt::Argument<'_>];
    let _670: &[core::fmt::rt::Argument<'_>; 1];
    let _671: [core::fmt::rt::Argument<'_>; 1];
    let mut _672: core::fmt::rt::Argument<'_>;
    let _673: ();
    let mut _674: std::fmt::Arguments<'_>;
    let mut _675: &[&str];
    let mut _676: &[core::fmt::rt::Argument<'_>];
    let _677: &[core::fmt::rt::Argument<'_>; 1];
    let _678: [core::fmt::rt::Argument<'_>; 1];
    let mut _679: core::fmt::rt::Argument<'_>;
    let _680: ();
    let mut _681: std::fmt::Arguments<'_>;
    let mut _682: &[&str];
    let mut _683: &[core::fmt::rt::Argument<'_>];
    let _684: &[core::fmt::rt::Argument<'_>; 1];
    let _685: [core::fmt::rt::Argument<'_>; 1];
    let mut _686: core::fmt::rt::Argument<'_>;
    let _687: ();
    let mut _688: std::fmt::Arguments<'_>;
    let mut _689: &[&str];
    let mut _690: &[core::fmt::rt::Argument<'_>];
    let _691: &[core::fmt::rt::Argument<'_>; 1];
    let _692: [core::fmt::rt::Argument<'_>; 1];
    let mut _693: core::fmt::rt::Argument<'_>;
    let _694: ();
    let mut _695: std::fmt::Arguments<'_>;
    let mut _696: &[&str];
    let mut _697: &[core::fmt::rt::Argument<'_>];
    let _698: &[core::fmt::rt::Argument<'_>; 1];
    let _699: [core::fmt::rt::Argument<'_>; 1];
    let mut _700: core::fmt::rt::Argument<'_>;
    let _701: ();
    let mut _702: std::fmt::Arguments<'_>;
    let mut _703: &[&str];
    let mut _704: &[core::fmt::rt::Argument<'_>];
    let _705: &[core::fmt::rt::Argument<'_>; 1];
    let _706: [core::fmt::rt::Argument<'_>; 1];
    let mut _707: core::fmt::rt::Argument<'_>;
    let _708: ();
    let mut _709: std::fmt::Arguments<'_>;
    let mut _710: &[&str];
    let mut _711: &[core::fmt::rt::Argument<'_>];
    let _712: &[core::fmt::rt::Argument<'_>; 1];
    let _713: [core::fmt::rt::Argument<'_>; 1];
    let mut _714: core::fmt::rt::Argument<'_>;
    let _715: ();
    let mut _716: std::fmt::Arguments<'_>;
    let mut _717: &[&str];
    let mut _718: &[core::fmt::rt::Argument<'_>];
    let _719: &[core::fmt::rt::Argument<'_>; 1];
    let _720: [core::fmt::rt::Argument<'_>; 1];
    let mut _721: core::fmt::rt::Argument<'_>;
    let _722: ();
    let mut _723: std::fmt::Arguments<'_>;
    let mut _724: &[&str];
    let mut _725: &[core::fmt::rt::Argument<'_>];
    let _726: &[core::fmt::rt::Argument<'_>; 1];
    let _727: [core::fmt::rt::Argument<'_>; 1];
    let mut _728: core::fmt::rt::Argument<'_>;
    let _729: ();
    let mut _730: std::fmt::Arguments<'_>;
    let mut _731: &[&str];
    let mut _732: &[core::fmt::rt::Argument<'_>];
    let _733: &[core::fmt::rt::Argument<'_>; 1];
    let _734: [core::fmt::rt::Argument<'_>; 1];
    let mut _735: core::fmt::rt::Argument<'_>;
    let _736: ();
    let mut _737: std::fmt::Arguments<'_>;
    let mut _738: &[&str];
    let mut _739: &[core::fmt::rt::Argument<'_>];
    let _740: &[core::fmt::rt::Argument<'_>; 1];
    let _741: [core::fmt::rt::Argument<'_>; 1];
    let mut _742: core::fmt::rt::Argument<'_>;
    let _743: ();
    let mut _744: std::fmt::Arguments<'_>;
    let mut _745: &[&str];
    let mut _746: &[core::fmt::rt::Argument<'_>];
    let _747: &[core::fmt::rt::Argument<'_>; 1];
    let _748: [core::fmt::rt::Argument<'_>; 1];
    let mut _749: core::fmt::rt::Argument<'_>;
    let _750: ();
    let mut _751: std::fmt::Arguments<'_>;
    let mut _752: &[&str];
    let mut _753: &[core::fmt::rt::Argument<'_>];
    let _754: &[core::fmt::rt::Argument<'_>; 1];
    let _755: [core::fmt::rt::Argument<'_>; 1];
    let mut _756: core::fmt::rt::Argument<'_>;
    let _757: ();
    let mut _758: std::fmt::Arguments<'_>;
    let mut _759: &[&str];
    let mut _760: &[core::fmt::rt::Argument<'_>];
    let _761: &[core::fmt::rt::Argument<'_>; 1];
    let _762: [core::fmt::rt::Argument<'_>; 1];
    let mut _763: core::fmt::rt::Argument<'_>;
    let _764: ();
    let mut _765: std::fmt::Arguments<'_>;
    let mut _766: &[&str];
    let mut _767: &[core::fmt::rt::Argument<'_>];
    let _768: &[core::fmt::rt::Argument<'_>; 1];
    let _769: [core::fmt::rt::Argument<'_>; 1];
    let mut _770: core::fmt::rt::Argument<'_>;
    let _771: ();
    let mut _772: std::fmt::Arguments<'_>;
    let mut _773: &[&str];
    let mut _774: &[core::fmt::rt::Argument<'_>];
    let _775: &[core::fmt::rt::Argument<'_>; 1];
    let _776: [core::fmt::rt::Argument<'_>; 1];
    let mut _777: core::fmt::rt::Argument<'_>;
    let _778: ();
    let mut _779: std::fmt::Arguments<'_>;
    let mut _780: &[&str];
    let mut _781: &[core::fmt::rt::Argument<'_>];
    let _782: &[core::fmt::rt::Argument<'_>; 1];
    let _783: [core::fmt::rt::Argument<'_>; 1];
    let mut _784: core::fmt::rt::Argument<'_>;
    let _785: ();
    let mut _786: std::fmt::Arguments<'_>;
    let mut _787: &[&str];
    let mut _788: &[core::fmt::rt::Argument<'_>];
    let _789: &[core::fmt::rt::Argument<'_>; 1];
    let _790: [core::fmt::rt::Argument<'_>; 1];
    let mut _791: core::fmt::rt::Argument<'_>;
    let _792: ();
    let mut _793: std::fmt::Arguments<'_>;
    let mut _794: &[&str];
    let mut _795: &[core::fmt::rt::Argument<'_>];
    let _796: &[core::fmt::rt::Argument<'_>; 1];
    let _797: [core::fmt::rt::Argument<'_>; 1];
    let mut _798: core::fmt::rt::Argument<'_>;
    let _799: ();
    let mut _800: std::fmt::Arguments<'_>;
    let mut _801: &[&str];
    let mut _802: &[core::fmt::rt::Argument<'_>];
    let _803: &[core::fmt::rt::Argument<'_>; 1];
    let _804: [core::fmt::rt::Argument<'_>; 1];
    let mut _805: core::fmt::rt::Argument<'_>;
    let _806: ();
    let mut _807: std::fmt::Arguments<'_>;
    let mut _808: &[&str];
    let mut _809: &[core::fmt::rt::Argument<'_>];
    let _810: &[core::fmt::rt::Argument<'_>; 1];
    let _811: [core::fmt::rt::Argument<'_>; 1];
    let mut _812: core::fmt::rt::Argument<'_>;
    let _813: ();
    let mut _814: std::fmt::Arguments<'_>;
    let mut _815: &[&str];
    let mut _816: &[core::fmt::rt::Argument<'_>];
    let _817: &[core::fmt::rt::Argument<'_>; 1];
    let _818: [core::fmt::rt::Argument<'_>; 1];
    let mut _819: core::fmt::rt::Argument<'_>;
    let _820: ();
    let mut _821: std::fmt::Arguments<'_>;
    let mut _822: &[&str];
    let mut _823: &[core::fmt::rt::Argument<'_>];
    let _824: &[core::fmt::rt::Argument<'_>; 1];
    let _825: [core::fmt::rt::Argument<'_>; 1];
    let mut _826: core::fmt::rt::Argument<'_>;
    let _827: ();
    let mut _828: std::fmt::Arguments<'_>;
    let mut _829: &[&str];
    let mut _830: &[core::fmt::rt::Argument<'_>];
    let _831: &[core::fmt::rt::Argument<'_>; 1];
    let _832: [core::fmt::rt::Argument<'_>; 1];
    let mut _833: core::fmt::rt::Argument<'_>;
    let _834: ();
    let mut _835: std::fmt::Arguments<'_>;
    let mut _836: &[&str];
    let mut _837: &[core::fmt::rt::Argument<'_>];
    let _838: &[core::fmt::rt::Argument<'_>; 1];
    let _839: [core::fmt::rt::Argument<'_>; 1];
    let mut _840: core::fmt::rt::Argument<'_>;
    let _841: ();
    let mut _842: std::fmt::Arguments<'_>;
    let mut _843: &[&str];
    let mut _844: &[core::fmt::rt::Argument<'_>];
    let _845: &[core::fmt::rt::Argument<'_>; 1];
    let _846: [core::fmt::rt::Argument<'_>; 1];
    let mut _847: core::fmt::rt::Argument<'_>;
    let _848: ();
    let mut _849: std::fmt::Arguments<'_>;
    let mut _850: &[&str];
    let mut _851: &[core::fmt::rt::Argument<'_>];
    let _852: &[core::fmt::rt::Argument<'_>; 1];
    let _853: [core::fmt::rt::Argument<'_>; 1];
    let mut _854: core::fmt::rt::Argument<'_>;
    let _855: ();
    let mut _856: std::fmt::Arguments<'_>;
    let mut _857: &[&str];
    let mut _858: &[core::fmt::rt::Argument<'_>];
    let _859: &[core::fmt::rt::Argument<'_>; 1];
    let _860: [core::fmt::rt::Argument<'_>; 1];
    let mut _861: core::fmt::rt::Argument<'_>;
    let _862: ();
    let mut _863: std::fmt::Arguments<'_>;
    let mut _864: &[&str];
    let mut _865: &[core::fmt::rt::Argument<'_>];
    let _866: &[core::fmt::rt::Argument<'_>; 1];
    let _867: [core::fmt::rt::Argument<'_>; 1];
    let mut _868: core::fmt::rt::Argument<'_>;
    let _869: ();
    let mut _870: std::fmt::Arguments<'_>;
    let mut _871: &[&str];
    let mut _872: &[core::fmt::rt::Argument<'_>];
    let _873: &[core::fmt::rt::Argument<'_>; 1];
    let _874: [core::fmt::rt::Argument<'_>; 1];
    let mut _875: core::fmt::rt::Argument<'_>;
    let _876: ();
    let mut _877: std::fmt::Arguments<'_>;
    let mut _878: &[&str];
    let mut _879: &[core::fmt::rt::Argument<'_>];
    let _880: &[core::fmt::rt::Argument<'_>; 1];
    let _881: [core::fmt::rt::Argument<'_>; 1];
    let mut _882: core::fmt::rt::Argument<'_>;
    let _883: ();
    let mut _884: std::fmt::Arguments<'_>;
    let mut _885: &[&str];
    let mut _886: &[core::fmt::rt::Argument<'_>];
    let _887: &[core::fmt::rt::Argument<'_>; 1];
    let _888: [core::fmt::rt::Argument<'_>; 1];
    let mut _889: core::fmt::rt::Argument<'_>;
    let _890: ();
    let mut _891: std::fmt::Arguments<'_>;
    let mut _892: &[&str];
    let mut _893: &[core::fmt::rt::Argument<'_>];
    let _894: &[core::fmt::rt::Argument<'_>; 1];
    let _895: [core::fmt::rt::Argument<'_>; 1];
    let mut _896: core::fmt::rt::Argument<'_>;
    let _897: ();
    let mut _898: std::fmt::Arguments<'_>;
    let mut _899: &[&str];
    let mut _900: &[core::fmt::rt::Argument<'_>];
    let _901: &[core::fmt::rt::Argument<'_>; 1];
    let _902: [core::fmt::rt::Argument<'_>; 1];
    let mut _903: core::fmt::rt::Argument<'_>;
    let _904: ();
    let mut _905: std::fmt::Arguments<'_>;
    let mut _906: &[&str];
    let mut _907: &[core::fmt::rt::Argument<'_>];
    let _908: &[core::fmt::rt::Argument<'_>; 1];
    let _909: [core::fmt::rt::Argument<'_>; 1];
    let mut _910: core::fmt::rt::Argument<'_>;
    let _911: ();
    let mut _912: std::fmt::Arguments<'_>;
    let mut _913: &[&str];
    let mut _914: &[core::fmt::rt::Argument<'_>];
    let _915: &[core::fmt::rt::Argument<'_>; 1];
    let _916: [core::fmt::rt::Argument<'_>; 1];
    let mut _917: core::fmt::rt::Argument<'_>;
    let _918: ();
    let mut _919: std::fmt::Arguments<'_>;
    let mut _920: &[&str];
    let mut _921: &[core::fmt::rt::Argument<'_>];
    let _922: &[core::fmt::rt::Argument<'_>; 1];
    let _923: [core::fmt::rt::Argument<'_>; 1];
    let mut _924: core::fmt::rt::Argument<'_>;
    let _925: ();
    let mut _926: std::fmt::Arguments<'_>;
    let mut _927: &[&str];
    let mut _928: &[core::fmt::rt::Argument<'_>];
    let _929: &[core::fmt::rt::Argument<'_>; 1];
    let _930: [core::fmt::rt::Argument<'_>; 1];
    let mut _931: core::fmt::rt::Argument<'_>;
    let _932: ();
    let mut _933: std::fmt::Arguments<'_>;
    let mut _934: &[&str];
    let mut _935: &[core::fmt::rt::Argument<'_>];
    let _936: &[core::fmt::rt::Argument<'_>; 1];
    let _937: [core::fmt::rt::Argument<'_>; 1];
    let mut _938: core::fmt::rt::Argument<'_>;
    let _939: ();
    let mut _940: std::fmt::Arguments<'_>;
    let mut _941: &[&str];
    let mut _942: &[core::fmt::rt::Argument<'_>];
    let _943: &[core::fmt::rt::Argument<'_>; 1];
    let _944: [core::fmt::rt::Argument<'_>; 1];
    let mut _945: core::fmt::rt::Argument<'_>;
    let _946: ();
    let mut _947: std::fmt::Arguments<'_>;
    let mut _948: &[&str];
    let mut _949: &[core::fmt::rt::Argument<'_>];
    let _950: &[core::fmt::rt::Argument<'_>; 1];
    let _951: [core::fmt::rt::Argument<'_>; 1];
    let mut _952: core::fmt::rt::Argument<'_>;
    let _953: ();
    let mut _954: std::fmt::Arguments<'_>;
    let mut _955: &[&str];
    let mut _956: &[core::fmt::rt::Argument<'_>];
    let _957: &[core::fmt::rt::Argument<'_>; 1];
    let _958: [core::fmt::rt::Argument<'_>; 1];
    let mut _959: core::fmt::rt::Argument<'_>;
    let _960: ();
    let mut _961: std::fmt::Arguments<'_>;
    let mut _962: &[&str];
    let mut _963: &[core::fmt::rt::Argument<'_>];
    let _964: &[core::fmt::rt::Argument<'_>; 1];
    let _965: [core::fmt::rt::Argument<'_>; 1];
    let mut _966: core::fmt::rt::Argument<'_>;
    let _967: ();
    let mut _968: std::fmt::Arguments<'_>;
    let mut _969: &[&str];
    let mut _970: &[core::fmt::rt::Argument<'_>];
    let _971: &[core::fmt::rt::Argument<'_>; 1];
    let _972: [core::fmt::rt::Argument<'_>; 1];
    let mut _973: core::fmt::rt::Argument<'_>;
    let _974: ();
    let mut _975: std::fmt::Arguments<'_>;
    let mut _976: &[&str];
    let mut _977: &[core::fmt::rt::Argument<'_>];
    let _978: &[core::fmt::rt::Argument<'_>; 1];
    let _979: [core::fmt::rt::Argument<'_>; 1];
    let mut _980: core::fmt::rt::Argument<'_>;
    let _981: ();
    let mut _982: std::fmt::Arguments<'_>;
    let mut _983: &[&str];
    let mut _984: &[core::fmt::rt::Argument<'_>];
    let _985: &[core::fmt::rt::Argument<'_>; 1];
    let _986: [core::fmt::rt::Argument<'_>; 1];
    let mut _987: core::fmt::rt::Argument<'_>;
    let _988: ();
    let mut _989: std::fmt::Arguments<'_>;
    let mut _990: &[&str];
    let mut _991: &[core::fmt::rt::Argument<'_>];
    let _992: &[core::fmt::rt::Argument<'_>; 1];
    let _993: [core::fmt::rt::Argument<'_>; 1];
    let mut _994: core::fmt::rt::Argument<'_>;
    let _995: ();
    let mut _996: std::fmt::Arguments<'_>;
    let mut _997: &[&str];
    let mut _998: &[core::fmt::rt::Argument<'_>];
    let _999: &[core::fmt::rt::Argument<'_>; 1];
    let _1000: [core::fmt::rt::Argument<'_>; 1];
    let mut _1001: core::fmt::rt::Argument<'_>;
    let _1002: ();
    let mut _1003: std::fmt::Arguments<'_>;
    let mut _1004: &[&str];
    let mut _1005: &[core::fmt::rt::Argument<'_>];
    let _1006: &[core::fmt::rt::Argument<'_>; 1];
    let _1007: [core::fmt::rt::Argument<'_>; 1];
    let mut _1008: core::fmt::rt::Argument<'_>;
    let _1009: ();
    let mut _1010: std::fmt::Arguments<'_>;
    let mut _1011: &[&str];
    let mut _1012: &[core::fmt::rt::Argument<'_>];
    let _1013: &[core::fmt::rt::Argument<'_>; 1];
    let _1014: [core::fmt::rt::Argument<'_>; 1];
    let mut _1015: core::fmt::rt::Argument<'_>;
    let _1016: ();
    let mut _1017: std::fmt::Arguments<'_>;
    let mut _1018: &[&str];
    let mut _1019: &[core::fmt::rt::Argument<'_>];
    let _1020: &[core::fmt::rt::Argument<'_>; 1];
    let _1021: [core::fmt::rt::Argument<'_>; 1];
    let mut _1022: core::fmt::rt::Argument<'_>;
    let _1023: ();
    let mut _1024: std::fmt::Arguments<'_>;
    let mut _1025: &[&str];
    let mut _1026: &[core::fmt::rt::Argument<'_>];
    let _1027: &[core::fmt::rt::Argument<'_>; 1];
    let _1028: [core::fmt::rt::Argument<'_>; 1];
    let mut _1029: core::fmt::rt::Argument<'_>;
    let _1030: ();
    let mut _1031: std::fmt::Arguments<'_>;
    let mut _1032: &[&str];
    let mut _1033: &[core::fmt::rt::Argument<'_>];
    let _1034: &[core::fmt::rt::Argument<'_>; 1];
    let _1035: [core::fmt::rt::Argument<'_>; 1];
    let mut _1036: core::fmt::rt::Argument<'_>;
    let _1037: ();
    let mut _1038: std::fmt::Arguments<'_>;
    let mut _1039: &[&str];
    let mut _1040: &[core::fmt::rt::Argument<'_>];
    let _1041: &[core::fmt::rt::Argument<'_>; 1];
    let _1042: [core::fmt::rt::Argument<'_>; 1];
    let mut _1043: core::fmt::rt::Argument<'_>;
    let _1044: ();
    let mut _1045: std::fmt::Arguments<'_>;
    let mut _1046: &[&str];
    let mut _1047: &[core::fmt::rt::Argument<'_>];
    let _1048: &[core::fmt::rt::Argument<'_>; 1];
    let _1049: [core::fmt::rt::Argument<'_>; 1];
    let mut _1050: core::fmt::rt::Argument<'_>;
    let _1051: ();
    let mut _1052: std::fmt::Arguments<'_>;
    let mut _1053: &[&str];
    let mut _1054: &[core::fmt::rt::Argument<'_>];
    let _1055: &[core::fmt::rt::Argument<'_>; 1];
    let _1056: [core::fmt::rt::Argument<'_>; 1];
    let mut _1057: core::fmt::rt::Argument<'_>;
    let _1058: ();
    let mut _1059: std::fmt::Arguments<'_>;
    let mut _1060: &[&str];
    let mut _1061: &[core::fmt::rt::Argument<'_>];
    let _1062: &[core::fmt::rt::Argument<'_>; 1];
    let _1063: [core::fmt::rt::Argument<'_>; 1];
    let mut _1064: core::fmt::rt::Argument<'_>;
    let _1065: ();
    let mut _1066: std::fmt::Arguments<'_>;
    let mut _1067: &[&str];
    let mut _1068: &[core::fmt::rt::Argument<'_>];
    let _1069: &[core::fmt::rt::Argument<'_>; 1];
    let _1070: [core::fmt::rt::Argument<'_>; 1];
    let mut _1071: core::fmt::rt::Argument<'_>;
    let _1072: ();
    let mut _1073: std::fmt::Arguments<'_>;
    let mut _1074: &[&str];
    let mut _1075: &[core::fmt::rt::Argument<'_>];
    let _1076: &[core::fmt::rt::Argument<'_>; 1];
    let _1077: [core::fmt::rt::Argument<'_>; 1];
    let mut _1078: core::fmt::rt::Argument<'_>;
    let _1079: ();
    let mut _1080: std::fmt::Arguments<'_>;
    let mut _1081: &[&str];
    let mut _1082: &[core::fmt::rt::Argument<'_>];
    let _1083: &[core::fmt::rt::Argument<'_>; 1];
    let _1084: [core::fmt::rt::Argument<'_>; 1];
    let mut _1085: core::fmt::rt::Argument<'_>;
    let _1086: ();
    let mut _1087: std::fmt::Arguments<'_>;
    let mut _1088: &[&str];
    let mut _1089: &[core::fmt::rt::Argument<'_>];
    let _1090: &[core::fmt::rt::Argument<'_>; 1];
    let _1091: [core::fmt::rt::Argument<'_>; 1];
    let mut _1092: core::fmt::rt::Argument<'_>;
    let _1093: ();
    let mut _1094: std::fmt::Arguments<'_>;
    let mut _1095: &[&str];
    let mut _1096: &[core::fmt::rt::Argument<'_>];
    let _1097: &[core::fmt::rt::Argument<'_>; 1];
    let _1098: [core::fmt::rt::Argument<'_>; 1];
    let mut _1099: core::fmt::rt::Argument<'_>;
    let _1100: ();
    let mut _1101: std::fmt::Arguments<'_>;
    let mut _1102: &[&str];
    let mut _1103: &[core::fmt::rt::Argument<'_>];
    let _1104: &[core::fmt::rt::Argument<'_>; 1];
    let _1105: [core::fmt::rt::Argument<'_>; 1];
    let mut _1106: core::fmt::rt::Argument<'_>;
    let _1107: ();
    let mut _1108: std::fmt::Arguments<'_>;
    let mut _1109: &[&str];
    let mut _1110: &[core::fmt::rt::Argument<'_>];
    let _1111: &[core::fmt::rt::Argument<'_>; 1];
    let _1112: [core::fmt::rt::Argument<'_>; 1];
    let mut _1113: core::fmt::rt::Argument<'_>;
    let _1114: ();
    let mut _1115: std::fmt::Arguments<'_>;
    let mut _1116: &[&str];
    let mut _1117: &[core::fmt::rt::Argument<'_>];
    let _1118: &[core::fmt::rt::Argument<'_>; 1];
    let _1119: [core::fmt::rt::Argument<'_>; 1];
    let mut _1120: core::fmt::rt::Argument<'_>;
    let _1121: ();
    let mut _1122: std::fmt::Arguments<'_>;
    let mut _1123: &[&str];
    let mut _1124: &[core::fmt::rt::Argument<'_>];
    let _1125: &[core::fmt::rt::Argument<'_>; 1];
    let _1126: [core::fmt::rt::Argument<'_>; 1];
    let mut _1127: core::fmt::rt::Argument<'_>;
    let _1128: ();
    let mut _1129: std::fmt::Arguments<'_>;
    let mut _1130: &[&str];
    let mut _1131: &[core::fmt::rt::Argument<'_>];
    let _1132: &[core::fmt::rt::Argument<'_>; 1];
    let _1133: [core::fmt::rt::Argument<'_>; 1];
    let mut _1134: core::fmt::rt::Argument<'_>;
    let _1135: ();
    let mut _1136: std::fmt::Arguments<'_>;
    let mut _1137: &[&str];
    let mut _1138: &[core::fmt::rt::Argument<'_>];
    let _1139: &[core::fmt::rt::Argument<'_>; 1];
    let _1140: [core::fmt::rt::Argument<'_>; 1];
    let mut _1141: core::fmt::rt::Argument<'_>;
    let _1142: ();
    let mut _1143: std::fmt::Arguments<'_>;
    let mut _1144: &[&str];
    let mut _1145: &[core::fmt::rt::Argument<'_>];
    let _1146: &[core::fmt::rt::Argument<'_>; 1];
    let _1147: [core::fmt::rt::Argument<'_>; 1];
    let mut _1148: core::fmt::rt::Argument<'_>;
    let _1149: ();
    let mut _1150: std::fmt::Arguments<'_>;
    let mut _1151: &[&str];
    let mut _1152: &[core::fmt::rt::Argument<'_>];
    let _1153: &[core::fmt::rt::Argument<'_>; 1];
    let _1154: [core::fmt::rt::Argument<'_>; 1];
    let mut _1155: core::fmt::rt::Argument<'_>;
    let _1156: ();
    let mut _1157: std::fmt::Arguments<'_>;
    let mut _1158: &[&str];
    let mut _1159: &[core::fmt::rt::Argument<'_>];
    let _1160: &[core::fmt::rt::Argument<'_>; 1];
    let _1161: [core::fmt::rt::Argument<'_>; 1];
    let mut _1162: core::fmt::rt::Argument<'_>;
    let _1163: ();
    let mut _1164: std::fmt::Arguments<'_>;
    let mut _1165: &[&str];
    let mut _1166: &[core::fmt::rt::Argument<'_>];
    let _1167: &[core::fmt::rt::Argument<'_>; 1];
    let _1168: [core::fmt::rt::Argument<'_>; 1];
    let mut _1169: core::fmt::rt::Argument<'_>;
    let _1170: ();
    let mut _1171: std::fmt::Arguments<'_>;
    let mut _1172: &[&str];
    let mut _1173: &[core::fmt::rt::Argument<'_>];
    let _1174: &[core::fmt::rt::Argument<'_>; 1];
    let _1175: [core::fmt::rt::Argument<'_>; 1];
    let mut _1176: core::fmt::rt::Argument<'_>;
    let _1177: ();
    let mut _1178: std::fmt::Arguments<'_>;
    let mut _1179: &[&str];
    let mut _1180: &[core::fmt::rt::Argument<'_>];
    let _1181: &[core::fmt::rt::Argument<'_>; 1];
    let _1182: [core::fmt::rt::Argument<'_>; 1];
    let mut _1183: core::fmt::rt::Argument<'_>;
    let _1184: ();
    let mut _1185: std::fmt::Arguments<'_>;
    let mut _1186: &[&str];
    let mut _1187: &[core::fmt::rt::Argument<'_>];
    let _1188: &[core::fmt::rt::Argument<'_>; 1];
    let _1189: [core::fmt::rt::Argument<'_>; 1];
    let mut _1190: core::fmt::rt::Argument<'_>;
    let _1191: ();
    let mut _1192: std::fmt::Arguments<'_>;
    let mut _1193: &[&str];
    let mut _1194: &[core::fmt::rt::Argument<'_>];
    let _1195: &[core::fmt::rt::Argument<'_>; 1];
    let _1196: [core::fmt::rt::Argument<'_>; 1];
    let mut _1197: core::fmt::rt::Argument<'_>;
    let _1198: ();
    let mut _1199: std::fmt::Arguments<'_>;
    let mut _1200: &[&str];
    let mut _1201: &[core::fmt::rt::Argument<'_>];
    let _1202: &[core::fmt::rt::Argument<'_>; 1];
    let _1203: [core::fmt::rt::Argument<'_>; 1];
    let mut _1204: core::fmt::rt::Argument<'_>;
    let _1205: ();
    let mut _1206: std::fmt::Arguments<'_>;
    let mut _1207: &[&str];
    let mut _1208: &[core::fmt::rt::Argument<'_>];
    let _1209: &[core::fmt::rt::Argument<'_>; 1];
    let _1210: [core::fmt::rt::Argument<'_>; 1];
    let mut _1211: core::fmt::rt::Argument<'_>;
    let _1212: ();
    let mut _1213: std::fmt::Arguments<'_>;
    let mut _1214: &[&str];
    let mut _1215: &[core::fmt::rt::Argument<'_>];
    let _1216: &[core::fmt::rt::Argument<'_>; 1];
    let _1217: [core::fmt::rt::Argument<'_>; 1];
    let mut _1218: core::fmt::rt::Argument<'_>;
    let _1219: ();
    let mut _1220: std::fmt::Arguments<'_>;
    let mut _1221: &[&str];
    let mut _1222: &[core::fmt::rt::Argument<'_>];
    let _1223: &[core::fmt::rt::Argument<'_>; 1];
    let _1224: [core::fmt::rt::Argument<'_>; 1];
    let mut _1225: core::fmt::rt::Argument<'_>;
    let _1226: ();
    let mut _1227: std::fmt::Arguments<'_>;
    let mut _1228: &[&str];
    let mut _1229: &[core::fmt::rt::Argument<'_>];
    let _1230: &[core::fmt::rt::Argument<'_>; 1];
    let _1231: [core::fmt::rt::Argument<'_>; 1];
    let mut _1232: core::fmt::rt::Argument<'_>;
    let _1233: ();
    let mut _1234: std::fmt::Arguments<'_>;
    let mut _1235: &[&str];
    let mut _1236: &[core::fmt::rt::Argument<'_>];
    let _1237: &[core::fmt::rt::Argument<'_>; 1];
    let _1238: [core::fmt::rt::Argument<'_>; 1];
    let mut _1239: core::fmt::rt::Argument<'_>;
    let _1240: ();
    let mut _1241: std::fmt::Arguments<'_>;
    let mut _1242: &[&str];
    let mut _1243: &[core::fmt::rt::Argument<'_>];
    let _1244: &[core::fmt::rt::Argument<'_>; 1];
    let _1245: [core::fmt::rt::Argument<'_>; 1];
    let mut _1246: core::fmt::rt::Argument<'_>;
    let _1247: ();
    let mut _1248: std::fmt::Arguments<'_>;
    let mut _1249: &[&str];
    let mut _1250: &[core::fmt::rt::Argument<'_>];
    let _1251: &[core::fmt::rt::Argument<'_>; 1];
    let _1252: [core::fmt::rt::Argument<'_>; 1];
    let mut _1253: core::fmt::rt::Argument<'_>;
    let _1254: ();
    let mut _1255: std::fmt::Arguments<'_>;
    let mut _1256: &[&str];
    let mut _1257: &[core::fmt::rt::Argument<'_>];
    let _1258: &[core::fmt::rt::Argument<'_>; 1];
    let _1259: [core::fmt::rt::Argument<'_>; 1];
    let mut _1260: core::fmt::rt::Argument<'_>;
    let _1261: ();
    let mut _1262: std::fmt::Arguments<'_>;
    let mut _1263: &[&str];
    let mut _1264: &[core::fmt::rt::Argument<'_>];
    let _1265: &[core::fmt::rt::Argument<'_>; 1];
    let _1266: [core::fmt::rt::Argument<'_>; 1];
    let mut _1267: core::fmt::rt::Argument<'_>;
    let _1268: ();
    let mut _1269: std::fmt::Arguments<'_>;
    let mut _1270: &[&str];
    let mut _1271: &[core::fmt::rt::Argument<'_>];
    let _1272: &[core::fmt::rt::Argument<'_>; 1];
    let _1273: [core::fmt::rt::Argument<'_>; 1];
    let mut _1274: core::fmt::rt::Argument<'_>;
    let _1275: ();
    let mut _1276: std::fmt::Arguments<'_>;
    let mut _1277: &[&str];
    let mut _1278: &[core::fmt::rt::Argument<'_>];
    let _1279: &[core::fmt::rt::Argument<'_>; 1];
    let _1280: [core::fmt::rt::Argument<'_>; 1];
    let mut _1281: core::fmt::rt::Argument<'_>;
    let _1282: ();
    let mut _1283: std::fmt::Arguments<'_>;
    let mut _1284: &[&str];
    let mut _1285: &[core::fmt::rt::Argument<'_>];
    let _1286: &[core::fmt::rt::Argument<'_>; 1];
    let _1287: [core::fmt::rt::Argument<'_>; 1];
    let mut _1288: core::fmt::rt::Argument<'_>;
    let _1289: ();
    let mut _1290: std::fmt::Arguments<'_>;
    let mut _1291: &[&str];
    let mut _1292: &[core::fmt::rt::Argument<'_>];
    let _1293: &[core::fmt::rt::Argument<'_>; 1];
    let _1294: [core::fmt::rt::Argument<'_>; 1];
    let mut _1295: core::fmt::rt::Argument<'_>;
    let _1296: ();
    let mut _1297: std::fmt::Arguments<'_>;
    let mut _1298: &[&str];
    let mut _1299: &[core::fmt::rt::Argument<'_>];
    let _1300: &[core::fmt::rt::Argument<'_>; 1];
    let _1301: [core::fmt::rt::Argument<'_>; 1];
    let mut _1302: core::fmt::rt::Argument<'_>;
    let _1303: ();
    let mut _1304: std::fmt::Arguments<'_>;
    let mut _1305: &[&str];
    let mut _1306: &[core::fmt::rt::Argument<'_>];
    let _1307: &[core::fmt::rt::Argument<'_>; 1];
    let _1308: [core::fmt::rt::Argument<'_>; 1];
    let mut _1309: core::fmt::rt::Argument<'_>;
    let _1310: ();
    let mut _1311: std::fmt::Arguments<'_>;
    let mut _1312: &[&str];
    let mut _1313: &[core::fmt::rt::Argument<'_>];
    let _1314: &[core::fmt::rt::Argument<'_>; 1];
    let _1315: [core::fmt::rt::Argument<'_>; 1];
    let mut _1316: core::fmt::rt::Argument<'_>;
    let _1317: ();
    let mut _1318: std::fmt::Arguments<'_>;
    let mut _1319: &[&str];
    let mut _1320: &[core::fmt::rt::Argument<'_>];
    let _1321: &[core::fmt::rt::Argument<'_>; 1];
    let _1322: [core::fmt::rt::Argument<'_>; 1];
    let mut _1323: core::fmt::rt::Argument<'_>;
    let _1324: ();
    let mut _1325: std::fmt::Arguments<'_>;
    let mut _1326: &[&str];
    let mut _1327: &[core::fmt::rt::Argument<'_>];
    let _1328: &[core::fmt::rt::Argument<'_>; 1];
    let _1329: [core::fmt::rt::Argument<'_>; 1];
    let mut _1330: core::fmt::rt::Argument<'_>;
    scope 1 {
        debug f => _1;
        let mut _1331: &f64;
        let mut _1332: &[&str; 2];
        let mut _1333: &f32;
        let mut _1334: &[&str; 2];
        let mut _1335: &u64;
        let mut _1336: &[&str; 2];
        let mut _1337: &u32;
        let mut _1338: &[&str; 2];
        let mut _1339: &u16;
        let mut _1340: &[&str; 2];
        let mut _1341: &u8;
        let mut _1342: &[&str; 2];
        let mut _1343: &i64;
        let mut _1344: &[&str; 2];
        let mut _1345: &i32;
        let mut _1346: &[&str; 2];
        let mut _1347: &i16;
        let mut _1348: &[&str; 2];
        let mut _1349: &i8;
        let mut _1350: &[&str; 2];
        let mut _1351: &usize;
        let mut _1352: &[&str; 2];
        let mut _1353: &isize;
        let mut _1354: &[&str; 2];
        let mut _1355: &f64;
        let mut _1356: &[&str; 2];
        let mut _1357: &f32;
        let mut _1358: &[&str; 2];
        let mut _1359: &u64;
        let mut _1360: &[&str; 2];
        let mut _1361: &u32;
        let mut _1362: &[&str; 2];
        let mut _1363: &u16;
        let mut _1364: &[&str; 2];
        let mut _1365: &u8;
        let mut _1366: &[&str; 2];
        let mut _1367: &i64;
        let mut _1368: &[&str; 2];
        let mut _1369: &i32;
        let mut _1370: &[&str; 2];
        let mut _1371: &i16;
        let mut _1372: &[&str; 2];
        let mut _1373: &i8;
        let mut _1374: &[&str; 2];
        let mut _1375: &usize;
        let mut _1376: &[&str; 2];
        let mut _1377: &isize;
        let mut _1378: &[&str; 2];
        let mut _1379: &u64;
        let mut _1380: &[&str; 2];
        let mut _1381: &u32;
        let mut _1382: &[&str; 2];
        let mut _1383: &u16;
        let mut _1384: &[&str; 2];
        let mut _1385: &u8;
        let mut _1386: &[&str; 2];
        let mut _1387: &i64;
        let mut _1388: &[&str; 2];
        let mut _1389: &i32;
        let mut _1390: &[&str; 2];
        let mut _1391: &i16;
        let mut _1392: &[&str; 2];
        let mut _1393: &i8;
        let mut _1394: &[&str; 2];
        let mut _1395: &usize;
        let mut _1396: &[&str; 2];
        let mut _1397: &isize;
        let mut _1398: &[&str; 2];
        let mut _1399: &f64;
        let mut _1400: &[&str; 2];
        let mut _1401: &f32;
        let mut _1402: &[&str; 2];
        let mut _1403: &u64;
        let mut _1404: &[&str; 2];
        let mut _1405: &u32;
        let mut _1406: &[&str; 2];
        let mut _1407: &u16;
        let mut _1408: &[&str; 2];
        let mut _1409: &u8;
        let mut _1410: &[&str; 2];
        let mut _1411: &i64;
        let mut _1412: &[&str; 2];
        let mut _1413: &i32;
        let mut _1414: &[&str; 2];
        let mut _1415: &i16;
        let mut _1416: &[&str; 2];
        let mut _1417: &i8;
        let mut _1418: &[&str; 2];
        let mut _1419: &*const std::string::String;
        let mut _1420: &[&str; 2];
        let mut _1421: &usize;
        let mut _1422: &[&str; 2];
        let mut _1423: &isize;
        let mut _1424: &[&str; 2];
        let mut _1425: &f64;
        let mut _1426: &[&str; 2];
        let mut _1427: &f32;
        let mut _1428: &[&str; 2];
        let mut _1429: &u64;
        let mut _1430: &[&str; 2];
        let mut _1431: &u32;
        let mut _1432: &[&str; 2];
        let mut _1433: &u16;
        let mut _1434: &[&str; 2];
        let mut _1435: &u8;
        let mut _1436: &[&str; 2];
        let mut _1437: &i64;
        let mut _1438: &[&str; 2];
        let mut _1439: &i32;
        let mut _1440: &[&str; 2];
        let mut _1441: &i16;
        let mut _1442: &[&str; 2];
        let mut _1443: &i8;
        let mut _1444: &[&str; 2];
        let mut _1445: &*const std::string::String;
        let mut _1446: &[&str; 2];
        let mut _1447: &usize;
        let mut _1448: &[&str; 2];
        let mut _1449: &isize;
        let mut _1450: &[&str; 2];
        let mut _1451: &f64;
        let mut _1452: &[&str; 2];
        let mut _1453: &f32;
        let mut _1454: &[&str; 2];
        let mut _1455: &u64;
        let mut _1456: &[&str; 2];
        let mut _1457: &u32;
        let mut _1458: &[&str; 2];
        let mut _1459: &u16;
        let mut _1460: &[&str; 2];
        let mut _1461: &u8;
        let mut _1462: &[&str; 2];
        let mut _1463: &i64;
        let mut _1464: &[&str; 2];
        let mut _1465: &i32;
        let mut _1466: &[&str; 2];
        let mut _1467: &i16;
        let mut _1468: &[&str; 2];
        let mut _1469: &i8;
        let mut _1470: &[&str; 2];
        let mut _1471: &*const std::string::String;
        let mut _1472: &[&str; 2];
        let mut _1473: &usize;
        let mut _1474: &[&str; 2];
        let mut _1475: &isize;
        let mut _1476: &[&str; 2];
        let mut _1477: &f64;
        let mut _1478: &[&str; 2];
        let mut _1479: &f32;
        let mut _1480: &[&str; 2];
        let mut _1481: &u64;
        let mut _1482: &[&str; 2];
        let mut _1483: &u32;
        let mut _1484: &[&str; 2];
        let mut _1485: &u16;
        let mut _1486: &[&str; 2];
        let mut _1487: &u8;
        let mut _1488: &[&str; 2];
        let mut _1489: &i64;
        let mut _1490: &[&str; 2];
        let mut _1491: &i32;
        let mut _1492: &[&str; 2];
        let mut _1493: &i16;
        let mut _1494: &[&str; 2];
        let mut _1495: &i8;
        let mut _1496: &[&str; 2];
        let mut _1497: &*const std::string::String;
        let mut _1498: &[&str; 2];
        let mut _1499: &usize;
        let mut _1500: &[&str; 2];
        let mut _1501: &isize;
        let mut _1502: &[&str; 2];
        let mut _1503: &f64;
        let mut _1504: &[&str; 2];
        let mut _1505: &f32;
        let mut _1506: &[&str; 2];
        let mut _1507: &u64;
        let mut _1508: &[&str; 2];
        let mut _1509: &u32;
        let mut _1510: &[&str; 2];
        let mut _1511: &u16;
        let mut _1512: &[&str; 2];
        let mut _1513: &u8;
        let mut _1514: &[&str; 2];
        let mut _1515: &i64;
        let mut _1516: &[&str; 2];
        let mut _1517: &i32;
        let mut _1518: &[&str; 2];
        let mut _1519: &i16;
        let mut _1520: &[&str; 2];
        let mut _1521: &i8;
        let mut _1522: &[&str; 2];
        let mut _1523: &*const std::string::String;
        let mut _1524: &[&str; 2];
        let mut _1525: &usize;
        let mut _1526: &[&str; 2];
        let mut _1527: &isize;
        let mut _1528: &[&str; 2];
        let mut _1529: &f64;
        let mut _1530: &[&str; 2];
        let mut _1531: &f32;
        let mut _1532: &[&str; 2];
        let mut _1533: &u64;
        let mut _1534: &[&str; 2];
        let mut _1535: &u32;
        let mut _1536: &[&str; 2];
        let mut _1537: &u16;
        let mut _1538: &[&str; 2];
        let mut _1539: &u8;
        let mut _1540: &[&str; 2];
        let mut _1541: &i64;
        let mut _1542: &[&str; 2];
        let mut _1543: &i32;
        let mut _1544: &[&str; 2];
        let mut _1545: &i16;
        let mut _1546: &[&str; 2];
        let mut _1547: &i8;
        let mut _1548: &[&str; 2];
        let mut _1549: &*const std::string::String;
        let mut _1550: &[&str; 2];
        let mut _1551: &usize;
        let mut _1552: &[&str; 2];
        let mut _1553: &isize;
        let mut _1554: &[&str; 2];
        let mut _1555: &f64;
        let mut _1556: &[&str; 2];
        let mut _1557: &f32;
        let mut _1558: &[&str; 2];
        let mut _1559: &u64;
        let mut _1560: &[&str; 2];
        let mut _1561: &u32;
        let mut _1562: &[&str; 2];
        let mut _1563: &u16;
        let mut _1564: &[&str; 2];
        let mut _1565: &u8;
        let mut _1566: &[&str; 2];
        let mut _1567: &i64;
        let mut _1568: &[&str; 2];
        let mut _1569: &i32;
        let mut _1570: &[&str; 2];
        let mut _1571: &i16;
        let mut _1572: &[&str; 2];
        let mut _1573: &i8;
        let mut _1574: &[&str; 2];
        let mut _1575: &*const std::string::String;
        let mut _1576: &[&str; 2];
        let mut _1577: &usize;
        let mut _1578: &[&str; 2];
        let mut _1579: &isize;
        let mut _1580: &[&str; 2];
        let mut _1581: &f64;
        let mut _1582: &[&str; 2];
        let mut _1583: &f32;
        let mut _1584: &[&str; 2];
        let mut _1585: &u64;
        let mut _1586: &[&str; 2];
        let mut _1587: &u32;
        let mut _1588: &[&str; 2];
        let mut _1589: &u16;
        let mut _1590: &[&str; 2];
        let mut _1591: &u8;
        let mut _1592: &[&str; 2];
        let mut _1593: &i64;
        let mut _1594: &[&str; 2];
        let mut _1595: &i32;
        let mut _1596: &[&str; 2];
        let mut _1597: &i16;
        let mut _1598: &[&str; 2];
        let mut _1599: &i8;
        let mut _1600: &[&str; 2];
        let mut _1601: &*const std::string::String;
        let mut _1602: &[&str; 2];
        let mut _1603: &usize;
        let mut _1604: &[&str; 2];
        let mut _1605: &isize;
        let mut _1606: &[&str; 2];
        let mut _1607: &f64;
        let mut _1608: &[&str; 2];
        let mut _1609: &f32;
        let mut _1610: &[&str; 2];
        let mut _1611: &u64;
        let mut _1612: &[&str; 2];
        let mut _1613: &u32;
        let mut _1614: &[&str; 2];
        let mut _1615: &u16;
        let mut _1616: &[&str; 2];
        let mut _1617: &u8;
        let mut _1618: &[&str; 2];
        let mut _1619: &i64;
        let mut _1620: &[&str; 2];
        let mut _1621: &i32;
        let mut _1622: &[&str; 2];
        let mut _1623: &i16;
        let mut _1624: &[&str; 2];
        let mut _1625: &i8;
        let mut _1626: &[&str; 2];
        let mut _1627: &*const std::string::String;
        let mut _1628: &[&str; 2];
        let mut _1629: &usize;
        let mut _1630: &[&str; 2];
        let mut _1631: &isize;
        let mut _1632: &[&str; 2];
        let mut _1633: &f64;
        let mut _1634: &[&str; 2];
        let mut _1635: &f32;
        let mut _1636: &[&str; 2];
        let mut _1637: &u64;
        let mut _1638: &[&str; 2];
        let mut _1639: &u32;
        let mut _1640: &[&str; 2];
        let mut _1641: &u16;
        let mut _1642: &[&str; 2];
        let mut _1643: &u8;
        let mut _1644: &[&str; 2];
        let mut _1645: &i64;
        let mut _1646: &[&str; 2];
        let mut _1647: &i32;
        let mut _1648: &[&str; 2];
        let mut _1649: &i16;
        let mut _1650: &[&str; 2];
        let mut _1651: &i8;
        let mut _1652: &[&str; 2];
        let mut _1653: &*const std::string::String;
        let mut _1654: &[&str; 2];
        let mut _1655: &usize;
        let mut _1656: &[&str; 2];
        let mut _1657: &isize;
        let mut _1658: &[&str; 2];
        let mut _1659: &f64;
        let mut _1660: &[&str; 2];
        let mut _1661: &f32;
        let mut _1662: &[&str; 2];
        let mut _1663: &u64;
        let mut _1664: &[&str; 2];
        let mut _1665: &u32;
        let mut _1666: &[&str; 2];
        let mut _1667: &u16;
        let mut _1668: &[&str; 2];
        let mut _1669: &u8;
        let mut _1670: &[&str; 2];
        let mut _1671: &i64;
        let mut _1672: &[&str; 2];
        let mut _1673: &i32;
        let mut _1674: &[&str; 2];
        let mut _1675: &i16;
        let mut _1676: &[&str; 2];
        let mut _1677: &i8;
        let mut _1678: &[&str; 2];
        let mut _1679: &*const std::string::String;
        let mut _1680: &[&str; 2];
        let mut _1681: &usize;
        let mut _1682: &[&str; 2];
        let mut _1683: &isize;
        let mut _1684: &[&str; 2];
        let mut _1685: &[&str; 2];
        let mut _1686: &[&str; 2];
        let mut _1687: &[&str; 2];
        let mut _1688: &[&str; 2];
        let mut _1689: &[&str; 2];
        let mut _1690: &[&str; 2];
        let mut _1691: &[&str; 2];
        let mut _1692: &[&str; 2];
        let mut _1693: &[&str; 2];
        let mut _1694: &[&str; 2];
    }

    bb0: {
        _1 = const 1_usize as *const std::string::String (PointerFromExposedAddress);
        _1694 = const _;
        _4 = _1694 as &[&str] (Pointer(Unsize));
        _10 = _1 as isize (PointerExposeAddress);
        _9 = &_10;
        _8 = core::fmt::rt::Argument::<'_>::new_debug::<isize>(_9) -> [return: bb1, unwind continue];
    }

    bb1: {
        _7 = [move _8];
        _6 = &_7;
        _5 = _6 as &[core::fmt::rt::Argument<'_>] (Pointer(Unsize));
        _3 = Arguments::<'_>::new_v1(move _4, move _5) -> [return: bb2, unwind continue];
    }

    bb2: {
        _2 = _print(move _3) -> [return: bb3, unwind continue];
    }

    bb3: {
        _1693 = const _;
        _13 = _1693 as &[&str] (Pointer(Unsize));
        _19 = _1 as usize (PointerExposeAddress);
        _18 = &_19;
        _17 = core::fmt::rt::Argument::<'_>::new_debug::<usize>(_18) -> [return: bb4, unwind continue];
    }

    bb4: {
        _16 = [move _17];
        _15 = &_16;
        _14 = _15 as &[core::fmt::rt::Argument<'_>] (Pointer(Unsize));
        _12 = Arguments::<'_>::new_v1(move _13, move _14) -> [return: bb5, unwind continue];
    }

    bb5: {
        _11 = _print(move _12) -> [return: bb6, unwind continue];
    }

    bb6: {
        _1692 = const _;
        _22 = _1692 as &[&str] (Pointer(Unsize));
        _28 = _1 as i8 (PointerExposeAddress);
        _27 = &_28;
        _26 = core::fmt::rt::Argument::<'_>::new_debug::<i8>(_27) -> [return: bb7, unwind continue];
    }

    bb7: {
        _25 = [move _26];
        _24 = &_25;
        _23 = _24 as &[core::fmt::rt::Argument<'_>] (Pointer(Unsize));
        _21 = Arguments::<'_>::new_v1(move _22, move _23) -> [return: bb8, unwind continue];
    }

    bb8: {
        _20 = _print(move _21) -> [return: bb9, unwind continue];
    }

    bb9: {
        _1691 = const _;
        _31 = _1691 as &[&str] (Pointer(Unsize));
        _37 = _1 as i16 (PointerExposeAddress);
        _36 = &_37;
        _35 = core::fmt::rt::Argument::<'_>::new_debug::<i16>(_36) -> [return: bb10, unwind continue];
    }

    bb10: {
        _34 = [move _35];
        _33 = &_34;
        _32 = _33 as &[core::fmt::rt::Argument<'_>] (Pointer(Unsize));
        _30 = Arguments::<'_>::new_v1(move _31, move _32) -> [return: bb11, unwind continue];
    }

    bb11: {
        _29 = _print(move _30) -> [return: bb12, unwind continue];
    }

    bb12: {
        _1690 = const _;
        _40 = _1690 as &[&str] (Pointer(Unsize));
        _46 = _1 as i32 (PointerExposeAddress);
        _45 = &_46;
        _44 = core::fmt::rt::Argument::<'_>::new_debug::<i32>(_45) -> [return: bb13, unwind continue];
    }

    bb13: {
        _43 = [move _44];
        _42 = &_43;
        _41 = _42 as &[core::fmt::rt::Argument<'_>] (Pointer(Unsize));
        _39 = Arguments::<'_>::new_v1(move _40, move _41) -> [return: bb14, unwind continue];
    }

    bb14: {
        _38 = _print(move _39) -> [return: bb15, unwind continue];
    }

    bb15: {
        _1689 = const _;
        _49 = _1689 as &[&str] (Pointer(Unsize));
        _55 = _1 as i64 (PointerExposeAddress);
        _54 = &_55;
        _53 = core::fmt::rt::Argument::<'_>::new_debug::<i64>(_54) -> [return: bb16, unwind continue];
    }

    bb16: {
        _52 = [move _53];
        _51 = &_52;
        _50 = _51 as &[core::fmt::rt::Argument<'_>] (Pointer(Unsize));
        _48 = Arguments::<'_>::new_v1(move _49, move _50) -> [return: bb17, unwind continue];
    }

    bb17: {
        _47 = _print(move _48) -> [return: bb18, unwind continue];
    }

    bb18: {
        _1688 = const _;
        _58 = _1688 as &[&str] (Pointer(Unsize));
        _64 = _1 as u8 (PointerExposeAddress);
        _63 = &_64;
        _62 = core::fmt::rt::Argument::<'_>::new_debug::<u8>(_63) -> [return: bb19, unwind continue];
    }

    bb19: {
        _61 = [move _62];
        _60 = &_61;
        _59 = _60 as &[core::fmt::rt::Argument<'_>] (Pointer(Unsize));
        _57 = Arguments::<'_>::new_v1(move _58, move _59) -> [return: bb20, unwind continue];
    }

    bb20: {
        _56 = _print(move _57) -> [return: bb21, unwind continue];
    }

    bb21: {
        _1687 = const _;
        _67 = _1687 as &[&str] (Pointer(Unsize));
        _73 = _1 as u16 (PointerExposeAddress);
        _72 = &_73;
        _71 = core::fmt::rt::Argument::<'_>::new_debug::<u16>(_72) -> [return: bb22, unwind continue];
    }

    bb22: {
        _70 = [move _71];
        _69 = &_70;
        _68 = _69 as &[core::fmt::rt::Argument<'_>] (Pointer(Unsize));
        _66 = Arguments::<'_>::new_v1(move _67, move _68) -> [return: bb23, unwind continue];
    }

    bb23: {
        _65 = _print(move _66) -> [return: bb24, unwind continue];
    }

    bb24: {
        _1686 = const _;
        _76 = _1686 as &[&str] (Pointer(Unsize));
        _82 = _1 as u32 (PointerExposeAddress);
        _81 = &_82;
        _80 = core::fmt::rt::Argument::<'_>::new_debug::<u32>(_81) -> [return: bb25, unwind continue];
    }

    bb25: {
        _79 = [move _80];
        _78 = &_79;
        _77 = _78 as &[core::fmt::rt::Argument<'_>] (Pointer(Unsize));
        _75 = Arguments::<'_>::new_v1(move _76, move _77) -> [return: bb26, unwind continue];
    }

    bb26: {
        _74 = _print(move _75) -> [return: bb27, unwind continue];
    }

    bb27: {
        _1685 = const _;
        _85 = _1685 as &[&str] (Pointer(Unsize));
        _91 = _1 as u64 (PointerExposeAddress);
        _90 = &_91;
        _89 = core::fmt::rt::Argument::<'_>::new_debug::<u64>(_90) -> [return: bb28, unwind continue];
    }

    bb28: {
        _88 = [move _89];
        _87 = &_88;
        _86 = _87 as &[core::fmt::rt::Argument<'_>] (Pointer(Unsize));
        _84 = Arguments::<'_>::new_v1(move _85, move _86) -> [return: bb29, unwind continue];
    }

    bb29: {
        _83 = _print(move _84) -> [return: bb30, unwind continue];
    }

    bb30: {
        _1684 = const _;
        _94 = _1684 as &[&str] (Pointer(Unsize));
        _1683 = const _;
        _98 = core::fmt::rt::Argument::<'_>::new_debug::<isize>(_1683) -> [return: bb31, unwind continue];
    }

    bb31: {
        _97 = [move _98];
        _96 = &_97;
        _95 = _96 as &[core::fmt::rt::Argument<'_>] (Pointer(Unsize));
        _93 = Arguments::<'_>::new_v1(move _94, move _95) -> [return: bb32, unwind continue];
    }

    bb32: {
        _92 = _print(move _93) -> [return: bb33, unwind continue];
    }

    bb33: {
        _1682 = const _;
        _101 = _1682 as &[&str] (Pointer(Unsize));
        _1681 = const _;
        _105 = core::fmt::rt::Argument::<'_>::new_debug::<usize>(_1681) -> [return: bb34, unwind continue];
    }

    bb34: {
        _104 = [move _105];
        _103 = &_104;
        _102 = _103 as &[core::fmt::rt::Argument<'_>] (Pointer(Unsize));
        _100 = Arguments::<'_>::new_v1(move _101, move _102) -> [return: bb35, unwind continue];
    }

    bb35: {
        _99 = _print(move _100) -> [return: bb36, unwind continue];
    }

    bb36: {
        _1680 = const _;
        _108 = _1680 as &[&str] (Pointer(Unsize));
        _1679 = const _;
        _112 = core::fmt::rt::Argument::<'_>::new_debug::<*const String>(_1679) -> [return: bb37, unwind continue];
    }

    bb37: {
        _111 = [move _112];
        _110 = &_111;
        _109 = _110 as &[core::fmt::rt::Argument<'_>] (Pointer(Unsize));
        _107 = Arguments::<'_>::new_v1(move _108, move _109) -> [return: bb38, unwind continue];
    }

    bb38: {
        _106 = _print(move _107) -> [return: bb39, unwind continue];
    }

    bb39: {
        _1678 = const _;
        _115 = _1678 as &[&str] (Pointer(Unsize));
        _1677 = const _;
        _119 = core::fmt::rt::Argument::<'_>::new_debug::<i8>(_1677) -> [return: bb40, unwind continue];
    }

    bb40: {
        _118 = [move _119];
        _117 = &_118;
        _116 = _117 as &[core::fmt::rt::Argument<'_>] (Pointer(Unsize));
        _114 = Arguments::<'_>::new_v1(move _115, move _116) -> [return: bb41, unwind continue];
    }

    bb41: {
        _113 = _print(move _114) -> [return: bb42, unwind continue];
    }

    bb42: {
        _1676 = const _;
        _122 = _1676 as &[&str] (Pointer(Unsize));
        _1675 = const _;
        _126 = core::fmt::rt::Argument::<'_>::new_debug::<i16>(_1675) -> [return: bb43, unwind continue];
    }

    bb43: {
        _125 = [move _126];
        _124 = &_125;
        _123 = _124 as &[core::fmt::rt::Argument<'_>] (Pointer(Unsize));
        _121 = Arguments::<'_>::new_v1(move _122, move _123) -> [return: bb44, unwind continue];
    }

    bb44: {
        _120 = _print(move _121) -> [return: bb45, unwind continue];
    }

    bb45: {
        _1674 = const _;
        _129 = _1674 as &[&str] (Pointer(Unsize));
        _1673 = const _;
        _133 = core::fmt::rt::Argument::<'_>::new_debug::<i32>(_1673) -> [return: bb46, unwind continue];
    }

    bb46: {
        _132 = [move _133];
        _131 = &_132;
        _130 = _131 as &[core::fmt::rt::Argument<'_>] (Pointer(Unsize));
        _128 = Arguments::<'_>::new_v1(move _129, move _130) -> [return: bb47, unwind continue];
    }

    bb47: {
        _127 = _print(move _128) -> [return: bb48, unwind continue];
    }

    bb48: {
        _1672 = const _;
        _136 = _1672 as &[&str] (Pointer(Unsize));
        _1671 = const _;
        _140 = core::fmt::rt::Argument::<'_>::new_debug::<i64>(_1671) -> [return: bb49, unwind continue];
    }

    bb49: {
        _139 = [move _140];
        _138 = &_139;
        _137 = _138 as &[core::fmt::rt::Argument<'_>] (Pointer(Unsize));
        _135 = Arguments::<'_>::new_v1(move _136, move _137) -> [return: bb50, unwind continue];
    }

    bb50: {
        _134 = _print(move _135) -> [return: bb51, unwind continue];
    }

    bb51: {
        _1670 = const _;
        _143 = _1670 as &[&str] (Pointer(Unsize));
        _1669 = const _;
        _147 = core::fmt::rt::Argument::<'_>::new_debug::<u8>(_1669) -> [return: bb52, unwind continue];
    }

    bb52: {
        _146 = [move _147];
        _145 = &_146;
        _144 = _145 as &[core::fmt::rt::Argument<'_>] (Pointer(Unsize));
        _142 = Arguments::<'_>::new_v1(move _143, move _144) -> [return: bb53, unwind continue];
    }

    bb53: {
        _141 = _print(move _142) -> [return: bb54, unwind continue];
    }

    bb54: {
        _1668 = const _;
        _150 = _1668 as &[&str] (Pointer(Unsize));
        _1667 = const _;
        _154 = core::fmt::rt::Argument::<'_>::new_debug::<u16>(_1667) -> [return: bb55, unwind continue];
    }

    bb55: {
        _153 = [move _154];
        _152 = &_153;
        _151 = _152 as &[core::fmt::rt::Argument<'_>] (Pointer(Unsize));
        _149 = Arguments::<'_>::new_v1(move _150, move _151) -> [return: bb56, unwind continue];
    }

    bb56: {
        _148 = _print(move _149) -> [return: bb57, unwind continue];
    }

    bb57: {
        _1666 = const _;
        _157 = _1666 as &[&str] (Pointer(Unsize));
        _1665 = const _;
        _161 = core::fmt::rt::Argument::<'_>::new_debug::<u32>(_1665) -> [return: bb58, unwind continue];
    }

    bb58: {
        _160 = [move _161];
        _159 = &_160;
        _158 = _159 as &[core::fmt::rt::Argument<'_>] (Pointer(Unsize));
        _156 = Arguments::<'_>::new_v1(move _157, move _158) -> [return: bb59, unwind continue];
    }

    bb59: {
        _155 = _print(move _156) -> [return: bb60, unwind continue];
    }

    bb60: {
        _1664 = const _;
        _164 = _1664 as &[&str] (Pointer(Unsize));
        _1663 = const _;
        _168 = core::fmt::rt::Argument::<'_>::new_debug::<u64>(_1663) -> [return: bb61, unwind continue];
    }

    bb61: {
        _167 = [move _168];
        _166 = &_167;
        _165 = _166 as &[core::fmt::rt::Argument<'_>] (Pointer(Unsize));
        _163 = Arguments::<'_>::new_v1(move _164, move _165) -> [return: bb62, unwind continue];
    }

    bb62: {
        _162 = _print(move _163) -> [return: bb63, unwind continue];
    }

    bb63: {
        _1662 = const _;
        _171 = _1662 as &[&str] (Pointer(Unsize));
        _1661 = const _;
        _175 = core::fmt::rt::Argument::<'_>::new_debug::<f32>(_1661) -> [return: bb64, unwind continue];
    }

    bb64: {
        _174 = [move _175];
        _173 = &_174;
        _172 = _173 as &[core::fmt::rt::Argument<'_>] (Pointer(Unsize));
        _170 = Arguments::<'_>::new_v1(move _171, move _172) -> [return: bb65, unwind continue];
    }

    bb65: {
        _169 = _print(move _170) -> [return: bb66, unwind continue];
    }

    bb66: {
        _1660 = const _;
        _178 = _1660 as &[&str] (Pointer(Unsize));
        _1659 = const _;
        _182 = core::fmt::rt::Argument::<'_>::new_debug::<f64>(_1659) -> [return: bb67, unwind continue];
    }

    bb67: {
        _181 = [move _182];
        _180 = &_181;
        _179 = _180 as &[core::fmt::rt::Argument<'_>] (Pointer(Unsize));
        _177 = Arguments::<'_>::new_v1(move _178, move _179) -> [return: bb68, unwind continue];
    }

    bb68: {
        _176 = _print(move _177) -> [return: bb69, unwind continue];
    }

    bb69: {
        _1658 = const _;
        _185 = _1658 as &[&str] (Pointer(Unsize));
        _1657 = const _;
        _189 = core::fmt::rt::Argument::<'_>::new_debug::<isize>(_1657) -> [return: bb70, unwind continue];
    }

    bb70: {
        _188 = [move _189];
        _187 = &_188;
        _186 = _187 as &[core::fmt::rt::Argument<'_>] (Pointer(Unsize));
        _184 = Arguments::<'_>::new_v1(move _185, move _186) -> [return: bb71, unwind continue];
    }

    bb71: {
        _183 = _print(move _184) -> [return: bb72, unwind continue];
    }

    bb72: {
        _1656 = const _;
        _192 = _1656 as &[&str] (Pointer(Unsize));
        _1655 = const _;
        _196 = core::fmt::rt::Argument::<'_>::new_debug::<usize>(_1655) -> [return: bb73, unwind continue];
    }

    bb73: {
        _195 = [move _196];
        _194 = &_195;
        _193 = _194 as &[core::fmt::rt::Argument<'_>] (Pointer(Unsize));
        _191 = Arguments::<'_>::new_v1(move _192, move _193) -> [return: bb74, unwind continue];
    }

    bb74: {
        _190 = _print(move _191) -> [return: bb75, unwind continue];
    }

    bb75: {
        _1654 = const _;
        _199 = _1654 as &[&str] (Pointer(Unsize));
        _1653 = const _;
        _203 = core::fmt::rt::Argument::<'_>::new_debug::<*const String>(_1653) -> [return: bb76, unwind continue];
    }

    bb76: {
        _202 = [move _203];
        _201 = &_202;
        _200 = _201 as &[core::fmt::rt::Argument<'_>] (Pointer(Unsize));
        _198 = Arguments::<'_>::new_v1(move _199, move _200) -> [return: bb77, unwind continue];
    }

    bb77: {
        _197 = _print(move _198) -> [return: bb78, unwind continue];
    }

    bb78: {
        _1652 = const _;
        _206 = _1652 as &[&str] (Pointer(Unsize));
        _1651 = const _;
        _210 = core::fmt::rt::Argument::<'_>::new_debug::<i8>(_1651) -> [return: bb79, unwind continue];
    }

    bb79: {
        _209 = [move _210];
        _208 = &_209;
        _207 = _208 as &[core::fmt::rt::Argument<'_>] (Pointer(Unsize));
        _205 = Arguments::<'_>::new_v1(move _206, move _207) -> [return: bb80, unwind continue];
    }

    bb80: {
        _204 = _print(move _205) -> [return: bb81, unwind continue];
    }

    bb81: {
        _1650 = const _;
        _213 = _1650 as &[&str] (Pointer(Unsize));
        _1649 = const _;
        _217 = core::fmt::rt::Argument::<'_>::new_debug::<i16>(_1649) -> [return: bb82, unwind continue];
    }

    bb82: {
        _216 = [move _217];
        _215 = &_216;
        _214 = _215 as &[core::fmt::rt::Argument<'_>] (Pointer(Unsize));
        _212 = Arguments::<'_>::new_v1(move _213, move _214) -> [return: bb83, unwind continue];
    }

    bb83: {
        _211 = _print(move _212) -> [return: bb84, unwind continue];
    }

    bb84: {
        _1648 = const _;
        _220 = _1648 as &[&str] (Pointer(Unsize));
        _1647 = const _;
        _224 = core::fmt::rt::Argument::<'_>::new_debug::<i32>(_1647) -> [return: bb85, unwind continue];
    }

    bb85: {
        _223 = [move _224];
        _222 = &_223;
        _221 = _222 as &[core::fmt::rt::Argument<'_>] (Pointer(Unsize));
        _219 = Arguments::<'_>::new_v1(move _220, move _221) -> [return: bb86, unwind continue];
    }

    bb86: {
        _218 = _print(move _219) -> [return: bb87, unwind continue];
    }

    bb87: {
        _1646 = const _;
        _227 = _1646 as &[&str] (Pointer(Unsize));
        _1645 = const _;
        _231 = core::fmt::rt::Argument::<'_>::new_debug::<i64>(_1645) -> [return: bb88, unwind continue];
    }

    bb88: {
        _230 = [move _231];
        _229 = &_230;
        _228 = _229 as &[core::fmt::rt::Argument<'_>] (Pointer(Unsize));
        _226 = Arguments::<'_>::new_v1(move _227, move _228) -> [return: bb89, unwind continue];
    }

    bb89: {
        _225 = _print(move _226) -> [return: bb90, unwind continue];
    }

    bb90: {
        _1644 = const _;
        _234 = _1644 as &[&str] (Pointer(Unsize));
        _1643 = const _;
        _238 = core::fmt::rt::Argument::<'_>::new_debug::<u8>(_1643) -> [return: bb91, unwind continue];
    }

    bb91: {
        _237 = [move _238];
        _236 = &_237;
        _235 = _236 as &[core::fmt::rt::Argument<'_>] (Pointer(Unsize));
        _233 = Arguments::<'_>::new_v1(move _234, move _235) -> [return: bb92, unwind continue];
    }

    bb92: {
        _232 = _print(move _233) -> [return: bb93, unwind continue];
    }

    bb93: {
        _1642 = const _;
        _241 = _1642 as &[&str] (Pointer(Unsize));
        _1641 = const _;
        _245 = core::fmt::rt::Argument::<'_>::new_debug::<u16>(_1641) -> [return: bb94, unwind continue];
    }

    bb94: {
        _244 = [move _245];
        _243 = &_244;
        _242 = _243 as &[core::fmt::rt::Argument<'_>] (Pointer(Unsize));
        _240 = Arguments::<'_>::new_v1(move _241, move _242) -> [return: bb95, unwind continue];
    }

    bb95: {
        _239 = _print(move _240) -> [return: bb96, unwind continue];
    }

    bb96: {
        _1640 = const _;
        _248 = _1640 as &[&str] (Pointer(Unsize));
        _1639 = const _;
        _252 = core::fmt::rt::Argument::<'_>::new_debug::<u32>(_1639) -> [return: bb97, unwind continue];
    }

    bb97: {
        _251 = [move _252];
        _250 = &_251;
        _249 = _250 as &[core::fmt::rt::Argument<'_>] (Pointer(Unsize));
        _247 = Arguments::<'_>::new_v1(move _248, move _249) -> [return: bb98, unwind continue];
    }

    bb98: {
        _246 = _print(move _247) -> [return: bb99, unwind continue];
    }

    bb99: {
        _1638 = const _;
        _255 = _1638 as &[&str] (Pointer(Unsize));
        _1637 = const _;
        _259 = core::fmt::rt::Argument::<'_>::new_debug::<u64>(_1637) -> [return: bb100, unwind continue];
    }

    bb100: {
        _258 = [move _259];
        _257 = &_258;
        _256 = _257 as &[core::fmt::rt::Argument<'_>] (Pointer(Unsize));
        _254 = Arguments::<'_>::new_v1(move _255, move _256) -> [return: bb101, unwind continue];
    }

    bb101: {
        _253 = _print(move _254) -> [return: bb102, unwind continue];
    }

    bb102: {
        _1636 = const _;
        _262 = _1636 as &[&str] (Pointer(Unsize));
        _1635 = const _;
        _266 = core::fmt::rt::Argument::<'_>::new_debug::<f32>(_1635) -> [return: bb103, unwind continue];
    }

    bb103: {
        _265 = [move _266];
        _264 = &_265;
        _263 = _264 as &[core::fmt::rt::Argument<'_>] (Pointer(Unsize));
        _261 = Arguments::<'_>::new_v1(move _262, move _263) -> [return: bb104, unwind continue];
    }

    bb104: {
        _260 = _print(move _261) -> [return: bb105, unwind continue];
    }

    bb105: {
        _1634 = const _;
        _269 = _1634 as &[&str] (Pointer(Unsize));
        _1633 = const _;
        _273 = core::fmt::rt::Argument::<'_>::new_debug::<f64>(_1633) -> [return: bb106, unwind continue];
    }

    bb106: {
        _272 = [move _273];
        _271 = &_272;
        _270 = _271 as &[core::fmt::rt::Argument<'_>] (Pointer(Unsize));
        _268 = Arguments::<'_>::new_v1(move _269, move _270) -> [return: bb107, unwind continue];
    }

    bb107: {
        _267 = _print(move _268) -> [return: bb108, unwind continue];
    }

    bb108: {
        _1632 = const _;
        _276 = _1632 as &[&str] (Pointer(Unsize));
        _1631 = const _;
        _280 = core::fmt::rt::Argument::<'_>::new_debug::<isize>(_1631) -> [return: bb109, unwind continue];
    }

    bb109: {
        _279 = [move _280];
        _278 = &_279;
        _277 = _278 as &[core::fmt::rt::Argument<'_>] (Pointer(Unsize));
        _275 = Arguments::<'_>::new_v1(move _276, move _277) -> [return: bb110, unwind continue];
    }

    bb110: {
        _274 = _print(move _275) -> [return: bb111, unwind continue];
    }

    bb111: {
        _1630 = const _;
        _283 = _1630 as &[&str] (Pointer(Unsize));
        _1629 = const _;
        _287 = core::fmt::rt::Argument::<'_>::new_debug::<usize>(_1629) -> [return: bb112, unwind continue];
    }

    bb112: {
        _286 = [move _287];
        _285 = &_286;
        _284 = _285 as &[core::fmt::rt::Argument<'_>] (Pointer(Unsize));
        _282 = Arguments::<'_>::new_v1(move _283, move _284) -> [return: bb113, unwind continue];
    }

    bb113: {
        _281 = _print(move _282) -> [return: bb114, unwind continue];
    }

    bb114: {
        _1628 = const _;
        _290 = _1628 as &[&str] (Pointer(Unsize));
        _1627 = const _;
        _294 = core::fmt::rt::Argument::<'_>::new_debug::<*const String>(_1627) -> [return: bb115, unwind continue];
    }

    bb115: {
        _293 = [move _294];
        _292 = &_293;
        _291 = _292 as &[core::fmt::rt::Argument<'_>] (Pointer(Unsize));
        _289 = Arguments::<'_>::new_v1(move _290, move _291) -> [return: bb116, unwind continue];
    }

    bb116: {
        _288 = _print(move _289) -> [return: bb117, unwind continue];
    }

    bb117: {
        _1626 = const _;
        _297 = _1626 as &[&str] (Pointer(Unsize));
        _1625 = const _;
        _301 = core::fmt::rt::Argument::<'_>::new_debug::<i8>(_1625) -> [return: bb118, unwind continue];
    }

    bb118: {
        _300 = [move _301];
        _299 = &_300;
        _298 = _299 as &[core::fmt::rt::Argument<'_>] (Pointer(Unsize));
        _296 = Arguments::<'_>::new_v1(move _297, move _298) -> [return: bb119, unwind continue];
    }

    bb119: {
        _295 = _print(move _296) -> [return: bb120, unwind continue];
    }

    bb120: {
        _1624 = const _;
        _304 = _1624 as &[&str] (Pointer(Unsize));
        _1623 = const _;
        _308 = core::fmt::rt::Argument::<'_>::new_debug::<i16>(_1623) -> [return: bb121, unwind continue];
    }

    bb121: {
        _307 = [move _308];
        _306 = &_307;
        _305 = _306 as &[core::fmt::rt::Argument<'_>] (Pointer(Unsize));
        _303 = Arguments::<'_>::new_v1(move _304, move _305) -> [return: bb122, unwind continue];
    }

    bb122: {
        _302 = _print(move _303) -> [return: bb123, unwind continue];
    }

    bb123: {
        _1622 = const _;
        _311 = _1622 as &[&str] (Pointer(Unsize));
        _1621 = const _;
        _315 = core::fmt::rt::Argument::<'_>::new_debug::<i32>(_1621) -> [return: bb124, unwind continue];
    }

    bb124: {
        _314 = [move _315];
        _313 = &_314;
        _312 = _313 as &[core::fmt::rt::Argument<'_>] (Pointer(Unsize));
        _310 = Arguments::<'_>::new_v1(move _311, move _312) -> [return: bb125, unwind continue];
    }

    bb125: {
        _309 = _print(move _310) -> [return: bb126, unwind continue];
    }

    bb126: {
        _1620 = const _;
        _318 = _1620 as &[&str] (Pointer(Unsize));
        _1619 = const _;
        _322 = core::fmt::rt::Argument::<'_>::new_debug::<i64>(_1619) -> [return: bb127, unwind continue];
    }

    bb127: {
        _321 = [move _322];
        _320 = &_321;
        _319 = _320 as &[core::fmt::rt::Argument<'_>] (Pointer(Unsize));
        _317 = Arguments::<'_>::new_v1(move _318, move _319) -> [return: bb128, unwind continue];
    }

    bb128: {
        _316 = _print(move _317) -> [return: bb129, unwind continue];
    }

    bb129: {
        _1618 = const _;
        _325 = _1618 as &[&str] (Pointer(Unsize));
        _1617 = const _;
        _329 = core::fmt::rt::Argument::<'_>::new_debug::<u8>(_1617) -> [return: bb130, unwind continue];
    }

    bb130: {
        _328 = [move _329];
        _327 = &_328;
        _326 = _327 as &[core::fmt::rt::Argument<'_>] (Pointer(Unsize));
        _324 = Arguments::<'_>::new_v1(move _325, move _326) -> [return: bb131, unwind continue];
    }

    bb131: {
        _323 = _print(move _324) -> [return: bb132, unwind continue];
    }

    bb132: {
        _1616 = const _;
        _332 = _1616 as &[&str] (Pointer(Unsize));
        _1615 = const _;
        _336 = core::fmt::rt::Argument::<'_>::new_debug::<u16>(_1615) -> [return: bb133, unwind continue];
    }

    bb133: {
        _335 = [move _336];
        _334 = &_335;
        _333 = _334 as &[core::fmt::rt::Argument<'_>] (Pointer(Unsize));
        _331 = Arguments::<'_>::new_v1(move _332, move _333) -> [return: bb134, unwind continue];
    }

    bb134: {
        _330 = _print(move _331) -> [return: bb135, unwind continue];
    }

    bb135: {
        _1614 = const _;
        _339 = _1614 as &[&str] (Pointer(Unsize));
        _1613 = const _;
        _343 = core::fmt::rt::Argument::<'_>::new_debug::<u32>(_1613) -> [return: bb136, unwind continue];
    }

    bb136: {
        _342 = [move _343];
        _341 = &_342;
        _340 = _341 as &[core::fmt::rt::Argument<'_>] (Pointer(Unsize));
        _338 = Arguments::<'_>::new_v1(move _339, move _340) -> [return: bb137, unwind continue];
    }

    bb137: {
        _337 = _print(move _338) -> [return: bb138, unwind continue];
    }

    bb138: {
        _1612 = const _;
        _346 = _1612 as &[&str] (Pointer(Unsize));
        _1611 = const _;
        _350 = core::fmt::rt::Argument::<'_>::new_debug::<u64>(_1611) -> [return: bb139, unwind continue];
    }

    bb139: {
        _349 = [move _350];
        _348 = &_349;
        _347 = _348 as &[core::fmt::rt::Argument<'_>] (Pointer(Unsize));
        _345 = Arguments::<'_>::new_v1(move _346, move _347) -> [return: bb140, unwind continue];
    }

    bb140: {
        _344 = _print(move _345) -> [return: bb141, unwind continue];
    }

    bb141: {
        _1610 = const _;
        _353 = _1610 as &[&str] (Pointer(Unsize));
        _1609 = const _;
        _357 = core::fmt::rt::Argument::<'_>::new_debug::<f32>(_1609) -> [return: bb142, unwind continue];
    }

    bb142: {
        _356 = [move _357];
        _355 = &_356;
        _354 = _355 as &[core::fmt::rt::Argument<'_>] (Pointer(Unsize));
        _352 = Arguments::<'_>::new_v1(move _353, move _354) -> [return: bb143, unwind continue];
    }

    bb143: {
        _351 = _print(move _352) -> [return: bb144, unwind continue];
    }

    bb144: {
        _1608 = const _;
        _360 = _1608 as &[&str] (Pointer(Unsize));
        _1607 = const _;
        _364 = core::fmt::rt::Argument::<'_>::new_debug::<f64>(_1607) -> [return: bb145, unwind continue];
    }

    bb145: {
        _363 = [move _364];
        _362 = &_363;
        _361 = _362 as &[core::fmt::rt::Argument<'_>] (Pointer(Unsize));
        _359 = Arguments::<'_>::new_v1(move _360, move _361) -> [return: bb146, unwind continue];
    }

    bb146: {
        _358 = _print(move _359) -> [return: bb147, unwind continue];
    }

    bb147: {
        _1606 = const _;
        _367 = _1606 as &[&str] (Pointer(Unsize));
        _1605 = const _;
        _371 = core::fmt::rt::Argument::<'_>::new_debug::<isize>(_1605) -> [return: bb148, unwind continue];
    }

    bb148: {
        _370 = [move _371];
        _369 = &_370;
        _368 = _369 as &[core::fmt::rt::Argument<'_>] (Pointer(Unsize));
        _366 = Arguments::<'_>::new_v1(move _367, move _368) -> [return: bb149, unwind continue];
    }

    bb149: {
        _365 = _print(move _366) -> [return: bb150, unwind continue];
    }

    bb150: {
        _1604 = const _;
        _374 = _1604 as &[&str] (Pointer(Unsize));
        _1603 = const _;
        _378 = core::fmt::rt::Argument::<'_>::new_debug::<usize>(_1603) -> [return: bb151, unwind continue];
    }

    bb151: {
        _377 = [move _378];
        _376 = &_377;
        _375 = _376 as &[core::fmt::rt::Argument<'_>] (Pointer(Unsize));
        _373 = Arguments::<'_>::new_v1(move _374, move _375) -> [return: bb152, unwind continue];
    }

    bb152: {
        _372 = _print(move _373) -> [return: bb153, unwind continue];
    }

    bb153: {
        _1602 = const _;
        _381 = _1602 as &[&str] (Pointer(Unsize));
        _1601 = const _;
        _385 = core::fmt::rt::Argument::<'_>::new_debug::<*const String>(_1601) -> [return: bb154, unwind continue];
    }

    bb154: {
        _384 = [move _385];
        _383 = &_384;
        _382 = _383 as &[core::fmt::rt::Argument<'_>] (Pointer(Unsize));
        _380 = Arguments::<'_>::new_v1(move _381, move _382) -> [return: bb155, unwind continue];
    }

    bb155: {
        _379 = _print(move _380) -> [return: bb156, unwind continue];
    }

    bb156: {
        _1600 = const _;
        _388 = _1600 as &[&str] (Pointer(Unsize));
        _1599 = const _;
        _392 = core::fmt::rt::Argument::<'_>::new_debug::<i8>(_1599) -> [return: bb157, unwind continue];
    }

    bb157: {
        _391 = [move _392];
        _390 = &_391;
        _389 = _390 as &[core::fmt::rt::Argument<'_>] (Pointer(Unsize));
        _387 = Arguments::<'_>::new_v1(move _388, move _389) -> [return: bb158, unwind continue];
    }

    bb158: {
        _386 = _print(move _387) -> [return: bb159, unwind continue];
    }

    bb159: {
        _1598 = const _;
        _395 = _1598 as &[&str] (Pointer(Unsize));
        _1597 = const _;
        _399 = core::fmt::rt::Argument::<'_>::new_debug::<i16>(_1597) -> [return: bb160, unwind continue];
    }

    bb160: {
        _398 = [move _399];
        _397 = &_398;
        _396 = _397 as &[core::fmt::rt::Argument<'_>] (Pointer(Unsize));
        _394 = Arguments::<'_>::new_v1(move _395, move _396) -> [return: bb161, unwind continue];
    }

    bb161: {
        _393 = _print(move _394) -> [return: bb162, unwind continue];
    }

    bb162: {
        _1596 = const _;
        _402 = _1596 as &[&str] (Pointer(Unsize));
        _1595 = const _;
        _406 = core::fmt::rt::Argument::<'_>::new_debug::<i32>(_1595) -> [return: bb163, unwind continue];
    }

    bb163: {
        _405 = [move _406];
        _404 = &_405;
        _403 = _404 as &[core::fmt::rt::Argument<'_>] (Pointer(Unsize));
        _401 = Arguments::<'_>::new_v1(move _402, move _403) -> [return: bb164, unwind continue];
    }

    bb164: {
        _400 = _print(move _401) -> [return: bb165, unwind continue];
    }

    bb165: {
        _1594 = const _;
        _409 = _1594 as &[&str] (Pointer(Unsize));
        _1593 = const _;
        _413 = core::fmt::rt::Argument::<'_>::new_debug::<i64>(_1593) -> [return: bb166, unwind continue];
    }

    bb166: {
        _412 = [move _413];
        _411 = &_412;
        _410 = _411 as &[core::fmt::rt::Argument<'_>] (Pointer(Unsize));
        _408 = Arguments::<'_>::new_v1(move _409, move _410) -> [return: bb167, unwind continue];
    }

    bb167: {
        _407 = _print(move _408) -> [return: bb168, unwind continue];
    }

    bb168: {
        _1592 = const _;
        _416 = _1592 as &[&str] (Pointer(Unsize));
        _1591 = const _;
        _420 = core::fmt::rt::Argument::<'_>::new_debug::<u8>(_1591) -> [return: bb169, unwind continue];
    }

    bb169: {
        _419 = [move _420];
        _418 = &_419;
        _417 = _418 as &[core::fmt::rt::Argument<'_>] (Pointer(Unsize));
        _415 = Arguments::<'_>::new_v1(move _416, move _417) -> [return: bb170, unwind continue];
    }

    bb170: {
        _414 = _print(move _415) -> [return: bb171, unwind continue];
    }

    bb171: {
        _1590 = const _;
        _423 = _1590 as &[&str] (Pointer(Unsize));
        _1589 = const _;
        _427 = core::fmt::rt::Argument::<'_>::new_debug::<u16>(_1589) -> [return: bb172, unwind continue];
    }

    bb172: {
        _426 = [move _427];
        _425 = &_426;
        _424 = _425 as &[core::fmt::rt::Argument<'_>] (Pointer(Unsize));
        _422 = Arguments::<'_>::new_v1(move _423, move _424) -> [return: bb173, unwind continue];
    }

    bb173: {
        _421 = _print(move _422) -> [return: bb174, unwind continue];
    }

    bb174: {
        _1588 = const _;
        _430 = _1588 as &[&str] (Pointer(Unsize));
        _1587 = const _;
        _434 = core::fmt::rt::Argument::<'_>::new_debug::<u32>(_1587) -> [return: bb175, unwind continue];
    }

    bb175: {
        _433 = [move _434];
        _432 = &_433;
        _431 = _432 as &[core::fmt::rt::Argument<'_>] (Pointer(Unsize));
        _429 = Arguments::<'_>::new_v1(move _430, move _431) -> [return: bb176, unwind continue];
    }

    bb176: {
        _428 = _print(move _429) -> [return: bb177, unwind continue];
    }

    bb177: {
        _1586 = const _;
        _437 = _1586 as &[&str] (Pointer(Unsize));
        _1585 = const _;
        _441 = core::fmt::rt::Argument::<'_>::new_debug::<u64>(_1585) -> [return: bb178, unwind continue];
    }

    bb178: {
        _440 = [move _441];
        _439 = &_440;
        _438 = _439 as &[core::fmt::rt::Argument<'_>] (Pointer(Unsize));
        _436 = Arguments::<'_>::new_v1(move _437, move _438) -> [return: bb179, unwind continue];
    }

    bb179: {
        _435 = _print(move _436) -> [return: bb180, unwind continue];
    }

    bb180: {
        _1584 = const _;
        _444 = _1584 as &[&str] (Pointer(Unsize));
        _1583 = const _;
        _448 = core::fmt::rt::Argument::<'_>::new_debug::<f32>(_1583) -> [return: bb181, unwind continue];
    }

    bb181: {
        _447 = [move _448];
        _446 = &_447;
        _445 = _446 as &[core::fmt::rt::Argument<'_>] (Pointer(Unsize));
        _443 = Arguments::<'_>::new_v1(move _444, move _445) -> [return: bb182, unwind continue];
    }

    bb182: {
        _442 = _print(move _443) -> [return: bb183, unwind continue];
    }

    bb183: {
        _1582 = const _;
        _451 = _1582 as &[&str] (Pointer(Unsize));
        _1581 = const _;
        _455 = core::fmt::rt::Argument::<'_>::new_debug::<f64>(_1581) -> [return: bb184, unwind continue];
    }

    bb184: {
        _454 = [move _455];
        _453 = &_454;
        _452 = _453 as &[core::fmt::rt::Argument<'_>] (Pointer(Unsize));
        _450 = Arguments::<'_>::new_v1(move _451, move _452) -> [return: bb185, unwind continue];
    }

    bb185: {
        _449 = _print(move _450) -> [return: bb186, unwind continue];
    }

    bb186: {
        _1580 = const _;
        _458 = _1580 as &[&str] (Pointer(Unsize));
        _1579 = const _;
        _462 = core::fmt::rt::Argument::<'_>::new_debug::<isize>(_1579) -> [return: bb187, unwind continue];
    }

    bb187: {
        _461 = [move _462];
        _460 = &_461;
        _459 = _460 as &[core::fmt::rt::Argument<'_>] (Pointer(Unsize));
        _457 = Arguments::<'_>::new_v1(move _458, move _459) -> [return: bb188, unwind continue];
    }

    bb188: {
        _456 = _print(move _457) -> [return: bb189, unwind continue];
    }

    bb189: {
        _1578 = const _;
        _465 = _1578 as &[&str] (Pointer(Unsize));
        _1577 = const _;
        _469 = core::fmt::rt::Argument::<'_>::new_debug::<usize>(_1577) -> [return: bb190, unwind continue];
    }

    bb190: {
        _468 = [move _469];
        _467 = &_468;
        _466 = _467 as &[core::fmt::rt::Argument<'_>] (Pointer(Unsize));
        _464 = Arguments::<'_>::new_v1(move _465, move _466) -> [return: bb191, unwind continue];
    }

    bb191: {
        _463 = _print(move _464) -> [return: bb192, unwind continue];
    }

    bb192: {
        _1576 = const _;
        _472 = _1576 as &[&str] (Pointer(Unsize));
        _1575 = const _;
        _476 = core::fmt::rt::Argument::<'_>::new_debug::<*const String>(_1575) -> [return: bb193, unwind continue];
    }

    bb193: {
        _475 = [move _476];
        _474 = &_475;
        _473 = _474 as &[core::fmt::rt::Argument<'_>] (Pointer(Unsize));
        _471 = Arguments::<'_>::new_v1(move _472, move _473) -> [return: bb194, unwind continue];
    }

    bb194: {
        _470 = _print(move _471) -> [return: bb195, unwind continue];
    }

    bb195: {
        _1574 = const _;
        _479 = _1574 as &[&str] (Pointer(Unsize));
        _1573 = const _;
        _483 = core::fmt::rt::Argument::<'_>::new_debug::<i8>(_1573) -> [return: bb196, unwind continue];
    }

    bb196: {
        _482 = [move _483];
        _481 = &_482;
        _480 = _481 as &[core::fmt::rt::Argument<'_>] (Pointer(Unsize));
        _478 = Arguments::<'_>::new_v1(move _479, move _480) -> [return: bb197, unwind continue];
    }

    bb197: {
        _477 = _print(move _478) -> [return: bb198, unwind continue];
    }

    bb198: {
        _1572 = const _;
        _486 = _1572 as &[&str] (Pointer(Unsize));
        _1571 = const _;
        _490 = core::fmt::rt::Argument::<'_>::new_debug::<i16>(_1571) -> [return: bb199, unwind continue];
    }

    bb199: {
        _489 = [move _490];
        _488 = &_489;
        _487 = _488 as &[core::fmt::rt::Argument<'_>] (Pointer(Unsize));
        _485 = Arguments::<'_>::new_v1(move _486, move _487) -> [return: bb200, unwind continue];
    }

    bb200: {
        _484 = _print(move _485) -> [return: bb201, unwind continue];
    }

    bb201: {
        _1570 = const _;
        _493 = _1570 as &[&str] (Pointer(Unsize));
        _1569 = const _;
        _497 = core::fmt::rt::Argument::<'_>::new_debug::<i32>(_1569) -> [return: bb202, unwind continue];
    }

    bb202: {
        _496 = [move _497];
        _495 = &_496;
        _494 = _495 as &[core::fmt::rt::Argument<'_>] (Pointer(Unsize));
        _492 = Arguments::<'_>::new_v1(move _493, move _494) -> [return: bb203, unwind continue];
    }

    bb203: {
        _491 = _print(move _492) -> [return: bb204, unwind continue];
    }

    bb204: {
        _1568 = const _;
        _500 = _1568 as &[&str] (Pointer(Unsize));
        _1567 = const _;
        _504 = core::fmt::rt::Argument::<'_>::new_debug::<i64>(_1567) -> [return: bb205, unwind continue];
    }

    bb205: {
        _503 = [move _504];
        _502 = &_503;
        _501 = _502 as &[core::fmt::rt::Argument<'_>] (Pointer(Unsize));
        _499 = Arguments::<'_>::new_v1(move _500, move _501) -> [return: bb206, unwind continue];
    }

    bb206: {
        _498 = _print(move _499) -> [return: bb207, unwind continue];
    }

    bb207: {
        _1566 = const _;
        _507 = _1566 as &[&str] (Pointer(Unsize));
        _1565 = const _;
        _511 = core::fmt::rt::Argument::<'_>::new_debug::<u8>(_1565) -> [return: bb208, unwind continue];
    }

    bb208: {
        _510 = [move _511];
        _509 = &_510;
        _508 = _509 as &[core::fmt::rt::Argument<'_>] (Pointer(Unsize));
        _506 = Arguments::<'_>::new_v1(move _507, move _508) -> [return: bb209, unwind continue];
    }

    bb209: {
        _505 = _print(move _506) -> [return: bb210, unwind continue];
    }

    bb210: {
        _1564 = const _;
        _514 = _1564 as &[&str] (Pointer(Unsize));
        _1563 = const _;
        _518 = core::fmt::rt::Argument::<'_>::new_debug::<u16>(_1563) -> [return: bb211, unwind continue];
    }

    bb211: {
        _517 = [move _518];
        _516 = &_517;
        _515 = _516 as &[core::fmt::rt::Argument<'_>] (Pointer(Unsize));
        _513 = Arguments::<'_>::new_v1(move _514, move _515) -> [return: bb212, unwind continue];
    }

    bb212: {
        _512 = _print(move _513) -> [return: bb213, unwind continue];
    }

    bb213: {
        _1562 = const _;
        _521 = _1562 as &[&str] (Pointer(Unsize));
        _1561 = const _;
        _525 = core::fmt::rt::Argument::<'_>::new_debug::<u32>(_1561) -> [return: bb214, unwind continue];
    }

    bb214: {
        _524 = [move _525];
        _523 = &_524;
        _522 = _523 as &[core::fmt::rt::Argument<'_>] (Pointer(Unsize));
        _520 = Arguments::<'_>::new_v1(move _521, move _522) -> [return: bb215, unwind continue];
    }

    bb215: {
        _519 = _print(move _520) -> [return: bb216, unwind continue];
    }

    bb216: {
        _1560 = const _;
        _528 = _1560 as &[&str] (Pointer(Unsize));
        _1559 = const _;
        _532 = core::fmt::rt::Argument::<'_>::new_debug::<u64>(_1559) -> [return: bb217, unwind continue];
    }

    bb217: {
        _531 = [move _532];
        _530 = &_531;
        _529 = _530 as &[core::fmt::rt::Argument<'_>] (Pointer(Unsize));
        _527 = Arguments::<'_>::new_v1(move _528, move _529) -> [return: bb218, unwind continue];
    }

    bb218: {
        _526 = _print(move _527) -> [return: bb219, unwind continue];
    }

    bb219: {
        _1558 = const _;
        _535 = _1558 as &[&str] (Pointer(Unsize));
        _1557 = const _;
        _539 = core::fmt::rt::Argument::<'_>::new_debug::<f32>(_1557) -> [return: bb220, unwind continue];
    }

    bb220: {
        _538 = [move _539];
        _537 = &_538;
        _536 = _537 as &[core::fmt::rt::Argument<'_>] (Pointer(Unsize));
        _534 = Arguments::<'_>::new_v1(move _535, move _536) -> [return: bb221, unwind continue];
    }

    bb221: {
        _533 = _print(move _534) -> [return: bb222, unwind continue];
    }

    bb222: {
        _1556 = const _;
        _542 = _1556 as &[&str] (Pointer(Unsize));
        _1555 = const _;
        _546 = core::fmt::rt::Argument::<'_>::new_debug::<f64>(_1555) -> [return: bb223, unwind continue];
    }

    bb223: {
        _545 = [move _546];
        _544 = &_545;
        _543 = _544 as &[core::fmt::rt::Argument<'_>] (Pointer(Unsize));
        _541 = Arguments::<'_>::new_v1(move _542, move _543) -> [return: bb224, unwind continue];
    }

    bb224: {
        _540 = _print(move _541) -> [return: bb225, unwind continue];
    }

    bb225: {
        _1554 = const _;
        _549 = _1554 as &[&str] (Pointer(Unsize));
        _1553 = const _;
        _553 = core::fmt::rt::Argument::<'_>::new_debug::<isize>(_1553) -> [return: bb226, unwind continue];
    }

    bb226: {
        _552 = [move _553];
        _551 = &_552;
        _550 = _551 as &[core::fmt::rt::Argument<'_>] (Pointer(Unsize));
        _548 = Arguments::<'_>::new_v1(move _549, move _550) -> [return: bb227, unwind continue];
    }

    bb227: {
        _547 = _print(move _548) -> [return: bb228, unwind continue];
    }

    bb228: {
        _1552 = const _;
        _556 = _1552 as &[&str] (Pointer(Unsize));
        _1551 = const _;
        _560 = core::fmt::rt::Argument::<'_>::new_debug::<usize>(_1551) -> [return: bb229, unwind continue];
    }

    bb229: {
        _559 = [move _560];
        _558 = &_559;
        _557 = _558 as &[core::fmt::rt::Argument<'_>] (Pointer(Unsize));
        _555 = Arguments::<'_>::new_v1(move _556, move _557) -> [return: bb230, unwind continue];
    }

    bb230: {
        _554 = _print(move _555) -> [return: bb231, unwind continue];
    }

    bb231: {
        _1550 = const _;
        _563 = _1550 as &[&str] (Pointer(Unsize));
        _1549 = const _;
        _567 = core::fmt::rt::Argument::<'_>::new_debug::<*const String>(_1549) -> [return: bb232, unwind continue];
    }

    bb232: {
        _566 = [move _567];
        _565 = &_566;
        _564 = _565 as &[core::fmt::rt::Argument<'_>] (Pointer(Unsize));
        _562 = Arguments::<'_>::new_v1(move _563, move _564) -> [return: bb233, unwind continue];
    }

    bb233: {
        _561 = _print(move _562) -> [return: bb234, unwind continue];
    }

    bb234: {
        _1548 = const _;
        _570 = _1548 as &[&str] (Pointer(Unsize));
        _1547 = const _;
        _574 = core::fmt::rt::Argument::<'_>::new_debug::<i8>(_1547) -> [return: bb235, unwind continue];
    }

    bb235: {
        _573 = [move _574];
        _572 = &_573;
        _571 = _572 as &[core::fmt::rt::Argument<'_>] (Pointer(Unsize));
        _569 = Arguments::<'_>::new_v1(move _570, move _571) -> [return: bb236, unwind continue];
    }

    bb236: {
        _568 = _print(move _569) -> [return: bb237, unwind continue];
    }

    bb237: {
        _1546 = const _;
        _577 = _1546 as &[&str] (Pointer(Unsize));
        _1545 = const _;
        _581 = core::fmt::rt::Argument::<'_>::new_debug::<i16>(_1545) -> [return: bb238, unwind continue];
    }

    bb238: {
        _580 = [move _581];
        _579 = &_580;
        _578 = _579 as &[core::fmt::rt::Argument<'_>] (Pointer(Unsize));
        _576 = Arguments::<'_>::new_v1(move _577, move _578) -> [return: bb239, unwind continue];
    }

    bb239: {
        _575 = _print(move _576) -> [return: bb240, unwind continue];
    }

    bb240: {
        _1544 = const _;
        _584 = _1544 as &[&str] (Pointer(Unsize));
        _1543 = const _;
        _588 = core::fmt::rt::Argument::<'_>::new_debug::<i32>(_1543) -> [return: bb241, unwind continue];
    }

    bb241: {
        _587 = [move _588];
        _586 = &_587;
        _585 = _586 as &[core::fmt::rt::Argument<'_>] (Pointer(Unsize));
        _583 = Arguments::<'_>::new_v1(move _584, move _585) -> [return: bb242, unwind continue];
    }

    bb242: {
        _582 = _print(move _583) -> [return: bb243, unwind continue];
    }

    bb243: {
        _1542 = const _;
        _591 = _1542 as &[&str] (Pointer(Unsize));
        _1541 = const _;
        _595 = core::fmt::rt::Argument::<'_>::new_debug::<i64>(_1541) -> [return: bb244, unwind continue];
    }

    bb244: {
        _594 = [move _595];
        _593 = &_594;
        _592 = _593 as &[core::fmt::rt::Argument<'_>] (Pointer(Unsize));
        _590 = Arguments::<'_>::new_v1(move _591, move _592) -> [return: bb245, unwind continue];
    }

    bb245: {
        _589 = _print(move _590) -> [return: bb246, unwind continue];
    }

    bb246: {
        _1540 = const _;
        _598 = _1540 as &[&str] (Pointer(Unsize));
        _1539 = const _;
        _602 = core::fmt::rt::Argument::<'_>::new_debug::<u8>(_1539) -> [return: bb247, unwind continue];
    }

    bb247: {
        _601 = [move _602];
        _600 = &_601;
        _599 = _600 as &[core::fmt::rt::Argument<'_>] (Pointer(Unsize));
        _597 = Arguments::<'_>::new_v1(move _598, move _599) -> [return: bb248, unwind continue];
    }

    bb248: {
        _596 = _print(move _597) -> [return: bb249, unwind continue];
    }

    bb249: {
        _1538 = const _;
        _605 = _1538 as &[&str] (Pointer(Unsize));
        _1537 = const _;
        _609 = core::fmt::rt::Argument::<'_>::new_debug::<u16>(_1537) -> [return: bb250, unwind continue];
    }

    bb250: {
        _608 = [move _609];
        _607 = &_608;
        _606 = _607 as &[core::fmt::rt::Argument<'_>] (Pointer(Unsize));
        _604 = Arguments::<'_>::new_v1(move _605, move _606) -> [return: bb251, unwind continue];
    }

    bb251: {
        _603 = _print(move _604) -> [return: bb252, unwind continue];
    }

    bb252: {
        _1536 = const _;
        _612 = _1536 as &[&str] (Pointer(Unsize));
        _1535 = const _;
        _616 = core::fmt::rt::Argument::<'_>::new_debug::<u32>(_1535) -> [return: bb253, unwind continue];
    }

    bb253: {
        _615 = [move _616];
        _614 = &_615;
        _613 = _614 as &[core::fmt::rt::Argument<'_>] (Pointer(Unsize));
        _611 = Arguments::<'_>::new_v1(move _612, move _613) -> [return: bb254, unwind continue];
    }

    bb254: {
        _610 = _print(move _611) -> [return: bb255, unwind continue];
    }

    bb255: {
        _1534 = const _;
        _619 = _1534 as &[&str] (Pointer(Unsize));
        _1533 = const _;
        _623 = core::fmt::rt::Argument::<'_>::new_debug::<u64>(_1533) -> [return: bb256, unwind continue];
    }

    bb256: {
        _622 = [move _623];
        _621 = &_622;
        _620 = _621 as &[core::fmt::rt::Argument<'_>] (Pointer(Unsize));
        _618 = Arguments::<'_>::new_v1(move _619, move _620) -> [return: bb257, unwind continue];
    }

    bb257: {
        _617 = _print(move _618) -> [return: bb258, unwind continue];
    }

    bb258: {
        _1532 = const _;
        _626 = _1532 as &[&str] (Pointer(Unsize));
        _1531 = const _;
        _630 = core::fmt::rt::Argument::<'_>::new_debug::<f32>(_1531) -> [return: bb259, unwind continue];
    }

    bb259: {
        _629 = [move _630];
        _628 = &_629;
        _627 = _628 as &[core::fmt::rt::Argument<'_>] (Pointer(Unsize));
        _625 = Arguments::<'_>::new_v1(move _626, move _627) -> [return: bb260, unwind continue];
    }

    bb260: {
        _624 = _print(move _625) -> [return: bb261, unwind continue];
    }

    bb261: {
        _1530 = const _;
        _633 = _1530 as &[&str] (Pointer(Unsize));
        _1529 = const _;
        _637 = core::fmt::rt::Argument::<'_>::new_debug::<f64>(_1529) -> [return: bb262, unwind continue];
    }

    bb262: {
        _636 = [move _637];
        _635 = &_636;
        _634 = _635 as &[core::fmt::rt::Argument<'_>] (Pointer(Unsize));
        _632 = Arguments::<'_>::new_v1(move _633, move _634) -> [return: bb263, unwind continue];
    }

    bb263: {
        _631 = _print(move _632) -> [return: bb264, unwind continue];
    }

    bb264: {
        _1528 = const _;
        _640 = _1528 as &[&str] (Pointer(Unsize));
        _1527 = const _;
        _644 = core::fmt::rt::Argument::<'_>::new_debug::<isize>(_1527) -> [return: bb265, unwind continue];
    }

    bb265: {
        _643 = [move _644];
        _642 = &_643;
        _641 = _642 as &[core::fmt::rt::Argument<'_>] (Pointer(Unsize));
        _639 = Arguments::<'_>::new_v1(move _640, move _641) -> [return: bb266, unwind continue];
    }

    bb266: {
        _638 = _print(move _639) -> [return: bb267, unwind continue];
    }

    bb267: {
        _1526 = const _;
        _647 = _1526 as &[&str] (Pointer(Unsize));
        _1525 = const _;
        _651 = core::fmt::rt::Argument::<'_>::new_debug::<usize>(_1525) -> [return: bb268, unwind continue];
    }

    bb268: {
        _650 = [move _651];
        _649 = &_650;
        _648 = _649 as &[core::fmt::rt::Argument<'_>] (Pointer(Unsize));
        _646 = Arguments::<'_>::new_v1(move _647, move _648) -> [return: bb269, unwind continue];
    }

    bb269: {
        _645 = _print(move _646) -> [return: bb270, unwind continue];
    }

    bb270: {
        _1524 = const _;
        _654 = _1524 as &[&str] (Pointer(Unsize));
        _1523 = const _;
        _658 = core::fmt::rt::Argument::<'_>::new_debug::<*const String>(_1523) -> [return: bb271, unwind continue];
    }

    bb271: {
        _657 = [move _658];
        _656 = &_657;
        _655 = _656 as &[core::fmt::rt::Argument<'_>] (Pointer(Unsize));
        _653 = Arguments::<'_>::new_v1(move _654, move _655) -> [return: bb272, unwind continue];
    }

    bb272: {
        _652 = _print(move _653) -> [return: bb273, unwind continue];
    }

    bb273: {
        _1522 = const _;
        _661 = _1522 as &[&str] (Pointer(Unsize));
        _1521 = const _;
        _665 = core::fmt::rt::Argument::<'_>::new_debug::<i8>(_1521) -> [return: bb274, unwind continue];
    }

    bb274: {
        _664 = [move _665];
        _663 = &_664;
        _662 = _663 as &[core::fmt::rt::Argument<'_>] (Pointer(Unsize));
        _660 = Arguments::<'_>::new_v1(move _661, move _662) -> [return: bb275, unwind continue];
    }

    bb275: {
        _659 = _print(move _660) -> [return: bb276, unwind continue];
    }

    bb276: {
        _1520 = const _;
        _668 = _1520 as &[&str] (Pointer(Unsize));
        _1519 = const _;
        _672 = core::fmt::rt::Argument::<'_>::new_debug::<i16>(_1519) -> [return: bb277, unwind continue];
    }

    bb277: {
        _671 = [move _672];
        _670 = &_671;
        _669 = _670 as &[core::fmt::rt::Argument<'_>] (Pointer(Unsize));
        _667 = Arguments::<'_>::new_v1(move _668, move _669) -> [return: bb278, unwind continue];
    }

    bb278: {
        _666 = _print(move _667) -> [return: bb279, unwind continue];
    }

    bb279: {
        _1518 = const _;
        _675 = _1518 as &[&str] (Pointer(Unsize));
        _1517 = const _;
        _679 = core::fmt::rt::Argument::<'_>::new_debug::<i32>(_1517) -> [return: bb280, unwind continue];
    }

    bb280: {
        _678 = [move _679];
        _677 = &_678;
        _676 = _677 as &[core::fmt::rt::Argument<'_>] (Pointer(Unsize));
        _674 = Arguments::<'_>::new_v1(move _675, move _676) -> [return: bb281, unwind continue];
    }

    bb281: {
        _673 = _print(move _674) -> [return: bb282, unwind continue];
    }

    bb282: {
        _1516 = const _;
        _682 = _1516 as &[&str] (Pointer(Unsize));
        _1515 = const _;
        _686 = core::fmt::rt::Argument::<'_>::new_debug::<i64>(_1515) -> [return: bb283, unwind continue];
    }

    bb283: {
        _685 = [move _686];
        _684 = &_685;
        _683 = _684 as &[core::fmt::rt::Argument<'_>] (Pointer(Unsize));
        _681 = Arguments::<'_>::new_v1(move _682, move _683) -> [return: bb284, unwind continue];
    }

    bb284: {
        _680 = _print(move _681) -> [return: bb285, unwind continue];
    }

    bb285: {
        _1514 = const _;
        _689 = _1514 as &[&str] (Pointer(Unsize));
        _1513 = const _;
        _693 = core::fmt::rt::Argument::<'_>::new_debug::<u8>(_1513) -> [return: bb286, unwind continue];
    }

    bb286: {
        _692 = [move _693];
        _691 = &_692;
        _690 = _691 as &[core::fmt::rt::Argument<'_>] (Pointer(Unsize));
        _688 = Arguments::<'_>::new_v1(move _689, move _690) -> [return: bb287, unwind continue];
    }

    bb287: {
        _687 = _print(move _688) -> [return: bb288, unwind continue];
    }

    bb288: {
        _1512 = const _;
        _696 = _1512 as &[&str] (Pointer(Unsize));
        _1511 = const _;
        _700 = core::fmt::rt::Argument::<'_>::new_debug::<u16>(_1511) -> [return: bb289, unwind continue];
    }

    bb289: {
        _699 = [move _700];
        _698 = &_699;
        _697 = _698 as &[core::fmt::rt::Argument<'_>] (Pointer(Unsize));
        _695 = Arguments::<'_>::new_v1(move _696, move _697) -> [return: bb290, unwind continue];
    }

    bb290: {
        _694 = _print(move _695) -> [return: bb291, unwind continue];
    }

    bb291: {
        _1510 = const _;
        _703 = _1510 as &[&str] (Pointer(Unsize));
        _1509 = const _;
        _707 = core::fmt::rt::Argument::<'_>::new_debug::<u32>(_1509) -> [return: bb292, unwind continue];
    }

    bb292: {
        _706 = [move _707];
        _705 = &_706;
        _704 = _705 as &[core::fmt::rt::Argument<'_>] (Pointer(Unsize));
        _702 = Arguments::<'_>::new_v1(move _703, move _704) -> [return: bb293, unwind continue];
    }

    bb293: {
        _701 = _print(move _702) -> [return: bb294, unwind continue];
    }

    bb294: {
        _1508 = const _;
        _710 = _1508 as &[&str] (Pointer(Unsize));
        _1507 = const _;
        _714 = core::fmt::rt::Argument::<'_>::new_debug::<u64>(_1507) -> [return: bb295, unwind continue];
    }

    bb295: {
        _713 = [move _714];
        _712 = &_713;
        _711 = _712 as &[core::fmt::rt::Argument<'_>] (Pointer(Unsize));
        _709 = Arguments::<'_>::new_v1(move _710, move _711) -> [return: bb296, unwind continue];
    }

    bb296: {
        _708 = _print(move _709) -> [return: bb297, unwind continue];
    }

    bb297: {
        _1506 = const _;
        _717 = _1506 as &[&str] (Pointer(Unsize));
        _1505 = const _;
        _721 = core::fmt::rt::Argument::<'_>::new_debug::<f32>(_1505) -> [return: bb298, unwind continue];
    }

    bb298: {
        _720 = [move _721];
        _719 = &_720;
        _718 = _719 as &[core::fmt::rt::Argument<'_>] (Pointer(Unsize));
        _716 = Arguments::<'_>::new_v1(move _717, move _718) -> [return: bb299, unwind continue];
    }

    bb299: {
        _715 = _print(move _716) -> [return: bb300, unwind continue];
    }

    bb300: {
        _1504 = const _;
        _724 = _1504 as &[&str] (Pointer(Unsize));
        _1503 = const _;
        _728 = core::fmt::rt::Argument::<'_>::new_debug::<f64>(_1503) -> [return: bb301, unwind continue];
    }

    bb301: {
        _727 = [move _728];
        _726 = &_727;
        _725 = _726 as &[core::fmt::rt::Argument<'_>] (Pointer(Unsize));
        _723 = Arguments::<'_>::new_v1(move _724, move _725) -> [return: bb302, unwind continue];
    }

    bb302: {
        _722 = _print(move _723) -> [return: bb303, unwind continue];
    }

    bb303: {
        _1502 = const _;
        _731 = _1502 as &[&str] (Pointer(Unsize));
        _1501 = const _;
        _735 = core::fmt::rt::Argument::<'_>::new_debug::<isize>(_1501) -> [return: bb304, unwind continue];
    }

    bb304: {
        _734 = [move _735];
        _733 = &_734;
        _732 = _733 as &[core::fmt::rt::Argument<'_>] (Pointer(Unsize));
        _730 = Arguments::<'_>::new_v1(move _731, move _732) -> [return: bb305, unwind continue];
    }

    bb305: {
        _729 = _print(move _730) -> [return: bb306, unwind continue];
    }

    bb306: {
        _1500 = const _;
        _738 = _1500 as &[&str] (Pointer(Unsize));
        _1499 = const _;
        _742 = core::fmt::rt::Argument::<'_>::new_debug::<usize>(_1499) -> [return: bb307, unwind continue];
    }

    bb307: {
        _741 = [move _742];
        _740 = &_741;
        _739 = _740 as &[core::fmt::rt::Argument<'_>] (Pointer(Unsize));
        _737 = Arguments::<'_>::new_v1(move _738, move _739) -> [return: bb308, unwind continue];
    }

    bb308: {
        _736 = _print(move _737) -> [return: bb309, unwind continue];
    }

    bb309: {
        _1498 = const _;
        _745 = _1498 as &[&str] (Pointer(Unsize));
        _1497 = const _;
        _749 = core::fmt::rt::Argument::<'_>::new_debug::<*const String>(_1497) -> [return: bb310, unwind continue];
    }

    bb310: {
        _748 = [move _749];
        _747 = &_748;
        _746 = _747 as &[core::fmt::rt::Argument<'_>] (Pointer(Unsize));
        _744 = Arguments::<'_>::new_v1(move _745, move _746) -> [return: bb311, unwind continue];
    }

    bb311: {
        _743 = _print(move _744) -> [return: bb312, unwind continue];
    }

    bb312: {
        _1496 = const _;
        _752 = _1496 as &[&str] (Pointer(Unsize));
        _1495 = const _;
        _756 = core::fmt::rt::Argument::<'_>::new_debug::<i8>(_1495) -> [return: bb313, unwind continue];
    }

    bb313: {
        _755 = [move _756];
        _754 = &_755;
        _753 = _754 as &[core::fmt::rt::Argument<'_>] (Pointer(Unsize));
        _751 = Arguments::<'_>::new_v1(move _752, move _753) -> [return: bb314, unwind continue];
    }

    bb314: {
        _750 = _print(move _751) -> [return: bb315, unwind continue];
    }

    bb315: {
        _1494 = const _;
        _759 = _1494 as &[&str] (Pointer(Unsize));
        _1493 = const _;
        _763 = core::fmt::rt::Argument::<'_>::new_debug::<i16>(_1493) -> [return: bb316, unwind continue];
    }

    bb316: {
        _762 = [move _763];
        _761 = &_762;
        _760 = _761 as &[core::fmt::rt::Argument<'_>] (Pointer(Unsize));
        _758 = Arguments::<'_>::new_v1(move _759, move _760) -> [return: bb317, unwind continue];
    }

    bb317: {
        _757 = _print(move _758) -> [return: bb318, unwind continue];
    }

    bb318: {
        _1492 = const _;
        _766 = _1492 as &[&str] (Pointer(Unsize));
        _1491 = const _;
        _770 = core::fmt::rt::Argument::<'_>::new_debug::<i32>(_1491) -> [return: bb319, unwind continue];
    }

    bb319: {
        _769 = [move _770];
        _768 = &_769;
        _767 = _768 as &[core::fmt::rt::Argument<'_>] (Pointer(Unsize));
        _765 = Arguments::<'_>::new_v1(move _766, move _767) -> [return: bb320, unwind continue];
    }

    bb320: {
        _764 = _print(move _765) -> [return: bb321, unwind continue];
    }

    bb321: {
        _1490 = const _;
        _773 = _1490 as &[&str] (Pointer(Unsize));
        _1489 = const _;
        _777 = core::fmt::rt::Argument::<'_>::new_debug::<i64>(_1489) -> [return: bb322, unwind continue];
    }

    bb322: {
        _776 = [move _777];
        _775 = &_776;
        _774 = _775 as &[core::fmt::rt::Argument<'_>] (Pointer(Unsize));
        _772 = Arguments::<'_>::new_v1(move _773, move _774) -> [return: bb323, unwind continue];
    }

    bb323: {
        _771 = _print(move _772) -> [return: bb324, unwind continue];
    }

    bb324: {
        _1488 = const _;
        _780 = _1488 as &[&str] (Pointer(Unsize));
        _1487 = const _;
        _784 = core::fmt::rt::Argument::<'_>::new_debug::<u8>(_1487) -> [return: bb325, unwind continue];
    }

    bb325: {
        _783 = [move _784];
        _782 = &_783;
        _781 = _782 as &[core::fmt::rt::Argument<'_>] (Pointer(Unsize));
        _779 = Arguments::<'_>::new_v1(move _780, move _781) -> [return: bb326, unwind continue];
    }

    bb326: {
        _778 = _print(move _779) -> [return: bb327, unwind continue];
    }

    bb327: {
        _1486 = const _;
        _787 = _1486 as &[&str] (Pointer(Unsize));
        _1485 = const _;
        _791 = core::fmt::rt::Argument::<'_>::new_debug::<u16>(_1485) -> [return: bb328, unwind continue];
    }

    bb328: {
        _790 = [move _791];
        _789 = &_790;
        _788 = _789 as &[core::fmt::rt::Argument<'_>] (Pointer(Unsize));
        _786 = Arguments::<'_>::new_v1(move _787, move _788) -> [return: bb329, unwind continue];
    }

    bb329: {
        _785 = _print(move _786) -> [return: bb330, unwind continue];
    }

    bb330: {
        _1484 = const _;
        _794 = _1484 as &[&str] (Pointer(Unsize));
        _1483 = const _;
        _798 = core::fmt::rt::Argument::<'_>::new_debug::<u32>(_1483) -> [return: bb331, unwind continue];
    }

    bb331: {
        _797 = [move _798];
        _796 = &_797;
        _795 = _796 as &[core::fmt::rt::Argument<'_>] (Pointer(Unsize));
        _793 = Arguments::<'_>::new_v1(move _794, move _795) -> [return: bb332, unwind continue];
    }

    bb332: {
        _792 = _print(move _793) -> [return: bb333, unwind continue];
    }

    bb333: {
        _1482 = const _;
        _801 = _1482 as &[&str] (Pointer(Unsize));
        _1481 = const _;
        _805 = core::fmt::rt::Argument::<'_>::new_debug::<u64>(_1481) -> [return: bb334, unwind continue];
    }

    bb334: {
        _804 = [move _805];
        _803 = &_804;
        _802 = _803 as &[core::fmt::rt::Argument<'_>] (Pointer(Unsize));
        _800 = Arguments::<'_>::new_v1(move _801, move _802) -> [return: bb335, unwind continue];
    }

    bb335: {
        _799 = _print(move _800) -> [return: bb336, unwind continue];
    }

    bb336: {
        _1480 = const _;
        _808 = _1480 as &[&str] (Pointer(Unsize));
        _1479 = const _;
        _812 = core::fmt::rt::Argument::<'_>::new_debug::<f32>(_1479) -> [return: bb337, unwind continue];
    }

    bb337: {
        _811 = [move _812];
        _810 = &_811;
        _809 = _810 as &[core::fmt::rt::Argument<'_>] (Pointer(Unsize));
        _807 = Arguments::<'_>::new_v1(move _808, move _809) -> [return: bb338, unwind continue];
    }

    bb338: {
        _806 = _print(move _807) -> [return: bb339, unwind continue];
    }

    bb339: {
        _1478 = const _;
        _815 = _1478 as &[&str] (Pointer(Unsize));
        _1477 = const _;
        _819 = core::fmt::rt::Argument::<'_>::new_debug::<f64>(_1477) -> [return: bb340, unwind continue];
    }

    bb340: {
        _818 = [move _819];
        _817 = &_818;
        _816 = _817 as &[core::fmt::rt::Argument<'_>] (Pointer(Unsize));
        _814 = Arguments::<'_>::new_v1(move _815, move _816) -> [return: bb341, unwind continue];
    }

    bb341: {
        _813 = _print(move _814) -> [return: bb342, unwind continue];
    }

    bb342: {
        _1476 = const _;
        _822 = _1476 as &[&str] (Pointer(Unsize));
        _1475 = const _;
        _826 = core::fmt::rt::Argument::<'_>::new_debug::<isize>(_1475) -> [return: bb343, unwind continue];
    }

    bb343: {
        _825 = [move _826];
        _824 = &_825;
        _823 = _824 as &[core::fmt::rt::Argument<'_>] (Pointer(Unsize));
        _821 = Arguments::<'_>::new_v1(move _822, move _823) -> [return: bb344, unwind continue];
    }

    bb344: {
        _820 = _print(move _821) -> [return: bb345, unwind continue];
    }

    bb345: {
        _1474 = const _;
        _829 = _1474 as &[&str] (Pointer(Unsize));
        _1473 = const _;
        _833 = core::fmt::rt::Argument::<'_>::new_debug::<usize>(_1473) -> [return: bb346, unwind continue];
    }

    bb346: {
        _832 = [move _833];
        _831 = &_832;
        _830 = _831 as &[core::fmt::rt::Argument<'_>] (Pointer(Unsize));
        _828 = Arguments::<'_>::new_v1(move _829, move _830) -> [return: bb347, unwind continue];
    }

    bb347: {
        _827 = _print(move _828) -> [return: bb348, unwind continue];
    }

    bb348: {
        _1472 = const _;
        _836 = _1472 as &[&str] (Pointer(Unsize));
        _1471 = const _;
        _840 = core::fmt::rt::Argument::<'_>::new_debug::<*const String>(_1471) -> [return: bb349, unwind continue];
    }

    bb349: {
        _839 = [move _840];
        _838 = &_839;
        _837 = _838 as &[core::fmt::rt::Argument<'_>] (Pointer(Unsize));
        _835 = Arguments::<'_>::new_v1(move _836, move _837) -> [return: bb350, unwind continue];
    }

    bb350: {
        _834 = _print(move _835) -> [return: bb351, unwind continue];
    }

    bb351: {
        _1470 = const _;
        _843 = _1470 as &[&str] (Pointer(Unsize));
        _1469 = const _;
        _847 = core::fmt::rt::Argument::<'_>::new_debug::<i8>(_1469) -> [return: bb352, unwind continue];
    }

    bb352: {
        _846 = [move _847];
        _845 = &_846;
        _844 = _845 as &[core::fmt::rt::Argument<'_>] (Pointer(Unsize));
        _842 = Arguments::<'_>::new_v1(move _843, move _844) -> [return: bb353, unwind continue];
    }

    bb353: {
        _841 = _print(move _842) -> [return: bb354, unwind continue];
    }

    bb354: {
        _1468 = const _;
        _850 = _1468 as &[&str] (Pointer(Unsize));
        _1467 = const _;
        _854 = core::fmt::rt::Argument::<'_>::new_debug::<i16>(_1467) -> [return: bb355, unwind continue];
    }

    bb355: {
        _853 = [move _854];
        _852 = &_853;
        _851 = _852 as &[core::fmt::rt::Argument<'_>] (Pointer(Unsize));
        _849 = Arguments::<'_>::new_v1(move _850, move _851) -> [return: bb356, unwind continue];
    }

    bb356: {
        _848 = _print(move _849) -> [return: bb357, unwind continue];
    }

    bb357: {
        _1466 = const _;
        _857 = _1466 as &[&str] (Pointer(Unsize));
        _1465 = const _;
        _861 = core::fmt::rt::Argument::<'_>::new_debug::<i32>(_1465) -> [return: bb358, unwind continue];
    }

    bb358: {
        _860 = [move _861];
        _859 = &_860;
        _858 = _859 as &[core::fmt::rt::Argument<'_>] (Pointer(Unsize));
        _856 = Arguments::<'_>::new_v1(move _857, move _858) -> [return: bb359, unwind continue];
    }

    bb359: {
        _855 = _print(move _856) -> [return: bb360, unwind continue];
    }

    bb360: {
        _1464 = const _;
        _864 = _1464 as &[&str] (Pointer(Unsize));
        _1463 = const _;
        _868 = core::fmt::rt::Argument::<'_>::new_debug::<i64>(_1463) -> [return: bb361, unwind continue];
    }

    bb361: {
        _867 = [move _868];
        _866 = &_867;
        _865 = _866 as &[core::fmt::rt::Argument<'_>] (Pointer(Unsize));
        _863 = Arguments::<'_>::new_v1(move _864, move _865) -> [return: bb362, unwind continue];
    }

    bb362: {
        _862 = _print(move _863) -> [return: bb363, unwind continue];
    }

    bb363: {
        _1462 = const _;
        _871 = _1462 as &[&str] (Pointer(Unsize));
        _1461 = const _;
        _875 = core::fmt::rt::Argument::<'_>::new_debug::<u8>(_1461) -> [return: bb364, unwind continue];
    }

    bb364: {
        _874 = [move _875];
        _873 = &_874;
        _872 = _873 as &[core::fmt::rt::Argument<'_>] (Pointer(Unsize));
        _870 = Arguments::<'_>::new_v1(move _871, move _872) -> [return: bb365, unwind continue];
    }

    bb365: {
        _869 = _print(move _870) -> [return: bb366, unwind continue];
    }

    bb366: {
        _1460 = const _;
        _878 = _1460 as &[&str] (Pointer(Unsize));
        _1459 = const _;
        _882 = core::fmt::rt::Argument::<'_>::new_debug::<u16>(_1459) -> [return: bb367, unwind continue];
    }

    bb367: {
        _881 = [move _882];
        _880 = &_881;
        _879 = _880 as &[core::fmt::rt::Argument<'_>] (Pointer(Unsize));
        _877 = Arguments::<'_>::new_v1(move _878, move _879) -> [return: bb368, unwind continue];
    }

    bb368: {
        _876 = _print(move _877) -> [return: bb369, unwind continue];
    }

    bb369: {
        _1458 = const _;
        _885 = _1458 as &[&str] (Pointer(Unsize));
        _1457 = const _;
        _889 = core::fmt::rt::Argument::<'_>::new_debug::<u32>(_1457) -> [return: bb370, unwind continue];
    }

    bb370: {
        _888 = [move _889];
        _887 = &_888;
        _886 = _887 as &[core::fmt::rt::Argument<'_>] (Pointer(Unsize));
        _884 = Arguments::<'_>::new_v1(move _885, move _886) -> [return: bb371, unwind continue];
    }

    bb371: {
        _883 = _print(move _884) -> [return: bb372, unwind continue];
    }

    bb372: {
        _1456 = const _;
        _892 = _1456 as &[&str] (Pointer(Unsize));
        _1455 = const _;
        _896 = core::fmt::rt::Argument::<'_>::new_debug::<u64>(_1455) -> [return: bb373, unwind continue];
    }

    bb373: {
        _895 = [move _896];
        _894 = &_895;
        _893 = _894 as &[core::fmt::rt::Argument<'_>] (Pointer(Unsize));
        _891 = Arguments::<'_>::new_v1(move _892, move _893) -> [return: bb374, unwind continue];
    }

    bb374: {
        _890 = _print(move _891) -> [return: bb375, unwind continue];
    }

    bb375: {
        _1454 = const _;
        _899 = _1454 as &[&str] (Pointer(Unsize));
        _1453 = const _;
        _903 = core::fmt::rt::Argument::<'_>::new_debug::<f32>(_1453) -> [return: bb376, unwind continue];
    }

    bb376: {
        _902 = [move _903];
        _901 = &_902;
        _900 = _901 as &[core::fmt::rt::Argument<'_>] (Pointer(Unsize));
        _898 = Arguments::<'_>::new_v1(move _899, move _900) -> [return: bb377, unwind continue];
    }

    bb377: {
        _897 = _print(move _898) -> [return: bb378, unwind continue];
    }

    bb378: {
        _1452 = const _;
        _906 = _1452 as &[&str] (Pointer(Unsize));
        _1451 = const _;
        _910 = core::fmt::rt::Argument::<'_>::new_debug::<f64>(_1451) -> [return: bb379, unwind continue];
    }

    bb379: {
        _909 = [move _910];
        _908 = &_909;
        _907 = _908 as &[core::fmt::rt::Argument<'_>] (Pointer(Unsize));
        _905 = Arguments::<'_>::new_v1(move _906, move _907) -> [return: bb380, unwind continue];
    }

    bb380: {
        _904 = _print(move _905) -> [return: bb381, unwind continue];
    }

    bb381: {
        _1450 = const _;
        _913 = _1450 as &[&str] (Pointer(Unsize));
        _1449 = const _;
        _917 = core::fmt::rt::Argument::<'_>::new_debug::<isize>(_1449) -> [return: bb382, unwind continue];
    }

    bb382: {
        _916 = [move _917];
        _915 = &_916;
        _914 = _915 as &[core::fmt::rt::Argument<'_>] (Pointer(Unsize));
        _912 = Arguments::<'_>::new_v1(move _913, move _914) -> [return: bb383, unwind continue];
    }

    bb383: {
        _911 = _print(move _912) -> [return: bb384, unwind continue];
    }

    bb384: {
        _1448 = const _;
        _920 = _1448 as &[&str] (Pointer(Unsize));
        _1447 = const _;
        _924 = core::fmt::rt::Argument::<'_>::new_debug::<usize>(_1447) -> [return: bb385, unwind continue];
    }

    bb385: {
        _923 = [move _924];
        _922 = &_923;
        _921 = _922 as &[core::fmt::rt::Argument<'_>] (Pointer(Unsize));
        _919 = Arguments::<'_>::new_v1(move _920, move _921) -> [return: bb386, unwind continue];
    }

    bb386: {
        _918 = _print(move _919) -> [return: bb387, unwind continue];
    }

    bb387: {
        _1446 = const _;
        _927 = _1446 as &[&str] (Pointer(Unsize));
        _1445 = const _;
        _931 = core::fmt::rt::Argument::<'_>::new_debug::<*const String>(_1445) -> [return: bb388, unwind continue];
    }

    bb388: {
        _930 = [move _931];
        _929 = &_930;
        _928 = _929 as &[core::fmt::rt::Argument<'_>] (Pointer(Unsize));
        _926 = Arguments::<'_>::new_v1(move _927, move _928) -> [return: bb389, unwind continue];
    }

    bb389: {
        _925 = _print(move _926) -> [return: bb390, unwind continue];
    }

    bb390: {
        _1444 = const _;
        _934 = _1444 as &[&str] (Pointer(Unsize));
        _1443 = const _;
        _938 = core::fmt::rt::Argument::<'_>::new_debug::<i8>(_1443) -> [return: bb391, unwind continue];
    }

    bb391: {
        _937 = [move _938];
        _936 = &_937;
        _935 = _936 as &[core::fmt::rt::Argument<'_>] (Pointer(Unsize));
        _933 = Arguments::<'_>::new_v1(move _934, move _935) -> [return: bb392, unwind continue];
    }

    bb392: {
        _932 = _print(move _933) -> [return: bb393, unwind continue];
    }

    bb393: {
        _1442 = const _;
        _941 = _1442 as &[&str] (Pointer(Unsize));
        _1441 = const _;
        _945 = core::fmt::rt::Argument::<'_>::new_debug::<i16>(_1441) -> [return: bb394, unwind continue];
    }

    bb394: {
        _944 = [move _945];
        _943 = &_944;
        _942 = _943 as &[core::fmt::rt::Argument<'_>] (Pointer(Unsize));
        _940 = Arguments::<'_>::new_v1(move _941, move _942) -> [return: bb395, unwind continue];
    }

    bb395: {
        _939 = _print(move _940) -> [return: bb396, unwind continue];
    }

    bb396: {
        _1440 = const _;
        _948 = _1440 as &[&str] (Pointer(Unsize));
        _1439 = const _;
        _952 = core::fmt::rt::Argument::<'_>::new_debug::<i32>(_1439) -> [return: bb397, unwind continue];
    }

    bb397: {
        _951 = [move _952];
        _950 = &_951;
        _949 = _950 as &[core::fmt::rt::Argument<'_>] (Pointer(Unsize));
        _947 = Arguments::<'_>::new_v1(move _948, move _949) -> [return: bb398, unwind continue];
    }

    bb398: {
        _946 = _print(move _947) -> [return: bb399, unwind continue];
    }

    bb399: {
        _1438 = const _;
        _955 = _1438 as &[&str] (Pointer(Unsize));
        _1437 = const _;
        _959 = core::fmt::rt::Argument::<'_>::new_debug::<i64>(_1437) -> [return: bb400, unwind continue];
    }

    bb400: {
        _958 = [move _959];
        _957 = &_958;
        _956 = _957 as &[core::fmt::rt::Argument<'_>] (Pointer(Unsize));
        _954 = Arguments::<'_>::new_v1(move _955, move _956) -> [return: bb401, unwind continue];
    }

    bb401: {
        _953 = _print(move _954) -> [return: bb402, unwind continue];
    }

    bb402: {
        _1436 = const _;
        _962 = _1436 as &[&str] (Pointer(Unsize));
        _1435 = const _;
        _966 = core::fmt::rt::Argument::<'_>::new_debug::<u8>(_1435) -> [return: bb403, unwind continue];
    }

    bb403: {
        _965 = [move _966];
        _964 = &_965;
        _963 = _964 as &[core::fmt::rt::Argument<'_>] (Pointer(Unsize));
        _961 = Arguments::<'_>::new_v1(move _962, move _963) -> [return: bb404, unwind continue];
    }

    bb404: {
        _960 = _print(move _961) -> [return: bb405, unwind continue];
    }

    bb405: {
        _1434 = const _;
        _969 = _1434 as &[&str] (Pointer(Unsize));
        _1433 = const _;
        _973 = core::fmt::rt::Argument::<'_>::new_debug::<u16>(_1433) -> [return: bb406, unwind continue];
    }

    bb406: {
        _972 = [move _973];
        _971 = &_972;
        _970 = _971 as &[core::fmt::rt::Argument<'_>] (Pointer(Unsize));
        _968 = Arguments::<'_>::new_v1(move _969, move _970) -> [return: bb407, unwind continue];
    }

    bb407: {
        _967 = _print(move _968) -> [return: bb408, unwind continue];
    }

    bb408: {
        _1432 = const _;
        _976 = _1432 as &[&str] (Pointer(Unsize));
        _1431 = const _;
        _980 = core::fmt::rt::Argument::<'_>::new_debug::<u32>(_1431) -> [return: bb409, unwind continue];
    }

    bb409: {
        _979 = [move _980];
        _978 = &_979;
        _977 = _978 as &[core::fmt::rt::Argument<'_>] (Pointer(Unsize));
        _975 = Arguments::<'_>::new_v1(move _976, move _977) -> [return: bb410, unwind continue];
    }

    bb410: {
        _974 = _print(move _975) -> [return: bb411, unwind continue];
    }

    bb411: {
        _1430 = const _;
        _983 = _1430 as &[&str] (Pointer(Unsize));
        _1429 = const _;
        _987 = core::fmt::rt::Argument::<'_>::new_debug::<u64>(_1429) -> [return: bb412, unwind continue];
    }

    bb412: {
        _986 = [move _987];
        _985 = &_986;
        _984 = _985 as &[core::fmt::rt::Argument<'_>] (Pointer(Unsize));
        _982 = Arguments::<'_>::new_v1(move _983, move _984) -> [return: bb413, unwind continue];
    }

    bb413: {
        _981 = _print(move _982) -> [return: bb414, unwind continue];
    }

    bb414: {
        _1428 = const _;
        _990 = _1428 as &[&str] (Pointer(Unsize));
        _1427 = const _;
        _994 = core::fmt::rt::Argument::<'_>::new_debug::<f32>(_1427) -> [return: bb415, unwind continue];
    }

    bb415: {
        _993 = [move _994];
        _992 = &_993;
        _991 = _992 as &[core::fmt::rt::Argument<'_>] (Pointer(Unsize));
        _989 = Arguments::<'_>::new_v1(move _990, move _991) -> [return: bb416, unwind continue];
    }

    bb416: {
        _988 = _print(move _989) -> [return: bb417, unwind continue];
    }

    bb417: {
        _1426 = const _;
        _997 = _1426 as &[&str] (Pointer(Unsize));
        _1425 = const _;
        _1001 = core::fmt::rt::Argument::<'_>::new_debug::<f64>(_1425) -> [return: bb418, unwind continue];
    }

    bb418: {
        _1000 = [move _1001];
        _999 = &_1000;
        _998 = _999 as &[core::fmt::rt::Argument<'_>] (Pointer(Unsize));
        _996 = Arguments::<'_>::new_v1(move _997, move _998) -> [return: bb419, unwind continue];
    }

    bb419: {
        _995 = _print(move _996) -> [return: bb420, unwind continue];
    }

    bb420: {
        _1424 = const _;
        _1004 = _1424 as &[&str] (Pointer(Unsize));
        _1423 = const _;
        _1008 = core::fmt::rt::Argument::<'_>::new_debug::<isize>(_1423) -> [return: bb421, unwind continue];
    }

    bb421: {
        _1007 = [move _1008];
        _1006 = &_1007;
        _1005 = _1006 as &[core::fmt::rt::Argument<'_>] (Pointer(Unsize));
        _1003 = Arguments::<'_>::new_v1(move _1004, move _1005) -> [return: bb422, unwind continue];
    }

    bb422: {
        _1002 = _print(move _1003) -> [return: bb423, unwind continue];
    }

    bb423: {
        _1422 = const _;
        _1011 = _1422 as &[&str] (Pointer(Unsize));
        _1421 = const _;
        _1015 = core::fmt::rt::Argument::<'_>::new_debug::<usize>(_1421) -> [return: bb424, unwind continue];
    }

    bb424: {
        _1014 = [move _1015];
        _1013 = &_1014;
        _1012 = _1013 as &[core::fmt::rt::Argument<'_>] (Pointer(Unsize));
        _1010 = Arguments::<'_>::new_v1(move _1011, move _1012) -> [return: bb425, unwind continue];
    }

    bb425: {
        _1009 = _print(move _1010) -> [return: bb426, unwind continue];
    }

    bb426: {
        _1420 = const _;
        _1018 = _1420 as &[&str] (Pointer(Unsize));
        _1419 = const _;
        _1022 = core::fmt::rt::Argument::<'_>::new_debug::<*const String>(_1419) -> [return: bb427, unwind continue];
    }

    bb427: {
        _1021 = [move _1022];
        _1020 = &_1021;
        _1019 = _1020 as &[core::fmt::rt::Argument<'_>] (Pointer(Unsize));
        _1017 = Arguments::<'_>::new_v1(move _1018, move _1019) -> [return: bb428, unwind continue];
    }

    bb428: {
        _1016 = _print(move _1017) -> [return: bb429, unwind continue];
    }

    bb429: {
        _1418 = const _;
        _1025 = _1418 as &[&str] (Pointer(Unsize));
        _1417 = const _;
        _1029 = core::fmt::rt::Argument::<'_>::new_debug::<i8>(_1417) -> [return: bb430, unwind continue];
    }

    bb430: {
        _1028 = [move _1029];
        _1027 = &_1028;
        _1026 = _1027 as &[core::fmt::rt::Argument<'_>] (Pointer(Unsize));
        _1024 = Arguments::<'_>::new_v1(move _1025, move _1026) -> [return: bb431, unwind continue];
    }

    bb431: {
        _1023 = _print(move _1024) -> [return: bb432, unwind continue];
    }

    bb432: {
        _1416 = const _;
        _1032 = _1416 as &[&str] (Pointer(Unsize));
        _1415 = const _;
        _1036 = core::fmt::rt::Argument::<'_>::new_debug::<i16>(_1415) -> [return: bb433, unwind continue];
    }

    bb433: {
        _1035 = [move _1036];
        _1034 = &_1035;
        _1033 = _1034 as &[core::fmt::rt::Argument<'_>] (Pointer(Unsize));
        _1031 = Arguments::<'_>::new_v1(move _1032, move _1033) -> [return: bb434, unwind continue];
    }

    bb434: {
        _1030 = _print(move _1031) -> [return: bb435, unwind continue];
    }

    bb435: {
        _1414 = const _;
        _1039 = _1414 as &[&str] (Pointer(Unsize));
        _1413 = const _;
        _1043 = core::fmt::rt::Argument::<'_>::new_debug::<i32>(_1413) -> [return: bb436, unwind continue];
    }

    bb436: {
        _1042 = [move _1043];
        _1041 = &_1042;
        _1040 = _1041 as &[core::fmt::rt::Argument<'_>] (Pointer(Unsize));
        _1038 = Arguments::<'_>::new_v1(move _1039, move _1040) -> [return: bb437, unwind continue];
    }

    bb437: {
        _1037 = _print(move _1038) -> [return: bb438, unwind continue];
    }

    bb438: {
        _1412 = const _;
        _1046 = _1412 as &[&str] (Pointer(Unsize));
        _1411 = const _;
        _1050 = core::fmt::rt::Argument::<'_>::new_debug::<i64>(_1411) -> [return: bb439, unwind continue];
    }

    bb439: {
        _1049 = [move _1050];
        _1048 = &_1049;
        _1047 = _1048 as &[core::fmt::rt::Argument<'_>] (Pointer(Unsize));
        _1045 = Arguments::<'_>::new_v1(move _1046, move _1047) -> [return: bb440, unwind continue];
    }

    bb440: {
        _1044 = _print(move _1045) -> [return: bb441, unwind continue];
    }

    bb441: {
        _1410 = const _;
        _1053 = _1410 as &[&str] (Pointer(Unsize));
        _1409 = const _;
        _1057 = core::fmt::rt::Argument::<'_>::new_debug::<u8>(_1409) -> [return: bb442, unwind continue];
    }

    bb442: {
        _1056 = [move _1057];
        _1055 = &_1056;
        _1054 = _1055 as &[core::fmt::rt::Argument<'_>] (Pointer(Unsize));
        _1052 = Arguments::<'_>::new_v1(move _1053, move _1054) -> [return: bb443, unwind continue];
    }

    bb443: {
        _1051 = _print(move _1052) -> [return: bb444, unwind continue];
    }

    bb444: {
        _1408 = const _;
        _1060 = _1408 as &[&str] (Pointer(Unsize));
        _1407 = const _;
        _1064 = core::fmt::rt::Argument::<'_>::new_debug::<u16>(_1407) -> [return: bb445, unwind continue];
    }

    bb445: {
        _1063 = [move _1064];
        _1062 = &_1063;
        _1061 = _1062 as &[core::fmt::rt::Argument<'_>] (Pointer(Unsize));
        _1059 = Arguments::<'_>::new_v1(move _1060, move _1061) -> [return: bb446, unwind continue];
    }

    bb446: {
        _1058 = _print(move _1059) -> [return: bb447, unwind continue];
    }

    bb447: {
        _1406 = const _;
        _1067 = _1406 as &[&str] (Pointer(Unsize));
        _1405 = const _;
        _1071 = core::fmt::rt::Argument::<'_>::new_debug::<u32>(_1405) -> [return: bb448, unwind continue];
    }

    bb448: {
        _1070 = [move _1071];
        _1069 = &_1070;
        _1068 = _1069 as &[core::fmt::rt::Argument<'_>] (Pointer(Unsize));
        _1066 = Arguments::<'_>::new_v1(move _1067, move _1068) -> [return: bb449, unwind continue];
    }

    bb449: {
        _1065 = _print(move _1066) -> [return: bb450, unwind continue];
    }

    bb450: {
        _1404 = const _;
        _1074 = _1404 as &[&str] (Pointer(Unsize));
        _1403 = const _;
        _1078 = core::fmt::rt::Argument::<'_>::new_debug::<u64>(_1403) -> [return: bb451, unwind continue];
    }

    bb451: {
        _1077 = [move _1078];
        _1076 = &_1077;
        _1075 = _1076 as &[core::fmt::rt::Argument<'_>] (Pointer(Unsize));
        _1073 = Arguments::<'_>::new_v1(move _1074, move _1075) -> [return: bb452, unwind continue];
    }

    bb452: {
        _1072 = _print(move _1073) -> [return: bb453, unwind continue];
    }

    bb453: {
        _1402 = const _;
        _1081 = _1402 as &[&str] (Pointer(Unsize));
        _1401 = const _;
        _1085 = core::fmt::rt::Argument::<'_>::new_debug::<f32>(_1401) -> [return: bb454, unwind continue];
    }

    bb454: {
        _1084 = [move _1085];
        _1083 = &_1084;
        _1082 = _1083 as &[core::fmt::rt::Argument<'_>] (Pointer(Unsize));
        _1080 = Arguments::<'_>::new_v1(move _1081, move _1082) -> [return: bb455, unwind continue];
    }

    bb455: {
        _1079 = _print(move _1080) -> [return: bb456, unwind continue];
    }

    bb456: {
        _1400 = const _;
        _1088 = _1400 as &[&str] (Pointer(Unsize));
        _1399 = const _;
        _1092 = core::fmt::rt::Argument::<'_>::new_debug::<f64>(_1399) -> [return: bb457, unwind continue];
    }

    bb457: {
        _1091 = [move _1092];
        _1090 = &_1091;
        _1089 = _1090 as &[core::fmt::rt::Argument<'_>] (Pointer(Unsize));
        _1087 = Arguments::<'_>::new_v1(move _1088, move _1089) -> [return: bb458, unwind continue];
    }

    bb458: {
        _1086 = _print(move _1087) -> [return: bb459, unwind continue];
    }

    bb459: {
        _1398 = const _;
        _1095 = _1398 as &[&str] (Pointer(Unsize));
        _1397 = const _;
        _1099 = core::fmt::rt::Argument::<'_>::new_debug::<isize>(_1397) -> [return: bb460, unwind continue];
    }

    bb460: {
        _1098 = [move _1099];
        _1097 = &_1098;
        _1096 = _1097 as &[core::fmt::rt::Argument<'_>] (Pointer(Unsize));
        _1094 = Arguments::<'_>::new_v1(move _1095, move _1096) -> [return: bb461, unwind continue];
    }

    bb461: {
        _1093 = _print(move _1094) -> [return: bb462, unwind continue];
    }

    bb462: {
        _1396 = const _;
        _1102 = _1396 as &[&str] (Pointer(Unsize));
        _1395 = const _;
        _1106 = core::fmt::rt::Argument::<'_>::new_debug::<usize>(_1395) -> [return: bb463, unwind continue];
    }

    bb463: {
        _1105 = [move _1106];
        _1104 = &_1105;
        _1103 = _1104 as &[core::fmt::rt::Argument<'_>] (Pointer(Unsize));
        _1101 = Arguments::<'_>::new_v1(move _1102, move _1103) -> [return: bb464, unwind continue];
    }

    bb464: {
        _1100 = _print(move _1101) -> [return: bb465, unwind continue];
    }

    bb465: {
        _1394 = const _;
        _1109 = _1394 as &[&str] (Pointer(Unsize));
        _1393 = const _;
        _1113 = core::fmt::rt::Argument::<'_>::new_debug::<i8>(_1393) -> [return: bb466, unwind continue];
    }

    bb466: {
        _1112 = [move _1113];
        _1111 = &_1112;
        _1110 = _1111 as &[core::fmt::rt::Argument<'_>] (Pointer(Unsize));
        _1108 = Arguments::<'_>::new_v1(move _1109, move _1110) -> [return: bb467, unwind continue];
    }

    bb467: {
        _1107 = _print(move _1108) -> [return: bb468, unwind continue];
    }

    bb468: {
        _1392 = const _;
        _1116 = _1392 as &[&str] (Pointer(Unsize));
        _1391 = const _;
        _1120 = core::fmt::rt::Argument::<'_>::new_debug::<i16>(_1391) -> [return: bb469, unwind continue];
    }

    bb469: {
        _1119 = [move _1120];
        _1118 = &_1119;
        _1117 = _1118 as &[core::fmt::rt::Argument<'_>] (Pointer(Unsize));
        _1115 = Arguments::<'_>::new_v1(move _1116, move _1117) -> [return: bb470, unwind continue];
    }

    bb470: {
        _1114 = _print(move _1115) -> [return: bb471, unwind continue];
    }

    bb471: {
        _1390 = const _;
        _1123 = _1390 as &[&str] (Pointer(Unsize));
        _1389 = const _;
        _1127 = core::fmt::rt::Argument::<'_>::new_debug::<i32>(_1389) -> [return: bb472, unwind continue];
    }

    bb472: {
        _1126 = [move _1127];
        _1125 = &_1126;
        _1124 = _1125 as &[core::fmt::rt::Argument<'_>] (Pointer(Unsize));
        _1122 = Arguments::<'_>::new_v1(move _1123, move _1124) -> [return: bb473, unwind continue];
    }

    bb473: {
        _1121 = _print(move _1122) -> [return: bb474, unwind continue];
    }

    bb474: {
        _1388 = const _;
        _1130 = _1388 as &[&str] (Pointer(Unsize));
        _1387 = const _;
        _1134 = core::fmt::rt::Argument::<'_>::new_debug::<i64>(_1387) -> [return: bb475, unwind continue];
    }

    bb475: {
        _1133 = [move _1134];
        _1132 = &_1133;
        _1131 = _1132 as &[core::fmt::rt::Argument<'_>] (Pointer(Unsize));
        _1129 = Arguments::<'_>::new_v1(move _1130, move _1131) -> [return: bb476, unwind continue];
    }

    bb476: {
        _1128 = _print(move _1129) -> [return: bb477, unwind continue];
    }

    bb477: {
        _1386 = const _;
        _1137 = _1386 as &[&str] (Pointer(Unsize));
        _1385 = const _;
        _1141 = core::fmt::rt::Argument::<'_>::new_debug::<u8>(_1385) -> [return: bb478, unwind continue];
    }

    bb478: {
        _1140 = [move _1141];
        _1139 = &_1140;
        _1138 = _1139 as &[core::fmt::rt::Argument<'_>] (Pointer(Unsize));
        _1136 = Arguments::<'_>::new_v1(move _1137, move _1138) -> [return: bb479, unwind continue];
    }

    bb479: {
        _1135 = _print(move _1136) -> [return: bb480, unwind continue];
    }

    bb480: {
        _1384 = const _;
        _1144 = _1384 as &[&str] (Pointer(Unsize));
        _1383 = const _;
        _1148 = core::fmt::rt::Argument::<'_>::new_debug::<u16>(_1383) -> [return: bb481, unwind continue];
    }

    bb481: {
        _1147 = [move _1148];
        _1146 = &_1147;
        _1145 = _1146 as &[core::fmt::rt::Argument<'_>] (Pointer(Unsize));
        _1143 = Arguments::<'_>::new_v1(move _1144, move _1145) -> [return: bb482, unwind continue];
    }

    bb482: {
        _1142 = _print(move _1143) -> [return: bb483, unwind continue];
    }

    bb483: {
        _1382 = const _;
        _1151 = _1382 as &[&str] (Pointer(Unsize));
        _1381 = const _;
        _1155 = core::fmt::rt::Argument::<'_>::new_debug::<u32>(_1381) -> [return: bb484, unwind continue];
    }

    bb484: {
        _1154 = [move _1155];
        _1153 = &_1154;
        _1152 = _1153 as &[core::fmt::rt::Argument<'_>] (Pointer(Unsize));
        _1150 = Arguments::<'_>::new_v1(move _1151, move _1152) -> [return: bb485, unwind continue];
    }

    bb485: {
        _1149 = _print(move _1150) -> [return: bb486, unwind continue];
    }

    bb486: {
        _1380 = const _;
        _1158 = _1380 as &[&str] (Pointer(Unsize));
        _1379 = const _;
        _1162 = core::fmt::rt::Argument::<'_>::new_debug::<u64>(_1379) -> [return: bb487, unwind continue];
    }

    bb487: {
        _1161 = [move _1162];
        _1160 = &_1161;
        _1159 = _1160 as &[core::fmt::rt::Argument<'_>] (Pointer(Unsize));
        _1157 = Arguments::<'_>::new_v1(move _1158, move _1159) -> [return: bb488, unwind continue];
    }

    bb488: {
        _1156 = _print(move _1157) -> [return: bb489, unwind continue];
    }

    bb489: {
        _1378 = const _;
        _1165 = _1378 as &[&str] (Pointer(Unsize));
        _1377 = const _;
        _1169 = core::fmt::rt::Argument::<'_>::new_debug::<isize>(_1377) -> [return: bb490, unwind continue];
    }

    bb490: {
        _1168 = [move _1169];
        _1167 = &_1168;
        _1166 = _1167 as &[core::fmt::rt::Argument<'_>] (Pointer(Unsize));
        _1164 = Arguments::<'_>::new_v1(move _1165, move _1166) -> [return: bb491, unwind continue];
    }

    bb491: {
        _1163 = _print(move _1164) -> [return: bb492, unwind continue];
    }

    bb492: {
        _1376 = const _;
        _1172 = _1376 as &[&str] (Pointer(Unsize));
        _1375 = const _;
        _1176 = core::fmt::rt::Argument::<'_>::new_debug::<usize>(_1375) -> [return: bb493, unwind continue];
    }

    bb493: {
        _1175 = [move _1176];
        _1174 = &_1175;
        _1173 = _1174 as &[core::fmt::rt::Argument<'_>] (Pointer(Unsize));
        _1171 = Arguments::<'_>::new_v1(move _1172, move _1173) -> [return: bb494, unwind continue];
    }

    bb494: {
        _1170 = _print(move _1171) -> [return: bb495, unwind continue];
    }

    bb495: {
        _1374 = const _;
        _1179 = _1374 as &[&str] (Pointer(Unsize));
        _1373 = const _;
        _1183 = core::fmt::rt::Argument::<'_>::new_debug::<i8>(_1373) -> [return: bb496, unwind continue];
    }

    bb496: {
        _1182 = [move _1183];
        _1181 = &_1182;
        _1180 = _1181 as &[core::fmt::rt::Argument<'_>] (Pointer(Unsize));
        _1178 = Arguments::<'_>::new_v1(move _1179, move _1180) -> [return: bb497, unwind continue];
    }

    bb497: {
        _1177 = _print(move _1178) -> [return: bb498, unwind continue];
    }

    bb498: {
        _1372 = const _;
        _1186 = _1372 as &[&str] (Pointer(Unsize));
        _1371 = const _;
        _1190 = core::fmt::rt::Argument::<'_>::new_debug::<i16>(_1371) -> [return: bb499, unwind continue];
    }

    bb499: {
        _1189 = [move _1190];
        _1188 = &_1189;
        _1187 = _1188 as &[core::fmt::rt::Argument<'_>] (Pointer(Unsize));
        _1185 = Arguments::<'_>::new_v1(move _1186, move _1187) -> [return: bb500, unwind continue];
    }

    bb500: {
        _1184 = _print(move _1185) -> [return: bb501, unwind continue];
    }

    bb501: {
        _1370 = const _;
        _1193 = _1370 as &[&str] (Pointer(Unsize));
        _1369 = const _;
        _1197 = core::fmt::rt::Argument::<'_>::new_debug::<i32>(_1369) -> [return: bb502, unwind continue];
    }

    bb502: {
        _1196 = [move _1197];
        _1195 = &_1196;
        _1194 = _1195 as &[core::fmt::rt::Argument<'_>] (Pointer(Unsize));
        _1192 = Arguments::<'_>::new_v1(move _1193, move _1194) -> [return: bb503, unwind continue];
    }

    bb503: {
        _1191 = _print(move _1192) -> [return: bb504, unwind continue];
    }

    bb504: {
        _1368 = const _;
        _1200 = _1368 as &[&str] (Pointer(Unsize));
        _1367 = const _;
        _1204 = core::fmt::rt::Argument::<'_>::new_debug::<i64>(_1367) -> [return: bb505, unwind continue];
    }

    bb505: {
        _1203 = [move _1204];
        _1202 = &_1203;
        _1201 = _1202 as &[core::fmt::rt::Argument<'_>] (Pointer(Unsize));
        _1199 = Arguments::<'_>::new_v1(move _1200, move _1201) -> [return: bb506, unwind continue];
    }

    bb506: {
        _1198 = _print(move _1199) -> [return: bb507, unwind continue];
    }

    bb507: {
        _1366 = const _;
        _1207 = _1366 as &[&str] (Pointer(Unsize));
        _1365 = const _;
        _1211 = core::fmt::rt::Argument::<'_>::new_debug::<u8>(_1365) -> [return: bb508, unwind continue];
    }

    bb508: {
        _1210 = [move _1211];
        _1209 = &_1210;
        _1208 = _1209 as &[core::fmt::rt::Argument<'_>] (Pointer(Unsize));
        _1206 = Arguments::<'_>::new_v1(move _1207, move _1208) -> [return: bb509, unwind continue];
    }

    bb509: {
        _1205 = _print(move _1206) -> [return: bb510, unwind continue];
    }

    bb510: {
        _1364 = const _;
        _1214 = _1364 as &[&str] (Pointer(Unsize));
        _1363 = const _;
        _1218 = core::fmt::rt::Argument::<'_>::new_debug::<u16>(_1363) -> [return: bb511, unwind continue];
    }

    bb511: {
        _1217 = [move _1218];
        _1216 = &_1217;
        _1215 = _1216 as &[core::fmt::rt::Argument<'_>] (Pointer(Unsize));
        _1213 = Arguments::<'_>::new_v1(move _1214, move _1215) -> [return: bb512, unwind continue];
    }

    bb512: {
        _1212 = _print(move _1213) -> [return: bb513, unwind continue];
    }

    bb513: {
        _1362 = const _;
        _1221 = _1362 as &[&str] (Pointer(Unsize));
        _1361 = const _;
        _1225 = core::fmt::rt::Argument::<'_>::new_debug::<u32>(_1361) -> [return: bb514, unwind continue];
    }

    bb514: {
        _1224 = [move _1225];
        _1223 = &_1224;
        _1222 = _1223 as &[core::fmt::rt::Argument<'_>] (Pointer(Unsize));
        _1220 = Arguments::<'_>::new_v1(move _1221, move _1222) -> [return: bb515, unwind continue];
    }

    bb515: {
        _1219 = _print(move _1220) -> [return: bb516, unwind continue];
    }

    bb516: {
        _1360 = const _;
        _1228 = _1360 as &[&str] (Pointer(Unsize));
        _1359 = const _;
        _1232 = core::fmt::rt::Argument::<'_>::new_debug::<u64>(_1359) -> [return: bb517, unwind continue];
    }

    bb517: {
        _1231 = [move _1232];
        _1230 = &_1231;
        _1229 = _1230 as &[core::fmt::rt::Argument<'_>] (Pointer(Unsize));
        _1227 = Arguments::<'_>::new_v1(move _1228, move _1229) -> [return: bb518, unwind continue];
    }

    bb518: {
        _1226 = _print(move _1227) -> [return: bb519, unwind continue];
    }

    bb519: {
        _1358 = const _;
        _1235 = _1358 as &[&str] (Pointer(Unsize));
        _1357 = const _;
        _1239 = core::fmt::rt::Argument::<'_>::new_debug::<f32>(_1357) -> [return: bb520, unwind continue];
    }

    bb520: {
        _1238 = [move _1239];
        _1237 = &_1238;
        _1236 = _1237 as &[core::fmt::rt::Argument<'_>] (Pointer(Unsize));
        _1234 = Arguments::<'_>::new_v1(move _1235, move _1236) -> [return: bb521, unwind continue];
    }

    bb521: {
        _1233 = _print(move _1234) -> [return: bb522, unwind continue];
    }

    bb522: {
        _1356 = const _;
        _1242 = _1356 as &[&str] (Pointer(Unsize));
        _1355 = const _;
        _1246 = core::fmt::rt::Argument::<'_>::new_debug::<f64>(_1355) -> [return: bb523, unwind continue];
    }

    bb523: {
        _1245 = [move _1246];
        _1244 = &_1245;
        _1243 = _1244 as &[core::fmt::rt::Argument<'_>] (Pointer(Unsize));
        _1241 = Arguments::<'_>::new_v1(move _1242, move _1243) -> [return: bb524, unwind continue];
    }

    bb524: {
        _1240 = _print(move _1241) -> [return: bb525, unwind continue];
    }

    bb525: {
        _1354 = const _;
        _1249 = _1354 as &[&str] (Pointer(Unsize));
        _1353 = const _;
        _1253 = core::fmt::rt::Argument::<'_>::new_debug::<isize>(_1353) -> [return: bb526, unwind continue];
    }

    bb526: {
        _1252 = [move _1253];
        _1251 = &_1252;
        _1250 = _1251 as &[core::fmt::rt::Argument<'_>] (Pointer(Unsize));
        _1248 = Arguments::<'_>::new_v1(move _1249, move _1250) -> [return: bb527, unwind continue];
    }

    bb527: {
        _1247 = _print(move _1248) -> [return: bb528, unwind continue];
    }

    bb528: {
        _1352 = const _;
        _1256 = _1352 as &[&str] (Pointer(Unsize));
        _1351 = const _;
        _1260 = core::fmt::rt::Argument::<'_>::new_debug::<usize>(_1351) -> [return: bb529, unwind continue];
    }

    bb529: {
        _1259 = [move _1260];
        _1258 = &_1259;
        _1257 = _1258 as &[core::fmt::rt::Argument<'_>] (Pointer(Unsize));
        _1255 = Arguments::<'_>::new_v1(move _1256, move _1257) -> [return: bb530, unwind continue];
    }

    bb530: {
        _1254 = _print(move _1255) -> [return: bb531, unwind continue];
    }

    bb531: {
        _1350 = const _;
        _1263 = _1350 as &[&str] (Pointer(Unsize));
        _1349 = const _;
        _1267 = core::fmt::rt::Argument::<'_>::new_debug::<i8>(_1349) -> [return: bb532, unwind continue];
    }

    bb532: {
        _1266 = [move _1267];
        _1265 = &_1266;
        _1264 = _1265 as &[core::fmt::rt::Argument<'_>] (Pointer(Unsize));
        _1262 = Arguments::<'_>::new_v1(move _1263, move _1264) -> [return: bb533, unwind continue];
    }

    bb533: {
        _1261 = _print(move _1262) -> [return: bb534, unwind continue];
    }

    bb534: {
        _1348 = const _;
        _1270 = _1348 as &[&str] (Pointer(Unsize));
        _1347 = const _;
        _1274 = core::fmt::rt::Argument::<'_>::new_debug::<i16>(_1347) -> [return: bb535, unwind continue];
    }

    bb535: {
        _1273 = [move _1274];
        _1272 = &_1273;
        _1271 = _1272 as &[core::fmt::rt::Argument<'_>] (Pointer(Unsize));
        _1269 = Arguments::<'_>::new_v1(move _1270, move _1271) -> [return: bb536, unwind continue];
    }

    bb536: {
        _1268 = _print(move _1269) -> [return: bb537, unwind continue];
    }

    bb537: {
        _1346 = const _;
        _1277 = _1346 as &[&str] (Pointer(Unsize));
        _1345 = const _;
        _1281 = core::fmt::rt::Argument::<'_>::new_debug::<i32>(_1345) -> [return: bb538, unwind continue];
    }

    bb538: {
        _1280 = [move _1281];
        _1279 = &_1280;
        _1278 = _1279 as &[core::fmt::rt::Argument<'_>] (Pointer(Unsize));
        _1276 = Arguments::<'_>::new_v1(move _1277, move _1278) -> [return: bb539, unwind continue];
    }

    bb539: {
        _1275 = _print(move _1276) -> [return: bb540, unwind continue];
    }

    bb540: {
        _1344 = const _;
        _1284 = _1344 as &[&str] (Pointer(Unsize));
        _1343 = const _;
        _1288 = core::fmt::rt::Argument::<'_>::new_debug::<i64>(_1343) -> [return: bb541, unwind continue];
    }

    bb541: {
        _1287 = [move _1288];
        _1286 = &_1287;
        _1285 = _1286 as &[core::fmt::rt::Argument<'_>] (Pointer(Unsize));
        _1283 = Arguments::<'_>::new_v1(move _1284, move _1285) -> [return: bb542, unwind continue];
    }

    bb542: {
        _1282 = _print(move _1283) -> [return: bb543, unwind continue];
    }

    bb543: {
        _1342 = const _;
        _1291 = _1342 as &[&str] (Pointer(Unsize));
        _1341 = const _;
        _1295 = core::fmt::rt::Argument::<'_>::new_debug::<u8>(_1341) -> [return: bb544, unwind continue];
    }

    bb544: {
        _1294 = [move _1295];
        _1293 = &_1294;
        _1292 = _1293 as &[core::fmt::rt::Argument<'_>] (Pointer(Unsize));
        _1290 = Arguments::<'_>::new_v1(move _1291, move _1292) -> [return: bb545, unwind continue];
    }

    bb545: {
        _1289 = _print(move _1290) -> [return: bb546, unwind continue];
    }

    bb546: {
        _1340 = const _;
        _1298 = _1340 as &[&str] (Pointer(Unsize));
        _1339 = const _;
        _1302 = core::fmt::rt::Argument::<'_>::new_debug::<u16>(_1339) -> [return: bb547, unwind continue];
    }

    bb547: {
        _1301 = [move _1302];
        _1300 = &_1301;
        _1299 = _1300 as &[core::fmt::rt::Argument<'_>] (Pointer(Unsize));
        _1297 = Arguments::<'_>::new_v1(move _1298, move _1299) -> [return: bb548, unwind continue];
    }

    bb548: {
        _1296 = _print(move _1297) -> [return: bb549, unwind continue];
    }

    bb549: {
        _1338 = const _;
        _1305 = _1338 as &[&str] (Pointer(Unsize));
        _1337 = const _;
        _1309 = core::fmt::rt::Argument::<'_>::new_debug::<u32>(_1337) -> [return: bb550, unwind continue];
    }

    bb550: {
        _1308 = [move _1309];
        _1307 = &_1308;
        _1306 = _1307 as &[core::fmt::rt::Argument<'_>] (Pointer(Unsize));
        _1304 = Arguments::<'_>::new_v1(move _1305, move _1306) -> [return: bb551, unwind continue];
    }

    bb551: {
        _1303 = _print(move _1304) -> [return: bb552, unwind continue];
    }

    bb552: {
        _1336 = const _;
        _1312 = _1336 as &[&str] (Pointer(Unsize));
        _1335 = const _;
        _1316 = core::fmt::rt::Argument::<'_>::new_debug::<u64>(_1335) -> [return: bb553, unwind continue];
    }

    bb553: {
        _1315 = [move _1316];
        _1314 = &_1315;
        _1313 = _1314 as &[core::fmt::rt::Argument<'_>] (Pointer(Unsize));
        _1311 = Arguments::<'_>::new_v1(move _1312, move _1313) -> [return: bb554, unwind continue];
    }

    bb554: {
        _1310 = _print(move _1311) -> [return: bb555, unwind continue];
    }

    bb555: {
        _1334 = const _;
        _1319 = _1334 as &[&str] (Pointer(Unsize));
        _1333 = const _;
        _1323 = core::fmt::rt::Argument::<'_>::new_debug::<f32>(_1333) -> [return: bb556, unwind continue];
    }

    bb556: {
        _1322 = [move _1323];
        _1321 = &_1322;
        _1320 = _1321 as &[core::fmt::rt::Argument<'_>] (Pointer(Unsize));
        _1318 = Arguments::<'_>::new_v1(move _1319, move _1320) -> [return: bb557, unwind continue];
    }

    bb557: {
        _1317 = _print(move _1318) -> [return: bb558, unwind continue];
    }

    bb558: {
        _1332 = const _;
        _1326 = _1332 as &[&str] (Pointer(Unsize));
        _1331 = const _;
        _1330 = core::fmt::rt::Argument::<'_>::new_debug::<f64>(_1331) -> [return: bb559, unwind continue];
    }

    bb559: {
        _1329 = [move _1330];
        _1328 = &_1329;
        _1327 = _1328 as &[core::fmt::rt::Argument<'_>] (Pointer(Unsize));
        _1325 = Arguments::<'_>::new_v1(move _1326, move _1327) -> [return: bb560, unwind continue];
    }

    bb560: {
        _1324 = _print(move _1325) -> [return: bb561, unwind continue];
    }

    bb561: {
        return;
    }
}

promoted[0] in main: &f64 = {
    let mut _0: &f64;
    let mut _1: f64;

    bb0: {
        _1 = const 1f64;
        _0 = &_1;
        return;
    }
}

promoted[1] in main: &[&str; 2] = {
    let mut _0: &[&str; 2];
    let mut _1: [&str; 2];

    bb0: {
        _1 = [const "", const "\n"];
        _0 = &_1;
        return;
    }
}

promoted[2] in main: &f32 = {
    let mut _0: &f32;
    let mut _1: f32;

    bb0: {
        _1 = const 1f64 as f32 (FloatToFloat);
        _0 = &_1;
        return;
    }
}

promoted[3] in main: &[&str; 2] = {
    let mut _0: &[&str; 2];
    let mut _1: [&str; 2];

    bb0: {
        _1 = [const "", const "\n"];
        _0 = &_1;
        return;
    }
}

promoted[4] in main: &u64 = {
    let mut _0: &u64;
    let mut _1: u64;

    bb0: {
        _1 = const 1f64 as u64 (FloatToInt);
        _0 = &_1;
        return;
    }
}

promoted[5] in main: &[&str; 2] = {
    let mut _0: &[&str; 2];
    let mut _1: [&str; 2];

    bb0: {
        _1 = [const "", const "\n"];
        _0 = &_1;
        return;
    }
}

promoted[6] in main: &u32 = {
    let mut _0: &u32;
    let mut _1: u32;

    bb0: {
        _1 = const 1f64 as u32 (FloatToInt);
        _0 = &_1;
        return;
    }
}

promoted[7] in main: &[&str; 2] = {
    let mut _0: &[&str; 2];
    let mut _1: [&str; 2];

    bb0: {
        _1 = [const "", const "\n"];
        _0 = &_1;
        return;
    }
}

promoted[8] in main: &u16 = {
    let mut _0: &u16;
    let mut _1: u16;

    bb0: {
        _1 = const 1f64 as u16 (FloatToInt);
        _0 = &_1;
        return;
    }
}

promoted[9] in main: &[&str; 2] = {
    let mut _0: &[&str; 2];
    let mut _1: [&str; 2];

    bb0: {
        _1 = [const "", const "\n"];
        _0 = &_1;
        return;
    }
}

promoted[10] in main: &u8 = {
    let mut _0: &u8;
    let mut _1: u8;

    bb0: {
        _1 = const 1f64 as u8 (FloatToInt);
        _0 = &_1;
        return;
    }
}

promoted[11] in main: &[&str; 2] = {
    let mut _0: &[&str; 2];
    let mut _1: [&str; 2];

    bb0: {
        _1 = [const "", const "\n"];
        _0 = &_1;
        return;
    }
}

promoted[12] in main: &i64 = {
    let mut _0: &i64;
    let mut _1: i64;

    bb0: {
        _1 = const 1f64 as i64 (FloatToInt);
        _0 = &_1;
        return;
    }
}

promoted[13] in main: &[&str; 2] = {
    let mut _0: &[&str; 2];
    let mut _1: [&str; 2];

    bb0: {
        _1 = [const "", const "\n"];
        _0 = &_1;
        return;
    }
}

promoted[14] in main: &i32 = {
    let mut _0: &i32;
    let mut _1: i32;

    bb0: {
        _1 = const 1f64 as i32 (FloatToInt);
        _0 = &_1;
        return;
    }
}

promoted[15] in main: &[&str; 2] = {
    let mut _0: &[&str; 2];
    let mut _1: [&str; 2];

    bb0: {
        _1 = [const "", const "\n"];
        _0 = &_1;
        return;
    }
}

promoted[16] in main: &i16 = {
    let mut _0: &i16;
    let mut _1: i16;

    bb0: {
        _1 = const 1f64 as i16 (FloatToInt);
        _0 = &_1;
        return;
    }
}

promoted[17] in main: &[&str; 2] = {
    let mut _0: &[&str; 2];
    let mut _1: [&str; 2];

    bb0: {
        _1 = [const "", const "\n"];
        _0 = &_1;
        return;
    }
}

promoted[18] in main: &i8 = {
    let mut _0: &i8;
    let mut _1: i8;

    bb0: {
        _1 = const 1f64 as i8 (FloatToInt);
        _0 = &_1;
        return;
    }
}

promoted[19] in main: &[&str; 2] = {
    let mut _0: &[&str; 2];
    let mut _1: [&str; 2];

    bb0: {
        _1 = [const "", const "\n"];
        _0 = &_1;
        return;
    }
}

promoted[20] in main: &usize = {
    let mut _0: &usize;
    let mut _1: usize;

    bb0: {
        _1 = const 1f64 as usize (FloatToInt);
        _0 = &_1;
        return;
    }
}

promoted[21] in main: &[&str; 2] = {
    let mut _0: &[&str; 2];
    let mut _1: [&str; 2];

    bb0: {
        _1 = [const "", const "\n"];
        _0 = &_1;
        return;
    }
}

promoted[22] in main: &isize = {
    let mut _0: &isize;
    let mut _1: isize;

    bb0: {
        _1 = const 1f64 as isize (FloatToInt);
        _0 = &_1;
        return;
    }
}

promoted[23] in main: &[&str; 2] = {
    let mut _0: &[&str; 2];
    let mut _1: [&str; 2];

    bb0: {
        _1 = [const "", const "\n"];
        _0 = &_1;
        return;
    }
}

promoted[24] in main: &f64 = {
    let mut _0: &f64;
    let mut _1: f64;

    bb0: {
        _1 = const 1f32 as f64 (FloatToFloat);
        _0 = &_1;
        return;
    }
}

promoted[25] in main: &[&str; 2] = {
    let mut _0: &[&str; 2];
    let mut _1: [&str; 2];

    bb0: {
        _1 = [const "", const "\n"];
        _0 = &_1;
        return;
    }
}

promoted[26] in main: &f32 = {
    let mut _0: &f32;
    let mut _1: f32;

    bb0: {
        _1 = const 1f32;
        _0 = &_1;
        return;
    }
}

promoted[27] in main: &[&str; 2] = {
    let mut _0: &[&str; 2];
    let mut _1: [&str; 2];

    bb0: {
        _1 = [const "", const "\n"];
        _0 = &_1;
        return;
    }
}

promoted[28] in main: &u64 = {
    let mut _0: &u64;
    let mut _1: u64;

    bb0: {
        _1 = const 1f32 as u64 (FloatToInt);
        _0 = &_1;
        return;
    }
}

promoted[29] in main: &[&str; 2] = {
    let mut _0: &[&str; 2];
    let mut _1: [&str; 2];

    bb0: {
        _1 = [const "", const "\n"];
        _0 = &_1;
        return;
    }
}

promoted[30] in main: &u32 = {
    let mut _0: &u32;
    let mut _1: u32;

    bb0: {
        _1 = const 1f32 as u32 (FloatToInt);
        _0 = &_1;
        return;
    }
}

promoted[31] in main: &[&str; 2] = {
    let mut _0: &[&str; 2];
    let mut _1: [&str; 2];

    bb0: {
        _1 = [const "", const "\n"];
        _0 = &_1;
        return;
    }
}

promoted[32] in main: &u16 = {
    let mut _0: &u16;
    let mut _1: u16;

    bb0: {
        _1 = const 1f32 as u16 (FloatToInt);
        _0 = &_1;
        return;
    }
}

promoted[33] in main: &[&str; 2] = {
    let mut _0: &[&str; 2];
    let mut _1: [&str; 2];

    bb0: {
        _1 = [const "", const "\n"];
        _0 = &_1;
        return;
    }
}

promoted[34] in main: &u8 = {
    let mut _0: &u8;
    let mut _1: u8;

    bb0: {
        _1 = const 1f32 as u8 (FloatToInt);
        _0 = &_1;
        return;
    }
}

promoted[35] in main: &[&str; 2] = {
    let mut _0: &[&str; 2];
    let mut _1: [&str; 2];

    bb0: {
        _1 = [const "", const "\n"];
        _0 = &_1;
        return;
    }
}

promoted[36] in main: &i64 = {
    let mut _0: &i64;
    let mut _1: i64;

    bb0: {
        _1 = const 1f32 as i64 (FloatToInt);
        _0 = &_1;
        return;
    }
}

promoted[37] in main: &[&str; 2] = {
    let mut _0: &[&str; 2];
    let mut _1: [&str; 2];

    bb0: {
        _1 = [const "", const "\n"];
        _0 = &_1;
        return;
    }
}

promoted[38] in main: &i32 = {
    let mut _0: &i32;
    let mut _1: i32;

    bb0: {
        _1 = const 1f32 as i32 (FloatToInt);
        _0 = &_1;
        return;
    }
}

promoted[39] in main: &[&str; 2] = {
    let mut _0: &[&str; 2];
    let mut _1: [&str; 2];

    bb0: {
        _1 = [const "", const "\n"];
        _0 = &_1;
        return;
    }
}

promoted[40] in main: &i16 = {
    let mut _0: &i16;
    let mut _1: i16;

    bb0: {
        _1 = const 1f32 as i16 (FloatToInt);
        _0 = &_1;
        return;
    }
}

promoted[41] in main: &[&str; 2] = {
    let mut _0: &[&str; 2];
    let mut _1: [&str; 2];

    bb0: {
        _1 = [const "", const "\n"];
        _0 = &_1;
        return;
    }
}

promoted[42] in main: &i8 = {
    let mut _0: &i8;
    let mut _1: i8;

    bb0: {
        _1 = const 1f32 as i8 (FloatToInt);
        _0 = &_1;
        return;
    }
}

promoted[43] in main: &[&str; 2] = {
    let mut _0: &[&str; 2];
    let mut _1: [&str; 2];

    bb0: {
        _1 = [const "", const "\n"];
        _0 = &_1;
        return;
    }
}

promoted[44] in main: &usize = {
    let mut _0: &usize;
    let mut _1: usize;

    bb0: {
        _1 = const 1f32 as usize (FloatToInt);
        _0 = &_1;
        return;
    }
}

promoted[45] in main: &[&str; 2] = {
    let mut _0: &[&str; 2];
    let mut _1: [&str; 2];

    bb0: {
        _1 = [const "", const "\n"];
        _0 = &_1;
        return;
    }
}

promoted[46] in main: &isize = {
    let mut _0: &isize;
    let mut _1: isize;

    bb0: {
        _1 = const 1f32 as isize (FloatToInt);
        _0 = &_1;
        return;
    }
}

promoted[47] in main: &[&str; 2] = {
    let mut _0: &[&str; 2];
    let mut _1: [&str; 2];

    bb0: {
        _1 = [const "", const "\n"];
        _0 = &_1;
        return;
    }
}

promoted[48] in main: &u64 = {
    let mut _0: &u64;
    let mut _1: u64;

    bb0: {
        _1 = const true as u64 (IntToInt);
        _0 = &_1;
        return;
    }
}

promoted[49] in main: &[&str; 2] = {
    let mut _0: &[&str; 2];
    let mut _1: [&str; 2];

    bb0: {
        _1 = [const "", const "\n"];
        _0 = &_1;
        return;
    }
}

promoted[50] in main: &u32 = {
    let mut _0: &u32;
    let mut _1: u32;

    bb0: {
        _1 = const true as u32 (IntToInt);
        _0 = &_1;
        return;
    }
}

promoted[51] in main: &[&str; 2] = {
    let mut _0: &[&str; 2];
    let mut _1: [&str; 2];

    bb0: {
        _1 = [const "", const "\n"];
        _0 = &_1;
        return;
    }
}

promoted[52] in main: &u16 = {
    let mut _0: &u16;
    let mut _1: u16;

    bb0: {
        _1 = const true as u16 (IntToInt);
        _0 = &_1;
        return;
    }
}

promoted[53] in main: &[&str; 2] = {
    let mut _0: &[&str; 2];
    let mut _1: [&str; 2];

    bb0: {
        _1 = [const "", const "\n"];
        _0 = &_1;
        return;
    }
}

promoted[54] in main: &u8 = {
    let mut _0: &u8;
    let mut _1: u8;

    bb0: {
        _1 = const true as u8 (IntToInt);
        _0 = &_1;
        return;
    }
}

promoted[55] in main: &[&str; 2] = {
    let mut _0: &[&str; 2];
    let mut _1: [&str; 2];

    bb0: {
        _1 = [const "", const "\n"];
        _0 = &_1;
        return;
    }
}

promoted[56] in main: &i64 = {
    let mut _0: &i64;
    let mut _1: i64;

    bb0: {
        _1 = const true as i64 (IntToInt);
        _0 = &_1;
        return;
    }
}

promoted[57] in main: &[&str; 2] = {
    let mut _0: &[&str; 2];
    let mut _1: [&str; 2];

    bb0: {
        _1 = [const "", const "\n"];
        _0 = &_1;
        return;
    }
}

promoted[58] in main: &i32 = {
    let mut _0: &i32;
    let mut _1: i32;

    bb0: {
        _1 = const true as i32 (IntToInt);
        _0 = &_1;
        return;
    }
}

promoted[59] in main: &[&str; 2] = {
    let mut _0: &[&str; 2];
    let mut _1: [&str; 2];

    bb0: {
        _1 = [const "", const "\n"];
        _0 = &_1;
        return;
    }
}

promoted[60] in main: &i16 = {
    let mut _0: &i16;
    let mut _1: i16;

    bb0: {
        _1 = const true as i16 (IntToInt);
        _0 = &_1;
        return;
    }
}

promoted[61] in main: &[&str; 2] = {
    let mut _0: &[&str; 2];
    let mut _1: [&str; 2];

    bb0: {
        _1 = [const "", const "\n"];
        _0 = &_1;
        return;
    }
}

promoted[62] in main: &i8 = {
    let mut _0: &i8;
    let mut _1: i8;

    bb0: {
        _1 = const true as i8 (IntToInt);
        _0 = &_1;
        return;
    }
}

promoted[63] in main: &[&str; 2] = {
    let mut _0: &[&str; 2];
    let mut _1: [&str; 2];

    bb0: {
        _1 = [const "", const "\n"];
        _0 = &_1;
        return;
    }
}

promoted[64] in main: &usize = {
    let mut _0: &usize;
    let mut _1: usize;

    bb0: {
        _1 = const true as usize (IntToInt);
        _0 = &_1;
        return;
    }
}

promoted[65] in main: &[&str; 2] = {
    let mut _0: &[&str; 2];
    let mut _1: [&str; 2];

    bb0: {
        _1 = [const "", const "\n"];
        _0 = &_1;
        return;
    }
}

promoted[66] in main: &isize = {
    let mut _0: &isize;
    let mut _1: isize;

    bb0: {
        _1 = const true as isize (IntToInt);
        _0 = &_1;
        return;
    }
}

promoted[67] in main: &[&str; 2] = {
    let mut _0: &[&str; 2];
    let mut _1: [&str; 2];

    bb0: {
        _1 = [const "", const "\n"];
        _0 = &_1;
        return;
    }
}

promoted[68] in main: &f64 = {
    let mut _0: &f64;
    let mut _1: f64;

    bb0: {
        _1 = const 1_u64 as f64 (IntToFloat);
        _0 = &_1;
        return;
    }
}

promoted[69] in main: &[&str; 2] = {
    let mut _0: &[&str; 2];
    let mut _1: [&str; 2];

    bb0: {
        _1 = [const "", const "\n"];
        _0 = &_1;
        return;
    }
}

promoted[70] in main: &f32 = {
    let mut _0: &f32;
    let mut _1: f32;

    bb0: {
        _1 = const 1_u64 as f32 (IntToFloat);
        _0 = &_1;
        return;
    }
}

promoted[71] in main: &[&str; 2] = {
    let mut _0: &[&str; 2];
    let mut _1: [&str; 2];

    bb0: {
        _1 = [const "", const "\n"];
        _0 = &_1;
        return;
    }
}

promoted[72] in main: &u64 = {
    let mut _0: &u64;
    let mut _1: u64;

    bb0: {
        _1 = const 1_u64;
        _0 = &_1;
        return;
    }
}

promoted[73] in main: &[&str; 2] = {
    let mut _0: &[&str; 2];
    let mut _1: [&str; 2];

    bb0: {
        _1 = [const "", const "\n"];
        _0 = &_1;
        return;
    }
}

promoted[74] in main: &u32 = {
    let mut _0: &u32;
    let mut _1: u32;

    bb0: {
        _1 = const 1_u64 as u32 (IntToInt);
        _0 = &_1;
        return;
    }
}

promoted[75] in main: &[&str; 2] = {
    let mut _0: &[&str; 2];
    let mut _1: [&str; 2];

    bb0: {
        _1 = [const "", const "\n"];
        _0 = &_1;
        return;
    }
}

promoted[76] in main: &u16 = {
    let mut _0: &u16;
    let mut _1: u16;

    bb0: {
        _1 = const 1_u64 as u16 (IntToInt);
        _0 = &_1;
        return;
    }
}

promoted[77] in main: &[&str; 2] = {
    let mut _0: &[&str; 2];
    let mut _1: [&str; 2];

    bb0: {
        _1 = [const "", const "\n"];
        _0 = &_1;
        return;
    }
}

promoted[78] in main: &u8 = {
    let mut _0: &u8;
    let mut _1: u8;

    bb0: {
        _1 = const 1_u64 as u8 (IntToInt);
        _0 = &_1;
        return;
    }
}

promoted[79] in main: &[&str; 2] = {
    let mut _0: &[&str; 2];
    let mut _1: [&str; 2];

    bb0: {
        _1 = [const "", const "\n"];
        _0 = &_1;
        return;
    }
}

promoted[80] in main: &i64 = {
    let mut _0: &i64;
    let mut _1: i64;

    bb0: {
        _1 = const 1_u64 as i64 (IntToInt);
        _0 = &_1;
        return;
    }
}

promoted[81] in main: &[&str; 2] = {
    let mut _0: &[&str; 2];
    let mut _1: [&str; 2];

    bb0: {
        _1 = [const "", const "\n"];
        _0 = &_1;
        return;
    }
}

promoted[82] in main: &i32 = {
    let mut _0: &i32;
    let mut _1: i32;

    bb0: {
        _1 = const 1_u64 as i32 (IntToInt);
        _0 = &_1;
        return;
    }
}

promoted[83] in main: &[&str; 2] = {
    let mut _0: &[&str; 2];
    let mut _1: [&str; 2];

    bb0: {
        _1 = [const "", const "\n"];
        _0 = &_1;
        return;
    }
}

promoted[84] in main: &i16 = {
    let mut _0: &i16;
    let mut _1: i16;

    bb0: {
        _1 = const 1_u64 as i16 (IntToInt);
        _0 = &_1;
        return;
    }
}

promoted[85] in main: &[&str; 2] = {
    let mut _0: &[&str; 2];
    let mut _1: [&str; 2];

    bb0: {
        _1 = [const "", const "\n"];
        _0 = &_1;
        return;
    }
}

promoted[86] in main: &i8 = {
    let mut _0: &i8;
    let mut _1: i8;

    bb0: {
        _1 = const 1_u64 as i8 (IntToInt);
        _0 = &_1;
        return;
    }
}

promoted[87] in main: &[&str; 2] = {
    let mut _0: &[&str; 2];
    let mut _1: [&str; 2];

    bb0: {
        _1 = [const "", const "\n"];
        _0 = &_1;
        return;
    }
}

promoted[88] in main: &*const String = {
    let mut _0: &*const std::string::String;
    let mut _1: *const std::string::String;

    bb0: {
        _1 = const 1_u64 as *const std::string::String (PointerFromExposedAddress);
        _0 = &_1;
        return;
    }
}

promoted[89] in main: &[&str; 2] = {
    let mut _0: &[&str; 2];
    let mut _1: [&str; 2];

    bb0: {
        _1 = [const "", const "\n"];
        _0 = &_1;
        return;
    }
}

promoted[90] in main: &usize = {
    let mut _0: &usize;
    let mut _1: usize;

    bb0: {
        _1 = const 1_u64 as usize (IntToInt);
        _0 = &_1;
        return;
    }
}

promoted[91] in main: &[&str; 2] = {
    let mut _0: &[&str; 2];
    let mut _1: [&str; 2];

    bb0: {
        _1 = [const "", const "\n"];
        _0 = &_1;
        return;
    }
}

promoted[92] in main: &isize = {
    let mut _0: &isize;
    let mut _1: isize;

    bb0: {
        _1 = const 1_u64 as isize (IntToInt);
        _0 = &_1;
        return;
    }
}

promoted[93] in main: &[&str; 2] = {
    let mut _0: &[&str; 2];
    let mut _1: [&str; 2];

    bb0: {
        _1 = [const "", const "\n"];
        _0 = &_1;
        return;
    }
}

promoted[94] in main: &f64 = {
    let mut _0: &f64;
    let mut _1: f64;

    bb0: {
        _1 = const 1_u64 as f64 (IntToFloat);
        _0 = &_1;
        return;
    }
}

promoted[95] in main: &[&str; 2] = {
    let mut _0: &[&str; 2];
    let mut _1: [&str; 2];

    bb0: {
        _1 = [const "", const "\n"];
        _0 = &_1;
        return;
    }
}

promoted[96] in main: &f32 = {
    let mut _0: &f32;
    let mut _1: f32;

    bb0: {
        _1 = const 1_u64 as f32 (IntToFloat);
        _0 = &_1;
        return;
    }
}

promoted[97] in main: &[&str; 2] = {
    let mut _0: &[&str; 2];
    let mut _1: [&str; 2];

    bb0: {
        _1 = [const "", const "\n"];
        _0 = &_1;
        return;
    }
}

promoted[98] in main: &u64 = {
    let mut _0: &u64;
    let mut _1: u64;

    bb0: {
        _1 = const 1_u64;
        _0 = &_1;
        return;
    }
}

promoted[99] in main: &[&str; 2] = {
    let mut _0: &[&str; 2];
    let mut _1: [&str; 2];

    bb0: {
        _1 = [const "", const "\n"];
        _0 = &_1;
        return;
    }
}

promoted[100] in main: &u32 = {
    let mut _0: &u32;
    let mut _1: u32;

    bb0: {
        _1 = const 1_u64 as u32 (IntToInt);
        _0 = &_1;
        return;
    }
}

promoted[101] in main: &[&str; 2] = {
    let mut _0: &[&str; 2];
    let mut _1: [&str; 2];

    bb0: {
        _1 = [const "", const "\n"];
        _0 = &_1;
        return;
    }
}

promoted[102] in main: &u16 = {
    let mut _0: &u16;
    let mut _1: u16;

    bb0: {
        _1 = const 1_u64 as u16 (IntToInt);
        _0 = &_1;
        return;
    }
}

promoted[103] in main: &[&str; 2] = {
    let mut _0: &[&str; 2];
    let mut _1: [&str; 2];

    bb0: {
        _1 = [const "", const "\n"];
        _0 = &_1;
        return;
    }
}

promoted[104] in main: &u8 = {
    let mut _0: &u8;
    let mut _1: u8;

    bb0: {
        _1 = const 1_u64 as u8 (IntToInt);
        _0 = &_1;
        return;
    }
}

promoted[105] in main: &[&str; 2] = {
    let mut _0: &[&str; 2];
    let mut _1: [&str; 2];

    bb0: {
        _1 = [const "", const "\n"];
        _0 = &_1;
        return;
    }
}

promoted[106] in main: &i64 = {
    let mut _0: &i64;
    let mut _1: i64;

    bb0: {
        _1 = const 1_u64 as i64 (IntToInt);
        _0 = &_1;
        return;
    }
}

promoted[107] in main: &[&str; 2] = {
    let mut _0: &[&str; 2];
    let mut _1: [&str; 2];

    bb0: {
        _1 = [const "", const "\n"];
        _0 = &_1;
        return;
    }
}

promoted[108] in main: &i32 = {
    let mut _0: &i32;
    let mut _1: i32;

    bb0: {
        _1 = const 1_u64 as i32 (IntToInt);
        _0 = &_1;
        return;
    }
}

promoted[109] in main: &[&str; 2] = {
    let mut _0: &[&str; 2];
    let mut _1: [&str; 2];

    bb0: {
        _1 = [const "", const "\n"];
        _0 = &_1;
        return;
    }
}

promoted[110] in main: &i16 = {
    let mut _0: &i16;
    let mut _1: i16;

    bb0: {
        _1 = const 1_u64 as i16 (IntToInt);
        _0 = &_1;
        return;
    }
}

promoted[111] in main: &[&str; 2] = {
    let mut _0: &[&str; 2];
    let mut _1: [&str; 2];

    bb0: {
        _1 = [const "", const "\n"];
        _0 = &_1;
        return;
    }
}

promoted[112] in main: &i8 = {
    let mut _0: &i8;
    let mut _1: i8;

    bb0: {
        _1 = const 1_u64 as i8 (IntToInt);
        _0 = &_1;
        return;
    }
}

promoted[113] in main: &[&str; 2] = {
    let mut _0: &[&str; 2];
    let mut _1: [&str; 2];

    bb0: {
        _1 = [const "", const "\n"];
        _0 = &_1;
        return;
    }
}

promoted[114] in main: &*const String = {
    let mut _0: &*const std::string::String;
    let mut _1: *const std::string::String;

    bb0: {
        _1 = const 1_u64 as *const std::string::String (PointerFromExposedAddress);
        _0 = &_1;
        return;
    }
}

promoted[115] in main: &[&str; 2] = {
    let mut _0: &[&str; 2];
    let mut _1: [&str; 2];

    bb0: {
        _1 = [const "", const "\n"];
        _0 = &_1;
        return;
    }
}

promoted[116] in main: &usize = {
    let mut _0: &usize;
    let mut _1: usize;

    bb0: {
        _1 = const 1_u64 as usize (IntToInt);
        _0 = &_1;
        return;
    }
}

promoted[117] in main: &[&str; 2] = {
    let mut _0: &[&str; 2];
    let mut _1: [&str; 2];

    bb0: {
        _1 = [const "", const "\n"];
        _0 = &_1;
        return;
    }
}

promoted[118] in main: &isize = {
    let mut _0: &isize;
    let mut _1: isize;

    bb0: {
        _1 = const 1_u64 as isize (IntToInt);
        _0 = &_1;
        return;
    }
}

promoted[119] in main: &[&str; 2] = {
    let mut _0: &[&str; 2];
    let mut _1: [&str; 2];

    bb0: {
        _1 = [const "", const "\n"];
        _0 = &_1;
        return;
    }
}

promoted[120] in main: &f64 = {
    let mut _0: &f64;
    let mut _1: f64;

    bb0: {
        _1 = const 1_i64 as f64 (IntToFloat);
        _0 = &_1;
        return;
    }
}

promoted[121] in main: &[&str; 2] = {
    let mut _0: &[&str; 2];
    let mut _1: [&str; 2];

    bb0: {
        _1 = [const "", const "\n"];
        _0 = &_1;
        return;
    }
}

promoted[122] in main: &f32 = {
    let mut _0: &f32;
    let mut _1: f32;

    bb0: {
        _1 = const 1_i64 as f32 (IntToFloat);
        _0 = &_1;
        return;
    }
}

promoted[123] in main: &[&str; 2] = {
    let mut _0: &[&str; 2];
    let mut _1: [&str; 2];

    bb0: {
        _1 = [const "", const "\n"];
        _0 = &_1;
        return;
    }
}

promoted[124] in main: &u64 = {
    let mut _0: &u64;
    let mut _1: u64;

    bb0: {
        _1 = const 1_i64 as u64 (IntToInt);
        _0 = &_1;
        return;
    }
}

promoted[125] in main: &[&str; 2] = {
    let mut _0: &[&str; 2];
    let mut _1: [&str; 2];

    bb0: {
        _1 = [const "", const "\n"];
        _0 = &_1;
        return;
    }
}

promoted[126] in main: &u32 = {
    let mut _0: &u32;
    let mut _1: u32;

    bb0: {
        _1 = const 1_i64 as u32 (IntToInt);
        _0 = &_1;
        return;
    }
}

promoted[127] in main: &[&str; 2] = {
    let mut _0: &[&str; 2];
    let mut _1: [&str; 2];

    bb0: {
        _1 = [const "", const "\n"];
        _0 = &_1;
        return;
    }
}

promoted[128] in main: &u16 = {
    let mut _0: &u16;
    let mut _1: u16;

    bb0: {
        _1 = const 1_i64 as u16 (IntToInt);
        _0 = &_1;
        return;
    }
}

promoted[129] in main: &[&str; 2] = {
    let mut _0: &[&str; 2];
    let mut _1: [&str; 2];

    bb0: {
        _1 = [const "", const "\n"];
        _0 = &_1;
        return;
    }
}

promoted[130] in main: &u8 = {
    let mut _0: &u8;
    let mut _1: u8;

    bb0: {
        _1 = const 1_i64 as u8 (IntToInt);
        _0 = &_1;
        return;
    }
}

promoted[131] in main: &[&str; 2] = {
    let mut _0: &[&str; 2];
    let mut _1: [&str; 2];

    bb0: {
        _1 = [const "", const "\n"];
        _0 = &_1;
        return;
    }
}

promoted[132] in main: &i64 = {
    let mut _0: &i64;
    let mut _1: i64;

    bb0: {
        _1 = const 1_i64;
        _0 = &_1;
        return;
    }
}

promoted[133] in main: &[&str; 2] = {
    let mut _0: &[&str; 2];
    let mut _1: [&str; 2];

    bb0: {
        _1 = [const "", const "\n"];
        _0 = &_1;
        return;
    }
}

promoted[134] in main: &i32 = {
    let mut _0: &i32;
    let mut _1: i32;

    bb0: {
        _1 = const 1_i64 as i32 (IntToInt);
        _0 = &_1;
        return;
    }
}

promoted[135] in main: &[&str; 2] = {
    let mut _0: &[&str; 2];
    let mut _1: [&str; 2];

    bb0: {
        _1 = [const "", const "\n"];
        _0 = &_1;
        return;
    }
}

promoted[136] in main: &i16 = {
    let mut _0: &i16;
    let mut _1: i16;

    bb0: {
        _1 = const 1_i64 as i16 (IntToInt);
        _0 = &_1;
        return;
    }
}

promoted[137] in main: &[&str; 2] = {
    let mut _0: &[&str; 2];
    let mut _1: [&str; 2];

    bb0: {
        _1 = [const "", const "\n"];
        _0 = &_1;
        return;
    }
}

promoted[138] in main: &i8 = {
    let mut _0: &i8;
    let mut _1: i8;

    bb0: {
        _1 = const 1_i64 as i8 (IntToInt);
        _0 = &_1;
        return;
    }
}

promoted[139] in main: &[&str; 2] = {
    let mut _0: &[&str; 2];
    let mut _1: [&str; 2];

    bb0: {
        _1 = [const "", const "\n"];
        _0 = &_1;
        return;
    }
}

promoted[140] in main: &*const String = {
    let mut _0: &*const std::string::String;
    let mut _1: *const std::string::String;

    bb0: {
        _1 = const 1_i64 as *const std::string::String (PointerFromExposedAddress);
        _0 = &_1;
        return;
    }
}

promoted[141] in main: &[&str; 2] = {
    let mut _0: &[&str; 2];
    let mut _1: [&str; 2];

    bb0: {
        _1 = [const "", const "\n"];
        _0 = &_1;
        return;
    }
}

promoted[142] in main: &usize = {
    let mut _0: &usize;
    let mut _1: usize;

    bb0: {
        _1 = const 1_i64 as usize (IntToInt);
        _0 = &_1;
        return;
    }
}

promoted[143] in main: &[&str; 2] = {
    let mut _0: &[&str; 2];
    let mut _1: [&str; 2];

    bb0: {
        _1 = [const "", const "\n"];
        _0 = &_1;
        return;
    }
}

promoted[144] in main: &isize = {
    let mut _0: &isize;
    let mut _1: isize;

    bb0: {
        _1 = const 1_i64 as isize (IntToInt);
        _0 = &_1;
        return;
    }
}

promoted[145] in main: &[&str; 2] = {
    let mut _0: &[&str; 2];
    let mut _1: [&str; 2];

    bb0: {
        _1 = [const "", const "\n"];
        _0 = &_1;
        return;
    }
}

promoted[146] in main: &f64 = {
    let mut _0: &f64;
    let mut _1: f64;

    bb0: {
        _1 = const 1_u32 as f64 (IntToFloat);
        _0 = &_1;
        return;
    }
}

promoted[147] in main: &[&str; 2] = {
    let mut _0: &[&str; 2];
    let mut _1: [&str; 2];

    bb0: {
        _1 = [const "", const "\n"];
        _0 = &_1;
        return;
    }
}

promoted[148] in main: &f32 = {
    let mut _0: &f32;
    let mut _1: f32;

    bb0: {
        _1 = const 1_u32 as f32 (IntToFloat);
        _0 = &_1;
        return;
    }
}

promoted[149] in main: &[&str; 2] = {
    let mut _0: &[&str; 2];
    let mut _1: [&str; 2];

    bb0: {
        _1 = [const "", const "\n"];
        _0 = &_1;
        return;
    }
}

promoted[150] in main: &u64 = {
    let mut _0: &u64;
    let mut _1: u64;

    bb0: {
        _1 = const 1_u32 as u64 (IntToInt);
        _0 = &_1;
        return;
    }
}

promoted[151] in main: &[&str; 2] = {
    let mut _0: &[&str; 2];
    let mut _1: [&str; 2];

    bb0: {
        _1 = [const "", const "\n"];
        _0 = &_1;
        return;
    }
}

promoted[152] in main: &u32 = {
    let mut _0: &u32;
    let mut _1: u32;

    bb0: {
        _1 = const 1_u32;
        _0 = &_1;
        return;
    }
}

promoted[153] in main: &[&str; 2] = {
    let mut _0: &[&str; 2];
    let mut _1: [&str; 2];

    bb0: {
        _1 = [const "", const "\n"];
        _0 = &_1;
        return;
    }
}

promoted[154] in main: &u16 = {
    let mut _0: &u16;
    let mut _1: u16;

    bb0: {
        _1 = const 1_u32 as u16 (IntToInt);
        _0 = &_1;
        return;
    }
}

promoted[155] in main: &[&str; 2] = {
    let mut _0: &[&str; 2];
    let mut _1: [&str; 2];

    bb0: {
        _1 = [const "", const "\n"];
        _0 = &_1;
        return;
    }
}

promoted[156] in main: &u8 = {
    let mut _0: &u8;
    let mut _1: u8;

    bb0: {
        _1 = const 1_u32 as u8 (IntToInt);
        _0 = &_1;
        return;
    }
}

promoted[157] in main: &[&str; 2] = {
    let mut _0: &[&str; 2];
    let mut _1: [&str; 2];

    bb0: {
        _1 = [const "", const "\n"];
        _0 = &_1;
        return;
    }
}

promoted[158] in main: &i64 = {
    let mut _0: &i64;
    let mut _1: i64;

    bb0: {
        _1 = const 1_u32 as i64 (IntToInt);
        _0 = &_1;
        return;
    }
}

promoted[159] in main: &[&str; 2] = {
    let mut _0: &[&str; 2];
    let mut _1: [&str; 2];

    bb0: {
        _1 = [const "", const "\n"];
        _0 = &_1;
        return;
    }
}

promoted[160] in main: &i32 = {
    let mut _0: &i32;
    let mut _1: i32;

    bb0: {
        _1 = const 1_u32 as i32 (IntToInt);
        _0 = &_1;
        return;
    }
}

promoted[161] in main: &[&str; 2] = {
    let mut _0: &[&str; 2];
    let mut _1: [&str; 2];

    bb0: {
        _1 = [const "", const "\n"];
        _0 = &_1;
        return;
    }
}

promoted[162] in main: &i16 = {
    let mut _0: &i16;
    let mut _1: i16;

    bb0: {
        _1 = const 1_u32 as i16 (IntToInt);
        _0 = &_1;
        return;
    }
}

promoted[163] in main: &[&str; 2] = {
    let mut _0: &[&str; 2];
    let mut _1: [&str; 2];

    bb0: {
        _1 = [const "", const "\n"];
        _0 = &_1;
        return;
    }
}

promoted[164] in main: &i8 = {
    let mut _0: &i8;
    let mut _1: i8;

    bb0: {
        _1 = const 1_u32 as i8 (IntToInt);
        _0 = &_1;
        return;
    }
}

promoted[165] in main: &[&str; 2] = {
    let mut _0: &[&str; 2];
    let mut _1: [&str; 2];

    bb0: {
        _1 = [const "", const "\n"];
        _0 = &_1;
        return;
    }
}

promoted[166] in main: &*const String = {
    let mut _0: &*const std::string::String;
    let mut _1: *const std::string::String;

    bb0: {
        _1 = const 1_u32 as *const std::string::String (PointerFromExposedAddress);
        _0 = &_1;
        return;
    }
}

promoted[167] in main: &[&str; 2] = {
    let mut _0: &[&str; 2];
    let mut _1: [&str; 2];

    bb0: {
        _1 = [const "", const "\n"];
        _0 = &_1;
        return;
    }
}

promoted[168] in main: &usize = {
    let mut _0: &usize;
    let mut _1: usize;

    bb0: {
        _1 = const 1_u32 as usize (IntToInt);
        _0 = &_1;
        return;
    }
}

promoted[169] in main: &[&str; 2] = {
    let mut _0: &[&str; 2];
    let mut _1: [&str; 2];

    bb0: {
        _1 = [const "", const "\n"];
        _0 = &_1;
        return;
    }
}

promoted[170] in main: &isize = {
    let mut _0: &isize;
    let mut _1: isize;

    bb0: {
        _1 = const 1_u32 as isize (IntToInt);
        _0 = &_1;
        return;
    }
}

promoted[171] in main: &[&str; 2] = {
    let mut _0: &[&str; 2];
    let mut _1: [&str; 2];

    bb0: {
        _1 = [const "", const "\n"];
        _0 = &_1;
        return;
    }
}

promoted[172] in main: &f64 = {
    let mut _0: &f64;
    let mut _1: f64;

    bb0: {
        _1 = const 1_i32 as f64 (IntToFloat);
        _0 = &_1;
        return;
    }
}

promoted[173] in main: &[&str; 2] = {
    let mut _0: &[&str; 2];
    let mut _1: [&str; 2];

    bb0: {
        _1 = [const "", const "\n"];
        _0 = &_1;
        return;
    }
}

promoted[174] in main: &f32 = {
    let mut _0: &f32;
    let mut _1: f32;

    bb0: {
        _1 = const 1_i32 as f32 (IntToFloat);
        _0 = &_1;
        return;
    }
}

promoted[175] in main: &[&str; 2] = {
    let mut _0: &[&str; 2];
    let mut _1: [&str; 2];

    bb0: {
        _1 = [const "", const "\n"];
        _0 = &_1;
        return;
    }
}

promoted[176] in main: &u64 = {
    let mut _0: &u64;
    let mut _1: u64;

    bb0: {
        _1 = const 1_i32 as u64 (IntToInt);
        _0 = &_1;
        return;
    }
}

promoted[177] in main: &[&str; 2] = {
    let mut _0: &[&str; 2];
    let mut _1: [&str; 2];

    bb0: {
        _1 = [const "", const "\n"];
        _0 = &_1;
        return;
    }
}

promoted[178] in main: &u32 = {
    let mut _0: &u32;
    let mut _1: u32;

    bb0: {
        _1 = const 1_i32 as u32 (IntToInt);
        _0 = &_1;
        return;
    }
}

promoted[179] in main: &[&str; 2] = {
    let mut _0: &[&str; 2];
    let mut _1: [&str; 2];

    bb0: {
        _1 = [const "", const "\n"];
        _0 = &_1;
        return;
    }
}

promoted[180] in main: &u16 = {
    let mut _0: &u16;
    let mut _1: u16;

    bb0: {
        _1 = const 1_i32 as u16 (IntToInt);
        _0 = &_1;
        return;
    }
}

promoted[181] in main: &[&str; 2] = {
    let mut _0: &[&str; 2];
    let mut _1: [&str; 2];

    bb0: {
        _1 = [const "", const "\n"];
        _0 = &_1;
        return;
    }
}

promoted[182] in main: &u8 = {
    let mut _0: &u8;
    let mut _1: u8;

    bb0: {
        _1 = const 1_i32 as u8 (IntToInt);
        _0 = &_1;
        return;
    }
}

promoted[183] in main: &[&str; 2] = {
    let mut _0: &[&str; 2];
    let mut _1: [&str; 2];

    bb0: {
        _1 = [const "", const "\n"];
        _0 = &_1;
        return;
    }
}

promoted[184] in main: &i64 = {
    let mut _0: &i64;
    let mut _1: i64;

    bb0: {
        _1 = const 1_i32 as i64 (IntToInt);
        _0 = &_1;
        return;
    }
}

promoted[185] in main: &[&str; 2] = {
    let mut _0: &[&str; 2];
    let mut _1: [&str; 2];

    bb0: {
        _1 = [const "", const "\n"];
        _0 = &_1;
        return;
    }
}

promoted[186] in main: &i32 = {
    let mut _0: &i32;
    let mut _1: i32;

    bb0: {
        _1 = const 1_i32;
        _0 = &_1;
        return;
    }
}

promoted[187] in main: &[&str; 2] = {
    let mut _0: &[&str; 2];
    let mut _1: [&str; 2];

    bb0: {
        _1 = [const "", const "\n"];
        _0 = &_1;
        return;
    }
}

promoted[188] in main: &i16 = {
    let mut _0: &i16;
    let mut _1: i16;

    bb0: {
        _1 = const 1_i32 as i16 (IntToInt);
        _0 = &_1;
        return;
    }
}

promoted[189] in main: &[&str; 2] = {
    let mut _0: &[&str; 2];
    let mut _1: [&str; 2];

    bb0: {
        _1 = [const "", const "\n"];
        _0 = &_1;
        return;
    }
}

promoted[190] in main: &i8 = {
    let mut _0: &i8;
    let mut _1: i8;

    bb0: {
        _1 = const 1_i32 as i8 (IntToInt);
        _0 = &_1;
        return;
    }
}

promoted[191] in main: &[&str; 2] = {
    let mut _0: &[&str; 2];
    let mut _1: [&str; 2];

    bb0: {
        _1 = [const "", const "\n"];
        _0 = &_1;
        return;
    }
}

promoted[192] in main: &*const String = {
    let mut _0: &*const std::string::String;
    let mut _1: *const std::string::String;

    bb0: {
        _1 = const 1_i32 as *const std::string::String (PointerFromExposedAddress);
        _0 = &_1;
        return;
    }
}

promoted[193] in main: &[&str; 2] = {
    let mut _0: &[&str; 2];
    let mut _1: [&str; 2];

    bb0: {
        _1 = [const "", const "\n"];
        _0 = &_1;
        return;
    }
}

promoted[194] in main: &usize = {
    let mut _0: &usize;
    let mut _1: usize;

    bb0: {
        _1 = const 1_i32 as usize (IntToInt);
        _0 = &_1;
        return;
    }
}

promoted[195] in main: &[&str; 2] = {
    let mut _0: &[&str; 2];
    let mut _1: [&str; 2];

    bb0: {
        _1 = [const "", const "\n"];
        _0 = &_1;
        return;
    }
}

promoted[196] in main: &isize = {
    let mut _0: &isize;
    let mut _1: isize;

    bb0: {
        _1 = const 1_i32 as isize (IntToInt);
        _0 = &_1;
        return;
    }
}

promoted[197] in main: &[&str; 2] = {
    let mut _0: &[&str; 2];
    let mut _1: [&str; 2];

    bb0: {
        _1 = [const "", const "\n"];
        _0 = &_1;
        return;
    }
}

promoted[198] in main: &f64 = {
    let mut _0: &f64;
    let mut _1: f64;

    bb0: {
        _1 = const 1_u16 as f64 (IntToFloat);
        _0 = &_1;
        return;
    }
}

promoted[199] in main: &[&str; 2] = {
    let mut _0: &[&str; 2];
    let mut _1: [&str; 2];

    bb0: {
        _1 = [const "", const "\n"];
        _0 = &_1;
        return;
    }
}

promoted[200] in main: &f32 = {
    let mut _0: &f32;
    let mut _1: f32;

    bb0: {
        _1 = const 1_u16 as f32 (IntToFloat);
        _0 = &_1;
        return;
    }
}

promoted[201] in main: &[&str; 2] = {
    let mut _0: &[&str; 2];
    let mut _1: [&str; 2];

    bb0: {
        _1 = [const "", const "\n"];
        _0 = &_1;
        return;
    }
}

promoted[202] in main: &u64 = {
    let mut _0: &u64;
    let mut _1: u64;

    bb0: {
        _1 = const 1_u16 as u64 (IntToInt);
        _0 = &_1;
        return;
    }
}

promoted[203] in main: &[&str; 2] = {
    let mut _0: &[&str; 2];
    let mut _1: [&str; 2];

    bb0: {
        _1 = [const "", const "\n"];
        _0 = &_1;
        return;
    }
}

promoted[204] in main: &u32 = {
    let mut _0: &u32;
    let mut _1: u32;

    bb0: {
        _1 = const 1_u16 as u32 (IntToInt);
        _0 = &_1;
        return;
    }
}

promoted[205] in main: &[&str; 2] = {
    let mut _0: &[&str; 2];
    let mut _1: [&str; 2];

    bb0: {
        _1 = [const "", const "\n"];
        _0 = &_1;
        return;
    }
}

promoted[206] in main: &u16 = {
    let mut _0: &u16;
    let mut _1: u16;

    bb0: {
        _1 = const 1_u16;
        _0 = &_1;
        return;
    }
}

promoted[207] in main: &[&str; 2] = {
    let mut _0: &[&str; 2];
    let mut _1: [&str; 2];

    bb0: {
        _1 = [const "", const "\n"];
        _0 = &_1;
        return;
    }
}

promoted[208] in main: &u8 = {
    let mut _0: &u8;
    let mut _1: u8;

    bb0: {
        _1 = const 1_u16 as u8 (IntToInt);
        _0 = &_1;
        return;
    }
}

promoted[209] in main: &[&str; 2] = {
    let mut _0: &[&str; 2];
    let mut _1: [&str; 2];

    bb0: {
        _1 = [const "", const "\n"];
        _0 = &_1;
        return;
    }
}

promoted[210] in main: &i64 = {
    let mut _0: &i64;
    let mut _1: i64;

    bb0: {
        _1 = const 1_u16 as i64 (IntToInt);
        _0 = &_1;
        return;
    }
}

promoted[211] in main: &[&str; 2] = {
    let mut _0: &[&str; 2];
    let mut _1: [&str; 2];

    bb0: {
        _1 = [const "", const "\n"];
        _0 = &_1;
        return;
    }
}

promoted[212] in main: &i32 = {
    let mut _0: &i32;
    let mut _1: i32;

    bb0: {
        _1 = const 1_u16 as i32 (IntToInt);
        _0 = &_1;
        return;
    }
}

promoted[213] in main: &[&str; 2] = {
    let mut _0: &[&str; 2];
    let mut _1: [&str; 2];

    bb0: {
        _1 = [const "", const "\n"];
        _0 = &_1;
        return;
    }
}

promoted[214] in main: &i16 = {
    let mut _0: &i16;
    let mut _1: i16;

    bb0: {
        _1 = const 1_u16 as i16 (IntToInt);
        _0 = &_1;
        return;
    }
}

promoted[215] in main: &[&str; 2] = {
    let mut _0: &[&str; 2];
    let mut _1: [&str; 2];

    bb0: {
        _1 = [const "", const "\n"];
        _0 = &_1;
        return;
    }
}

promoted[216] in main: &i8 = {
    let mut _0: &i8;
    let mut _1: i8;

    bb0: {
        _1 = const 1_u16 as i8 (IntToInt);
        _0 = &_1;
        return;
    }
}

promoted[217] in main: &[&str; 2] = {
    let mut _0: &[&str; 2];
    let mut _1: [&str; 2];

    bb0: {
        _1 = [const "", const "\n"];
        _0 = &_1;
        return;
    }
}

promoted[218] in main: &*const String = {
    let mut _0: &*const std::string::String;
    let mut _1: *const std::string::String;

    bb0: {
        _1 = const 1_u16 as *const std::string::String (PointerFromExposedAddress);
        _0 = &_1;
        return;
    }
}

promoted[219] in main: &[&str; 2] = {
    let mut _0: &[&str; 2];
    let mut _1: [&str; 2];

    bb0: {
        _1 = [const "", const "\n"];
        _0 = &_1;
        return;
    }
}

promoted[220] in main: &usize = {
    let mut _0: &usize;
    let mut _1: usize;

    bb0: {
        _1 = const 1_u16 as usize (IntToInt);
        _0 = &_1;
        return;
    }
}

promoted[221] in main: &[&str; 2] = {
    let mut _0: &[&str; 2];
    let mut _1: [&str; 2];

    bb0: {
        _1 = [const "", const "\n"];
        _0 = &_1;
        return;
    }
}

promoted[222] in main: &isize = {
    let mut _0: &isize;
    let mut _1: isize;

    bb0: {
        _1 = const 1_u16 as isize (IntToInt);
        _0 = &_1;
        return;
    }
}

promoted[223] in main: &[&str; 2] = {
    let mut _0: &[&str; 2];
    let mut _1: [&str; 2];

    bb0: {
        _1 = [const "", const "\n"];
        _0 = &_1;
        return;
    }
}

promoted[224] in main: &f64 = {
    let mut _0: &f64;
    let mut _1: f64;

    bb0: {
        _1 = const 1_i16 as f64 (IntToFloat);
        _0 = &_1;
        return;
    }
}

promoted[225] in main: &[&str; 2] = {
    let mut _0: &[&str; 2];
    let mut _1: [&str; 2];

    bb0: {
        _1 = [const "", const "\n"];
        _0 = &_1;
        return;
    }
}

promoted[226] in main: &f32 = {
    let mut _0: &f32;
    let mut _1: f32;

    bb0: {
        _1 = const 1_i16 as f32 (IntToFloat);
        _0 = &_1;
        return;
    }
}

promoted[227] in main: &[&str; 2] = {
    let mut _0: &[&str; 2];
    let mut _1: [&str; 2];

    bb0: {
        _1 = [const "", const "\n"];
        _0 = &_1;
        return;
    }
}

promoted[228] in main: &u64 = {
    let mut _0: &u64;
    let mut _1: u64;

    bb0: {
        _1 = const 1_i16 as u64 (IntToInt);
        _0 = &_1;
        return;
    }
}

promoted[229] in main: &[&str; 2] = {
    let mut _0: &[&str; 2];
    let mut _1: [&str; 2];

    bb0: {
        _1 = [const "", const "\n"];
        _0 = &_1;
        return;
    }
}

promoted[230] in main: &u32 = {
    let mut _0: &u32;
    let mut _1: u32;

    bb0: {
        _1 = const 1_i16 as u32 (IntToInt);
        _0 = &_1;
        return;
    }
}

promoted[231] in main: &[&str; 2] = {
    let mut _0: &[&str; 2];
    let mut _1: [&str; 2];

    bb0: {
        _1 = [const "", const "\n"];
        _0 = &_1;
        return;
    }
}

promoted[232] in main: &u16 = {
    let mut _0: &u16;
    let mut _1: u16;

    bb0: {
        _1 = const 1_i16 as u16 (IntToInt);
        _0 = &_1;
        return;
    }
}

promoted[233] in main: &[&str; 2] = {
    let mut _0: &[&str; 2];
    let mut _1: [&str; 2];

    bb0: {
        _1 = [const "", const "\n"];
        _0 = &_1;
        return;
    }
}

promoted[234] in main: &u8 = {
    let mut _0: &u8;
    let mut _1: u8;

    bb0: {
        _1 = const 1_i16 as u8 (IntToInt);
        _0 = &_1;
        return;
    }
}

promoted[235] in main: &[&str; 2] = {
    let mut _0: &[&str; 2];
    let mut _1: [&str; 2];

    bb0: {
        _1 = [const "", const "\n"];
        _0 = &_1;
        return;
    }
}

promoted[236] in main: &i64 = {
    let mut _0: &i64;
    let mut _1: i64;

    bb0: {
        _1 = const 1_i16 as i64 (IntToInt);
        _0 = &_1;
        return;
    }
}

promoted[237] in main: &[&str; 2] = {
    let mut _0: &[&str; 2];
    let mut _1: [&str; 2];

    bb0: {
        _1 = [const "", const "\n"];
        _0 = &_1;
        return;
    }
}

promoted[238] in main: &i32 = {
    let mut _0: &i32;
    let mut _1: i32;

    bb0: {
        _1 = const 1_i16 as i32 (IntToInt);
        _0 = &_1;
        return;
    }
}

promoted[239] in main: &[&str; 2] = {
    let mut _0: &[&str; 2];
    let mut _1: [&str; 2];

    bb0: {
        _1 = [const "", const "\n"];
        _0 = &_1;
        return;
    }
}

promoted[240] in main: &i16 = {
    let mut _0: &i16;
    let mut _1: i16;

    bb0: {
        _1 = const 1_i16;
        _0 = &_1;
        return;
    }
}

promoted[241] in main: &[&str; 2] = {
    let mut _0: &[&str; 2];
    let mut _1: [&str; 2];

    bb0: {
        _1 = [const "", const "\n"];
        _0 = &_1;
        return;
    }
}

promoted[242] in main: &i8 = {
    let mut _0: &i8;
    let mut _1: i8;

    bb0: {
        _1 = const 1_i16 as i8 (IntToInt);
        _0 = &_1;
        return;
    }
}

promoted[243] in main: &[&str; 2] = {
    let mut _0: &[&str; 2];
    let mut _1: [&str; 2];

    bb0: {
        _1 = [const "", const "\n"];
        _0 = &_1;
        return;
    }
}

promoted[244] in main: &*const String = {
    let mut _0: &*const std::string::String;
    let mut _1: *const std::string::String;

    bb0: {
        _1 = const 1_i16 as *const std::string::String (PointerFromExposedAddress);
        _0 = &_1;
        return;
    }
}

promoted[245] in main: &[&str; 2] = {
    let mut _0: &[&str; 2];
    let mut _1: [&str; 2];

    bb0: {
        _1 = [const "", const "\n"];
        _0 = &_1;
        return;
    }
}

promoted[246] in main: &usize = {
    let mut _0: &usize;
    let mut _1: usize;

    bb0: {
        _1 = const 1_i16 as usize (IntToInt);
        _0 = &_1;
        return;
    }
}

promoted[247] in main: &[&str; 2] = {
    let mut _0: &[&str; 2];
    let mut _1: [&str; 2];

    bb0: {
        _1 = [const "", const "\n"];
        _0 = &_1;
        return;
    }
}

promoted[248] in main: &isize = {
    let mut _0: &isize;
    let mut _1: isize;

    bb0: {
        _1 = const 1_i16 as isize (IntToInt);
        _0 = &_1;
        return;
    }
}

promoted[249] in main: &[&str; 2] = {
    let mut _0: &[&str; 2];
    let mut _1: [&str; 2];

    bb0: {
        _1 = [const "", const "\n"];
        _0 = &_1;
        return;
    }
}

promoted[250] in main: &f64 = {
    let mut _0: &f64;
    let mut _1: f64;

    bb0: {
        _1 = const 1_u8 as f64 (IntToFloat);
        _0 = &_1;
        return;
    }
}

promoted[251] in main: &[&str; 2] = {
    let mut _0: &[&str; 2];
    let mut _1: [&str; 2];

    bb0: {
        _1 = [const "", const "\n"];
        _0 = &_1;
        return;
    }
}

promoted[252] in main: &f32 = {
    let mut _0: &f32;
    let mut _1: f32;

    bb0: {
        _1 = const 1_u8 as f32 (IntToFloat);
        _0 = &_1;
        return;
    }
}

promoted[253] in main: &[&str; 2] = {
    let mut _0: &[&str; 2];
    let mut _1: [&str; 2];

    bb0: {
        _1 = [const "", const "\n"];
        _0 = &_1;
        return;
    }
}

promoted[254] in main: &u64 = {
    let mut _0: &u64;
    let mut _1: u64;

    bb0: {
        _1 = const 1_u8 as u64 (IntToInt);
        _0 = &_1;
        return;
    }
}

promoted[255] in main: &[&str; 2] = {
    let mut _0: &[&str; 2];
    let mut _1: [&str; 2];

    bb0: {
        _1 = [const "", const "\n"];
        _0 = &_1;
        return;
    }
}

promoted[256] in main: &u32 = {
    let mut _0: &u32;
    let mut _1: u32;

    bb0: {
        _1 = const 1_u8 as u32 (IntToInt);
        _0 = &_1;
        return;
    }
}

promoted[257] in main: &[&str; 2] = {
    let mut _0: &[&str; 2];
    let mut _1: [&str; 2];

    bb0: {
        _1 = [const "", const "\n"];
        _0 = &_1;
        return;
    }
}

promoted[258] in main: &u16 = {
    let mut _0: &u16;
    let mut _1: u16;

    bb0: {
        _1 = const 1_u8 as u16 (IntToInt);
        _0 = &_1;
        return;
    }
}

promoted[259] in main: &[&str; 2] = {
    let mut _0: &[&str; 2];
    let mut _1: [&str; 2];

    bb0: {
        _1 = [const "", const "\n"];
        _0 = &_1;
        return;
    }
}

promoted[260] in main: &u8 = {
    let mut _0: &u8;
    let mut _1: u8;

    bb0: {
        _1 = const 1_u8;
        _0 = &_1;
        return;
    }
}

promoted[261] in main: &[&str; 2] = {
    let mut _0: &[&str; 2];
    let mut _1: [&str; 2];

    bb0: {
        _1 = [const "", const "\n"];
        _0 = &_1;
        return;
    }
}

promoted[262] in main: &i64 = {
    let mut _0: &i64;
    let mut _1: i64;

    bb0: {
        _1 = const 1_u8 as i64 (IntToInt);
        _0 = &_1;
        return;
    }
}

promoted[263] in main: &[&str; 2] = {
    let mut _0: &[&str; 2];
    let mut _1: [&str; 2];

    bb0: {
        _1 = [const "", const "\n"];
        _0 = &_1;
        return;
    }
}

promoted[264] in main: &i32 = {
    let mut _0: &i32;
    let mut _1: i32;

    bb0: {
        _1 = const 1_u8 as i32 (IntToInt);
        _0 = &_1;
        return;
    }
}

promoted[265] in main: &[&str; 2] = {
    let mut _0: &[&str; 2];
    let mut _1: [&str; 2];

    bb0: {
        _1 = [const "", const "\n"];
        _0 = &_1;
        return;
    }
}

promoted[266] in main: &i16 = {
    let mut _0: &i16;
    let mut _1: i16;

    bb0: {
        _1 = const 1_u8 as i16 (IntToInt);
        _0 = &_1;
        return;
    }
}

promoted[267] in main: &[&str; 2] = {
    let mut _0: &[&str; 2];
    let mut _1: [&str; 2];

    bb0: {
        _1 = [const "", const "\n"];
        _0 = &_1;
        return;
    }
}

promoted[268] in main: &i8 = {
    let mut _0: &i8;
    let mut _1: i8;

    bb0: {
        _1 = const 1_u8 as i8 (IntToInt);
        _0 = &_1;
        return;
    }
}

promoted[269] in main: &[&str; 2] = {
    let mut _0: &[&str; 2];
    let mut _1: [&str; 2];

    bb0: {
        _1 = [const "", const "\n"];
        _0 = &_1;
        return;
    }
}

promoted[270] in main: &*const String = {
    let mut _0: &*const std::string::String;
    let mut _1: *const std::string::String;

    bb0: {
        _1 = const 1_u8 as *const std::string::String (PointerFromExposedAddress);
        _0 = &_1;
        return;
    }
}

promoted[271] in main: &[&str; 2] = {
    let mut _0: &[&str; 2];
    let mut _1: [&str; 2];

    bb0: {
        _1 = [const "", const "\n"];
        _0 = &_1;
        return;
    }
}

promoted[272] in main: &usize = {
    let mut _0: &usize;
    let mut _1: usize;

    bb0: {
        _1 = const 1_u8 as usize (IntToInt);
        _0 = &_1;
        return;
    }
}

promoted[273] in main: &[&str; 2] = {
    let mut _0: &[&str; 2];
    let mut _1: [&str; 2];

    bb0: {
        _1 = [const "", const "\n"];
        _0 = &_1;
        return;
    }
}

promoted[274] in main: &isize = {
    let mut _0: &isize;
    let mut _1: isize;

    bb0: {
        _1 = const 1_u8 as isize (IntToInt);
        _0 = &_1;
        return;
    }
}

promoted[275] in main: &[&str; 2] = {
    let mut _0: &[&str; 2];
    let mut _1: [&str; 2];

    bb0: {
        _1 = [const "", const "\n"];
        _0 = &_1;
        return;
    }
}

promoted[276] in main: &f64 = {
    let mut _0: &f64;
    let mut _1: f64;

    bb0: {
        _1 = const 1_i8 as f64 (IntToFloat);
        _0 = &_1;
        return;
    }
}

promoted[277] in main: &[&str; 2] = {
    let mut _0: &[&str; 2];
    let mut _1: [&str; 2];

    bb0: {
        _1 = [const "", const "\n"];
        _0 = &_1;
        return;
    }
}

promoted[278] in main: &f32 = {
    let mut _0: &f32;
    let mut _1: f32;

    bb0: {
        _1 = const 1_i8 as f32 (IntToFloat);
        _0 = &_1;
        return;
    }
}

promoted[279] in main: &[&str; 2] = {
    let mut _0: &[&str; 2];
    let mut _1: [&str; 2];

    bb0: {
        _1 = [const "", const "\n"];
        _0 = &_1;
        return;
    }
}

promoted[280] in main: &u64 = {
    let mut _0: &u64;
    let mut _1: u64;

    bb0: {
        _1 = const 1_i8 as u64 (IntToInt);
        _0 = &_1;
        return;
    }
}

promoted[281] in main: &[&str; 2] = {
    let mut _0: &[&str; 2];
    let mut _1: [&str; 2];

    bb0: {
        _1 = [const "", const "\n"];
        _0 = &_1;
        return;
    }
}

promoted[282] in main: &u32 = {
    let mut _0: &u32;
    let mut _1: u32;

    bb0: {
        _1 = const 1_i8 as u32 (IntToInt);
        _0 = &_1;
        return;
    }
}

promoted[283] in main: &[&str; 2] = {
    let mut _0: &[&str; 2];
    let mut _1: [&str; 2];

    bb0: {
        _1 = [const "", const "\n"];
        _0 = &_1;
        return;
    }
}

promoted[284] in main: &u16 = {
    let mut _0: &u16;
    let mut _1: u16;

    bb0: {
        _1 = const 1_i8 as u16 (IntToInt);
        _0 = &_1;
        return;
    }
}

promoted[285] in main: &[&str; 2] = {
    let mut _0: &[&str; 2];
    let mut _1: [&str; 2];

    bb0: {
        _1 = [const "", const "\n"];
        _0 = &_1;
        return;
    }
}

promoted[286] in main: &u8 = {
    let mut _0: &u8;
    let mut _1: u8;

    bb0: {
        _1 = const 1_i8 as u8 (IntToInt);
        _0 = &_1;
        return;
    }
}

promoted[287] in main: &[&str; 2] = {
    let mut _0: &[&str; 2];
    let mut _1: [&str; 2];

    bb0: {
        _1 = [const "", const "\n"];
        _0 = &_1;
        return;
    }
}

promoted[288] in main: &i64 = {
    let mut _0: &i64;
    let mut _1: i64;

    bb0: {
        _1 = const 1_i8 as i64 (IntToInt);
        _0 = &_1;
        return;
    }
}

promoted[289] in main: &[&str; 2] = {
    let mut _0: &[&str; 2];
    let mut _1: [&str; 2];

    bb0: {
        _1 = [const "", const "\n"];
        _0 = &_1;
        return;
    }
}

promoted[290] in main: &i32 = {
    let mut _0: &i32;
    let mut _1: i32;

    bb0: {
        _1 = const 1_i8 as i32 (IntToInt);
        _0 = &_1;
        return;
    }
}

promoted[291] in main: &[&str; 2] = {
    let mut _0: &[&str; 2];
    let mut _1: [&str; 2];

    bb0: {
        _1 = [const "", const "\n"];
        _0 = &_1;
        return;
    }
}

promoted[292] in main: &i16 = {
    let mut _0: &i16;
    let mut _1: i16;

    bb0: {
        _1 = const 1_i8 as i16 (IntToInt);
        _0 = &_1;
        return;
    }
}

promoted[293] in main: &[&str; 2] = {
    let mut _0: &[&str; 2];
    let mut _1: [&str; 2];

    bb0: {
        _1 = [const "", const "\n"];
        _0 = &_1;
        return;
    }
}

promoted[294] in main: &i8 = {
    let mut _0: &i8;
    let mut _1: i8;

    bb0: {
        _1 = const 1_i8;
        _0 = &_1;
        return;
    }
}

promoted[295] in main: &[&str; 2] = {
    let mut _0: &[&str; 2];
    let mut _1: [&str; 2];

    bb0: {
        _1 = [const "", const "\n"];
        _0 = &_1;
        return;
    }
}

promoted[296] in main: &*const String = {
    let mut _0: &*const std::string::String;
    let mut _1: *const std::string::String;

    bb0: {
        _1 = const 1_i8 as *const std::string::String (PointerFromExposedAddress);
        _0 = &_1;
        return;
    }
}

promoted[297] in main: &[&str; 2] = {
    let mut _0: &[&str; 2];
    let mut _1: [&str; 2];

    bb0: {
        _1 = [const "", const "\n"];
        _0 = &_1;
        return;
    }
}

promoted[298] in main: &usize = {
    let mut _0: &usize;
    let mut _1: usize;

    bb0: {
        _1 = const 1_i8 as usize (IntToInt);
        _0 = &_1;
        return;
    }
}

promoted[299] in main: &[&str; 2] = {
    let mut _0: &[&str; 2];
    let mut _1: [&str; 2];

    bb0: {
        _1 = [const "", const "\n"];
        _0 = &_1;
        return;
    }
}

promoted[300] in main: &isize = {
    let mut _0: &isize;
    let mut _1: isize;

    bb0: {
        _1 = const 1_i8 as isize (IntToInt);
        _0 = &_1;
        return;
    }
}

promoted[301] in main: &[&str; 2] = {
    let mut _0: &[&str; 2];
    let mut _1: [&str; 2];

    bb0: {
        _1 = [const "", const "\n"];
        _0 = &_1;
        return;
    }
}

promoted[302] in main: &f64 = {
    let mut _0: &f64;
    let mut _1: f64;

    bb0: {
        _1 = const 1_usize as f64 (IntToFloat);
        _0 = &_1;
        return;
    }
}

promoted[303] in main: &[&str; 2] = {
    let mut _0: &[&str; 2];
    let mut _1: [&str; 2];

    bb0: {
        _1 = [const "", const "\n"];
        _0 = &_1;
        return;
    }
}

promoted[304] in main: &f32 = {
    let mut _0: &f32;
    let mut _1: f32;

    bb0: {
        _1 = const 1_usize as f32 (IntToFloat);
        _0 = &_1;
        return;
    }
}

promoted[305] in main: &[&str; 2] = {
    let mut _0: &[&str; 2];
    let mut _1: [&str; 2];

    bb0: {
        _1 = [const "", const "\n"];
        _0 = &_1;
        return;
    }
}

promoted[306] in main: &u64 = {
    let mut _0: &u64;
    let mut _1: u64;

    bb0: {
        _1 = const 1_usize as u64 (IntToInt);
        _0 = &_1;
        return;
    }
}

promoted[307] in main: &[&str; 2] = {
    let mut _0: &[&str; 2];
    let mut _1: [&str; 2];

    bb0: {
        _1 = [const "", const "\n"];
        _0 = &_1;
        return;
    }
}

promoted[308] in main: &u32 = {
    let mut _0: &u32;
    let mut _1: u32;

    bb0: {
        _1 = const 1_usize as u32 (IntToInt);
        _0 = &_1;
        return;
    }
}

promoted[309] in main: &[&str; 2] = {
    let mut _0: &[&str; 2];
    let mut _1: [&str; 2];

    bb0: {
        _1 = [const "", const "\n"];
        _0 = &_1;
        return;
    }
}

promoted[310] in main: &u16 = {
    let mut _0: &u16;
    let mut _1: u16;

    bb0: {
        _1 = const 1_usize as u16 (IntToInt);
        _0 = &_1;
        return;
    }
}

promoted[311] in main: &[&str; 2] = {
    let mut _0: &[&str; 2];
    let mut _1: [&str; 2];

    bb0: {
        _1 = [const "", const "\n"];
        _0 = &_1;
        return;
    }
}

promoted[312] in main: &u8 = {
    let mut _0: &u8;
    let mut _1: u8;

    bb0: {
        _1 = const 1_usize as u8 (IntToInt);
        _0 = &_1;
        return;
    }
}

promoted[313] in main: &[&str; 2] = {
    let mut _0: &[&str; 2];
    let mut _1: [&str; 2];

    bb0: {
        _1 = [const "", const "\n"];
        _0 = &_1;
        return;
    }
}

promoted[314] in main: &i64 = {
    let mut _0: &i64;
    let mut _1: i64;

    bb0: {
        _1 = const 1_usize as i64 (IntToInt);
        _0 = &_1;
        return;
    }
}

promoted[315] in main: &[&str; 2] = {
    let mut _0: &[&str; 2];
    let mut _1: [&str; 2];

    bb0: {
        _1 = [const "", const "\n"];
        _0 = &_1;
        return;
    }
}

promoted[316] in main: &i32 = {
    let mut _0: &i32;
    let mut _1: i32;

    bb0: {
        _1 = const 1_usize as i32 (IntToInt);
        _0 = &_1;
        return;
    }
}

promoted[317] in main: &[&str; 2] = {
    let mut _0: &[&str; 2];
    let mut _1: [&str; 2];

    bb0: {
        _1 = [const "", const "\n"];
        _0 = &_1;
        return;
    }
}

promoted[318] in main: &i16 = {
    let mut _0: &i16;
    let mut _1: i16;

    bb0: {
        _1 = const 1_usize as i16 (IntToInt);
        _0 = &_1;
        return;
    }
}

promoted[319] in main: &[&str; 2] = {
    let mut _0: &[&str; 2];
    let mut _1: [&str; 2];

    bb0: {
        _1 = [const "", const "\n"];
        _0 = &_1;
        return;
    }
}

promoted[320] in main: &i8 = {
    let mut _0: &i8;
    let mut _1: i8;

    bb0: {
        _1 = const 1_usize as i8 (IntToInt);
        _0 = &_1;
        return;
    }
}

promoted[321] in main: &[&str; 2] = {
    let mut _0: &[&str; 2];
    let mut _1: [&str; 2];

    bb0: {
        _1 = [const "", const "\n"];
        _0 = &_1;
        return;
    }
}

promoted[322] in main: &*const String = {
    let mut _0: &*const std::string::String;
    let mut _1: *const std::string::String;

    bb0: {
        _1 = const 1_usize as *const std::string::String (PointerFromExposedAddress);
        _0 = &_1;
        return;
    }
}

promoted[323] in main: &[&str; 2] = {
    let mut _0: &[&str; 2];
    let mut _1: [&str; 2];

    bb0: {
        _1 = [const "", const "\n"];
        _0 = &_1;
        return;
    }
}

promoted[324] in main: &usize = {
    let mut _0: &usize;
    let mut _1: usize;

    bb0: {
        _1 = const 1_usize;
        _0 = &_1;
        return;
    }
}

promoted[325] in main: &[&str; 2] = {
    let mut _0: &[&str; 2];
    let mut _1: [&str; 2];

    bb0: {
        _1 = [const "", const "\n"];
        _0 = &_1;
        return;
    }
}

promoted[326] in main: &isize = {
    let mut _0: &isize;
    let mut _1: isize;

    bb0: {
        _1 = const 1_usize as isize (IntToInt);
        _0 = &_1;
        return;
    }
}

promoted[327] in main: &[&str; 2] = {
    let mut _0: &[&str; 2];
    let mut _1: [&str; 2];

    bb0: {
        _1 = [const "", const "\n"];
        _0 = &_1;
        return;
    }
}

promoted[328] in main: &f64 = {
    let mut _0: &f64;
    let mut _1: f64;

    bb0: {
        _1 = const 1_i32 as f64 (IntToFloat);
        _0 = &_1;
        return;
    }
}

promoted[329] in main: &[&str; 2] = {
    let mut _0: &[&str; 2];
    let mut _1: [&str; 2];

    bb0: {
        _1 = [const "", const "\n"];
        _0 = &_1;
        return;
    }
}

promoted[330] in main: &f32 = {
    let mut _0: &f32;
    let mut _1: f32;

    bb0: {
        _1 = const 1_i32 as f32 (IntToFloat);
        _0 = &_1;
        return;
    }
}

promoted[331] in main: &[&str; 2] = {
    let mut _0: &[&str; 2];
    let mut _1: [&str; 2];

    bb0: {
        _1 = [const "", const "\n"];
        _0 = &_1;
        return;
    }
}

promoted[332] in main: &u64 = {
    let mut _0: &u64;
    let mut _1: u64;

    bb0: {
        _1 = const 1_u64;
        _0 = &_1;
        return;
    }
}

promoted[333] in main: &[&str; 2] = {
    let mut _0: &[&str; 2];
    let mut _1: [&str; 2];

    bb0: {
        _1 = [const "", const "\n"];
        _0 = &_1;
        return;
    }
}

promoted[334] in main: &u32 = {
    let mut _0: &u32;
    let mut _1: u32;

    bb0: {
        _1 = const 1_u32;
        _0 = &_1;
        return;
    }
}

promoted[335] in main: &[&str; 2] = {
    let mut _0: &[&str; 2];
    let mut _1: [&str; 2];

    bb0: {
        _1 = [const "", const "\n"];
        _0 = &_1;
        return;
    }
}

promoted[336] in main: &u16 = {
    let mut _0: &u16;
    let mut _1: u16;

    bb0: {
        _1 = const 1_u16;
        _0 = &_1;
        return;
    }
}

promoted[337] in main: &[&str; 2] = {
    let mut _0: &[&str; 2];
    let mut _1: [&str; 2];

    bb0: {
        _1 = [const "", const "\n"];
        _0 = &_1;
        return;
    }
}

promoted[338] in main: &u8 = {
    let mut _0: &u8;
    let mut _1: u8;

    bb0: {
        _1 = const 1_u8;
        _0 = &_1;
        return;
    }
}

promoted[339] in main: &[&str; 2] = {
    let mut _0: &[&str; 2];
    let mut _1: [&str; 2];

    bb0: {
        _1 = [const "", const "\n"];
        _0 = &_1;
        return;
    }
}

promoted[340] in main: &i64 = {
    let mut _0: &i64;
    let mut _1: i64;

    bb0: {
        _1 = const 1_i64;
        _0 = &_1;
        return;
    }
}

promoted[341] in main: &[&str; 2] = {
    let mut _0: &[&str; 2];
    let mut _1: [&str; 2];

    bb0: {
        _1 = [const "", const "\n"];
        _0 = &_1;
        return;
    }
}

promoted[342] in main: &i32 = {
    let mut _0: &i32;
    let mut _1: i32;

    bb0: {
        _1 = const 1_i32;
        _0 = &_1;
        return;
    }
}

promoted[343] in main: &[&str; 2] = {
    let mut _0: &[&str; 2];
    let mut _1: [&str; 2];

    bb0: {
        _1 = [const "", const "\n"];
        _0 = &_1;
        return;
    }
}

promoted[344] in main: &i16 = {
    let mut _0: &i16;
    let mut _1: i16;

    bb0: {
        _1 = const 1_i16;
        _0 = &_1;
        return;
    }
}

promoted[345] in main: &[&str; 2] = {
    let mut _0: &[&str; 2];
    let mut _1: [&str; 2];

    bb0: {
        _1 = [const "", const "\n"];
        _0 = &_1;
        return;
    }
}

promoted[346] in main: &i8 = {
    let mut _0: &i8;
    let mut _1: i8;

    bb0: {
        _1 = const 1_i8;
        _0 = &_1;
        return;
    }
}

promoted[347] in main: &[&str; 2] = {
    let mut _0: &[&str; 2];
    let mut _1: [&str; 2];

    bb0: {
        _1 = [const "", const "\n"];
        _0 = &_1;
        return;
    }
}

promoted[348] in main: &*const String = {
    let mut _0: &*const std::string::String;
    let mut _1: *const std::string::String;

    bb0: {
        _1 = const 1_usize as *const std::string::String (PointerFromExposedAddress);
        _0 = &_1;
        return;
    }
}

promoted[349] in main: &[&str; 2] = {
    let mut _0: &[&str; 2];
    let mut _1: [&str; 2];

    bb0: {
        _1 = [const "", const "\n"];
        _0 = &_1;
        return;
    }
}

promoted[350] in main: &usize = {
    let mut _0: &usize;
    let mut _1: usize;

    bb0: {
        _1 = const 1_usize;
        _0 = &_1;
        return;
    }
}

promoted[351] in main: &[&str; 2] = {
    let mut _0: &[&str; 2];
    let mut _1: [&str; 2];

    bb0: {
        _1 = [const "", const "\n"];
        _0 = &_1;
        return;
    }
}

promoted[352] in main: &isize = {
    let mut _0: &isize;
    let mut _1: isize;

    bb0: {
        _1 = const 1_isize;
        _0 = &_1;
        return;
    }
}

promoted[353] in main: &[&str; 2] = {
    let mut _0: &[&str; 2];
    let mut _1: [&str; 2];

    bb0: {
        _1 = [const "", const "\n"];
        _0 = &_1;
        return;
    }
}

promoted[354] in main: &[&str; 2] = {
    let mut _0: &[&str; 2];
    let mut _1: [&str; 2];

    bb0: {
        _1 = [const "", const "\n"];
        _0 = &_1;
        return;
    }
}

promoted[355] in main: &[&str; 2] = {
    let mut _0: &[&str; 2];
    let mut _1: [&str; 2];

    bb0: {
        _1 = [const "", const "\n"];
        _0 = &_1;
        return;
    }
}

promoted[356] in main: &[&str; 2] = {
    let mut _0: &[&str; 2];
    let mut _1: [&str; 2];

    bb0: {
        _1 = [const "", const "\n"];
        _0 = &_1;
        return;
    }
}

promoted[357] in main: &[&str; 2] = {
    let mut _0: &[&str; 2];
    let mut _1: [&str; 2];

    bb0: {
        _1 = [const "", const "\n"];
        _0 = &_1;
        return;
    }
}

promoted[358] in main: &[&str; 2] = {
    let mut _0: &[&str; 2];
    let mut _1: [&str; 2];

    bb0: {
        _1 = [const "", const "\n"];
        _0 = &_1;
        return;
    }
}

promoted[359] in main: &[&str; 2] = {
    let mut _0: &[&str; 2];
    let mut _1: [&str; 2];

    bb0: {
        _1 = [const "", const "\n"];
        _0 = &_1;
        return;
    }
}

promoted[360] in main: &[&str; 2] = {
    let mut _0: &[&str; 2];
    let mut _1: [&str; 2];

    bb0: {
        _1 = [const "", const "\n"];
        _0 = &_1;
        return;
    }
}

promoted[361] in main: &[&str; 2] = {
    let mut _0: &[&str; 2];
    let mut _1: [&str; 2];

    bb0: {
        _1 = [const "", const "\n"];
        _0 = &_1;
        return;
    }
}

promoted[362] in main: &[&str; 2] = {
    let mut _0: &[&str; 2];
    let mut _1: [&str; 2];

    bb0: {
        _1 = [const "", const "\n"];
        _0 = &_1;
        return;
    }
}

promoted[363] in main: &[&str; 2] = {
    let mut _0: &[&str; 2];
    let mut _1: [&str; 2];

    bb0: {
        _1 = [const "", const "\n"];
        _0 = &_1;
        return;
    }
}
