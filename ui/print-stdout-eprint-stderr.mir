// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
fn child() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/print-stdout-eprint-stderr.rs:7:12: 7:12
    let _1: ();                          // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:81:9: 81:59
    let mut _2: std::fmt::Arguments<'_>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:81:28: 81:58
    let mut _3: &[&str];                 // in scope 0 at ui/print-stdout-eprint-stderr.rs:8:12: 8:24
    let mut _4: &[&str; 1];              // in scope 0 at ui/print-stdout-eprint-stderr.rs:8:12: 8:24
    let _5: &[&str; 1];                  // in scope 0 at ui/print-stdout-eprint-stderr.rs:8:12: 8:24
    let mut _6: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:81:28: 81:58
    let mut _7: &[core::fmt::ArgumentV1<'_>; 0]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:81:28: 81:58
    let _8: &[core::fmt::ArgumentV1<'_>; 0]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:81:28: 81:58
    let _9: ();                          // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:81:9: 81:59
    let mut _10: std::fmt::Arguments<'_>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:81:28: 81:58
    let mut _11: &[&str];                // in scope 0 at ui/print-stdout-eprint-stderr.rs:9:12: 9:25
    let mut _12: &[&str; 2];             // in scope 0 at ui/print-stdout-eprint-stderr.rs:9:12: 9:25
    let _13: &[&str; 2];                 // in scope 0 at ui/print-stdout-eprint-stderr.rs:9:12: 9:25
    let mut _14: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:81:28: 81:58
    let mut _15: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:81:28: 81:58
    let _16: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:81:28: 81:58
    let _17: [core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:81:28: 81:58
    let mut _18: core::fmt::ArgumentV1<'_>; // in scope 0 at ui/print-stdout-eprint-stderr.rs:9:27: 9:28
    let mut _19: &i32;                   // in scope 0 at ui/print-stdout-eprint-stderr.rs:9:27: 9:28
    let _20: &i32;                       // in scope 0 at ui/print-stdout-eprint-stderr.rs:9:27: 9:28
    let _21: ();                         // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:62
    let mut _22: std::fmt::Arguments<'_>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _23: &[&str];                // in scope 0 at ui/print-stdout-eprint-stderr.rs:10:14: 10:27
    let mut _24: &[&str; 2];             // in scope 0 at ui/print-stdout-eprint-stderr.rs:10:14: 10:27
    let _25: &[&str; 2];                 // in scope 0 at ui/print-stdout-eprint-stderr.rs:10:14: 10:27
    let mut _26: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _27: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let _28: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let _29: [core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _30: core::fmt::ArgumentV1<'_>; // in scope 0 at ui/print-stdout-eprint-stderr.rs:10:29: 10:30
    let mut _31: &i32;                   // in scope 0 at ui/print-stdout-eprint-stderr.rs:10:29: 10:30
    let _32: &i32;                       // in scope 0 at ui/print-stdout-eprint-stderr.rs:10:29: 10:30
    let _33: ();                         // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:81:9: 81:59
    let mut _34: std::fmt::Arguments<'_>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:81:28: 81:58
    let mut _35: &[&str];                // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:134:24: 134:28
    let mut _36: &[&str; 1];             // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:134:24: 134:28
    let _37: &[&str; 1];                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:134:24: 134:28
    let mut _38: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:81:28: 81:58
    let mut _39: &[core::fmt::ArgumentV1<'_>; 0]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:81:28: 81:58
    let _40: &[core::fmt::ArgumentV1<'_>; 0]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:81:28: 81:58
    let _41: ();                         // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:171:9: 171:60
    let mut _42: std::fmt::Arguments<'_>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:171:29: 171:59
    let mut _43: &[&str];                // in scope 0 at ui/print-stdout-eprint-stderr.rs:12:13: 12:25
    let mut _44: &[&str; 1];             // in scope 0 at ui/print-stdout-eprint-stderr.rs:12:13: 12:25
    let _45: &[&str; 1];                 // in scope 0 at ui/print-stdout-eprint-stderr.rs:12:13: 12:25
    let mut _46: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:171:29: 171:59
    let mut _47: &[core::fmt::ArgumentV1<'_>; 0]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:171:29: 171:59
    let _48: &[core::fmt::ArgumentV1<'_>; 0]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:171:29: 171:59
    let _49: ();                         // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:171:9: 171:60
    let mut _50: std::fmt::Arguments<'_>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:171:29: 171:59
    let mut _51: &[&str];                // in scope 0 at ui/print-stdout-eprint-stderr.rs:13:13: 13:26
    let mut _52: &[&str; 2];             // in scope 0 at ui/print-stdout-eprint-stderr.rs:13:13: 13:26
    let _53: &[&str; 2];                 // in scope 0 at ui/print-stdout-eprint-stderr.rs:13:13: 13:26
    let mut _54: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:171:29: 171:59
    let mut _55: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:171:29: 171:59
    let _56: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:171:29: 171:59
    let _57: [core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:171:29: 171:59
    let mut _58: core::fmt::ArgumentV1<'_>; // in scope 0 at ui/print-stdout-eprint-stderr.rs:13:28: 13:29
    let mut _59: &i32;                   // in scope 0 at ui/print-stdout-eprint-stderr.rs:13:28: 13:29
    let _60: &i32;                       // in scope 0 at ui/print-stdout-eprint-stderr.rs:13:28: 13:29
    let _61: ();                         // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:209:9: 209:63
    let mut _62: std::fmt::Arguments<'_>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:209:29: 209:62
    let mut _63: &[&str];                // in scope 0 at ui/print-stdout-eprint-stderr.rs:14:15: 14:28
    let mut _64: &[&str; 2];             // in scope 0 at ui/print-stdout-eprint-stderr.rs:14:15: 14:28
    let _65: &[&str; 2];                 // in scope 0 at ui/print-stdout-eprint-stderr.rs:14:15: 14:28
    let mut _66: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:209:29: 209:62
    let mut _67: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:209:29: 209:62
    let _68: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:209:29: 209:62
    let _69: [core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:209:29: 209:62
    let mut _70: core::fmt::ArgumentV1<'_>; // in scope 0 at ui/print-stdout-eprint-stderr.rs:14:30: 14:31
    let mut _71: &i32;                   // in scope 0 at ui/print-stdout-eprint-stderr.rs:14:30: 14:31
    let _72: &i32;                       // in scope 0 at ui/print-stdout-eprint-stderr.rs:14:30: 14:31
    let _73: ();                         // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:171:9: 171:60
    let mut _74: std::fmt::Arguments<'_>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:171:29: 171:59
    let mut _75: &[&str];                // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:206:25: 206:29
    let mut _76: &[&str; 1];             // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:206:25: 206:29
    let _77: &[&str; 1];                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:206:25: 206:29
    let mut _78: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:171:29: 171:59
    let mut _79: &[core::fmt::ArgumentV1<'_>; 0]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:171:29: 171:59
    let _80: &[core::fmt::ArgumentV1<'_>; 0]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:171:29: 171:59
    let mut _81: &[core::fmt::ArgumentV1<'_>; 0]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:171:29: 171:59
    let mut _82: &[&str; 1];             // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:206:25: 206:29
    let mut _83: &i32;                   // in scope 0 at ui/print-stdout-eprint-stderr.rs:14:30: 14:31
    let mut _84: &[&str; 2];             // in scope 0 at ui/print-stdout-eprint-stderr.rs:14:15: 14:28
    let mut _85: &i32;                   // in scope 0 at ui/print-stdout-eprint-stderr.rs:13:28: 13:29
    let mut _86: &[&str; 2];             // in scope 0 at ui/print-stdout-eprint-stderr.rs:13:13: 13:26
    let mut _87: &[core::fmt::ArgumentV1<'_>; 0]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:171:29: 171:59
    let mut _88: &[&str; 1];             // in scope 0 at ui/print-stdout-eprint-stderr.rs:12:13: 12:25
    let mut _89: &[core::fmt::ArgumentV1<'_>; 0]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:81:28: 81:58
    let mut _90: &[&str; 1];             // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:134:24: 134:28
    let mut _91: &i32;                   // in scope 0 at ui/print-stdout-eprint-stderr.rs:10:29: 10:30
    let mut _92: &[&str; 2];             // in scope 0 at ui/print-stdout-eprint-stderr.rs:10:14: 10:27
    let mut _93: &i32;                   // in scope 0 at ui/print-stdout-eprint-stderr.rs:9:27: 9:28
    let mut _94: &[&str; 2];             // in scope 0 at ui/print-stdout-eprint-stderr.rs:9:12: 9:25
    let mut _95: &[core::fmt::ArgumentV1<'_>; 0]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:81:28: 81:58
    let mut _96: &[&str; 1];             // in scope 0 at ui/print-stdout-eprint-stderr.rs:8:12: 8:24

    bb0: {
        _96 = const _;                   // scope 0 at ui/print-stdout-eprint-stderr.rs:8:12: 8:24
                                         // mir::Constant
                                         // + span: ui/print-stdout-eprint-stderr.rs:8:12: 8:24
                                         // + literal: Const { ty: &[&str; 1], val: Unevaluated(child, [], Some(promoted[15])) }
        _5 = _96;                        // scope 0 at ui/print-stdout-eprint-stderr.rs:8:12: 8:24
        _4 = _5;                         // scope 0 at ui/print-stdout-eprint-stderr.rs:8:12: 8:24
        _3 = move _4 as &[&str] (Pointer(Unsize)); // scope 0 at ui/print-stdout-eprint-stderr.rs:8:12: 8:24
        _95 = const _;                   // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:81:28: 81:58
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:81:28: 81:58
                                         // + literal: Const { ty: &[core::fmt::ArgumentV1<'_>; 0], val: Unevaluated(child, [], Some(promoted[14])) }
        _8 = _95;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:81:28: 81:58
        _7 = _8;                         // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:81:28: 81:58
        _6 = move _7 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:81:28: 81:58
        _2 = Arguments::<'_>::new_v1(move _3, move _6) -> bb1; // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:81:28: 81:58
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:81:28: 81:58
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb1: {
        _1 = _print(move _2) -> bb2;     // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:81:9: 81:59
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:81:9: 81:27
                                         // + literal: Const { ty: for<'a> fn(Arguments<'a>) {_print}, val: Value(<ZST>) }
    }

    bb2: {
        _94 = const _;                   // scope 0 at ui/print-stdout-eprint-stderr.rs:9:12: 9:25
                                         // mir::Constant
                                         // + span: ui/print-stdout-eprint-stderr.rs:9:12: 9:25
                                         // + literal: Const { ty: &[&str; 2], val: Unevaluated(child, [], Some(promoted[13])) }
        _13 = _94;                       // scope 0 at ui/print-stdout-eprint-stderr.rs:9:12: 9:25
        _12 = _13;                       // scope 0 at ui/print-stdout-eprint-stderr.rs:9:12: 9:25
        _11 = move _12 as &[&str] (Pointer(Unsize)); // scope 0 at ui/print-stdout-eprint-stderr.rs:9:12: 9:25
        _93 = const _;                   // scope 0 at ui/print-stdout-eprint-stderr.rs:9:27: 9:28
                                         // mir::Constant
                                         // + span: ui/print-stdout-eprint-stderr.rs:9:27: 9:28
                                         // + literal: Const { ty: &i32, val: Unevaluated(child, [], Some(promoted[12])) }
        _20 = _93;                       // scope 0 at ui/print-stdout-eprint-stderr.rs:9:27: 9:28
        _19 = _20;                       // scope 0 at ui/print-stdout-eprint-stderr.rs:9:27: 9:28
        _18 = core::fmt::ArgumentV1::<'_>::new_display::<i32>(move _19) -> bb3; // scope 0 at ui/print-stdout-eprint-stderr.rs:9:27: 9:28
                                         // mir::Constant
                                         // + span: ui/print-stdout-eprint-stderr.rs:9:27: 9:28
                                         // + user_ty: UserType(2)
                                         // + literal: Const { ty: for<'b> fn(&'b i32) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_display::<i32>}, val: Value(<ZST>) }
    }

    bb3: {
        _17 = [move _18];                // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:81:28: 81:58
        _16 = &_17;                      // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:81:28: 81:58
        _15 = _16;                       // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:81:28: 81:58
        _14 = move _15 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:81:28: 81:58
        _10 = Arguments::<'_>::new_v1(move _11, move _14) -> bb4; // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:81:28: 81:58
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:81:28: 81:58
                                         // + user_ty: UserType(1)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb4: {
        _9 = _print(move _10) -> bb5;    // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:81:9: 81:59
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:81:9: 81:27
                                         // + literal: Const { ty: for<'a> fn(Arguments<'a>) {_print}, val: Value(<ZST>) }
    }

    bb5: {
        _92 = const _;                   // scope 0 at ui/print-stdout-eprint-stderr.rs:10:14: 10:27
                                         // mir::Constant
                                         // + span: ui/print-stdout-eprint-stderr.rs:10:14: 10:27
                                         // + literal: Const { ty: &[&str; 2], val: Unevaluated(child, [], Some(promoted[11])) }
        _25 = _92;                       // scope 0 at ui/print-stdout-eprint-stderr.rs:10:14: 10:27
        _24 = _25;                       // scope 0 at ui/print-stdout-eprint-stderr.rs:10:14: 10:27
        _23 = move _24 as &[&str] (Pointer(Unsize)); // scope 0 at ui/print-stdout-eprint-stderr.rs:10:14: 10:27
        _91 = const _;                   // scope 0 at ui/print-stdout-eprint-stderr.rs:10:29: 10:30
                                         // mir::Constant
                                         // + span: ui/print-stdout-eprint-stderr.rs:10:29: 10:30
                                         // + literal: Const { ty: &i32, val: Unevaluated(child, [], Some(promoted[10])) }
        _32 = _91;                       // scope 0 at ui/print-stdout-eprint-stderr.rs:10:29: 10:30
        _31 = _32;                       // scope 0 at ui/print-stdout-eprint-stderr.rs:10:29: 10:30
        _30 = core::fmt::ArgumentV1::<'_>::new_display::<i32>(move _31) -> bb6; // scope 0 at ui/print-stdout-eprint-stderr.rs:10:29: 10:30
                                         // mir::Constant
                                         // + span: ui/print-stdout-eprint-stderr.rs:10:29: 10:30
                                         // + user_ty: UserType(4)
                                         // + literal: Const { ty: for<'b> fn(&'b i32) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_display::<i32>}, val: Value(<ZST>) }
    }

    bb6: {
        _29 = [move _30];                // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _28 = &_29;                      // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _27 = _28;                       // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _26 = move _27 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _22 = Arguments::<'_>::new_v1(move _23, move _26) -> bb7; // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // + user_ty: UserType(3)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb7: {
        _21 = _print(move _22) -> bb8;   // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:62
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:27
                                         // + literal: Const { ty: for<'a> fn(Arguments<'a>) {_print}, val: Value(<ZST>) }
    }

    bb8: {
        _90 = const _;                   // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:134:24: 134:28
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:134:24: 134:28
                                         // + literal: Const { ty: &[&str; 1], val: Unevaluated(child, [], Some(promoted[9])) }
        _37 = _90;                       // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:134:24: 134:28
        _36 = _37;                       // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:134:24: 134:28
        _35 = move _36 as &[&str] (Pointer(Unsize)); // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:134:24: 134:28
        _89 = const _;                   // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:81:28: 81:58
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:81:28: 81:58
                                         // + literal: Const { ty: &[core::fmt::ArgumentV1<'_>; 0], val: Unevaluated(child, [], Some(promoted[8])) }
        _40 = _89;                       // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:81:28: 81:58
        _39 = _40;                       // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:81:28: 81:58
        _38 = move _39 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:81:28: 81:58
        _34 = Arguments::<'_>::new_v1(move _35, move _38) -> bb9; // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:81:28: 81:58
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:81:28: 81:58
                                         // + user_ty: UserType(5)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb9: {
        _33 = _print(move _34) -> bb10;  // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:81:9: 81:59
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:81:9: 81:27
                                         // + literal: Const { ty: for<'a> fn(Arguments<'a>) {_print}, val: Value(<ZST>) }
    }

    bb10: {
        _88 = const _;                   // scope 0 at ui/print-stdout-eprint-stderr.rs:12:13: 12:25
                                         // mir::Constant
                                         // + span: ui/print-stdout-eprint-stderr.rs:12:13: 12:25
                                         // + literal: Const { ty: &[&str; 1], val: Unevaluated(child, [], Some(promoted[7])) }
        _45 = _88;                       // scope 0 at ui/print-stdout-eprint-stderr.rs:12:13: 12:25
        _44 = _45;                       // scope 0 at ui/print-stdout-eprint-stderr.rs:12:13: 12:25
        _43 = move _44 as &[&str] (Pointer(Unsize)); // scope 0 at ui/print-stdout-eprint-stderr.rs:12:13: 12:25
        _87 = const _;                   // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:171:29: 171:59
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:171:29: 171:59
                                         // + literal: Const { ty: &[core::fmt::ArgumentV1<'_>; 0], val: Unevaluated(child, [], Some(promoted[6])) }
        _48 = _87;                       // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:171:29: 171:59
        _47 = _48;                       // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:171:29: 171:59
        _46 = move _47 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:171:29: 171:59
        _42 = Arguments::<'_>::new_v1(move _43, move _46) -> bb11; // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:171:29: 171:59
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:171:29: 171:59
                                         // + user_ty: UserType(6)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb11: {
        _41 = _eprint(move _42) -> bb12; // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:171:9: 171:60
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:171:9: 171:28
                                         // + literal: Const { ty: for<'a> fn(Arguments<'a>) {_eprint}, val: Value(<ZST>) }
    }

    bb12: {
        _86 = const _;                   // scope 0 at ui/print-stdout-eprint-stderr.rs:13:13: 13:26
                                         // mir::Constant
                                         // + span: ui/print-stdout-eprint-stderr.rs:13:13: 13:26
                                         // + literal: Const { ty: &[&str; 2], val: Unevaluated(child, [], Some(promoted[5])) }
        _53 = _86;                       // scope 0 at ui/print-stdout-eprint-stderr.rs:13:13: 13:26
        _52 = _53;                       // scope 0 at ui/print-stdout-eprint-stderr.rs:13:13: 13:26
        _51 = move _52 as &[&str] (Pointer(Unsize)); // scope 0 at ui/print-stdout-eprint-stderr.rs:13:13: 13:26
        _85 = const _;                   // scope 0 at ui/print-stdout-eprint-stderr.rs:13:28: 13:29
                                         // mir::Constant
                                         // + span: ui/print-stdout-eprint-stderr.rs:13:28: 13:29
                                         // + literal: Const { ty: &i32, val: Unevaluated(child, [], Some(promoted[4])) }
        _60 = _85;                       // scope 0 at ui/print-stdout-eprint-stderr.rs:13:28: 13:29
        _59 = _60;                       // scope 0 at ui/print-stdout-eprint-stderr.rs:13:28: 13:29
        _58 = core::fmt::ArgumentV1::<'_>::new_display::<i32>(move _59) -> bb13; // scope 0 at ui/print-stdout-eprint-stderr.rs:13:28: 13:29
                                         // mir::Constant
                                         // + span: ui/print-stdout-eprint-stderr.rs:13:28: 13:29
                                         // + user_ty: UserType(8)
                                         // + literal: Const { ty: for<'b> fn(&'b i32) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_display::<i32>}, val: Value(<ZST>) }
    }

    bb13: {
        _57 = [move _58];                // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:171:29: 171:59
        _56 = &_57;                      // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:171:29: 171:59
        _55 = _56;                       // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:171:29: 171:59
        _54 = move _55 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:171:29: 171:59
        _50 = Arguments::<'_>::new_v1(move _51, move _54) -> bb14; // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:171:29: 171:59
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:171:29: 171:59
                                         // + user_ty: UserType(7)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb14: {
        _49 = _eprint(move _50) -> bb15; // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:171:9: 171:60
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:171:9: 171:28
                                         // + literal: Const { ty: for<'a> fn(Arguments<'a>) {_eprint}, val: Value(<ZST>) }
    }

    bb15: {
        _84 = const _;                   // scope 0 at ui/print-stdout-eprint-stderr.rs:14:15: 14:28
                                         // mir::Constant
                                         // + span: ui/print-stdout-eprint-stderr.rs:14:15: 14:28
                                         // + literal: Const { ty: &[&str; 2], val: Unevaluated(child, [], Some(promoted[3])) }
        _65 = _84;                       // scope 0 at ui/print-stdout-eprint-stderr.rs:14:15: 14:28
        _64 = _65;                       // scope 0 at ui/print-stdout-eprint-stderr.rs:14:15: 14:28
        _63 = move _64 as &[&str] (Pointer(Unsize)); // scope 0 at ui/print-stdout-eprint-stderr.rs:14:15: 14:28
        _83 = const _;                   // scope 0 at ui/print-stdout-eprint-stderr.rs:14:30: 14:31
                                         // mir::Constant
                                         // + span: ui/print-stdout-eprint-stderr.rs:14:30: 14:31
                                         // + literal: Const { ty: &i32, val: Unevaluated(child, [], Some(promoted[2])) }
        _72 = _83;                       // scope 0 at ui/print-stdout-eprint-stderr.rs:14:30: 14:31
        _71 = _72;                       // scope 0 at ui/print-stdout-eprint-stderr.rs:14:30: 14:31
        _70 = core::fmt::ArgumentV1::<'_>::new_display::<i32>(move _71) -> bb16; // scope 0 at ui/print-stdout-eprint-stderr.rs:14:30: 14:31
                                         // mir::Constant
                                         // + span: ui/print-stdout-eprint-stderr.rs:14:30: 14:31
                                         // + user_ty: UserType(10)
                                         // + literal: Const { ty: for<'b> fn(&'b i32) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_display::<i32>}, val: Value(<ZST>) }
    }

    bb16: {
        _69 = [move _70];                // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:209:29: 209:62
        _68 = &_69;                      // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:209:29: 209:62
        _67 = _68;                       // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:209:29: 209:62
        _66 = move _67 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:209:29: 209:62
        _62 = Arguments::<'_>::new_v1(move _63, move _66) -> bb17; // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:209:29: 209:62
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:209:29: 209:62
                                         // + user_ty: UserType(9)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb17: {
        _61 = _eprint(move _62) -> bb18; // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:209:9: 209:63
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:209:9: 209:28
                                         // + literal: Const { ty: for<'a> fn(Arguments<'a>) {_eprint}, val: Value(<ZST>) }
    }

    bb18: {
        _82 = const _;                   // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:206:25: 206:29
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:206:25: 206:29
                                         // + literal: Const { ty: &[&str; 1], val: Unevaluated(child, [], Some(promoted[1])) }
        _77 = _82;                       // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:206:25: 206:29
        _76 = _77;                       // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:206:25: 206:29
        _75 = move _76 as &[&str] (Pointer(Unsize)); // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:206:25: 206:29
        _81 = const _;                   // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:171:29: 171:59
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:171:29: 171:59
                                         // + literal: Const { ty: &[core::fmt::ArgumentV1<'_>; 0], val: Unevaluated(child, [], Some(promoted[0])) }
        _80 = _81;                       // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:171:29: 171:59
        _79 = _80;                       // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:171:29: 171:59
        _78 = move _79 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:171:29: 171:59
        _74 = Arguments::<'_>::new_v1(move _75, move _78) -> bb19; // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:171:29: 171:59
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:171:29: 171:59
                                         // + user_ty: UserType(11)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb19: {
        _73 = _eprint(move _74) -> bb20; // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:171:9: 171:60
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:171:9: 171:28
                                         // + literal: Const { ty: for<'a> fn(Arguments<'a>) {_eprint}, val: Value(<ZST>) }
    }

    bb20: {
        return;                          // scope 0 at ui/print-stdout-eprint-stderr.rs:16:2: 16:2
    }
}

promoted[0] in child: &[core::fmt::ArgumentV1<'_>; 0] = {
    let mut _0: &[core::fmt::ArgumentV1<'_>; 0]; // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:171:29: 171:59
    let mut _1: [core::fmt::ArgumentV1<'_>; 0]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:171:29: 171:59

    bb0: {
        _1 = [];                         // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:171:29: 171:59
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:171:29: 171:59
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:171:29: 171:59
    }
}

promoted[1] in child: &[&str; 1] = {
    let mut _0: &[&str; 1];              // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:206:25: 206:29
    let mut _1: [&str; 1];               // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:206:25: 206:29

    bb0: {
        _1 = [const "\n"];               // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:206:25: 206:29
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:206:25: 206:29
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:206:25: 206:29
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:206:25: 206:29
    }
}

promoted[2] in child: &i32 = {
    let mut _0: &i32;                    // return place in scope 0 at ui/print-stdout-eprint-stderr.rs:14:30: 14:31
    let mut _1: i32;                     // in scope 0 at ui/print-stdout-eprint-stderr.rs:14:30: 14:31

    bb0: {
        _1 = const 2_i32;                // scope 0 at ui/print-stdout-eprint-stderr.rs:14:30: 14:31
        _0 = &_1;                        // scope 0 at ui/print-stdout-eprint-stderr.rs:14:30: 14:31
        return;                          // scope 0 at ui/print-stdout-eprint-stderr.rs:14:30: 14:31
    }
}

promoted[3] in child: &[&str; 2] = {
    let mut _0: &[&str; 2];              // return place in scope 0 at ui/print-stdout-eprint-stderr.rs:14:15: 14:28
    let mut _1: [&str; 2];               // in scope 0 at ui/print-stdout-eprint-stderr.rs:14:15: 14:28

    bb0: {
        _1 = [const "[stderr ", const "]\n"]; // scope 0 at ui/print-stdout-eprint-stderr.rs:14:15: 14:28
                                         // mir::Constant
                                         // + span: ui/print-stdout-eprint-stderr.rs:14:15: 14:28
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
                                         // mir::Constant
                                         // + span: ui/print-stdout-eprint-stderr.rs:14:15: 14:28
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at ui/print-stdout-eprint-stderr.rs:14:15: 14:28
        return;                          // scope 0 at ui/print-stdout-eprint-stderr.rs:14:15: 14:28
    }
}

promoted[4] in child: &i32 = {
    let mut _0: &i32;                    // return place in scope 0 at ui/print-stdout-eprint-stderr.rs:13:28: 13:29
    let mut _1: i32;                     // in scope 0 at ui/print-stdout-eprint-stderr.rs:13:28: 13:29

    bb0: {
        _1 = const 1_i32;                // scope 0 at ui/print-stdout-eprint-stderr.rs:13:28: 13:29
        _0 = &_1;                        // scope 0 at ui/print-stdout-eprint-stderr.rs:13:28: 13:29
        return;                          // scope 0 at ui/print-stdout-eprint-stderr.rs:13:28: 13:29
    }
}

promoted[5] in child: &[&str; 2] = {
    let mut _0: &[&str; 2];              // return place in scope 0 at ui/print-stdout-eprint-stderr.rs:13:13: 13:26
    let mut _1: [&str; 2];               // in scope 0 at ui/print-stdout-eprint-stderr.rs:13:13: 13:26

    bb0: {
        _1 = [const "[stderr ", const "]"]; // scope 0 at ui/print-stdout-eprint-stderr.rs:13:13: 13:26
                                         // mir::Constant
                                         // + span: ui/print-stdout-eprint-stderr.rs:13:13: 13:26
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
                                         // mir::Constant
                                         // + span: ui/print-stdout-eprint-stderr.rs:13:13: 13:26
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at ui/print-stdout-eprint-stderr.rs:13:13: 13:26
        return;                          // scope 0 at ui/print-stdout-eprint-stderr.rs:13:13: 13:26
    }
}

promoted[6] in child: &[core::fmt::ArgumentV1<'_>; 0] = {
    let mut _0: &[core::fmt::ArgumentV1<'_>; 0]; // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:171:29: 171:59
    let mut _1: [core::fmt::ArgumentV1<'_>; 0]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:171:29: 171:59

    bb0: {
        _1 = [];                         // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:171:29: 171:59
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:171:29: 171:59
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:171:29: 171:59
    }
}

promoted[7] in child: &[&str; 1] = {
    let mut _0: &[&str; 1];              // return place in scope 0 at ui/print-stdout-eprint-stderr.rs:12:13: 12:25
    let mut _1: [&str; 1];               // in scope 0 at ui/print-stdout-eprint-stderr.rs:12:13: 12:25

    bb0: {
        _1 = [const "[stderr 0]"];       // scope 0 at ui/print-stdout-eprint-stderr.rs:12:13: 12:25
                                         // mir::Constant
                                         // + span: ui/print-stdout-eprint-stderr.rs:12:13: 12:25
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at ui/print-stdout-eprint-stderr.rs:12:13: 12:25
        return;                          // scope 0 at ui/print-stdout-eprint-stderr.rs:12:13: 12:25
    }
}

promoted[8] in child: &[core::fmt::ArgumentV1<'_>; 0] = {
    let mut _0: &[core::fmt::ArgumentV1<'_>; 0]; // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:81:28: 81:58
    let mut _1: [core::fmt::ArgumentV1<'_>; 0]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:81:28: 81:58

    bb0: {
        _1 = [];                         // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:81:28: 81:58
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:81:28: 81:58
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:81:28: 81:58
    }
}

promoted[9] in child: &[&str; 1] = {
    let mut _0: &[&str; 1];              // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:134:24: 134:28
    let mut _1: [&str; 1];               // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:134:24: 134:28

    bb0: {
        _1 = [const "\n"];               // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:134:24: 134:28
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:134:24: 134:28
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:134:24: 134:28
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:134:24: 134:28
    }
}

promoted[10] in child: &i32 = {
    let mut _0: &i32;                    // return place in scope 0 at ui/print-stdout-eprint-stderr.rs:10:29: 10:30
    let mut _1: i32;                     // in scope 0 at ui/print-stdout-eprint-stderr.rs:10:29: 10:30

    bb0: {
        _1 = const 2_i32;                // scope 0 at ui/print-stdout-eprint-stderr.rs:10:29: 10:30
        _0 = &_1;                        // scope 0 at ui/print-stdout-eprint-stderr.rs:10:29: 10:30
        return;                          // scope 0 at ui/print-stdout-eprint-stderr.rs:10:29: 10:30
    }
}

promoted[11] in child: &[&str; 2] = {
    let mut _0: &[&str; 2];              // return place in scope 0 at ui/print-stdout-eprint-stderr.rs:10:14: 10:27
    let mut _1: [&str; 2];               // in scope 0 at ui/print-stdout-eprint-stderr.rs:10:14: 10:27

    bb0: {
        _1 = [const "[stdout ", const "]\n"]; // scope 0 at ui/print-stdout-eprint-stderr.rs:10:14: 10:27
                                         // mir::Constant
                                         // + span: ui/print-stdout-eprint-stderr.rs:10:14: 10:27
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
                                         // mir::Constant
                                         // + span: ui/print-stdout-eprint-stderr.rs:10:14: 10:27
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at ui/print-stdout-eprint-stderr.rs:10:14: 10:27
        return;                          // scope 0 at ui/print-stdout-eprint-stderr.rs:10:14: 10:27
    }
}

promoted[12] in child: &i32 = {
    let mut _0: &i32;                    // return place in scope 0 at ui/print-stdout-eprint-stderr.rs:9:27: 9:28
    let mut _1: i32;                     // in scope 0 at ui/print-stdout-eprint-stderr.rs:9:27: 9:28

    bb0: {
        _1 = const 1_i32;                // scope 0 at ui/print-stdout-eprint-stderr.rs:9:27: 9:28
        _0 = &_1;                        // scope 0 at ui/print-stdout-eprint-stderr.rs:9:27: 9:28
        return;                          // scope 0 at ui/print-stdout-eprint-stderr.rs:9:27: 9:28
    }
}

promoted[13] in child: &[&str; 2] = {
    let mut _0: &[&str; 2];              // return place in scope 0 at ui/print-stdout-eprint-stderr.rs:9:12: 9:25
    let mut _1: [&str; 2];               // in scope 0 at ui/print-stdout-eprint-stderr.rs:9:12: 9:25

    bb0: {
        _1 = [const "[stdout ", const "]"]; // scope 0 at ui/print-stdout-eprint-stderr.rs:9:12: 9:25
                                         // mir::Constant
                                         // + span: ui/print-stdout-eprint-stderr.rs:9:12: 9:25
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
                                         // mir::Constant
                                         // + span: ui/print-stdout-eprint-stderr.rs:9:12: 9:25
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at ui/print-stdout-eprint-stderr.rs:9:12: 9:25
        return;                          // scope 0 at ui/print-stdout-eprint-stderr.rs:9:12: 9:25
    }
}

promoted[14] in child: &[core::fmt::ArgumentV1<'_>; 0] = {
    let mut _0: &[core::fmt::ArgumentV1<'_>; 0]; // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:81:28: 81:58
    let mut _1: [core::fmt::ArgumentV1<'_>; 0]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:81:28: 81:58

    bb0: {
        _1 = [];                         // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:81:28: 81:58
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:81:28: 81:58
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:81:28: 81:58
    }
}

promoted[15] in child: &[&str; 1] = {
    let mut _0: &[&str; 1];              // return place in scope 0 at ui/print-stdout-eprint-stderr.rs:8:12: 8:24
    let mut _1: [&str; 1];               // in scope 0 at ui/print-stdout-eprint-stderr.rs:8:12: 8:24

    bb0: {
        _1 = [const "[stdout 0]"];       // scope 0 at ui/print-stdout-eprint-stderr.rs:8:12: 8:24
                                         // mir::Constant
                                         // + span: ui/print-stdout-eprint-stderr.rs:8:12: 8:24
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at ui/print-stdout-eprint-stderr.rs:8:12: 8:24
        return;                          // scope 0 at ui/print-stdout-eprint-stderr.rs:8:12: 8:24
    }
}

fn parent() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/print-stdout-eprint-stderr.rs:18:13: 18:13
    let _1: std::string::String;         // in scope 0 at ui/print-stdout-eprint-stderr.rs:19:9: 19:13
    let mut _2: std::option::Option<std::string::String>; // in scope 0 at ui/print-stdout-eprint-stderr.rs:19:16: 19:34
    let mut _3: &mut std::env::Args;     // in scope 0 at ui/print-stdout-eprint-stderr.rs:19:16: 19:34
    let mut _4: std::env::Args;          // in scope 0 at ui/print-stdout-eprint-stderr.rs:19:16: 19:27
    let mut _6: std::result::Result<std::process::Output, std::io::Error>; // in scope 0 at ui/print-stdout-eprint-stderr.rs:20:18: 20:63
    let mut _7: &mut std::process::Command; // in scope 0 at ui/print-stdout-eprint-stderr.rs:20:18: 20:63
    let mut _8: &mut std::process::Command; // in scope 0 at ui/print-stdout-eprint-stderr.rs:20:18: 20:54
    let mut _9: &mut std::process::Command; // in scope 0 at ui/print-stdout-eprint-stderr.rs:20:18: 20:54
    let mut _10: std::process::Command;  // in scope 0 at ui/print-stdout-eprint-stderr.rs:20:18: 20:45
    let mut _11: std::string::String;    // in scope 0 at ui/print-stdout-eprint-stderr.rs:20:40: 20:44
    let mut _12: bool;                   // in scope 0 at ui/print-stdout-eprint-stderr.rs:21:5: 21:37
    let mut _13: bool;                   // in scope 0 at ui/print-stdout-eprint-stderr.rs:21:13: 21:36
    let mut _14: &std::process::ExitStatus; // in scope 0 at ui/print-stdout-eprint-stderr.rs:21:13: 21:36
    let mut _15: !;                      // in scope 0 at ui/print-stdout-eprint-stderr.rs:21:5: 21:37
    let mut _17: std::result::Result<std::string::String, std::string::FromUtf8Error>; // in scope 0 at ui/print-stdout-eprint-stderr.rs:23:18: 23:50
    let mut _18: std::vec::Vec<u8>;      // in scope 0 at ui/print-stdout-eprint-stderr.rs:23:36: 23:49
    let mut _20: std::result::Result<std::string::String, std::string::FromUtf8Error>; // in scope 0 at ui/print-stdout-eprint-stderr.rs:24:18: 24:50
    let mut _21: std::vec::Vec<u8>;      // in scope 0 at ui/print-stdout-eprint-stderr.rs:24:36: 24:49
    let mut _22: (&std::string::String, &&str); // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _23: &std::string::String;   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let mut _24: &&str;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _27: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    let mut _28: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
    let mut _29: &std::string::String;   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
    let mut _30: &&str;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
    let _32: !;                          // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
    let mut _33: core::panicking::AssertKind; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
    let mut _34: &std::string::String;   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let _35: &std::string::String;       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let mut _36: &&str;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let _37: &&str;                      // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let mut _38: std::option::Option<std::fmt::Arguments<'_>>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
    let mut _39: (&std::string::String, &&str); // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _40: &std::string::String;   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let mut _41: &&str;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _44: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    let mut _45: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
    let mut _46: &std::string::String;   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
    let mut _47: &&str;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
    let _49: !;                          // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
    let mut _50: core::panicking::AssertKind; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
    let mut _51: &std::string::String;   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let _52: &std::string::String;       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let mut _53: &&str;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let _54: &&str;                      // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let mut _55: std::option::Option<std::fmt::Arguments<'_>>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
    let mut _58: bool;                   // in scope 0 at ui/print-stdout-eprint-stderr.rs:28:1: 28:2
    let mut _59: bool;                   // in scope 0 at ui/print-stdout-eprint-stderr.rs:28:1: 28:2
    let mut _60: bool;                   // in scope 0 at ui/print-stdout-eprint-stderr.rs:28:1: 28:2
    scope 1 {
        debug this => _1;                // in scope 1 at ui/print-stdout-eprint-stderr.rs:19:9: 19:13
        let _5: std::process::Output;    // in scope 1 at ui/print-stdout-eprint-stderr.rs:20:9: 20:15
        scope 2 {
            debug output => _5;          // in scope 2 at ui/print-stdout-eprint-stderr.rs:20:9: 20:15
            let _16: std::string::String; // in scope 2 at ui/print-stdout-eprint-stderr.rs:23:9: 23:15
            scope 3 {
                debug stdout => _16;     // in scope 3 at ui/print-stdout-eprint-stderr.rs:23:9: 23:15
                let _19: std::string::String; // in scope 3 at ui/print-stdout-eprint-stderr.rs:24:9: 24:15
                scope 4 {
                    debug stderr => _19; // in scope 4 at ui/print-stdout-eprint-stderr.rs:24:9: 24:15
                    let _25: &std::string::String; // in scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
                    let _26: &&str;      // in scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
                    let _42: &std::string::String; // in scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
                    let _43: &&str;      // in scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
                    let mut _56: &&str;  // in scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                    let mut _57: &&str;  // in scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                    scope 5 {
                        debug left_val => _25; // in scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
                        debug right_val => _26; // in scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
                        let _31: core::panicking::AssertKind; // in scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                        scope 6 {
                            debug kind => _31; // in scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                        }
                    }
                    scope 7 {
                        debug left_val => _42; // in scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
                        debug right_val => _43; // in scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
                        let _48: core::panicking::AssertKind; // in scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                        scope 8 {
                            debug kind => _48; // in scope 8 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                        }
                    }
                }
            }
        }
    }

    bb0: {
        _59 = const false;               // scope 0 at ui/print-stdout-eprint-stderr.rs:19:9: 19:13
        _58 = const false;               // scope 0 at ui/print-stdout-eprint-stderr.rs:19:9: 19:13
        _60 = const false;               // scope 0 at ui/print-stdout-eprint-stderr.rs:19:9: 19:13
        _4 = args() -> bb1;              // scope 0 at ui/print-stdout-eprint-stderr.rs:19:16: 19:27
                                         // mir::Constant
                                         // + span: ui/print-stdout-eprint-stderr.rs:19:16: 19:25
                                         // + literal: Const { ty: fn() -> Args {args}, val: Value(<ZST>) }
    }

    bb1: {
        _3 = &mut _4;                    // scope 0 at ui/print-stdout-eprint-stderr.rs:19:16: 19:34
        _2 = <Args as Iterator>::next(move _3) -> [return: bb2, unwind: bb28]; // scope 0 at ui/print-stdout-eprint-stderr.rs:19:16: 19:34
                                         // mir::Constant
                                         // + span: ui/print-stdout-eprint-stderr.rs:19:28: 19:32
                                         // + literal: Const { ty: for<'a> fn(&'a mut Args) -> Option<<Args as Iterator>::Item> {<Args as Iterator>::next}, val: Value(<ZST>) }
    }

    bb2: {
        _1 = Option::<String>::unwrap(move _2) -> [return: bb3, unwind: bb28]; // scope 0 at ui/print-stdout-eprint-stderr.rs:19:16: 19:43
                                         // mir::Constant
                                         // + span: ui/print-stdout-eprint-stderr.rs:19:35: 19:41
                                         // + literal: Const { ty: fn(Option<String>) -> String {Option::<String>::unwrap}, val: Value(<ZST>) }
    }

    bb3: {
        _60 = const true;                // scope 0 at ui/print-stdout-eprint-stderr.rs:19:42: 19:43
        drop(_4) -> [return: bb4, unwind: bb35]; // scope 0 at ui/print-stdout-eprint-stderr.rs:19:43: 19:44
    }

    bb4: {
        _60 = const false;               // scope 1 at ui/print-stdout-eprint-stderr.rs:20:40: 20:44
        _11 = move _1;                   // scope 1 at ui/print-stdout-eprint-stderr.rs:20:40: 20:44
        _10 = Command::new::<String>(move _11) -> [return: bb5, unwind: bb35]; // scope 1 at ui/print-stdout-eprint-stderr.rs:20:18: 20:45
                                         // mir::Constant
                                         // + span: ui/print-stdout-eprint-stderr.rs:20:18: 20:39
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: fn(String) -> Command {Command::new::<String>}, val: Value(<ZST>) }
    }

    bb5: {
        _9 = &mut _10;                   // scope 1 at ui/print-stdout-eprint-stderr.rs:20:18: 20:54
        _8 = Command::arg::<&str>(move _9, const "-") -> [return: bb6, unwind: bb27]; // scope 1 at ui/print-stdout-eprint-stderr.rs:20:18: 20:54
                                         // mir::Constant
                                         // + span: ui/print-stdout-eprint-stderr.rs:20:46: 20:49
                                         // + literal: Const { ty: for<'a> fn(&'a mut Command, &str) -> &'a mut Command {Command::arg::<&str>}, val: Value(<ZST>) }
                                         // mir::Constant
                                         // + span: ui/print-stdout-eprint-stderr.rs:20:50: 20:53
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
    }

    bb6: {
        _7 = &mut (*_8);                 // scope 1 at ui/print-stdout-eprint-stderr.rs:20:18: 20:63
        _6 = Command::output(move _7) -> [return: bb7, unwind: bb27]; // scope 1 at ui/print-stdout-eprint-stderr.rs:20:18: 20:63
                                         // mir::Constant
                                         // + span: ui/print-stdout-eprint-stderr.rs:20:55: 20:61
                                         // + literal: Const { ty: for<'a> fn(&'a mut Command) -> Result<Output, std::io::Error> {Command::output}, val: Value(<ZST>) }
    }

    bb7: {
        _5 = Result::<Output, std::io::Error>::unwrap(move _6) -> [return: bb8, unwind: bb27]; // scope 1 at ui/print-stdout-eprint-stderr.rs:20:18: 20:72
                                         // mir::Constant
                                         // + span: ui/print-stdout-eprint-stderr.rs:20:64: 20:70
                                         // + literal: Const { ty: fn(Result<Output, std::io::Error>) -> Output {Result::<Output, std::io::Error>::unwrap}, val: Value(<ZST>) }
    }

    bb8: {
        _58 = const true;                // scope 1 at ui/print-stdout-eprint-stderr.rs:20:71: 20:72
        _59 = const true;                // scope 1 at ui/print-stdout-eprint-stderr.rs:20:71: 20:72
        drop(_10) -> [return: bb9, unwind: bb33]; // scope 1 at ui/print-stdout-eprint-stderr.rs:20:72: 20:73
    }

    bb9: {
        _14 = &(_5.0: std::process::ExitStatus); // scope 2 at ui/print-stdout-eprint-stderr.rs:21:13: 21:36
        _13 = ExitStatus::success(move _14) -> [return: bb10, unwind: bb33]; // scope 2 at ui/print-stdout-eprint-stderr.rs:21:13: 21:36
                                         // mir::Constant
                                         // + span: ui/print-stdout-eprint-stderr.rs:21:27: 21:34
                                         // + literal: Const { ty: for<'a> fn(&'a ExitStatus) -> bool {ExitStatus::success}, val: Value(<ZST>) }
    }

    bb10: {
        _12 = Not(move _13);             // scope 2 at ui/print-stdout-eprint-stderr.rs:21:5: 21:37
        switchInt(move _12) -> [0: bb12, otherwise: bb11]; // scope 2 at ui/print-stdout-eprint-stderr.rs:21:5: 21:37
    }

    bb11: {
        _15 = core::panicking::panic(const "assertion failed: output.status.success()") -> bb33; // scope 2 at ui/print-stdout-eprint-stderr.rs:21:5: 21:37
                                         // mir::Constant
                                         // + span: ui/print-stdout-eprint-stderr.rs:21:5: 21:37
                                         // + literal: Const { ty: fn(&'static str) -> ! {core::panicking::panic}, val: Value(<ZST>) }
                                         // mir::Constant
                                         // + span: no-location
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
    }

    bb12: {
        _59 = const false;               // scope 2 at ui/print-stdout-eprint-stderr.rs:23:36: 23:49
        _18 = move (_5.1: std::vec::Vec<u8>); // scope 2 at ui/print-stdout-eprint-stderr.rs:23:36: 23:49
        _17 = String::from_utf8(move _18) -> [return: bb13, unwind: bb33]; // scope 2 at ui/print-stdout-eprint-stderr.rs:23:18: 23:50
                                         // mir::Constant
                                         // + span: ui/print-stdout-eprint-stderr.rs:23:18: 23:35
                                         // + literal: Const { ty: fn(Vec<u8>) -> Result<String, FromUtf8Error> {String::from_utf8}, val: Value(<ZST>) }
    }

    bb13: {
        _16 = Result::<String, FromUtf8Error>::unwrap(move _17) -> [return: bb14, unwind: bb33]; // scope 2 at ui/print-stdout-eprint-stderr.rs:23:18: 23:59
                                         // mir::Constant
                                         // + span: ui/print-stdout-eprint-stderr.rs:23:51: 23:57
                                         // + literal: Const { ty: fn(Result<String, FromUtf8Error>) -> String {Result::<String, FromUtf8Error>::unwrap}, val: Value(<ZST>) }
    }

    bb14: {
        _58 = const false;               // scope 3 at ui/print-stdout-eprint-stderr.rs:24:36: 24:49
        _21 = move (_5.2: std::vec::Vec<u8>); // scope 3 at ui/print-stdout-eprint-stderr.rs:24:36: 24:49
        _20 = String::from_utf8(move _21) -> [return: bb15, unwind: bb26]; // scope 3 at ui/print-stdout-eprint-stderr.rs:24:18: 24:50
                                         // mir::Constant
                                         // + span: ui/print-stdout-eprint-stderr.rs:24:18: 24:35
                                         // + literal: Const { ty: fn(Vec<u8>) -> Result<String, FromUtf8Error> {String::from_utf8}, val: Value(<ZST>) }
    }

    bb15: {
        _19 = Result::<String, FromUtf8Error>::unwrap(move _20) -> [return: bb16, unwind: bb26]; // scope 3 at ui/print-stdout-eprint-stderr.rs:24:18: 24:59
                                         // mir::Constant
                                         // + span: ui/print-stdout-eprint-stderr.rs:24:51: 24:57
                                         // + literal: Const { ty: fn(Result<String, FromUtf8Error>) -> String {Result::<String, FromUtf8Error>::unwrap}, val: Value(<ZST>) }
    }

    bb16: {
        _23 = &_16;                      // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _57 = const _;                   // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // + literal: Const { ty: &&str, val: Unevaluated(parent, [], Some(promoted[1])) }
        _24 = _57;                       // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _22 = (move _23, move _24);      // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _25 = (_22.0: &std::string::String); // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _26 = (_22.1: &&str);            // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _29 = _25;                       // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
        _30 = _26;                       // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
        _28 = <String as PartialEq<&str>>::eq(move _29, move _30) -> [return: bb17, unwind: bb25]; // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a String, &'b &str) -> bool {<String as PartialEq<&str>>::eq}, val: Value(<ZST>) }
    }

    bb17: {
        _27 = Not(move _28);             // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
        switchInt(move _27) -> [0: bb19, otherwise: bb18]; // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    }

    bb18: {
        _31 = const core::panicking::AssertKind::Eq; // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _33 = const core::panicking::AssertKind::Eq; // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _35 = _25;                       // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _34 = _35;                       // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _37 = _26;                       // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _36 = _37;                       // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _38 = Option::<Arguments<'_>>::None; // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
        _32 = core::panicking::assert_failed::<String, &str>(move _33, move _34, move _36, move _38) -> bb25; // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:53
                                         // + literal: Const { ty: for<'a, 'b, 'c> fn(core::panicking::AssertKind, &'a String, &'b &str, Option<Arguments<'c>>) -> ! {core::panicking::assert_failed::<String, &str>}, val: Value(<ZST>) }
    }

    bb19: {
        _40 = &_19;                      // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _56 = const _;                   // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // + literal: Const { ty: &&str, val: Unevaluated(parent, [], Some(promoted[0])) }
        _41 = _56;                       // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _39 = (move _40, move _41);      // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _42 = (_39.0: &std::string::String); // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _43 = (_39.1: &&str);            // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _46 = _42;                       // scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
        _47 = _43;                       // scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
        _45 = <String as PartialEq<&str>>::eq(move _46, move _47) -> [return: bb20, unwind: bb25]; // scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a String, &'b &str) -> bool {<String as PartialEq<&str>>::eq}, val: Value(<ZST>) }
    }

    bb20: {
        _44 = Not(move _45);             // scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
        switchInt(move _44) -> [0: bb22, otherwise: bb21]; // scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    }

    bb21: {
        _48 = const core::panicking::AssertKind::Eq; // scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _50 = const core::panicking::AssertKind::Eq; // scope 8 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _52 = _42;                       // scope 8 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _51 = _52;                       // scope 8 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _54 = _43;                       // scope 8 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _53 = _54;                       // scope 8 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _55 = Option::<Arguments<'_>>::None; // scope 8 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
        _49 = core::panicking::assert_failed::<String, &str>(move _50, move _51, move _53, move _55) -> bb25; // scope 8 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:53
                                         // + literal: Const { ty: for<'a, 'b, 'c> fn(core::panicking::AssertKind, &'a String, &'b &str, Option<Arguments<'c>>) -> ! {core::panicking::assert_failed::<String, &str>}, val: Value(<ZST>) }
    }

    bb22: {
        drop(_19) -> [return: bb23, unwind: bb26]; // scope 3 at ui/print-stdout-eprint-stderr.rs:28:1: 28:2
    }

    bb23: {
        drop(_16) -> [return: bb24, unwind: bb33]; // scope 2 at ui/print-stdout-eprint-stderr.rs:28:1: 28:2
    }

    bb24: {
        _58 = const false;               // scope 1 at ui/print-stdout-eprint-stderr.rs:28:1: 28:2
        _59 = const false;               // scope 1 at ui/print-stdout-eprint-stderr.rs:28:1: 28:2
        _60 = const false;               // scope 0 at ui/print-stdout-eprint-stderr.rs:28:1: 28:2
        return;                          // scope 0 at ui/print-stdout-eprint-stderr.rs:28:2: 28:2
    }

    bb25 (cleanup): {
        drop(_19) -> bb26;               // scope 3 at ui/print-stdout-eprint-stderr.rs:28:1: 28:2
    }

    bb26 (cleanup): {
        drop(_16) -> bb33;               // scope 2 at ui/print-stdout-eprint-stderr.rs:28:1: 28:2
    }

    bb27 (cleanup): {
        drop(_10) -> bb35;               // scope 1 at ui/print-stdout-eprint-stderr.rs:20:72: 20:73
    }

    bb28 (cleanup): {
        drop(_4) -> bb29;                // scope 0 at ui/print-stdout-eprint-stderr.rs:19:43: 19:44
    }

    bb29 (cleanup): {
        resume;                          // scope 0 at ui/print-stdout-eprint-stderr.rs:18:1: 28:2
    }

    bb30 (cleanup): {
        switchInt(_58) -> [0: bb35, otherwise: bb31]; // scope 1 at ui/print-stdout-eprint-stderr.rs:28:1: 28:2
    }

    bb31 (cleanup): {
        drop((_5.2: std::vec::Vec<u8>)) -> bb35; // scope 1 at ui/print-stdout-eprint-stderr.rs:28:1: 28:2
    }

    bb32 (cleanup): {
        drop((_5.1: std::vec::Vec<u8>)) -> bb30; // scope 1 at ui/print-stdout-eprint-stderr.rs:28:1: 28:2
    }

    bb33 (cleanup): {
        switchInt(_59) -> [0: bb30, otherwise: bb32]; // scope 1 at ui/print-stdout-eprint-stderr.rs:28:1: 28:2
    }

    bb34 (cleanup): {
        drop(_1) -> bb29;                // scope 0 at ui/print-stdout-eprint-stderr.rs:28:1: 28:2
    }

    bb35 (cleanup): {
        switchInt(_60) -> [0: bb29, otherwise: bb34]; // scope 0 at ui/print-stdout-eprint-stderr.rs:28:1: 28:2
    }
}

promoted[0] in parent: &&str = {
    let mut _0: &&str;                   // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _1: &str;                    // in scope 0 at ui/print-stdout-eprint-stderr.rs:27:24: 27:60

    bb0: {
        _1 = const "[stderr 0][stderr 1][stderr 2]\n\n"; // scope 0 at ui/print-stdout-eprint-stderr.rs:27:24: 27:60
                                         // mir::Constant
                                         // + span: ui/print-stdout-eprint-stderr.rs:27:24: 27:60
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    }
}

promoted[1] in parent: &&str = {
    let mut _0: &&str;                   // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _1: &str;                    // in scope 0 at ui/print-stdout-eprint-stderr.rs:26:24: 26:60

    bb0: {
        _1 = const "[stdout 0][stdout 1][stdout 2]\n\n"; // scope 0 at ui/print-stdout-eprint-stderr.rs:26:24: 26:60
                                         // mir::Constant
                                         // + span: ui/print-stdout-eprint-stderr.rs:26:24: 26:60
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    }
}

fn main() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/print-stdout-eprint-stderr.rs:30:11: 30:11
    let mut _1: usize;                   // in scope 0 at ui/print-stdout-eprint-stderr.rs:31:8: 31:27
    let mut _2: std::env::Args;          // in scope 0 at ui/print-stdout-eprint-stderr.rs:31:8: 31:19

    bb0: {
        _2 = args() -> bb1;              // scope 0 at ui/print-stdout-eprint-stderr.rs:31:8: 31:19
                                         // mir::Constant
                                         // + span: ui/print-stdout-eprint-stderr.rs:31:8: 31:17
                                         // + literal: Const { ty: fn() -> Args {args}, val: Value(<ZST>) }
    }

    bb1: {
        _1 = <Args as Iterator>::count(move _2) -> bb2; // scope 0 at ui/print-stdout-eprint-stderr.rs:31:8: 31:27
                                         // mir::Constant
                                         // + span: ui/print-stdout-eprint-stderr.rs:31:20: 31:25
                                         // + literal: Const { ty: fn(Args) -> usize {<Args as Iterator>::count}, val: Value(<ZST>) }
    }

    bb2: {
        switchInt(move _1) -> [2: bb3, otherwise: bb4]; // scope 0 at ui/print-stdout-eprint-stderr.rs:31:8: 31:32
    }

    bb3: {
        _0 = child() -> bb5;             // scope 0 at ui/print-stdout-eprint-stderr.rs:31:35: 31:42
                                         // mir::Constant
                                         // + span: ui/print-stdout-eprint-stderr.rs:31:35: 31:40
                                         // + literal: Const { ty: fn() {child}, val: Value(<ZST>) }
    }

    bb4: {
        _0 = parent() -> bb5;            // scope 0 at ui/print-stdout-eprint-stderr.rs:31:52: 31:60
                                         // mir::Constant
                                         // + span: ui/print-stdout-eprint-stderr.rs:31:52: 31:58
                                         // + literal: Const { ty: fn() {parent}, val: Value(<ZST>) }
    }

    bb5: {
        return;                          // scope 0 at ui/print-stdout-eprint-stderr.rs:32:2: 32:2
    }
}
