// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
fn main() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/packed/issue-46152.rs:13:11: 13:11
    let _1: [i32; 3];                    // in scope 0 at ui/packed/issue-46152.rs:21:9: 21:12
    let mut _3: &[i32; 3];               // in scope 0 at ui/packed/issue-46152.rs:22:70: 22:74
    let _4: &[i32; 3];                   // in scope 0 at ui/packed/issue-46152.rs:22:70: 22:74
    let mut _6: UnalignedPtr<'_, [i32; 3]>; // in scope 0 at ui/packed/issue-46152.rs:23:46: 23:59
    scope 1 {
        debug arr => _1;                 // in scope 1 at ui/packed/issue-46152.rs:21:9: 21:12
        let _2: UnalignedPtr<'_, [i32; 3]>; // in scope 1 at ui/packed/issue-46152.rs:22:9: 22:22
        scope 2 {
            debug arr_unaligned => _2;   // in scope 2 at ui/packed/issue-46152.rs:22:9: 22:22
            let _5: UnalignedPtr<'_, [i32]>; // in scope 2 at ui/packed/issue-46152.rs:23:9: 23:22
            scope 3 {
                debug arr_unaligned => _5; // in scope 3 at ui/packed/issue-46152.rs:23:9: 23:22
            }
        }
    }

    bb0: {
        _1 = [const 1_i32, const 2_i32, const 3_i32]; // scope 0 at ui/packed/issue-46152.rs:21:15: 21:24
        _4 = &_1;                        // scope 1 at ui/packed/issue-46152.rs:22:70: 22:74
        _3 = _4;                         // scope 1 at ui/packed/issue-46152.rs:22:70: 22:74
        _2 = UnalignedPtr::<'_, [i32; 3]> { data: move _3 }; // scope 1 at ui/packed/issue-46152.rs:22:49: 22:76
        _6 = move _2;                    // scope 2 at ui/packed/issue-46152.rs:23:46: 23:59
        _5 = move _6 as UnalignedPtr<'_, [i32]> (Pointer(Unsize)); // scope 2 at ui/packed/issue-46152.rs:23:46: 23:59
        return;                          // scope 0 at ui/packed/issue-46152.rs:24:2: 24:2
    }
}

main::{constant#0}: usize = {
    let mut _0: usize;                   // return place in scope 0 at ui/packed/issue-46152.rs:22:43: 22:44

    bb0: {
        _0 = const 3_usize;              // scope 0 at ui/packed/issue-46152.rs:22:43: 22:44
        return;                          // scope 0 at ui/packed/issue-46152.rs:22:43: 22:44
    }
}
