// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
fn foo() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/expr/if/if-ret.rs:6:10: 6:10

    bb0: {
        return;                          // scope 0 at ui/expr/if/if-ret.rs:6:29: 6:29
    }
}

fn main() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/expr/if/if-ret.rs:8:15: 8:15
    let _1: ();                          // in scope 0 at ui/expr/if/if-ret.rs:8:17: 8:22

    bb0: {
        _1 = foo() -> bb1;               // scope 0 at ui/expr/if/if-ret.rs:8:17: 8:22
                                         // mir::Constant
                                         // + span: ui/expr/if/if-ret.rs:8:17: 8:20
                                         // + literal: Const { ty: fn() {foo}, val: Value(<ZST>) }
    }

    bb1: {
        return;                          // scope 0 at ui/expr/if/if-ret.rs:8:25: 8:25
    }
}
