// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
fn bump() -> Option<usize> {
    let mut _0: std::option::Option<usize>; // return place in scope 0 at ui/codegen/issue-88043-bb-does-not-have-terminator.rs:8:14: 8:27
    let mut _1: !;                       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/panic.rs:68:9: 68:77

    bb0: {
        _1 = core::panicking::panic(const "internal error: entered unreachable code"); // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/panic.rs:68:9: 68:77
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/panic.rs:68:9: 68:33
                                         // + literal: Const { ty: fn(&'static str) -> ! {core::panicking::panic}, val: Value(<ZST>) }
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/panic.rs:68:34: 68:76
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
    }
}

fn take_until(_1: impl Fn() -> bool) -> () {
    debug terminate => _1;               // in scope 0 at ui/codegen/issue-88043-bb-does-not-have-terminator.rs:12:15: 12:24
    let mut _0: ();                      // return place in scope 0 at ui/codegen/issue-88043-bb-does-not-have-terminator.rs:12:45: 12:45
    let mut _2: bool;                    // in scope 0 at ui/codegen/issue-88043-bb-does-not-have-terminator.rs:14:12: 14:23
    let mut _3: &impl Fn() -> bool;      // in scope 0 at ui/codegen/issue-88043-bb-does-not-have-terminator.rs:14:12: 14:21
    let mut _4: ();                      // in scope 0 at ui/codegen/issue-88043-bb-does-not-have-terminator.rs:14:12: 14:23
    let _5: std::option::Option<usize>;  // in scope 0 at ui/codegen/issue-88043-bb-does-not-have-terminator.rs:17:13: 17:19

    bb0: {
        goto -> bb1;                     // scope 0 at ui/codegen/issue-88043-bb-does-not-have-terminator.rs:13:5: 19:6
    }

    bb1: {
        _3 = &_1;                        // scope 0 at ui/codegen/issue-88043-bb-does-not-have-terminator.rs:14:12: 14:21
        _2 = <impl Fn() -> bool as Fn<()>>::call(move _3, move _4) -> [return: bb2, unwind: bb6]; // scope 0 at ui/codegen/issue-88043-bb-does-not-have-terminator.rs:14:12: 14:23
                                         // mir::Constant
                                         // + span: ui/codegen/issue-88043-bb-does-not-have-terminator.rs:14:12: 14:21
                                         // + literal: Const { ty: for<'a> extern "rust-call" fn(&'a impl Fn() -> bool, ()) -> <impl Fn() -> bool as FnOnce<()>>::Output {<impl Fn() -> bool as Fn<()>>::call}, val: Value(<ZST>) }
    }

    bb2: {
        switchInt(move _2) -> [0: bb4, otherwise: bb3]; // scope 0 at ui/codegen/issue-88043-bb-does-not-have-terminator.rs:14:12: 14:23
    }

    bb3: {
        drop(_1) -> bb5;                 // scope 0 at ui/codegen/issue-88043-bb-does-not-have-terminator.rs:20:1: 20:2
    }

    bb4: {
        _5 = bump() -> [return: bb8, unwind: bb6]; // scope 0 at ui/codegen/issue-88043-bb-does-not-have-terminator.rs:17:13: 17:19
                                         // mir::Constant
                                         // + span: ui/codegen/issue-88043-bb-does-not-have-terminator.rs:17:13: 17:17
                                         // + literal: Const { ty: fn() -> Option<usize> {bump}, val: Value(<ZST>) }
    }

    bb5: {
        return;                          // scope 0 at ui/codegen/issue-88043-bb-does-not-have-terminator.rs:20:2: 20:2
    }

    bb6 (cleanup): {
        drop(_1) -> bb7;                 // scope 0 at ui/codegen/issue-88043-bb-does-not-have-terminator.rs:20:1: 20:2
    }

    bb7 (cleanup): {
        resume;                          // scope 0 at ui/codegen/issue-88043-bb-does-not-have-terminator.rs:12:1: 20:2
    }

    bb8: {
        goto -> bb1;                     // scope 0 at ui/codegen/issue-88043-bb-does-not-have-terminator.rs:17:13: 17:19
    }
}

fn main() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/codegen/issue-88043-bb-does-not-have-terminator.rs:23:11: 23:11
    let _1: ();                          // in scope 0 at ui/codegen/issue-88043-bb-does-not-have-terminator.rs:24:5: 24:24
    let mut _2: [closure@ui/codegen/issue-88043-bb-does-not-have-terminator.rs:24:16: 24:18]; // in scope 0 at ui/codegen/issue-88043-bb-does-not-have-terminator.rs:24:16: 24:23
    let _3: std::option::Option<u32>;    // in scope 0 at ui/codegen/issue-88043-bb-does-not-have-terminator.rs:25:5: 25:12
    let mut _4: std::option::Option<std::string::String>; // in scope 0 at ui/codegen/issue-88043-bb-does-not-have-terminator.rs:25:7: 25:11

    bb0: {
        _1 = take_until::<[closure@ui/codegen/issue-88043-bb-does-not-have-terminator.rs:24:16: 24:18]>(move _2) -> bb1; // scope 0 at ui/codegen/issue-88043-bb-does-not-have-terminator.rs:24:5: 24:24
                                         // mir::Constant
                                         // + span: ui/codegen/issue-88043-bb-does-not-have-terminator.rs:24:5: 24:15
                                         // + literal: Const { ty: fn([closure@ui/codegen/issue-88043-bb-does-not-have-terminator.rs:24:16: 24:18]) {take_until::<[closure@ui/codegen/issue-88043-bb-does-not-have-terminator.rs:24:16: 24:18]>}, val: Value(<ZST>) }
    }

    bb1: {
        _4 = Option::<String>::None;     // scope 0 at ui/codegen/issue-88043-bb-does-not-have-terminator.rs:25:7: 25:11
        _3 = f(move _4) -> bb2;          // scope 0 at ui/codegen/issue-88043-bb-does-not-have-terminator.rs:25:5: 25:12
                                         // mir::Constant
                                         // + span: ui/codegen/issue-88043-bb-does-not-have-terminator.rs:25:5: 25:6
                                         // + literal: Const { ty: fn(Option<String>) -> Option<u32> {f}, val: Value(<ZST>) }
    }

    bb2: {
        return;                          // scope 0 at ui/codegen/issue-88043-bb-does-not-have-terminator.rs:26:2: 26:2
    }
}

fn main::{closure#0}(_1: &[closure@ui/codegen/issue-88043-bb-does-not-have-terminator.rs:24:16: 24:18]) -> bool {
    let mut _0: bool;                    // return place in scope 0 at ui/codegen/issue-88043-bb-does-not-have-terminator.rs:24:19: 24:19

    bb0: {
        _0 = const true;                 // scope 0 at ui/codegen/issue-88043-bb-does-not-have-terminator.rs:24:19: 24:23
        return;                          // scope 0 at ui/codegen/issue-88043-bb-does-not-have-terminator.rs:24:23: 24:23
    }
}

fn f(_1: Option<String>) -> Option<u32> {
    debug _a => _1;                      // in scope 0 at ui/codegen/issue-88043-bb-does-not-have-terminator.rs:28:6: 28:8
    let mut _0: std::option::Option<u32>; // return place in scope 0 at ui/codegen/issue-88043-bb-does-not-have-terminator.rs:28:29: 28:40
    let _2: std::option::Option<u32>;    // in scope 0 at ui/codegen/issue-88043-bb-does-not-have-terminator.rs:30:9: 30:12

    bb0: {
        goto -> bb1;                     // scope 0 at ui/codegen/issue-88043-bb-does-not-have-terminator.rs:29:5: 32:6
    }

    bb1: {
        _2 = g() -> [return: bb4, unwind: bb2]; // scope 0 at ui/codegen/issue-88043-bb-does-not-have-terminator.rs:30:9: 30:12
                                         // mir::Constant
                                         // + span: ui/codegen/issue-88043-bb-does-not-have-terminator.rs:30:9: 30:10
                                         // + literal: Const { ty: fn() -> Option<u32> {g}, val: Value(<ZST>) }
    }

    bb2 (cleanup): {
        drop(_1) -> bb3;                 // scope 0 at ui/codegen/issue-88043-bb-does-not-have-terminator.rs:33:1: 33:2
    }

    bb3 (cleanup): {
        resume;                          // scope 0 at ui/codegen/issue-88043-bb-does-not-have-terminator.rs:28:1: 33:2
    }

    bb4: {
        goto -> bb1;                     // scope 0 at ui/codegen/issue-88043-bb-does-not-have-terminator.rs:30:9: 30:12
    }
}

fn g() -> Option<u32> {
    let mut _0: std::option::Option<u32>; // return place in scope 0 at ui/codegen/issue-88043-bb-does-not-have-terminator.rs:35:11: 35:22

    bb0: {
        _0 = Option::<u32>::None;        // scope 0 at ui/codegen/issue-88043-bb-does-not-have-terminator.rs:35:25: 35:29
        return;                          // scope 0 at ui/codegen/issue-88043-bb-does-not-have-terminator.rs:35:31: 35:31
    }
}
