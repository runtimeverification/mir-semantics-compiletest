// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
fn indirect_get_slice() -> &[usize] {
    let mut _0: &[usize];                // return place in scope 0 at ui/codegen/issue-82859-slice-miscompile.rs:6:28: 6:44
    let mut _1: &[usize; 0];             // in scope 0 at ui/codegen/issue-82859-slice-miscompile.rs:7:5: 7:8
    let _2: &[usize; 0];                 // in scope 0 at ui/codegen/issue-82859-slice-miscompile.rs:7:5: 7:8
    let mut _3: &[usize; 0];             // in scope 0 at ui/codegen/issue-82859-slice-miscompile.rs:7:5: 7:8

    bb0: {
        _3 = const _;                    // scope 0 at ui/codegen/issue-82859-slice-miscompile.rs:7:5: 7:8
                                         // mir::Constant
                                         // + span: ui/codegen/issue-82859-slice-miscompile.rs:7:5: 7:8
                                         // + literal: Const { ty: &[usize; 0], val: Unevaluated(indirect_get_slice, [], Some(promoted[0])) }
        _2 = _3;                         // scope 0 at ui/codegen/issue-82859-slice-miscompile.rs:7:5: 7:8
        _1 = _2;                         // scope 0 at ui/codegen/issue-82859-slice-miscompile.rs:7:5: 7:8
        _0 = move _1 as &[usize] (Pointer(Unsize)); // scope 0 at ui/codegen/issue-82859-slice-miscompile.rs:7:5: 7:8
        return;                          // scope 0 at ui/codegen/issue-82859-slice-miscompile.rs:8:2: 8:2
    }
}

promoted[0] in indirect_get_slice: &[usize; 0] = {
    let mut _0: &[usize; 0];             // return place in scope 0 at ui/codegen/issue-82859-slice-miscompile.rs:7:5: 7:8
    let mut _1: [usize; 0];              // in scope 0 at ui/codegen/issue-82859-slice-miscompile.rs:7:6: 7:8

    bb0: {
        _1 = [];                         // scope 0 at ui/codegen/issue-82859-slice-miscompile.rs:7:6: 7:8
        _0 = &_1;                        // scope 0 at ui/codegen/issue-82859-slice-miscompile.rs:7:5: 7:8
        return;                          // scope 0 at ui/codegen/issue-82859-slice-miscompile.rs:7:5: 7:8
    }
}

fn get_slice() -> &[usize] {
    let mut _0: &[usize];                // return place in scope 0 at ui/codegen/issue-82859-slice-miscompile.rs:12:9: 12:12
    scope 1 {
        debug ret => _0;                 // in scope 1 at ui/codegen/issue-82859-slice-miscompile.rs:12:9: 12:12
    }

    bb0: {
        _0 = indirect_get_slice() -> bb1; // scope 0 at ui/codegen/issue-82859-slice-miscompile.rs:12:15: 12:35
                                         // mir::Constant
                                         // + span: ui/codegen/issue-82859-slice-miscompile.rs:12:15: 12:33
                                         // + literal: Const { ty: fn() -> &'static [usize] {indirect_get_slice}, val: Value(<ZST>) }
    }

    bb1: {
        return;                          // scope 0 at ui/codegen/issue-82859-slice-miscompile.rs:14:2: 14:2
    }
}

fn main() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/codegen/issue-82859-slice-miscompile.rs:16:11: 16:11
    let _1: usize;                       // in scope 0 at ui/codegen/issue-82859-slice-miscompile.rs:17:9: 17:15
    let mut _2: &[usize];                // in scope 0 at ui/codegen/issue-82859-slice-miscompile.rs:17:18: 17:35
    let _3: &[usize];                    // in scope 0 at ui/codegen/issue-82859-slice-miscompile.rs:17:18: 17:29
    let mut _4: (&usize, &usize);        // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _5: &usize;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let mut _6: &usize;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _9: bool;                    // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    let mut _10: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
    let mut _11: usize;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
    let mut _12: usize;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
    let _14: !;                          // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
    let mut _15: core::panicking::AssertKind; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
    let mut _16: &usize;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let _17: &usize;                     // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let mut _18: &usize;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let _19: &usize;                     // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let mut _20: std::option::Option<std::fmt::Arguments<'_>>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
    scope 1 {
        debug output => _1;              // in scope 1 at ui/codegen/issue-82859-slice-miscompile.rs:17:9: 17:15
        let _7: &usize;                  // in scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        let _8: &usize;                  // in scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        let mut _21: &usize;             // in scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        scope 2 {
            debug left_val => _7;        // in scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
            debug right_val => _8;       // in scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
            let _13: core::panicking::AssertKind; // in scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
            scope 3 {
                debug kind => _13;       // in scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
            }
        }
    }

    bb0: {
        _3 = get_slice() -> bb1;         // scope 0 at ui/codegen/issue-82859-slice-miscompile.rs:17:18: 17:29
                                         // mir::Constant
                                         // + span: ui/codegen/issue-82859-slice-miscompile.rs:17:18: 17:27
                                         // + literal: Const { ty: fn() -> &'static [usize] {get_slice}, val: Value(<ZST>) }
    }

    bb1: {
        _2 = _3;                         // scope 0 at ui/codegen/issue-82859-slice-miscompile.rs:17:18: 17:35
        _1 = Len((*_2));                 // scope 0 at ui/codegen/issue-82859-slice-miscompile.rs:17:18: 17:35
        _5 = &_1;                        // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _21 = const _;                   // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // + literal: Const { ty: &usize, val: Unevaluated(main, [], Some(promoted[0])) }
        _6 = _21;                        // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _4 = (move _5, move _6);         // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _7 = (_4.0: &usize);             // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _8 = (_4.1: &usize);             // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _11 = (*_7);                     // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
        _12 = const 0_usize;             // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
        _10 = Eq(move _11, move _12);    // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
        _9 = Not(move _10);              // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
        switchInt(move _9) -> [0: bb3, otherwise: bb2]; // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    }

    bb2: {
        _13 = const core::panicking::AssertKind::Eq; // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _15 = const core::panicking::AssertKind::Eq; // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _17 = _7;                        // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _16 = _17;                       // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _19 = _8;                        // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _18 = _19;                       // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _20 = Option::<Arguments<'_>>::None; // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
        _14 = core::panicking::assert_failed::<usize, usize>(move _15, move _16, move _18, move _20); // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:53
                                         // + literal: Const { ty: for<'a, 'b, 'c> fn(core::panicking::AssertKind, &'a usize, &'b usize, Option<Arguments<'c>>) -> ! {core::panicking::assert_failed::<usize, usize>}, val: Value(<ZST>) }
    }

    bb3: {
        return;                          // scope 0 at ui/codegen/issue-82859-slice-miscompile.rs:19:2: 19:2
    }
}

promoted[0] in main: &usize = {
    let mut _0: &usize;                  // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _1: usize;                   // in scope 0 at ui/codegen/issue-82859-slice-miscompile.rs:18:24: 18:25

    bb0: {
        _1 = const 0_usize;              // scope 0 at ui/codegen/issue-82859-slice-miscompile.rs:18:24: 18:25
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    }
}
