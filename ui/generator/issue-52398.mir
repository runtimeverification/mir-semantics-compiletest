// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
fn <impl at ui/generator/issue-52398.rs:10:1: 10:7>::test(_1: &A, _2: ()) -> () {
    debug self => _1;                    // in scope 0 at ui/generator/issue-52398.rs:11:13: 11:18
    debug a => _2;                       // in scope 0 at ui/generator/issue-52398.rs:11:20: 11:21
    let mut _0: ();                      // return place in scope 0 at ui/generator/issue-52398.rs:11:27: 11:27

    bb0: {
        return;                          // scope 0 at ui/generator/issue-52398.rs:11:29: 11:29
    }
}

fn main() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/generator/issue-52398.rs:14:11: 14:11
    let _1: std::cell::RefCell<bool>;    // in scope 0 at ui/generator/issue-52398.rs:23:9: 23:10
    let _2: [static generator@ui/generator/issue-52398.rs:24:5: 24:19]; // in scope 0 at ui/generator/issue-52398.rs:24:5: 27:6
    scope 1 {
        debug y => _1;                   // in scope 1 at ui/generator/issue-52398.rs:23:9: 23:10
    }

    bb0: {
        _1 = RefCell::<bool>::new(const true) -> bb1; // scope 0 at ui/generator/issue-52398.rs:23:13: 23:31
                                         // mir::Constant
                                         // + span: ui/generator/issue-52398.rs:23:13: 23:25
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: fn(bool) -> RefCell<bool> {RefCell::<bool>::new}, val: Value(<ZST>) }
    }

    bb1: {
        _2 = [generator@ui/generator/issue-52398.rs:24:5: 24:19 (#0)] { y: move _1 }; // scope 1 at ui/generator/issue-52398.rs:24:5: 27:6
                                         // generator
                                         // + def_id: DefId(0:10 ~ issue_52398[9945]::main::{closure#1})
                                         // + substs: [
                                         //     (),
                                         //     bool,
                                         //     &str,
                                         //     for<'a, 'b, 'c, 'd> {&'a std::cell::RefCell<bool>, std::cell::RefCell<bool>, &'b std::cell::Ref<'c, bool>, std::cell::Ref<'d, bool>, bool, ()},
                                         //     (std::cell::RefCell<bool>,),
                                         // ]
                                         // + movability: Static
        drop(_2) -> bb2;                 // scope 1 at ui/generator/issue-52398.rs:27:6: 27:7
    }

    bb2: {
        return;                          // scope 0 at ui/generator/issue-52398.rs:28:2: 28:2
    }
}

fn main::{closure#0}(_1: Pin<&mut [generator@ui/generator/issue-52398.rs:17:5: 17:12]>, _2: ()) -> GeneratorState<(), ()> {
    let mut _0: std::ops::GeneratorState<(), ()>; // return place in scope 0 at ui/generator/issue-52398.rs:17:5: 19:6
    let _3: ();                          // in scope 0 at ui/generator/issue-52398.rs:18:9: 18:22
    let mut _4: ();                      // in scope 0 at ui/generator/issue-52398.rs:18:16: 18:21
    let mut _5: ();                      // in scope 0 at ui/generator/issue-52398.rs:18:16: 18:21
    let mut _6: &A;                      // in scope 0 at ui/generator/issue-52398.rs:18:9: 18:22
    let mut _7: ();                      // in scope 0 at ui/generator/issue-52398.rs:17:13: 17:13
    let mut _8: u32;                     // in scope 0 at ui/generator/issue-52398.rs:17:5: 19:6
    let mut _9: &mut [generator@ui/generator/issue-52398.rs:17:5: 17:12]; // in scope 0 at ui/generator/issue-52398.rs:17:5: 19:6
    let mut _10: &mut [generator@ui/generator/issue-52398.rs:17:5: 17:12]; // in scope 0 at ui/generator/issue-52398.rs:17:5: 19:6
    let mut _11: &mut [generator@ui/generator/issue-52398.rs:17:5: 17:12]; // in scope 0 at ui/generator/issue-52398.rs:17:5: 19:6
    let mut _12: &mut [generator@ui/generator/issue-52398.rs:17:5: 17:12]; // in scope 0 at ui/generator/issue-52398.rs:17:5: 19:6
    let mut _13: &mut [generator@ui/generator/issue-52398.rs:17:5: 17:12]; // in scope 0 at ui/generator/issue-52398.rs:17:5: 19:6
    let mut _14: &mut [generator@ui/generator/issue-52398.rs:17:5: 17:12]; // in scope 0 at ui/generator/issue-52398.rs:17:5: 19:6

    bb0: {
        _9 = deref_copy (_1.0: &mut [generator@ui/generator/issue-52398.rs:17:5: 17:12]); // scope 0 at ui/generator/issue-52398.rs:17:5: 19:6
        _8 = discriminant((*_9));        // scope 0 at ui/generator/issue-52398.rs:17:5: 19:6
        switchInt(move _8) -> [0: bb1, 1: bb6, 2: bb5, 3: bb4, otherwise: bb7]; // scope 0 at ui/generator/issue-52398.rs:17:5: 19:6
    }

    bb1: {
        _6 = const _;                    // scope 0 at ui/generator/issue-52398.rs:18:9: 18:22
                                         // mir::Constant
                                         // + span: ui/generator/issue-52398.rs:18:9: 18:22
                                         // + literal: Const { ty: &A, val: Unevaluated(main::{closure#0}, [<resume_ty>, <yield_ty>, <return_ty>, <witness>, <upvars>], Some(promoted[0])) }
        _10 = deref_copy (_1.0: &mut [generator@ui/generator/issue-52398.rs:17:5: 17:12]); // scope 0 at ui/generator/issue-52398.rs:18:9: 18:22
        (((*_10) as variant#3).0: &A) = _6; // scope 0 at ui/generator/issue-52398.rs:18:9: 18:22
        _5 = ();                         // scope 0 at ui/generator/issue-52398.rs:18:16: 18:21
        _0 = GeneratorState::<(), ()>::Yielded(move _5); // scope 0 at ui/generator/issue-52398.rs:18:16: 18:21
        _11 = deref_copy (_1.0: &mut [generator@ui/generator/issue-52398.rs:17:5: 17:12]); // scope 0 at ui/generator/issue-52398.rs:18:16: 18:21
        discriminant((*_11)) = 3;        // scope 0 at ui/generator/issue-52398.rs:18:16: 18:21
        return;                          // scope 0 at ui/generator/issue-52398.rs:18:16: 18:21
    }

    bb2: {
        _7 = const ();                   // scope 0 at ui/generator/issue-52398.rs:17:13: 19:6
        _0 = GeneratorState::<(), ()>::Complete(move _7); // scope 0 at ui/generator/issue-52398.rs:19:6: 19:6
        _13 = deref_copy (_1.0: &mut [generator@ui/generator/issue-52398.rs:17:5: 17:12]); // scope 0 at ui/generator/issue-52398.rs:19:6: 19:6
        discriminant((*_13)) = 1;        // scope 0 at ui/generator/issue-52398.rs:19:6: 19:6
        return;                          // scope 0 at ui/generator/issue-52398.rs:19:6: 19:6
    }

    bb3 (cleanup): {
        _14 = deref_copy (_1.0: &mut [generator@ui/generator/issue-52398.rs:17:5: 17:12]); // scope 0 at ui/generator/issue-52398.rs:17:5: 19:6
        discriminant((*_14)) = 2;        // scope 0 at ui/generator/issue-52398.rs:17:5: 19:6
        resume;                          // scope 0 at ui/generator/issue-52398.rs:17:5: 19:6
    }

    bb4: {
        _4 = move _2;                    // scope 0 at ui/generator/issue-52398.rs:17:5: 19:6
        _12 = deref_copy (_1.0: &mut [generator@ui/generator/issue-52398.rs:17:5: 17:12]); // scope 0 at ui/generator/issue-52398.rs:18:9: 18:22
        _3 = A::test(move (((*_12) as variant#3).0: &A), move _4) -> [return: bb2, unwind: bb3]; // scope 0 at ui/generator/issue-52398.rs:18:9: 18:22
                                         // mir::Constant
                                         // + span: ui/generator/issue-52398.rs:18:11: 18:15
                                         // + literal: Const { ty: for<'a> fn(&'a A, ()) {A::test}, val: Value(<ZST>) }
    }

    bb5: {
        assert(const false, "generator resumed after panicking") -> bb5; // scope 0 at ui/generator/issue-52398.rs:17:5: 19:6
    }

    bb6: {
        assert(const false, "generator resumed after completion") -> bb6; // scope 0 at ui/generator/issue-52398.rs:17:5: 19:6
    }

    bb7: {
        unreachable;                     // scope 0 at ui/generator/issue-52398.rs:17:5: 19:6
    }
}

promoted[0] in main::{closure#0}: &A = {
    let mut _0: &A;                      // return place in scope 0 at ui/generator/issue-52398.rs:18:9: 18:22
    let mut _1: A;                       // in scope 0 at ui/generator/issue-52398.rs:18:9: 18:10

    bb0: {
        _1 = A;                          // scope 0 at ui/generator/issue-52398.rs:18:9: 18:10
        _0 = &_1;                        // scope 0 at ui/generator/issue-52398.rs:18:9: 18:22
        return;                          // scope 0 at ui/generator/issue-52398.rs:18:9: 18:22
    }
}

fn main::{closure#1}(_1: Pin<&mut [static generator@ui/generator/issue-52398.rs:24:5: 24:19]>, _2: ()) -> GeneratorState<bool, &str> {
    debug y => ((*(_1.0: &mut [static generator@ui/generator/issue-52398.rs:24:5: 24:19])).0: std::cell::RefCell<bool>); // in scope 0 at ui/generator/issue-52398.rs:23:9: 23:10
    let mut _0: std::ops::GeneratorState<bool, &str>; // return place in scope 0 at ui/generator/issue-52398.rs:24:5: 27:6
    let mut _3: bool;                    // in scope 0 at ui/generator/issue-52398.rs:25:15: 25:26
    let mut _4: &bool;                   // in scope 0 at ui/generator/issue-52398.rs:25:15: 25:26
    let mut _5: &std::cell::Ref<'_, bool>; // in scope 0 at ui/generator/issue-52398.rs:25:16: 25:26
    let mut _6: &std::cell::RefCell<bool>; // in scope 0 at ui/generator/issue-52398.rs:25:16: 25:26
    let mut _7: &str;                    // in scope 0 at ui/generator/issue-52398.rs:24:20: 24:20
    let mut _8: u32;                     // in scope 0 at ui/generator/issue-52398.rs:24:5: 27:6
    let mut _9: &mut [static generator@ui/generator/issue-52398.rs:24:5: 24:19]; // in scope 0 at ui/generator/issue-52398.rs:24:5: 27:6
    let mut _10: &mut [static generator@ui/generator/issue-52398.rs:24:5: 24:19]; // in scope 0 at ui/generator/issue-52398.rs:24:5: 27:6
    let mut _11: &mut [static generator@ui/generator/issue-52398.rs:24:5: 24:19]; // in scope 0 at ui/generator/issue-52398.rs:24:5: 27:6
    let mut _12: &mut [static generator@ui/generator/issue-52398.rs:24:5: 24:19]; // in scope 0 at ui/generator/issue-52398.rs:24:5: 27:6
    let mut _13: &mut [static generator@ui/generator/issue-52398.rs:24:5: 24:19]; // in scope 0 at ui/generator/issue-52398.rs:24:5: 27:6
    let mut _14: &mut [static generator@ui/generator/issue-52398.rs:24:5: 24:19]; // in scope 0 at ui/generator/issue-52398.rs:24:5: 27:6
    let mut _15: &mut [static generator@ui/generator/issue-52398.rs:24:5: 24:19]; // in scope 0 at ui/generator/issue-52398.rs:24:5: 27:6
    let mut _16: &mut [static generator@ui/generator/issue-52398.rs:24:5: 24:19]; // in scope 0 at ui/generator/issue-52398.rs:24:5: 27:6
    let mut _17: &mut [static generator@ui/generator/issue-52398.rs:24:5: 24:19]; // in scope 0 at ui/generator/issue-52398.rs:24:5: 27:6

    bb0: {
        _9 = deref_copy (_1.0: &mut [static generator@ui/generator/issue-52398.rs:24:5: 24:19]); // scope 0 at ui/generator/issue-52398.rs:24:5: 27:6
        _8 = discriminant((*_9));        // scope 0 at ui/generator/issue-52398.rs:24:5: 27:6
        switchInt(move _8) -> [0: bb1, 1: bb9, 2: bb8, 3: bb7, otherwise: bb10]; // scope 0 at ui/generator/issue-52398.rs:24:5: 27:6
    }

    bb1: {
        _10 = deref_copy (_1.0: &mut [static generator@ui/generator/issue-52398.rs:24:5: 24:19]); // scope 0 at ui/generator/issue-52398.rs:25:16: 25:26
        _6 = &((*_10).0: std::cell::RefCell<bool>); // scope 0 at ui/generator/issue-52398.rs:25:16: 25:26
        _11 = deref_copy (_1.0: &mut [static generator@ui/generator/issue-52398.rs:24:5: 24:19]); // scope 0 at ui/generator/issue-52398.rs:25:16: 25:26
        (((*_11) as variant#3).0: std::cell::Ref<'_, bool>) = RefCell::<bool>::borrow(move _6) -> [return: bb2, unwind: bb6]; // scope 0 at ui/generator/issue-52398.rs:25:16: 25:26
                                         // mir::Constant
                                         // + span: ui/generator/issue-52398.rs:25:18: 25:24
                                         // + literal: Const { ty: for<'a> fn(&'a RefCell<bool>) -> Ref<'a, bool> {RefCell::<bool>::borrow}, val: Value(<ZST>) }
    }

    bb2: {
        _12 = deref_copy (_1.0: &mut [static generator@ui/generator/issue-52398.rs:24:5: 24:19]); // scope 0 at ui/generator/issue-52398.rs:25:16: 25:26
        _5 = &(((*_12) as variant#3).0: std::cell::Ref<'_, bool>); // scope 0 at ui/generator/issue-52398.rs:25:16: 25:26
        _4 = <Ref<'_, bool> as Deref>::deref(move _5) -> [return: bb3, unwind: bb5]; // scope 0 at ui/generator/issue-52398.rs:25:15: 25:26
                                         // mir::Constant
                                         // + span: ui/generator/issue-52398.rs:25:15: 25:26
                                         // + literal: Const { ty: for<'a> fn(&'a Ref<'_, bool>) -> &'a <Ref<'_, bool> as Deref>::Target {<Ref<'_, bool> as Deref>::deref}, val: Value(<ZST>) }
    }

    bb3: {
        _3 = (*_4);                      // scope 0 at ui/generator/issue-52398.rs:25:15: 25:26
        _0 = GeneratorState::<bool, &str>::Yielded(move _3); // scope 0 at ui/generator/issue-52398.rs:25:9: 25:26
        _13 = deref_copy (_1.0: &mut [static generator@ui/generator/issue-52398.rs:24:5: 24:19]); // scope 0 at ui/generator/issue-52398.rs:25:9: 25:26
        discriminant((*_13)) = 3;        // scope 0 at ui/generator/issue-52398.rs:25:9: 25:26
        return;                          // scope 0 at ui/generator/issue-52398.rs:25:9: 25:26
    }

    bb4: {
        _7 = const "Done";               // scope 0 at ui/generator/issue-52398.rs:26:16: 26:22
                                         // mir::Constant
                                         // + span: ui/generator/issue-52398.rs:26:16: 26:22
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = GeneratorState::<bool, &str>::Complete(move _7); // scope 0 at ui/generator/issue-52398.rs:27:6: 27:6
        _15 = deref_copy (_1.0: &mut [static generator@ui/generator/issue-52398.rs:24:5: 24:19]); // scope 0 at ui/generator/issue-52398.rs:27:6: 27:6
        discriminant((*_15)) = 1;        // scope 0 at ui/generator/issue-52398.rs:27:6: 27:6
        return;                          // scope 0 at ui/generator/issue-52398.rs:27:6: 27:6
    }

    bb5 (cleanup): {
        _16 = deref_copy (_1.0: &mut [static generator@ui/generator/issue-52398.rs:24:5: 24:19]); // scope 0 at ui/generator/issue-52398.rs:25:26: 25:27
        drop((((*_16) as variant#3).0: std::cell::Ref<'_, bool>)) -> bb6; // scope 0 at ui/generator/issue-52398.rs:25:26: 25:27
    }

    bb6 (cleanup): {
        _17 = deref_copy (_1.0: &mut [static generator@ui/generator/issue-52398.rs:24:5: 24:19]); // scope 0 at ui/generator/issue-52398.rs:24:5: 27:6
        discriminant((*_17)) = 2;        // scope 0 at ui/generator/issue-52398.rs:24:5: 27:6
        resume;                          // scope 0 at ui/generator/issue-52398.rs:24:5: 27:6
    }

    bb7: {
        _14 = deref_copy (_1.0: &mut [static generator@ui/generator/issue-52398.rs:24:5: 24:19]); // scope 0 at ui/generator/issue-52398.rs:25:26: 25:27
        drop((((*_14) as variant#3).0: std::cell::Ref<'_, bool>)) -> [return: bb4, unwind: bb6]; // scope 0 at ui/generator/issue-52398.rs:25:26: 25:27
    }

    bb8: {
        assert(const false, "generator resumed after panicking") -> bb8; // scope 0 at ui/generator/issue-52398.rs:24:5: 27:6
    }

    bb9: {
        assert(const false, "generator resumed after completion") -> bb9; // scope 0 at ui/generator/issue-52398.rs:24:5: 27:6
    }

    bb10: {
        unreachable;                     // scope 0 at ui/generator/issue-52398.rs:24:5: 27:6
    }
}
