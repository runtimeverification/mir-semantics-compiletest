// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
fn main() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/generator/static-generators.rs:8:11: 8:11
    let mut _1: [static generator@ui/generator/static-generators.rs:9:25: 9:34]; // in scope 0 at ui/generator/static-generators.rs:9:9: 9:22
    let mut _3: &mut [static generator@ui/generator/static-generators.rs:9:25: 9:34]; // in scope 0 at ui/generator/static-generators.rs:17:53: 17:67
    let mut _4: (&std::ops::GeneratorState<(), ()>, &std::ops::GeneratorState<(), ()>); // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _5: &std::ops::GeneratorState<(), ()>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let _6: std::ops::GeneratorState<(), ()>; // in scope 0 at ui/generator/static-generators.rs:18:16: 18:45
    let mut _7: std::pin::Pin<&mut [static generator@ui/generator/static-generators.rs:9:25: 9:34]>; // in scope 0 at ui/generator/static-generators.rs:18:16: 18:34
    let mut _8: &mut std::pin::Pin<&mut [static generator@ui/generator/static-generators.rs:9:25: 9:34]>; // in scope 0 at ui/generator/static-generators.rs:18:16: 18:34
    let mut _9: ();                      // in scope 0 at ui/generator/static-generators.rs:18:42: 18:44
    let mut _10: &std::ops::GeneratorState<(), ()>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _13: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    let mut _14: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
    let mut _15: &std::ops::GeneratorState<(), ()>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
    let mut _16: &std::ops::GeneratorState<(), ()>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
    let _18: !;                          // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
    let mut _19: core::panicking::AssertKind; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
    let mut _20: &std::ops::GeneratorState<(), ()>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let _21: &std::ops::GeneratorState<(), ()>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let mut _22: &std::ops::GeneratorState<(), ()>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let _23: &std::ops::GeneratorState<(), ()>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let mut _24: std::option::Option<std::fmt::Arguments<'_>>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
    let mut _25: (&std::ops::GeneratorState<(), ()>, &std::ops::GeneratorState<(), ()>); // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _26: &std::ops::GeneratorState<(), ()>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let _27: std::ops::GeneratorState<(), ()>; // in scope 0 at ui/generator/static-generators.rs:19:16: 19:45
    let mut _28: std::pin::Pin<&mut [static generator@ui/generator/static-generators.rs:9:25: 9:34]>; // in scope 0 at ui/generator/static-generators.rs:19:16: 19:34
    let mut _29: &mut std::pin::Pin<&mut [static generator@ui/generator/static-generators.rs:9:25: 9:34]>; // in scope 0 at ui/generator/static-generators.rs:19:16: 19:34
    let mut _30: ();                     // in scope 0 at ui/generator/static-generators.rs:19:42: 19:44
    let mut _31: &std::ops::GeneratorState<(), ()>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _34: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    let mut _35: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
    let mut _36: &std::ops::GeneratorState<(), ()>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
    let mut _37: &std::ops::GeneratorState<(), ()>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
    let _39: !;                          // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
    let mut _40: core::panicking::AssertKind; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
    let mut _41: &std::ops::GeneratorState<(), ()>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let _42: &std::ops::GeneratorState<(), ()>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let mut _43: &std::ops::GeneratorState<(), ()>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let _44: &std::ops::GeneratorState<(), ()>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let mut _45: std::option::Option<std::fmt::Arguments<'_>>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
    scope 1 {
        debug generator => _1;           // in scope 1 at ui/generator/static-generators.rs:9:9: 9:22
        let mut _2: std::pin::Pin<&mut [static generator@ui/generator/static-generators.rs:9:25: 9:34]>; // in scope 1 at ui/generator/static-generators.rs:17:9: 17:22
        scope 2 {
            debug generator => _2;       // in scope 2 at ui/generator/static-generators.rs:17:9: 17:22
            let _11: &std::ops::GeneratorState<(), ()>; // in scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
            let _12: &std::ops::GeneratorState<(), ()>; // in scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
            let _32: &std::ops::GeneratorState<(), ()>; // in scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
            let _33: &std::ops::GeneratorState<(), ()>; // in scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
            let mut _46: &std::ops::GeneratorState<(), ()>; // in scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
            let mut _47: &std::ops::GeneratorState<(), ()>; // in scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
            scope 4 {
                debug left_val => _11;   // in scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
                debug right_val => _12;  // in scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
                let _17: core::panicking::AssertKind; // in scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                scope 5 {
                    debug kind => _17;   // in scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                }
            }
            scope 6 {
                debug left_val => _32;   // in scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
                debug right_val => _33;  // in scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
                let _38: core::panicking::AssertKind; // in scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                scope 7 {
                    debug kind => _38;   // in scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                }
            }
        }
        scope 3 {
        }
    }

    bb0: {
        _1 = [generator@ui/generator/static-generators.rs:9:25: 9:34 (#0)]; // scope 0 at ui/generator/static-generators.rs:9:25: 14:6
                                         // generator
                                         // + def_id: DefId(0:8 ~ static_generators[8492]::main::{closure#0})
                                         // + substs: [
                                         //     (),
                                         //     (),
                                         //     (),
                                         //     for<'a> {bool, &'a bool, ()},
                                         //     (),
                                         // ]
                                         // + movability: Static
        _3 = &mut _1;                    // scope 3 at ui/generator/static-generators.rs:17:53: 17:67
        _2 = Pin::<&mut [static generator@ui/generator/static-generators.rs:9:25: 9:34]>::new_unchecked(move _3) -> bb1; // scope 3 at ui/generator/static-generators.rs:17:34: 17:68
                                         // mir::Constant
                                         // + span: ui/generator/static-generators.rs:17:34: 17:52
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: unsafe fn(&mut [static generator@ui/generator/static-generators.rs:9:25: 9:34]) -> Pin<&mut [static generator@ui/generator/static-generators.rs:9:25: 9:34]> {Pin::<&mut [static generator@ui/generator/static-generators.rs:9:25: 9:34]>::new_unchecked}, val: Value(<ZST>) }
    }

    bb1: {
        _8 = &mut _2;                    // scope 2 at ui/generator/static-generators.rs:18:16: 18:34
        _7 = Pin::<&mut [static generator@ui/generator/static-generators.rs:9:25: 9:34]>::as_mut(move _8) -> bb2; // scope 2 at ui/generator/static-generators.rs:18:16: 18:34
                                         // mir::Constant
                                         // + span: ui/generator/static-generators.rs:18:26: 18:32
                                         // + literal: Const { ty: for<'a> fn(&'a mut Pin<&mut [static generator@ui/generator/static-generators.rs:9:25: 9:34]>) -> Pin<&'a mut <&mut [static generator@ui/generator/static-generators.rs:9:25: 9:34] as Deref>::Target> {Pin::<&mut [static generator@ui/generator/static-generators.rs:9:25: 9:34]>::as_mut}, val: Value(<ZST>) }
    }

    bb2: {
        _6 = <[static generator@ui/generator/static-generators.rs:9:25: 9:34] as Generator>::resume(move _7, move _9) -> bb3; // scope 2 at ui/generator/static-generators.rs:18:16: 18:45
                                         // mir::Constant
                                         // + span: ui/generator/static-generators.rs:18:35: 18:41
                                         // + literal: Const { ty: for<'a> fn(Pin<&'a mut [static generator@ui/generator/static-generators.rs:9:25: 9:34]>, ()) -> GeneratorState<<[static generator@ui/generator/static-generators.rs:9:25: 9:34] as Generator>::Yield, <[static generator@ui/generator/static-generators.rs:9:25: 9:34] as Generator>::Return> {<[static generator@ui/generator/static-generators.rs:9:25: 9:34] as Generator>::resume}, val: Value(<ZST>) }
    }

    bb3: {
        _5 = &_6;                        // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _47 = const _;                   // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // + literal: Const { ty: &GeneratorState<(), ()>, val: Unevaluated(main, [], Some(promoted[1])) }
        _10 = _47;                       // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _4 = (move _5, move _10);        // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _11 = (_4.0: &std::ops::GeneratorState<(), ()>); // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _12 = (_4.1: &std::ops::GeneratorState<(), ()>); // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _15 = _11;                       // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
        _16 = _12;                       // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
        _14 = <GeneratorState<(), ()> as PartialEq>::eq(move _15, move _16) -> bb4; // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a GeneratorState<(), ()>, &'b GeneratorState<(), ()>) -> bool {<GeneratorState<(), ()> as PartialEq>::eq}, val: Value(<ZST>) }
    }

    bb4: {
        _13 = Not(move _14);             // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
        switchInt(move _13) -> [0: bb6, otherwise: bb5]; // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    }

    bb5: {
        _17 = const core::panicking::AssertKind::Eq; // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _19 = const core::panicking::AssertKind::Eq; // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _21 = _11;                       // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _20 = _21;                       // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _23 = _12;                       // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _22 = _23;                       // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _24 = Option::<Arguments<'_>>::None; // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
        _18 = core::panicking::assert_failed::<GeneratorState<(), ()>, GeneratorState<(), ()>>(move _19, move _20, move _22, move _24); // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:53
                                         // + literal: Const { ty: for<'a, 'b, 'c> fn(core::panicking::AssertKind, &'a GeneratorState<(), ()>, &'b GeneratorState<(), ()>, Option<Arguments<'c>>) -> ! {core::panicking::assert_failed::<GeneratorState<(), ()>, GeneratorState<(), ()>>}, val: Value(<ZST>) }
    }

    bb6: {
        _29 = &mut _2;                   // scope 2 at ui/generator/static-generators.rs:19:16: 19:34
        _28 = Pin::<&mut [static generator@ui/generator/static-generators.rs:9:25: 9:34]>::as_mut(move _29) -> bb7; // scope 2 at ui/generator/static-generators.rs:19:16: 19:34
                                         // mir::Constant
                                         // + span: ui/generator/static-generators.rs:19:26: 19:32
                                         // + literal: Const { ty: for<'a> fn(&'a mut Pin<&mut [static generator@ui/generator/static-generators.rs:9:25: 9:34]>) -> Pin<&'a mut <&mut [static generator@ui/generator/static-generators.rs:9:25: 9:34] as Deref>::Target> {Pin::<&mut [static generator@ui/generator/static-generators.rs:9:25: 9:34]>::as_mut}, val: Value(<ZST>) }
    }

    bb7: {
        _27 = <[static generator@ui/generator/static-generators.rs:9:25: 9:34] as Generator>::resume(move _28, move _30) -> bb8; // scope 2 at ui/generator/static-generators.rs:19:16: 19:45
                                         // mir::Constant
                                         // + span: ui/generator/static-generators.rs:19:35: 19:41
                                         // + literal: Const { ty: for<'a> fn(Pin<&'a mut [static generator@ui/generator/static-generators.rs:9:25: 9:34]>, ()) -> GeneratorState<<[static generator@ui/generator/static-generators.rs:9:25: 9:34] as Generator>::Yield, <[static generator@ui/generator/static-generators.rs:9:25: 9:34] as Generator>::Return> {<[static generator@ui/generator/static-generators.rs:9:25: 9:34] as Generator>::resume}, val: Value(<ZST>) }
    }

    bb8: {
        _26 = &_27;                      // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _46 = const _;                   // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // + literal: Const { ty: &GeneratorState<(), ()>, val: Unevaluated(main, [], Some(promoted[0])) }
        _31 = _46;                       // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _25 = (move _26, move _31);      // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _32 = (_25.0: &std::ops::GeneratorState<(), ()>); // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _33 = (_25.1: &std::ops::GeneratorState<(), ()>); // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _36 = _32;                       // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
        _37 = _33;                       // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
        _35 = <GeneratorState<(), ()> as PartialEq>::eq(move _36, move _37) -> bb9; // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a GeneratorState<(), ()>, &'b GeneratorState<(), ()>) -> bool {<GeneratorState<(), ()> as PartialEq>::eq}, val: Value(<ZST>) }
    }

    bb9: {
        _34 = Not(move _35);             // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
        switchInt(move _34) -> [0: bb11, otherwise: bb10]; // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    }

    bb10: {
        _38 = const core::panicking::AssertKind::Eq; // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _40 = const core::panicking::AssertKind::Eq; // scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _42 = _32;                       // scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _41 = _42;                       // scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _44 = _33;                       // scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _43 = _44;                       // scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _45 = Option::<Arguments<'_>>::None; // scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
        _39 = core::panicking::assert_failed::<GeneratorState<(), ()>, GeneratorState<(), ()>>(move _40, move _41, move _43, move _45); // scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:53
                                         // + literal: Const { ty: for<'a, 'b, 'c> fn(core::panicking::AssertKind, &'a GeneratorState<(), ()>, &'b GeneratorState<(), ()>, Option<Arguments<'c>>) -> ! {core::panicking::assert_failed::<GeneratorState<(), ()>, GeneratorState<(), ()>>}, val: Value(<ZST>) }
    }

    bb11: {
        return;                          // scope 0 at ui/generator/static-generators.rs:20:2: 20:2
    }
}

promoted[0] in main: &GeneratorState<(), ()> = {
    let mut _0: &std::ops::GeneratorState<(), ()>; // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _1: std::ops::GeneratorState<(), ()>; // in scope 0 at ui/generator/static-generators.rs:19:47: 19:75
    let mut _2: ();                      // in scope 0 at ui/generator/static-generators.rs:19:72: 19:74

    bb0: {
        _2 = ();                         // scope 0 at ui/generator/static-generators.rs:19:72: 19:74
        _1 = GeneratorState::<(), ()>::Complete(move _2); // scope 0 at ui/generator/static-generators.rs:19:47: 19:75
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    }
}

promoted[1] in main: &GeneratorState<(), ()> = {
    let mut _0: &std::ops::GeneratorState<(), ()>; // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _1: std::ops::GeneratorState<(), ()>; // in scope 0 at ui/generator/static-generators.rs:18:47: 18:74
    let mut _2: ();                      // in scope 0 at ui/generator/static-generators.rs:18:71: 18:73

    bb0: {
        _2 = ();                         // scope 0 at ui/generator/static-generators.rs:18:71: 18:73
        _1 = GeneratorState::<(), ()>::Yielded(move _2); // scope 0 at ui/generator/static-generators.rs:18:47: 18:74
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    }
}

fn main::{closure#0}(_1: Pin<&mut [static generator@ui/generator/static-generators.rs:9:25: 9:34]>, _2: ()) -> GeneratorState<(), ()> {
    let mut _0: std::ops::GeneratorState<(), ()>; // return place in scope 0 at ui/generator/static-generators.rs:9:25: 14:6
    let mut _3: ();                      // in scope 0 at ui/generator/static-generators.rs:12:9: 12:14
    let mut _4: (&*const bool, &*const bool); // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _5: &*const bool;            // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let _6: *const bool;                 // in scope 0 at ui/generator/static-generators.rs:13:20: 13:33
    let mut _7: &*const bool;            // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let _8: *const bool;                 // in scope 0 at ui/generator/static-generators.rs:13:35: 13:49
    let _9: &bool;                       // in scope 0 at ui/generator/static-generators.rs:13:35: 13:37
    let mut _12: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    let mut _13: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
    let mut _14: *const bool;            // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
    let mut _15: *const bool;            // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
    let _17: !;                          // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
    let mut _18: core::panicking::AssertKind; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
    let mut _19: &*const bool;           // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let _20: &*const bool;               // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let mut _21: &*const bool;           // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let _22: &*const bool;               // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let mut _23: std::option::Option<std::fmt::Arguments<'_>>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
    let mut _24: ();                     // in scope 0 at ui/generator/static-generators.rs:9:35: 9:35
    let mut _25: u32;                    // in scope 0 at ui/generator/static-generators.rs:9:25: 14:6
    let mut _26: &mut [static generator@ui/generator/static-generators.rs:9:25: 9:34]; // in scope 0 at ui/generator/static-generators.rs:9:25: 14:6
    let mut _27: &mut [static generator@ui/generator/static-generators.rs:9:25: 9:34]; // in scope 0 at ui/generator/static-generators.rs:9:25: 14:6
    let mut _28: &mut [static generator@ui/generator/static-generators.rs:9:25: 9:34]; // in scope 0 at ui/generator/static-generators.rs:9:25: 14:6
    let mut _29: &mut [static generator@ui/generator/static-generators.rs:9:25: 9:34]; // in scope 0 at ui/generator/static-generators.rs:9:25: 14:6
    let mut _30: &mut [static generator@ui/generator/static-generators.rs:9:25: 9:34]; // in scope 0 at ui/generator/static-generators.rs:9:25: 14:6
    let mut _31: &mut [static generator@ui/generator/static-generators.rs:9:25: 9:34]; // in scope 0 at ui/generator/static-generators.rs:9:25: 14:6
    let mut _32: &bool;                  // in scope 0 at ui/generator/static-generators.rs:9:25: 14:6
    let mut _33: &mut [static generator@ui/generator/static-generators.rs:9:25: 9:34]; // in scope 0 at ui/generator/static-generators.rs:9:25: 14:6
    let mut _34: &mut [static generator@ui/generator/static-generators.rs:9:25: 9:34]; // in scope 0 at ui/generator/static-generators.rs:9:25: 14:6
    let mut _35: &mut [static generator@ui/generator/static-generators.rs:9:25: 9:34]; // in scope 0 at ui/generator/static-generators.rs:9:25: 14:6
    scope 1 {
        debug a => (((*(_1.0: &mut [static generator@ui/generator/static-generators.rs:9:25: 9:34])) as variant#3).0: bool); // in scope 1 at ui/generator/static-generators.rs:10:13: 10:14
        scope 2 {
            debug b => (((*(_1.0: &mut [static generator@ui/generator/static-generators.rs:9:25: 9:34])) as variant#3).1: &bool); // in scope 2 at ui/generator/static-generators.rs:11:13: 11:14
            let _10: &*const bool;       // in scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
            let _11: &*const bool;       // in scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
            scope 3 {
                debug left_val => _10;   // in scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
                debug right_val => _11;  // in scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
                let _16: core::panicking::AssertKind; // in scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                scope 4 {
                    debug kind => _16;   // in scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                }
            }
        }
    }

    bb0: {
        _26 = deref_copy (_1.0: &mut [static generator@ui/generator/static-generators.rs:9:25: 9:34]); // scope 0 at ui/generator/static-generators.rs:9:25: 14:6
        _25 = discriminant((*_26));      // scope 0 at ui/generator/static-generators.rs:9:25: 14:6
        switchInt(move _25) -> [0: bb1, 1: bb7, 2: bb6, 3: bb5, otherwise: bb8]; // scope 0 at ui/generator/static-generators.rs:9:25: 14:6
    }

    bb1: {
        _27 = deref_copy (_1.0: &mut [static generator@ui/generator/static-generators.rs:9:25: 9:34]); // scope 0 at ui/generator/static-generators.rs:10:17: 10:21
        (((*_27) as variant#3).0: bool) = const true; // scope 0 at ui/generator/static-generators.rs:10:17: 10:21
        _28 = deref_copy (_1.0: &mut [static generator@ui/generator/static-generators.rs:9:25: 9:34]); // scope 1 at ui/generator/static-generators.rs:11:17: 11:19
        _29 = deref_copy (_1.0: &mut [static generator@ui/generator/static-generators.rs:9:25: 9:34]); // scope 1 at ui/generator/static-generators.rs:11:17: 11:19
        (((*_28) as variant#3).1: &bool) = &(((*_29) as variant#3).0: bool); // scope 1 at ui/generator/static-generators.rs:11:17: 11:19
        _3 = ();                         // scope 2 at ui/generator/static-generators.rs:12:9: 12:14
        _0 = GeneratorState::<(), ()>::Yielded(move _3); // scope 2 at ui/generator/static-generators.rs:12:9: 12:14
        _30 = deref_copy (_1.0: &mut [static generator@ui/generator/static-generators.rs:9:25: 9:34]); // scope 2 at ui/generator/static-generators.rs:12:9: 12:14
        discriminant((*_30)) = 3;        // scope 2 at ui/generator/static-generators.rs:12:9: 12:14
        return;                          // scope 2 at ui/generator/static-generators.rs:12:9: 12:14
    }

    bb2: {
        _16 = core::panicking::AssertKind::Eq; // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
        _18 = move _16;                  // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
        _20 = _10;                       // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _19 = _20;                       // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _22 = _11;                       // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _21 = _22;                       // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _23 = Option::<Arguments<'_>>::None; // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
        _17 = core::panicking::assert_failed::<*const bool, *const bool>(move _18, move _19, move _21, move _23) -> bb4; // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:53
                                         // + literal: Const { ty: for<'a, 'b, 'c> fn(core::panicking::AssertKind, &'a *const bool, &'b *const bool, Option<Arguments<'c>>) -> ! {core::panicking::assert_failed::<*const bool, *const bool>}, val: Value(<ZST>) }
    }

    bb3: {
        _24 = const ();                  // scope 0 at ui/generator/static-generators.rs:9:35: 14:6
        _0 = GeneratorState::<(), ()>::Complete(move _24); // scope 0 at ui/generator/static-generators.rs:14:6: 14:6
        _34 = deref_copy (_1.0: &mut [static generator@ui/generator/static-generators.rs:9:25: 9:34]); // scope 0 at ui/generator/static-generators.rs:14:6: 14:6
        discriminant((*_34)) = 1;        // scope 0 at ui/generator/static-generators.rs:14:6: 14:6
        return;                          // scope 0 at ui/generator/static-generators.rs:14:6: 14:6
    }

    bb4 (cleanup): {
        _35 = deref_copy (_1.0: &mut [static generator@ui/generator/static-generators.rs:9:25: 9:34]); // scope 0 at ui/generator/static-generators.rs:9:25: 14:6
        discriminant((*_35)) = 2;        // scope 0 at ui/generator/static-generators.rs:9:25: 14:6
        resume;                          // scope 0 at ui/generator/static-generators.rs:9:25: 14:6
    }

    bb5: {
        _31 = deref_copy (_1.0: &mut [static generator@ui/generator/static-generators.rs:9:25: 9:34]); // scope 2 at ui/generator/static-generators.rs:13:20: 13:21
        _32 = deref_copy (((*_31) as variant#3).1: &bool); // scope 2 at ui/generator/static-generators.rs:13:20: 13:21
        _6 = &raw const (*_32);          // scope 2 at ui/generator/static-generators.rs:13:20: 13:21
        _5 = &_6;                        // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _33 = deref_copy (_1.0: &mut [static generator@ui/generator/static-generators.rs:9:25: 9:34]); // scope 2 at ui/generator/static-generators.rs:13:35: 13:37
        _9 = &(((*_33) as variant#3).0: bool); // scope 2 at ui/generator/static-generators.rs:13:35: 13:37
        _8 = &raw const (*_9);           // scope 2 at ui/generator/static-generators.rs:13:35: 13:37
        _7 = &_8;                        // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _4 = (move _5, move _7);         // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _10 = (_4.0: &*const bool);      // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _11 = (_4.1: &*const bool);      // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _14 = (*_10);                    // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
        _15 = (*_11);                    // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
        _13 = Eq(move _14, move _15);    // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
        _12 = Not(move _13);             // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
        switchInt(move _12) -> [0: bb3, otherwise: bb2]; // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    }

    bb6: {
        assert(const false, "generator resumed after panicking") -> bb6; // scope 0 at ui/generator/static-generators.rs:9:25: 14:6
    }

    bb7: {
        assert(const false, "generator resumed after completion") -> bb7; // scope 0 at ui/generator/static-generators.rs:9:25: 14:6
    }

    bb8: {
        unreachable;                     // scope 0 at ui/generator/static-generators.rs:9:25: 14:6
    }
}
