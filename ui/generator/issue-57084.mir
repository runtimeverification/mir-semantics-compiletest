// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
fn with(_1: F) -> impl Generator<Yield = (), Return = ()> {
    debug f => _1;                       // in scope 0 at ui/generator/issue-57084.rs:8:12: 8:13
    let mut _0: impl std::ops::Generator<Yield = (), Return = ()>; // return place in scope 0 at ui/generator/issue-57084.rs:8:21: 8:56

    bb0: {
        _0 = [generator@ui/generator/issue-57084.rs:11:5: 11:12 (#0)] { f: move _1 }; // scope 0 at ui/generator/issue-57084.rs:11:5: 17:6
                                         // generator
                                         // + def_id: DefId(0:6 ~ issue_57084[0f99]::with::{closure#0})
                                         // + substs: [
                                         //     F,
                                         //     (),
                                         //     (),
                                         //     (),
                                         //     for<'a> {&'a F, F, ()},
                                         //     (F,),
                                         // ]
                                         // + movability: Movable
        return;                          // scope 0 at ui/generator/issue-57084.rs:18:2: 18:2
    }
}

fn with::{closure#0}(_1: Pin<&mut [generator@ui/generator/issue-57084.rs:11:5: 11:12]>, _2: ()) -> GeneratorState<(), ()> {
    debug f => ((*(_1.0: &mut [generator@ui/generator/issue-57084.rs:11:5: 11:12])).0: F); // in scope 0 at ui/generator/issue-57084.rs:8:12: 8:13
    let mut _0: std::ops::GeneratorState<(), ()>; // return place in scope 0 at ui/generator/issue-57084.rs:11:5: 17:6
    let mut _3: ();                      // in scope 0 at ui/generator/issue-57084.rs:13:19: 13:22
    let mut _4: &F;                      // in scope 0 at ui/generator/issue-57084.rs:13:19: 13:20
    let mut _5: ();                      // in scope 0 at ui/generator/issue-57084.rs:13:19: 13:22
    let mut _6: ();                      // in scope 0 at ui/generator/issue-57084.rs:14:22: 14:27
    let mut _7: u32;                     // in scope 0 at ui/generator/issue-57084.rs:11:5: 17:6
    let mut _8: &mut [generator@ui/generator/issue-57084.rs:11:5: 11:12]; // in scope 0 at ui/generator/issue-57084.rs:11:5: 17:6
    let mut _9: &mut [generator@ui/generator/issue-57084.rs:11:5: 11:12]; // in scope 0 at ui/generator/issue-57084.rs:11:5: 17:6
    let mut _10: &mut [generator@ui/generator/issue-57084.rs:11:5: 11:12]; // in scope 0 at ui/generator/issue-57084.rs:11:5: 17:6
    let mut _11: &mut [generator@ui/generator/issue-57084.rs:11:5: 11:12]; // in scope 0 at ui/generator/issue-57084.rs:11:5: 17:6
    let mut _12: &mut [generator@ui/generator/issue-57084.rs:11:5: 11:12]; // in scope 0 at ui/generator/issue-57084.rs:11:5: 17:6

    bb0: {
        _8 = deref_copy (_1.0: &mut [generator@ui/generator/issue-57084.rs:11:5: 11:12]); // scope 0 at ui/generator/issue-57084.rs:11:5: 17:6
        _7 = discriminant((*_8));        // scope 0 at ui/generator/issue-57084.rs:11:5: 17:6
        switchInt(move _7) -> [0: bb1, 2: bb5, 3: bb1, otherwise: bb6]; // scope 0 at ui/generator/issue-57084.rs:11:5: 17:6
    }

    bb1: {
        _9 = deref_copy (_1.0: &mut [generator@ui/generator/issue-57084.rs:11:5: 11:12]); // scope 0 at ui/generator/issue-57084.rs:13:19: 13:20
        _4 = &((*_9).0: F);              // scope 0 at ui/generator/issue-57084.rs:13:19: 13:20
        _5 = ();                         // scope 0 at ui/generator/issue-57084.rs:13:19: 13:22
        _3 = <F as Fn<()>>::call(move _4, move _5) -> [return: bb2, unwind: bb3]; // scope 0 at ui/generator/issue-57084.rs:13:19: 13:22
                                         // mir::Constant
                                         // + span: ui/generator/issue-57084.rs:13:19: 13:20
                                         // + literal: Const { ty: for<'a> extern "rust-call" fn(&'a F, ()) -> <F as FnOnce<()>>::Output {<F as Fn<()>>::call}, val: Value(<ZST>) }
    }

    bb2: {
        _6 = ();                         // scope 0 at ui/generator/issue-57084.rs:14:22: 14:27
        _0 = GeneratorState::<(), ()>::Yielded(move _6); // scope 0 at ui/generator/issue-57084.rs:14:22: 14:27
        _10 = deref_copy (_1.0: &mut [generator@ui/generator/issue-57084.rs:11:5: 11:12]); // scope 0 at ui/generator/issue-57084.rs:14:22: 14:27
        discriminant((*_10)) = 3;        // scope 0 at ui/generator/issue-57084.rs:14:22: 14:27
        return;                          // scope 0 at ui/generator/issue-57084.rs:14:22: 14:27
    }

    bb3 (cleanup): {
        _11 = deref_copy (_1.0: &mut [generator@ui/generator/issue-57084.rs:11:5: 11:12]); // scope 0 at ui/generator/issue-57084.rs:17:5: 17:6
        drop(((*_11).0: F)) -> bb4;      // scope 0 at ui/generator/issue-57084.rs:17:5: 17:6
    }

    bb4 (cleanup): {
        _12 = deref_copy (_1.0: &mut [generator@ui/generator/issue-57084.rs:11:5: 11:12]); // scope 0 at ui/generator/issue-57084.rs:11:5: 17:6
        discriminant((*_12)) = 2;        // scope 0 at ui/generator/issue-57084.rs:11:5: 17:6
        resume;                          // scope 0 at ui/generator/issue-57084.rs:11:5: 17:6
    }

    bb5: {
        assert(const false, "generator resumed after panicking") -> bb5; // scope 0 at ui/generator/issue-57084.rs:11:5: 17:6
    }

    bb6: {
        unreachable;                     // scope 0 at ui/generator/issue-57084.rs:11:5: 17:6
    }
}

fn main() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/generator/issue-57084.rs:20:11: 20:11
    let _1: &std::vec::Vec<i32>;         // in scope 0 at ui/generator/issue-57084.rs:21:9: 21:13
    let _2: std::vec::Vec<i32>;          // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:50:36: 53:10
    let mut _3: std::boxed::Box<[i32]>;  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
    let mut _4: std::boxed::Box<[i32; 1]>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
    let mut _5: usize;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
    let mut _6: usize;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
    let mut _7: *mut u8;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
    let mut _8: std::boxed::Box<[i32; 1]>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
    let _9: [generator@ui/generator/issue-57084.rs:22:5: 22:7]; // in scope 0 at ui/generator/issue-57084.rs:22:5: 27:6
    let mut _10: &&std::vec::Vec<i32>;   // in scope 0 at ui/generator/issue-57084.rs:22:5: 27:6
    let mut _11: *const [i32; 1];        // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
    scope 1 {
        debug data => _1;                // in scope 1 at ui/generator/issue-57084.rs:21:9: 21:13
    }
    scope 2 {
    }

    bb0: {
        _5 = const 4_usize;              // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
        _6 = const 4_usize;              // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
        _7 = alloc::alloc::exchange_malloc(move _5, move _6) -> bb1; // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
                                         // + literal: Const { ty: unsafe fn(usize, usize) -> *mut u8 {alloc::alloc::exchange_malloc}, val: Value(<ZST>) }
    }

    bb1: {
        _8 = ShallowInitBox(move _7, [i32; 1]); // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
        _11 = (((_8.0: std::ptr::Unique<[i32; 1]>).0: std::ptr::NonNull<[i32; 1]>).0: *const [i32; 1]); // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:37: 52:46
        (*_11) = [const 1_i32];          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:37: 52:46
        _4 = move _8;                    // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
        _3 = move _4 as std::boxed::Box<[i32]> (Pointer(Unsize)); // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
        _2 = slice::<impl [i32]>::into_vec::<std::alloc::Global>(move _3) -> bb2; // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:50:36: 53:10
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:50:36: 50:51
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: fn(Box<[i32]>) -> Vec<i32> {slice::<impl [i32]>::into_vec::<std::alloc::Global>}, val: Value(<ZST>) }
    }

    bb2: {
        _1 = &_2;                        // scope 0 at ui/generator/issue-57084.rs:21:16: 21:24
        _10 = &_1;                       // scope 1 at ui/generator/issue-57084.rs:22:5: 27:6
        _9 = [generator@ui/generator/issue-57084.rs:22:5: 22:7 (#0)] { data: move _10 }; // scope 1 at ui/generator/issue-57084.rs:22:5: 27:6
                                         // generator
                                         // + def_id: DefId(0:8 ~ issue_57084[0f99]::main::{closure#0})
                                         // + substs: [
                                         //     (),
                                         //     (),
                                         //     (),
                                         //     for<'a> {impl std::ops::Generator<Yield = (), Return = ()>, ()},
                                         //     (&&std::vec::Vec<i32>,),
                                         // ]
                                         // + movability: Movable
        drop(_9) -> [return: bb3, unwind: bb5]; // scope 1 at ui/generator/issue-57084.rs:27:6: 27:7
    }

    bb3: {
        drop(_2) -> bb4;                 // scope 0 at ui/generator/issue-57084.rs:28:1: 28:2
    }

    bb4: {
        return;                          // scope 0 at ui/generator/issue-57084.rs:28:2: 28:2
    }

    bb5 (cleanup): {
        drop(_2) -> bb6;                 // scope 0 at ui/generator/issue-57084.rs:28:1: 28:2
    }

    bb6 (cleanup): {
        resume;                          // scope 0 at ui/generator/issue-57084.rs:20:1: 28:2
    }
}

fn main::{closure#0}(_1: Pin<&mut [generator@ui/generator/issue-57084.rs:22:5: 22:7]>, _2: ()) -> GeneratorState<(), ()> {
    debug data => (*((*(_1.0: &mut [generator@ui/generator/issue-57084.rs:22:5: 22:7])).0: &&std::vec::Vec<i32>)); // in scope 0 at ui/generator/issue-57084.rs:21:9: 21:13
    let mut _0: std::ops::GeneratorState<(), ()>; // return place in scope 0 at ui/generator/issue-57084.rs:22:5: 27:6
    let _3: impl std::ops::Generator<Yield = (), Return = ()>; // in scope 0 at ui/generator/issue-57084.rs:23:13: 23:20
    let mut _4: [closure@ui/generator/issue-57084.rs:23:28: 23:35]; // in scope 0 at ui/generator/issue-57084.rs:23:28: 23:58
    let mut _5: ();                      // in scope 0 at ui/generator/issue-57084.rs:25:13: 25:18
    let mut _6: &&std::vec::Vec<i32>;    // in scope 0 at ui/generator/issue-57084.rs:22:5: 27:6
    let mut _7: u32;                     // in scope 0 at ui/generator/issue-57084.rs:22:5: 27:6
    let mut _8: &mut [generator@ui/generator/issue-57084.rs:22:5: 22:7]; // in scope 0 at ui/generator/issue-57084.rs:22:5: 27:6
    let mut _9: &mut [generator@ui/generator/issue-57084.rs:22:5: 22:7]; // in scope 0 at ui/generator/issue-57084.rs:22:5: 27:6
    let mut _10: &mut [generator@ui/generator/issue-57084.rs:22:5: 22:7]; // in scope 0 at ui/generator/issue-57084.rs:22:5: 27:6
    let mut _11: &mut [generator@ui/generator/issue-57084.rs:22:5: 22:7]; // in scope 0 at ui/generator/issue-57084.rs:22:5: 27:6
    scope 1 {
        debug _to_pin => _3;             // in scope 1 at ui/generator/issue-57084.rs:23:13: 23:20
    }

    bb0: {
        _8 = deref_copy (_1.0: &mut [generator@ui/generator/issue-57084.rs:22:5: 22:7]); // scope 0 at ui/generator/issue-57084.rs:22:5: 27:6
        _7 = discriminant((*_8));        // scope 0 at ui/generator/issue-57084.rs:22:5: 27:6
        switchInt(move _7) -> [0: bb1, 2: bb4, 3: bb2, otherwise: bb5]; // scope 0 at ui/generator/issue-57084.rs:22:5: 27:6
    }

    bb1: {
        _9 = deref_copy (_1.0: &mut [generator@ui/generator/issue-57084.rs:22:5: 22:7]); // scope 0 at ui/generator/issue-57084.rs:23:28: 23:58
        _6 = deref_copy ((*_9).0: &&std::vec::Vec<i32>); // scope 0 at ui/generator/issue-57084.rs:23:28: 23:58
        _4 = [closure@ui/generator/issue-57084.rs:23:28: 23:35] { data: (*_6) }; // scope 0 at ui/generator/issue-57084.rs:23:28: 23:58
                                         // closure
                                         // + def_id: DefId(0:9 ~ issue_57084[0f99]::main::{closure#0}::{closure#0})
                                         // + substs: [
                                         //     i8,
                                         //     extern "rust-call" fn(()),
                                         //     (&std::vec::Vec<i32>,),
                                         // ]
        _3 = with::<[closure@ui/generator/issue-57084.rs:23:28: 23:35]>(move _4) -> [return: bb6, unwind: bb3]; // scope 0 at ui/generator/issue-57084.rs:23:23: 23:59
                                         // mir::Constant
                                         // + span: ui/generator/issue-57084.rs:23:23: 23:27
                                         // + literal: Const { ty: fn([closure@ui/generator/issue-57084.rs:23:28: 23:35]) -> impl Generator<Yield = (), Return = ()> {with::<[closure@ui/generator/issue-57084.rs:23:28: 23:35]>}, val: Value(<ZST>) }
    }

    bb2: {
        _5 = ();                         // scope 1 at ui/generator/issue-57084.rs:25:13: 25:18
        _0 = GeneratorState::<(), ()>::Yielded(move _5); // scope 1 at ui/generator/issue-57084.rs:25:13: 25:18
        _10 = deref_copy (_1.0: &mut [generator@ui/generator/issue-57084.rs:22:5: 22:7]); // scope 1 at ui/generator/issue-57084.rs:25:13: 25:18
        discriminant((*_10)) = 3;        // scope 1 at ui/generator/issue-57084.rs:25:13: 25:18
        return;                          // scope 1 at ui/generator/issue-57084.rs:25:13: 25:18
    }

    bb3 (cleanup): {
        _11 = deref_copy (_1.0: &mut [generator@ui/generator/issue-57084.rs:22:5: 22:7]); // scope 0 at ui/generator/issue-57084.rs:22:5: 27:6
        discriminant((*_11)) = 2;        // scope 0 at ui/generator/issue-57084.rs:22:5: 27:6
        resume;                          // scope 0 at ui/generator/issue-57084.rs:22:5: 27:6
    }

    bb4: {
        assert(const false, "generator resumed after panicking") -> bb4; // scope 0 at ui/generator/issue-57084.rs:22:5: 27:6
    }

    bb5: {
        unreachable;                     // scope 0 at ui/generator/issue-57084.rs:22:5: 27:6
    }

    bb6: {
        goto -> bb2;                     // scope 0 at ui/generator/issue-57084.rs:23:23: 23:59
    }
}

fn main::{closure#0}::{closure#0}(_1: &[closure@ui/generator/issue-57084.rs:23:28: 23:35]) -> () {
    debug data => ((*_1).0: &std::vec::Vec<i32>); // in scope 0 at ui/generator/issue-57084.rs:21:9: 21:13
    let mut _0: ();                      // return place in scope 0 at ui/generator/issue-57084.rs:23:36: 23:36
    let _2: ();                          // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:62
    let mut _3: std::fmt::Arguments<'_>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _4: &[&str];                 // in scope 0 at ui/generator/issue-57084.rs:23:45: 23:51
    let mut _5: &[&str; 2];              // in scope 0 at ui/generator/issue-57084.rs:23:45: 23:51
    let _6: &[&str; 2];                  // in scope 0 at ui/generator/issue-57084.rs:23:45: 23:51
    let mut _7: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _8: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let _9: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let _10: [core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _11: core::fmt::ArgumentV1<'_>; // in scope 0 at ui/generator/issue-57084.rs:23:53: 23:57
    let mut _12: &&std::vec::Vec<i32>;   // in scope 0 at ui/generator/issue-57084.rs:23:53: 23:57
    let _13: &&std::vec::Vec<i32>;       // in scope 0 at ui/generator/issue-57084.rs:23:53: 23:57
    let mut _14: &[&str; 2];             // in scope 0 at ui/generator/issue-57084.rs:23:45: 23:51

    bb0: {
        _14 = const _;                   // scope 0 at ui/generator/issue-57084.rs:23:45: 23:51
                                         // mir::Constant
                                         // + span: ui/generator/issue-57084.rs:23:45: 23:51
                                         // + literal: Const { ty: &[&str; 2], val: Unevaluated(main::{closure#0}::{closure#0}, [<closure_kind>, <closure_signature>, <upvars>], Some(promoted[0])) }
        _6 = _14;                        // scope 0 at ui/generator/issue-57084.rs:23:45: 23:51
        _5 = _6;                         // scope 0 at ui/generator/issue-57084.rs:23:45: 23:51
        _4 = move _5 as &[&str] (Pointer(Unsize)); // scope 0 at ui/generator/issue-57084.rs:23:45: 23:51
        _13 = &((*_1).0: &std::vec::Vec<i32>); // scope 0 at ui/generator/issue-57084.rs:23:53: 23:57
        _12 = _13;                       // scope 0 at ui/generator/issue-57084.rs:23:53: 23:57
        _11 = core::fmt::ArgumentV1::<'_>::new_pointer::<&Vec<i32>>(move _12) -> bb1; // scope 0 at ui/generator/issue-57084.rs:23:53: 23:57
                                         // mir::Constant
                                         // + span: ui/generator/issue-57084.rs:23:53: 23:57
                                         // + user_ty: UserType(1)
                                         // + literal: Const { ty: for<'b> fn(&'b &Vec<i32>) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_pointer::<&Vec<i32>>}, val: Value(<ZST>) }
    }

    bb1: {
        _10 = [move _11];                // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _9 = &_10;                       // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _8 = _9;                         // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _7 = move _8 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _3 = Arguments::<'_>::new_v1(move _4, move _7) -> bb2; // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb2: {
        _2 = _print(move _3) -> bb3;     // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:62
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:27
                                         // + literal: Const { ty: for<'a> fn(Arguments<'a>) {_print}, val: Value(<ZST>) }
    }

    bb3: {
        return;                          // scope 0 at ui/generator/issue-57084.rs:23:58: 23:58
    }
}

promoted[0] in main::{closure#0}::{closure#0}: &[&str; 2] = {
    let mut _0: &[&str; 2];              // return place in scope 0 at ui/generator/issue-57084.rs:23:45: 23:51
    let mut _1: [&str; 2];               // in scope 0 at ui/generator/issue-57084.rs:23:45: 23:51

    bb0: {
        _1 = [const "", const "\n"];     // scope 0 at ui/generator/issue-57084.rs:23:45: 23:51
                                         // mir::Constant
                                         // + span: ui/generator/issue-57084.rs:23:45: 23:51
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
                                         // mir::Constant
                                         // + span: ui/generator/issue-57084.rs:23:45: 23:51
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at ui/generator/issue-57084.rs:23:45: 23:51
        return;                          // scope 0 at ui/generator/issue-57084.rs:23:45: 23:51
    }
}
