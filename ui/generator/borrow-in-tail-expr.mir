// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
fn main() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/generator/borrow-in-tail-expr.rs:5:11: 5:11
    let _1: [generator@ui/generator/borrow-in-tail-expr.rs:6:14: 6:16]; // in scope 0 at ui/generator/borrow-in-tail-expr.rs:6:9: 6:11
    scope 1 {
        debug _a => _1;                  // in scope 1 at ui/generator/borrow-in-tail-expr.rs:6:9: 6:11
    }

    bb0: {
        _1 = [generator@ui/generator/borrow-in-tail-expr.rs:6:14: 6:16 (#0)]; // scope 0 at ui/generator/borrow-in-tail-expr.rs:6:14: 10:6
                                         // generator
                                         // + def_id: DefId(0:4 ~ borrow_in_tail_expr[984a]::main::{closure#0})
                                         // + substs: [
                                         //     (),
                                         //     (),
                                         //     usize,
                                         //     {()},
                                         //     (),
                                         // ]
                                         // + movability: Movable
        return;                          // scope 0 at ui/generator/borrow-in-tail-expr.rs:11:2: 11:2
    }
}

fn main::{closure#0}(_1: Pin<&mut [generator@ui/generator/borrow-in-tail-expr.rs:6:14: 6:16]>, _2: ()) -> GeneratorState<(), usize> {
    let mut _0: std::ops::GeneratorState<(), usize>; // return place in scope 0 at ui/generator/borrow-in-tail-expr.rs:6:14: 10:6
    let mut _3: ();                      // in scope 0 at ui/generator/borrow-in-tail-expr.rs:7:9: 7:14
    let _4: std::string::String;         // in scope 0 at ui/generator/borrow-in-tail-expr.rs:8:13: 8:14
    let mut _5: &std::string::String;    // in scope 0 at ui/generator/borrow-in-tail-expr.rs:9:9: 9:16
    let mut _6: usize;                   // in scope 0 at ui/generator/borrow-in-tail-expr.rs:6:17: 6:17
    let mut _7: u32;                     // in scope 0 at ui/generator/borrow-in-tail-expr.rs:6:14: 10:6
    let mut _8: &mut [generator@ui/generator/borrow-in-tail-expr.rs:6:14: 6:16]; // in scope 0 at ui/generator/borrow-in-tail-expr.rs:6:14: 10:6
    let mut _9: &mut [generator@ui/generator/borrow-in-tail-expr.rs:6:14: 6:16]; // in scope 0 at ui/generator/borrow-in-tail-expr.rs:6:14: 10:6
    let mut _10: &mut [generator@ui/generator/borrow-in-tail-expr.rs:6:14: 6:16]; // in scope 0 at ui/generator/borrow-in-tail-expr.rs:6:14: 10:6
    let mut _11: &mut [generator@ui/generator/borrow-in-tail-expr.rs:6:14: 6:16]; // in scope 0 at ui/generator/borrow-in-tail-expr.rs:6:14: 10:6
    scope 1 {
        debug a => _4;                   // in scope 1 at ui/generator/borrow-in-tail-expr.rs:8:13: 8:14
    }

    bb0: {
        _8 = deref_copy (_1.0: &mut [generator@ui/generator/borrow-in-tail-expr.rs:6:14: 6:16]); // scope 0 at ui/generator/borrow-in-tail-expr.rs:6:14: 10:6
        _7 = discriminant((*_8));        // scope 0 at ui/generator/borrow-in-tail-expr.rs:6:14: 10:6
        switchInt(move _7) -> [0: bb1, 1: bb9, 2: bb8, 3: bb7, otherwise: bb10]; // scope 0 at ui/generator/borrow-in-tail-expr.rs:6:14: 10:6
    }

    bb1: {
        _3 = ();                         // scope 0 at ui/generator/borrow-in-tail-expr.rs:7:9: 7:14
        _0 = GeneratorState::<(), usize>::Yielded(move _3); // scope 0 at ui/generator/borrow-in-tail-expr.rs:7:9: 7:14
        _9 = deref_copy (_1.0: &mut [generator@ui/generator/borrow-in-tail-expr.rs:6:14: 6:16]); // scope 0 at ui/generator/borrow-in-tail-expr.rs:7:9: 7:14
        discriminant((*_9)) = 3;         // scope 0 at ui/generator/borrow-in-tail-expr.rs:7:9: 7:14
        return;                          // scope 0 at ui/generator/borrow-in-tail-expr.rs:7:9: 7:14
    }

    bb2: {
        _5 = &_4;                        // scope 1 at ui/generator/borrow-in-tail-expr.rs:9:9: 9:16
        _6 = String::len(move _5) -> [return: bb3, unwind: bb5]; // scope 1 at ui/generator/borrow-in-tail-expr.rs:9:9: 9:16
                                         // mir::Constant
                                         // + span: ui/generator/borrow-in-tail-expr.rs:9:11: 9:14
                                         // + literal: Const { ty: for<'a> fn(&'a String) -> usize {String::len}, val: Value(<ZST>) }
    }

    bb3: {
        drop(_4) -> [return: bb4, unwind: bb6]; // scope 0 at ui/generator/borrow-in-tail-expr.rs:10:5: 10:6
    }

    bb4: {
        _0 = GeneratorState::<(), usize>::Complete(move _6); // scope 0 at ui/generator/borrow-in-tail-expr.rs:10:6: 10:6
        _10 = deref_copy (_1.0: &mut [generator@ui/generator/borrow-in-tail-expr.rs:6:14: 6:16]); // scope 0 at ui/generator/borrow-in-tail-expr.rs:10:6: 10:6
        discriminant((*_10)) = 1;        // scope 0 at ui/generator/borrow-in-tail-expr.rs:10:6: 10:6
        return;                          // scope 0 at ui/generator/borrow-in-tail-expr.rs:10:6: 10:6
    }

    bb5 (cleanup): {
        drop(_4) -> bb6;                 // scope 0 at ui/generator/borrow-in-tail-expr.rs:10:5: 10:6
    }

    bb6 (cleanup): {
        _11 = deref_copy (_1.0: &mut [generator@ui/generator/borrow-in-tail-expr.rs:6:14: 6:16]); // scope 0 at ui/generator/borrow-in-tail-expr.rs:6:14: 10:6
        discriminant((*_11)) = 2;        // scope 0 at ui/generator/borrow-in-tail-expr.rs:6:14: 10:6
        resume;                          // scope 0 at ui/generator/borrow-in-tail-expr.rs:6:14: 10:6
    }

    bb7: {
        _4 = String::new() -> [return: bb2, unwind: bb6]; // scope 0 at ui/generator/borrow-in-tail-expr.rs:8:17: 8:30
                                         // mir::Constant
                                         // + span: ui/generator/borrow-in-tail-expr.rs:8:17: 8:28
                                         // + literal: Const { ty: fn() -> String {String::new}, val: Value(<ZST>) }
    }

    bb8: {
        assert(const false, "generator resumed after panicking") -> bb8; // scope 0 at ui/generator/borrow-in-tail-expr.rs:6:14: 10:6
    }

    bb9: {
        assert(const false, "generator resumed after completion") -> bb9; // scope 0 at ui/generator/borrow-in-tail-expr.rs:6:14: 10:6
    }

    bb10: {
        unreachable;                     // scope 0 at ui/generator/borrow-in-tail-expr.rs:6:14: 10:6
    }
}
