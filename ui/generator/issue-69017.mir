// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
fn gen() -> impl Generator<usize> {
    let mut _0: impl std::ops::Generator<usize>; // return place in scope 0 at ui/generator/issue-69017.rs:12:13: 12:34

    bb0: {
        _0 = [generator@ui/generator/issue-69017.rs:13:5: 13:15 (#0)]; // scope 0 at ui/generator/issue-69017.rs:13:5: 15:6
                                         // generator
                                         // + def_id: DefId(0:5 ~ issue_69017[f8f8]::gen::{closure#0})
                                         // + substs: [
                                         //     usize,
                                         //     (),
                                         //     (),
                                         //     for<'a, 'b, 'c, 'd, 'e, 'f> {&'a str, [&'b str; 2], &'c [&'d str], &'e [&'f str; 2], (), usize},
                                         //     (),
                                         // ]
                                         // + movability: Movable
        return;                          // scope 0 at ui/generator/issue-69017.rs:16:2: 16:2
    }
}

fn gen::{closure#0}(_1: Pin<&mut [generator@ui/generator/issue-69017.rs:13:5: 13:15]>, _2: usize) -> GeneratorState<(), ()> {
    let mut _0: std::ops::GeneratorState<(), ()>; // return place in scope 0 at ui/generator/issue-69017.rs:13:5: 15:6
    let _3: ();                          // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:62
    let mut _4: std::fmt::Arguments<'_>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _5: &[&str; 2];              // in scope 0 at ui/generator/issue-69017.rs:14:18: 14:25
    let _6: &[&str; 2];                  // in scope 0 at ui/generator/issue-69017.rs:14:18: 14:25
    let mut _7: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _8: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let _9: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let _10: [core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _11: core::fmt::ArgumentV1<'_>; // in scope 0 at ui/generator/issue-69017.rs:14:27: 14:32
    let mut _12: &usize;                 // in scope 0 at ui/generator/issue-69017.rs:14:27: 14:32
    let _13: &usize;                     // in scope 0 at ui/generator/issue-69017.rs:14:27: 14:32
    let _14: usize;                      // in scope 0 at ui/generator/issue-69017.rs:14:27: 14:32
    let mut _15: ();                     // in scope 0 at ui/generator/issue-69017.rs:14:27: 14:32
    let mut _16: &[&str; 2];             // in scope 0 at ui/generator/issue-69017.rs:14:18: 14:25
    let mut _17: ();                     // in scope 0 at ui/generator/issue-69017.rs:13:16: 13:16
    let mut _18: u32;                    // in scope 0 at ui/generator/issue-69017.rs:13:5: 15:6
    let mut _19: &mut [generator@ui/generator/issue-69017.rs:13:5: 13:15]; // in scope 0 at ui/generator/issue-69017.rs:13:5: 15:6
    let mut _20: &mut [generator@ui/generator/issue-69017.rs:13:5: 13:15]; // in scope 0 at ui/generator/issue-69017.rs:13:5: 15:6
    let mut _21: &mut [generator@ui/generator/issue-69017.rs:13:5: 13:15]; // in scope 0 at ui/generator/issue-69017.rs:13:5: 15:6
    let mut _22: &mut [generator@ui/generator/issue-69017.rs:13:5: 13:15]; // in scope 0 at ui/generator/issue-69017.rs:13:5: 15:6
    let mut _23: &mut [generator@ui/generator/issue-69017.rs:13:5: 13:15]; // in scope 0 at ui/generator/issue-69017.rs:13:5: 15:6
    let mut _24: &mut [generator@ui/generator/issue-69017.rs:13:5: 13:15]; // in scope 0 at ui/generator/issue-69017.rs:13:5: 15:6

    bb0: {
        _19 = deref_copy (_1.0: &mut [generator@ui/generator/issue-69017.rs:13:5: 13:15]); // scope 0 at ui/generator/issue-69017.rs:13:5: 15:6
        _18 = discriminant((*_19));      // scope 0 at ui/generator/issue-69017.rs:13:5: 15:6
        switchInt(move _18) -> [0: bb1, 1: bb8, 2: bb7, 3: bb6, otherwise: bb9]; // scope 0 at ui/generator/issue-69017.rs:13:5: 15:6
    }

    bb1: {
        _16 = const _;                   // scope 0 at ui/generator/issue-69017.rs:14:18: 14:25
                                         // mir::Constant
                                         // + span: ui/generator/issue-69017.rs:14:18: 14:25
                                         // + literal: Const { ty: &[&str; 2], val: Unevaluated(gen::{closure#0}, [<resume_ty>, <yield_ty>, <return_ty>, <witness>, <upvars>], Some(promoted[0])) }
        _6 = _16;                        // scope 0 at ui/generator/issue-69017.rs:14:18: 14:25
        _5 = _6;                         // scope 0 at ui/generator/issue-69017.rs:14:18: 14:25
        _20 = deref_copy (_1.0: &mut [generator@ui/generator/issue-69017.rs:13:5: 13:15]); // scope 0 at ui/generator/issue-69017.rs:14:18: 14:25
        (((*_20) as variant#3).0: &[&str]) = move _5 as &[&str] (Pointer(Unsize)); // scope 0 at ui/generator/issue-69017.rs:14:18: 14:25
        _15 = ();                        // scope 0 at ui/generator/issue-69017.rs:14:27: 14:32
        _0 = GeneratorState::<(), ()>::Yielded(move _15); // scope 0 at ui/generator/issue-69017.rs:14:27: 14:32
        _21 = deref_copy (_1.0: &mut [generator@ui/generator/issue-69017.rs:13:5: 13:15]); // scope 0 at ui/generator/issue-69017.rs:14:27: 14:32
        discriminant((*_21)) = 3;        // scope 0 at ui/generator/issue-69017.rs:14:27: 14:32
        return;                          // scope 0 at ui/generator/issue-69017.rs:14:27: 14:32
    }

    bb2: {
        _10 = [move _11];                // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _9 = &_10;                       // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _8 = _9;                         // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _7 = move _8 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _22 = deref_copy (_1.0: &mut [generator@ui/generator/issue-69017.rs:13:5: 13:15]); // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _4 = Arguments::<'_>::new_v1(move (((*_22) as variant#3).0: &[&str]), move _7) -> [return: bb3, unwind: bb5]; // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb3: {
        _3 = _print(move _4) -> [return: bb4, unwind: bb5]; // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:62
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:27
                                         // + literal: Const { ty: for<'a> fn(Arguments<'a>) {_print}, val: Value(<ZST>) }
    }

    bb4: {
        _17 = const ();                  // scope 0 at ui/generator/issue-69017.rs:13:16: 15:6
        _0 = GeneratorState::<(), ()>::Complete(move _17); // scope 0 at ui/generator/issue-69017.rs:15:6: 15:6
        _23 = deref_copy (_1.0: &mut [generator@ui/generator/issue-69017.rs:13:5: 13:15]); // scope 0 at ui/generator/issue-69017.rs:15:6: 15:6
        discriminant((*_23)) = 1;        // scope 0 at ui/generator/issue-69017.rs:15:6: 15:6
        return;                          // scope 0 at ui/generator/issue-69017.rs:15:6: 15:6
    }

    bb5 (cleanup): {
        _24 = deref_copy (_1.0: &mut [generator@ui/generator/issue-69017.rs:13:5: 13:15]); // scope 0 at ui/generator/issue-69017.rs:13:5: 15:6
        discriminant((*_24)) = 2;        // scope 0 at ui/generator/issue-69017.rs:13:5: 15:6
        resume;                          // scope 0 at ui/generator/issue-69017.rs:13:5: 15:6
    }

    bb6: {
        _14 = move _2;                   // scope 0 at ui/generator/issue-69017.rs:13:5: 15:6
        _13 = &_14;                      // scope 0 at ui/generator/issue-69017.rs:14:27: 14:32
        _12 = _13;                       // scope 0 at ui/generator/issue-69017.rs:14:27: 14:32
        _11 = core::fmt::ArgumentV1::<'_>::new_display::<usize>(move _12) -> [return: bb2, unwind: bb5]; // scope 0 at ui/generator/issue-69017.rs:14:27: 14:32
                                         // mir::Constant
                                         // + span: ui/generator/issue-69017.rs:14:27: 14:32
                                         // + user_ty: UserType(1)
                                         // + literal: Const { ty: for<'b> fn(&'b usize) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_display::<usize>}, val: Value(<ZST>) }
    }

    bb7: {
        assert(const false, "generator resumed after panicking") -> bb7; // scope 0 at ui/generator/issue-69017.rs:13:5: 15:6
    }

    bb8: {
        assert(const false, "generator resumed after completion") -> bb8; // scope 0 at ui/generator/issue-69017.rs:13:5: 15:6
    }

    bb9: {
        unreachable;                     // scope 0 at ui/generator/issue-69017.rs:13:5: 15:6
    }
}

promoted[0] in gen::{closure#0}: &[&str; 2] = {
    let mut _0: &[&str; 2];              // return place in scope 0 at ui/generator/issue-69017.rs:14:18: 14:25
    let mut _1: [&str; 2];               // in scope 0 at ui/generator/issue-69017.rs:14:18: 14:25

    bb0: {
        _1 = [const "-> ", const "\n"];  // scope 0 at ui/generator/issue-69017.rs:14:18: 14:25
                                         // mir::Constant
                                         // + span: ui/generator/issue-69017.rs:14:18: 14:25
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
                                         // mir::Constant
                                         // + span: ui/generator/issue-69017.rs:14:18: 14:25
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at ui/generator/issue-69017.rs:14:18: 14:25
        return;                          // scope 0 at ui/generator/issue-69017.rs:14:18: 14:25
    }
}

fn main() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/generator/issue-69017.rs:18:11: 18:11

    bb0: {
        return;                          // scope 0 at ui/generator/issue-69017.rs:18:13: 18:13
    }
}
