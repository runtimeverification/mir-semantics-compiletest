// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
fn foo() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/generator/drop-track-addassign-yield.rs:9:10: 9:10
    let _1: [static generator@ui/generator/drop-track-addassign-yield.rs:10:14: 10:23]; // in scope 0 at ui/generator/drop-track-addassign-yield.rs:10:9: 10:11
    scope 1 {
        debug _y => _1;                  // in scope 1 at ui/generator/drop-track-addassign-yield.rs:10:9: 10:11
        let _2: [static generator@ui/generator/drop-track-addassign-yield.rs:21:14: 21:23]; // in scope 1 at ui/generator/drop-track-addassign-yield.rs:21:9: 21:11
        scope 2 {
            debug _z => _2;              // in scope 2 at ui/generator/drop-track-addassign-yield.rs:21:9: 21:11
        }
    }

    bb0: {
        _1 = [generator@ui/generator/drop-track-addassign-yield.rs:10:14: 10:23 (#0)]; // scope 0 at ui/generator/drop-track-addassign-yield.rs:10:14: 18:6
                                         // generator
                                         // + def_id: DefId(0:4 ~ drop_track_addassign_yield[2dcc]::foo::{closure#0})
                                         // + substs: [
                                         //     (),
                                         //     (),
                                         //     (),
                                         //     for<'a> {i32, &'a mut i32, std::string::String, ()},
                                         //     (),
                                         // ]
                                         // + movability: Static
        _2 = [generator@ui/generator/drop-track-addassign-yield.rs:21:14: 21:23 (#0)]; // scope 1 at ui/generator/drop-track-addassign-yield.rs:21:14: 36:6
                                         // generator
                                         // + def_id: DefId(0:5 ~ drop_track_addassign_yield[2dcc]::foo::{closure#1})
                                         // + substs: [
                                         //     (),
                                         //     (),
                                         //     (),
                                         //     for<'a> {i32, &'a mut i32, std::string::String, ()},
                                         //     (),
                                         // ]
                                         // + movability: Static
        drop(_2) -> [return: bb1, unwind: bb3]; // scope 1 at ui/generator/drop-track-addassign-yield.rs:37:1: 37:2
    }

    bb1: {
        drop(_1) -> bb2;                 // scope 0 at ui/generator/drop-track-addassign-yield.rs:37:1: 37:2
    }

    bb2: {
        return;                          // scope 0 at ui/generator/drop-track-addassign-yield.rs:37:2: 37:2
    }

    bb3 (cleanup): {
        drop(_1) -> bb4;                 // scope 0 at ui/generator/drop-track-addassign-yield.rs:37:1: 37:2
    }

    bb4 (cleanup): {
        resume;                          // scope 0 at ui/generator/drop-track-addassign-yield.rs:9:1: 37:2
    }
}

fn foo::{closure#0}(_1: Pin<&mut [static generator@ui/generator/drop-track-addassign-yield.rs:10:14: 10:23]>, _2: ()) -> GeneratorState<(), ()> {
    let mut _0: std::ops::GeneratorState<(), ()>; // return place in scope 0 at ui/generator/drop-track-addassign-yield.rs:10:14: 18:6
    let mut _3: &mut i32;                // in scope 0 at ui/generator/drop-track-addassign-yield.rs:12:10: 15:10
    let mut _4: ();                      // in scope 0 at ui/generator/drop-track-addassign-yield.rs:13:13: 13:18
    let mut _5: (i32, bool);             // in scope 0 at ui/generator/drop-track-addassign-yield.rs:12:9: 17:10
    let mut _6: ();                      // in scope 0 at ui/generator/drop-track-addassign-yield.rs:10:24: 10:24
    let mut _7: u32;                     // in scope 0 at ui/generator/drop-track-addassign-yield.rs:10:14: 18:6
    let mut _8: &mut [static generator@ui/generator/drop-track-addassign-yield.rs:10:14: 10:23]; // in scope 0 at ui/generator/drop-track-addassign-yield.rs:10:14: 18:6
    let mut _9: &mut [static generator@ui/generator/drop-track-addassign-yield.rs:10:14: 10:23]; // in scope 0 at ui/generator/drop-track-addassign-yield.rs:10:14: 18:6
    let mut _10: &mut [static generator@ui/generator/drop-track-addassign-yield.rs:10:14: 10:23]; // in scope 0 at ui/generator/drop-track-addassign-yield.rs:10:14: 18:6
    let mut _11: &mut [static generator@ui/generator/drop-track-addassign-yield.rs:10:14: 10:23]; // in scope 0 at ui/generator/drop-track-addassign-yield.rs:10:14: 18:6
    let mut _12: &mut [static generator@ui/generator/drop-track-addassign-yield.rs:10:14: 10:23]; // in scope 0 at ui/generator/drop-track-addassign-yield.rs:10:14: 18:6
    let mut _13: &mut [static generator@ui/generator/drop-track-addassign-yield.rs:10:14: 10:23]; // in scope 0 at ui/generator/drop-track-addassign-yield.rs:10:14: 18:6
    let mut _14: &mut [static generator@ui/generator/drop-track-addassign-yield.rs:10:14: 10:23]; // in scope 0 at ui/generator/drop-track-addassign-yield.rs:10:14: 18:6
    let mut _15: &mut [static generator@ui/generator/drop-track-addassign-yield.rs:10:14: 10:23]; // in scope 0 at ui/generator/drop-track-addassign-yield.rs:10:14: 18:6
    let mut _16: &mut [static generator@ui/generator/drop-track-addassign-yield.rs:10:14: 10:23]; // in scope 0 at ui/generator/drop-track-addassign-yield.rs:10:14: 18:6
    let mut _17: &mut [static generator@ui/generator/drop-track-addassign-yield.rs:10:14: 10:23]; // in scope 0 at ui/generator/drop-track-addassign-yield.rs:10:14: 18:6
    let mut _18: &mut [static generator@ui/generator/drop-track-addassign-yield.rs:10:14: 10:23]; // in scope 0 at ui/generator/drop-track-addassign-yield.rs:10:14: 18:6
    let mut _19: &mut [static generator@ui/generator/drop-track-addassign-yield.rs:10:14: 10:23]; // in scope 0 at ui/generator/drop-track-addassign-yield.rs:10:14: 18:6
    let mut _20: &mut [static generator@ui/generator/drop-track-addassign-yield.rs:10:14: 10:23]; // in scope 0 at ui/generator/drop-track-addassign-yield.rs:10:14: 18:6
    let mut _21: &mut [static generator@ui/generator/drop-track-addassign-yield.rs:10:14: 10:23]; // in scope 0 at ui/generator/drop-track-addassign-yield.rs:10:14: 18:6
    scope 1 {
        debug x => (((*(_1.0: &mut [static generator@ui/generator/drop-track-addassign-yield.rs:10:14: 10:23])) as variant#3).0: &mut i32); // in scope 1 at ui/generator/drop-track-addassign-yield.rs:11:13: 11:14
    }

    bb0: {
        _8 = deref_copy (_1.0: &mut [static generator@ui/generator/drop-track-addassign-yield.rs:10:14: 10:23]); // scope 0 at ui/generator/drop-track-addassign-yield.rs:10:14: 18:6
        _7 = discriminant((*_8));        // scope 0 at ui/generator/drop-track-addassign-yield.rs:10:14: 18:6
        switchInt(move _7) -> [0: bb1, 1: bb9, 2: bb8, 3: bb7, otherwise: bb10]; // scope 0 at ui/generator/drop-track-addassign-yield.rs:10:14: 18:6
    }

    bb1: {
        _9 = deref_copy (_1.0: &mut [static generator@ui/generator/drop-track-addassign-yield.rs:10:14: 10:23]); // scope 0 at ui/generator/drop-track-addassign-yield.rs:11:22: 11:23
        (((*_9) as variant#3).1: i32) = const 0_i32; // scope 0 at ui/generator/drop-track-addassign-yield.rs:11:22: 11:23
        _10 = deref_copy (_1.0: &mut [static generator@ui/generator/drop-track-addassign-yield.rs:10:14: 10:23]); // scope 0 at ui/generator/drop-track-addassign-yield.rs:11:17: 11:23
        _11 = deref_copy (_1.0: &mut [static generator@ui/generator/drop-track-addassign-yield.rs:10:14: 10:23]); // scope 0 at ui/generator/drop-track-addassign-yield.rs:11:17: 11:23
        (((*_10) as variant#3).0: &mut i32) = &mut (((*_11) as variant#3).1: i32); // scope 0 at ui/generator/drop-track-addassign-yield.rs:11:17: 11:23
        _12 = deref_copy (_1.0: &mut [static generator@ui/generator/drop-track-addassign-yield.rs:10:14: 10:23]); // scope 1 at ui/generator/drop-track-addassign-yield.rs:15:20: 15:33
        (((*_12) as variant#3).3: std::string::String) = String::new() -> [return: bb2, unwind: bb6]; // scope 1 at ui/generator/drop-track-addassign-yield.rs:15:20: 15:33
                                         // mir::Constant
                                         // + span: ui/generator/drop-track-addassign-yield.rs:15:20: 15:31
                                         // + literal: Const { ty: fn() -> String {String::new}, val: Value(<ZST>) }
    }

    bb2: {
        _13 = deref_copy (_1.0: &mut [static generator@ui/generator/drop-track-addassign-yield.rs:10:14: 10:23]); // scope 1 at ui/generator/drop-track-addassign-yield.rs:16:18: 16:19
        (((*_13) as variant#3).2: i32) = const 0_i32; // scope 1 at ui/generator/drop-track-addassign-yield.rs:16:18: 16:19
        _4 = ();                         // scope 1 at ui/generator/drop-track-addassign-yield.rs:13:13: 13:18
        _0 = GeneratorState::<(), ()>::Yielded(move _4); // scope 1 at ui/generator/drop-track-addassign-yield.rs:13:13: 13:18
        _14 = deref_copy (_1.0: &mut [static generator@ui/generator/drop-track-addassign-yield.rs:10:14: 10:23]); // scope 1 at ui/generator/drop-track-addassign-yield.rs:13:13: 13:18
        discriminant((*_14)) = 3;        // scope 1 at ui/generator/drop-track-addassign-yield.rs:13:13: 13:18
        return;                          // scope 1 at ui/generator/drop-track-addassign-yield.rs:13:13: 13:18
    }

    bb3: {
        (*_3) = move (_5.0: i32);        // scope 1 at ui/generator/drop-track-addassign-yield.rs:12:9: 17:10
        _18 = deref_copy (_1.0: &mut [static generator@ui/generator/drop-track-addassign-yield.rs:10:14: 10:23]); // scope 1 at ui/generator/drop-track-addassign-yield.rs:17:10: 17:11
        drop((((*_18) as variant#3).3: std::string::String)) -> [return: bb4, unwind: bb6]; // scope 1 at ui/generator/drop-track-addassign-yield.rs:17:10: 17:11
    }

    bb4: {
        _6 = const ();                   // scope 0 at ui/generator/drop-track-addassign-yield.rs:10:24: 18:6
        _0 = GeneratorState::<(), ()>::Complete(move _6); // scope 0 at ui/generator/drop-track-addassign-yield.rs:18:6: 18:6
        _19 = deref_copy (_1.0: &mut [static generator@ui/generator/drop-track-addassign-yield.rs:10:14: 10:23]); // scope 0 at ui/generator/drop-track-addassign-yield.rs:18:6: 18:6
        discriminant((*_19)) = 1;        // scope 0 at ui/generator/drop-track-addassign-yield.rs:18:6: 18:6
        return;                          // scope 0 at ui/generator/drop-track-addassign-yield.rs:18:6: 18:6
    }

    bb5 (cleanup): {
        _20 = deref_copy (_1.0: &mut [static generator@ui/generator/drop-track-addassign-yield.rs:10:14: 10:23]); // scope 1 at ui/generator/drop-track-addassign-yield.rs:17:10: 17:11
        drop((((*_20) as variant#3).3: std::string::String)) -> bb6; // scope 1 at ui/generator/drop-track-addassign-yield.rs:17:10: 17:11
    }

    bb6 (cleanup): {
        _21 = deref_copy (_1.0: &mut [static generator@ui/generator/drop-track-addassign-yield.rs:10:14: 10:23]); // scope 0 at ui/generator/drop-track-addassign-yield.rs:10:14: 18:6
        discriminant((*_21)) = 2;        // scope 0 at ui/generator/drop-track-addassign-yield.rs:10:14: 18:6
        resume;                          // scope 0 at ui/generator/drop-track-addassign-yield.rs:10:14: 18:6
    }

    bb7: {
        _15 = deref_copy (_1.0: &mut [static generator@ui/generator/drop-track-addassign-yield.rs:10:14: 10:23]); // scope 1 at ui/generator/drop-track-addassign-yield.rs:14:13: 14:14
        _3 = move (((*_15) as variant#3).0: &mut i32); // scope 1 at ui/generator/drop-track-addassign-yield.rs:14:13: 14:14
        _16 = deref_copy (_1.0: &mut [static generator@ui/generator/drop-track-addassign-yield.rs:10:14: 10:23]); // scope 1 at ui/generator/drop-track-addassign-yield.rs:12:9: 17:10
        _5 = CheckedAdd((*_3), (((*_16) as variant#3).2: i32)); // scope 1 at ui/generator/drop-track-addassign-yield.rs:12:9: 17:10
        _17 = deref_copy (_1.0: &mut [static generator@ui/generator/drop-track-addassign-yield.rs:10:14: 10:23]); // scope 1 at ui/generator/drop-track-addassign-yield.rs:12:9: 17:10
        assert(!move (_5.1: bool), "attempt to compute `{} + {}`, which would overflow", (*_3), move (((*_17) as variant#3).2: i32)) -> [success: bb3, unwind: bb5]; // scope 1 at ui/generator/drop-track-addassign-yield.rs:12:9: 17:10
    }

    bb8: {
        assert(const false, "generator resumed after panicking") -> bb8; // scope 0 at ui/generator/drop-track-addassign-yield.rs:10:14: 18:6
    }

    bb9: {
        assert(const false, "generator resumed after completion") -> bb9; // scope 0 at ui/generator/drop-track-addassign-yield.rs:10:14: 18:6
    }

    bb10: {
        unreachable;                     // scope 0 at ui/generator/drop-track-addassign-yield.rs:10:14: 18:6
    }
}

fn foo::{closure#1}(_1: Pin<&mut [static generator@ui/generator/drop-track-addassign-yield.rs:21:14: 21:23]>, _2: ()) -> GeneratorState<(), ()> {
    let mut _0: std::ops::GeneratorState<(), ()>; // return place in scope 0 at ui/generator/drop-track-addassign-yield.rs:21:14: 36:6
    let mut _3: &mut i32;                // in scope 0 at ui/generator/drop-track-addassign-yield.rs:23:10: 33:10
    let mut _4: &mut i32;                // in scope 0 at ui/generator/drop-track-addassign-yield.rs:25:14: 28:14
    let mut _5: ();                      // in scope 0 at ui/generator/drop-track-addassign-yield.rs:26:23: 26:25
    let mut _6: (i32, bool);             // in scope 0 at ui/generator/drop-track-addassign-yield.rs:25:13: 30:14
    let mut _7: ();                      // in scope 0 at ui/generator/drop-track-addassign-yield.rs:31:13: 31:18
    let mut _8: (i32, bool);             // in scope 0 at ui/generator/drop-track-addassign-yield.rs:23:9: 35:10
    let mut _9: ();                      // in scope 0 at ui/generator/drop-track-addassign-yield.rs:21:24: 21:24
    let mut _10: u32;                    // in scope 0 at ui/generator/drop-track-addassign-yield.rs:21:14: 36:6
    let mut _11: &mut [static generator@ui/generator/drop-track-addassign-yield.rs:21:14: 21:23]; // in scope 0 at ui/generator/drop-track-addassign-yield.rs:21:14: 36:6
    let mut _12: &mut [static generator@ui/generator/drop-track-addassign-yield.rs:21:14: 21:23]; // in scope 0 at ui/generator/drop-track-addassign-yield.rs:21:14: 36:6
    let mut _13: &mut [static generator@ui/generator/drop-track-addassign-yield.rs:21:14: 21:23]; // in scope 0 at ui/generator/drop-track-addassign-yield.rs:21:14: 36:6
    let mut _14: &mut [static generator@ui/generator/drop-track-addassign-yield.rs:21:14: 21:23]; // in scope 0 at ui/generator/drop-track-addassign-yield.rs:21:14: 36:6
    let mut _15: &mut [static generator@ui/generator/drop-track-addassign-yield.rs:21:14: 21:23]; // in scope 0 at ui/generator/drop-track-addassign-yield.rs:21:14: 36:6
    let mut _16: &mut [static generator@ui/generator/drop-track-addassign-yield.rs:21:14: 21:23]; // in scope 0 at ui/generator/drop-track-addassign-yield.rs:21:14: 36:6
    let mut _17: &mut [static generator@ui/generator/drop-track-addassign-yield.rs:21:14: 21:23]; // in scope 0 at ui/generator/drop-track-addassign-yield.rs:21:14: 36:6
    let mut _18: &mut [static generator@ui/generator/drop-track-addassign-yield.rs:21:14: 21:23]; // in scope 0 at ui/generator/drop-track-addassign-yield.rs:21:14: 36:6
    let mut _19: &mut [static generator@ui/generator/drop-track-addassign-yield.rs:21:14: 21:23]; // in scope 0 at ui/generator/drop-track-addassign-yield.rs:21:14: 36:6
    let mut _20: &mut [static generator@ui/generator/drop-track-addassign-yield.rs:21:14: 21:23]; // in scope 0 at ui/generator/drop-track-addassign-yield.rs:21:14: 36:6
    let mut _21: &mut [static generator@ui/generator/drop-track-addassign-yield.rs:21:14: 21:23]; // in scope 0 at ui/generator/drop-track-addassign-yield.rs:21:14: 36:6
    let mut _22: &mut [static generator@ui/generator/drop-track-addassign-yield.rs:21:14: 21:23]; // in scope 0 at ui/generator/drop-track-addassign-yield.rs:21:14: 36:6
    let mut _23: &mut [static generator@ui/generator/drop-track-addassign-yield.rs:21:14: 21:23]; // in scope 0 at ui/generator/drop-track-addassign-yield.rs:21:14: 36:6
    let mut _24: &mut [static generator@ui/generator/drop-track-addassign-yield.rs:21:14: 21:23]; // in scope 0 at ui/generator/drop-track-addassign-yield.rs:21:14: 36:6
    let mut _25: &mut [static generator@ui/generator/drop-track-addassign-yield.rs:21:14: 21:23]; // in scope 0 at ui/generator/drop-track-addassign-yield.rs:21:14: 36:6
    let mut _26: &mut [static generator@ui/generator/drop-track-addassign-yield.rs:21:14: 21:23]; // in scope 0 at ui/generator/drop-track-addassign-yield.rs:21:14: 36:6
    let mut _27: &mut [static generator@ui/generator/drop-track-addassign-yield.rs:21:14: 21:23]; // in scope 0 at ui/generator/drop-track-addassign-yield.rs:21:14: 36:6
    let mut _28: &mut [static generator@ui/generator/drop-track-addassign-yield.rs:21:14: 21:23]; // in scope 0 at ui/generator/drop-track-addassign-yield.rs:21:14: 36:6
    let mut _29: &mut [static generator@ui/generator/drop-track-addassign-yield.rs:21:14: 21:23]; // in scope 0 at ui/generator/drop-track-addassign-yield.rs:21:14: 36:6
    let mut _30: &mut [static generator@ui/generator/drop-track-addassign-yield.rs:21:14: 21:23]; // in scope 0 at ui/generator/drop-track-addassign-yield.rs:21:14: 36:6
    let mut _31: &mut [static generator@ui/generator/drop-track-addassign-yield.rs:21:14: 21:23]; // in scope 0 at ui/generator/drop-track-addassign-yield.rs:21:14: 36:6
    let mut _32: &mut [static generator@ui/generator/drop-track-addassign-yield.rs:21:14: 21:23]; // in scope 0 at ui/generator/drop-track-addassign-yield.rs:21:14: 36:6
    let mut _33: &mut [static generator@ui/generator/drop-track-addassign-yield.rs:21:14: 21:23]; // in scope 0 at ui/generator/drop-track-addassign-yield.rs:21:14: 36:6
    let mut _34: &mut [static generator@ui/generator/drop-track-addassign-yield.rs:21:14: 21:23]; // in scope 0 at ui/generator/drop-track-addassign-yield.rs:21:14: 36:6
    let mut _35: &mut [static generator@ui/generator/drop-track-addassign-yield.rs:21:14: 21:23]; // in scope 0 at ui/generator/drop-track-addassign-yield.rs:21:14: 36:6
    scope 1 {
        debug x => (((*(_1.0: &mut [static generator@ui/generator/drop-track-addassign-yield.rs:21:14: 21:23])) as variant#3).0: &mut i32); // in scope 1 at ui/generator/drop-track-addassign-yield.rs:22:13: 22:14
        scope 2 {
            debug inner => (((*(_1.0: &mut [static generator@ui/generator/drop-track-addassign-yield.rs:21:14: 21:23])) as variant#3).4: &mut i32); // in scope 2 at ui/generator/drop-track-addassign-yield.rs:24:17: 24:22
        }
    }

    bb0: {
        _11 = deref_copy (_1.0: &mut [static generator@ui/generator/drop-track-addassign-yield.rs:21:14: 21:23]); // scope 0 at ui/generator/drop-track-addassign-yield.rs:21:14: 36:6
        _10 = discriminant((*_11));      // scope 0 at ui/generator/drop-track-addassign-yield.rs:21:14: 36:6
        switchInt(move _10) -> [0: bb1, 1: bb14, 2: bb13, 3: bb11, 4: bb12, otherwise: bb15]; // scope 0 at ui/generator/drop-track-addassign-yield.rs:21:14: 36:6
    }

    bb1: {
        _12 = deref_copy (_1.0: &mut [static generator@ui/generator/drop-track-addassign-yield.rs:21:14: 21:23]); // scope 0 at ui/generator/drop-track-addassign-yield.rs:22:22: 22:23
        (((*_12) as variant#3).1: i32) = const 0_i32; // scope 0 at ui/generator/drop-track-addassign-yield.rs:22:22: 22:23
        _13 = deref_copy (_1.0: &mut [static generator@ui/generator/drop-track-addassign-yield.rs:21:14: 21:23]); // scope 0 at ui/generator/drop-track-addassign-yield.rs:22:17: 22:23
        _14 = deref_copy (_1.0: &mut [static generator@ui/generator/drop-track-addassign-yield.rs:21:14: 21:23]); // scope 0 at ui/generator/drop-track-addassign-yield.rs:22:17: 22:23
        (((*_13) as variant#3).0: &mut i32) = &mut (((*_14) as variant#3).1: i32); // scope 0 at ui/generator/drop-track-addassign-yield.rs:22:17: 22:23
        _15 = deref_copy (_1.0: &mut [static generator@ui/generator/drop-track-addassign-yield.rs:21:14: 21:23]); // scope 1 at ui/generator/drop-track-addassign-yield.rs:33:20: 33:33
        (((*_15) as variant#3).3: std::string::String) = String::new() -> [return: bb2, unwind: bb10]; // scope 1 at ui/generator/drop-track-addassign-yield.rs:33:20: 33:33
                                         // mir::Constant
                                         // + span: ui/generator/drop-track-addassign-yield.rs:33:20: 33:31
                                         // + literal: Const { ty: fn() -> String {String::new}, val: Value(<ZST>) }
    }

    bb2: {
        _16 = deref_copy (_1.0: &mut [static generator@ui/generator/drop-track-addassign-yield.rs:21:14: 21:23]); // scope 1 at ui/generator/drop-track-addassign-yield.rs:34:18: 34:19
        (((*_16) as variant#3).2: i32) = const 2_i32; // scope 1 at ui/generator/drop-track-addassign-yield.rs:34:18: 34:19
        _17 = deref_copy (_1.0: &mut [static generator@ui/generator/drop-track-addassign-yield.rs:21:14: 21:23]); // scope 1 at ui/generator/drop-track-addassign-yield.rs:24:30: 24:31
        (((*_17) as variant#3).5: i32) = const 1_i32; // scope 1 at ui/generator/drop-track-addassign-yield.rs:24:30: 24:31
        _18 = deref_copy (_1.0: &mut [static generator@ui/generator/drop-track-addassign-yield.rs:21:14: 21:23]); // scope 1 at ui/generator/drop-track-addassign-yield.rs:24:25: 24:31
        _19 = deref_copy (_1.0: &mut [static generator@ui/generator/drop-track-addassign-yield.rs:21:14: 21:23]); // scope 1 at ui/generator/drop-track-addassign-yield.rs:24:25: 24:31
        (((*_18) as variant#3).4: &mut i32) = &mut (((*_19) as variant#3).5: i32); // scope 1 at ui/generator/drop-track-addassign-yield.rs:24:25: 24:31
        _20 = deref_copy (_1.0: &mut [static generator@ui/generator/drop-track-addassign-yield.rs:21:14: 21:23]); // scope 2 at ui/generator/drop-track-addassign-yield.rs:28:24: 28:37
        (((*_20) as variant#3).7: std::string::String) = String::new() -> [return: bb3, unwind: bb9]; // scope 2 at ui/generator/drop-track-addassign-yield.rs:28:24: 28:37
                                         // mir::Constant
                                         // + span: ui/generator/drop-track-addassign-yield.rs:28:24: 28:35
                                         // + literal: Const { ty: fn() -> String {String::new}, val: Value(<ZST>) }
    }

    bb3: {
        _21 = deref_copy (_1.0: &mut [static generator@ui/generator/drop-track-addassign-yield.rs:21:14: 21:23]); // scope 2 at ui/generator/drop-track-addassign-yield.rs:29:22: 29:23
        (((*_21) as variant#3).6: i32) = const 1_i32; // scope 2 at ui/generator/drop-track-addassign-yield.rs:29:22: 29:23
        _5 = ();                         // scope 2 at ui/generator/drop-track-addassign-yield.rs:26:23: 26:25
        _0 = GeneratorState::<(), ()>::Yielded(move _5); // scope 2 at ui/generator/drop-track-addassign-yield.rs:26:17: 26:25
        _22 = deref_copy (_1.0: &mut [static generator@ui/generator/drop-track-addassign-yield.rs:21:14: 21:23]); // scope 2 at ui/generator/drop-track-addassign-yield.rs:26:17: 26:25
        discriminant((*_22)) = 3;        // scope 2 at ui/generator/drop-track-addassign-yield.rs:26:17: 26:25
        return;                          // scope 2 at ui/generator/drop-track-addassign-yield.rs:26:17: 26:25
    }

    bb4: {
        (*_4) = move (_6.0: i32);        // scope 2 at ui/generator/drop-track-addassign-yield.rs:25:13: 30:14
        _26 = deref_copy (_1.0: &mut [static generator@ui/generator/drop-track-addassign-yield.rs:21:14: 21:23]); // scope 2 at ui/generator/drop-track-addassign-yield.rs:30:14: 30:15
        drop((((*_26) as variant#3).7: std::string::String)) -> [return: bb5, unwind: bb9]; // scope 2 at ui/generator/drop-track-addassign-yield.rs:30:14: 30:15
    }

    bb5: {
        _7 = ();                         // scope 2 at ui/generator/drop-track-addassign-yield.rs:31:13: 31:18
        _0 = GeneratorState::<(), ()>::Yielded(move _7); // scope 2 at ui/generator/drop-track-addassign-yield.rs:31:13: 31:18
        _27 = deref_copy (_1.0: &mut [static generator@ui/generator/drop-track-addassign-yield.rs:21:14: 21:23]); // scope 2 at ui/generator/drop-track-addassign-yield.rs:31:13: 31:18
        discriminant((*_27)) = 4;        // scope 2 at ui/generator/drop-track-addassign-yield.rs:31:13: 31:18
        return;                          // scope 2 at ui/generator/drop-track-addassign-yield.rs:31:13: 31:18
    }

    bb6: {
        (*_3) = move (_8.0: i32);        // scope 1 at ui/generator/drop-track-addassign-yield.rs:23:9: 35:10
        _31 = deref_copy (_1.0: &mut [static generator@ui/generator/drop-track-addassign-yield.rs:21:14: 21:23]); // scope 1 at ui/generator/drop-track-addassign-yield.rs:35:10: 35:11
        drop((((*_31) as variant#3).3: std::string::String)) -> [return: bb7, unwind: bb10]; // scope 1 at ui/generator/drop-track-addassign-yield.rs:35:10: 35:11
    }

    bb7: {
        _9 = const ();                   // scope 0 at ui/generator/drop-track-addassign-yield.rs:21:24: 36:6
        _0 = GeneratorState::<(), ()>::Complete(move _9); // scope 0 at ui/generator/drop-track-addassign-yield.rs:36:6: 36:6
        _32 = deref_copy (_1.0: &mut [static generator@ui/generator/drop-track-addassign-yield.rs:21:14: 21:23]); // scope 0 at ui/generator/drop-track-addassign-yield.rs:36:6: 36:6
        discriminant((*_32)) = 1;        // scope 0 at ui/generator/drop-track-addassign-yield.rs:36:6: 36:6
        return;                          // scope 0 at ui/generator/drop-track-addassign-yield.rs:36:6: 36:6
    }

    bb8 (cleanup): {
        _33 = deref_copy (_1.0: &mut [static generator@ui/generator/drop-track-addassign-yield.rs:21:14: 21:23]); // scope 2 at ui/generator/drop-track-addassign-yield.rs:30:14: 30:15
        drop((((*_33) as variant#3).7: std::string::String)) -> bb9; // scope 2 at ui/generator/drop-track-addassign-yield.rs:30:14: 30:15
    }

    bb9 (cleanup): {
        _34 = deref_copy (_1.0: &mut [static generator@ui/generator/drop-track-addassign-yield.rs:21:14: 21:23]); // scope 1 at ui/generator/drop-track-addassign-yield.rs:35:10: 35:11
        drop((((*_34) as variant#3).3: std::string::String)) -> bb10; // scope 1 at ui/generator/drop-track-addassign-yield.rs:35:10: 35:11
    }

    bb10 (cleanup): {
        _35 = deref_copy (_1.0: &mut [static generator@ui/generator/drop-track-addassign-yield.rs:21:14: 21:23]); // scope 0 at ui/generator/drop-track-addassign-yield.rs:21:14: 36:6
        discriminant((*_35)) = 2;        // scope 0 at ui/generator/drop-track-addassign-yield.rs:21:14: 36:6
        resume;                          // scope 0 at ui/generator/drop-track-addassign-yield.rs:21:14: 36:6
    }

    bb11: {
        _23 = deref_copy (_1.0: &mut [static generator@ui/generator/drop-track-addassign-yield.rs:21:14: 21:23]); // scope 2 at ui/generator/drop-track-addassign-yield.rs:27:17: 27:22
        _4 = move (((*_23) as variant#3).4: &mut i32); // scope 2 at ui/generator/drop-track-addassign-yield.rs:27:17: 27:22
        _24 = deref_copy (_1.0: &mut [static generator@ui/generator/drop-track-addassign-yield.rs:21:14: 21:23]); // scope 2 at ui/generator/drop-track-addassign-yield.rs:25:13: 30:14
        _6 = CheckedAdd((*_4), (((*_24) as variant#3).6: i32)); // scope 2 at ui/generator/drop-track-addassign-yield.rs:25:13: 30:14
        _25 = deref_copy (_1.0: &mut [static generator@ui/generator/drop-track-addassign-yield.rs:21:14: 21:23]); // scope 2 at ui/generator/drop-track-addassign-yield.rs:25:13: 30:14
        assert(!move (_6.1: bool), "attempt to compute `{} + {}`, which would overflow", (*_4), move (((*_25) as variant#3).6: i32)) -> [success: bb4, unwind: bb8]; // scope 2 at ui/generator/drop-track-addassign-yield.rs:25:13: 30:14
    }

    bb12: {
        _28 = deref_copy (_1.0: &mut [static generator@ui/generator/drop-track-addassign-yield.rs:21:14: 21:23]); // scope 2 at ui/generator/drop-track-addassign-yield.rs:32:13: 32:14
        _3 = move (((*_28) as variant#3).0: &mut i32); // scope 2 at ui/generator/drop-track-addassign-yield.rs:32:13: 32:14
        _29 = deref_copy (_1.0: &mut [static generator@ui/generator/drop-track-addassign-yield.rs:21:14: 21:23]); // scope 1 at ui/generator/drop-track-addassign-yield.rs:23:9: 35:10
        _8 = CheckedAdd((*_3), (((*_29) as variant#3).2: i32)); // scope 1 at ui/generator/drop-track-addassign-yield.rs:23:9: 35:10
        _30 = deref_copy (_1.0: &mut [static generator@ui/generator/drop-track-addassign-yield.rs:21:14: 21:23]); // scope 1 at ui/generator/drop-track-addassign-yield.rs:23:9: 35:10
        assert(!move (_8.1: bool), "attempt to compute `{} + {}`, which would overflow", (*_3), move (((*_30) as variant#3).2: i32)) -> [success: bb6, unwind: bb9]; // scope 1 at ui/generator/drop-track-addassign-yield.rs:23:9: 35:10
    }

    bb13: {
        assert(const false, "generator resumed after panicking") -> bb13; // scope 0 at ui/generator/drop-track-addassign-yield.rs:21:14: 36:6
    }

    bb14: {
        assert(const false, "generator resumed after completion") -> bb14; // scope 0 at ui/generator/drop-track-addassign-yield.rs:21:14: 36:6
    }

    bb15: {
        unreachable;                     // scope 0 at ui/generator/drop-track-addassign-yield.rs:21:14: 36:6
    }
}

fn main() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/generator/drop-track-addassign-yield.rs:39:11: 39:11

    bb0: {
        _0 = foo() -> bb1;               // scope 0 at ui/generator/drop-track-addassign-yield.rs:40:5: 40:10
                                         // mir::Constant
                                         // + span: ui/generator/drop-track-addassign-yield.rs:40:5: 40:8
                                         // + literal: Const { ty: fn() {foo}, val: Value(<ZST>) }
    }

    bb1: {
        return;                          // scope 0 at ui/generator/drop-track-addassign-yield.rs:41:2: 41:2
    }
}
