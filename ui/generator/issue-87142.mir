// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
fn <impl at ui/generator/issue-87142.rs:22:1: 22:33>::start(_1: Context<()>) -> <() as GeneratorProviderAlt>::Gen {
    debug ctx => _1;                     // in scope 0 at ui/generator/issue-87142.rs:24:14: 24:17
    let mut _0: <() as GeneratorProviderAlt>::Gen; // return place in scope 0 at ui/generator/issue-87142.rs:24:37: 24:46

    bb0: {
        _0 = [generator@ui/generator/issue-87142.rs:25:9: 25:16 (#0)] { ctx: move _1 }; // scope 0 at ui/generator/issue-87142.rs:25:9: 30:10
                                         // generator
                                         // + def_id: DefId(0:13 ~ issue_87142[84e4]::{impl#0}::start::{closure#0})
                                         // + substs: [
                                         //     (),
                                         //     (),
                                         //     (),
                                         //     {()},
                                         //     (Context<()>,),
                                         // ]
                                         // + movability: Movable
        return;                          // scope 0 at ui/generator/issue-87142.rs:31:6: 31:6
    }
}

fn <impl at ui/generator/issue-87142.rs:22:1: 22:33>::start::{closure#0}(_1: Pin<&mut [generator@ui/generator/issue-87142.rs:25:9: 25:16]>, _2: ()) -> GeneratorState<(), ()> {
    debug ctx => ((*(_1.0: &mut [generator@ui/generator/issue-87142.rs:25:9: 25:16])).0: Context<()>); // in scope 0 at ui/generator/issue-87142.rs:24:14: 24:17
    let mut _0: std::ops::GeneratorState<(), ()>; // return place in scope 0 at ui/generator/issue-87142.rs:25:9: 30:10
    let mut _3: ();                      // in scope 0 at ui/generator/issue-87142.rs:29:19: 29:21
    let mut _4: ();                      // in scope 0 at ui/generator/issue-87142.rs:25:17: 25:17
    let mut _5: u32;                     // in scope 0 at ui/generator/issue-87142.rs:25:9: 30:10
    let mut _6: &mut [generator@ui/generator/issue-87142.rs:25:9: 25:16]; // in scope 0 at ui/generator/issue-87142.rs:25:9: 30:10
    let mut _7: &mut [generator@ui/generator/issue-87142.rs:25:9: 25:16]; // in scope 0 at ui/generator/issue-87142.rs:25:9: 30:10
    let mut _8: &mut [generator@ui/generator/issue-87142.rs:25:9: 25:16]; // in scope 0 at ui/generator/issue-87142.rs:25:9: 30:10
    let mut _9: &mut [generator@ui/generator/issue-87142.rs:25:9: 25:16]; // in scope 0 at ui/generator/issue-87142.rs:25:9: 30:10
    let mut _10: &mut [generator@ui/generator/issue-87142.rs:25:9: 25:16]; // in scope 0 at ui/generator/issue-87142.rs:25:9: 30:10

    bb0: {
        _6 = deref_copy (_1.0: &mut [generator@ui/generator/issue-87142.rs:25:9: 25:16]); // scope 0 at ui/generator/issue-87142.rs:25:9: 30:10
        _5 = discriminant((*_6));        // scope 0 at ui/generator/issue-87142.rs:25:9: 30:10
        switchInt(move _5) -> [0: bb1, 1: bb6, 2: bb5, 3: bb4, otherwise: bb7]; // scope 0 at ui/generator/issue-87142.rs:25:9: 30:10
    }

    bb1: {
        _3 = ();                         // scope 0 at ui/generator/issue-87142.rs:29:19: 29:21
        _0 = GeneratorState::<(), ()>::Yielded(move _3); // scope 0 at ui/generator/issue-87142.rs:29:13: 29:21
        _7 = deref_copy (_1.0: &mut [generator@ui/generator/issue-87142.rs:25:9: 25:16]); // scope 0 at ui/generator/issue-87142.rs:29:13: 29:21
        discriminant((*_7)) = 3;         // scope 0 at ui/generator/issue-87142.rs:29:13: 29:21
        return;                          // scope 0 at ui/generator/issue-87142.rs:29:13: 29:21
    }

    bb2 (cleanup): {
        _10 = deref_copy (_1.0: &mut [generator@ui/generator/issue-87142.rs:25:9: 25:16]); // scope 0 at ui/generator/issue-87142.rs:25:9: 30:10
        discriminant((*_10)) = 2;        // scope 0 at ui/generator/issue-87142.rs:25:9: 30:10
        resume;                          // scope 0 at ui/generator/issue-87142.rs:25:9: 30:10
    }

    bb3: {
        _0 = GeneratorState::<(), ()>::Complete(move _4); // scope 0 at ui/generator/issue-87142.rs:30:10: 30:10
        _8 = deref_copy (_1.0: &mut [generator@ui/generator/issue-87142.rs:25:9: 25:16]); // scope 0 at ui/generator/issue-87142.rs:30:10: 30:10
        discriminant((*_8)) = 1;         // scope 0 at ui/generator/issue-87142.rs:30:10: 30:10
        return;                          // scope 0 at ui/generator/issue-87142.rs:30:10: 30:10
    }

    bb4: {
        _4 = const ();                   // scope 0 at ui/generator/issue-87142.rs:25:17: 30:10
        _9 = deref_copy (_1.0: &mut [generator@ui/generator/issue-87142.rs:25:9: 25:16]); // scope 0 at ui/generator/issue-87142.rs:30:9: 30:10
        drop(((*_9).0: Context<()>)) -> [return: bb3, unwind: bb2]; // scope 0 at ui/generator/issue-87142.rs:30:9: 30:10
    }

    bb5: {
        assert(const false, "generator resumed after panicking") -> bb5; // scope 0 at ui/generator/issue-87142.rs:25:9: 30:10
    }

    bb6: {
        assert(const false, "generator resumed after completion") -> bb6; // scope 0 at ui/generator/issue-87142.rs:25:9: 30:10
    }

    bb7: {
        unreachable;                     // scope 0 at ui/generator/issue-87142.rs:25:9: 30:10
    }
}
