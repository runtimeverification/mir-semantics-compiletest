// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
fn main() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/generator/overlap-locals.rs:5:11: 5:11
    let _1: [generator@ui/generator/overlap-locals.rs:6:13: 6:15]; // in scope 0 at ui/generator/overlap-locals.rs:6:9: 6:10
    let mut _2: (&usize, &usize);        // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _3: &usize;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let mut _4: &usize;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let _5: usize;                       // in scope 0 at ui/generator/overlap-locals.rs:28:19: 28:44
    let mut _6: &[generator@ui/generator/overlap-locals.rs:6:13: 6:15]; // in scope 0 at ui/generator/overlap-locals.rs:28:41: 28:43
    let _7: &[generator@ui/generator/overlap-locals.rs:6:13: 6:15]; // in scope 0 at ui/generator/overlap-locals.rs:28:41: 28:43
    let mut _10: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    let mut _11: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
    let mut _12: usize;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
    let mut _13: usize;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
    let _15: !;                          // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
    let mut _16: core::panicking::AssertKind; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
    let mut _17: &usize;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let _18: &usize;                     // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let mut _19: &usize;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let _20: &usize;                     // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let mut _21: std::option::Option<std::fmt::Arguments<'_>>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
    scope 1 {
        debug a => _1;                   // in scope 1 at ui/generator/overlap-locals.rs:6:9: 6:10
        let _8: &usize;                  // in scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        let _9: &usize;                  // in scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        let mut _22: &usize;             // in scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        scope 2 {
            debug left_val => _8;        // in scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
            debug right_val => _9;       // in scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
            let _14: core::panicking::AssertKind; // in scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
            scope 3 {
                debug kind => _14;       // in scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
            }
        }
    }

    bb0: {
        _1 = [generator@ui/generator/overlap-locals.rs:6:13: 6:15 (#0)]; // scope 0 at ui/generator/overlap-locals.rs:6:13: 27:6
                                         // generator
                                         // + def_id: DefId(0:4 ~ overlap_locals[202c]::main::{closure#0})
                                         // + substs: [
                                         //     (),
                                         //     (),
                                         //     (),
                                         //     {i32, ()},
                                         //     (),
                                         // ]
                                         // + movability: Movable
        _22 = const _;                   // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
                                         // + literal: Const { ty: &usize, val: Unevaluated(main, [], Some(promoted[0])) }
        _3 = _22;                        // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _7 = &_1;                        // scope 1 at ui/generator/overlap-locals.rs:28:41: 28:43
        _6 = _7;                         // scope 1 at ui/generator/overlap-locals.rs:28:41: 28:43
        _5 = std::mem::size_of_val::<[generator@ui/generator/overlap-locals.rs:6:13: 6:15]>(move _6) -> bb1; // scope 1 at ui/generator/overlap-locals.rs:28:19: 28:44
                                         // mir::Constant
                                         // + span: ui/generator/overlap-locals.rs:28:19: 28:40
                                         // + literal: Const { ty: for<'a> fn(&'a [generator@ui/generator/overlap-locals.rs:6:13: 6:15]) -> usize {std::mem::size_of_val::<[generator@ui/generator/overlap-locals.rs:6:13: 6:15]>}, val: Value(<ZST>) }
    }

    bb1: {
        _4 = &_5;                        // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _2 = (move _3, move _4);         // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _8 = (_2.0: &usize);             // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _9 = (_2.1: &usize);             // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _12 = const 8_usize;             // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
        _13 = (*_9);                     // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
        _11 = Eq(move _12, move _13);    // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
        _10 = Not(move _11);             // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
        switchInt(move _10) -> [0: bb3, otherwise: bb2]; // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    }

    bb2: {
        _14 = const core::panicking::AssertKind::Eq; // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _16 = const core::panicking::AssertKind::Eq; // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _18 = _8;                        // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _17 = _18;                       // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _20 = _9;                        // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _19 = _20;                       // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _21 = Option::<Arguments<'_>>::None; // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
        _15 = core::panicking::assert_failed::<usize, usize>(move _16, move _17, move _19, move _21); // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:53
                                         // + literal: Const { ty: for<'a, 'b, 'c> fn(core::panicking::AssertKind, &'a usize, &'b usize, Option<Arguments<'c>>) -> ! {core::panicking::assert_failed::<usize, usize>}, val: Value(<ZST>) }
    }

    bb3: {
        return;                          // scope 0 at ui/generator/overlap-locals.rs:29:2: 29:2
    }
}

promoted[0] in main: &usize = {
    let mut _0: &usize;                  // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let mut _1: usize;                   // in scope 0 at ui/generator/overlap-locals.rs:28:16: 28:17

    bb0: {
        _1 = const 8_usize;              // scope 0 at ui/generator/overlap-locals.rs:28:16: 28:17
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    }
}

fn main::{closure#0}(_1: Pin<&mut [generator@ui/generator/overlap-locals.rs:6:13: 6:15]>, _2: ()) -> GeneratorState<(), ()> {
    let mut _0: std::ops::GeneratorState<(), ()>; // return place in scope 0 at ui/generator/overlap-locals.rs:6:13: 27:6
    let mut _3: ();                      // in scope 0 at ui/generator/overlap-locals.rs:9:13: 9:18
    let _4: ();                          // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:62
    let mut _5: std::fmt::Arguments<'_>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _6: &[&str];                 // in scope 0 at ui/generator/overlap-locals.rs:10:22: 10:28
    let mut _7: &[&str; 2];              // in scope 0 at ui/generator/overlap-locals.rs:10:22: 10:28
    let _8: &[&str; 2];                  // in scope 0 at ui/generator/overlap-locals.rs:10:22: 10:28
    let mut _9: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _10: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let _11: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let _12: [core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _13: core::fmt::ArgumentV1<'_>; // in scope 0 at ui/generator/overlap-locals.rs:10:30: 10:31
    let mut _14: &i32;                   // in scope 0 at ui/generator/overlap-locals.rs:10:30: 10:31
    let _15: &i32;                       // in scope 0 at ui/generator/overlap-locals.rs:10:30: 10:31
    let mut _16: ();                     // in scope 0 at ui/generator/overlap-locals.rs:14:13: 14:18
    let _17: ();                         // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:62
    let mut _18: std::fmt::Arguments<'_>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _19: &[&str];                // in scope 0 at ui/generator/overlap-locals.rs:15:22: 15:28
    let mut _20: &[&str; 2];             // in scope 0 at ui/generator/overlap-locals.rs:15:22: 15:28
    let _21: &[&str; 2];                 // in scope 0 at ui/generator/overlap-locals.rs:15:22: 15:28
    let mut _22: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _23: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let _24: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let _25: [core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _26: core::fmt::ArgumentV1<'_>; // in scope 0 at ui/generator/overlap-locals.rs:15:30: 15:31
    let mut _27: &i32;                   // in scope 0 at ui/generator/overlap-locals.rs:15:30: 15:31
    let _28: &i32;                       // in scope 0 at ui/generator/overlap-locals.rs:15:30: 15:31
    let mut _29: ();                     // in scope 0 at ui/generator/overlap-locals.rs:19:13: 19:18
    let _30: ();                         // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:62
    let mut _31: std::fmt::Arguments<'_>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _32: &[&str];                // in scope 0 at ui/generator/overlap-locals.rs:20:22: 20:28
    let mut _33: &[&str; 2];             // in scope 0 at ui/generator/overlap-locals.rs:20:22: 20:28
    let _34: &[&str; 2];                 // in scope 0 at ui/generator/overlap-locals.rs:20:22: 20:28
    let mut _35: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _36: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let _37: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let _38: [core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _39: core::fmt::ArgumentV1<'_>; // in scope 0 at ui/generator/overlap-locals.rs:20:30: 20:31
    let mut _40: &i32;                   // in scope 0 at ui/generator/overlap-locals.rs:20:30: 20:31
    let _41: &i32;                       // in scope 0 at ui/generator/overlap-locals.rs:20:30: 20:31
    let mut _42: ();                     // in scope 0 at ui/generator/overlap-locals.rs:24:13: 24:18
    let _43: ();                         // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:62
    let mut _44: std::fmt::Arguments<'_>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _45: &[&str];                // in scope 0 at ui/generator/overlap-locals.rs:25:22: 25:28
    let mut _46: &[&str; 2];             // in scope 0 at ui/generator/overlap-locals.rs:25:22: 25:28
    let _47: &[&str; 2];                 // in scope 0 at ui/generator/overlap-locals.rs:25:22: 25:28
    let mut _48: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _49: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let _50: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let _51: [core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _52: core::fmt::ArgumentV1<'_>; // in scope 0 at ui/generator/overlap-locals.rs:25:30: 25:31
    let mut _53: &i32;                   // in scope 0 at ui/generator/overlap-locals.rs:25:30: 25:31
    let _54: &i32;                       // in scope 0 at ui/generator/overlap-locals.rs:25:30: 25:31
    let mut _59: ();                     // in scope 0 at ui/generator/overlap-locals.rs:6:16: 6:16
    let mut _60: u32;                    // in scope 0 at ui/generator/overlap-locals.rs:6:13: 27:6
    let mut _61: &mut [generator@ui/generator/overlap-locals.rs:6:13: 6:15]; // in scope 0 at ui/generator/overlap-locals.rs:6:13: 27:6
    let mut _62: &mut [generator@ui/generator/overlap-locals.rs:6:13: 6:15]; // in scope 0 at ui/generator/overlap-locals.rs:6:13: 27:6
    let mut _63: &mut [generator@ui/generator/overlap-locals.rs:6:13: 6:15]; // in scope 0 at ui/generator/overlap-locals.rs:6:13: 27:6
    let mut _64: &mut [generator@ui/generator/overlap-locals.rs:6:13: 6:15]; // in scope 0 at ui/generator/overlap-locals.rs:6:13: 27:6
    let mut _65: &mut [generator@ui/generator/overlap-locals.rs:6:13: 6:15]; // in scope 0 at ui/generator/overlap-locals.rs:6:13: 27:6
    let mut _66: &mut [generator@ui/generator/overlap-locals.rs:6:13: 6:15]; // in scope 0 at ui/generator/overlap-locals.rs:6:13: 27:6
    let mut _67: &mut [generator@ui/generator/overlap-locals.rs:6:13: 6:15]; // in scope 0 at ui/generator/overlap-locals.rs:6:13: 27:6
    let mut _68: &mut [generator@ui/generator/overlap-locals.rs:6:13: 6:15]; // in scope 0 at ui/generator/overlap-locals.rs:6:13: 27:6
    let mut _69: &mut [generator@ui/generator/overlap-locals.rs:6:13: 6:15]; // in scope 0 at ui/generator/overlap-locals.rs:6:13: 27:6
    let mut _70: &mut [generator@ui/generator/overlap-locals.rs:6:13: 6:15]; // in scope 0 at ui/generator/overlap-locals.rs:6:13: 27:6
    let mut _71: &mut [generator@ui/generator/overlap-locals.rs:6:13: 6:15]; // in scope 0 at ui/generator/overlap-locals.rs:6:13: 27:6
    let mut _72: &mut [generator@ui/generator/overlap-locals.rs:6:13: 6:15]; // in scope 0 at ui/generator/overlap-locals.rs:6:13: 27:6
    let mut _73: &mut [generator@ui/generator/overlap-locals.rs:6:13: 6:15]; // in scope 0 at ui/generator/overlap-locals.rs:6:13: 27:6
    let mut _74: &mut [generator@ui/generator/overlap-locals.rs:6:13: 6:15]; // in scope 0 at ui/generator/overlap-locals.rs:6:13: 27:6
    let mut _75: &mut [generator@ui/generator/overlap-locals.rs:6:13: 6:15]; // in scope 0 at ui/generator/overlap-locals.rs:6:13: 27:6
    scope 1 {
        debug w => (((*(_1.0: &mut [generator@ui/generator/overlap-locals.rs:6:13: 6:15])) as variant#3).0: i32); // in scope 1 at ui/generator/overlap-locals.rs:8:17: 8:18
        let mut _58: &[&str; 2];         // in scope 1 at ui/generator/overlap-locals.rs:10:22: 10:28
    }
    scope 2 {
        debug x => (((*(_1.0: &mut [generator@ui/generator/overlap-locals.rs:6:13: 6:15])) as variant#4).0: i32); // in scope 2 at ui/generator/overlap-locals.rs:13:17: 13:18
        let mut _57: &[&str; 2];         // in scope 2 at ui/generator/overlap-locals.rs:15:22: 15:28
    }
    scope 3 {
        debug y => (((*(_1.0: &mut [generator@ui/generator/overlap-locals.rs:6:13: 6:15])) as variant#5).0: i32); // in scope 3 at ui/generator/overlap-locals.rs:18:17: 18:18
        let mut _56: &[&str; 2];         // in scope 3 at ui/generator/overlap-locals.rs:20:22: 20:28
    }
    scope 4 {
        debug z => (((*(_1.0: &mut [generator@ui/generator/overlap-locals.rs:6:13: 6:15])) as variant#6).0: i32); // in scope 4 at ui/generator/overlap-locals.rs:23:17: 23:18
        let mut _55: &[&str; 2];         // in scope 4 at ui/generator/overlap-locals.rs:25:22: 25:28
    }

    bb0: {
        _61 = deref_copy (_1.0: &mut [generator@ui/generator/overlap-locals.rs:6:13: 6:15]); // scope 0 at ui/generator/overlap-locals.rs:6:13: 27:6
        _60 = discriminant((*_61));      // scope 0 at ui/generator/overlap-locals.rs:6:13: 27:6
        switchInt(move _60) -> [0: bb1, 1: bb20, 2: bb19, 3: bb15, 4: bb16, 5: bb17, 6: bb18, otherwise: bb21]; // scope 0 at ui/generator/overlap-locals.rs:6:13: 27:6
    }

    bb1: {
        _62 = deref_copy (_1.0: &mut [generator@ui/generator/overlap-locals.rs:6:13: 6:15]); // scope 0 at ui/generator/overlap-locals.rs:8:26: 8:27
        (((*_62) as variant#3).0: i32) = const 4_i32; // scope 0 at ui/generator/overlap-locals.rs:8:26: 8:27
        _3 = ();                         // scope 1 at ui/generator/overlap-locals.rs:9:13: 9:18
        _0 = GeneratorState::<(), ()>::Yielded(move _3); // scope 1 at ui/generator/overlap-locals.rs:9:13: 9:18
        _63 = deref_copy (_1.0: &mut [generator@ui/generator/overlap-locals.rs:6:13: 6:15]); // scope 1 at ui/generator/overlap-locals.rs:9:13: 9:18
        discriminant((*_63)) = 3;        // scope 1 at ui/generator/overlap-locals.rs:9:13: 9:18
        return;                          // scope 1 at ui/generator/overlap-locals.rs:9:13: 9:18
    }

    bb2: {
        _12 = [move _13];                // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _11 = &_12;                      // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _10 = _11;                       // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _9 = move _10 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _5 = Arguments::<'_>::new_v1(move _6, move _9) -> [return: bb3, unwind: bb14]; // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // + user_ty: UserType(2)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb3: {
        _4 = _print(move _5) -> [return: bb4, unwind: bb14]; // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:62
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:27
                                         // + literal: Const { ty: for<'a> fn(Arguments<'a>) {_print}, val: Value(<ZST>) }
    }

    bb4: {
        _65 = deref_copy (_1.0: &mut [generator@ui/generator/overlap-locals.rs:6:13: 6:15]); // scope 0 at ui/generator/overlap-locals.rs:13:26: 13:27
        (((*_65) as variant#4).0: i32) = const 5_i32; // scope 0 at ui/generator/overlap-locals.rs:13:26: 13:27
        _16 = ();                        // scope 2 at ui/generator/overlap-locals.rs:14:13: 14:18
        _0 = GeneratorState::<(), ()>::Yielded(move _16); // scope 2 at ui/generator/overlap-locals.rs:14:13: 14:18
        _66 = deref_copy (_1.0: &mut [generator@ui/generator/overlap-locals.rs:6:13: 6:15]); // scope 2 at ui/generator/overlap-locals.rs:14:13: 14:18
        discriminant((*_66)) = 4;        // scope 2 at ui/generator/overlap-locals.rs:14:13: 14:18
        return;                          // scope 2 at ui/generator/overlap-locals.rs:14:13: 14:18
    }

    bb5: {
        _25 = [move _26];                // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _24 = &_25;                      // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _23 = _24;                       // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _22 = move _23 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _18 = Arguments::<'_>::new_v1(move _19, move _22) -> [return: bb6, unwind: bb14]; // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // + user_ty: UserType(6)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb6: {
        _17 = _print(move _18) -> [return: bb7, unwind: bb14]; // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:62
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:27
                                         // + literal: Const { ty: for<'a> fn(Arguments<'a>) {_print}, val: Value(<ZST>) }
    }

    bb7: {
        _68 = deref_copy (_1.0: &mut [generator@ui/generator/overlap-locals.rs:6:13: 6:15]); // scope 0 at ui/generator/overlap-locals.rs:18:26: 18:27
        (((*_68) as variant#5).0: i32) = const 6_i32; // scope 0 at ui/generator/overlap-locals.rs:18:26: 18:27
        _29 = ();                        // scope 3 at ui/generator/overlap-locals.rs:19:13: 19:18
        _0 = GeneratorState::<(), ()>::Yielded(move _29); // scope 3 at ui/generator/overlap-locals.rs:19:13: 19:18
        _69 = deref_copy (_1.0: &mut [generator@ui/generator/overlap-locals.rs:6:13: 6:15]); // scope 3 at ui/generator/overlap-locals.rs:19:13: 19:18
        discriminant((*_69)) = 5;        // scope 3 at ui/generator/overlap-locals.rs:19:13: 19:18
        return;                          // scope 3 at ui/generator/overlap-locals.rs:19:13: 19:18
    }

    bb8: {
        _38 = [move _39];                // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _37 = &_38;                      // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _36 = _37;                       // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _35 = move _36 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _31 = Arguments::<'_>::new_v1(move _32, move _35) -> [return: bb9, unwind: bb14]; // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // + user_ty: UserType(10)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb9: {
        _30 = _print(move _31) -> [return: bb10, unwind: bb14]; // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:62
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:27
                                         // + literal: Const { ty: for<'a> fn(Arguments<'a>) {_print}, val: Value(<ZST>) }
    }

    bb10: {
        _71 = deref_copy (_1.0: &mut [generator@ui/generator/overlap-locals.rs:6:13: 6:15]); // scope 0 at ui/generator/overlap-locals.rs:23:26: 23:27
        (((*_71) as variant#6).0: i32) = const 7_i32; // scope 0 at ui/generator/overlap-locals.rs:23:26: 23:27
        _42 = ();                        // scope 4 at ui/generator/overlap-locals.rs:24:13: 24:18
        _0 = GeneratorState::<(), ()>::Yielded(move _42); // scope 4 at ui/generator/overlap-locals.rs:24:13: 24:18
        _72 = deref_copy (_1.0: &mut [generator@ui/generator/overlap-locals.rs:6:13: 6:15]); // scope 4 at ui/generator/overlap-locals.rs:24:13: 24:18
        discriminant((*_72)) = 6;        // scope 4 at ui/generator/overlap-locals.rs:24:13: 24:18
        return;                          // scope 4 at ui/generator/overlap-locals.rs:24:13: 24:18
    }

    bb11: {
        _51 = [move _52];                // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _50 = &_51;                      // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _49 = _50;                       // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _48 = move _49 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _44 = Arguments::<'_>::new_v1(move _45, move _48) -> [return: bb12, unwind: bb14]; // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // + user_ty: UserType(14)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb12: {
        _43 = _print(move _44) -> [return: bb13, unwind: bb14]; // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:62
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:27
                                         // + literal: Const { ty: for<'a> fn(Arguments<'a>) {_print}, val: Value(<ZST>) }
    }

    bb13: {
        _59 = const ();                  // scope 0 at ui/generator/overlap-locals.rs:22:9: 26:10
        _0 = GeneratorState::<(), ()>::Complete(move _59); // scope 0 at ui/generator/overlap-locals.rs:27:6: 27:6
        _74 = deref_copy (_1.0: &mut [generator@ui/generator/overlap-locals.rs:6:13: 6:15]); // scope 0 at ui/generator/overlap-locals.rs:27:6: 27:6
        discriminant((*_74)) = 1;        // scope 0 at ui/generator/overlap-locals.rs:27:6: 27:6
        return;                          // scope 0 at ui/generator/overlap-locals.rs:27:6: 27:6
    }

    bb14 (cleanup): {
        _75 = deref_copy (_1.0: &mut [generator@ui/generator/overlap-locals.rs:6:13: 6:15]); // scope 0 at ui/generator/overlap-locals.rs:6:13: 27:6
        discriminant((*_75)) = 2;        // scope 0 at ui/generator/overlap-locals.rs:6:13: 27:6
        resume;                          // scope 0 at ui/generator/overlap-locals.rs:6:13: 27:6
    }

    bb15: {
        _58 = const _;                   // scope 1 at ui/generator/overlap-locals.rs:10:22: 10:28
                                         // mir::Constant
                                         // + span: ui/generator/overlap-locals.rs:10:22: 10:28
                                         // + literal: Const { ty: &[&str; 2], val: Unevaluated(main::{closure#0}, [<resume_ty>, <yield_ty>, <return_ty>, <witness>, <upvars>], Some(promoted[3])) }
        _8 = _58;                        // scope 1 at ui/generator/overlap-locals.rs:10:22: 10:28
        _7 = _8;                         // scope 1 at ui/generator/overlap-locals.rs:10:22: 10:28
        _6 = move _7 as &[&str] (Pointer(Unsize)); // scope 1 at ui/generator/overlap-locals.rs:10:22: 10:28
        _64 = deref_copy (_1.0: &mut [generator@ui/generator/overlap-locals.rs:6:13: 6:15]); // scope 1 at ui/generator/overlap-locals.rs:10:30: 10:31
        _15 = &(((*_64) as variant#3).0: i32); // scope 1 at ui/generator/overlap-locals.rs:10:30: 10:31
        _14 = _15;                       // scope 1 at ui/generator/overlap-locals.rs:10:30: 10:31
        _13 = core::fmt::ArgumentV1::<'_>::new_debug::<i32>(move _14) -> [return: bb2, unwind: bb14]; // scope 1 at ui/generator/overlap-locals.rs:10:30: 10:31
                                         // mir::Constant
                                         // + span: ui/generator/overlap-locals.rs:10:30: 10:31
                                         // + user_ty: UserType(3)
                                         // + literal: Const { ty: for<'b> fn(&'b i32) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_debug::<i32>}, val: Value(<ZST>) }
    }

    bb16: {
        _57 = const _;                   // scope 2 at ui/generator/overlap-locals.rs:15:22: 15:28
                                         // mir::Constant
                                         // + span: ui/generator/overlap-locals.rs:15:22: 15:28
                                         // + literal: Const { ty: &[&str; 2], val: Unevaluated(main::{closure#0}, [<resume_ty>, <yield_ty>, <return_ty>, <witness>, <upvars>], Some(promoted[2])) }
        _21 = _57;                       // scope 2 at ui/generator/overlap-locals.rs:15:22: 15:28
        _20 = _21;                       // scope 2 at ui/generator/overlap-locals.rs:15:22: 15:28
        _19 = move _20 as &[&str] (Pointer(Unsize)); // scope 2 at ui/generator/overlap-locals.rs:15:22: 15:28
        _67 = deref_copy (_1.0: &mut [generator@ui/generator/overlap-locals.rs:6:13: 6:15]); // scope 2 at ui/generator/overlap-locals.rs:15:30: 15:31
        _28 = &(((*_67) as variant#4).0: i32); // scope 2 at ui/generator/overlap-locals.rs:15:30: 15:31
        _27 = _28;                       // scope 2 at ui/generator/overlap-locals.rs:15:30: 15:31
        _26 = core::fmt::ArgumentV1::<'_>::new_debug::<i32>(move _27) -> [return: bb5, unwind: bb14]; // scope 2 at ui/generator/overlap-locals.rs:15:30: 15:31
                                         // mir::Constant
                                         // + span: ui/generator/overlap-locals.rs:15:30: 15:31
                                         // + user_ty: UserType(7)
                                         // + literal: Const { ty: for<'b> fn(&'b i32) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_debug::<i32>}, val: Value(<ZST>) }
    }

    bb17: {
        _56 = const _;                   // scope 3 at ui/generator/overlap-locals.rs:20:22: 20:28
                                         // mir::Constant
                                         // + span: ui/generator/overlap-locals.rs:20:22: 20:28
                                         // + literal: Const { ty: &[&str; 2], val: Unevaluated(main::{closure#0}, [<resume_ty>, <yield_ty>, <return_ty>, <witness>, <upvars>], Some(promoted[1])) }
        _34 = _56;                       // scope 3 at ui/generator/overlap-locals.rs:20:22: 20:28
        _33 = _34;                       // scope 3 at ui/generator/overlap-locals.rs:20:22: 20:28
        _32 = move _33 as &[&str] (Pointer(Unsize)); // scope 3 at ui/generator/overlap-locals.rs:20:22: 20:28
        _70 = deref_copy (_1.0: &mut [generator@ui/generator/overlap-locals.rs:6:13: 6:15]); // scope 3 at ui/generator/overlap-locals.rs:20:30: 20:31
        _41 = &(((*_70) as variant#5).0: i32); // scope 3 at ui/generator/overlap-locals.rs:20:30: 20:31
        _40 = _41;                       // scope 3 at ui/generator/overlap-locals.rs:20:30: 20:31
        _39 = core::fmt::ArgumentV1::<'_>::new_debug::<i32>(move _40) -> [return: bb8, unwind: bb14]; // scope 3 at ui/generator/overlap-locals.rs:20:30: 20:31
                                         // mir::Constant
                                         // + span: ui/generator/overlap-locals.rs:20:30: 20:31
                                         // + user_ty: UserType(11)
                                         // + literal: Const { ty: for<'b> fn(&'b i32) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_debug::<i32>}, val: Value(<ZST>) }
    }

    bb18: {
        _55 = const _;                   // scope 4 at ui/generator/overlap-locals.rs:25:22: 25:28
                                         // mir::Constant
                                         // + span: ui/generator/overlap-locals.rs:25:22: 25:28
                                         // + literal: Const { ty: &[&str; 2], val: Unevaluated(main::{closure#0}, [<resume_ty>, <yield_ty>, <return_ty>, <witness>, <upvars>], Some(promoted[0])) }
        _47 = _55;                       // scope 4 at ui/generator/overlap-locals.rs:25:22: 25:28
        _46 = _47;                       // scope 4 at ui/generator/overlap-locals.rs:25:22: 25:28
        _45 = move _46 as &[&str] (Pointer(Unsize)); // scope 4 at ui/generator/overlap-locals.rs:25:22: 25:28
        _73 = deref_copy (_1.0: &mut [generator@ui/generator/overlap-locals.rs:6:13: 6:15]); // scope 4 at ui/generator/overlap-locals.rs:25:30: 25:31
        _54 = &(((*_73) as variant#6).0: i32); // scope 4 at ui/generator/overlap-locals.rs:25:30: 25:31
        _53 = _54;                       // scope 4 at ui/generator/overlap-locals.rs:25:30: 25:31
        _52 = core::fmt::ArgumentV1::<'_>::new_debug::<i32>(move _53) -> [return: bb11, unwind: bb14]; // scope 4 at ui/generator/overlap-locals.rs:25:30: 25:31
                                         // mir::Constant
                                         // + span: ui/generator/overlap-locals.rs:25:30: 25:31
                                         // + user_ty: UserType(15)
                                         // + literal: Const { ty: for<'b> fn(&'b i32) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_debug::<i32>}, val: Value(<ZST>) }
    }

    bb19: {
        assert(const false, "generator resumed after panicking") -> bb19; // scope 0 at ui/generator/overlap-locals.rs:6:13: 27:6
    }

    bb20: {
        assert(const false, "generator resumed after completion") -> bb20; // scope 0 at ui/generator/overlap-locals.rs:6:13: 27:6
    }

    bb21: {
        unreachable;                     // scope 0 at ui/generator/overlap-locals.rs:6:13: 27:6
    }
}

promoted[0] in main::{closure#0}: &[&str; 2] = {
    let mut _0: &[&str; 2];              // return place in scope 0 at ui/generator/overlap-locals.rs:25:22: 25:28
    let mut _1: [&str; 2];               // in scope 0 at ui/generator/overlap-locals.rs:25:22: 25:28

    bb0: {
        _1 = [const "", const "\n"];     // scope 0 at ui/generator/overlap-locals.rs:25:22: 25:28
                                         // mir::Constant
                                         // + span: ui/generator/overlap-locals.rs:25:22: 25:28
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
                                         // mir::Constant
                                         // + span: ui/generator/overlap-locals.rs:25:22: 25:28
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at ui/generator/overlap-locals.rs:25:22: 25:28
        return;                          // scope 0 at ui/generator/overlap-locals.rs:25:22: 25:28
    }
}

promoted[1] in main::{closure#0}: &[&str; 2] = {
    let mut _0: &[&str; 2];              // return place in scope 0 at ui/generator/overlap-locals.rs:20:22: 20:28
    let mut _1: [&str; 2];               // in scope 0 at ui/generator/overlap-locals.rs:20:22: 20:28

    bb0: {
        _1 = [const "", const "\n"];     // scope 0 at ui/generator/overlap-locals.rs:20:22: 20:28
                                         // mir::Constant
                                         // + span: ui/generator/overlap-locals.rs:20:22: 20:28
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
                                         // mir::Constant
                                         // + span: ui/generator/overlap-locals.rs:20:22: 20:28
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at ui/generator/overlap-locals.rs:20:22: 20:28
        return;                          // scope 0 at ui/generator/overlap-locals.rs:20:22: 20:28
    }
}

promoted[2] in main::{closure#0}: &[&str; 2] = {
    let mut _0: &[&str; 2];              // return place in scope 0 at ui/generator/overlap-locals.rs:15:22: 15:28
    let mut _1: [&str; 2];               // in scope 0 at ui/generator/overlap-locals.rs:15:22: 15:28

    bb0: {
        _1 = [const "", const "\n"];     // scope 0 at ui/generator/overlap-locals.rs:15:22: 15:28
                                         // mir::Constant
                                         // + span: ui/generator/overlap-locals.rs:15:22: 15:28
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
                                         // mir::Constant
                                         // + span: ui/generator/overlap-locals.rs:15:22: 15:28
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at ui/generator/overlap-locals.rs:15:22: 15:28
        return;                          // scope 0 at ui/generator/overlap-locals.rs:15:22: 15:28
    }
}

promoted[3] in main::{closure#0}: &[&str; 2] = {
    let mut _0: &[&str; 2];              // return place in scope 0 at ui/generator/overlap-locals.rs:10:22: 10:28
    let mut _1: [&str; 2];               // in scope 0 at ui/generator/overlap-locals.rs:10:22: 10:28

    bb0: {
        _1 = [const "", const "\n"];     // scope 0 at ui/generator/overlap-locals.rs:10:22: 10:28
                                         // mir::Constant
                                         // + span: ui/generator/overlap-locals.rs:10:22: 10:28
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
                                         // mir::Constant
                                         // + span: ui/generator/overlap-locals.rs:10:22: 10:28
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at ui/generator/overlap-locals.rs:10:22: 10:28
        return;                          // scope 0 at ui/generator/overlap-locals.rs:10:22: 10:28
    }
}
