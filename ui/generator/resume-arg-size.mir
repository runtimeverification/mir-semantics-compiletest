// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
fn main() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/generator/resume-arg-size.rs:7:11: 7:11
    let _1: [generator@ui/generator/resume-arg-size.rs:9:20: 9:34]; // in scope 0 at ui/generator/resume-arg-size.rs:9:9: 9:17
    let mut _3: (&usize, &usize);        // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _4: &usize;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let _5: usize;                       // in scope 0 at ui/generator/resume-arg-size.rs:26:16: 26:38
    let mut _6: &[generator@ui/generator/resume-arg-size.rs:9:20: 9:34]; // in scope 0 at ui/generator/resume-arg-size.rs:26:28: 26:37
    let _7: &[generator@ui/generator/resume-arg-size.rs:9:20: 9:34]; // in scope 0 at ui/generator/resume-arg-size.rs:26:28: 26:37
    let mut _8: &usize;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _11: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    let mut _12: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
    let mut _13: usize;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
    let mut _14: usize;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
    let _16: !;                          // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
    let mut _17: core::panicking::AssertKind; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
    let mut _18: &usize;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let _19: &usize;                     // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let mut _20: &usize;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let _21: &usize;                     // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let mut _22: std::option::Option<std::fmt::Arguments<'_>>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
    let mut _23: (&usize, &usize);       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _24: &usize;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let _25: usize;                      // in scope 0 at ui/generator/resume-arg-size.rs:27:16: 27:38
    let mut _26: &[generator@ui/generator/resume-arg-size.rs:17:20: 17:39]; // in scope 0 at ui/generator/resume-arg-size.rs:27:28: 27:37
    let _27: &[generator@ui/generator/resume-arg-size.rs:17:20: 17:39]; // in scope 0 at ui/generator/resume-arg-size.rs:27:28: 27:37
    let mut _28: &usize;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _31: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    let mut _32: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
    let mut _33: usize;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
    let mut _34: usize;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
    let _36: !;                          // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
    let mut _37: core::panicking::AssertKind; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
    let mut _38: &usize;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let _39: &usize;                     // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let mut _40: &usize;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let _41: &usize;                     // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let mut _42: std::option::Option<std::fmt::Arguments<'_>>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
    scope 1 {
        debug gen_copy => _1;            // in scope 1 at ui/generator/resume-arg-size.rs:9:9: 9:17
        let _2: [generator@ui/generator/resume-arg-size.rs:17:20: 17:39]; // in scope 1 at ui/generator/resume-arg-size.rs:17:9: 17:17
        scope 2 {
            debug gen_move => _2;        // in scope 2 at ui/generator/resume-arg-size.rs:17:9: 17:17
            let _9: &usize;              // in scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
            let _10: &usize;             // in scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
            let _29: &usize;             // in scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
            let _30: &usize;             // in scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
            let mut _43: &usize;         // in scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
            let mut _44: &usize;         // in scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
            scope 3 {
                debug left_val => _9;    // in scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
                debug right_val => _10;  // in scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
                let _15: core::panicking::AssertKind; // in scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                scope 4 {
                    debug kind => _15;   // in scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                }
            }
            scope 5 {
                debug left_val => _29;   // in scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
                debug right_val => _30;  // in scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
                let _35: core::panicking::AssertKind; // in scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                scope 6 {
                    debug kind => _35;   // in scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                }
            }
        }
    }

    bb0: {
        _1 = [generator@ui/generator/resume-arg-size.rs:9:20: 9:34 (#0)]; // scope 0 at ui/generator/resume-arg-size.rs:9:20: 14:6
                                         // generator
                                         // + def_id: DefId(0:5 ~ resume_arg_size[ef0d]::main::{closure#0})
                                         // + substs: [
                                         //     usize,
                                         //     (),
                                         //     (),
                                         //     {usize, ()},
                                         //     (),
                                         // ]
                                         // + movability: Movable
        _2 = [generator@ui/generator/resume-arg-size.rs:17:20: 17:39 (#0)]; // scope 1 at ui/generator/resume-arg-size.rs:17:20: 22:6
                                         // generator
                                         // + def_id: DefId(0:6 ~ resume_arg_size[ef0d]::main::{closure#1})
                                         // + substs: [
                                         //     std::boxed::Box<usize>,
                                         //     (),
                                         //     (),
                                         //     {std::boxed::Box<usize>, ()},
                                         //     (),
                                         // ]
                                         // + movability: Movable
        _7 = &_1;                        // scope 2 at ui/generator/resume-arg-size.rs:26:28: 26:37
        _6 = _7;                         // scope 2 at ui/generator/resume-arg-size.rs:26:28: 26:37
        _5 = std::mem::size_of_val::<[generator@ui/generator/resume-arg-size.rs:9:20: 9:34]>(move _6) -> [return: bb1, unwind: bb8]; // scope 2 at ui/generator/resume-arg-size.rs:26:16: 26:38
                                         // mir::Constant
                                         // + span: ui/generator/resume-arg-size.rs:26:16: 26:27
                                         // + literal: Const { ty: for<'a> fn(&'a [generator@ui/generator/resume-arg-size.rs:9:20: 9:34]) -> usize {std::mem::size_of_val::<[generator@ui/generator/resume-arg-size.rs:9:20: 9:34]>}, val: Value(<ZST>) }
    }

    bb1: {
        _4 = &_5;                        // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _44 = const _;                   // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // + literal: Const { ty: &usize, val: Unevaluated(main, [], Some(promoted[1])) }
        _8 = _44;                        // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _3 = (move _4, move _8);         // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _9 = (_3.0: &usize);             // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _10 = (_3.1: &usize);            // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _13 = (*_9);                     // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
        _14 = const 1_usize;             // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
        _12 = Eq(move _13, move _14);    // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
        _11 = Not(move _12);             // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
        switchInt(move _11) -> [0: bb3, otherwise: bb2]; // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    }

    bb2: {
        _15 = const core::panicking::AssertKind::Eq; // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _17 = const core::panicking::AssertKind::Eq; // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _19 = _9;                        // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _18 = _19;                       // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _21 = _10;                       // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _20 = _21;                       // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _22 = Option::<Arguments<'_>>::None; // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
        _16 = core::panicking::assert_failed::<usize, usize>(move _17, move _18, move _20, move _22) -> bb8; // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:53
                                         // + literal: Const { ty: for<'a, 'b, 'c> fn(core::panicking::AssertKind, &'a usize, &'b usize, Option<Arguments<'c>>) -> ! {core::panicking::assert_failed::<usize, usize>}, val: Value(<ZST>) }
    }

    bb3: {
        _27 = &_2;                       // scope 2 at ui/generator/resume-arg-size.rs:27:28: 27:37
        _26 = _27;                       // scope 2 at ui/generator/resume-arg-size.rs:27:28: 27:37
        _25 = std::mem::size_of_val::<[generator@ui/generator/resume-arg-size.rs:17:20: 17:39]>(move _26) -> [return: bb4, unwind: bb8]; // scope 2 at ui/generator/resume-arg-size.rs:27:16: 27:38
                                         // mir::Constant
                                         // + span: ui/generator/resume-arg-size.rs:27:16: 27:27
                                         // + literal: Const { ty: for<'a> fn(&'a [generator@ui/generator/resume-arg-size.rs:17:20: 17:39]) -> usize {std::mem::size_of_val::<[generator@ui/generator/resume-arg-size.rs:17:20: 17:39]>}, val: Value(<ZST>) }
    }

    bb4: {
        _24 = &_25;                      // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _43 = const _;                   // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // + literal: Const { ty: &usize, val: Unevaluated(main, [], Some(promoted[0])) }
        _28 = _43;                       // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _23 = (move _24, move _28);      // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _29 = (_23.0: &usize);           // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _30 = (_23.1: &usize);           // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _33 = (*_29);                    // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
        _34 = const 1_usize;             // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
        _32 = Eq(move _33, move _34);    // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
        _31 = Not(move _32);             // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
        switchInt(move _31) -> [0: bb6, otherwise: bb5]; // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    }

    bb5: {
        _35 = const core::panicking::AssertKind::Eq; // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _37 = const core::panicking::AssertKind::Eq; // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _39 = _29;                       // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _38 = _39;                       // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _41 = _30;                       // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _40 = _41;                       // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _42 = Option::<Arguments<'_>>::None; // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
        _36 = core::panicking::assert_failed::<usize, usize>(move _37, move _38, move _40, move _42) -> bb8; // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:53
                                         // + literal: Const { ty: for<'a, 'b, 'c> fn(core::panicking::AssertKind, &'a usize, &'b usize, Option<Arguments<'c>>) -> ! {core::panicking::assert_failed::<usize, usize>}, val: Value(<ZST>) }
    }

    bb6: {
        drop(_2) -> bb7;                 // scope 1 at ui/generator/resume-arg-size.rs:28:1: 28:2
    }

    bb7: {
        return;                          // scope 0 at ui/generator/resume-arg-size.rs:28:2: 28:2
    }

    bb8 (cleanup): {
        drop(_2) -> bb9;                 // scope 1 at ui/generator/resume-arg-size.rs:28:1: 28:2
    }

    bb9 (cleanup): {
        resume;                          // scope 0 at ui/generator/resume-arg-size.rs:7:1: 28:2
    }
}

promoted[0] in main: &usize = {
    let mut _0: &usize;                  // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _1: usize;                   // in scope 0 at ui/generator/resume-arg-size.rs:27:40: 27:41

    bb0: {
        _1 = const 1_usize;              // scope 0 at ui/generator/resume-arg-size.rs:27:40: 27:41
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    }
}

promoted[1] in main: &usize = {
    let mut _0: &usize;                  // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _1: usize;                   // in scope 0 at ui/generator/resume-arg-size.rs:26:40: 26:41

    bb0: {
        _1 = const 1_usize;              // scope 0 at ui/generator/resume-arg-size.rs:26:40: 26:41
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    }
}

fn main::{closure#0}(_1: Pin<&mut [generator@ui/generator/resume-arg-size.rs:9:20: 9:34]>, _2: usize) -> GeneratorState<(), ()> {
    debug x => _7;                       // in scope 0 at ui/generator/resume-arg-size.rs:9:21: 9:26
    let mut _0: std::ops::GeneratorState<(), ()>; // return place in scope 0 at ui/generator/resume-arg-size.rs:9:20: 14:6
    let _3: ();                          // in scope 0 at ui/generator/resume-arg-size.rs:11:13: 11:20
    let mut _4: usize;                   // in scope 0 at ui/generator/resume-arg-size.rs:11:18: 11:19
    let mut _5: usize;                   // in scope 0 at ui/generator/resume-arg-size.rs:12:17: 12:22
    let mut _6: ();                      // in scope 0 at ui/generator/resume-arg-size.rs:12:17: 12:22
    let mut _7: usize;                   // in scope 0 at ui/generator/resume-arg-size.rs:9:21: 9:26
    let mut _8: u32;                     // in scope 0 at ui/generator/resume-arg-size.rs:9:20: 14:6
    let mut _9: &mut [generator@ui/generator/resume-arg-size.rs:9:20: 9:34]; // in scope 0 at ui/generator/resume-arg-size.rs:9:20: 14:6
    let mut _10: &mut [generator@ui/generator/resume-arg-size.rs:9:20: 9:34]; // in scope 0 at ui/generator/resume-arg-size.rs:9:20: 14:6
    let mut _11: &mut [generator@ui/generator/resume-arg-size.rs:9:20: 9:34]; // in scope 0 at ui/generator/resume-arg-size.rs:9:20: 14:6

    bb0: {
        _9 = deref_copy (_1.0: &mut [generator@ui/generator/resume-arg-size.rs:9:20: 9:34]); // scope 0 at ui/generator/resume-arg-size.rs:9:20: 14:6
        _8 = discriminant((*_9));        // scope 0 at ui/generator/resume-arg-size.rs:9:20: 14:6
        switchInt(move _8) -> [0: bb1, 2: bb6, 3: bb5, otherwise: bb7]; // scope 0 at ui/generator/resume-arg-size.rs:9:20: 14:6
    }

    bb1: {
        _7 = move _2;                    // scope 0 at ui/generator/resume-arg-size.rs:9:20: 14:6
        goto -> bb2;                     // scope 0 at ui/generator/resume-arg-size.rs:10:9: 13:10
    }

    bb2: {
        _4 = _7;                         // scope 0 at ui/generator/resume-arg-size.rs:11:18: 11:19
        _3 = std::mem::drop::<usize>(move _4) -> [return: bb3, unwind: bb4]; // scope 0 at ui/generator/resume-arg-size.rs:11:13: 11:20
                                         // mir::Constant
                                         // + span: ui/generator/resume-arg-size.rs:11:13: 11:17
                                         // + literal: Const { ty: fn(usize) {std::mem::drop::<usize>}, val: Value(<ZST>) }
    }

    bb3: {
        _6 = ();                         // scope 0 at ui/generator/resume-arg-size.rs:12:17: 12:22
        _0 = GeneratorState::<(), ()>::Yielded(move _6); // scope 0 at ui/generator/resume-arg-size.rs:12:17: 12:22
        _10 = deref_copy (_1.0: &mut [generator@ui/generator/resume-arg-size.rs:9:20: 9:34]); // scope 0 at ui/generator/resume-arg-size.rs:12:17: 12:22
        discriminant((*_10)) = 3;        // scope 0 at ui/generator/resume-arg-size.rs:12:17: 12:22
        return;                          // scope 0 at ui/generator/resume-arg-size.rs:12:17: 12:22
    }

    bb4 (cleanup): {
        _11 = deref_copy (_1.0: &mut [generator@ui/generator/resume-arg-size.rs:9:20: 9:34]); // scope 0 at ui/generator/resume-arg-size.rs:9:20: 14:6
        discriminant((*_11)) = 2;        // scope 0 at ui/generator/resume-arg-size.rs:9:20: 14:6
        resume;                          // scope 0 at ui/generator/resume-arg-size.rs:9:20: 14:6
    }

    bb5: {
        _5 = move _2;                    // scope 0 at ui/generator/resume-arg-size.rs:9:20: 14:6
        _7 = move _5;                    // scope 0 at ui/generator/resume-arg-size.rs:12:13: 12:22
        goto -> bb2;                     // scope 0 at ui/generator/resume-arg-size.rs:10:9: 13:10
    }

    bb6: {
        assert(const false, "generator resumed after panicking") -> bb6; // scope 0 at ui/generator/resume-arg-size.rs:9:20: 14:6
    }

    bb7: {
        unreachable;                     // scope 0 at ui/generator/resume-arg-size.rs:9:20: 14:6
    }
}

fn main::{closure#1}(_1: Pin<&mut [generator@ui/generator/resume-arg-size.rs:17:20: 17:39]>, _2: Box<usize>) -> GeneratorState<(), ()> {
    debug x => _7;                       // in scope 0 at ui/generator/resume-arg-size.rs:17:21: 17:26
    let mut _0: std::ops::GeneratorState<(), ()>; // return place in scope 0 at ui/generator/resume-arg-size.rs:17:20: 22:6
    let _3: ();                          // in scope 0 at ui/generator/resume-arg-size.rs:19:13: 19:20
    let mut _4: std::boxed::Box<usize>;  // in scope 0 at ui/generator/resume-arg-size.rs:19:18: 19:19
    let mut _5: std::boxed::Box<usize>;  // in scope 0 at ui/generator/resume-arg-size.rs:20:17: 20:22
    let mut _6: ();                      // in scope 0 at ui/generator/resume-arg-size.rs:20:17: 20:22
    let mut _7: std::boxed::Box<usize>;  // in scope 0 at ui/generator/resume-arg-size.rs:17:21: 17:26
    let mut _8: u32;                     // in scope 0 at ui/generator/resume-arg-size.rs:17:20: 22:6
    let mut _9: &mut [generator@ui/generator/resume-arg-size.rs:17:20: 17:39]; // in scope 0 at ui/generator/resume-arg-size.rs:17:20: 22:6
    let mut _10: &mut [generator@ui/generator/resume-arg-size.rs:17:20: 17:39]; // in scope 0 at ui/generator/resume-arg-size.rs:17:20: 22:6
    let mut _11: &mut [generator@ui/generator/resume-arg-size.rs:17:20: 17:39]; // in scope 0 at ui/generator/resume-arg-size.rs:17:20: 22:6

    bb0: {
        _9 = deref_copy (_1.0: &mut [generator@ui/generator/resume-arg-size.rs:17:20: 17:39]); // scope 0 at ui/generator/resume-arg-size.rs:17:20: 22:6
        _8 = discriminant((*_9));        // scope 0 at ui/generator/resume-arg-size.rs:17:20: 22:6
        switchInt(move _8) -> [0: bb1, 2: bb6, 3: bb5, otherwise: bb7]; // scope 0 at ui/generator/resume-arg-size.rs:17:20: 22:6
    }

    bb1: {
        _7 = move _2;                    // scope 0 at ui/generator/resume-arg-size.rs:17:20: 22:6
        goto -> bb2;                     // scope 0 at ui/generator/resume-arg-size.rs:18:9: 21:10
    }

    bb2: {
        _4 = move _7;                    // scope 0 at ui/generator/resume-arg-size.rs:19:18: 19:19
        _3 = std::mem::drop::<Box<usize>>(move _4) -> [return: bb3, unwind: bb4]; // scope 0 at ui/generator/resume-arg-size.rs:19:13: 19:20
                                         // mir::Constant
                                         // + span: ui/generator/resume-arg-size.rs:19:13: 19:17
                                         // + literal: Const { ty: fn(Box<usize>) {std::mem::drop::<Box<usize>>}, val: Value(<ZST>) }
    }

    bb3: {
        _6 = ();                         // scope 0 at ui/generator/resume-arg-size.rs:20:17: 20:22
        _0 = GeneratorState::<(), ()>::Yielded(move _6); // scope 0 at ui/generator/resume-arg-size.rs:20:17: 20:22
        _10 = deref_copy (_1.0: &mut [generator@ui/generator/resume-arg-size.rs:17:20: 17:39]); // scope 0 at ui/generator/resume-arg-size.rs:20:17: 20:22
        discriminant((*_10)) = 3;        // scope 0 at ui/generator/resume-arg-size.rs:20:17: 20:22
        return;                          // scope 0 at ui/generator/resume-arg-size.rs:20:17: 20:22
    }

    bb4 (cleanup): {
        _11 = deref_copy (_1.0: &mut [generator@ui/generator/resume-arg-size.rs:17:20: 17:39]); // scope 0 at ui/generator/resume-arg-size.rs:17:20: 22:6
        discriminant((*_11)) = 2;        // scope 0 at ui/generator/resume-arg-size.rs:17:20: 22:6
        resume;                          // scope 0 at ui/generator/resume-arg-size.rs:17:20: 22:6
    }

    bb5: {
        _5 = move _2;                    // scope 0 at ui/generator/resume-arg-size.rs:17:20: 22:6
        _7 = move _5;                    // scope 0 at ui/generator/resume-arg-size.rs:20:13: 20:14
        goto -> bb2;                     // scope 0 at ui/generator/resume-arg-size.rs:18:9: 21:10
    }

    bb6: {
        assert(const false, "generator resumed after panicking") -> bb6; // scope 0 at ui/generator/resume-arg-size.rs:17:20: 22:6
    }

    bb7: {
        unreachable;                     // scope 0 at ui/generator/resume-arg-size.rs:17:20: 22:6
    }
}
