// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
fn foo(_1: (), _2: &bool) -> () {
    debug _a => _1;                      // in scope 0 at ui/generator/yield-in-args-rev.rs:10:8: 10:10
    debug _b => _2;                      // in scope 0 at ui/generator/yield-in-args-rev.rs:10:16: 10:18
    let mut _0: ();                      // return place in scope 0 at ui/generator/yield-in-args-rev.rs:10:27: 10:27

    bb0: {
        return;                          // scope 0 at ui/generator/yield-in-args-rev.rs:10:29: 10:29
    }
}

fn bar() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/generator/yield-in-args-rev.rs:12:10: 12:10

    bb0: {
        return;                          // scope 0 at ui/generator/yield-in-args-rev.rs:17:2: 17:2
    }
}

fn bar::{closure#0}(_1: Pin<&mut [generator@ui/generator/yield-in-args-rev.rs:13:5: 13:7]>, _2: ()) -> GeneratorState<(), ()> {
    let mut _0: std::ops::GeneratorState<(), ()>; // return place in scope 0 at ui/generator/yield-in-args-rev.rs:13:5: 16:6
    let _3: ();                          // in scope 0 at ui/generator/yield-in-args-rev.rs:15:9: 15:23
    let mut _4: ();                      // in scope 0 at ui/generator/yield-in-args-rev.rs:15:13: 15:18
    let mut _5: ();                      // in scope 0 at ui/generator/yield-in-args-rev.rs:15:13: 15:18
    let mut _6: &bool;                   // in scope 0 at ui/generator/yield-in-args-rev.rs:15:20: 15:22
    let _7: &bool;                       // in scope 0 at ui/generator/yield-in-args-rev.rs:15:20: 15:22
    let mut _8: ();                      // in scope 0 at ui/generator/yield-in-args-rev.rs:13:8: 13:8
    let mut _9: u32;                     // in scope 0 at ui/generator/yield-in-args-rev.rs:13:5: 16:6
    let mut _10: &mut [generator@ui/generator/yield-in-args-rev.rs:13:5: 13:7]; // in scope 0 at ui/generator/yield-in-args-rev.rs:13:5: 16:6
    let mut _11: &mut [generator@ui/generator/yield-in-args-rev.rs:13:5: 13:7]; // in scope 0 at ui/generator/yield-in-args-rev.rs:13:5: 16:6
    let mut _12: &mut [generator@ui/generator/yield-in-args-rev.rs:13:5: 13:7]; // in scope 0 at ui/generator/yield-in-args-rev.rs:13:5: 16:6
    let mut _13: &mut [generator@ui/generator/yield-in-args-rev.rs:13:5: 13:7]; // in scope 0 at ui/generator/yield-in-args-rev.rs:13:5: 16:6
    let mut _14: &mut [generator@ui/generator/yield-in-args-rev.rs:13:5: 13:7]; // in scope 0 at ui/generator/yield-in-args-rev.rs:13:5: 16:6
    let mut _15: &mut [generator@ui/generator/yield-in-args-rev.rs:13:5: 13:7]; // in scope 0 at ui/generator/yield-in-args-rev.rs:13:5: 16:6
    scope 1 {
        debug b => (((*(_1.0: &mut [generator@ui/generator/yield-in-args-rev.rs:13:5: 13:7])) as variant#3).0: bool); // in scope 1 at ui/generator/yield-in-args-rev.rs:14:13: 14:14
    }

    bb0: {
        _10 = deref_copy (_1.0: &mut [generator@ui/generator/yield-in-args-rev.rs:13:5: 13:7]); // scope 0 at ui/generator/yield-in-args-rev.rs:13:5: 16:6
        _9 = discriminant((*_10));       // scope 0 at ui/generator/yield-in-args-rev.rs:13:5: 16:6
        switchInt(move _9) -> [0: bb1, 1: bb6, 2: bb5, 3: bb4, otherwise: bb7]; // scope 0 at ui/generator/yield-in-args-rev.rs:13:5: 16:6
    }

    bb1: {
        _11 = deref_copy (_1.0: &mut [generator@ui/generator/yield-in-args-rev.rs:13:5: 13:7]); // scope 0 at ui/generator/yield-in-args-rev.rs:14:17: 14:21
        (((*_11) as variant#3).0: bool) = const true; // scope 0 at ui/generator/yield-in-args-rev.rs:14:17: 14:21
        _5 = ();                         // scope 1 at ui/generator/yield-in-args-rev.rs:15:13: 15:18
        _0 = GeneratorState::<(), ()>::Yielded(move _5); // scope 1 at ui/generator/yield-in-args-rev.rs:15:13: 15:18
        _12 = deref_copy (_1.0: &mut [generator@ui/generator/yield-in-args-rev.rs:13:5: 13:7]); // scope 1 at ui/generator/yield-in-args-rev.rs:15:13: 15:18
        discriminant((*_12)) = 3;        // scope 1 at ui/generator/yield-in-args-rev.rs:15:13: 15:18
        return;                          // scope 1 at ui/generator/yield-in-args-rev.rs:15:13: 15:18
    }

    bb2: {
        _8 = const ();                   // scope 0 at ui/generator/yield-in-args-rev.rs:13:8: 16:6
        _0 = GeneratorState::<(), ()>::Complete(move _8); // scope 0 at ui/generator/yield-in-args-rev.rs:16:6: 16:6
        _14 = deref_copy (_1.0: &mut [generator@ui/generator/yield-in-args-rev.rs:13:5: 13:7]); // scope 0 at ui/generator/yield-in-args-rev.rs:16:6: 16:6
        discriminant((*_14)) = 1;        // scope 0 at ui/generator/yield-in-args-rev.rs:16:6: 16:6
        return;                          // scope 0 at ui/generator/yield-in-args-rev.rs:16:6: 16:6
    }

    bb3 (cleanup): {
        _15 = deref_copy (_1.0: &mut [generator@ui/generator/yield-in-args-rev.rs:13:5: 13:7]); // scope 0 at ui/generator/yield-in-args-rev.rs:13:5: 16:6
        discriminant((*_15)) = 2;        // scope 0 at ui/generator/yield-in-args-rev.rs:13:5: 16:6
        resume;                          // scope 0 at ui/generator/yield-in-args-rev.rs:13:5: 16:6
    }

    bb4: {
        _4 = move _2;                    // scope 0 at ui/generator/yield-in-args-rev.rs:13:5: 16:6
        _13 = deref_copy (_1.0: &mut [generator@ui/generator/yield-in-args-rev.rs:13:5: 13:7]); // scope 1 at ui/generator/yield-in-args-rev.rs:15:20: 15:22
        _7 = &(((*_13) as variant#3).0: bool); // scope 1 at ui/generator/yield-in-args-rev.rs:15:20: 15:22
        _6 = _7;                         // scope 1 at ui/generator/yield-in-args-rev.rs:15:20: 15:22
        _3 = foo(move _4, move _6) -> [return: bb2, unwind: bb3]; // scope 1 at ui/generator/yield-in-args-rev.rs:15:9: 15:23
                                         // mir::Constant
                                         // + span: ui/generator/yield-in-args-rev.rs:15:9: 15:12
                                         // + literal: Const { ty: for<'a> fn((), &'a bool) {foo}, val: Value(<ZST>) }
    }

    bb5: {
        assert(const false, "generator resumed after panicking") -> bb5; // scope 0 at ui/generator/yield-in-args-rev.rs:13:5: 16:6
    }

    bb6: {
        assert(const false, "generator resumed after completion") -> bb6; // scope 0 at ui/generator/yield-in-args-rev.rs:13:5: 16:6
    }

    bb7: {
        unreachable;                     // scope 0 at ui/generator/yield-in-args-rev.rs:13:5: 16:6
    }
}

fn main() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/generator/yield-in-args-rev.rs:19:11: 19:11

    bb0: {
        return;                          // scope 0 at ui/generator/yield-in-args-rev.rs:19:14: 19:14
    }
}
