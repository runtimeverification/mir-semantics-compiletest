// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
fn take(_1: T) -> () {
    let mut _0: ();                      // return place in scope 0 at ui/generator/niche-in-generator.rs:9:18: 9:18

    bb0: {
        drop(_1) -> bb1;                 // scope 0 at ui/generator/niche-in-generator.rs:9:19: 9:20
    }

    bb1: {
        return;                          // scope 0 at ui/generator/niche-in-generator.rs:9:20: 9:20
    }
}

fn main() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/generator/niche-in-generator.rs:11:11: 11:11
    let _1: bool;                        // in scope 0 at ui/generator/niche-in-generator.rs:12:9: 12:10
    let mut _3: &bool;                   // in scope 0 at ui/generator/niche-in-generator.rs:13:16: 16:6
    let mut _4: (&usize, &usize);        // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _5: &usize;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let _6: usize;                       // in scope 0 at ui/generator/niche-in-generator.rs:18:16: 18:34
    let mut _7: &[generator@ui/generator/niche-in-generator.rs:13:16: 13:18]; // in scope 0 at ui/generator/niche-in-generator.rs:18:28: 18:33
    let _8: &[generator@ui/generator/niche-in-generator.rs:13:16: 13:18]; // in scope 0 at ui/generator/niche-in-generator.rs:18:28: 18:33
    let mut _9: &usize;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let _10: usize;                      // in scope 0 at ui/generator/niche-in-generator.rs:18:36: 18:60
    let mut _11: &std::option::Option<[generator@ui/generator/niche-in-generator.rs:13:16: 13:18]>; // in scope 0 at ui/generator/niche-in-generator.rs:18:48: 18:59
    let _12: &std::option::Option<[generator@ui/generator/niche-in-generator.rs:13:16: 13:18]>; // in scope 0 at ui/generator/niche-in-generator.rs:18:48: 18:59
    let _13: std::option::Option<[generator@ui/generator/niche-in-generator.rs:13:16: 13:18]>; // in scope 0 at ui/generator/niche-in-generator.rs:18:49: 18:59
    let mut _14: [generator@ui/generator/niche-in-generator.rs:13:16: 13:18]; // in scope 0 at ui/generator/niche-in-generator.rs:18:54: 18:58
    let mut _17: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    let mut _18: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
    let mut _19: usize;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
    let mut _20: usize;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
    let _22: !;                          // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
    let mut _23: core::panicking::AssertKind; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
    let mut _24: &usize;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let _25: &usize;                     // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let mut _26: &usize;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let _27: &usize;                     // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let mut _28: std::option::Option<std::fmt::Arguments<'_>>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
    scope 1 {
        debug x => _1;                   // in scope 1 at ui/generator/niche-in-generator.rs:12:9: 12:10
        let _2: [generator@ui/generator/niche-in-generator.rs:13:16: 13:18]; // in scope 1 at ui/generator/niche-in-generator.rs:13:9: 13:13
        scope 2 {
            debug gen1 => _2;            // in scope 2 at ui/generator/niche-in-generator.rs:13:9: 13:13
            let _15: &usize;             // in scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
            let _16: &usize;             // in scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
            scope 3 {
                debug left_val => _15;   // in scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
                debug right_val => _16;  // in scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
                let _21: core::panicking::AssertKind; // in scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                scope 4 {
                    debug kind => _21;   // in scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                }
            }
        }
    }

    bb0: {
        _1 = const false;                // scope 0 at ui/generator/niche-in-generator.rs:12:13: 12:18
        _3 = &_1;                        // scope 1 at ui/generator/niche-in-generator.rs:13:16: 16:6
        _2 = [generator@ui/generator/niche-in-generator.rs:13:16: 13:18 (#0)] { x: move _3 }; // scope 1 at ui/generator/niche-in-generator.rs:13:16: 16:6
                                         // generator
                                         // + def_id: DefId(0:7 ~ niche_in_generator[d505]::main::{closure#0})
                                         // + substs: [
                                         //     (),
                                         //     (),
                                         //     (),
                                         //     {()},
                                         //     (&bool,),
                                         // ]
                                         // + movability: Movable
        _8 = &_2;                        // scope 2 at ui/generator/niche-in-generator.rs:18:28: 18:33
        _7 = _8;                         // scope 2 at ui/generator/niche-in-generator.rs:18:28: 18:33
        _6 = std::mem::size_of_val::<[generator@ui/generator/niche-in-generator.rs:13:16: 13:18]>(move _7) -> bb1; // scope 2 at ui/generator/niche-in-generator.rs:18:16: 18:34
                                         // mir::Constant
                                         // + span: ui/generator/niche-in-generator.rs:18:16: 18:27
                                         // + literal: Const { ty: for<'a> fn(&'a [generator@ui/generator/niche-in-generator.rs:13:16: 13:18]) -> usize {std::mem::size_of_val::<[generator@ui/generator/niche-in-generator.rs:13:16: 13:18]>}, val: Value(<ZST>) }
    }

    bb1: {
        _5 = &_6;                        // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _14 = move _2;                   // scope 2 at ui/generator/niche-in-generator.rs:18:54: 18:58
        _13 = Option::<[generator@ui/generator/niche-in-generator.rs:13:16: 13:18]>::Some(move _14); // scope 2 at ui/generator/niche-in-generator.rs:18:49: 18:59
        _12 = &_13;                      // scope 2 at ui/generator/niche-in-generator.rs:18:48: 18:59
        _11 = _12;                       // scope 2 at ui/generator/niche-in-generator.rs:18:48: 18:59
        _10 = std::mem::size_of_val::<Option<[generator@ui/generator/niche-in-generator.rs:13:16: 13:18]>>(move _11) -> bb2; // scope 2 at ui/generator/niche-in-generator.rs:18:36: 18:60
                                         // mir::Constant
                                         // + span: ui/generator/niche-in-generator.rs:18:36: 18:47
                                         // + literal: Const { ty: for<'a> fn(&'a Option<[generator@ui/generator/niche-in-generator.rs:13:16: 13:18]>) -> usize {std::mem::size_of_val::<Option<[generator@ui/generator/niche-in-generator.rs:13:16: 13:18]>>}, val: Value(<ZST>) }
    }

    bb2: {
        _9 = &_10;                       // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _4 = (move _5, move _9);         // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _15 = (_4.0: &usize);            // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _16 = (_4.1: &usize);            // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _19 = (*_15);                    // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
        _20 = (*_16);                    // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
        _18 = Eq(move _19, move _20);    // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
        _17 = Not(move _18);             // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
        switchInt(move _17) -> [0: bb4, otherwise: bb3]; // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    }

    bb3: {
        _21 = const core::panicking::AssertKind::Eq; // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _23 = const core::panicking::AssertKind::Eq; // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _25 = _15;                       // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _24 = _25;                       // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _27 = _16;                       // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _26 = _27;                       // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _28 = Option::<Arguments<'_>>::None; // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
        _22 = core::panicking::assert_failed::<usize, usize>(move _23, move _24, move _26, move _28); // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:53
                                         // + literal: Const { ty: for<'a, 'b, 'c> fn(core::panicking::AssertKind, &'a usize, &'b usize, Option<Arguments<'c>>) -> ! {core::panicking::assert_failed::<usize, usize>}, val: Value(<ZST>) }
    }

    bb4: {
        return;                          // scope 0 at ui/generator/niche-in-generator.rs:19:2: 19:2
    }
}

fn main::{closure#0}(_1: Pin<&mut [generator@ui/generator/niche-in-generator.rs:13:16: 13:18]>, _2: ()) -> GeneratorState<(), ()> {
    debug x => (*((*(_1.0: &mut [generator@ui/generator/niche-in-generator.rs:13:16: 13:18])).0: &bool)); // in scope 0 at ui/generator/niche-in-generator.rs:12:9: 12:10
    let mut _0: std::ops::GeneratorState<(), ()>; // return place in scope 0 at ui/generator/niche-in-generator.rs:13:16: 16:6
    let mut _3: ();                      // in scope 0 at ui/generator/niche-in-generator.rs:14:9: 14:14
    let _4: ();                          // in scope 0 at ui/generator/niche-in-generator.rs:15:9: 15:16
    let mut _5: bool;                    // in scope 0 at ui/generator/niche-in-generator.rs:15:14: 15:15
    let mut _6: &bool;                   // in scope 0 at ui/generator/niche-in-generator.rs:13:16: 16:6
    let mut _7: ();                      // in scope 0 at ui/generator/niche-in-generator.rs:13:19: 13:19
    let mut _8: u32;                     // in scope 0 at ui/generator/niche-in-generator.rs:13:16: 16:6
    let mut _9: &mut [generator@ui/generator/niche-in-generator.rs:13:16: 13:18]; // in scope 0 at ui/generator/niche-in-generator.rs:13:16: 16:6
    let mut _10: &mut [generator@ui/generator/niche-in-generator.rs:13:16: 13:18]; // in scope 0 at ui/generator/niche-in-generator.rs:13:16: 16:6
    let mut _11: &mut [generator@ui/generator/niche-in-generator.rs:13:16: 13:18]; // in scope 0 at ui/generator/niche-in-generator.rs:13:16: 16:6
    let mut _12: &mut [generator@ui/generator/niche-in-generator.rs:13:16: 13:18]; // in scope 0 at ui/generator/niche-in-generator.rs:13:16: 16:6
    let mut _13: &mut [generator@ui/generator/niche-in-generator.rs:13:16: 13:18]; // in scope 0 at ui/generator/niche-in-generator.rs:13:16: 16:6

    bb0: {
        _9 = deref_copy (_1.0: &mut [generator@ui/generator/niche-in-generator.rs:13:16: 13:18]); // scope 0 at ui/generator/niche-in-generator.rs:13:16: 16:6
        _8 = discriminant((*_9));        // scope 0 at ui/generator/niche-in-generator.rs:13:16: 16:6
        switchInt(move _8) -> [0: bb1, 1: bb6, 2: bb5, 3: bb4, otherwise: bb7]; // scope 0 at ui/generator/niche-in-generator.rs:13:16: 16:6
    }

    bb1: {
        _3 = ();                         // scope 0 at ui/generator/niche-in-generator.rs:14:9: 14:14
        _0 = GeneratorState::<(), ()>::Yielded(move _3); // scope 0 at ui/generator/niche-in-generator.rs:14:9: 14:14
        _10 = deref_copy (_1.0: &mut [generator@ui/generator/niche-in-generator.rs:13:16: 13:18]); // scope 0 at ui/generator/niche-in-generator.rs:14:9: 14:14
        discriminant((*_10)) = 3;        // scope 0 at ui/generator/niche-in-generator.rs:14:9: 14:14
        return;                          // scope 0 at ui/generator/niche-in-generator.rs:14:9: 14:14
    }

    bb2: {
        _7 = const ();                   // scope 0 at ui/generator/niche-in-generator.rs:13:19: 16:6
        _0 = GeneratorState::<(), ()>::Complete(move _7); // scope 0 at ui/generator/niche-in-generator.rs:16:6: 16:6
        _12 = deref_copy (_1.0: &mut [generator@ui/generator/niche-in-generator.rs:13:16: 13:18]); // scope 0 at ui/generator/niche-in-generator.rs:16:6: 16:6
        discriminant((*_12)) = 1;        // scope 0 at ui/generator/niche-in-generator.rs:16:6: 16:6
        return;                          // scope 0 at ui/generator/niche-in-generator.rs:16:6: 16:6
    }

    bb3 (cleanup): {
        _13 = deref_copy (_1.0: &mut [generator@ui/generator/niche-in-generator.rs:13:16: 13:18]); // scope 0 at ui/generator/niche-in-generator.rs:13:16: 16:6
        discriminant((*_13)) = 2;        // scope 0 at ui/generator/niche-in-generator.rs:13:16: 16:6
        resume;                          // scope 0 at ui/generator/niche-in-generator.rs:13:16: 16:6
    }

    bb4: {
        _11 = deref_copy (_1.0: &mut [generator@ui/generator/niche-in-generator.rs:13:16: 13:18]); // scope 0 at ui/generator/niche-in-generator.rs:15:14: 15:15
        _6 = deref_copy ((*_11).0: &bool); // scope 0 at ui/generator/niche-in-generator.rs:15:14: 15:15
        _5 = (*_6);                      // scope 0 at ui/generator/niche-in-generator.rs:15:14: 15:15
        _4 = take::<bool>(move _5) -> [return: bb2, unwind: bb3]; // scope 0 at ui/generator/niche-in-generator.rs:15:9: 15:16
                                         // mir::Constant
                                         // + span: ui/generator/niche-in-generator.rs:15:9: 15:13
                                         // + literal: Const { ty: fn(bool) {take::<bool>}, val: Value(<ZST>) }
    }

    bb5: {
        assert(const false, "generator resumed after panicking") -> bb5; // scope 0 at ui/generator/niche-in-generator.rs:13:16: 16:6
    }

    bb6: {
        assert(const false, "generator resumed after completion") -> bb6; // scope 0 at ui/generator/niche-in-generator.rs:13:16: 16:6
    }

    bb7: {
        unreachable;                     // scope 0 at ui/generator/niche-in-generator.rs:13:16: 16:6
    }
}
