// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
fn <impl at ui/generator/drop-and-replace.rs:12:10: 12:15>::fmt(_1: &Foo, _2: &mut Formatter<'_>) -> Result<(), std::fmt::Error> {
    debug self => _1;                    // in scope 0 at ui/generator/drop-and-replace.rs:12:10: 12:15
    debug f => _2;                       // in scope 0 at ui/generator/drop-and-replace.rs:12:10: 12:15
    let mut _0: std::result::Result<(), std::fmt::Error>; // return place in scope 0 at ui/generator/drop-and-replace.rs:12:10: 12:15
    let mut _3: &mut std::fmt::Formatter<'_>; // in scope 0 at ui/generator/drop-and-replace.rs:12:10: 12:15
    let mut _4: &str;                    // in scope 0 at ui/generator/drop-and-replace.rs:12:10: 12:15
    let _5: &str;                        // in scope 0 at ui/generator/drop-and-replace.rs:12:10: 12:15
    let mut _6: &dyn std::fmt::Debug;    // in scope 0 at ui/generator/drop-and-replace.rs:13:12: 13:15
    let mut _7: &&i32;                   // in scope 0 at ui/generator/drop-and-replace.rs:13:12: 13:15
    let _8: &&i32;                       // in scope 0 at ui/generator/drop-and-replace.rs:13:12: 13:15
    let _9: &i32;                        // in scope 0 at ui/generator/drop-and-replace.rs:13:12: 13:15

    bb0: {
        _3 = &mut (*_2);                 // scope 0 at ui/generator/drop-and-replace.rs:12:10: 12:15
        _5 = const "Foo";                // scope 0 at ui/generator/drop-and-replace.rs:12:10: 12:15
                                         // mir::Constant
                                         // + span: ui/generator/drop-and-replace.rs:12:10: 12:15
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _4 = _5;                         // scope 0 at ui/generator/drop-and-replace.rs:12:10: 12:15
        _9 = &((*_1).0: i32);            // scope 0 at ui/generator/drop-and-replace.rs:13:12: 13:15
        _8 = &_9;                        // scope 0 at ui/generator/drop-and-replace.rs:13:12: 13:15
        _7 = _8;                         // scope 0 at ui/generator/drop-and-replace.rs:13:12: 13:15
        _6 = move _7 as &dyn std::fmt::Debug (Pointer(Unsize)); // scope 0 at ui/generator/drop-and-replace.rs:13:12: 13:15
        _0 = Formatter::<'_>::debug_tuple_field1_finish(move _3, move _4, move _6) -> bb1; // scope 0 at ui/generator/drop-and-replace.rs:12:10: 12:15
                                         // mir::Constant
                                         // + span: ui/generator/drop-and-replace.rs:12:10: 12:15
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: for<'b, 'a, 'c> fn(&'b mut Formatter<'_>, &'a str, &'c (dyn Debug + 'c)) -> Result<(), std::fmt::Error> {Formatter::<'_>::debug_tuple_field1_finish}, val: Value(<ZST>) }
    }

    bb1: {
        return;                          // scope 0 at ui/generator/drop-and-replace.rs:12:15: 12:15
    }
}

fn <impl at ui/generator/drop-and-replace.rs:12:17: 12:26>::eq(_1: &Foo, _2: &Foo) -> bool {
    debug self => _1;                    // in scope 0 at ui/generator/drop-and-replace.rs:12:17: 12:26
    debug other => _2;                   // in scope 0 at ui/generator/drop-and-replace.rs:12:17: 12:26
    let mut _0: bool;                    // return place in scope 0 at ui/generator/drop-and-replace.rs:12:17: 12:26
    let mut _3: i32;                     // in scope 0 at ui/generator/drop-and-replace.rs:13:12: 13:15
    let mut _4: i32;                     // in scope 0 at ui/generator/drop-and-replace.rs:13:12: 13:15

    bb0: {
        _3 = ((*_1).0: i32);             // scope 0 at ui/generator/drop-and-replace.rs:13:12: 13:15
        _4 = ((*_2).0: i32);             // scope 0 at ui/generator/drop-and-replace.rs:13:12: 13:15
        _0 = Eq(move _3, move _4);       // scope 0 at ui/generator/drop-and-replace.rs:13:12: 13:15
        return;                          // scope 0 at ui/generator/drop-and-replace.rs:12:26: 12:26
    }
}

fn <impl at ui/generator/drop-and-replace.rs:15:1: 15:18>::drop(_1: &mut Foo) -> () {
    debug self => _1;                    // in scope 0 at ui/generator/drop-and-replace.rs:16:13: 16:22
    let mut _0: ();                      // return place in scope 0 at ui/generator/drop-and-replace.rs:16:24: 16:24

    bb0: {
        return;                          // scope 0 at ui/generator/drop-and-replace.rs:16:27: 16:27
    }
}

fn main() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/generator/drop-and-replace.rs:19:11: 19:11
    let mut _1: [generator@ui/generator/drop-and-replace.rs:20:17: 20:19]; // in scope 0 at ui/generator/drop-and-replace.rs:20:9: 20:14
    let mut _2: std::ops::GeneratorState<(), ()>; // in scope 0 at ui/generator/drop-and-replace.rs:40:15: 40:42
    let mut _3: std::pin::Pin<&mut [generator@ui/generator/drop-and-replace.rs:20:17: 20:19]>; // in scope 0 at ui/generator/drop-and-replace.rs:40:15: 40:31
    let mut _4: &mut [generator@ui/generator/drop-and-replace.rs:20:17: 20:19]; // in scope 0 at ui/generator/drop-and-replace.rs:40:24: 40:30
    let mut _5: ();                      // in scope 0 at ui/generator/drop-and-replace.rs:40:39: 40:41
    let mut _6: isize;                   // in scope 0 at ui/generator/drop-and-replace.rs:41:13: 41:41
    scope 1 {
        debug a => _1;                   // in scope 1 at ui/generator/drop-and-replace.rs:20:9: 20:14
    }

    bb0: {
        _1 = [generator@ui/generator/drop-and-replace.rs:20:17: 20:19 (#0)]; // scope 0 at ui/generator/drop-and-replace.rs:20:17: 37:6
                                         // generator
                                         // + def_id: DefId(0:10 ~ drop_and_replace[f5c9]::main::{closure#0})
                                         // + substs: [
                                         //     (),
                                         //     (),
                                         //     (),
                                         //     {Foo, ()},
                                         //     (),
                                         // ]
                                         // + movability: Movable
        goto -> bb1;                     // scope 1 at ui/generator/drop-and-replace.rs:39:5: 44:6
    }

    bb1: {
        _4 = &mut _1;                    // scope 1 at ui/generator/drop-and-replace.rs:40:24: 40:30
        _3 = Pin::<&mut [generator@ui/generator/drop-and-replace.rs:20:17: 20:19]>::new(move _4) -> [return: bb2, unwind: bb6]; // scope 1 at ui/generator/drop-and-replace.rs:40:15: 40:31
                                         // mir::Constant
                                         // + span: ui/generator/drop-and-replace.rs:40:15: 40:23
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: fn(&mut [generator@ui/generator/drop-and-replace.rs:20:17: 20:19]) -> Pin<&mut [generator@ui/generator/drop-and-replace.rs:20:17: 20:19]> {Pin::<&mut [generator@ui/generator/drop-and-replace.rs:20:17: 20:19]>::new}, val: Value(<ZST>) }
    }

    bb2: {
        _2 = <[generator@ui/generator/drop-and-replace.rs:20:17: 20:19] as Generator>::resume(move _3, move _5) -> [return: bb3, unwind: bb6]; // scope 1 at ui/generator/drop-and-replace.rs:40:15: 40:42
                                         // mir::Constant
                                         // + span: ui/generator/drop-and-replace.rs:40:32: 40:38
                                         // + literal: Const { ty: for<'a> fn(Pin<&'a mut [generator@ui/generator/drop-and-replace.rs:20:17: 20:19]>, ()) -> GeneratorState<<[generator@ui/generator/drop-and-replace.rs:20:17: 20:19] as Generator>::Yield, <[generator@ui/generator/drop-and-replace.rs:20:17: 20:19] as Generator>::Return> {<[generator@ui/generator/drop-and-replace.rs:20:17: 20:19] as Generator>::resume}, val: Value(<ZST>) }
    }

    bb3: {
        _6 = discriminant(_2);           // scope 1 at ui/generator/drop-and-replace.rs:40:15: 40:42
        switchInt(move _6) -> [1: bb4, otherwise: bb1]; // scope 1 at ui/generator/drop-and-replace.rs:40:9: 40:42
    }

    bb4: {
        drop(_1) -> bb5;                 // scope 0 at ui/generator/drop-and-replace.rs:45:1: 45:2
    }

    bb5: {
        return;                          // scope 0 at ui/generator/drop-and-replace.rs:45:2: 45:2
    }

    bb6 (cleanup): {
        drop(_1) -> bb7;                 // scope 0 at ui/generator/drop-and-replace.rs:45:1: 45:2
    }

    bb7 (cleanup): {
        resume;                          // scope 0 at ui/generator/drop-and-replace.rs:19:1: 45:2
    }
}

fn main::{closure#0}(_1: Pin<&mut [generator@ui/generator/drop-and-replace.rs:20:17: 20:19]>, _2: ()) -> GeneratorState<(), ()> {
    let mut _0: std::ops::GeneratorState<(), ()>; // return place in scope 0 at ui/generator/drop-and-replace.rs:20:17: 37:6
    let mut _3: ();                      // in scope 0 at ui/generator/drop-and-replace.rs:22:9: 22:14
    let mut _4: (&i32, &i32);            // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _5: &i32;                    // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let mut _6: &i32;                    // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _9: bool;                    // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    let mut _10: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
    let mut _11: i32;                    // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
    let mut _12: i32;                    // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
    let _14: !;                          // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
    let mut _15: core::panicking::AssertKind; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
    let mut _16: &i32;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let _17: &i32;                       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let mut _18: &i32;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let _19: &i32;                       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let mut _20: std::option::Option<std::fmt::Arguments<'_>>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
    let mut _21: Foo;                    // in scope 0 at ui/generator/drop-and-replace.rs:27:13: 27:19
    let mut _22: (&i32, &i32);           // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _23: &i32;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let mut _24: &i32;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _27: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    let mut _28: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
    let mut _29: i32;                    // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
    let mut _30: i32;                    // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
    let _32: !;                          // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
    let mut _33: core::panicking::AssertKind; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
    let mut _34: &i32;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let _35: &i32;                       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let mut _36: &i32;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let _37: &i32;                       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let mut _38: std::option::Option<std::fmt::Arguments<'_>>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
    let mut _39: ();                     // in scope 0 at ui/generator/drop-and-replace.rs:32:13: 32:18
    let mut _40: (&i32, &i32);           // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _41: &i32;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let mut _42: &i32;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _45: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    let mut _46: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
    let mut _47: i32;                    // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
    let mut _48: i32;                    // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
    let _50: !;                          // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
    let mut _51: core::panicking::AssertKind; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
    let mut _52: &i32;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let _53: &i32;                       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let mut _54: &i32;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let _55: &i32;                       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let mut _56: std::option::Option<std::fmt::Arguments<'_>>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
    let mut _57: (&i32, &i32);           // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _58: &i32;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let mut _59: &i32;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _62: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    let mut _63: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
    let mut _64: i32;                    // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
    let mut _65: i32;                    // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
    let _67: !;                          // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
    let mut _68: core::panicking::AssertKind; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
    let mut _69: &i32;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let _70: &i32;                       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let mut _71: &i32;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let _72: &i32;                       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let mut _73: std::option::Option<std::fmt::Arguments<'_>>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
    let mut _78: ();                     // in scope 0 at ui/generator/drop-and-replace.rs:20:20: 20:20
    let mut _79: u32;                    // in scope 0 at ui/generator/drop-and-replace.rs:20:17: 37:6
    let mut _80: &mut [generator@ui/generator/drop-and-replace.rs:20:17: 20:19]; // in scope 0 at ui/generator/drop-and-replace.rs:20:17: 37:6
    let mut _81: &mut [generator@ui/generator/drop-and-replace.rs:20:17: 20:19]; // in scope 0 at ui/generator/drop-and-replace.rs:20:17: 37:6
    let mut _82: &mut [generator@ui/generator/drop-and-replace.rs:20:17: 20:19]; // in scope 0 at ui/generator/drop-and-replace.rs:20:17: 37:6
    let mut _83: &mut [generator@ui/generator/drop-and-replace.rs:20:17: 20:19]; // in scope 0 at ui/generator/drop-and-replace.rs:20:17: 37:6
    let mut _84: &mut [generator@ui/generator/drop-and-replace.rs:20:17: 20:19]; // in scope 0 at ui/generator/drop-and-replace.rs:20:17: 37:6
    let mut _85: &mut [generator@ui/generator/drop-and-replace.rs:20:17: 20:19]; // in scope 0 at ui/generator/drop-and-replace.rs:20:17: 37:6
    let mut _86: &mut [generator@ui/generator/drop-and-replace.rs:20:17: 20:19]; // in scope 0 at ui/generator/drop-and-replace.rs:20:17: 37:6
    let mut _87: &mut [generator@ui/generator/drop-and-replace.rs:20:17: 20:19]; // in scope 0 at ui/generator/drop-and-replace.rs:20:17: 37:6
    let mut _88: &mut [generator@ui/generator/drop-and-replace.rs:20:17: 20:19]; // in scope 0 at ui/generator/drop-and-replace.rs:20:17: 37:6
    let mut _89: &mut [generator@ui/generator/drop-and-replace.rs:20:17: 20:19]; // in scope 0 at ui/generator/drop-and-replace.rs:20:17: 37:6
    let mut _90: &mut [generator@ui/generator/drop-and-replace.rs:20:17: 20:19]; // in scope 0 at ui/generator/drop-and-replace.rs:20:17: 37:6
    let mut _91: &mut [generator@ui/generator/drop-and-replace.rs:20:17: 20:19]; // in scope 0 at ui/generator/drop-and-replace.rs:20:17: 37:6
    let mut _92: &mut [generator@ui/generator/drop-and-replace.rs:20:17: 20:19]; // in scope 0 at ui/generator/drop-and-replace.rs:20:17: 37:6
    let mut _93: &mut [generator@ui/generator/drop-and-replace.rs:20:17: 20:19]; // in scope 0 at ui/generator/drop-and-replace.rs:20:17: 37:6
    let mut _94: &mut [generator@ui/generator/drop-and-replace.rs:20:17: 20:19]; // in scope 0 at ui/generator/drop-and-replace.rs:20:17: 37:6
    let mut _95: &mut [generator@ui/generator/drop-and-replace.rs:20:17: 20:19]; // in scope 0 at ui/generator/drop-and-replace.rs:20:17: 37:6
    let mut _96: &mut [generator@ui/generator/drop-and-replace.rs:20:17: 20:19]; // in scope 0 at ui/generator/drop-and-replace.rs:20:17: 37:6
    let mut _97: &mut [generator@ui/generator/drop-and-replace.rs:20:17: 20:19]; // in scope 0 at ui/generator/drop-and-replace.rs:20:17: 37:6
    scope 1 {
        debug x => (((*(_1.0: &mut [generator@ui/generator/drop-and-replace.rs:20:17: 20:19])) as variant#3).0: Foo); // in scope 1 at ui/generator/drop-and-replace.rs:21:13: 21:18
        let _7: &i32;                    // in scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        let _8: &i32;                    // in scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        let _25: &i32;                   // in scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        let _26: &i32;                   // in scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        let _60: &i32;                   // in scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        let _61: &i32;                   // in scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        let mut _74: &i32;               // in scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        let mut _76: &i32;               // in scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        let mut _77: &i32;               // in scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        scope 2 {
            debug left_val => _7;        // in scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
            debug right_val => _8;       // in scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
            let _13: core::panicking::AssertKind; // in scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
            scope 3 {
                debug kind => _13;       // in scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
            }
        }
        scope 4 {
            debug left_val => _25;       // in scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
            debug right_val => _26;      // in scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
            let _31: core::panicking::AssertKind; // in scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
            scope 5 {
                debug kind => _31;       // in scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
            }
        }
        scope 6 {
            debug y => (((*(_1.0: &mut [generator@ui/generator/drop-and-replace.rs:20:17: 20:19])) as variant#4).1: Foo); // in scope 6 at ui/generator/drop-and-replace.rs:31:17: 31:18
            let _43: &i32;               // in scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
            let _44: &i32;               // in scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
            let mut _75: &i32;           // in scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
            scope 7 {
                debug left_val => _43;   // in scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
                debug right_val => _44;  // in scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
                let _49: core::panicking::AssertKind; // in scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                scope 8 {
                    debug kind => _49;   // in scope 8 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                }
            }
        }
        scope 9 {
            debug left_val => _60;       // in scope 9 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
            debug right_val => _61;      // in scope 9 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
            let _66: core::panicking::AssertKind; // in scope 9 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
            scope 10 {
                debug kind => _66;       // in scope 10 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
            }
        }
    }

    bb0: {
        _80 = deref_copy (_1.0: &mut [generator@ui/generator/drop-and-replace.rs:20:17: 20:19]); // scope 0 at ui/generator/drop-and-replace.rs:20:17: 37:6
        _79 = discriminant((*_80));      // scope 0 at ui/generator/drop-and-replace.rs:20:17: 37:6
        switchInt(move _79) -> [0: bb1, 1: bb20, 2: bb19, 3: bb17, 4: bb18, otherwise: bb21]; // scope 0 at ui/generator/drop-and-replace.rs:20:17: 37:6
    }

    bb1: {
        _81 = deref_copy (_1.0: &mut [generator@ui/generator/drop-and-replace.rs:20:17: 20:19]); // scope 0 at ui/generator/drop-and-replace.rs:21:21: 21:27
        (((*_81) as variant#3).0: Foo) = Foo(const 4_i32); // scope 0 at ui/generator/drop-and-replace.rs:21:21: 21:27
        _3 = ();                         // scope 1 at ui/generator/drop-and-replace.rs:22:9: 22:14
        _0 = GeneratorState::<(), ()>::Yielded(move _3); // scope 1 at ui/generator/drop-and-replace.rs:22:9: 22:14
        _82 = deref_copy (_1.0: &mut [generator@ui/generator/drop-and-replace.rs:20:17: 20:19]); // scope 1 at ui/generator/drop-and-replace.rs:22:9: 22:14
        discriminant((*_82)) = 3;        // scope 1 at ui/generator/drop-and-replace.rs:22:9: 22:14
        return;                          // scope 1 at ui/generator/drop-and-replace.rs:22:9: 22:14
    }

    bb2: {
        _13 = core::panicking::AssertKind::Eq; // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
        _15 = move _13;                  // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
        _17 = _7;                        // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _16 = _17;                       // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _19 = _8;                        // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _18 = _19;                       // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _20 = Option::<Arguments<'_>>::None; // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
        _14 = core::panicking::assert_failed::<i32, i32>(move _15, move _16, move _18, move _20) -> bb13; // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:53
                                         // + literal: Const { ty: for<'a, 'b, 'c> fn(core::panicking::AssertKind, &'a i32, &'b i32, Option<Arguments<'c>>) -> ! {core::panicking::assert_failed::<i32, i32>}, val: Value(<ZST>) }
    }

    bb3: {
        _21 = Foo(const 5_i32);          // scope 1 at ui/generator/drop-and-replace.rs:27:13: 27:19
        _84 = deref_copy (_1.0: &mut [generator@ui/generator/drop-and-replace.rs:20:17: 20:19]); // scope 1 at ui/generator/drop-and-replace.rs:27:9: 27:10
        drop((((*_84) as variant#3).0: Foo)) -> [return: bb15, unwind: bb14]; // scope 1 at ui/generator/drop-and-replace.rs:27:9: 27:10
    }

    bb4: {
        _31 = core::panicking::AssertKind::Eq; // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
        _33 = move _31;                  // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
        _35 = _25;                       // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _34 = _35;                       // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _37 = _26;                       // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _36 = _37;                       // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _38 = Option::<Arguments<'_>>::None; // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
        _32 = core::panicking::assert_failed::<i32, i32>(move _33, move _34, move _36, move _38) -> bb13; // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:53
                                         // + literal: Const { ty: for<'a, 'b, 'c> fn(core::panicking::AssertKind, &'a i32, &'b i32, Option<Arguments<'c>>) -> ! {core::panicking::assert_failed::<i32, i32>}, val: Value(<ZST>) }
    }

    bb5: {
        _86 = deref_copy (_1.0: &mut [generator@ui/generator/drop-and-replace.rs:20:17: 20:19]); // scope 1 at ui/generator/drop-and-replace.rs:31:21: 31:27
        (((*_86) as variant#4).1: Foo) = Foo(const 6_i32); // scope 1 at ui/generator/drop-and-replace.rs:31:21: 31:27
        _39 = ();                        // scope 6 at ui/generator/drop-and-replace.rs:32:13: 32:18
        _0 = GeneratorState::<(), ()>::Yielded(move _39); // scope 6 at ui/generator/drop-and-replace.rs:32:13: 32:18
        _87 = deref_copy (_1.0: &mut [generator@ui/generator/drop-and-replace.rs:20:17: 20:19]); // scope 6 at ui/generator/drop-and-replace.rs:32:13: 32:18
        discriminant((*_87)) = 4;        // scope 6 at ui/generator/drop-and-replace.rs:32:13: 32:18
        return;                          // scope 6 at ui/generator/drop-and-replace.rs:32:13: 32:18
    }

    bb6: {
        _49 = core::panicking::AssertKind::Eq; // scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
        _51 = move _49;                  // scope 8 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
        _53 = _43;                       // scope 8 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _52 = _53;                       // scope 8 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _55 = _44;                       // scope 8 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _54 = _55;                       // scope 8 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _56 = Option::<Arguments<'_>>::None; // scope 8 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
        _50 = core::panicking::assert_failed::<i32, i32>(move _51, move _52, move _54, move _56) -> bb12; // scope 8 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:53
                                         // + literal: Const { ty: for<'a, 'b, 'c> fn(core::panicking::AssertKind, &'a i32, &'b i32, Option<Arguments<'c>>) -> ! {core::panicking::assert_failed::<i32, i32>}, val: Value(<ZST>) }
    }

    bb7: {
        _89 = deref_copy (_1.0: &mut [generator@ui/generator/drop-and-replace.rs:20:17: 20:19]); // scope 1 at ui/generator/drop-and-replace.rs:34:9: 34:10
        drop((((*_89) as variant#4).1: Foo)) -> [return: bb8, unwind: bb13]; // scope 1 at ui/generator/drop-and-replace.rs:34:9: 34:10
    }

    bb8: {
        _90 = deref_copy (_1.0: &mut [generator@ui/generator/drop-and-replace.rs:20:17: 20:19]); // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _58 = &((((*_90) as variant#3).0: Foo).0: i32); // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _74 = const _;                   // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // + literal: Const { ty: &i32, val: Unevaluated(main::{closure#0}, [<resume_ty>, <yield_ty>, <return_ty>, <witness>, <upvars>], Some(promoted[0])) }
        _59 = _74;                       // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _57 = (move _58, move _59);      // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _60 = (_57.0: &i32);             // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _61 = (_57.1: &i32);             // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _64 = (*_60);                    // scope 9 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
        _65 = (*_61);                    // scope 9 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
        _63 = Eq(move _64, move _65);    // scope 9 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
        _62 = Not(move _63);             // scope 9 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
        switchInt(move _62) -> [0: bb10, otherwise: bb9]; // scope 9 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    }

    bb9: {
        _66 = core::panicking::AssertKind::Eq; // scope 9 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
        _68 = move _66;                  // scope 10 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
        _70 = _60;                       // scope 10 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _69 = _70;                       // scope 10 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _72 = _61;                       // scope 10 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _71 = _72;                       // scope 10 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _73 = Option::<Arguments<'_>>::None; // scope 10 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
        _67 = core::panicking::assert_failed::<i32, i32>(move _68, move _69, move _71, move _73) -> bb13; // scope 10 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:53
                                         // + literal: Const { ty: for<'a, 'b, 'c> fn(core::panicking::AssertKind, &'a i32, &'b i32, Option<Arguments<'c>>) -> ! {core::panicking::assert_failed::<i32, i32>}, val: Value(<ZST>) }
    }

    bb10: {
        _78 = const ();                  // scope 0 at ui/generator/drop-and-replace.rs:20:20: 37:6
        _91 = deref_copy (_1.0: &mut [generator@ui/generator/drop-and-replace.rs:20:17: 20:19]); // scope 0 at ui/generator/drop-and-replace.rs:37:5: 37:6
        drop((((*_91) as variant#3).0: Foo)) -> [return: bb11, unwind: bb16]; // scope 0 at ui/generator/drop-and-replace.rs:37:5: 37:6
    }

    bb11: {
        _0 = GeneratorState::<(), ()>::Complete(move _78); // scope 0 at ui/generator/drop-and-replace.rs:37:6: 37:6
        _92 = deref_copy (_1.0: &mut [generator@ui/generator/drop-and-replace.rs:20:17: 20:19]); // scope 0 at ui/generator/drop-and-replace.rs:37:6: 37:6
        discriminant((*_92)) = 1;        // scope 0 at ui/generator/drop-and-replace.rs:37:6: 37:6
        return;                          // scope 0 at ui/generator/drop-and-replace.rs:37:6: 37:6
    }

    bb12 (cleanup): {
        _93 = deref_copy (_1.0: &mut [generator@ui/generator/drop-and-replace.rs:20:17: 20:19]); // scope 1 at ui/generator/drop-and-replace.rs:34:9: 34:10
        drop((((*_93) as variant#4).1: Foo)) -> bb13; // scope 1 at ui/generator/drop-and-replace.rs:34:9: 34:10
    }

    bb13 (cleanup): {
        _94 = deref_copy (_1.0: &mut [generator@ui/generator/drop-and-replace.rs:20:17: 20:19]); // scope 0 at ui/generator/drop-and-replace.rs:37:5: 37:6
        drop((((*_94) as variant#3).0: Foo)) -> bb16; // scope 0 at ui/generator/drop-and-replace.rs:37:5: 37:6
    }

    bb14 (cleanup): {
        _95 = deref_copy (_1.0: &mut [generator@ui/generator/drop-and-replace.rs:20:17: 20:19]); // scope 1 at ui/generator/drop-and-replace.rs:27:9: 27:10
        (((*_95) as variant#3).0: Foo) = move _21; // scope 1 at ui/generator/drop-and-replace.rs:27:9: 27:10
        goto -> bb13;                    // scope 1 at no-location
    }

    bb15: {
        _96 = deref_copy (_1.0: &mut [generator@ui/generator/drop-and-replace.rs:20:17: 20:19]); // scope 1 at ui/generator/drop-and-replace.rs:27:9: 27:10
        (((*_96) as variant#3).0: Foo) = move _21; // scope 1 at ui/generator/drop-and-replace.rs:27:9: 27:10
        _85 = deref_copy (_1.0: &mut [generator@ui/generator/drop-and-replace.rs:20:17: 20:19]); // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _23 = &((((*_85) as variant#3).0: Foo).0: i32); // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _76 = const _;                   // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // + literal: Const { ty: &i32, val: Unevaluated(main::{closure#0}, [<resume_ty>, <yield_ty>, <return_ty>, <witness>, <upvars>], Some(promoted[2])) }
        _24 = _76;                       // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _22 = (move _23, move _24);      // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _25 = (_22.0: &i32);             // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _26 = (_22.1: &i32);             // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _29 = (*_25);                    // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
        _30 = (*_26);                    // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
        _28 = Eq(move _29, move _30);    // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
        _27 = Not(move _28);             // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
        switchInt(move _27) -> [0: bb5, otherwise: bb4]; // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    }

    bb16 (cleanup): {
        _97 = deref_copy (_1.0: &mut [generator@ui/generator/drop-and-replace.rs:20:17: 20:19]); // scope 0 at ui/generator/drop-and-replace.rs:20:17: 37:6
        discriminant((*_97)) = 2;        // scope 0 at ui/generator/drop-and-replace.rs:20:17: 37:6
        resume;                          // scope 0 at ui/generator/drop-and-replace.rs:20:17: 37:6
    }

    bb17: {
        _83 = deref_copy (_1.0: &mut [generator@ui/generator/drop-and-replace.rs:20:17: 20:19]); // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _5 = &((((*_83) as variant#3).0: Foo).0: i32); // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _77 = const _;                   // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // + literal: Const { ty: &i32, val: Unevaluated(main::{closure#0}, [<resume_ty>, <yield_ty>, <return_ty>, <witness>, <upvars>], Some(promoted[3])) }
        _6 = _77;                        // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _4 = (move _5, move _6);         // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _7 = (_4.0: &i32);               // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _8 = (_4.1: &i32);               // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _11 = (*_7);                     // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
        _12 = (*_8);                     // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
        _10 = Eq(move _11, move _12);    // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
        _9 = Not(move _10);              // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
        switchInt(move _9) -> [0: bb3, otherwise: bb2]; // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    }

    bb18: {
        _88 = deref_copy (_1.0: &mut [generator@ui/generator/drop-and-replace.rs:20:17: 20:19]); // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _41 = &((((*_88) as variant#4).1: Foo).0: i32); // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _75 = const _;                   // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // + literal: Const { ty: &i32, val: Unevaluated(main::{closure#0}, [<resume_ty>, <yield_ty>, <return_ty>, <witness>, <upvars>], Some(promoted[1])) }
        _42 = _75;                       // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _40 = (move _41, move _42);      // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _43 = (_40.0: &i32);             // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _44 = (_40.1: &i32);             // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _47 = (*_43);                    // scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
        _48 = (*_44);                    // scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
        _46 = Eq(move _47, move _48);    // scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
        _45 = Not(move _46);             // scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
        switchInt(move _45) -> [0: bb7, otherwise: bb6]; // scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    }

    bb19: {
        assert(const false, "generator resumed after panicking") -> bb19; // scope 0 at ui/generator/drop-and-replace.rs:20:17: 37:6
    }

    bb20: {
        assert(const false, "generator resumed after completion") -> bb20; // scope 0 at ui/generator/drop-and-replace.rs:20:17: 37:6
    }

    bb21: {
        unreachable;                     // scope 0 at ui/generator/drop-and-replace.rs:20:17: 37:6
    }
}

promoted[0] in main::{closure#0}: &i32 = {
    let mut _0: &i32;                    // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _1: i32;                     // in scope 0 at ui/generator/drop-and-replace.rs:36:25: 36:26

    bb0: {
        _1 = const 5_i32;                // scope 0 at ui/generator/drop-and-replace.rs:36:25: 36:26
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    }
}

promoted[1] in main::{closure#0}: &i32 = {
    let mut _0: &i32;                    // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _1: i32;                     // in scope 0 at ui/generator/drop-and-replace.rs:33:29: 33:30

    bb0: {
        _1 = const 6_i32;                // scope 0 at ui/generator/drop-and-replace.rs:33:29: 33:30
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    }
}

promoted[2] in main::{closure#0}: &i32 = {
    let mut _0: &i32;                    // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _1: i32;                     // in scope 0 at ui/generator/drop-and-replace.rs:28:25: 28:26

    bb0: {
        _1 = const 5_i32;                // scope 0 at ui/generator/drop-and-replace.rs:28:25: 28:26
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    }
}

promoted[3] in main::{closure#0}: &i32 = {
    let mut _0: &i32;                    // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _1: i32;                     // in scope 0 at ui/generator/drop-and-replace.rs:23:25: 23:26

    bb0: {
        _1 = const 4_i32;                // scope 0 at ui/generator/drop-and-replace.rs:23:25: 23:26
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    }
}

fn Foo(_1: i32) -> Foo {
    let mut _0: Foo;                     // return place in scope 0 at ui/generator/drop-and-replace.rs:13:1: 13:11

    bb0: {
        _0 = Foo(move _1);               // scope 0 at ui/generator/drop-and-replace.rs:13:1: 13:11
        return;                          // scope 0 at ui/generator/drop-and-replace.rs:13:1: 13:11
    }
}

// MIR FOR CTFE
fn Foo(_1: i32) -> Foo {
    let mut _0: Foo;                     // return place in scope 0 at ui/generator/drop-and-replace.rs:13:1: 13:11

    bb0: {
        _0 = Foo(move _1);               // scope 0 at ui/generator/drop-and-replace.rs:13:1: 13:11
        return;                          // scope 0 at ui/generator/drop-and-replace.rs:13:1: 13:11
    }
}
