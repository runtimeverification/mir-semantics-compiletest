// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
fn main() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/generator/issue-53548.rs:31:11: 31:11
    let _1: std::boxed::Box<[static generator@ui/generator/issue-53548.rs:32:14: 32:28]>; // in scope 0 at ui/generator/issue-53548.rs:32:5: 37:7
    let mut _2: [static generator@ui/generator/issue-53548.rs:32:14: 32:28]; // in scope 0 at ui/generator/issue-53548.rs:32:14: 37:6

    bb0: {
        _2 = [generator@ui/generator/issue-53548.rs:32:14: 32:28 (#0)]; // scope 0 at ui/generator/issue-53548.rs:32:14: 37:6
                                         // generator
                                         // + def_id: DefId(0:10 ~ issue_53548[0fb0]::main::{closure#0})
                                         // + substs: [
                                         //     (),
                                         //     (),
                                         //     (),
                                         //     for<'a> {Store<std::boxed::Box<(dyn Trait + 'a)>>, ()},
                                         //     (),
                                         // ]
                                         // + movability: Static
        _1 = Box::<[static generator@ui/generator/issue-53548.rs:32:14: 32:28]>::new(move _2) -> bb1; // scope 0 at ui/generator/issue-53548.rs:32:5: 37:7
                                         // mir::Constant
                                         // + span: ui/generator/issue-53548.rs:32:5: 32:13
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: fn([static generator@ui/generator/issue-53548.rs:32:14: 32:28]) -> Box<[static generator@ui/generator/issue-53548.rs:32:14: 32:28]> {Box::<[static generator@ui/generator/issue-53548.rs:32:14: 32:28]>::new}, val: Value(<ZST>) }
    }

    bb1: {
        drop(_1) -> bb2;                 // scope 0 at ui/generator/issue-53548.rs:37:7: 37:8
    }

    bb2: {
        return;                          // scope 0 at ui/generator/issue-53548.rs:38:2: 38:2
    }
}

fn main::{closure#0}(_1: Pin<&mut [static generator@ui/generator/issue-53548.rs:32:14: 32:28]>, _2: ()) -> GeneratorState<(), ()> {
    let mut _0: std::ops::GeneratorState<(), ()>; // return place in scope 0 at ui/generator/issue-53548.rs:32:14: 37:6
    let mut _3: std::rc::Rc<std::cell::RefCell<std::option::Option<std::boxed::Box<dyn Trait>>>>; // in scope 0 at ui/generator/issue-53548.rs:34:20: 34:38
    let mut _4: ();                      // in scope 0 at ui/generator/issue-53548.rs:36:15: 36:17
    let mut _5: ();                      // in scope 0 at ui/generator/issue-53548.rs:32:29: 32:29
    let mut _6: u32;                     // in scope 0 at ui/generator/issue-53548.rs:32:14: 37:6
    let mut _7: &mut [static generator@ui/generator/issue-53548.rs:32:14: 32:28]; // in scope 0 at ui/generator/issue-53548.rs:32:14: 37:6
    let mut _8: &mut [static generator@ui/generator/issue-53548.rs:32:14: 32:28]; // in scope 0 at ui/generator/issue-53548.rs:32:14: 37:6
    let mut _9: &mut [static generator@ui/generator/issue-53548.rs:32:14: 32:28]; // in scope 0 at ui/generator/issue-53548.rs:32:14: 37:6
    let mut _10: &mut [static generator@ui/generator/issue-53548.rs:32:14: 32:28]; // in scope 0 at ui/generator/issue-53548.rs:32:14: 37:6
    let mut _11: &mut [static generator@ui/generator/issue-53548.rs:32:14: 32:28]; // in scope 0 at ui/generator/issue-53548.rs:32:14: 37:6
    let mut _12: &mut [static generator@ui/generator/issue-53548.rs:32:14: 32:28]; // in scope 0 at ui/generator/issue-53548.rs:32:14: 37:6
    scope 1 {
        debug store => (((*(_1.0: &mut [static generator@ui/generator/issue-53548.rs:32:14: 32:28])) as variant#3).0: Store<std::boxed::Box<dyn Trait>>); // in scope 1 at ui/generator/issue-53548.rs:33:13: 33:18
    }

    bb0: {
        _7 = deref_copy (_1.0: &mut [static generator@ui/generator/issue-53548.rs:32:14: 32:28]); // scope 0 at ui/generator/issue-53548.rs:32:14: 37:6
        _6 = discriminant((*_7));        // scope 0 at ui/generator/issue-53548.rs:32:14: 37:6
        switchInt(move _6) -> [0: bb1, 1: bb7, 2: bb6, 3: bb5, otherwise: bb8]; // scope 0 at ui/generator/issue-53548.rs:32:14: 37:6
    }

    bb1: {
        _3 = <Rc<RefCell<Option<Box<dyn Trait>>>> as Default>::default() -> [return: bb2, unwind: bb4]; // scope 0 at ui/generator/issue-53548.rs:34:20: 34:38
                                         // mir::Constant
                                         // + span: ui/generator/issue-53548.rs:34:20: 34:36
                                         // + literal: Const { ty: fn() -> Rc<RefCell<Option<Box<dyn Trait>>>> {<Rc<RefCell<Option<Box<dyn Trait>>>> as Default>::default}, val: Value(<ZST>) }
    }

    bb2: {
        _8 = deref_copy (_1.0: &mut [static generator@ui/generator/issue-53548.rs:32:14: 32:28]); // scope 0 at ui/generator/issue-53548.rs:33:21: 35:10
        (((*_8) as variant#3).0: Store<std::boxed::Box<dyn Trait>>) = Store::<Box<dyn Trait>> { inner: move _3 }; // scope 0 at ui/generator/issue-53548.rs:33:21: 35:10
                                         // adt
                                         // + user_ty: UserType(0)
        _4 = ();                         // scope 1 at ui/generator/issue-53548.rs:36:15: 36:17
        _0 = GeneratorState::<(), ()>::Yielded(move _4); // scope 1 at ui/generator/issue-53548.rs:36:9: 36:17
        _9 = deref_copy (_1.0: &mut [static generator@ui/generator/issue-53548.rs:32:14: 32:28]); // scope 1 at ui/generator/issue-53548.rs:36:9: 36:17
        discriminant((*_9)) = 3;         // scope 1 at ui/generator/issue-53548.rs:36:9: 36:17
        return;                          // scope 1 at ui/generator/issue-53548.rs:36:9: 36:17
    }

    bb3: {
        _0 = GeneratorState::<(), ()>::Complete(move _5); // scope 0 at ui/generator/issue-53548.rs:37:6: 37:6
        _11 = deref_copy (_1.0: &mut [static generator@ui/generator/issue-53548.rs:32:14: 32:28]); // scope 0 at ui/generator/issue-53548.rs:37:6: 37:6
        discriminant((*_11)) = 1;        // scope 0 at ui/generator/issue-53548.rs:37:6: 37:6
        return;                          // scope 0 at ui/generator/issue-53548.rs:37:6: 37:6
    }

    bb4 (cleanup): {
        _12 = deref_copy (_1.0: &mut [static generator@ui/generator/issue-53548.rs:32:14: 32:28]); // scope 0 at ui/generator/issue-53548.rs:32:14: 37:6
        discriminant((*_12)) = 2;        // scope 0 at ui/generator/issue-53548.rs:32:14: 37:6
        resume;                          // scope 0 at ui/generator/issue-53548.rs:32:14: 37:6
    }

    bb5: {
        _5 = const ();                   // scope 0 at ui/generator/issue-53548.rs:32:29: 37:6
        _10 = deref_copy (_1.0: &mut [static generator@ui/generator/issue-53548.rs:32:14: 32:28]); // scope 0 at ui/generator/issue-53548.rs:37:5: 37:6
        drop((((*_10) as variant#3).0: Store<std::boxed::Box<dyn Trait>>)) -> [return: bb3, unwind: bb4]; // scope 0 at ui/generator/issue-53548.rs:37:5: 37:6
    }

    bb6: {
        assert(const false, "generator resumed after panicking") -> bb6; // scope 0 at ui/generator/issue-53548.rs:32:14: 37:6
    }

    bb7: {
        assert(const false, "generator resumed after completion") -> bb7; // scope 0 at ui/generator/issue-53548.rs:32:14: 37:6
    }

    bb8: {
        unreachable;                     // scope 0 at ui/generator/issue-53548.rs:32:14: 37:6
    }
}
