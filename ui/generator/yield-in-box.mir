// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
fn main() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/generator/yield-in-box.rs:9:11: 9:11
    let _1: i32;                         // in scope 0 at ui/generator/yield-in-box.rs:10:9: 10:10
    let mut _3: (&std::ops::GeneratorState<(), std::boxed::Box<i32>>, &std::ops::GeneratorState<(), std::boxed::Box<i32>>); // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _4: &std::ops::GeneratorState<(), std::boxed::Box<i32>>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let _5: std::ops::GeneratorState<(), std::boxed::Box<i32>>; // in scope 0 at ui/generator/yield-in-box.rs:22:16: 22:42
    let mut _6: std::pin::Pin<&mut [generator@ui/generator/yield-in-box.rs:21:17: 21:20]>; // in scope 0 at ui/generator/yield-in-box.rs:22:16: 22:32
    let mut _7: &mut [generator@ui/generator/yield-in-box.rs:21:17: 21:20]; // in scope 0 at ui/generator/yield-in-box.rs:22:25: 22:31
    let mut _8: &std::ops::GeneratorState<(), std::boxed::Box<i32>>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _11: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    let mut _12: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
    let mut _13: &std::ops::GeneratorState<(), std::boxed::Box<i32>>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
    let mut _14: &std::ops::GeneratorState<(), std::boxed::Box<i32>>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
    let _16: !;                          // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
    let mut _17: core::panicking::AssertKind; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
    let mut _18: &std::ops::GeneratorState<(), std::boxed::Box<i32>>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let _19: &std::ops::GeneratorState<(), std::boxed::Box<i32>>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let mut _20: &std::ops::GeneratorState<(), std::boxed::Box<i32>>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let _21: &std::ops::GeneratorState<(), std::boxed::Box<i32>>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let mut _22: std::option::Option<std::fmt::Arguments<'_>>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
    let mut _23: (&std::ops::GeneratorState<(), std::boxed::Box<i32>>, &std::ops::GeneratorState<(), std::boxed::Box<i32>>); // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _24: &std::ops::GeneratorState<(), std::boxed::Box<i32>>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let _25: std::ops::GeneratorState<(), std::boxed::Box<i32>>; // in scope 0 at ui/generator/yield-in-box.rs:23:16: 23:42
    let mut _26: std::pin::Pin<&mut [generator@ui/generator/yield-in-box.rs:21:17: 21:20]>; // in scope 0 at ui/generator/yield-in-box.rs:23:16: 23:32
    let mut _27: &mut [generator@ui/generator/yield-in-box.rs:21:17: 21:20]; // in scope 0 at ui/generator/yield-in-box.rs:23:25: 23:31
    let mut _28: &std::ops::GeneratorState<(), std::boxed::Box<i32>>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let _29: std::ops::GeneratorState<(), std::boxed::Box<i32>>; // in scope 0 at ui/generator/yield-in-box.rs:23:44: 23:75
    let mut _30: std::boxed::Box<i32>;   // in scope 0 at ui/generator/yield-in-box.rs:23:69: 23:74
    let mut _31: usize;                  // in scope 0 at ui/generator/yield-in-box.rs:23:69: 23:74
    let mut _32: usize;                  // in scope 0 at ui/generator/yield-in-box.rs:23:69: 23:74
    let mut _33: *mut u8;                // in scope 0 at ui/generator/yield-in-box.rs:23:69: 23:74
    let mut _34: std::boxed::Box<i32>;   // in scope 0 at ui/generator/yield-in-box.rs:23:69: 23:74
    let mut _37: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    let mut _38: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
    let mut _39: &std::ops::GeneratorState<(), std::boxed::Box<i32>>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
    let mut _40: &std::ops::GeneratorState<(), std::boxed::Box<i32>>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
    let _42: !;                          // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
    let mut _43: core::panicking::AssertKind; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
    let mut _44: &std::ops::GeneratorState<(), std::boxed::Box<i32>>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let _45: &std::ops::GeneratorState<(), std::boxed::Box<i32>>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let mut _46: &std::ops::GeneratorState<(), std::boxed::Box<i32>>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let _47: &std::ops::GeneratorState<(), std::boxed::Box<i32>>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let mut _48: std::option::Option<std::fmt::Arguments<'_>>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
    let mut _50: *const i32;             // in scope 0 at ui/generator/yield-in-box.rs:23:69: 23:74
    scope 1 {
        debug x => _1;                   // in scope 1 at ui/generator/yield-in-box.rs:10:9: 10:10
        let mut _2: [generator@ui/generator/yield-in-box.rs:21:17: 21:20]; // in scope 1 at ui/generator/yield-in-box.rs:21:9: 21:14
        scope 2 {
            debug g => _2;               // in scope 2 at ui/generator/yield-in-box.rs:21:9: 21:14
            let _9: &std::ops::GeneratorState<(), std::boxed::Box<i32>>; // in scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
            let _10: &std::ops::GeneratorState<(), std::boxed::Box<i32>>; // in scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
            let _35: &std::ops::GeneratorState<(), std::boxed::Box<i32>>; // in scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
            let _36: &std::ops::GeneratorState<(), std::boxed::Box<i32>>; // in scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
            let mut _49: &std::ops::GeneratorState<(), std::boxed::Box<i32>>; // in scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
            scope 3 {
                debug left_val => _9;    // in scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
                debug right_val => _10;  // in scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
                let _15: core::panicking::AssertKind; // in scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                scope 4 {
                    debug kind => _15;   // in scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                }
            }
            scope 5 {
            }
            scope 6 {
                debug left_val => _35;   // in scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
                debug right_val => _36;  // in scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
                let _41: core::panicking::AssertKind; // in scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                scope 7 {
                    debug kind => _41;   // in scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                }
            }
        }
    }

    bb0: {
        _1 = const 0_i32;                // scope 0 at ui/generator/yield-in-box.rs:10:13: 10:17
        _2 = [generator@ui/generator/yield-in-box.rs:21:17: 21:20 (#0)]; // scope 1 at ui/generator/yield-in-box.rs:21:17: 21:30
                                         // generator
                                         // + def_id: DefId(0:8 ~ yield_in_box[5852]::main::{closure#1})
                                         // + substs: [
                                         //     i32,
                                         //     (),
                                         //     std::boxed::Box<i32>,
                                         //     {(), i32},
                                         //     (),
                                         // ]
                                         // + movability: Movable
        _7 = &mut _2;                    // scope 2 at ui/generator/yield-in-box.rs:22:25: 22:31
        _6 = Pin::<&mut [generator@ui/generator/yield-in-box.rs:21:17: 21:20]>::new(move _7) -> bb1; // scope 2 at ui/generator/yield-in-box.rs:22:16: 22:32
                                         // mir::Constant
                                         // + span: ui/generator/yield-in-box.rs:22:16: 22:24
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: fn(&mut [generator@ui/generator/yield-in-box.rs:21:17: 21:20]) -> Pin<&mut [generator@ui/generator/yield-in-box.rs:21:17: 21:20]> {Pin::<&mut [generator@ui/generator/yield-in-box.rs:21:17: 21:20]>::new}, val: Value(<ZST>) }
    }

    bb1: {
        _5 = <[generator@ui/generator/yield-in-box.rs:21:17: 21:20] as Generator<i32>>::resume(move _6, const 1_i32) -> bb2; // scope 2 at ui/generator/yield-in-box.rs:22:16: 22:42
                                         // mir::Constant
                                         // + span: ui/generator/yield-in-box.rs:22:33: 22:39
                                         // + literal: Const { ty: for<'a> fn(Pin<&'a mut [generator@ui/generator/yield-in-box.rs:21:17: 21:20]>, i32) -> GeneratorState<<[generator@ui/generator/yield-in-box.rs:21:17: 21:20] as Generator<i32>>::Yield, <[generator@ui/generator/yield-in-box.rs:21:17: 21:20] as Generator<i32>>::Return> {<[generator@ui/generator/yield-in-box.rs:21:17: 21:20] as Generator<i32>>::resume}, val: Value(<ZST>) }
    }

    bb2: {
        _4 = &_5;                        // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _49 = const _;                   // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // + literal: Const { ty: &GeneratorState<(), Box<i32>>, val: Unevaluated(main, [], Some(promoted[0])) }
        _8 = _49;                        // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _3 = (move _4, move _8);         // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _9 = (_3.0: &std::ops::GeneratorState<(), std::boxed::Box<i32>>); // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _10 = (_3.1: &std::ops::GeneratorState<(), std::boxed::Box<i32>>); // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _13 = _9;                        // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
        _14 = _10;                       // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
        _12 = <GeneratorState<(), Box<i32>> as PartialEq>::eq(move _13, move _14) -> [return: bb3, unwind: bb17]; // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a GeneratorState<(), Box<i32>>, &'b GeneratorState<(), Box<i32>>) -> bool {<GeneratorState<(), Box<i32>> as PartialEq>::eq}, val: Value(<ZST>) }
    }

    bb3: {
        _11 = Not(move _12);             // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
        switchInt(move _11) -> [0: bb5, otherwise: bb4]; // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    }

    bb4: {
        _15 = const core::panicking::AssertKind::Eq; // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _17 = const core::panicking::AssertKind::Eq; // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _19 = _9;                        // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _18 = _19;                       // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _21 = _10;                       // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _20 = _21;                       // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _22 = Option::<Arguments<'_>>::None; // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
        _16 = core::panicking::assert_failed::<GeneratorState<(), Box<i32>>, GeneratorState<(), Box<i32>>>(move _17, move _18, move _20, move _22) -> bb17; // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:53
                                         // + literal: Const { ty: for<'a, 'b, 'c> fn(core::panicking::AssertKind, &'a GeneratorState<(), Box<i32>>, &'b GeneratorState<(), Box<i32>>, Option<Arguments<'c>>) -> ! {core::panicking::assert_failed::<GeneratorState<(), Box<i32>>, GeneratorState<(), Box<i32>>>}, val: Value(<ZST>) }
    }

    bb5: {
        drop(_5) -> bb6;                 // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:48:9: 48:10
    }

    bb6: {
        _27 = &mut _2;                   // scope 2 at ui/generator/yield-in-box.rs:23:25: 23:31
        _26 = Pin::<&mut [generator@ui/generator/yield-in-box.rs:21:17: 21:20]>::new(move _27) -> bb7; // scope 2 at ui/generator/yield-in-box.rs:23:16: 23:32
                                         // mir::Constant
                                         // + span: ui/generator/yield-in-box.rs:23:16: 23:24
                                         // + user_ty: UserType(1)
                                         // + literal: Const { ty: fn(&mut [generator@ui/generator/yield-in-box.rs:21:17: 21:20]) -> Pin<&mut [generator@ui/generator/yield-in-box.rs:21:17: 21:20]> {Pin::<&mut [generator@ui/generator/yield-in-box.rs:21:17: 21:20]>::new}, val: Value(<ZST>) }
    }

    bb7: {
        _25 = <[generator@ui/generator/yield-in-box.rs:21:17: 21:20] as Generator<i32>>::resume(move _26, const 2_i32) -> bb8; // scope 2 at ui/generator/yield-in-box.rs:23:16: 23:42
                                         // mir::Constant
                                         // + span: ui/generator/yield-in-box.rs:23:33: 23:39
                                         // + literal: Const { ty: for<'a> fn(Pin<&'a mut [generator@ui/generator/yield-in-box.rs:21:17: 21:20]>, i32) -> GeneratorState<<[generator@ui/generator/yield-in-box.rs:21:17: 21:20] as Generator<i32>>::Yield, <[generator@ui/generator/yield-in-box.rs:21:17: 21:20] as Generator<i32>>::Return> {<[generator@ui/generator/yield-in-box.rs:21:17: 21:20] as Generator<i32>>::resume}, val: Value(<ZST>) }
    }

    bb8: {
        _24 = &_25;                      // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _31 = const 4_usize;             // scope 5 at ui/generator/yield-in-box.rs:23:69: 23:74
        _32 = const 4_usize;             // scope 5 at ui/generator/yield-in-box.rs:23:69: 23:74
        _33 = alloc::alloc::exchange_malloc(move _31, move _32) -> [return: bb9, unwind: bb16]; // scope 5 at ui/generator/yield-in-box.rs:23:69: 23:74
                                         // mir::Constant
                                         // + span: ui/generator/yield-in-box.rs:23:69: 23:74
                                         // + literal: Const { ty: unsafe fn(usize, usize) -> *mut u8 {alloc::alloc::exchange_malloc}, val: Value(<ZST>) }
    }

    bb9: {
        _34 = ShallowInitBox(move _33, i32); // scope 2 at ui/generator/yield-in-box.rs:23:69: 23:74
        _50 = (((_34.0: std::ptr::Unique<i32>).0: std::ptr::NonNull<i32>).0: *const i32); // scope 2 at ui/generator/yield-in-box.rs:23:73: 23:74
        (*_50) = const 2_i32;            // scope 2 at ui/generator/yield-in-box.rs:23:73: 23:74
        _30 = move _34;                  // scope 2 at ui/generator/yield-in-box.rs:23:69: 23:74
        _29 = GeneratorState::<(), Box<i32>>::Complete(move _30); // scope 2 at ui/generator/yield-in-box.rs:23:44: 23:75
        _28 = &_29;                      // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _23 = (move _24, move _28);      // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _35 = (_23.0: &std::ops::GeneratorState<(), std::boxed::Box<i32>>); // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _36 = (_23.1: &std::ops::GeneratorState<(), std::boxed::Box<i32>>); // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _39 = _35;                       // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
        _40 = _36;                       // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
        _38 = <GeneratorState<(), Box<i32>> as PartialEq>::eq(move _39, move _40) -> [return: bb10, unwind: bb15]; // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a GeneratorState<(), Box<i32>>, &'b GeneratorState<(), Box<i32>>) -> bool {<GeneratorState<(), Box<i32>> as PartialEq>::eq}, val: Value(<ZST>) }
    }

    bb10: {
        _37 = Not(move _38);             // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
        switchInt(move _37) -> [0: bb12, otherwise: bb11]; // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    }

    bb11: {
        _41 = const core::panicking::AssertKind::Eq; // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _43 = const core::panicking::AssertKind::Eq; // scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _45 = _35;                       // scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _44 = _45;                       // scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _47 = _36;                       // scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _46 = _47;                       // scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _48 = Option::<Arguments<'_>>::None; // scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
        _42 = core::panicking::assert_failed::<GeneratorState<(), Box<i32>>, GeneratorState<(), Box<i32>>>(move _43, move _44, move _46, move _48) -> bb15; // scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:53
                                         // + literal: Const { ty: for<'a, 'b, 'c> fn(core::panicking::AssertKind, &'a GeneratorState<(), Box<i32>>, &'b GeneratorState<(), Box<i32>>, Option<Arguments<'c>>) -> ! {core::panicking::assert_failed::<GeneratorState<(), Box<i32>>, GeneratorState<(), Box<i32>>>}, val: Value(<ZST>) }
    }

    bb12: {
        drop(_29) -> [return: bb13, unwind: bb16]; // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:48:9: 48:10
    }

    bb13: {
        drop(_25) -> bb14;               // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:48:9: 48:10
    }

    bb14: {
        return;                          // scope 0 at ui/generator/yield-in-box.rs:24:2: 24:2
    }

    bb15 (cleanup): {
        drop(_29) -> bb16;               // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:48:9: 48:10
    }

    bb16 (cleanup): {
        drop(_25) -> bb18;               // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:48:9: 48:10
    }

    bb17 (cleanup): {
        drop(_5) -> bb18;                // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:48:9: 48:10
    }

    bb18 (cleanup): {
        resume;                          // scope 0 at ui/generator/yield-in-box.rs:9:1: 24:2
    }
}

promoted[0] in main: &GeneratorState<(), Box<i32>> = {
    let mut _0: &std::ops::GeneratorState<(), std::boxed::Box<i32>>; // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _1: std::ops::GeneratorState<(), std::boxed::Box<i32>>; // in scope 0 at ui/generator/yield-in-box.rs:22:44: 22:71
    let mut _2: ();                      // in scope 0 at ui/generator/yield-in-box.rs:22:68: 22:70

    bb0: {
        _2 = ();                         // scope 0 at ui/generator/yield-in-box.rs:22:68: 22:70
        _1 = GeneratorState::<(), Box<i32>>::Yielded(move _2); // scope 0 at ui/generator/yield-in-box.rs:22:44: 22:71
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    }
}

fn main::{closure#0}(_1: Pin<&mut [generator@ui/generator/yield-in-box.rs:11:5: 11:7]>, _2: ()) -> GeneratorState<i32, ()> {
    debug x => (*((*(_1.0: &mut [generator@ui/generator/yield-in-box.rs:11:5: 11:7])).0: &i32)); // in scope 0 at ui/generator/yield-in-box.rs:10:9: 10:10
    let mut _0: std::ops::GeneratorState<i32, ()>; // return place in scope 0 at ui/generator/yield-in-box.rs:11:5: 19:6
    let mut _4: usize;                   // in scope 0 at ui/generator/yield-in-box.rs:14:22: 14:43
    let mut _5: usize;                   // in scope 0 at ui/generator/yield-in-box.rs:14:22: 14:43
    let mut _6: *mut u8;                 // in scope 0 at ui/generator/yield-in-box.rs:14:22: 14:43
    let mut _7: ();                      // in scope 0 at ui/generator/yield-in-box.rs:14:31: 14:38
    let mut _8: &u32;                    // in scope 0 at ui/generator/yield-in-box.rs:14:40: 14:42
    let mut _9: std::boxed::Box<(&i32, (), &u32)>; // in scope 0 at ui/generator/yield-in-box.rs:16:15: 16:36
    let mut _10: usize;                  // in scope 0 at ui/generator/yield-in-box.rs:16:15: 16:36
    let mut _11: usize;                  // in scope 0 at ui/generator/yield-in-box.rs:16:15: 16:36
    let mut _12: *mut u8;                // in scope 0 at ui/generator/yield-in-box.rs:16:15: 16:36
    let mut _13: ();                     // in scope 0 at ui/generator/yield-in-box.rs:16:24: 16:31
    let mut _14: &u32;                   // in scope 0 at ui/generator/yield-in-box.rs:16:33: 16:35
    let mut _16: &i32;                   // in scope 0 at ui/generator/yield-in-box.rs:11:5: 19:6
    let mut _17: &i32;                   // in scope 0 at ui/generator/yield-in-box.rs:11:5: 19:6
    let mut _18: *const (&i32, (), &u32); // in scope 0 at ui/generator/yield-in-box.rs:14:22: 14:43
    let mut _19: *const (&i32, (), &u32); // in scope 0 at ui/generator/yield-in-box.rs:16:15: 16:36
    let mut _20: ();                     // in scope 0 at ui/generator/yield-in-box.rs:11:8: 11:8
    let mut _21: u32;                    // in scope 0 at ui/generator/yield-in-box.rs:11:5: 19:6
    let mut _22: &mut [generator@ui/generator/yield-in-box.rs:11:5: 11:7]; // in scope 0 at ui/generator/yield-in-box.rs:11:5: 19:6
    let mut _23: &mut [generator@ui/generator/yield-in-box.rs:11:5: 11:7]; // in scope 0 at ui/generator/yield-in-box.rs:11:5: 19:6
    let mut _24: &mut [generator@ui/generator/yield-in-box.rs:11:5: 11:7]; // in scope 0 at ui/generator/yield-in-box.rs:11:5: 19:6
    let mut _25: &mut [generator@ui/generator/yield-in-box.rs:11:5: 11:7]; // in scope 0 at ui/generator/yield-in-box.rs:11:5: 19:6
    let mut _26: &mut [generator@ui/generator/yield-in-box.rs:11:5: 11:7]; // in scope 0 at ui/generator/yield-in-box.rs:11:5: 19:6
    let mut _27: &mut [generator@ui/generator/yield-in-box.rs:11:5: 11:7]; // in scope 0 at ui/generator/yield-in-box.rs:11:5: 19:6
    let mut _28: &mut [generator@ui/generator/yield-in-box.rs:11:5: 11:7]; // in scope 0 at ui/generator/yield-in-box.rs:11:5: 19:6
    let mut _29: &mut [generator@ui/generator/yield-in-box.rs:11:5: 11:7]; // in scope 0 at ui/generator/yield-in-box.rs:11:5: 19:6
    let mut _30: &mut [generator@ui/generator/yield-in-box.rs:11:5: 11:7]; // in scope 0 at ui/generator/yield-in-box.rs:11:5: 19:6
    let mut _31: &mut [generator@ui/generator/yield-in-box.rs:11:5: 11:7]; // in scope 0 at ui/generator/yield-in-box.rs:11:5: 19:6
    let mut _32: &mut [generator@ui/generator/yield-in-box.rs:11:5: 11:7]; // in scope 0 at ui/generator/yield-in-box.rs:11:5: 19:6
    let mut _33: &mut [generator@ui/generator/yield-in-box.rs:11:5: 11:7]; // in scope 0 at ui/generator/yield-in-box.rs:11:5: 19:6
    let mut _34: &mut [generator@ui/generator/yield-in-box.rs:11:5: 11:7]; // in scope 0 at ui/generator/yield-in-box.rs:11:5: 19:6
    let mut _35: &mut [generator@ui/generator/yield-in-box.rs:11:5: 11:7]; // in scope 0 at ui/generator/yield-in-box.rs:11:5: 19:6
    let mut _36: &mut [generator@ui/generator/yield-in-box.rs:11:5: 11:7]; // in scope 0 at ui/generator/yield-in-box.rs:11:5: 19:6
    let mut _37: &mut [generator@ui/generator/yield-in-box.rs:11:5: 11:7]; // in scope 0 at ui/generator/yield-in-box.rs:11:5: 19:6
    let mut _38: &mut [generator@ui/generator/yield-in-box.rs:11:5: 11:7]; // in scope 0 at ui/generator/yield-in-box.rs:11:5: 19:6
    let mut _39: &mut [generator@ui/generator/yield-in-box.rs:11:5: 11:7]; // in scope 0 at ui/generator/yield-in-box.rs:11:5: 19:6
    let mut _40: &mut [generator@ui/generator/yield-in-box.rs:11:5: 11:7]; // in scope 0 at ui/generator/yield-in-box.rs:11:5: 19:6
    let mut _41: &mut [generator@ui/generator/yield-in-box.rs:11:5: 11:7]; // in scope 0 at ui/generator/yield-in-box.rs:11:5: 19:6
    scope 1 {
        debug y => (((*(_1.0: &mut [generator@ui/generator/yield-in-box.rs:11:5: 11:7])) as variant#3).0: u32); // in scope 1 at ui/generator/yield-in-box.rs:12:13: 12:14
        let _3: std::boxed::Box<(&i32, (), &u32)>; // in scope 1 at ui/generator/yield-in-box.rs:14:17: 14:19
        let _15: std::boxed::Box<(&i32, (), &u32)>; // in scope 1 at ui/generator/yield-in-box.rs:17:13: 17:15
        scope 2 {
            debug _t => _3;              // in scope 2 at ui/generator/yield-in-box.rs:14:17: 14:19
        }
        scope 3 {
        }
        scope 4 {
        }
        scope 5 {
            debug _t => _15;             // in scope 5 at ui/generator/yield-in-box.rs:17:13: 17:15
        }
    }

    bb0: {
        _22 = deref_copy (_1.0: &mut [generator@ui/generator/yield-in-box.rs:11:5: 11:7]); // scope 0 at ui/generator/yield-in-box.rs:11:5: 19:6
        _21 = discriminant((*_22));      // scope 0 at ui/generator/yield-in-box.rs:11:5: 19:6
        switchInt(move _21) -> [0: bb1, 1: bb10, 2: bb9, 3: bb7, 4: bb8, otherwise: bb11]; // scope 0 at ui/generator/yield-in-box.rs:11:5: 19:6
    }

    bb1: {
        _23 = deref_copy (_1.0: &mut [generator@ui/generator/yield-in-box.rs:11:5: 11:7]); // scope 0 at ui/generator/yield-in-box.rs:12:17: 12:21
        (((*_23) as variant#3).0: u32) = const 2_u32; // scope 0 at ui/generator/yield-in-box.rs:12:17: 12:21
        _4 = SizeOf((&i32, (), &u32));   // scope 3 at ui/generator/yield-in-box.rs:14:22: 14:43
        _5 = AlignOf((&i32, (), &u32));  // scope 3 at ui/generator/yield-in-box.rs:14:22: 14:43
        _6 = alloc::alloc::exchange_malloc(move _4, move _5) -> [return: bb2, unwind: bb6]; // scope 3 at ui/generator/yield-in-box.rs:14:22: 14:43
                                         // mir::Constant
                                         // + span: ui/generator/yield-in-box.rs:14:22: 14:43
                                         // + literal: Const { ty: unsafe fn(usize, usize) -> *mut u8 {alloc::alloc::exchange_malloc}, val: Value(<ZST>) }
    }

    bb2: {
        _24 = deref_copy (_1.0: &mut [generator@ui/generator/yield-in-box.rs:11:5: 11:7]); // scope 1 at ui/generator/yield-in-box.rs:14:22: 14:43
        (((*_24) as variant#3).1: std::boxed::Box<(&i32, (), &u32)>) = ShallowInitBox(move _6, (&i32, (), &u32)); // scope 1 at ui/generator/yield-in-box.rs:14:22: 14:43
        _25 = deref_copy (_1.0: &mut [generator@ui/generator/yield-in-box.rs:11:5: 11:7]); // scope 1 at ui/generator/yield-in-box.rs:14:27: 14:29
        _16 = deref_copy ((*_25).0: &i32); // scope 1 at ui/generator/yield-in-box.rs:14:27: 14:29
        _26 = deref_copy (_1.0: &mut [generator@ui/generator/yield-in-box.rs:11:5: 11:7]); // scope 1 at ui/generator/yield-in-box.rs:14:27: 14:29
        (((*_26) as variant#3).2: &i32) = _16; // scope 1 at ui/generator/yield-in-box.rs:14:27: 14:29
        _0 = GeneratorState::<i32, ()>::Yielded(const 0_i32); // scope 1 at ui/generator/yield-in-box.rs:14:31: 14:38
        _27 = deref_copy (_1.0: &mut [generator@ui/generator/yield-in-box.rs:11:5: 11:7]); // scope 1 at ui/generator/yield-in-box.rs:14:31: 14:38
        discriminant((*_27)) = 3;        // scope 1 at ui/generator/yield-in-box.rs:14:31: 14:38
        return;                          // scope 1 at ui/generator/yield-in-box.rs:14:31: 14:38
    }

    bb3: {
        _10 = SizeOf((&i32, (), &u32));  // scope 4 at ui/generator/yield-in-box.rs:16:15: 16:36
        _11 = AlignOf((&i32, (), &u32)); // scope 4 at ui/generator/yield-in-box.rs:16:15: 16:36
        _12 = alloc::alloc::exchange_malloc(move _10, move _11) -> [return: bb4, unwind: bb6]; // scope 4 at ui/generator/yield-in-box.rs:16:15: 16:36
                                         // mir::Constant
                                         // + span: ui/generator/yield-in-box.rs:16:15: 16:36
                                         // + literal: Const { ty: unsafe fn(usize, usize) -> *mut u8 {alloc::alloc::exchange_malloc}, val: Value(<ZST>) }
    }

    bb4: {
        _32 = deref_copy (_1.0: &mut [generator@ui/generator/yield-in-box.rs:11:5: 11:7]); // scope 1 at ui/generator/yield-in-box.rs:16:15: 16:36
        (((*_32) as variant#4).1: std::boxed::Box<(&i32, (), &u32)>) = ShallowInitBox(move _12, (&i32, (), &u32)); // scope 1 at ui/generator/yield-in-box.rs:16:15: 16:36
        _33 = deref_copy (_1.0: &mut [generator@ui/generator/yield-in-box.rs:11:5: 11:7]); // scope 1 at ui/generator/yield-in-box.rs:16:20: 16:22
        _17 = deref_copy ((*_33).0: &i32); // scope 1 at ui/generator/yield-in-box.rs:16:20: 16:22
        _34 = deref_copy (_1.0: &mut [generator@ui/generator/yield-in-box.rs:11:5: 11:7]); // scope 1 at ui/generator/yield-in-box.rs:16:20: 16:22
        (((*_34) as variant#4).2: &i32) = _17; // scope 1 at ui/generator/yield-in-box.rs:16:20: 16:22
        _0 = GeneratorState::<i32, ()>::Yielded(const 0_i32); // scope 1 at ui/generator/yield-in-box.rs:16:24: 16:31
        _35 = deref_copy (_1.0: &mut [generator@ui/generator/yield-in-box.rs:11:5: 11:7]); // scope 1 at ui/generator/yield-in-box.rs:16:24: 16:31
        discriminant((*_35)) = 4;        // scope 1 at ui/generator/yield-in-box.rs:16:24: 16:31
        return;                          // scope 1 at ui/generator/yield-in-box.rs:16:24: 16:31
    }

    bb5: {
        _0 = GeneratorState::<i32, ()>::Complete(move _20); // scope 0 at ui/generator/yield-in-box.rs:19:6: 19:6
        _40 = deref_copy (_1.0: &mut [generator@ui/generator/yield-in-box.rs:11:5: 11:7]); // scope 0 at ui/generator/yield-in-box.rs:19:6: 19:6
        discriminant((*_40)) = 1;        // scope 0 at ui/generator/yield-in-box.rs:19:6: 19:6
        return;                          // scope 0 at ui/generator/yield-in-box.rs:19:6: 19:6
    }

    bb6 (cleanup): {
        _41 = deref_copy (_1.0: &mut [generator@ui/generator/yield-in-box.rs:11:5: 11:7]); // scope 0 at ui/generator/yield-in-box.rs:11:5: 19:6
        discriminant((*_41)) = 2;        // scope 0 at ui/generator/yield-in-box.rs:11:5: 19:6
        resume;                          // scope 0 at ui/generator/yield-in-box.rs:11:5: 19:6
    }

    bb7: {
        _7 = move _2;                    // scope 0 at ui/generator/yield-in-box.rs:11:5: 19:6
        _28 = deref_copy (_1.0: &mut [generator@ui/generator/yield-in-box.rs:11:5: 11:7]); // scope 1 at ui/generator/yield-in-box.rs:14:40: 14:42
        _8 = &(((*_28) as variant#3).0: u32); // scope 1 at ui/generator/yield-in-box.rs:14:40: 14:42
        _29 = deref_copy (_1.0: &mut [generator@ui/generator/yield-in-box.rs:11:5: 11:7]); // scope 1 at ui/generator/yield-in-box.rs:14:26: 14:43
        _18 = ((((((*_29) as variant#3).1: std::boxed::Box<(&i32, (), &u32)>).0: std::ptr::Unique<(&i32, (), &u32)>).0: std::ptr::NonNull<(&i32, (), &u32)>).0: *const (&i32, (), &u32)); // scope 1 at ui/generator/yield-in-box.rs:14:26: 14:43
        _30 = deref_copy (_1.0: &mut [generator@ui/generator/yield-in-box.rs:11:5: 11:7]); // scope 1 at ui/generator/yield-in-box.rs:14:26: 14:43
        (*_18) = (move (((*_30) as variant#3).2: &i32), move _7, move _8); // scope 1 at ui/generator/yield-in-box.rs:14:26: 14:43
        _31 = deref_copy (_1.0: &mut [generator@ui/generator/yield-in-box.rs:11:5: 11:7]); // scope 1 at ui/generator/yield-in-box.rs:14:22: 14:43
        _3 = move (((*_31) as variant#3).1: std::boxed::Box<(&i32, (), &u32)>); // scope 1 at ui/generator/yield-in-box.rs:14:22: 14:43
        drop(_3) -> [return: bb3, unwind: bb6]; // scope 1 at ui/generator/yield-in-box.rs:15:9: 15:10
    }

    bb8: {
        _13 = move _2;                   // scope 0 at ui/generator/yield-in-box.rs:11:5: 19:6
        _36 = deref_copy (_1.0: &mut [generator@ui/generator/yield-in-box.rs:11:5: 11:7]); // scope 1 at ui/generator/yield-in-box.rs:16:33: 16:35
        _14 = &(((*_36) as variant#3).0: u32); // scope 1 at ui/generator/yield-in-box.rs:16:33: 16:35
        _37 = deref_copy (_1.0: &mut [generator@ui/generator/yield-in-box.rs:11:5: 11:7]); // scope 1 at ui/generator/yield-in-box.rs:16:19: 16:36
        _19 = ((((((*_37) as variant#4).1: std::boxed::Box<(&i32, (), &u32)>).0: std::ptr::Unique<(&i32, (), &u32)>).0: std::ptr::NonNull<(&i32, (), &u32)>).0: *const (&i32, (), &u32)); // scope 1 at ui/generator/yield-in-box.rs:16:19: 16:36
        _38 = deref_copy (_1.0: &mut [generator@ui/generator/yield-in-box.rs:11:5: 11:7]); // scope 1 at ui/generator/yield-in-box.rs:16:19: 16:36
        (*_19) = (move (((*_38) as variant#4).2: &i32), move _13, move _14); // scope 1 at ui/generator/yield-in-box.rs:16:19: 16:36
        _39 = deref_copy (_1.0: &mut [generator@ui/generator/yield-in-box.rs:11:5: 11:7]); // scope 1 at ui/generator/yield-in-box.rs:16:15: 16:36
        _9 = move (((*_39) as variant#4).1: std::boxed::Box<(&i32, (), &u32)>); // scope 1 at ui/generator/yield-in-box.rs:16:15: 16:36
        _15 = move _9;                   // scope 1 at ui/generator/yield-in-box.rs:17:13: 17:15
        _20 = const ();                  // scope 5 at ui/generator/yield-in-box.rs:17:19: 17:21
        drop(_15) -> [return: bb5, unwind: bb6]; // scope 1 at ui/generator/yield-in-box.rs:17:20: 17:21
    }

    bb9: {
        assert(const false, "generator resumed after panicking") -> bb9; // scope 0 at ui/generator/yield-in-box.rs:11:5: 19:6
    }

    bb10: {
        assert(const false, "generator resumed after completion") -> bb10; // scope 0 at ui/generator/yield-in-box.rs:11:5: 19:6
    }

    bb11: {
        unreachable;                     // scope 0 at ui/generator/yield-in-box.rs:11:5: 19:6
    }
}

fn main::{closure#1}(_1: Pin<&mut [generator@ui/generator/yield-in-box.rs:21:17: 21:20]>, _2: i32) -> GeneratorState<(), Box<i32>> {
    let mut _0: std::ops::GeneratorState<(), std::boxed::Box<i32>>; // return place in scope 0 at ui/generator/yield-in-box.rs:21:17: 21:30
    let mut _3: usize;                   // in scope 0 at ui/generator/yield-in-box.rs:21:21: 21:30
    let mut _4: usize;                   // in scope 0 at ui/generator/yield-in-box.rs:21:21: 21:30
    let mut _5: *mut u8;                 // in scope 0 at ui/generator/yield-in-box.rs:21:21: 21:30
    let mut _6: ();                      // in scope 0 at ui/generator/yield-in-box.rs:21:25: 21:30
    let mut _7: std::boxed::Box<i32>;    // in scope 0 at ui/generator/yield-in-box.rs:21:21: 21:21
    let mut _8: u32;                     // in scope 0 at ui/generator/yield-in-box.rs:21:17: 21:30
    let mut _9: &mut [generator@ui/generator/yield-in-box.rs:21:17: 21:20]; // in scope 0 at ui/generator/yield-in-box.rs:21:17: 21:30
    let mut _10: &mut [generator@ui/generator/yield-in-box.rs:21:17: 21:20]; // in scope 0 at ui/generator/yield-in-box.rs:21:17: 21:30
    let mut _11: &mut [generator@ui/generator/yield-in-box.rs:21:17: 21:20]; // in scope 0 at ui/generator/yield-in-box.rs:21:17: 21:30
    let mut _12: &mut [generator@ui/generator/yield-in-box.rs:21:17: 21:20]; // in scope 0 at ui/generator/yield-in-box.rs:21:17: 21:30
    let mut _13: &mut [generator@ui/generator/yield-in-box.rs:21:17: 21:20]; // in scope 0 at ui/generator/yield-in-box.rs:21:17: 21:30
    let mut _14: &mut [generator@ui/generator/yield-in-box.rs:21:17: 21:20]; // in scope 0 at ui/generator/yield-in-box.rs:21:17: 21:30
    let mut _15: &mut [generator@ui/generator/yield-in-box.rs:21:17: 21:20]; // in scope 0 at ui/generator/yield-in-box.rs:21:17: 21:30
    let mut _16: &mut [generator@ui/generator/yield-in-box.rs:21:17: 21:20]; // in scope 0 at ui/generator/yield-in-box.rs:21:17: 21:30
    let mut _17: &mut [generator@ui/generator/yield-in-box.rs:21:17: 21:20]; // in scope 0 at ui/generator/yield-in-box.rs:21:17: 21:30
    let mut _18: *const i32;             // in scope 0 at ui/generator/yield-in-box.rs:21:17: 21:30
    scope 1 {
    }

    bb0: {
        _9 = deref_copy (_1.0: &mut [generator@ui/generator/yield-in-box.rs:21:17: 21:20]); // scope 0 at ui/generator/yield-in-box.rs:21:17: 21:30
        _8 = discriminant((*_9));        // scope 0 at ui/generator/yield-in-box.rs:21:17: 21:30
        switchInt(move _8) -> [0: bb1, 1: bb6, 2: bb5, 3: bb4, otherwise: bb7]; // scope 0 at ui/generator/yield-in-box.rs:21:17: 21:30
    }

    bb1: {
        _3 = SizeOf(i32);                // scope 1 at ui/generator/yield-in-box.rs:21:21: 21:30
        _4 = AlignOf(i32);               // scope 1 at ui/generator/yield-in-box.rs:21:21: 21:30
        _5 = alloc::alloc::exchange_malloc(move _3, move _4) -> [return: bb2, unwind: bb3]; // scope 1 at ui/generator/yield-in-box.rs:21:21: 21:30
                                         // mir::Constant
                                         // + span: ui/generator/yield-in-box.rs:21:21: 21:30
                                         // + literal: Const { ty: unsafe fn(usize, usize) -> *mut u8 {alloc::alloc::exchange_malloc}, val: Value(<ZST>) }
    }

    bb2: {
        _10 = deref_copy (_1.0: &mut [generator@ui/generator/yield-in-box.rs:21:17: 21:20]); // scope 0 at ui/generator/yield-in-box.rs:21:21: 21:30
        (((*_10) as variant#3).0: std::boxed::Box<i32>) = ShallowInitBox(move _5, i32); // scope 0 at ui/generator/yield-in-box.rs:21:21: 21:30
        _6 = ();                         // scope 0 at ui/generator/yield-in-box.rs:21:25: 21:30
        _11 = deref_copy (_1.0: &mut [generator@ui/generator/yield-in-box.rs:21:17: 21:20]); // scope 0 at ui/generator/yield-in-box.rs:21:25: 21:30
        _12 = deref_copy (_1.0: &mut [generator@ui/generator/yield-in-box.rs:21:17: 21:20]); // scope 0 at ui/generator/yield-in-box.rs:21:25: 21:30
        (((*_11) as variant#3).1: *const i32) = ((((((*_12) as variant#3).0: std::boxed::Box<i32>).0: std::ptr::Unique<i32>).0: std::ptr::NonNull<i32>).0: *const i32); // scope 0 at ui/generator/yield-in-box.rs:21:25: 21:30
        _0 = GeneratorState::<(), Box<i32>>::Yielded(move _6); // scope 0 at ui/generator/yield-in-box.rs:21:25: 21:30
        _13 = deref_copy (_1.0: &mut [generator@ui/generator/yield-in-box.rs:21:17: 21:20]); // scope 0 at ui/generator/yield-in-box.rs:21:25: 21:30
        discriminant((*_13)) = 3;        // scope 0 at ui/generator/yield-in-box.rs:21:25: 21:30
        return;                          // scope 0 at ui/generator/yield-in-box.rs:21:25: 21:30
    }

    bb3 (cleanup): {
        _16 = deref_copy (_1.0: &mut [generator@ui/generator/yield-in-box.rs:21:17: 21:20]); // scope 0 at ui/generator/yield-in-box.rs:21:17: 21:30
        discriminant((*_16)) = 2;        // scope 0 at ui/generator/yield-in-box.rs:21:17: 21:30
        resume;                          // scope 0 at ui/generator/yield-in-box.rs:21:17: 21:30
    }

    bb4: {
        _17 = deref_copy (_1.0: &mut [generator@ui/generator/yield-in-box.rs:21:17: 21:20]); // scope 0 at ui/generator/yield-in-box.rs:21:17: 21:30
        _18 = deref_copy (((*_17) as variant#3).1: *const i32); // scope 0 at ui/generator/yield-in-box.rs:21:17: 21:30
        (*_18) = move _2;                // scope 0 at ui/generator/yield-in-box.rs:21:17: 21:30
        _14 = deref_copy (_1.0: &mut [generator@ui/generator/yield-in-box.rs:21:17: 21:20]); // scope 0 at ui/generator/yield-in-box.rs:21:21: 21:30
        _7 = move (((*_14) as variant#3).0: std::boxed::Box<i32>); // scope 0 at ui/generator/yield-in-box.rs:21:21: 21:30
        _0 = GeneratorState::<(), Box<i32>>::Complete(move _7); // scope 0 at ui/generator/yield-in-box.rs:21:30: 21:30
        _15 = deref_copy (_1.0: &mut [generator@ui/generator/yield-in-box.rs:21:17: 21:20]); // scope 0 at ui/generator/yield-in-box.rs:21:30: 21:30
        discriminant((*_15)) = 1;        // scope 0 at ui/generator/yield-in-box.rs:21:30: 21:30
        return;                          // scope 0 at ui/generator/yield-in-box.rs:21:30: 21:30
    }

    bb5: {
        assert(const false, "generator resumed after panicking") -> bb5; // scope 0 at ui/generator/yield-in-box.rs:21:17: 21:30
    }

    bb6: {
        assert(const false, "generator resumed after completion") -> bb6; // scope 0 at ui/generator/yield-in-box.rs:21:17: 21:30
    }

    bb7: {
        unreachable;                     // scope 0 at ui/generator/yield-in-box.rs:21:17: 21:30
    }
}
