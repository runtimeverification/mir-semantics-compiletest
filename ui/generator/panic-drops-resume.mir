// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
static DROP: AtomicUsize = {
    let mut _0: std::sync::atomic::AtomicUsize; // return place in scope 0 at ui/generator/panic-drops-resume.rs:13:14: 13:25

    bb0: {
        ConstEvalCounter;                // scope 0 at ui/generator/panic-drops-resume.rs:13:28: 13:47
        _0 = AtomicUsize::new(const 0_usize) -> bb1; // scope 0 at ui/generator/panic-drops-resume.rs:13:28: 13:47
                                         // mir::Constant
                                         // + span: ui/generator/panic-drops-resume.rs:13:28: 13:44
                                         // + literal: Const { ty: fn(usize) -> AtomicUsize {AtomicUsize::new}, val: Value(<ZST>) }
    }

    bb1: {
        return;                          // scope 0 at ui/generator/panic-drops-resume.rs:13:1: 13:48
    }
}

fn <impl at ui/generator/panic-drops-resume.rs:17:1: 17:22>::drop(_1: &mut Dropper) -> () {
    debug self => _1;                    // in scope 0 at ui/generator/panic-drops-resume.rs:18:13: 18:22
    let mut _0: ();                      // return place in scope 0 at ui/generator/panic-drops-resume.rs:18:24: 18:24
    let _2: usize;                       // in scope 0 at ui/generator/panic-drops-resume.rs:19:9: 19:44
    let mut _3: &std::sync::atomic::AtomicUsize; // in scope 0 at ui/generator/panic-drops-resume.rs:19:9: 19:44
    let _4: &std::sync::atomic::AtomicUsize; // in scope 0 at ui/generator/panic-drops-resume.rs:19:9: 19:13
    let mut _5: std::sync::atomic::Ordering; // in scope 0 at ui/generator/panic-drops-resume.rs:19:27: 19:43

    bb0: {
        _4 = const {alloc1: &AtomicUsize}; // scope 0 at ui/generator/panic-drops-resume.rs:19:9: 19:13
                                         // mir::Constant
                                         // + span: ui/generator/panic-drops-resume.rs:19:9: 19:13
                                         // + literal: Const { ty: &AtomicUsize, val: Value(Scalar(alloc1)) }
        _3 = _4;                         // scope 0 at ui/generator/panic-drops-resume.rs:19:9: 19:44
        _5 = const SeqCst;               // scope 0 at ui/generator/panic-drops-resume.rs:19:27: 19:43
                                         // mir::Constant
                                         // + span: ui/generator/panic-drops-resume.rs:19:27: 19:43
                                         // + literal: Const { ty: std::sync::atomic::Ordering, val: Value(Scalar(0x04)) }
        _2 = AtomicUsize::fetch_add(move _3, const 1_usize, move _5) -> bb1; // scope 0 at ui/generator/panic-drops-resume.rs:19:9: 19:44
                                         // mir::Constant
                                         // + span: ui/generator/panic-drops-resume.rs:19:14: 19:23
                                         // + literal: Const { ty: for<'a> fn(&'a AtomicUsize, usize, std::sync::atomic::Ordering) -> usize {AtomicUsize::fetch_add}, val: Value(<ZST>) }
    }

    bb1: {
        return;                          // scope 0 at ui/generator/panic-drops-resume.rs:20:6: 20:6
    }
}

alloc1 (static: DROP, size: 8, align: 8) {
    00 00 00 00 00 00 00 00                         â”‚ ........
}

fn main() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/generator/panic-drops-resume.rs:23:11: 23:11
    let mut _1: [generator@ui/generator/panic-drops-resume.rs:24:19: 24:25]; // in scope 0 at ui/generator/panic-drops-resume.rs:24:9: 24:16
    let mut _3: &mut [generator@ui/generator/panic-drops-resume.rs:24:19: 24:25]; // in scope 0 at ui/generator/panic-drops-resume.rs:30:28: 30:36
    let mut _4: (&usize, &usize);        // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _5: &usize;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let _6: usize;                       // in scope 0 at ui/generator/panic-drops-resume.rs:32:16: 32:44
    let mut _7: &std::sync::atomic::AtomicUsize; // in scope 0 at ui/generator/panic-drops-resume.rs:32:16: 32:44
    let _8: &std::sync::atomic::AtomicUsize; // in scope 0 at ui/generator/panic-drops-resume.rs:32:16: 32:20
    let mut _9: std::sync::atomic::Ordering; // in scope 0 at ui/generator/panic-drops-resume.rs:32:26: 32:43
    let mut _10: &usize;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _13: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    let mut _14: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
    let mut _15: usize;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
    let mut _16: usize;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
    let _18: !;                          // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
    let mut _19: core::panicking::AssertKind; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
    let mut _20: &usize;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let _21: &usize;                     // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let mut _22: &usize;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let _23: &usize;                     // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let mut _24: std::option::Option<std::fmt::Arguments<'_>>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
    let mut _26: std::panic::AssertUnwindSafe<[closure@ui/generator/panic-drops-resume.rs:33:45: 33:47]>; // in scope 0 at ui/generator/panic-drops-resume.rs:33:28: 33:80
    let mut _27: [closure@ui/generator/panic-drops-resume.rs:33:45: 33:47]; // in scope 0 at ui/generator/panic-drops-resume.rs:33:45: 33:79
    let mut _28: &mut std::pin::Pin<&mut [generator@ui/generator/panic-drops-resume.rs:24:19: 24:25]>; // in scope 0 at ui/generator/panic-drops-resume.rs:33:45: 33:79
    let mut _29: bool;                   // in scope 0 at ui/generator/panic-drops-resume.rs:34:5: 34:26
    let mut _30: bool;                   // in scope 0 at ui/generator/panic-drops-resume.rs:34:13: 34:25
    let mut _31: &std::result::Result<std::ops::GeneratorState<(), ()>, std::boxed::Box<dyn std::any::Any + std::marker::Send>>; // in scope 0 at ui/generator/panic-drops-resume.rs:34:13: 34:25
    let mut _32: !;                      // in scope 0 at ui/generator/panic-drops-resume.rs:34:5: 34:26
    let mut _33: (&usize, &usize);       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _34: &usize;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let _35: usize;                      // in scope 0 at ui/generator/panic-drops-resume.rs:35:16: 35:44
    let mut _36: &std::sync::atomic::AtomicUsize; // in scope 0 at ui/generator/panic-drops-resume.rs:35:16: 35:44
    let _37: &std::sync::atomic::AtomicUsize; // in scope 0 at ui/generator/panic-drops-resume.rs:35:16: 35:20
    let mut _38: std::sync::atomic::Ordering; // in scope 0 at ui/generator/panic-drops-resume.rs:35:26: 35:43
    let mut _39: &usize;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _42: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    let mut _43: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
    let mut _44: usize;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
    let mut _45: usize;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
    let _47: !;                          // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
    let mut _48: core::panicking::AssertKind; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
    let mut _49: &usize;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let _50: &usize;                     // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let mut _51: &usize;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let _52: &usize;                     // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let mut _53: std::option::Option<std::fmt::Arguments<'_>>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
    scope 1 {
        debug gen => _1;                 // in scope 1 at ui/generator/panic-drops-resume.rs:24:9: 24:16
        let mut _2: std::pin::Pin<&mut [generator@ui/generator/panic-drops-resume.rs:24:19: 24:25]>; // in scope 1 at ui/generator/panic-drops-resume.rs:30:9: 30:16
        scope 2 {
            debug gen => _2;             // in scope 2 at ui/generator/panic-drops-resume.rs:30:9: 30:16
            let _11: &usize;             // in scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
            let _12: &usize;             // in scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
            let _25: std::result::Result<std::ops::GeneratorState<(), ()>, std::boxed::Box<dyn std::any::Any + std::marker::Send>>; // in scope 2 at ui/generator/panic-drops-resume.rs:33:9: 33:12
            let mut _55: &usize;         // in scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
            scope 3 {
                debug left_val => _11;   // in scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
                debug right_val => _12;  // in scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
                let _17: core::panicking::AssertKind; // in scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                scope 4 {
                    debug kind => _17;   // in scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                }
            }
            scope 5 {
                debug res => _25;        // in scope 5 at ui/generator/panic-drops-resume.rs:33:9: 33:12
                let _40: &usize;         // in scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
                let _41: &usize;         // in scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
                let mut _54: &usize;     // in scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                scope 6 {
                    debug left_val => _40; // in scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
                    debug right_val => _41; // in scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
                    let _46: core::panicking::AssertKind; // in scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                    scope 7 {
                        debug kind => _46; // in scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                    }
                }
            }
        }
    }

    bb0: {
        _1 = [generator@ui/generator/panic-drops-resume.rs:24:19: 24:25 (#0)]; // scope 0 at ui/generator/panic-drops-resume.rs:24:19: 29:6
                                         // generator
                                         // + def_id: DefId(0:16 ~ panic_drops_resume[f959]::main::{closure#0})
                                         // + substs: [
                                         //     Dropper,
                                         //     (),
                                         //     (),
                                         //     {Dropper, ()},
                                         //     (),
                                         // ]
                                         // + movability: Movable
        _3 = &mut _1;                    // scope 1 at ui/generator/panic-drops-resume.rs:30:28: 30:36
        _2 = Pin::<&mut [generator@ui/generator/panic-drops-resume.rs:24:19: 24:25]>::new(move _3) -> [return: bb1, unwind: bb15]; // scope 1 at ui/generator/panic-drops-resume.rs:30:19: 30:37
                                         // mir::Constant
                                         // + span: ui/generator/panic-drops-resume.rs:30:19: 30:27
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: fn(&mut [generator@ui/generator/panic-drops-resume.rs:24:19: 24:25]) -> Pin<&mut [generator@ui/generator/panic-drops-resume.rs:24:19: 24:25]> {Pin::<&mut [generator@ui/generator/panic-drops-resume.rs:24:19: 24:25]>::new}, val: Value(<ZST>) }
    }

    bb1: {
        _8 = const {alloc1: &AtomicUsize}; // scope 2 at ui/generator/panic-drops-resume.rs:32:16: 32:20
                                         // mir::Constant
                                         // + span: ui/generator/panic-drops-resume.rs:32:16: 32:20
                                         // + literal: Const { ty: &AtomicUsize, val: Value(Scalar(alloc1)) }
        _7 = _8;                         // scope 2 at ui/generator/panic-drops-resume.rs:32:16: 32:44
        _9 = const Acquire;              // scope 2 at ui/generator/panic-drops-resume.rs:32:26: 32:43
                                         // mir::Constant
                                         // + span: ui/generator/panic-drops-resume.rs:32:26: 32:43
                                         // + literal: Const { ty: std::sync::atomic::Ordering, val: Value(Scalar(0x02)) }
        _6 = AtomicUsize::load(move _7, move _9) -> [return: bb2, unwind: bb15]; // scope 2 at ui/generator/panic-drops-resume.rs:32:16: 32:44
                                         // mir::Constant
                                         // + span: ui/generator/panic-drops-resume.rs:32:21: 32:25
                                         // + literal: Const { ty: for<'a> fn(&'a AtomicUsize, std::sync::atomic::Ordering) -> usize {AtomicUsize::load}, val: Value(<ZST>) }
    }

    bb2: {
        _5 = &_6;                        // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _55 = const _;                   // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // + literal: Const { ty: &usize, val: Unevaluated(main, [], Some(promoted[1])) }
        _10 = _55;                       // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _4 = (move _5, move _10);        // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _11 = (_4.0: &usize);            // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _12 = (_4.1: &usize);            // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _15 = (*_11);                    // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
        _16 = const 0_usize;             // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
        _14 = Eq(move _15, move _16);    // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
        _13 = Not(move _14);             // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
        switchInt(move _13) -> [0: bb4, otherwise: bb3]; // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    }

    bb3: {
        _17 = const core::panicking::AssertKind::Eq; // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _19 = const core::panicking::AssertKind::Eq; // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _21 = _11;                       // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _20 = _21;                       // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _23 = _12;                       // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _22 = _23;                       // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _24 = Option::<Arguments<'_>>::None; // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
        _18 = core::panicking::assert_failed::<usize, usize>(move _19, move _20, move _22, move _24) -> bb15; // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:53
                                         // + literal: Const { ty: for<'a, 'b, 'c> fn(core::panicking::AssertKind, &'a usize, &'b usize, Option<Arguments<'c>>) -> ! {core::panicking::assert_failed::<usize, usize>}, val: Value(<ZST>) }
    }

    bb4: {
        _28 = &mut _2;                   // scope 2 at ui/generator/panic-drops-resume.rs:33:45: 33:79
        _27 = [closure@ui/generator/panic-drops-resume.rs:33:45: 33:47] { gen: move _28 }; // scope 2 at ui/generator/panic-drops-resume.rs:33:45: 33:79
                                         // closure
                                         // + def_id: DefId(0:17 ~ panic_drops_resume[f959]::main::{closure#1})
                                         // + substs: [
                                         //     i16,
                                         //     extern "rust-call" fn(()) -> std::ops::GeneratorState<(), ()>,
                                         //     (&mut std::pin::Pin<&mut [generator@ui/generator/panic-drops-resume.rs:24:19: 24:25]>,),
                                         // ]
        _26 = AssertUnwindSafe::<[closure@ui/generator/panic-drops-resume.rs:33:45: 33:47]>(move _27); // scope 2 at ui/generator/panic-drops-resume.rs:33:28: 33:80
        _25 = catch_unwind::<AssertUnwindSafe<[closure@ui/generator/panic-drops-resume.rs:33:45: 33:47]>, GeneratorState<(), ()>>(move _26) -> [return: bb5, unwind: bb15]; // scope 2 at ui/generator/panic-drops-resume.rs:33:15: 33:81
                                         // mir::Constant
                                         // + span: ui/generator/panic-drops-resume.rs:33:15: 33:27
                                         // + literal: Const { ty: fn(AssertUnwindSafe<[closure@ui/generator/panic-drops-resume.rs:33:45: 33:47]>) -> Result<GeneratorState<(), ()>, Box<(dyn Any + Send + 'static)>> {catch_unwind::<AssertUnwindSafe<[closure@ui/generator/panic-drops-resume.rs:33:45: 33:47]>, GeneratorState<(), ()>>}, val: Value(<ZST>) }
    }

    bb5: {
        _31 = &_25;                      // scope 5 at ui/generator/panic-drops-resume.rs:34:13: 34:25
        _30 = Result::<GeneratorState<(), ()>, Box<dyn Any + Send>>::is_err(move _31) -> [return: bb6, unwind: bb14]; // scope 5 at ui/generator/panic-drops-resume.rs:34:13: 34:25
                                         // mir::Constant
                                         // + span: ui/generator/panic-drops-resume.rs:34:17: 34:23
                                         // + literal: Const { ty: for<'a> fn(&'a Result<GeneratorState<(), ()>, Box<dyn Any + Send>>) -> bool {Result::<GeneratorState<(), ()>, Box<dyn Any + Send>>::is_err}, val: Value(<ZST>) }
    }

    bb6: {
        _29 = Not(move _30);             // scope 5 at ui/generator/panic-drops-resume.rs:34:5: 34:26
        switchInt(move _29) -> [0: bb8, otherwise: bb7]; // scope 5 at ui/generator/panic-drops-resume.rs:34:5: 34:26
    }

    bb7: {
        _32 = core::panicking::panic(const "assertion failed: res.is_err()") -> bb14; // scope 5 at ui/generator/panic-drops-resume.rs:34:5: 34:26
                                         // mir::Constant
                                         // + span: ui/generator/panic-drops-resume.rs:34:5: 34:26
                                         // + literal: Const { ty: fn(&'static str) -> ! {core::panicking::panic}, val: Value(<ZST>) }
                                         // mir::Constant
                                         // + span: no-location
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
    }

    bb8: {
        _37 = const {alloc1: &AtomicUsize}; // scope 5 at ui/generator/panic-drops-resume.rs:35:16: 35:20
                                         // mir::Constant
                                         // + span: ui/generator/panic-drops-resume.rs:35:16: 35:20
                                         // + literal: Const { ty: &AtomicUsize, val: Value(Scalar(alloc1)) }
        _36 = _37;                       // scope 5 at ui/generator/panic-drops-resume.rs:35:16: 35:44
        _38 = const Acquire;             // scope 5 at ui/generator/panic-drops-resume.rs:35:26: 35:43
                                         // mir::Constant
                                         // + span: ui/generator/panic-drops-resume.rs:35:26: 35:43
                                         // + literal: Const { ty: std::sync::atomic::Ordering, val: Value(Scalar(0x02)) }
        _35 = AtomicUsize::load(move _36, move _38) -> [return: bb9, unwind: bb14]; // scope 5 at ui/generator/panic-drops-resume.rs:35:16: 35:44
                                         // mir::Constant
                                         // + span: ui/generator/panic-drops-resume.rs:35:21: 35:25
                                         // + literal: Const { ty: for<'a> fn(&'a AtomicUsize, std::sync::atomic::Ordering) -> usize {AtomicUsize::load}, val: Value(<ZST>) }
    }

    bb9: {
        _34 = &_35;                      // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _54 = const _;                   // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // + literal: Const { ty: &usize, val: Unevaluated(main, [], Some(promoted[0])) }
        _39 = _54;                       // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _33 = (move _34, move _39);      // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _40 = (_33.0: &usize);           // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _41 = (_33.1: &usize);           // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _44 = (*_40);                    // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
        _45 = const 1_usize;             // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
        _43 = Eq(move _44, move _45);    // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
        _42 = Not(move _43);             // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
        switchInt(move _42) -> [0: bb11, otherwise: bb10]; // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    }

    bb10: {
        _46 = const core::panicking::AssertKind::Eq; // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _48 = const core::panicking::AssertKind::Eq; // scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _50 = _40;                       // scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _49 = _50;                       // scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _52 = _41;                       // scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _51 = _52;                       // scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _53 = Option::<Arguments<'_>>::None; // scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
        _47 = core::panicking::assert_failed::<usize, usize>(move _48, move _49, move _51, move _53) -> bb14; // scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:53
                                         // + literal: Const { ty: for<'a, 'b, 'c> fn(core::panicking::AssertKind, &'a usize, &'b usize, Option<Arguments<'c>>) -> ! {core::panicking::assert_failed::<usize, usize>}, val: Value(<ZST>) }
    }

    bb11: {
        drop(_25) -> [return: bb12, unwind: bb15]; // scope 2 at ui/generator/panic-drops-resume.rs:36:1: 36:2
    }

    bb12: {
        drop(_1) -> bb13;                // scope 0 at ui/generator/panic-drops-resume.rs:36:1: 36:2
    }

    bb13: {
        return;                          // scope 0 at ui/generator/panic-drops-resume.rs:36:2: 36:2
    }

    bb14 (cleanup): {
        drop(_25) -> bb15;               // scope 2 at ui/generator/panic-drops-resume.rs:36:1: 36:2
    }

    bb15 (cleanup): {
        drop(_1) -> bb16;                // scope 0 at ui/generator/panic-drops-resume.rs:36:1: 36:2
    }

    bb16 (cleanup): {
        resume;                          // scope 0 at ui/generator/panic-drops-resume.rs:23:1: 36:2
    }
}

alloc1 (static: DROP, size: 8, align: 8) {
    00 00 00 00 00 00 00 00                         â”‚ ........
}

promoted[0] in main: &usize = {
    let mut _0: &usize;                  // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _1: usize;                   // in scope 0 at ui/generator/panic-drops-resume.rs:35:46: 35:47

    bb0: {
        _1 = const 1_usize;              // scope 0 at ui/generator/panic-drops-resume.rs:35:46: 35:47
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    }
}

promoted[1] in main: &usize = {
    let mut _0: &usize;                  // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _1: usize;                   // in scope 0 at ui/generator/panic-drops-resume.rs:32:46: 32:47

    bb0: {
        _1 = const 0_usize;              // scope 0 at ui/generator/panic-drops-resume.rs:32:46: 32:47
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    }
}

fn main::{closure#0}(_1: Pin<&mut [generator@ui/generator/panic-drops-resume.rs:24:19: 24:25]>, _2: Dropper) -> GeneratorState<(), ()> {
    debug _arg => (((*(_1.0: &mut [generator@ui/generator/panic-drops-resume.rs:24:19: 24:25])) as variant#3).0: Dropper); // in scope 0 at ui/generator/panic-drops-resume.rs:24:20: 24:24
    let mut _0: std::ops::GeneratorState<(), ()>; // return place in scope 0 at ui/generator/panic-drops-resume.rs:24:19: 29:6
    let mut _3: bool;                    // in scope 0 at ui/generator/panic-drops-resume.rs:25:12: 25:16
    let mut _4: !;                       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/panic.rs:19:9: 19:50
    let _5: Dropper;                     // in scope 0 at ui/generator/panic-drops-resume.rs:28:9: 28:17
    let mut _6: ();                      // in scope 0 at ui/generator/panic-drops-resume.rs:28:15: 28:17
    let mut _7: ();                      // in scope 0 at ui/generator/panic-drops-resume.rs:24:26: 24:26
    let mut _8: u32;                     // in scope 0 at ui/generator/panic-drops-resume.rs:24:19: 29:6
    let mut _9: &mut [generator@ui/generator/panic-drops-resume.rs:24:19: 24:25]; // in scope 0 at ui/generator/panic-drops-resume.rs:24:19: 29:6
    let mut _10: &mut [generator@ui/generator/panic-drops-resume.rs:24:19: 24:25]; // in scope 0 at ui/generator/panic-drops-resume.rs:24:19: 29:6
    let mut _11: &mut [generator@ui/generator/panic-drops-resume.rs:24:19: 24:25]; // in scope 0 at ui/generator/panic-drops-resume.rs:24:19: 29:6
    let mut _12: &mut [generator@ui/generator/panic-drops-resume.rs:24:19: 24:25]; // in scope 0 at ui/generator/panic-drops-resume.rs:24:19: 29:6
    let mut _13: &mut [generator@ui/generator/panic-drops-resume.rs:24:19: 24:25]; // in scope 0 at ui/generator/panic-drops-resume.rs:24:19: 29:6
    let mut _14: &mut [generator@ui/generator/panic-drops-resume.rs:24:19: 24:25]; // in scope 0 at ui/generator/panic-drops-resume.rs:24:19: 29:6
    let mut _15: &mut [generator@ui/generator/panic-drops-resume.rs:24:19: 24:25]; // in scope 0 at ui/generator/panic-drops-resume.rs:24:19: 29:6

    bb0: {
        _9 = deref_copy (_1.0: &mut [generator@ui/generator/panic-drops-resume.rs:24:19: 24:25]); // scope 0 at ui/generator/panic-drops-resume.rs:24:19: 29:6
        _8 = discriminant((*_9));        // scope 0 at ui/generator/panic-drops-resume.rs:24:19: 29:6
        switchInt(move _8) -> [0: bb1, 1: bb10, 2: bb9, 3: bb8, otherwise: bb11]; // scope 0 at ui/generator/panic-drops-resume.rs:24:19: 29:6
    }

    bb1: {
        _10 = deref_copy (_1.0: &mut [generator@ui/generator/panic-drops-resume.rs:24:19: 24:25]); // scope 0 at ui/generator/panic-drops-resume.rs:24:19: 29:6
        (((*_10) as variant#3).0: Dropper) = move _2; // scope 0 at ui/generator/panic-drops-resume.rs:24:19: 29:6
        _3 = const true;                 // scope 0 at ui/generator/panic-drops-resume.rs:25:12: 25:16
        switchInt(move _3) -> [0: bb3, otherwise: bb2]; // scope 0 at ui/generator/panic-drops-resume.rs:25:12: 25:16
    }

    bb2: {
        _4 = begin_panic::<&str>(const "explicit panic") -> bb6; // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/panic.rs:19:9: 19:50
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/panic.rs:19:9: 19:32
                                         // + literal: Const { ty: fn(&str) -> ! {begin_panic::<&str>}, val: Value(<ZST>) }
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/panic.rs:19:33: 19:49
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
    }

    bb3: {
        _6 = ();                         // scope 0 at ui/generator/panic-drops-resume.rs:28:15: 28:17
        _0 = GeneratorState::<(), ()>::Yielded(move _6); // scope 0 at ui/generator/panic-drops-resume.rs:28:9: 28:17
        _11 = deref_copy (_1.0: &mut [generator@ui/generator/panic-drops-resume.rs:24:19: 24:25]); // scope 0 at ui/generator/panic-drops-resume.rs:28:9: 28:17
        discriminant((*_11)) = 3;        // scope 0 at ui/generator/panic-drops-resume.rs:28:9: 28:17
        return;                          // scope 0 at ui/generator/panic-drops-resume.rs:28:9: 28:17
    }

    bb4: {
        _7 = const ();                   // scope 0 at ui/generator/panic-drops-resume.rs:24:26: 29:6
        _12 = deref_copy (_1.0: &mut [generator@ui/generator/panic-drops-resume.rs:24:19: 24:25]); // scope 0 at ui/generator/panic-drops-resume.rs:29:5: 29:6
        drop((((*_12) as variant#3).0: Dropper)) -> [return: bb5, unwind: bb7]; // scope 0 at ui/generator/panic-drops-resume.rs:29:5: 29:6
    }

    bb5: {
        _0 = GeneratorState::<(), ()>::Complete(move _7); // scope 0 at ui/generator/panic-drops-resume.rs:29:6: 29:6
        _13 = deref_copy (_1.0: &mut [generator@ui/generator/panic-drops-resume.rs:24:19: 24:25]); // scope 0 at ui/generator/panic-drops-resume.rs:29:6: 29:6
        discriminant((*_13)) = 1;        // scope 0 at ui/generator/panic-drops-resume.rs:29:6: 29:6
        return;                          // scope 0 at ui/generator/panic-drops-resume.rs:29:6: 29:6
    }

    bb6 (cleanup): {
        _14 = deref_copy (_1.0: &mut [generator@ui/generator/panic-drops-resume.rs:24:19: 24:25]); // scope 0 at ui/generator/panic-drops-resume.rs:29:5: 29:6
        drop((((*_14) as variant#3).0: Dropper)) -> bb7; // scope 0 at ui/generator/panic-drops-resume.rs:29:5: 29:6
    }

    bb7 (cleanup): {
        _15 = deref_copy (_1.0: &mut [generator@ui/generator/panic-drops-resume.rs:24:19: 24:25]); // scope 0 at ui/generator/panic-drops-resume.rs:24:19: 29:6
        discriminant((*_15)) = 2;        // scope 0 at ui/generator/panic-drops-resume.rs:24:19: 29:6
        resume;                          // scope 0 at ui/generator/panic-drops-resume.rs:24:19: 29:6
    }

    bb8: {
        _5 = move _2;                    // scope 0 at ui/generator/panic-drops-resume.rs:24:19: 29:6
        drop(_5) -> [return: bb4, unwind: bb6]; // scope 0 at ui/generator/panic-drops-resume.rs:28:17: 28:18
    }

    bb9: {
        assert(const false, "generator resumed after panicking") -> bb9; // scope 0 at ui/generator/panic-drops-resume.rs:24:19: 29:6
    }

    bb10: {
        assert(const false, "generator resumed after completion") -> bb10; // scope 0 at ui/generator/panic-drops-resume.rs:24:19: 29:6
    }

    bb11: {
        unreachable;                     // scope 0 at ui/generator/panic-drops-resume.rs:24:19: 29:6
    }
}

fn main::{closure#1}(_1: &mut [closure@ui/generator/panic-drops-resume.rs:33:45: 33:47]) -> GeneratorState<(), ()> {
    debug gen => (*((*_1).0: &mut std::pin::Pin<&mut [generator@ui/generator/panic-drops-resume.rs:24:19: 24:25]>)); // in scope 0 at ui/generator/panic-drops-resume.rs:30:9: 30:16
    let mut _0: std::ops::GeneratorState<(), ()>; // return place in scope 0 at ui/generator/panic-drops-resume.rs:33:48: 33:48
    let mut _2: std::pin::Pin<&mut [generator@ui/generator/panic-drops-resume.rs:24:19: 24:25]>; // in scope 0 at ui/generator/panic-drops-resume.rs:33:48: 33:60
    let mut _3: &mut std::pin::Pin<&mut [generator@ui/generator/panic-drops-resume.rs:24:19: 24:25]>; // in scope 0 at ui/generator/panic-drops-resume.rs:33:48: 33:60
    let mut _4: Dropper;                 // in scope 0 at ui/generator/panic-drops-resume.rs:33:68: 33:78
    let mut _5: &mut std::pin::Pin<&mut [generator@ui/generator/panic-drops-resume.rs:24:19: 24:25]>; // in scope 0 at ui/generator/panic-drops-resume.rs:33:45: 33:79

    bb0: {
        _5 = deref_copy ((*_1).0: &mut std::pin::Pin<&mut [generator@ui/generator/panic-drops-resume.rs:24:19: 24:25]>); // scope 0 at ui/generator/panic-drops-resume.rs:33:48: 33:60
        _3 = &mut (*_5);                 // scope 0 at ui/generator/panic-drops-resume.rs:33:48: 33:60
        _2 = Pin::<&mut [generator@ui/generator/panic-drops-resume.rs:24:19: 24:25]>::as_mut(move _3) -> bb1; // scope 0 at ui/generator/panic-drops-resume.rs:33:48: 33:60
                                         // mir::Constant
                                         // + span: ui/generator/panic-drops-resume.rs:33:52: 33:58
                                         // + literal: Const { ty: for<'a> fn(&'a mut Pin<&mut [generator@ui/generator/panic-drops-resume.rs:24:19: 24:25]>) -> Pin<&'a mut <&mut [generator@ui/generator/panic-drops-resume.rs:24:19: 24:25] as Deref>::Target> {Pin::<&mut [generator@ui/generator/panic-drops-resume.rs:24:19: 24:25]>::as_mut}, val: Value(<ZST>) }
    }

    bb1: {
        _0 = <[generator@ui/generator/panic-drops-resume.rs:24:19: 24:25] as Generator<Dropper>>::resume(move _2, move _4) -> bb2; // scope 0 at ui/generator/panic-drops-resume.rs:33:48: 33:79
                                         // mir::Constant
                                         // + span: ui/generator/panic-drops-resume.rs:33:61: 33:67
                                         // + literal: Const { ty: for<'a> fn(Pin<&'a mut [generator@ui/generator/panic-drops-resume.rs:24:19: 24:25]>, Dropper) -> GeneratorState<<[generator@ui/generator/panic-drops-resume.rs:24:19: 24:25] as Generator<Dropper>>::Yield, <[generator@ui/generator/panic-drops-resume.rs:24:19: 24:25] as Generator<Dropper>>::Return> {<[generator@ui/generator/panic-drops-resume.rs:24:19: 24:25] as Generator<Dropper>>::resume}, val: Value(<ZST>) }
    }

    bb2: {
        return;                          // scope 0 at ui/generator/panic-drops-resume.rs:33:79: 33:79
    }
}
