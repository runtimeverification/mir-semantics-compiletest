// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
const FOO_SIZE: usize = {
    let mut _0: usize;                   // return place in scope 0 at ui/generator/size-moved-locals.rs:21:17: 21:22

    bb0: {
        _0 = const 1024_usize;           // scope 0 at ui/generator/size-moved-locals.rs:21:25: 21:29
        return;                          // scope 0 at ui/generator/size-moved-locals.rs:21:1: 21:30
    }
}

Foo::0::{constant#0}: usize = {
    let mut _0: usize;                   // return place in scope 0 at ui/generator/size-moved-locals.rs:22:54: 22:62

    bb0: {
        _0 = const _;                    // scope 0 at ui/generator/size-moved-locals.rs:22:54: 22:62
        return;                          // scope 0 at ui/generator/size-moved-locals.rs:22:54: 22:62
    }
}

fn <impl at ui/generator/size-moved-locals.rs:24:1: 24:18>::drop(_1: &mut Foo) -> () {
    debug self => _1;                    // in scope 0 at ui/generator/size-moved-locals.rs:25:13: 25:22
    let mut _0: ();                      // return place in scope 0 at ui/generator/size-moved-locals.rs:25:24: 25:24

    bb0: {
        return;                          // scope 0 at ui/generator/size-moved-locals.rs:25:26: 25:26
    }
}

fn move_before_yield() -> impl Generator<Yield = (), Return = ()> {
    let mut _0: impl std::ops::Generator<Yield = (), Return = ()>; // return place in scope 0 at ui/generator/size-moved-locals.rs:28:27: 28:66

    bb0: {
        _0 = [generator@ui/generator/size-moved-locals.rs:29:5: 29:14 (#0)]; // scope 0 at ui/generator/size-moved-locals.rs:29:5: 34:6
                                         // generator
                                         // + def_id: DefId(0:12 ~ size_moved_locals[e0d4]::move_before_yield::{closure#0})
                                         // + substs: [
                                         //     (),
                                         //     (),
                                         //     (),
                                         //     {Foo, ()},
                                         //     (),
                                         // ]
                                         // + movability: Static
        return;                          // scope 0 at ui/generator/size-moved-locals.rs:35:2: 35:2
    }
}

fn move_before_yield::{closure#0}(_1: Pin<&mut [static generator@ui/generator/size-moved-locals.rs:29:5: 29:14]>, _2: ()) -> GeneratorState<(), ()> {
    let mut _0: std::ops::GeneratorState<(), ()>; // return place in scope 0 at ui/generator/size-moved-locals.rs:29:5: 34:6
    let _3: Foo;                         // in scope 0 at ui/generator/size-moved-locals.rs:30:13: 30:18
    let mut _4: [u8; 1024];              // in scope 0 at ui/generator/size-moved-locals.rs:30:25: 30:38
    let mut _5: ();                      // in scope 0 at ui/generator/size-moved-locals.rs:32:9: 32:14
    let mut _6: ();                      // in scope 0 at ui/generator/size-moved-locals.rs:29:15: 29:15
    let mut _7: u32;                     // in scope 0 at ui/generator/size-moved-locals.rs:29:5: 34:6
    let mut _8: &mut [static generator@ui/generator/size-moved-locals.rs:29:5: 29:14]; // in scope 0 at ui/generator/size-moved-locals.rs:29:5: 34:6
    let mut _9: &mut [static generator@ui/generator/size-moved-locals.rs:29:5: 29:14]; // in scope 0 at ui/generator/size-moved-locals.rs:29:5: 34:6
    let mut _10: &mut [static generator@ui/generator/size-moved-locals.rs:29:5: 29:14]; // in scope 0 at ui/generator/size-moved-locals.rs:29:5: 34:6
    let mut _11: &mut [static generator@ui/generator/size-moved-locals.rs:29:5: 29:14]; // in scope 0 at ui/generator/size-moved-locals.rs:29:5: 34:6
    let mut _12: &mut [static generator@ui/generator/size-moved-locals.rs:29:5: 29:14]; // in scope 0 at ui/generator/size-moved-locals.rs:29:5: 34:6
    let mut _13: &mut [static generator@ui/generator/size-moved-locals.rs:29:5: 29:14]; // in scope 0 at ui/generator/size-moved-locals.rs:29:5: 34:6
    scope 1 {
        debug first => _3;               // in scope 1 at ui/generator/size-moved-locals.rs:30:13: 30:18
        scope 2 {
            debug _second => (((*(_1.0: &mut [static generator@ui/generator/size-moved-locals.rs:29:5: 29:14])) as variant#3).0: Foo); // in scope 2 at ui/generator/size-moved-locals.rs:31:13: 31:20
        }
    }

    bb0: {
        _8 = deref_copy (_1.0: &mut [static generator@ui/generator/size-moved-locals.rs:29:5: 29:14]); // scope 0 at ui/generator/size-moved-locals.rs:29:5: 34:6
        _7 = discriminant((*_8));        // scope 0 at ui/generator/size-moved-locals.rs:29:5: 34:6
        switchInt(move _7) -> [0: bb1, 1: bb6, 2: bb5, 3: bb4, otherwise: bb7]; // scope 0 at ui/generator/size-moved-locals.rs:29:5: 34:6
    }

    bb1: {
        _4 = [const 0_u8; 1024];         // scope 0 at ui/generator/size-moved-locals.rs:30:25: 30:38
        _3 = Foo(move _4);               // scope 0 at ui/generator/size-moved-locals.rs:30:21: 30:39
        _9 = deref_copy (_1.0: &mut [static generator@ui/generator/size-moved-locals.rs:29:5: 29:14]); // scope 1 at ui/generator/size-moved-locals.rs:31:23: 31:28
        (((*_9) as variant#3).0: Foo) = move _3; // scope 1 at ui/generator/size-moved-locals.rs:31:23: 31:28
        _5 = ();                         // scope 2 at ui/generator/size-moved-locals.rs:32:9: 32:14
        _0 = GeneratorState::<(), ()>::Yielded(move _5); // scope 2 at ui/generator/size-moved-locals.rs:32:9: 32:14
        _10 = deref_copy (_1.0: &mut [static generator@ui/generator/size-moved-locals.rs:29:5: 29:14]); // scope 2 at ui/generator/size-moved-locals.rs:32:9: 32:14
        discriminant((*_10)) = 3;        // scope 2 at ui/generator/size-moved-locals.rs:32:9: 32:14
        return;                          // scope 2 at ui/generator/size-moved-locals.rs:32:9: 32:14
    }

    bb2: {
        _0 = GeneratorState::<(), ()>::Complete(move _6); // scope 0 at ui/generator/size-moved-locals.rs:34:6: 34:6
        _12 = deref_copy (_1.0: &mut [static generator@ui/generator/size-moved-locals.rs:29:5: 29:14]); // scope 0 at ui/generator/size-moved-locals.rs:34:6: 34:6
        discriminant((*_12)) = 1;        // scope 0 at ui/generator/size-moved-locals.rs:34:6: 34:6
        return;                          // scope 0 at ui/generator/size-moved-locals.rs:34:6: 34:6
    }

    bb3 (cleanup): {
        _13 = deref_copy (_1.0: &mut [static generator@ui/generator/size-moved-locals.rs:29:5: 29:14]); // scope 0 at ui/generator/size-moved-locals.rs:29:5: 34:6
        discriminant((*_13)) = 2;        // scope 0 at ui/generator/size-moved-locals.rs:29:5: 34:6
        resume;                          // scope 0 at ui/generator/size-moved-locals.rs:29:5: 34:6
    }

    bb4: {
        _6 = const ();                   // scope 0 at ui/generator/size-moved-locals.rs:29:15: 34:6
        _11 = deref_copy (_1.0: &mut [static generator@ui/generator/size-moved-locals.rs:29:5: 29:14]); // scope 1 at ui/generator/size-moved-locals.rs:34:5: 34:6
        drop((((*_11) as variant#3).0: Foo)) -> [return: bb2, unwind: bb3]; // scope 1 at ui/generator/size-moved-locals.rs:34:5: 34:6
    }

    bb5: {
        assert(const false, "generator resumed after panicking") -> bb5; // scope 0 at ui/generator/size-moved-locals.rs:29:5: 34:6
    }

    bb6: {
        assert(const false, "generator resumed after completion") -> bb6; // scope 0 at ui/generator/size-moved-locals.rs:29:5: 34:6
    }

    bb7: {
        unreachable;                     // scope 0 at ui/generator/size-moved-locals.rs:29:5: 34:6
    }
}

move_before_yield::{closure#0}::{constant#0}: usize = {
    let mut _0: usize;                   // return place in scope 0 at ui/generator/size-moved-locals.rs:30:29: 30:37

    bb0: {
        _0 = const _;                    // scope 0 at ui/generator/size-moved-locals.rs:30:29: 30:37
        return;                          // scope 0 at ui/generator/size-moved-locals.rs:30:29: 30:37
    }
}

fn noop() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/generator/size-moved-locals.rs:37:11: 37:11

    bb0: {
        return;                          // scope 0 at ui/generator/size-moved-locals.rs:37:13: 37:13
    }
}

fn move_before_yield_with_noop() -> impl Generator<Yield = (), Return = ()> {
    let mut _0: impl std::ops::Generator<Yield = (), Return = ()>; // return place in scope 0 at ui/generator/size-moved-locals.rs:39:37: 39:76

    bb0: {
        _0 = [generator@ui/generator/size-moved-locals.rs:40:5: 40:14 (#0)]; // scope 0 at ui/generator/size-moved-locals.rs:40:5: 46:6
                                         // generator
                                         // + def_id: DefId(0:16 ~ size_moved_locals[e0d4]::move_before_yield_with_noop::{closure#0})
                                         // + substs: [
                                         //     (),
                                         //     (),
                                         //     (),
                                         //     {Foo, ()},
                                         //     (),
                                         // ]
                                         // + movability: Static
        return;                          // scope 0 at ui/generator/size-moved-locals.rs:47:2: 47:2
    }
}

fn move_before_yield_with_noop::{closure#0}(_1: Pin<&mut [static generator@ui/generator/size-moved-locals.rs:40:5: 40:14]>, _2: ()) -> GeneratorState<(), ()> {
    let mut _0: std::ops::GeneratorState<(), ()>; // return place in scope 0 at ui/generator/size-moved-locals.rs:40:5: 46:6
    let _3: Foo;                         // in scope 0 at ui/generator/size-moved-locals.rs:41:13: 41:18
    let mut _4: [u8; 1024];              // in scope 0 at ui/generator/size-moved-locals.rs:41:25: 41:38
    let _5: ();                          // in scope 0 at ui/generator/size-moved-locals.rs:42:9: 42:15
    let mut _6: ();                      // in scope 0 at ui/generator/size-moved-locals.rs:44:9: 44:14
    let mut _7: ();                      // in scope 0 at ui/generator/size-moved-locals.rs:40:15: 40:15
    let mut _8: u32;                     // in scope 0 at ui/generator/size-moved-locals.rs:40:5: 46:6
    let mut _9: &mut [static generator@ui/generator/size-moved-locals.rs:40:5: 40:14]; // in scope 0 at ui/generator/size-moved-locals.rs:40:5: 46:6
    let mut _10: &mut [static generator@ui/generator/size-moved-locals.rs:40:5: 40:14]; // in scope 0 at ui/generator/size-moved-locals.rs:40:5: 46:6
    let mut _11: &mut [static generator@ui/generator/size-moved-locals.rs:40:5: 40:14]; // in scope 0 at ui/generator/size-moved-locals.rs:40:5: 46:6
    let mut _12: &mut [static generator@ui/generator/size-moved-locals.rs:40:5: 40:14]; // in scope 0 at ui/generator/size-moved-locals.rs:40:5: 46:6
    let mut _13: &mut [static generator@ui/generator/size-moved-locals.rs:40:5: 40:14]; // in scope 0 at ui/generator/size-moved-locals.rs:40:5: 46:6
    let mut _14: &mut [static generator@ui/generator/size-moved-locals.rs:40:5: 40:14]; // in scope 0 at ui/generator/size-moved-locals.rs:40:5: 46:6
    let mut _15: &mut [static generator@ui/generator/size-moved-locals.rs:40:5: 40:14]; // in scope 0 at ui/generator/size-moved-locals.rs:40:5: 46:6
    let mut _16: &mut [static generator@ui/generator/size-moved-locals.rs:40:5: 40:14]; // in scope 0 at ui/generator/size-moved-locals.rs:40:5: 46:6
    let mut _17: &mut [static generator@ui/generator/size-moved-locals.rs:40:5: 40:14]; // in scope 0 at ui/generator/size-moved-locals.rs:40:5: 46:6
    let mut _18: &mut [static generator@ui/generator/size-moved-locals.rs:40:5: 40:14]; // in scope 0 at ui/generator/size-moved-locals.rs:40:5: 46:6
    let mut _19: &mut [static generator@ui/generator/size-moved-locals.rs:40:5: 40:14]; // in scope 0 at ui/generator/size-moved-locals.rs:40:5: 46:6
    let mut _20: &mut [static generator@ui/generator/size-moved-locals.rs:40:5: 40:14]; // in scope 0 at ui/generator/size-moved-locals.rs:40:5: 46:6
    scope 1 {
        debug first => _3;               // in scope 1 at ui/generator/size-moved-locals.rs:41:13: 41:18
        scope 2 {
            debug _second => (((*(_1.0: &mut [static generator@ui/generator/size-moved-locals.rs:40:5: 40:14])) as variant#3).0: Foo); // in scope 2 at ui/generator/size-moved-locals.rs:43:13: 43:20
        }
    }

    bb0: {
        _9 = deref_copy (_1.0: &mut [static generator@ui/generator/size-moved-locals.rs:40:5: 40:14]); // scope 0 at ui/generator/size-moved-locals.rs:40:5: 46:6
        _8 = discriminant((*_9));        // scope 0 at ui/generator/size-moved-locals.rs:40:5: 46:6
        switchInt(move _8) -> [0: bb1, 1: bb9, 2: bb8, 3: bb7, otherwise: bb10]; // scope 0 at ui/generator/size-moved-locals.rs:40:5: 46:6
    }

    bb1: {
        _10 = deref_copy (_1.0: &mut [static generator@ui/generator/size-moved-locals.rs:40:5: 40:14]); // scope 0 at ui/generator/size-moved-locals.rs:41:13: 41:18
        (((*_10) as variant#3).1: bool) = const false; // scope 0 at ui/generator/size-moved-locals.rs:41:13: 41:18
        _4 = [const 0_u8; 1024];         // scope 0 at ui/generator/size-moved-locals.rs:41:25: 41:38
        _11 = deref_copy (_1.0: &mut [static generator@ui/generator/size-moved-locals.rs:40:5: 40:14]); // scope 0 at ui/generator/size-moved-locals.rs:41:21: 41:39
        (((*_11) as variant#3).1: bool) = const true; // scope 0 at ui/generator/size-moved-locals.rs:41:21: 41:39
        _3 = Foo(move _4);               // scope 0 at ui/generator/size-moved-locals.rs:41:21: 41:39
        _5 = noop() -> [return: bb2, unwind: bb6]; // scope 1 at ui/generator/size-moved-locals.rs:42:9: 42:15
                                         // mir::Constant
                                         // + span: ui/generator/size-moved-locals.rs:42:9: 42:13
                                         // + literal: Const { ty: fn() {noop}, val: Value(<ZST>) }
    }

    bb2: {
        _12 = deref_copy (_1.0: &mut [static generator@ui/generator/size-moved-locals.rs:40:5: 40:14]); // scope 1 at ui/generator/size-moved-locals.rs:43:23: 43:28
        (((*_12) as variant#3).1: bool) = const false; // scope 1 at ui/generator/size-moved-locals.rs:43:23: 43:28
        _13 = deref_copy (_1.0: &mut [static generator@ui/generator/size-moved-locals.rs:40:5: 40:14]); // scope 1 at ui/generator/size-moved-locals.rs:43:23: 43:28
        (((*_13) as variant#3).0: Foo) = move _3; // scope 1 at ui/generator/size-moved-locals.rs:43:23: 43:28
        _6 = ();                         // scope 2 at ui/generator/size-moved-locals.rs:44:9: 44:14
        _0 = GeneratorState::<(), ()>::Yielded(move _6); // scope 2 at ui/generator/size-moved-locals.rs:44:9: 44:14
        _14 = deref_copy (_1.0: &mut [static generator@ui/generator/size-moved-locals.rs:40:5: 40:14]); // scope 2 at ui/generator/size-moved-locals.rs:44:9: 44:14
        discriminant((*_14)) = 3;        // scope 2 at ui/generator/size-moved-locals.rs:44:9: 44:14
        return;                          // scope 2 at ui/generator/size-moved-locals.rs:44:9: 44:14
    }

    bb3: {
        _16 = deref_copy (_1.0: &mut [static generator@ui/generator/size-moved-locals.rs:40:5: 40:14]); // scope 0 at ui/generator/size-moved-locals.rs:46:5: 46:6
        (((*_16) as variant#3).1: bool) = const false; // scope 0 at ui/generator/size-moved-locals.rs:46:5: 46:6
        _0 = GeneratorState::<(), ()>::Complete(move _7); // scope 0 at ui/generator/size-moved-locals.rs:46:6: 46:6
        _17 = deref_copy (_1.0: &mut [static generator@ui/generator/size-moved-locals.rs:40:5: 40:14]); // scope 0 at ui/generator/size-moved-locals.rs:46:6: 46:6
        discriminant((*_17)) = 1;        // scope 0 at ui/generator/size-moved-locals.rs:46:6: 46:6
        return;                          // scope 0 at ui/generator/size-moved-locals.rs:46:6: 46:6
    }

    bb4 (cleanup): {
        _18 = deref_copy (_1.0: &mut [static generator@ui/generator/size-moved-locals.rs:40:5: 40:14]); // scope 0 at ui/generator/size-moved-locals.rs:46:5: 46:6
        (((*_18) as variant#3).1: bool) = const false; // scope 0 at ui/generator/size-moved-locals.rs:46:5: 46:6
        _20 = deref_copy (_1.0: &mut [static generator@ui/generator/size-moved-locals.rs:40:5: 40:14]); // scope 0 at ui/generator/size-moved-locals.rs:40:5: 46:6
        discriminant((*_20)) = 2;        // scope 0 at ui/generator/size-moved-locals.rs:40:5: 46:6
        resume;                          // scope 0 at ui/generator/size-moved-locals.rs:40:5: 46:6
    }

    bb5 (cleanup): {
        drop(_3) -> bb4;                 // scope 0 at ui/generator/size-moved-locals.rs:46:5: 46:6
    }

    bb6 (cleanup): {
        _19 = deref_copy (_1.0: &mut [static generator@ui/generator/size-moved-locals.rs:40:5: 40:14]); // scope 0 at ui/generator/size-moved-locals.rs:46:5: 46:6
        switchInt((((*_19) as variant#3).1: bool)) -> [0: bb4, otherwise: bb5]; // scope 0 at ui/generator/size-moved-locals.rs:46:5: 46:6
    }

    bb7: {
        _7 = const ();                   // scope 0 at ui/generator/size-moved-locals.rs:40:15: 46:6
        _15 = deref_copy (_1.0: &mut [static generator@ui/generator/size-moved-locals.rs:40:5: 40:14]); // scope 1 at ui/generator/size-moved-locals.rs:46:5: 46:6
        drop((((*_15) as variant#3).0: Foo)) -> [return: bb3, unwind: bb6]; // scope 1 at ui/generator/size-moved-locals.rs:46:5: 46:6
    }

    bb8: {
        assert(const false, "generator resumed after panicking") -> bb8; // scope 0 at ui/generator/size-moved-locals.rs:40:5: 46:6
    }

    bb9: {
        assert(const false, "generator resumed after completion") -> bb9; // scope 0 at ui/generator/size-moved-locals.rs:40:5: 46:6
    }

    bb10: {
        unreachable;                     // scope 0 at ui/generator/size-moved-locals.rs:40:5: 46:6
    }
}

move_before_yield_with_noop::{closure#0}::{constant#0}: usize = {
    let mut _0: usize;                   // return place in scope 0 at ui/generator/size-moved-locals.rs:41:29: 41:37

    bb0: {
        _0 = const _;                    // scope 0 at ui/generator/size-moved-locals.rs:41:29: 41:37
        return;                          // scope 0 at ui/generator/size-moved-locals.rs:41:29: 41:37
    }
}

fn overlap_move_points() -> impl Generator<Yield = (), Return = ()> {
    let mut _0: impl std::ops::Generator<Yield = (), Return = ()>; // return place in scope 0 at ui/generator/size-moved-locals.rs:51:29: 51:68

    bb0: {
        _0 = [generator@ui/generator/size-moved-locals.rs:52:5: 52:14 (#0)]; // scope 0 at ui/generator/size-moved-locals.rs:52:5: 59:6
                                         // generator
                                         // + def_id: DefId(0:19 ~ size_moved_locals[e0d4]::overlap_move_points::{closure#0})
                                         // + substs: [
                                         //     (),
                                         //     (),
                                         //     (),
                                         //     {Foo, ()},
                                         //     (),
                                         // ]
                                         // + movability: Static
        return;                          // scope 0 at ui/generator/size-moved-locals.rs:60:2: 60:2
    }
}

fn overlap_move_points::{closure#0}(_1: Pin<&mut [static generator@ui/generator/size-moved-locals.rs:52:5: 52:14]>, _2: ()) -> GeneratorState<(), ()> {
    let mut _0: std::ops::GeneratorState<(), ()>; // return place in scope 0 at ui/generator/size-moved-locals.rs:52:5: 59:6
    let mut _3: [u8; 1024];              // in scope 0 at ui/generator/size-moved-locals.rs:53:25: 53:38
    let mut _4: ();                      // in scope 0 at ui/generator/size-moved-locals.rs:54:9: 54:14
    let mut _5: ();                      // in scope 0 at ui/generator/size-moved-locals.rs:56:9: 56:14
    let mut _6: ();                      // in scope 0 at ui/generator/size-moved-locals.rs:58:9: 58:14
    let mut _7: ();                      // in scope 0 at ui/generator/size-moved-locals.rs:52:15: 52:15
    let mut _8: u32;                     // in scope 0 at ui/generator/size-moved-locals.rs:52:5: 59:6
    let mut _9: &mut [static generator@ui/generator/size-moved-locals.rs:52:5: 52:14]; // in scope 0 at ui/generator/size-moved-locals.rs:52:5: 59:6
    let mut _10: &mut [static generator@ui/generator/size-moved-locals.rs:52:5: 52:14]; // in scope 0 at ui/generator/size-moved-locals.rs:52:5: 59:6
    let mut _11: &mut [static generator@ui/generator/size-moved-locals.rs:52:5: 52:14]; // in scope 0 at ui/generator/size-moved-locals.rs:52:5: 59:6
    let mut _12: &mut [static generator@ui/generator/size-moved-locals.rs:52:5: 52:14]; // in scope 0 at ui/generator/size-moved-locals.rs:52:5: 59:6
    let mut _13: &mut [static generator@ui/generator/size-moved-locals.rs:52:5: 52:14]; // in scope 0 at ui/generator/size-moved-locals.rs:52:5: 59:6
    let mut _14: &mut [static generator@ui/generator/size-moved-locals.rs:52:5: 52:14]; // in scope 0 at ui/generator/size-moved-locals.rs:52:5: 59:6
    let mut _15: &mut [static generator@ui/generator/size-moved-locals.rs:52:5: 52:14]; // in scope 0 at ui/generator/size-moved-locals.rs:52:5: 59:6
    let mut _16: &mut [static generator@ui/generator/size-moved-locals.rs:52:5: 52:14]; // in scope 0 at ui/generator/size-moved-locals.rs:52:5: 59:6
    let mut _17: &mut [static generator@ui/generator/size-moved-locals.rs:52:5: 52:14]; // in scope 0 at ui/generator/size-moved-locals.rs:52:5: 59:6
    let mut _18: &mut [static generator@ui/generator/size-moved-locals.rs:52:5: 52:14]; // in scope 0 at ui/generator/size-moved-locals.rs:52:5: 59:6
    let mut _19: &mut [static generator@ui/generator/size-moved-locals.rs:52:5: 52:14]; // in scope 0 at ui/generator/size-moved-locals.rs:52:5: 59:6
    let mut _20: &mut [static generator@ui/generator/size-moved-locals.rs:52:5: 52:14]; // in scope 0 at ui/generator/size-moved-locals.rs:52:5: 59:6
    let mut _21: &mut [static generator@ui/generator/size-moved-locals.rs:52:5: 52:14]; // in scope 0 at ui/generator/size-moved-locals.rs:52:5: 59:6
    let mut _22: &mut [static generator@ui/generator/size-moved-locals.rs:52:5: 52:14]; // in scope 0 at ui/generator/size-moved-locals.rs:52:5: 59:6
    let mut _23: &mut [static generator@ui/generator/size-moved-locals.rs:52:5: 52:14]; // in scope 0 at ui/generator/size-moved-locals.rs:52:5: 59:6
    let mut _24: &mut [static generator@ui/generator/size-moved-locals.rs:52:5: 52:14]; // in scope 0 at ui/generator/size-moved-locals.rs:52:5: 59:6
    let mut _25: &mut [static generator@ui/generator/size-moved-locals.rs:52:5: 52:14]; // in scope 0 at ui/generator/size-moved-locals.rs:52:5: 59:6
    let mut _26: &mut [static generator@ui/generator/size-moved-locals.rs:52:5: 52:14]; // in scope 0 at ui/generator/size-moved-locals.rs:52:5: 59:6
    let mut _27: &mut [static generator@ui/generator/size-moved-locals.rs:52:5: 52:14]; // in scope 0 at ui/generator/size-moved-locals.rs:52:5: 59:6
    let mut _28: &mut [static generator@ui/generator/size-moved-locals.rs:52:5: 52:14]; // in scope 0 at ui/generator/size-moved-locals.rs:52:5: 59:6
    let mut _29: &mut [static generator@ui/generator/size-moved-locals.rs:52:5: 52:14]; // in scope 0 at ui/generator/size-moved-locals.rs:52:5: 59:6
    let mut _30: &mut [static generator@ui/generator/size-moved-locals.rs:52:5: 52:14]; // in scope 0 at ui/generator/size-moved-locals.rs:52:5: 59:6
    scope 1 {
        debug first => (((*(_1.0: &mut [static generator@ui/generator/size-moved-locals.rs:52:5: 52:14])) as variant#3).0: Foo); // in scope 1 at ui/generator/size-moved-locals.rs:53:13: 53:18
        scope 2 {
            debug second => (((*(_1.0: &mut [static generator@ui/generator/size-moved-locals.rs:52:5: 52:14])) as variant#4).0: Foo); // in scope 2 at ui/generator/size-moved-locals.rs:55:13: 55:19
            scope 3 {
                debug _third => (((*(_1.0: &mut [static generator@ui/generator/size-moved-locals.rs:52:5: 52:14])) as variant#5).0: Foo); // in scope 3 at ui/generator/size-moved-locals.rs:57:13: 57:19
            }
        }
    }

    bb0: {
        _9 = deref_copy (_1.0: &mut [static generator@ui/generator/size-moved-locals.rs:52:5: 52:14]); // scope 0 at ui/generator/size-moved-locals.rs:52:5: 59:6
        _8 = discriminant((*_9));        // scope 0 at ui/generator/size-moved-locals.rs:52:5: 59:6
        switchInt(move _8) -> [0: bb1, 1: bb8, 2: bb7, 3: bb4, 4: bb5, 5: bb6, otherwise: bb9]; // scope 0 at ui/generator/size-moved-locals.rs:52:5: 59:6
    }

    bb1: {
        _10 = deref_copy (_1.0: &mut [static generator@ui/generator/size-moved-locals.rs:52:5: 52:14]); // scope 0 at ui/generator/size-moved-locals.rs:53:13: 53:18
        (((*_10) as variant#3).1: bool) = const false; // scope 0 at ui/generator/size-moved-locals.rs:53:13: 53:18
        _11 = deref_copy (_1.0: &mut [static generator@ui/generator/size-moved-locals.rs:52:5: 52:14]); // scope 0 at ui/generator/size-moved-locals.rs:53:13: 53:18
        (((*_11) as variant#4).1: bool) = const false; // scope 0 at ui/generator/size-moved-locals.rs:53:13: 53:18
        _3 = [const 0_u8; 1024];         // scope 0 at ui/generator/size-moved-locals.rs:53:25: 53:38
        _12 = deref_copy (_1.0: &mut [static generator@ui/generator/size-moved-locals.rs:52:5: 52:14]); // scope 0 at ui/generator/size-moved-locals.rs:53:21: 53:39
        (((*_12) as variant#3).1: bool) = const true; // scope 0 at ui/generator/size-moved-locals.rs:53:21: 53:39
        _13 = deref_copy (_1.0: &mut [static generator@ui/generator/size-moved-locals.rs:52:5: 52:14]); // scope 0 at ui/generator/size-moved-locals.rs:53:21: 53:39
        (((*_13) as variant#3).0: Foo) = Foo(move _3); // scope 0 at ui/generator/size-moved-locals.rs:53:21: 53:39
        _4 = ();                         // scope 1 at ui/generator/size-moved-locals.rs:54:9: 54:14
        _0 = GeneratorState::<(), ()>::Yielded(move _4); // scope 1 at ui/generator/size-moved-locals.rs:54:9: 54:14
        _14 = deref_copy (_1.0: &mut [static generator@ui/generator/size-moved-locals.rs:52:5: 52:14]); // scope 1 at ui/generator/size-moved-locals.rs:54:9: 54:14
        discriminant((*_14)) = 3;        // scope 1 at ui/generator/size-moved-locals.rs:54:9: 54:14
        return;                          // scope 1 at ui/generator/size-moved-locals.rs:54:9: 54:14
    }

    bb2: {
        _25 = deref_copy (_1.0: &mut [static generator@ui/generator/size-moved-locals.rs:52:5: 52:14]); // scope 1 at ui/generator/size-moved-locals.rs:59:5: 59:6
        (((*_25) as variant#4).1: bool) = const false; // scope 1 at ui/generator/size-moved-locals.rs:59:5: 59:6
        _26 = deref_copy (_1.0: &mut [static generator@ui/generator/size-moved-locals.rs:52:5: 52:14]); // scope 0 at ui/generator/size-moved-locals.rs:59:5: 59:6
        (((*_26) as variant#3).1: bool) = const false; // scope 0 at ui/generator/size-moved-locals.rs:59:5: 59:6
        _0 = GeneratorState::<(), ()>::Complete(move _7); // scope 0 at ui/generator/size-moved-locals.rs:59:6: 59:6
        _27 = deref_copy (_1.0: &mut [static generator@ui/generator/size-moved-locals.rs:52:5: 52:14]); // scope 0 at ui/generator/size-moved-locals.rs:59:6: 59:6
        discriminant((*_27)) = 1;        // scope 0 at ui/generator/size-moved-locals.rs:59:6: 59:6
        return;                          // scope 0 at ui/generator/size-moved-locals.rs:59:6: 59:6
    }

    bb3 (cleanup): {
        _28 = deref_copy (_1.0: &mut [static generator@ui/generator/size-moved-locals.rs:52:5: 52:14]); // scope 1 at ui/generator/size-moved-locals.rs:59:5: 59:6
        (((*_28) as variant#4).1: bool) = const false; // scope 1 at ui/generator/size-moved-locals.rs:59:5: 59:6
        _29 = deref_copy (_1.0: &mut [static generator@ui/generator/size-moved-locals.rs:52:5: 52:14]); // scope 0 at ui/generator/size-moved-locals.rs:59:5: 59:6
        (((*_29) as variant#3).1: bool) = const false; // scope 0 at ui/generator/size-moved-locals.rs:59:5: 59:6
        _30 = deref_copy (_1.0: &mut [static generator@ui/generator/size-moved-locals.rs:52:5: 52:14]); // scope 0 at ui/generator/size-moved-locals.rs:52:5: 59:6
        discriminant((*_30)) = 2;        // scope 0 at ui/generator/size-moved-locals.rs:52:5: 59:6
        resume;                          // scope 0 at ui/generator/size-moved-locals.rs:52:5: 59:6
    }

    bb4: {
        _15 = deref_copy (_1.0: &mut [static generator@ui/generator/size-moved-locals.rs:52:5: 52:14]); // scope 1 at ui/generator/size-moved-locals.rs:55:22: 55:27
        (((*_15) as variant#3).1: bool) = const false; // scope 1 at ui/generator/size-moved-locals.rs:55:22: 55:27
        _16 = deref_copy (_1.0: &mut [static generator@ui/generator/size-moved-locals.rs:52:5: 52:14]); // scope 1 at ui/generator/size-moved-locals.rs:55:22: 55:27
        (((*_16) as variant#4).1: bool) = const true; // scope 1 at ui/generator/size-moved-locals.rs:55:22: 55:27
        _17 = deref_copy (_1.0: &mut [static generator@ui/generator/size-moved-locals.rs:52:5: 52:14]); // scope 1 at ui/generator/size-moved-locals.rs:55:22: 55:27
        _18 = deref_copy (_1.0: &mut [static generator@ui/generator/size-moved-locals.rs:52:5: 52:14]); // scope 1 at ui/generator/size-moved-locals.rs:55:22: 55:27
        (((*_17) as variant#4).0: Foo) = move (((*_18) as variant#3).0: Foo); // scope 1 at ui/generator/size-moved-locals.rs:55:22: 55:27
        _5 = ();                         // scope 2 at ui/generator/size-moved-locals.rs:56:9: 56:14
        _0 = GeneratorState::<(), ()>::Yielded(move _5); // scope 2 at ui/generator/size-moved-locals.rs:56:9: 56:14
        _19 = deref_copy (_1.0: &mut [static generator@ui/generator/size-moved-locals.rs:52:5: 52:14]); // scope 2 at ui/generator/size-moved-locals.rs:56:9: 56:14
        discriminant((*_19)) = 4;        // scope 2 at ui/generator/size-moved-locals.rs:56:9: 56:14
        return;                          // scope 2 at ui/generator/size-moved-locals.rs:56:9: 56:14
    }

    bb5: {
        _20 = deref_copy (_1.0: &mut [static generator@ui/generator/size-moved-locals.rs:52:5: 52:14]); // scope 2 at ui/generator/size-moved-locals.rs:57:22: 57:28
        (((*_20) as variant#4).1: bool) = const false; // scope 2 at ui/generator/size-moved-locals.rs:57:22: 57:28
        _21 = deref_copy (_1.0: &mut [static generator@ui/generator/size-moved-locals.rs:52:5: 52:14]); // scope 2 at ui/generator/size-moved-locals.rs:57:22: 57:28
        _22 = deref_copy (_1.0: &mut [static generator@ui/generator/size-moved-locals.rs:52:5: 52:14]); // scope 2 at ui/generator/size-moved-locals.rs:57:22: 57:28
        (((*_21) as variant#5).0: Foo) = move (((*_22) as variant#4).0: Foo); // scope 2 at ui/generator/size-moved-locals.rs:57:22: 57:28
        _6 = ();                         // scope 3 at ui/generator/size-moved-locals.rs:58:9: 58:14
        _0 = GeneratorState::<(), ()>::Yielded(move _6); // scope 3 at ui/generator/size-moved-locals.rs:58:9: 58:14
        _23 = deref_copy (_1.0: &mut [static generator@ui/generator/size-moved-locals.rs:52:5: 52:14]); // scope 3 at ui/generator/size-moved-locals.rs:58:9: 58:14
        discriminant((*_23)) = 5;        // scope 3 at ui/generator/size-moved-locals.rs:58:9: 58:14
        return;                          // scope 3 at ui/generator/size-moved-locals.rs:58:9: 58:14
    }

    bb6: {
        _7 = const ();                   // scope 0 at ui/generator/size-moved-locals.rs:52:15: 59:6
        _24 = deref_copy (_1.0: &mut [static generator@ui/generator/size-moved-locals.rs:52:5: 52:14]); // scope 2 at ui/generator/size-moved-locals.rs:59:5: 59:6
        drop((((*_24) as variant#5).0: Foo)) -> [return: bb2, unwind: bb3]; // scope 2 at ui/generator/size-moved-locals.rs:59:5: 59:6
    }

    bb7: {
        assert(const false, "generator resumed after panicking") -> bb7; // scope 0 at ui/generator/size-moved-locals.rs:52:5: 59:6
    }

    bb8: {
        assert(const false, "generator resumed after completion") -> bb8; // scope 0 at ui/generator/size-moved-locals.rs:52:5: 59:6
    }

    bb9: {
        unreachable;                     // scope 0 at ui/generator/size-moved-locals.rs:52:5: 59:6
    }
}

overlap_move_points::{closure#0}::{constant#0}: usize = {
    let mut _0: usize;                   // return place in scope 0 at ui/generator/size-moved-locals.rs:53:29: 53:37

    bb0: {
        _0 = const _;                    // scope 0 at ui/generator/size-moved-locals.rs:53:29: 53:37
        return;                          // scope 0 at ui/generator/size-moved-locals.rs:53:29: 53:37
    }
}

fn overlap_x_and_y() -> impl Generator<Yield = (), Return = ()> {
    let mut _0: impl std::ops::Generator<Yield = (), Return = ()>; // return place in scope 0 at ui/generator/size-moved-locals.rs:62:25: 62:64

    bb0: {
        _0 = [generator@ui/generator/size-moved-locals.rs:63:5: 63:14 (#0)]; // scope 0 at ui/generator/size-moved-locals.rs:63:5: 70:6
                                         // generator
                                         // + def_id: DefId(0:22 ~ size_moved_locals[e0d4]::overlap_x_and_y::{closure#0})
                                         // + substs: [
                                         //     (),
                                         //     (),
                                         //     (),
                                         //     {Foo, ()},
                                         //     (),
                                         // ]
                                         // + movability: Static
        return;                          // scope 0 at ui/generator/size-moved-locals.rs:71:2: 71:2
    }
}

fn overlap_x_and_y::{closure#0}(_1: Pin<&mut [static generator@ui/generator/size-moved-locals.rs:63:5: 63:14]>, _2: ()) -> GeneratorState<(), ()> {
    let mut _0: std::ops::GeneratorState<(), ()>; // return place in scope 0 at ui/generator/size-moved-locals.rs:63:5: 70:6
    let mut _3: [u8; 1024];              // in scope 0 at ui/generator/size-moved-locals.rs:64:21: 64:34
    let mut _4: ();                      // in scope 0 at ui/generator/size-moved-locals.rs:65:9: 65:14
    let _5: ();                          // in scope 0 at ui/generator/size-moved-locals.rs:66:9: 66:16
    let mut _6: Foo;                     // in scope 0 at ui/generator/size-moved-locals.rs:66:14: 66:15
    let mut _7: [u8; 1024];              // in scope 0 at ui/generator/size-moved-locals.rs:67:21: 67:34
    let mut _8: ();                      // in scope 0 at ui/generator/size-moved-locals.rs:68:9: 68:14
    let _9: ();                          // in scope 0 at ui/generator/size-moved-locals.rs:69:9: 69:16
    let mut _10: Foo;                    // in scope 0 at ui/generator/size-moved-locals.rs:69:14: 69:15
    let mut _11: ();                     // in scope 0 at ui/generator/size-moved-locals.rs:63:15: 63:15
    let mut _12: u32;                    // in scope 0 at ui/generator/size-moved-locals.rs:63:5: 70:6
    let mut _13: &mut [static generator@ui/generator/size-moved-locals.rs:63:5: 63:14]; // in scope 0 at ui/generator/size-moved-locals.rs:63:5: 70:6
    let mut _14: &mut [static generator@ui/generator/size-moved-locals.rs:63:5: 63:14]; // in scope 0 at ui/generator/size-moved-locals.rs:63:5: 70:6
    let mut _15: &mut [static generator@ui/generator/size-moved-locals.rs:63:5: 63:14]; // in scope 0 at ui/generator/size-moved-locals.rs:63:5: 70:6
    let mut _16: &mut [static generator@ui/generator/size-moved-locals.rs:63:5: 63:14]; // in scope 0 at ui/generator/size-moved-locals.rs:63:5: 70:6
    let mut _17: &mut [static generator@ui/generator/size-moved-locals.rs:63:5: 63:14]; // in scope 0 at ui/generator/size-moved-locals.rs:63:5: 70:6
    let mut _18: &mut [static generator@ui/generator/size-moved-locals.rs:63:5: 63:14]; // in scope 0 at ui/generator/size-moved-locals.rs:63:5: 70:6
    let mut _19: &mut [static generator@ui/generator/size-moved-locals.rs:63:5: 63:14]; // in scope 0 at ui/generator/size-moved-locals.rs:63:5: 70:6
    let mut _20: &mut [static generator@ui/generator/size-moved-locals.rs:63:5: 63:14]; // in scope 0 at ui/generator/size-moved-locals.rs:63:5: 70:6
    let mut _21: &mut [static generator@ui/generator/size-moved-locals.rs:63:5: 63:14]; // in scope 0 at ui/generator/size-moved-locals.rs:63:5: 70:6
    let mut _22: &mut [static generator@ui/generator/size-moved-locals.rs:63:5: 63:14]; // in scope 0 at ui/generator/size-moved-locals.rs:63:5: 70:6
    let mut _23: &mut [static generator@ui/generator/size-moved-locals.rs:63:5: 63:14]; // in scope 0 at ui/generator/size-moved-locals.rs:63:5: 70:6
    let mut _24: &mut [static generator@ui/generator/size-moved-locals.rs:63:5: 63:14]; // in scope 0 at ui/generator/size-moved-locals.rs:63:5: 70:6
    let mut _25: &mut [static generator@ui/generator/size-moved-locals.rs:63:5: 63:14]; // in scope 0 at ui/generator/size-moved-locals.rs:63:5: 70:6
    let mut _26: &mut [static generator@ui/generator/size-moved-locals.rs:63:5: 63:14]; // in scope 0 at ui/generator/size-moved-locals.rs:63:5: 70:6
    scope 1 {
        debug x => (((*(_1.0: &mut [static generator@ui/generator/size-moved-locals.rs:63:5: 63:14])) as variant#3).0: Foo); // in scope 1 at ui/generator/size-moved-locals.rs:64:13: 64:14
        scope 2 {
            debug y => (((*(_1.0: &mut [static generator@ui/generator/size-moved-locals.rs:63:5: 63:14])) as variant#4).0: Foo); // in scope 2 at ui/generator/size-moved-locals.rs:67:13: 67:14
        }
    }

    bb0: {
        _13 = deref_copy (_1.0: &mut [static generator@ui/generator/size-moved-locals.rs:63:5: 63:14]); // scope 0 at ui/generator/size-moved-locals.rs:63:5: 70:6
        _12 = discriminant((*_13));      // scope 0 at ui/generator/size-moved-locals.rs:63:5: 70:6
        switchInt(move _12) -> [0: bb1, 1: bb8, 2: bb7, 3: bb5, 4: bb6, otherwise: bb9]; // scope 0 at ui/generator/size-moved-locals.rs:63:5: 70:6
    }

    bb1: {
        _14 = deref_copy (_1.0: &mut [static generator@ui/generator/size-moved-locals.rs:63:5: 63:14]); // scope 0 at ui/generator/size-moved-locals.rs:64:13: 64:14
        (((*_14) as variant#3).1: bool) = const false; // scope 0 at ui/generator/size-moved-locals.rs:64:13: 64:14
        _3 = [const 0_u8; 1024];         // scope 0 at ui/generator/size-moved-locals.rs:64:21: 64:34
        _15 = deref_copy (_1.0: &mut [static generator@ui/generator/size-moved-locals.rs:63:5: 63:14]); // scope 0 at ui/generator/size-moved-locals.rs:64:17: 64:35
        (((*_15) as variant#3).1: bool) = const true; // scope 0 at ui/generator/size-moved-locals.rs:64:17: 64:35
        _16 = deref_copy (_1.0: &mut [static generator@ui/generator/size-moved-locals.rs:63:5: 63:14]); // scope 0 at ui/generator/size-moved-locals.rs:64:17: 64:35
        (((*_16) as variant#3).0: Foo) = Foo(move _3); // scope 0 at ui/generator/size-moved-locals.rs:64:17: 64:35
        _4 = ();                         // scope 1 at ui/generator/size-moved-locals.rs:65:9: 65:14
        _0 = GeneratorState::<(), ()>::Yielded(move _4); // scope 1 at ui/generator/size-moved-locals.rs:65:9: 65:14
        _17 = deref_copy (_1.0: &mut [static generator@ui/generator/size-moved-locals.rs:63:5: 63:14]); // scope 1 at ui/generator/size-moved-locals.rs:65:9: 65:14
        discriminant((*_17)) = 3;        // scope 1 at ui/generator/size-moved-locals.rs:65:9: 65:14
        return;                          // scope 1 at ui/generator/size-moved-locals.rs:65:9: 65:14
    }

    bb2: {
        _7 = [const 0_u8; 1024];         // scope 1 at ui/generator/size-moved-locals.rs:67:21: 67:34
        _20 = deref_copy (_1.0: &mut [static generator@ui/generator/size-moved-locals.rs:63:5: 63:14]); // scope 1 at ui/generator/size-moved-locals.rs:67:17: 67:35
        (((*_20) as variant#4).0: Foo) = Foo(move _7); // scope 1 at ui/generator/size-moved-locals.rs:67:17: 67:35
        _8 = ();                         // scope 2 at ui/generator/size-moved-locals.rs:68:9: 68:14
        _0 = GeneratorState::<(), ()>::Yielded(move _8); // scope 2 at ui/generator/size-moved-locals.rs:68:9: 68:14
        _21 = deref_copy (_1.0: &mut [static generator@ui/generator/size-moved-locals.rs:63:5: 63:14]); // scope 2 at ui/generator/size-moved-locals.rs:68:9: 68:14
        discriminant((*_21)) = 4;        // scope 2 at ui/generator/size-moved-locals.rs:68:9: 68:14
        return;                          // scope 2 at ui/generator/size-moved-locals.rs:68:9: 68:14
    }

    bb3: {
        _11 = const ();                  // scope 0 at ui/generator/size-moved-locals.rs:63:15: 70:6
        _23 = deref_copy (_1.0: &mut [static generator@ui/generator/size-moved-locals.rs:63:5: 63:14]); // scope 0 at ui/generator/size-moved-locals.rs:70:5: 70:6
        (((*_23) as variant#3).1: bool) = const false; // scope 0 at ui/generator/size-moved-locals.rs:70:5: 70:6
        _0 = GeneratorState::<(), ()>::Complete(move _11); // scope 0 at ui/generator/size-moved-locals.rs:70:6: 70:6
        _24 = deref_copy (_1.0: &mut [static generator@ui/generator/size-moved-locals.rs:63:5: 63:14]); // scope 0 at ui/generator/size-moved-locals.rs:70:6: 70:6
        discriminant((*_24)) = 1;        // scope 0 at ui/generator/size-moved-locals.rs:70:6: 70:6
        return;                          // scope 0 at ui/generator/size-moved-locals.rs:70:6: 70:6
    }

    bb4 (cleanup): {
        _25 = deref_copy (_1.0: &mut [static generator@ui/generator/size-moved-locals.rs:63:5: 63:14]); // scope 0 at ui/generator/size-moved-locals.rs:70:5: 70:6
        (((*_25) as variant#3).1: bool) = const false; // scope 0 at ui/generator/size-moved-locals.rs:70:5: 70:6
        _26 = deref_copy (_1.0: &mut [static generator@ui/generator/size-moved-locals.rs:63:5: 63:14]); // scope 0 at ui/generator/size-moved-locals.rs:63:5: 70:6
        discriminant((*_26)) = 2;        // scope 0 at ui/generator/size-moved-locals.rs:63:5: 70:6
        resume;                          // scope 0 at ui/generator/size-moved-locals.rs:63:5: 70:6
    }

    bb5: {
        _18 = deref_copy (_1.0: &mut [static generator@ui/generator/size-moved-locals.rs:63:5: 63:14]); // scope 1 at ui/generator/size-moved-locals.rs:66:14: 66:15
        (((*_18) as variant#3).1: bool) = const false; // scope 1 at ui/generator/size-moved-locals.rs:66:14: 66:15
        _19 = deref_copy (_1.0: &mut [static generator@ui/generator/size-moved-locals.rs:63:5: 63:14]); // scope 1 at ui/generator/size-moved-locals.rs:66:14: 66:15
        _6 = move (((*_19) as variant#3).0: Foo); // scope 1 at ui/generator/size-moved-locals.rs:66:14: 66:15
        _5 = std::mem::drop::<Foo>(move _6) -> [return: bb2, unwind: bb4]; // scope 1 at ui/generator/size-moved-locals.rs:66:9: 66:16
                                         // mir::Constant
                                         // + span: ui/generator/size-moved-locals.rs:66:9: 66:13
                                         // + literal: Const { ty: fn(Foo) {std::mem::drop::<Foo>}, val: Value(<ZST>) }
    }

    bb6: {
        _22 = deref_copy (_1.0: &mut [static generator@ui/generator/size-moved-locals.rs:63:5: 63:14]); // scope 2 at ui/generator/size-moved-locals.rs:69:14: 69:15
        _10 = move (((*_22) as variant#4).0: Foo); // scope 2 at ui/generator/size-moved-locals.rs:69:14: 69:15
        _9 = std::mem::drop::<Foo>(move _10) -> [return: bb3, unwind: bb4]; // scope 2 at ui/generator/size-moved-locals.rs:69:9: 69:16
                                         // mir::Constant
                                         // + span: ui/generator/size-moved-locals.rs:69:9: 69:13
                                         // + literal: Const { ty: fn(Foo) {std::mem::drop::<Foo>}, val: Value(<ZST>) }
    }

    bb7: {
        assert(const false, "generator resumed after panicking") -> bb7; // scope 0 at ui/generator/size-moved-locals.rs:63:5: 70:6
    }

    bb8: {
        assert(const false, "generator resumed after completion") -> bb8; // scope 0 at ui/generator/size-moved-locals.rs:63:5: 70:6
    }

    bb9: {
        unreachable;                     // scope 0 at ui/generator/size-moved-locals.rs:63:5: 70:6
    }
}

overlap_x_and_y::{closure#0}::{constant#0}: usize = {
    let mut _0: usize;                   // return place in scope 0 at ui/generator/size-moved-locals.rs:64:25: 64:33

    bb0: {
        _0 = const _;                    // scope 0 at ui/generator/size-moved-locals.rs:64:25: 64:33
        return;                          // scope 0 at ui/generator/size-moved-locals.rs:64:25: 64:33
    }
}

overlap_x_and_y::{closure#0}::{constant#1}: usize = {
    let mut _0: usize;                   // return place in scope 0 at ui/generator/size-moved-locals.rs:67:25: 67:33

    bb0: {
        _0 = const _;                    // scope 0 at ui/generator/size-moved-locals.rs:67:25: 67:33
        return;                          // scope 0 at ui/generator/size-moved-locals.rs:67:25: 67:33
    }
}

fn main() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/generator/size-moved-locals.rs:73:11: 73:11
    let mut _1: (&usize, &usize);        // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _2: &usize;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let mut _3: &usize;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let _4: usize;                       // in scope 0 at ui/generator/size-moved-locals.rs:74:22: 74:65
    let mut _5: &impl std::ops::Generator<Yield = (), Return = ()>; // in scope 0 at ui/generator/size-moved-locals.rs:74:44: 74:64
    let _6: &impl std::ops::Generator<Yield = (), Return = ()>; // in scope 0 at ui/generator/size-moved-locals.rs:74:44: 74:64
    let _7: impl std::ops::Generator<Yield = (), Return = ()>; // in scope 0 at ui/generator/size-moved-locals.rs:74:45: 74:64
    let _8: &usize;                      // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
    let _9: &usize;                      // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
    let mut _10: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    let mut _11: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
    let mut _12: usize;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
    let mut _13: usize;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
    let _15: !;                          // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
    let mut _16: core::panicking::AssertKind; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
    let mut _17: &usize;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let _18: &usize;                     // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let mut _19: &usize;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let _20: &usize;                     // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let mut _21: std::option::Option<std::fmt::Arguments<'_>>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
    let mut _22: (&usize, &usize);       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _23: &usize;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let mut _24: &usize;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let _25: usize;                      // in scope 0 at ui/generator/size-moved-locals.rs:75:22: 75:75
    let mut _26: &impl std::ops::Generator<Yield = (), Return = ()>; // in scope 0 at ui/generator/size-moved-locals.rs:75:44: 75:74
    let _27: &impl std::ops::Generator<Yield = (), Return = ()>; // in scope 0 at ui/generator/size-moved-locals.rs:75:44: 75:74
    let _28: impl std::ops::Generator<Yield = (), Return = ()>; // in scope 0 at ui/generator/size-moved-locals.rs:75:45: 75:74
    let _29: &usize;                     // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
    let _30: &usize;                     // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
    let mut _31: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    let mut _32: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
    let mut _33: usize;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
    let mut _34: usize;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
    let _36: !;                          // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
    let mut _37: core::panicking::AssertKind; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
    let mut _38: &usize;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let _39: &usize;                     // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let mut _40: &usize;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let _41: &usize;                     // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let mut _42: std::option::Option<std::fmt::Arguments<'_>>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
    let mut _43: (&usize, &usize);       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _44: &usize;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let mut _45: &usize;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let _46: usize;                      // in scope 0 at ui/generator/size-moved-locals.rs:76:22: 76:67
    let mut _47: &impl std::ops::Generator<Yield = (), Return = ()>; // in scope 0 at ui/generator/size-moved-locals.rs:76:44: 76:66
    let _48: &impl std::ops::Generator<Yield = (), Return = ()>; // in scope 0 at ui/generator/size-moved-locals.rs:76:44: 76:66
    let _49: impl std::ops::Generator<Yield = (), Return = ()>; // in scope 0 at ui/generator/size-moved-locals.rs:76:45: 76:66
    let _50: &usize;                     // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
    let _51: &usize;                     // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
    let mut _52: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    let mut _53: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
    let mut _54: usize;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
    let mut _55: usize;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
    let _57: !;                          // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
    let mut _58: core::panicking::AssertKind; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
    let mut _59: &usize;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let _60: &usize;                     // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let mut _61: &usize;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let _62: &usize;                     // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let mut _63: std::option::Option<std::fmt::Arguments<'_>>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
    let mut _64: (&usize, &usize);       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _65: &usize;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let mut _66: &usize;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let _67: usize;                      // in scope 0 at ui/generator/size-moved-locals.rs:77:22: 77:63
    let mut _68: &impl std::ops::Generator<Yield = (), Return = ()>; // in scope 0 at ui/generator/size-moved-locals.rs:77:44: 77:62
    let _69: &impl std::ops::Generator<Yield = (), Return = ()>; // in scope 0 at ui/generator/size-moved-locals.rs:77:44: 77:62
    let _70: impl std::ops::Generator<Yield = (), Return = ()>; // in scope 0 at ui/generator/size-moved-locals.rs:77:45: 77:62
    let _71: &usize;                     // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
    let _72: &usize;                     // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
    let mut _73: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    let mut _74: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
    let mut _75: usize;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
    let mut _76: usize;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
    let _78: !;                          // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
    let mut _79: core::panicking::AssertKind; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
    let mut _80: &usize;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let _81: &usize;                     // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let mut _82: &usize;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let _83: &usize;                     // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let mut _84: std::option::Option<std::fmt::Arguments<'_>>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
    let mut _85: &usize;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let mut _86: &usize;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let mut _87: &usize;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let mut _88: &usize;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    scope 1 {
        debug left_val => _8;            // in scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        debug right_val => _9;           // in scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        let _14: core::panicking::AssertKind; // in scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
        scope 2 {
            debug kind => _14;           // in scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
        }
    }
    scope 3 {
        debug left_val => _29;           // in scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        debug right_val => _30;          // in scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        let _35: core::panicking::AssertKind; // in scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
        scope 4 {
            debug kind => _35;           // in scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
        }
    }
    scope 5 {
        debug left_val => _50;           // in scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        debug right_val => _51;          // in scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        let _56: core::panicking::AssertKind; // in scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
        scope 6 {
            debug kind => _56;           // in scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
        }
    }
    scope 7 {
        debug left_val => _71;           // in scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        debug right_val => _72;          // in scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        let _77: core::panicking::AssertKind; // in scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
        scope 8 {
            debug kind => _77;           // in scope 8 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
        }
    }

    bb0: {
        _88 = const _;                   // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
                                         // + literal: Const { ty: &usize, val: Unevaluated(main, [], Some(promoted[3])) }
        _2 = _88;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _7 = move_before_yield() -> bb1; // scope 0 at ui/generator/size-moved-locals.rs:74:45: 74:64
                                         // mir::Constant
                                         // + span: ui/generator/size-moved-locals.rs:74:45: 74:62
                                         // + literal: Const { ty: fn() -> impl Generator<Yield = (), Return = ()> {move_before_yield}, val: Value(<ZST>) }
    }

    bb1: {
        _6 = &_7;                        // scope 0 at ui/generator/size-moved-locals.rs:74:44: 74:64
        _5 = _6;                         // scope 0 at ui/generator/size-moved-locals.rs:74:44: 74:64
        _4 = std::mem::size_of_val::<impl Generator<Yield = (), Return = ()>>(move _5) -> [return: bb2, unwind: bb24]; // scope 0 at ui/generator/size-moved-locals.rs:74:22: 74:65
                                         // mir::Constant
                                         // + span: ui/generator/size-moved-locals.rs:74:22: 74:43
                                         // + literal: Const { ty: for<'a> fn(&'a impl Generator<Yield = (), Return = ()>) -> usize {std::mem::size_of_val::<impl Generator<Yield = (), Return = ()>>}, val: Value(<ZST>) }
    }

    bb2: {
        _3 = &_4;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _1 = (move _2, move _3);         // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _8 = (_1.0: &usize);             // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _9 = (_1.1: &usize);             // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _12 = const 1025_usize;          // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
        _13 = (*_9);                     // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
        _11 = Eq(move _12, move _13);    // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
        _10 = Not(move _11);             // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
        switchInt(move _10) -> [0: bb4, otherwise: bb3]; // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    }

    bb3: {
        _14 = const core::panicking::AssertKind::Eq; // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _16 = const core::panicking::AssertKind::Eq; // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _18 = _8;                        // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _17 = _18;                       // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _20 = _9;                        // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _19 = _20;                       // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _21 = Option::<Arguments<'_>>::None; // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
        _15 = core::panicking::assert_failed::<usize, usize>(move _16, move _17, move _19, move _21) -> bb24; // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:53
                                         // + literal: Const { ty: for<'a, 'b, 'c> fn(core::panicking::AssertKind, &'a usize, &'b usize, Option<Arguments<'c>>) -> ! {core::panicking::assert_failed::<usize, usize>}, val: Value(<ZST>) }
    }

    bb4: {
        drop(_7) -> bb5;                 // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:48:9: 48:10
    }

    bb5: {
        _87 = const _;                   // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
                                         // + literal: Const { ty: &usize, val: Unevaluated(main, [], Some(promoted[2])) }
        _23 = _87;                       // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _28 = move_before_yield_with_noop() -> bb6; // scope 0 at ui/generator/size-moved-locals.rs:75:45: 75:74
                                         // mir::Constant
                                         // + span: ui/generator/size-moved-locals.rs:75:45: 75:72
                                         // + literal: Const { ty: fn() -> impl Generator<Yield = (), Return = ()> {move_before_yield_with_noop}, val: Value(<ZST>) }
    }

    bb6: {
        _27 = &_28;                      // scope 0 at ui/generator/size-moved-locals.rs:75:44: 75:74
        _26 = _27;                       // scope 0 at ui/generator/size-moved-locals.rs:75:44: 75:74
        _25 = std::mem::size_of_val::<impl Generator<Yield = (), Return = ()>>(move _26) -> [return: bb7, unwind: bb23]; // scope 0 at ui/generator/size-moved-locals.rs:75:22: 75:75
                                         // mir::Constant
                                         // + span: ui/generator/size-moved-locals.rs:75:22: 75:43
                                         // + literal: Const { ty: for<'a> fn(&'a impl Generator<Yield = (), Return = ()>) -> usize {std::mem::size_of_val::<impl Generator<Yield = (), Return = ()>>}, val: Value(<ZST>) }
    }

    bb7: {
        _24 = &_25;                      // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _22 = (move _23, move _24);      // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _29 = (_22.0: &usize);           // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _30 = (_22.1: &usize);           // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _33 = const 1026_usize;          // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
        _34 = (*_30);                    // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
        _32 = Eq(move _33, move _34);    // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
        _31 = Not(move _32);             // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
        switchInt(move _31) -> [0: bb9, otherwise: bb8]; // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    }

    bb8: {
        _35 = const core::panicking::AssertKind::Eq; // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _37 = const core::panicking::AssertKind::Eq; // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _39 = _29;                       // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _38 = _39;                       // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _41 = _30;                       // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _40 = _41;                       // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _42 = Option::<Arguments<'_>>::None; // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
        _36 = core::panicking::assert_failed::<usize, usize>(move _37, move _38, move _40, move _42) -> bb23; // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:53
                                         // + literal: Const { ty: for<'a, 'b, 'c> fn(core::panicking::AssertKind, &'a usize, &'b usize, Option<Arguments<'c>>) -> ! {core::panicking::assert_failed::<usize, usize>}, val: Value(<ZST>) }
    }

    bb9: {
        drop(_28) -> bb10;               // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:48:9: 48:10
    }

    bb10: {
        _86 = const _;                   // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
                                         // + literal: Const { ty: &usize, val: Unevaluated(main, [], Some(promoted[1])) }
        _44 = _86;                       // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _49 = overlap_move_points() -> bb11; // scope 0 at ui/generator/size-moved-locals.rs:76:45: 76:66
                                         // mir::Constant
                                         // + span: ui/generator/size-moved-locals.rs:76:45: 76:64
                                         // + literal: Const { ty: fn() -> impl Generator<Yield = (), Return = ()> {overlap_move_points}, val: Value(<ZST>) }
    }

    bb11: {
        _48 = &_49;                      // scope 0 at ui/generator/size-moved-locals.rs:76:44: 76:66
        _47 = _48;                       // scope 0 at ui/generator/size-moved-locals.rs:76:44: 76:66
        _46 = std::mem::size_of_val::<impl Generator<Yield = (), Return = ()>>(move _47) -> [return: bb12, unwind: bb22]; // scope 0 at ui/generator/size-moved-locals.rs:76:22: 76:67
                                         // mir::Constant
                                         // + span: ui/generator/size-moved-locals.rs:76:22: 76:43
                                         // + literal: Const { ty: for<'a> fn(&'a impl Generator<Yield = (), Return = ()>) -> usize {std::mem::size_of_val::<impl Generator<Yield = (), Return = ()>>}, val: Value(<ZST>) }
    }

    bb12: {
        _45 = &_46;                      // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _43 = (move _44, move _45);      // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _50 = (_43.0: &usize);           // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _51 = (_43.1: &usize);           // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _54 = const 2051_usize;          // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
        _55 = (*_51);                    // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
        _53 = Eq(move _54, move _55);    // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
        _52 = Not(move _53);             // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
        switchInt(move _52) -> [0: bb14, otherwise: bb13]; // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    }

    bb13: {
        _56 = const core::panicking::AssertKind::Eq; // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _58 = const core::panicking::AssertKind::Eq; // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _60 = _50;                       // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _59 = _60;                       // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _62 = _51;                       // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _61 = _62;                       // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _63 = Option::<Arguments<'_>>::None; // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
        _57 = core::panicking::assert_failed::<usize, usize>(move _58, move _59, move _61, move _63) -> bb22; // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:53
                                         // + literal: Const { ty: for<'a, 'b, 'c> fn(core::panicking::AssertKind, &'a usize, &'b usize, Option<Arguments<'c>>) -> ! {core::panicking::assert_failed::<usize, usize>}, val: Value(<ZST>) }
    }

    bb14: {
        drop(_49) -> bb15;               // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:48:9: 48:10
    }

    bb15: {
        _85 = const _;                   // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
                                         // + literal: Const { ty: &usize, val: Unevaluated(main, [], Some(promoted[0])) }
        _65 = _85;                       // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _70 = overlap_x_and_y() -> bb16; // scope 0 at ui/generator/size-moved-locals.rs:77:45: 77:62
                                         // mir::Constant
                                         // + span: ui/generator/size-moved-locals.rs:77:45: 77:60
                                         // + literal: Const { ty: fn() -> impl Generator<Yield = (), Return = ()> {overlap_x_and_y}, val: Value(<ZST>) }
    }

    bb16: {
        _69 = &_70;                      // scope 0 at ui/generator/size-moved-locals.rs:77:44: 77:62
        _68 = _69;                       // scope 0 at ui/generator/size-moved-locals.rs:77:44: 77:62
        _67 = std::mem::size_of_val::<impl Generator<Yield = (), Return = ()>>(move _68) -> [return: bb17, unwind: bb21]; // scope 0 at ui/generator/size-moved-locals.rs:77:22: 77:63
                                         // mir::Constant
                                         // + span: ui/generator/size-moved-locals.rs:77:22: 77:43
                                         // + literal: Const { ty: for<'a> fn(&'a impl Generator<Yield = (), Return = ()>) -> usize {std::mem::size_of_val::<impl Generator<Yield = (), Return = ()>>}, val: Value(<ZST>) }
    }

    bb17: {
        _66 = &_67;                      // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _64 = (move _65, move _66);      // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _71 = (_64.0: &usize);           // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _72 = (_64.1: &usize);           // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _75 = const 1026_usize;          // scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
        _76 = (*_72);                    // scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
        _74 = Eq(move _75, move _76);    // scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
        _73 = Not(move _74);             // scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
        switchInt(move _73) -> [0: bb19, otherwise: bb18]; // scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    }

    bb18: {
        _77 = const core::panicking::AssertKind::Eq; // scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _79 = const core::panicking::AssertKind::Eq; // scope 8 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _81 = _71;                       // scope 8 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _80 = _81;                       // scope 8 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _83 = _72;                       // scope 8 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _82 = _83;                       // scope 8 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _84 = Option::<Arguments<'_>>::None; // scope 8 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
        _78 = core::panicking::assert_failed::<usize, usize>(move _79, move _80, move _82, move _84) -> bb21; // scope 8 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:53
                                         // + literal: Const { ty: for<'a, 'b, 'c> fn(core::panicking::AssertKind, &'a usize, &'b usize, Option<Arguments<'c>>) -> ! {core::panicking::assert_failed::<usize, usize>}, val: Value(<ZST>) }
    }

    bb19: {
        drop(_70) -> bb20;               // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:48:9: 48:10
    }

    bb20: {
        return;                          // scope 0 at ui/generator/size-moved-locals.rs:78:2: 78:2
    }

    bb21 (cleanup): {
        drop(_70) -> bb25;               // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:48:9: 48:10
    }

    bb22 (cleanup): {
        drop(_49) -> bb25;               // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:48:9: 48:10
    }

    bb23 (cleanup): {
        drop(_28) -> bb25;               // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:48:9: 48:10
    }

    bb24 (cleanup): {
        drop(_7) -> bb25;                // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:48:9: 48:10
    }

    bb25 (cleanup): {
        resume;                          // scope 0 at ui/generator/size-moved-locals.rs:73:1: 78:2
    }
}

promoted[0] in main: &usize = {
    let mut _0: &usize;                  // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let mut _1: usize;                   // in scope 0 at ui/generator/size-moved-locals.rs:77:16: 77:20

    bb0: {
        _1 = const 1026_usize;           // scope 0 at ui/generator/size-moved-locals.rs:77:16: 77:20
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    }
}

promoted[1] in main: &usize = {
    let mut _0: &usize;                  // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let mut _1: usize;                   // in scope 0 at ui/generator/size-moved-locals.rs:76:16: 76:20

    bb0: {
        _1 = const 2051_usize;           // scope 0 at ui/generator/size-moved-locals.rs:76:16: 76:20
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    }
}

promoted[2] in main: &usize = {
    let mut _0: &usize;                  // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let mut _1: usize;                   // in scope 0 at ui/generator/size-moved-locals.rs:75:16: 75:20

    bb0: {
        _1 = const 1026_usize;           // scope 0 at ui/generator/size-moved-locals.rs:75:16: 75:20
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    }
}

promoted[3] in main: &usize = {
    let mut _0: &usize;                  // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let mut _1: usize;                   // in scope 0 at ui/generator/size-moved-locals.rs:74:16: 74:20

    bb0: {
        _1 = const 1025_usize;           // scope 0 at ui/generator/size-moved-locals.rs:74:16: 74:20
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    }
}

fn Foo(_1: [u8; 1024]) -> Foo {
    let mut _0: Foo;                     // return place in scope 0 at ui/generator/size-moved-locals.rs:22:1: 22:11

    bb0: {
        _0 = Foo(move _1);               // scope 0 at ui/generator/size-moved-locals.rs:22:1: 22:11
        return;                          // scope 0 at ui/generator/size-moved-locals.rs:22:1: 22:11
    }
}

// MIR FOR CTFE
fn Foo(_1: [u8; 1024]) -> Foo {
    let mut _0: Foo;                     // return place in scope 0 at ui/generator/size-moved-locals.rs:22:1: 22:11

    bb0: {
        _0 = Foo(move _1);               // scope 0 at ui/generator/size-moved-locals.rs:22:1: 22:11
        return;                          // scope 0 at ui/generator/size-moved-locals.rs:22:1: 22:11
    }
}
