// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
fn main() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/wf/issue-48638.rs:21:11: 21:11

    bb0: {
        return;                          // scope 0 at ui/wf/issue-48638.rs:21:13: 21:13
    }
}

fn As(_1: R) -> As<R> {
    let mut _0: As<R>;                   // return place in scope 0 at ui/wf/issue-48638.rs:11:1: 11:20

    bb0: {
        _0 = As::<R>(move _1);           // scope 0 at ui/wf/issue-48638.rs:11:1: 11:20
        return;                          // scope 0 at ui/wf/issue-48638.rs:11:1: 11:20
    }
}

// MIR FOR CTFE
fn As(_1: R) -> As<R> {
    let mut _0: As<R>;                   // return place in scope 0 at ui/wf/issue-48638.rs:11:1: 11:20

    bb0: {
        _0 = As::<R>(move _1);           // scope 0 at ui/wf/issue-48638.rs:11:1: 11:20
        return;                          // scope 0 at ui/wf/issue-48638.rs:11:1: 11:20
    }
}

fn S(_1: As<DT>) -> S {
    let mut _0: S;                       // return place in scope 0 at ui/wf/issue-48638.rs:19:1: 19:9

    bb0: {
        _0 = S(move _1);                 // scope 0 at ui/wf/issue-48638.rs:19:1: 19:9
        return;                          // scope 0 at ui/wf/issue-48638.rs:19:1: 19:9
    }
}

// MIR FOR CTFE
fn S(_1: As<DT>) -> S {
    let mut _0: S;                       // return place in scope 0 at ui/wf/issue-48638.rs:19:1: 19:9

    bb0: {
        _0 = S(move _1);                 // scope 0 at ui/wf/issue-48638.rs:19:1: 19:9
        return;                          // scope 0 at ui/wf/issue-48638.rs:19:1: 19:9
    }
}
