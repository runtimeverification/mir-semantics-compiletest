// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
fn foo(_1: N) -> () {
    debug _x => _1;                      // in scope 0 at ui/numeric/numeric-cast_fixed.rs:6:11: 6:13
    let mut _0: ();                      // return place in scope 0 at ui/numeric/numeric-cast_fixed.rs:6:18: 6:18

    bb0: {
        drop(_1) -> bb1;                 // scope 0 at ui/numeric/numeric-cast_fixed.rs:6:19: 6:20
    }

    bb1: {
        return;                          // scope 0 at ui/numeric/numeric-cast_fixed.rs:6:20: 6:20
    }
}

fn main() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/numeric/numeric-cast_fixed.rs:8:11: 8:11
    let _1: usize;                       // in scope 0 at ui/numeric/numeric-cast_fixed.rs:9:9: 9:16
    let _13: ();                         // in scope 0 at ui/numeric/numeric-cast_fixed.rs:22:5: 22:26
    let mut _14: usize;                  // in scope 0 at ui/numeric/numeric-cast_fixed.rs:22:18: 22:25
    let _15: ();                         // in scope 0 at ui/numeric/numeric-cast_fixed.rs:23:5: 23:44
    let mut _16: usize;                  // in scope 0 at ui/numeric/numeric-cast_fixed.rs:23:18: 23:43
    let mut _17: std::result::Result<usize, std::num::TryFromIntError>; // in scope 0 at ui/numeric/numeric-cast_fixed.rs:23:18: 23:34
    let mut _18: u64;                    // in scope 0 at ui/numeric/numeric-cast_fixed.rs:23:18: 23:23
    let _19: ();                         // in scope 0 at ui/numeric/numeric-cast_fixed.rs:25:5: 25:44
    let mut _20: usize;                  // in scope 0 at ui/numeric/numeric-cast_fixed.rs:25:18: 25:43
    let mut _21: std::result::Result<usize, std::num::TryFromIntError>; // in scope 0 at ui/numeric/numeric-cast_fixed.rs:25:18: 25:34
    let mut _22: u32;                    // in scope 0 at ui/numeric/numeric-cast_fixed.rs:25:18: 25:23
    let _23: ();                         // in scope 0 at ui/numeric/numeric-cast_fixed.rs:27:5: 27:31
    let mut _24: usize;                  // in scope 0 at ui/numeric/numeric-cast_fixed.rs:27:18: 27:30
    let mut _25: u16;                    // in scope 0 at ui/numeric/numeric-cast_fixed.rs:27:18: 27:23
    let _26: ();                         // in scope 0 at ui/numeric/numeric-cast_fixed.rs:29:5: 29:30
    let mut _27: usize;                  // in scope 0 at ui/numeric/numeric-cast_fixed.rs:29:18: 29:29
    let mut _28: u8;                     // in scope 0 at ui/numeric/numeric-cast_fixed.rs:29:18: 29:22
    let _29: ();                         // in scope 0 at ui/numeric/numeric-cast_fixed.rs:31:5: 31:46
    let mut _30: usize;                  // in scope 0 at ui/numeric/numeric-cast_fixed.rs:31:18: 31:45
    let mut _31: std::result::Result<usize, std::num::TryFromIntError>; // in scope 0 at ui/numeric/numeric-cast_fixed.rs:31:18: 31:36
    let mut _32: isize;                  // in scope 0 at ui/numeric/numeric-cast_fixed.rs:31:18: 31:25
    let _33: ();                         // in scope 0 at ui/numeric/numeric-cast_fixed.rs:33:5: 33:44
    let mut _34: usize;                  // in scope 0 at ui/numeric/numeric-cast_fixed.rs:33:18: 33:43
    let mut _35: std::result::Result<usize, std::num::TryFromIntError>; // in scope 0 at ui/numeric/numeric-cast_fixed.rs:33:18: 33:34
    let mut _36: i64;                    // in scope 0 at ui/numeric/numeric-cast_fixed.rs:33:18: 33:23
    let _37: ();                         // in scope 0 at ui/numeric/numeric-cast_fixed.rs:35:5: 35:44
    let mut _38: usize;                  // in scope 0 at ui/numeric/numeric-cast_fixed.rs:35:18: 35:43
    let mut _39: std::result::Result<usize, std::num::TryFromIntError>; // in scope 0 at ui/numeric/numeric-cast_fixed.rs:35:18: 35:34
    let mut _40: i32;                    // in scope 0 at ui/numeric/numeric-cast_fixed.rs:35:18: 35:23
    let _41: ();                         // in scope 0 at ui/numeric/numeric-cast_fixed.rs:37:5: 37:44
    let mut _42: usize;                  // in scope 0 at ui/numeric/numeric-cast_fixed.rs:37:18: 37:43
    let mut _43: std::result::Result<usize, std::num::TryFromIntError>; // in scope 0 at ui/numeric/numeric-cast_fixed.rs:37:18: 37:34
    let mut _44: i16;                    // in scope 0 at ui/numeric/numeric-cast_fixed.rs:37:18: 37:23
    let _45: ();                         // in scope 0 at ui/numeric/numeric-cast_fixed.rs:39:5: 39:43
    let mut _46: usize;                  // in scope 0 at ui/numeric/numeric-cast_fixed.rs:39:18: 39:42
    let mut _47: std::result::Result<usize, std::num::TryFromIntError>; // in scope 0 at ui/numeric/numeric-cast_fixed.rs:39:18: 39:33
    let mut _48: i8;                     // in scope 0 at ui/numeric/numeric-cast_fixed.rs:39:18: 39:22
    let _49: ();                         // in scope 0 at ui/numeric/numeric-cast_fixed.rs:44:5: 44:46
    let mut _50: isize;                  // in scope 0 at ui/numeric/numeric-cast_fixed.rs:44:18: 44:45
    let mut _51: std::result::Result<isize, std::num::TryFromIntError>; // in scope 0 at ui/numeric/numeric-cast_fixed.rs:44:18: 44:36
    let mut _52: usize;                  // in scope 0 at ui/numeric/numeric-cast_fixed.rs:44:18: 44:25
    let _53: ();                         // in scope 0 at ui/numeric/numeric-cast_fixed.rs:46:5: 46:44
    let mut _54: isize;                  // in scope 0 at ui/numeric/numeric-cast_fixed.rs:46:18: 46:43
    let mut _55: std::result::Result<isize, std::num::TryFromIntError>; // in scope 0 at ui/numeric/numeric-cast_fixed.rs:46:18: 46:34
    let mut _56: u64;                    // in scope 0 at ui/numeric/numeric-cast_fixed.rs:46:18: 46:23
    let _57: ();                         // in scope 0 at ui/numeric/numeric-cast_fixed.rs:48:5: 48:44
    let mut _58: isize;                  // in scope 0 at ui/numeric/numeric-cast_fixed.rs:48:18: 48:43
    let mut _59: std::result::Result<isize, std::num::TryFromIntError>; // in scope 0 at ui/numeric/numeric-cast_fixed.rs:48:18: 48:34
    let mut _60: u32;                    // in scope 0 at ui/numeric/numeric-cast_fixed.rs:48:18: 48:23
    let _61: ();                         // in scope 0 at ui/numeric/numeric-cast_fixed.rs:50:5: 50:44
    let mut _62: isize;                  // in scope 0 at ui/numeric/numeric-cast_fixed.rs:50:18: 50:43
    let mut _63: std::result::Result<isize, std::num::TryFromIntError>; // in scope 0 at ui/numeric/numeric-cast_fixed.rs:50:18: 50:34
    let mut _64: u16;                    // in scope 0 at ui/numeric/numeric-cast_fixed.rs:50:18: 50:23
    let _65: ();                         // in scope 0 at ui/numeric/numeric-cast_fixed.rs:52:5: 52:30
    let mut _66: isize;                  // in scope 0 at ui/numeric/numeric-cast_fixed.rs:52:18: 52:29
    let mut _67: u8;                     // in scope 0 at ui/numeric/numeric-cast_fixed.rs:52:18: 52:22
    let _68: ();                         // in scope 0 at ui/numeric/numeric-cast_fixed.rs:54:5: 54:26
    let mut _69: isize;                  // in scope 0 at ui/numeric/numeric-cast_fixed.rs:54:18: 54:25
    let _70: ();                         // in scope 0 at ui/numeric/numeric-cast_fixed.rs:55:5: 55:44
    let mut _71: isize;                  // in scope 0 at ui/numeric/numeric-cast_fixed.rs:55:18: 55:43
    let mut _72: std::result::Result<isize, std::num::TryFromIntError>; // in scope 0 at ui/numeric/numeric-cast_fixed.rs:55:18: 55:34
    let mut _73: i64;                    // in scope 0 at ui/numeric/numeric-cast_fixed.rs:55:18: 55:23
    let _74: ();                         // in scope 0 at ui/numeric/numeric-cast_fixed.rs:57:5: 57:44
    let mut _75: isize;                  // in scope 0 at ui/numeric/numeric-cast_fixed.rs:57:18: 57:43
    let mut _76: std::result::Result<isize, std::num::TryFromIntError>; // in scope 0 at ui/numeric/numeric-cast_fixed.rs:57:18: 57:34
    let mut _77: i32;                    // in scope 0 at ui/numeric/numeric-cast_fixed.rs:57:18: 57:23
    let _78: ();                         // in scope 0 at ui/numeric/numeric-cast_fixed.rs:59:5: 59:31
    let mut _79: isize;                  // in scope 0 at ui/numeric/numeric-cast_fixed.rs:59:18: 59:30
    let mut _80: i16;                    // in scope 0 at ui/numeric/numeric-cast_fixed.rs:59:18: 59:23
    let _81: ();                         // in scope 0 at ui/numeric/numeric-cast_fixed.rs:61:5: 61:30
    let mut _82: isize;                  // in scope 0 at ui/numeric/numeric-cast_fixed.rs:61:18: 61:29
    let mut _83: i8;                     // in scope 0 at ui/numeric/numeric-cast_fixed.rs:61:18: 61:22
    let _84: ();                         // in scope 0 at ui/numeric/numeric-cast_fixed.rs:66:5: 66:44
    let mut _85: u64;                    // in scope 0 at ui/numeric/numeric-cast_fixed.rs:66:16: 66:43
    let mut _86: std::result::Result<u64, std::num::TryFromIntError>; // in scope 0 at ui/numeric/numeric-cast_fixed.rs:66:16: 66:34
    let mut _87: usize;                  // in scope 0 at ui/numeric/numeric-cast_fixed.rs:66:16: 66:23
    let _88: ();                         // in scope 0 at ui/numeric/numeric-cast_fixed.rs:68:5: 68:22
    let mut _89: u64;                    // in scope 0 at ui/numeric/numeric-cast_fixed.rs:68:16: 68:21
    let _90: ();                         // in scope 0 at ui/numeric/numeric-cast_fixed.rs:69:5: 69:29
    let mut _91: u64;                    // in scope 0 at ui/numeric/numeric-cast_fixed.rs:69:16: 69:28
    let mut _92: u32;                    // in scope 0 at ui/numeric/numeric-cast_fixed.rs:69:16: 69:21
    let _93: ();                         // in scope 0 at ui/numeric/numeric-cast_fixed.rs:71:5: 71:29
    let mut _94: u64;                    // in scope 0 at ui/numeric/numeric-cast_fixed.rs:71:16: 71:28
    let mut _95: u16;                    // in scope 0 at ui/numeric/numeric-cast_fixed.rs:71:16: 71:21
    let _96: ();                         // in scope 0 at ui/numeric/numeric-cast_fixed.rs:73:5: 73:28
    let mut _97: u64;                    // in scope 0 at ui/numeric/numeric-cast_fixed.rs:73:16: 73:27
    let mut _98: u8;                     // in scope 0 at ui/numeric/numeric-cast_fixed.rs:73:16: 73:20
    let _99: ();                         // in scope 0 at ui/numeric/numeric-cast_fixed.rs:75:5: 75:44
    let mut _100: u64;                   // in scope 0 at ui/numeric/numeric-cast_fixed.rs:75:16: 75:43
    let mut _101: std::result::Result<u64, std::num::TryFromIntError>; // in scope 0 at ui/numeric/numeric-cast_fixed.rs:75:16: 75:34
    let mut _102: isize;                 // in scope 0 at ui/numeric/numeric-cast_fixed.rs:75:16: 75:23
    let _103: ();                        // in scope 0 at ui/numeric/numeric-cast_fixed.rs:77:5: 77:42
    let mut _104: u64;                   // in scope 0 at ui/numeric/numeric-cast_fixed.rs:77:16: 77:41
    let mut _105: std::result::Result<u64, std::num::TryFromIntError>; // in scope 0 at ui/numeric/numeric-cast_fixed.rs:77:16: 77:32
    let mut _106: i64;                   // in scope 0 at ui/numeric/numeric-cast_fixed.rs:77:16: 77:21
    let _107: ();                        // in scope 0 at ui/numeric/numeric-cast_fixed.rs:79:5: 79:42
    let mut _108: u64;                   // in scope 0 at ui/numeric/numeric-cast_fixed.rs:79:16: 79:41
    let mut _109: std::result::Result<u64, std::num::TryFromIntError>; // in scope 0 at ui/numeric/numeric-cast_fixed.rs:79:16: 79:32
    let mut _110: i32;                   // in scope 0 at ui/numeric/numeric-cast_fixed.rs:79:16: 79:21
    let _111: ();                        // in scope 0 at ui/numeric/numeric-cast_fixed.rs:81:5: 81:42
    let mut _112: u64;                   // in scope 0 at ui/numeric/numeric-cast_fixed.rs:81:16: 81:41
    let mut _113: std::result::Result<u64, std::num::TryFromIntError>; // in scope 0 at ui/numeric/numeric-cast_fixed.rs:81:16: 81:32
    let mut _114: i16;                   // in scope 0 at ui/numeric/numeric-cast_fixed.rs:81:16: 81:21
    let _115: ();                        // in scope 0 at ui/numeric/numeric-cast_fixed.rs:83:5: 83:41
    let mut _116: u64;                   // in scope 0 at ui/numeric/numeric-cast_fixed.rs:83:16: 83:40
    let mut _117: std::result::Result<u64, std::num::TryFromIntError>; // in scope 0 at ui/numeric/numeric-cast_fixed.rs:83:16: 83:31
    let mut _118: i8;                    // in scope 0 at ui/numeric/numeric-cast_fixed.rs:83:16: 83:20
    let _119: ();                        // in scope 0 at ui/numeric/numeric-cast_fixed.rs:88:5: 88:44
    let mut _120: i64;                   // in scope 0 at ui/numeric/numeric-cast_fixed.rs:88:16: 88:43
    let mut _121: std::result::Result<i64, std::num::TryFromIntError>; // in scope 0 at ui/numeric/numeric-cast_fixed.rs:88:16: 88:34
    let mut _122: usize;                 // in scope 0 at ui/numeric/numeric-cast_fixed.rs:88:16: 88:23
    let _123: ();                        // in scope 0 at ui/numeric/numeric-cast_fixed.rs:90:5: 90:42
    let mut _124: i64;                   // in scope 0 at ui/numeric/numeric-cast_fixed.rs:90:16: 90:41
    let mut _125: std::result::Result<i64, std::num::TryFromIntError>; // in scope 0 at ui/numeric/numeric-cast_fixed.rs:90:16: 90:32
    let mut _126: u64;                   // in scope 0 at ui/numeric/numeric-cast_fixed.rs:90:16: 90:21
    let _127: ();                        // in scope 0 at ui/numeric/numeric-cast_fixed.rs:92:5: 92:29
    let mut _128: i64;                   // in scope 0 at ui/numeric/numeric-cast_fixed.rs:92:16: 92:28
    let mut _129: u32;                   // in scope 0 at ui/numeric/numeric-cast_fixed.rs:92:16: 92:21
    let _130: ();                        // in scope 0 at ui/numeric/numeric-cast_fixed.rs:94:5: 94:29
    let mut _131: i64;                   // in scope 0 at ui/numeric/numeric-cast_fixed.rs:94:16: 94:28
    let mut _132: u16;                   // in scope 0 at ui/numeric/numeric-cast_fixed.rs:94:16: 94:21
    let _133: ();                        // in scope 0 at ui/numeric/numeric-cast_fixed.rs:96:5: 96:28
    let mut _134: i64;                   // in scope 0 at ui/numeric/numeric-cast_fixed.rs:96:16: 96:27
    let mut _135: u8;                    // in scope 0 at ui/numeric/numeric-cast_fixed.rs:96:16: 96:20
    let _136: ();                        // in scope 0 at ui/numeric/numeric-cast_fixed.rs:98:5: 98:44
    let mut _137: i64;                   // in scope 0 at ui/numeric/numeric-cast_fixed.rs:98:16: 98:43
    let mut _138: std::result::Result<i64, std::num::TryFromIntError>; // in scope 0 at ui/numeric/numeric-cast_fixed.rs:98:16: 98:34
    let mut _139: isize;                 // in scope 0 at ui/numeric/numeric-cast_fixed.rs:98:16: 98:23
    let _140: ();                        // in scope 0 at ui/numeric/numeric-cast_fixed.rs:100:5: 100:22
    let mut _141: i64;                   // in scope 0 at ui/numeric/numeric-cast_fixed.rs:100:16: 100:21
    let _142: ();                        // in scope 0 at ui/numeric/numeric-cast_fixed.rs:101:5: 101:29
    let mut _143: i64;                   // in scope 0 at ui/numeric/numeric-cast_fixed.rs:101:16: 101:28
    let mut _144: i32;                   // in scope 0 at ui/numeric/numeric-cast_fixed.rs:101:16: 101:21
    let _145: ();                        // in scope 0 at ui/numeric/numeric-cast_fixed.rs:103:5: 103:29
    let mut _146: i64;                   // in scope 0 at ui/numeric/numeric-cast_fixed.rs:103:16: 103:28
    let mut _147: i16;                   // in scope 0 at ui/numeric/numeric-cast_fixed.rs:103:16: 103:21
    let _148: ();                        // in scope 0 at ui/numeric/numeric-cast_fixed.rs:105:5: 105:28
    let mut _149: i64;                   // in scope 0 at ui/numeric/numeric-cast_fixed.rs:105:16: 105:27
    let mut _150: i8;                    // in scope 0 at ui/numeric/numeric-cast_fixed.rs:105:16: 105:20
    let _151: ();                        // in scope 0 at ui/numeric/numeric-cast_fixed.rs:110:5: 110:44
    let mut _152: u32;                   // in scope 0 at ui/numeric/numeric-cast_fixed.rs:110:16: 110:43
    let mut _153: std::result::Result<u32, std::num::TryFromIntError>; // in scope 0 at ui/numeric/numeric-cast_fixed.rs:110:16: 110:34
    let mut _154: usize;                 // in scope 0 at ui/numeric/numeric-cast_fixed.rs:110:16: 110:23
    let _155: ();                        // in scope 0 at ui/numeric/numeric-cast_fixed.rs:112:5: 112:42
    let mut _156: u32;                   // in scope 0 at ui/numeric/numeric-cast_fixed.rs:112:16: 112:41
    let mut _157: std::result::Result<u32, std::num::TryFromIntError>; // in scope 0 at ui/numeric/numeric-cast_fixed.rs:112:16: 112:32
    let mut _158: u64;                   // in scope 0 at ui/numeric/numeric-cast_fixed.rs:112:16: 112:21
    let _159: ();                        // in scope 0 at ui/numeric/numeric-cast_fixed.rs:114:5: 114:22
    let mut _160: u32;                   // in scope 0 at ui/numeric/numeric-cast_fixed.rs:114:16: 114:21
    let _161: ();                        // in scope 0 at ui/numeric/numeric-cast_fixed.rs:115:5: 115:29
    let mut _162: u32;                   // in scope 0 at ui/numeric/numeric-cast_fixed.rs:115:16: 115:28
    let mut _163: u16;                   // in scope 0 at ui/numeric/numeric-cast_fixed.rs:115:16: 115:21
    let _164: ();                        // in scope 0 at ui/numeric/numeric-cast_fixed.rs:117:5: 117:28
    let mut _165: u32;                   // in scope 0 at ui/numeric/numeric-cast_fixed.rs:117:16: 117:27
    let mut _166: u8;                    // in scope 0 at ui/numeric/numeric-cast_fixed.rs:117:16: 117:20
    let _167: ();                        // in scope 0 at ui/numeric/numeric-cast_fixed.rs:119:5: 119:44
    let mut _168: u32;                   // in scope 0 at ui/numeric/numeric-cast_fixed.rs:119:16: 119:43
    let mut _169: std::result::Result<u32, std::num::TryFromIntError>; // in scope 0 at ui/numeric/numeric-cast_fixed.rs:119:16: 119:34
    let mut _170: isize;                 // in scope 0 at ui/numeric/numeric-cast_fixed.rs:119:16: 119:23
    let _171: ();                        // in scope 0 at ui/numeric/numeric-cast_fixed.rs:121:5: 121:42
    let mut _172: u32;                   // in scope 0 at ui/numeric/numeric-cast_fixed.rs:121:16: 121:41
    let mut _173: std::result::Result<u32, std::num::TryFromIntError>; // in scope 0 at ui/numeric/numeric-cast_fixed.rs:121:16: 121:32
    let mut _174: i64;                   // in scope 0 at ui/numeric/numeric-cast_fixed.rs:121:16: 121:21
    let _175: ();                        // in scope 0 at ui/numeric/numeric-cast_fixed.rs:123:5: 123:42
    let mut _176: u32;                   // in scope 0 at ui/numeric/numeric-cast_fixed.rs:123:16: 123:41
    let mut _177: std::result::Result<u32, std::num::TryFromIntError>; // in scope 0 at ui/numeric/numeric-cast_fixed.rs:123:16: 123:32
    let mut _178: i32;                   // in scope 0 at ui/numeric/numeric-cast_fixed.rs:123:16: 123:21
    let _179: ();                        // in scope 0 at ui/numeric/numeric-cast_fixed.rs:125:5: 125:42
    let mut _180: u32;                   // in scope 0 at ui/numeric/numeric-cast_fixed.rs:125:16: 125:41
    let mut _181: std::result::Result<u32, std::num::TryFromIntError>; // in scope 0 at ui/numeric/numeric-cast_fixed.rs:125:16: 125:32
    let mut _182: i16;                   // in scope 0 at ui/numeric/numeric-cast_fixed.rs:125:16: 125:21
    let _183: ();                        // in scope 0 at ui/numeric/numeric-cast_fixed.rs:127:5: 127:41
    let mut _184: u32;                   // in scope 0 at ui/numeric/numeric-cast_fixed.rs:127:16: 127:40
    let mut _185: std::result::Result<u32, std::num::TryFromIntError>; // in scope 0 at ui/numeric/numeric-cast_fixed.rs:127:16: 127:31
    let mut _186: i8;                    // in scope 0 at ui/numeric/numeric-cast_fixed.rs:127:16: 127:20
    let _187: ();                        // in scope 0 at ui/numeric/numeric-cast_fixed.rs:132:5: 132:44
    let mut _188: i32;                   // in scope 0 at ui/numeric/numeric-cast_fixed.rs:132:16: 132:43
    let mut _189: std::result::Result<i32, std::num::TryFromIntError>; // in scope 0 at ui/numeric/numeric-cast_fixed.rs:132:16: 132:34
    let mut _190: usize;                 // in scope 0 at ui/numeric/numeric-cast_fixed.rs:132:16: 132:23
    let _191: ();                        // in scope 0 at ui/numeric/numeric-cast_fixed.rs:134:5: 134:42
    let mut _192: i32;                   // in scope 0 at ui/numeric/numeric-cast_fixed.rs:134:16: 134:41
    let mut _193: std::result::Result<i32, std::num::TryFromIntError>; // in scope 0 at ui/numeric/numeric-cast_fixed.rs:134:16: 134:32
    let mut _194: u64;                   // in scope 0 at ui/numeric/numeric-cast_fixed.rs:134:16: 134:21
    let _195: ();                        // in scope 0 at ui/numeric/numeric-cast_fixed.rs:136:5: 136:42
    let mut _196: i32;                   // in scope 0 at ui/numeric/numeric-cast_fixed.rs:136:16: 136:41
    let mut _197: std::result::Result<i32, std::num::TryFromIntError>; // in scope 0 at ui/numeric/numeric-cast_fixed.rs:136:16: 136:32
    let mut _198: u32;                   // in scope 0 at ui/numeric/numeric-cast_fixed.rs:136:16: 136:21
    let _199: ();                        // in scope 0 at ui/numeric/numeric-cast_fixed.rs:138:5: 138:29
    let mut _200: i32;                   // in scope 0 at ui/numeric/numeric-cast_fixed.rs:138:16: 138:28
    let mut _201: u16;                   // in scope 0 at ui/numeric/numeric-cast_fixed.rs:138:16: 138:21
    let _202: ();                        // in scope 0 at ui/numeric/numeric-cast_fixed.rs:140:5: 140:28
    let mut _203: i32;                   // in scope 0 at ui/numeric/numeric-cast_fixed.rs:140:16: 140:27
    let mut _204: u8;                    // in scope 0 at ui/numeric/numeric-cast_fixed.rs:140:16: 140:20
    let _205: ();                        // in scope 0 at ui/numeric/numeric-cast_fixed.rs:142:5: 142:44
    let mut _206: i32;                   // in scope 0 at ui/numeric/numeric-cast_fixed.rs:142:16: 142:43
    let mut _207: std::result::Result<i32, std::num::TryFromIntError>; // in scope 0 at ui/numeric/numeric-cast_fixed.rs:142:16: 142:34
    let mut _208: isize;                 // in scope 0 at ui/numeric/numeric-cast_fixed.rs:142:16: 142:23
    let _209: ();                        // in scope 0 at ui/numeric/numeric-cast_fixed.rs:144:5: 144:42
    let mut _210: i32;                   // in scope 0 at ui/numeric/numeric-cast_fixed.rs:144:16: 144:41
    let mut _211: std::result::Result<i32, std::num::TryFromIntError>; // in scope 0 at ui/numeric/numeric-cast_fixed.rs:144:16: 144:32
    let mut _212: i64;                   // in scope 0 at ui/numeric/numeric-cast_fixed.rs:144:16: 144:21
    let _213: ();                        // in scope 0 at ui/numeric/numeric-cast_fixed.rs:146:5: 146:22
    let mut _214: i32;                   // in scope 0 at ui/numeric/numeric-cast_fixed.rs:146:16: 146:21
    let _215: ();                        // in scope 0 at ui/numeric/numeric-cast_fixed.rs:147:5: 147:29
    let mut _216: i32;                   // in scope 0 at ui/numeric/numeric-cast_fixed.rs:147:16: 147:28
    let mut _217: i16;                   // in scope 0 at ui/numeric/numeric-cast_fixed.rs:147:16: 147:21
    let _218: ();                        // in scope 0 at ui/numeric/numeric-cast_fixed.rs:149:5: 149:28
    let mut _219: i32;                   // in scope 0 at ui/numeric/numeric-cast_fixed.rs:149:16: 149:27
    let mut _220: i8;                    // in scope 0 at ui/numeric/numeric-cast_fixed.rs:149:16: 149:20
    let _221: ();                        // in scope 0 at ui/numeric/numeric-cast_fixed.rs:154:5: 154:44
    let mut _222: u16;                   // in scope 0 at ui/numeric/numeric-cast_fixed.rs:154:16: 154:43
    let mut _223: std::result::Result<u16, std::num::TryFromIntError>; // in scope 0 at ui/numeric/numeric-cast_fixed.rs:154:16: 154:34
    let mut _224: usize;                 // in scope 0 at ui/numeric/numeric-cast_fixed.rs:154:16: 154:23
    let _225: ();                        // in scope 0 at ui/numeric/numeric-cast_fixed.rs:156:5: 156:42
    let mut _226: u16;                   // in scope 0 at ui/numeric/numeric-cast_fixed.rs:156:16: 156:41
    let mut _227: std::result::Result<u16, std::num::TryFromIntError>; // in scope 0 at ui/numeric/numeric-cast_fixed.rs:156:16: 156:32
    let mut _228: u64;                   // in scope 0 at ui/numeric/numeric-cast_fixed.rs:156:16: 156:21
    let _229: ();                        // in scope 0 at ui/numeric/numeric-cast_fixed.rs:158:5: 158:42
    let mut _230: u16;                   // in scope 0 at ui/numeric/numeric-cast_fixed.rs:158:16: 158:41
    let mut _231: std::result::Result<u16, std::num::TryFromIntError>; // in scope 0 at ui/numeric/numeric-cast_fixed.rs:158:16: 158:32
    let mut _232: u32;                   // in scope 0 at ui/numeric/numeric-cast_fixed.rs:158:16: 158:21
    let _233: ();                        // in scope 0 at ui/numeric/numeric-cast_fixed.rs:160:5: 160:22
    let mut _234: u16;                   // in scope 0 at ui/numeric/numeric-cast_fixed.rs:160:16: 160:21
    let _235: ();                        // in scope 0 at ui/numeric/numeric-cast_fixed.rs:161:5: 161:28
    let mut _236: u16;                   // in scope 0 at ui/numeric/numeric-cast_fixed.rs:161:16: 161:27
    let mut _237: u8;                    // in scope 0 at ui/numeric/numeric-cast_fixed.rs:161:16: 161:20
    let _238: ();                        // in scope 0 at ui/numeric/numeric-cast_fixed.rs:163:5: 163:44
    let mut _239: u16;                   // in scope 0 at ui/numeric/numeric-cast_fixed.rs:163:16: 163:43
    let mut _240: std::result::Result<u16, std::num::TryFromIntError>; // in scope 0 at ui/numeric/numeric-cast_fixed.rs:163:16: 163:34
    let mut _241: isize;                 // in scope 0 at ui/numeric/numeric-cast_fixed.rs:163:16: 163:23
    let _242: ();                        // in scope 0 at ui/numeric/numeric-cast_fixed.rs:165:5: 165:42
    let mut _243: u16;                   // in scope 0 at ui/numeric/numeric-cast_fixed.rs:165:16: 165:41
    let mut _244: std::result::Result<u16, std::num::TryFromIntError>; // in scope 0 at ui/numeric/numeric-cast_fixed.rs:165:16: 165:32
    let mut _245: i64;                   // in scope 0 at ui/numeric/numeric-cast_fixed.rs:165:16: 165:21
    let _246: ();                        // in scope 0 at ui/numeric/numeric-cast_fixed.rs:167:5: 167:42
    let mut _247: u16;                   // in scope 0 at ui/numeric/numeric-cast_fixed.rs:167:16: 167:41
    let mut _248: std::result::Result<u16, std::num::TryFromIntError>; // in scope 0 at ui/numeric/numeric-cast_fixed.rs:167:16: 167:32
    let mut _249: i32;                   // in scope 0 at ui/numeric/numeric-cast_fixed.rs:167:16: 167:21
    let _250: ();                        // in scope 0 at ui/numeric/numeric-cast_fixed.rs:169:5: 169:42
    let mut _251: u16;                   // in scope 0 at ui/numeric/numeric-cast_fixed.rs:169:16: 169:41
    let mut _252: std::result::Result<u16, std::num::TryFromIntError>; // in scope 0 at ui/numeric/numeric-cast_fixed.rs:169:16: 169:32
    let mut _253: i16;                   // in scope 0 at ui/numeric/numeric-cast_fixed.rs:169:16: 169:21
    let _254: ();                        // in scope 0 at ui/numeric/numeric-cast_fixed.rs:171:5: 171:41
    let mut _255: u16;                   // in scope 0 at ui/numeric/numeric-cast_fixed.rs:171:16: 171:40
    let mut _256: std::result::Result<u16, std::num::TryFromIntError>; // in scope 0 at ui/numeric/numeric-cast_fixed.rs:171:16: 171:31
    let mut _257: i8;                    // in scope 0 at ui/numeric/numeric-cast_fixed.rs:171:16: 171:20
    let _258: ();                        // in scope 0 at ui/numeric/numeric-cast_fixed.rs:176:5: 176:44
    let mut _259: i16;                   // in scope 0 at ui/numeric/numeric-cast_fixed.rs:176:16: 176:43
    let mut _260: std::result::Result<i16, std::num::TryFromIntError>; // in scope 0 at ui/numeric/numeric-cast_fixed.rs:176:16: 176:34
    let mut _261: usize;                 // in scope 0 at ui/numeric/numeric-cast_fixed.rs:176:16: 176:23
    let _262: ();                        // in scope 0 at ui/numeric/numeric-cast_fixed.rs:178:5: 178:42
    let mut _263: i16;                   // in scope 0 at ui/numeric/numeric-cast_fixed.rs:178:16: 178:41
    let mut _264: std::result::Result<i16, std::num::TryFromIntError>; // in scope 0 at ui/numeric/numeric-cast_fixed.rs:178:16: 178:32
    let mut _265: u64;                   // in scope 0 at ui/numeric/numeric-cast_fixed.rs:178:16: 178:21
    let _266: ();                        // in scope 0 at ui/numeric/numeric-cast_fixed.rs:180:5: 180:42
    let mut _267: i16;                   // in scope 0 at ui/numeric/numeric-cast_fixed.rs:180:16: 180:41
    let mut _268: std::result::Result<i16, std::num::TryFromIntError>; // in scope 0 at ui/numeric/numeric-cast_fixed.rs:180:16: 180:32
    let mut _269: u32;                   // in scope 0 at ui/numeric/numeric-cast_fixed.rs:180:16: 180:21
    let _270: ();                        // in scope 0 at ui/numeric/numeric-cast_fixed.rs:182:5: 182:42
    let mut _271: i16;                   // in scope 0 at ui/numeric/numeric-cast_fixed.rs:182:16: 182:41
    let mut _272: std::result::Result<i16, std::num::TryFromIntError>; // in scope 0 at ui/numeric/numeric-cast_fixed.rs:182:16: 182:32
    let mut _273: u16;                   // in scope 0 at ui/numeric/numeric-cast_fixed.rs:182:16: 182:21
    let _274: ();                        // in scope 0 at ui/numeric/numeric-cast_fixed.rs:184:5: 184:28
    let mut _275: i16;                   // in scope 0 at ui/numeric/numeric-cast_fixed.rs:184:16: 184:27
    let mut _276: u8;                    // in scope 0 at ui/numeric/numeric-cast_fixed.rs:184:16: 184:20
    let _277: ();                        // in scope 0 at ui/numeric/numeric-cast_fixed.rs:186:5: 186:44
    let mut _278: i16;                   // in scope 0 at ui/numeric/numeric-cast_fixed.rs:186:16: 186:43
    let mut _279: std::result::Result<i16, std::num::TryFromIntError>; // in scope 0 at ui/numeric/numeric-cast_fixed.rs:186:16: 186:34
    let mut _280: isize;                 // in scope 0 at ui/numeric/numeric-cast_fixed.rs:186:16: 186:23
    let _281: ();                        // in scope 0 at ui/numeric/numeric-cast_fixed.rs:188:5: 188:42
    let mut _282: i16;                   // in scope 0 at ui/numeric/numeric-cast_fixed.rs:188:16: 188:41
    let mut _283: std::result::Result<i16, std::num::TryFromIntError>; // in scope 0 at ui/numeric/numeric-cast_fixed.rs:188:16: 188:32
    let mut _284: i64;                   // in scope 0 at ui/numeric/numeric-cast_fixed.rs:188:16: 188:21
    let _285: ();                        // in scope 0 at ui/numeric/numeric-cast_fixed.rs:190:5: 190:42
    let mut _286: i16;                   // in scope 0 at ui/numeric/numeric-cast_fixed.rs:190:16: 190:41
    let mut _287: std::result::Result<i16, std::num::TryFromIntError>; // in scope 0 at ui/numeric/numeric-cast_fixed.rs:190:16: 190:32
    let mut _288: i32;                   // in scope 0 at ui/numeric/numeric-cast_fixed.rs:190:16: 190:21
    let _289: ();                        // in scope 0 at ui/numeric/numeric-cast_fixed.rs:192:5: 192:22
    let mut _290: i16;                   // in scope 0 at ui/numeric/numeric-cast_fixed.rs:192:16: 192:21
    let _291: ();                        // in scope 0 at ui/numeric/numeric-cast_fixed.rs:193:5: 193:28
    let mut _292: i16;                   // in scope 0 at ui/numeric/numeric-cast_fixed.rs:193:16: 193:27
    let mut _293: i8;                    // in scope 0 at ui/numeric/numeric-cast_fixed.rs:193:16: 193:20
    let _294: ();                        // in scope 0 at ui/numeric/numeric-cast_fixed.rs:198:5: 198:43
    let mut _295: u8;                    // in scope 0 at ui/numeric/numeric-cast_fixed.rs:198:15: 198:42
    let mut _296: std::result::Result<u8, std::num::TryFromIntError>; // in scope 0 at ui/numeric/numeric-cast_fixed.rs:198:15: 198:33
    let mut _297: usize;                 // in scope 0 at ui/numeric/numeric-cast_fixed.rs:198:15: 198:22
    let _298: ();                        // in scope 0 at ui/numeric/numeric-cast_fixed.rs:200:5: 200:41
    let mut _299: u8;                    // in scope 0 at ui/numeric/numeric-cast_fixed.rs:200:15: 200:40
    let mut _300: std::result::Result<u8, std::num::TryFromIntError>; // in scope 0 at ui/numeric/numeric-cast_fixed.rs:200:15: 200:31
    let mut _301: u64;                   // in scope 0 at ui/numeric/numeric-cast_fixed.rs:200:15: 200:20
    let _302: ();                        // in scope 0 at ui/numeric/numeric-cast_fixed.rs:202:5: 202:41
    let mut _303: u8;                    // in scope 0 at ui/numeric/numeric-cast_fixed.rs:202:15: 202:40
    let mut _304: std::result::Result<u8, std::num::TryFromIntError>; // in scope 0 at ui/numeric/numeric-cast_fixed.rs:202:15: 202:31
    let mut _305: u32;                   // in scope 0 at ui/numeric/numeric-cast_fixed.rs:202:15: 202:20
    let _306: ();                        // in scope 0 at ui/numeric/numeric-cast_fixed.rs:204:5: 204:41
    let mut _307: u8;                    // in scope 0 at ui/numeric/numeric-cast_fixed.rs:204:15: 204:40
    let mut _308: std::result::Result<u8, std::num::TryFromIntError>; // in scope 0 at ui/numeric/numeric-cast_fixed.rs:204:15: 204:31
    let mut _309: u16;                   // in scope 0 at ui/numeric/numeric-cast_fixed.rs:204:15: 204:20
    let _310: ();                        // in scope 0 at ui/numeric/numeric-cast_fixed.rs:206:5: 206:20
    let mut _311: u8;                    // in scope 0 at ui/numeric/numeric-cast_fixed.rs:206:15: 206:19
    let _312: ();                        // in scope 0 at ui/numeric/numeric-cast_fixed.rs:207:5: 207:43
    let mut _313: u8;                    // in scope 0 at ui/numeric/numeric-cast_fixed.rs:207:15: 207:42
    let mut _314: std::result::Result<u8, std::num::TryFromIntError>; // in scope 0 at ui/numeric/numeric-cast_fixed.rs:207:15: 207:33
    let mut _315: isize;                 // in scope 0 at ui/numeric/numeric-cast_fixed.rs:207:15: 207:22
    let _316: ();                        // in scope 0 at ui/numeric/numeric-cast_fixed.rs:209:5: 209:41
    let mut _317: u8;                    // in scope 0 at ui/numeric/numeric-cast_fixed.rs:209:15: 209:40
    let mut _318: std::result::Result<u8, std::num::TryFromIntError>; // in scope 0 at ui/numeric/numeric-cast_fixed.rs:209:15: 209:31
    let mut _319: i64;                   // in scope 0 at ui/numeric/numeric-cast_fixed.rs:209:15: 209:20
    let _320: ();                        // in scope 0 at ui/numeric/numeric-cast_fixed.rs:211:5: 211:41
    let mut _321: u8;                    // in scope 0 at ui/numeric/numeric-cast_fixed.rs:211:15: 211:40
    let mut _322: std::result::Result<u8, std::num::TryFromIntError>; // in scope 0 at ui/numeric/numeric-cast_fixed.rs:211:15: 211:31
    let mut _323: i32;                   // in scope 0 at ui/numeric/numeric-cast_fixed.rs:211:15: 211:20
    let _324: ();                        // in scope 0 at ui/numeric/numeric-cast_fixed.rs:213:5: 213:41
    let mut _325: u8;                    // in scope 0 at ui/numeric/numeric-cast_fixed.rs:213:15: 213:40
    let mut _326: std::result::Result<u8, std::num::TryFromIntError>; // in scope 0 at ui/numeric/numeric-cast_fixed.rs:213:15: 213:31
    let mut _327: i16;                   // in scope 0 at ui/numeric/numeric-cast_fixed.rs:213:15: 213:20
    let _328: ();                        // in scope 0 at ui/numeric/numeric-cast_fixed.rs:215:5: 215:40
    let mut _329: u8;                    // in scope 0 at ui/numeric/numeric-cast_fixed.rs:215:15: 215:39
    let mut _330: std::result::Result<u8, std::num::TryFromIntError>; // in scope 0 at ui/numeric/numeric-cast_fixed.rs:215:15: 215:30
    let mut _331: i8;                    // in scope 0 at ui/numeric/numeric-cast_fixed.rs:215:15: 215:19
    let _332: ();                        // in scope 0 at ui/numeric/numeric-cast_fixed.rs:220:5: 220:43
    let mut _333: i8;                    // in scope 0 at ui/numeric/numeric-cast_fixed.rs:220:15: 220:42
    let mut _334: std::result::Result<i8, std::num::TryFromIntError>; // in scope 0 at ui/numeric/numeric-cast_fixed.rs:220:15: 220:33
    let mut _335: usize;                 // in scope 0 at ui/numeric/numeric-cast_fixed.rs:220:15: 220:22
    let _336: ();                        // in scope 0 at ui/numeric/numeric-cast_fixed.rs:222:5: 222:41
    let mut _337: i8;                    // in scope 0 at ui/numeric/numeric-cast_fixed.rs:222:15: 222:40
    let mut _338: std::result::Result<i8, std::num::TryFromIntError>; // in scope 0 at ui/numeric/numeric-cast_fixed.rs:222:15: 222:31
    let mut _339: u64;                   // in scope 0 at ui/numeric/numeric-cast_fixed.rs:222:15: 222:20
    let _340: ();                        // in scope 0 at ui/numeric/numeric-cast_fixed.rs:224:5: 224:41
    let mut _341: i8;                    // in scope 0 at ui/numeric/numeric-cast_fixed.rs:224:15: 224:40
    let mut _342: std::result::Result<i8, std::num::TryFromIntError>; // in scope 0 at ui/numeric/numeric-cast_fixed.rs:224:15: 224:31
    let mut _343: u32;                   // in scope 0 at ui/numeric/numeric-cast_fixed.rs:224:15: 224:20
    let _344: ();                        // in scope 0 at ui/numeric/numeric-cast_fixed.rs:226:5: 226:41
    let mut _345: i8;                    // in scope 0 at ui/numeric/numeric-cast_fixed.rs:226:15: 226:40
    let mut _346: std::result::Result<i8, std::num::TryFromIntError>; // in scope 0 at ui/numeric/numeric-cast_fixed.rs:226:15: 226:31
    let mut _347: u16;                   // in scope 0 at ui/numeric/numeric-cast_fixed.rs:226:15: 226:20
    let _348: ();                        // in scope 0 at ui/numeric/numeric-cast_fixed.rs:228:5: 228:40
    let mut _349: i8;                    // in scope 0 at ui/numeric/numeric-cast_fixed.rs:228:15: 228:39
    let mut _350: std::result::Result<i8, std::num::TryFromIntError>; // in scope 0 at ui/numeric/numeric-cast_fixed.rs:228:15: 228:30
    let mut _351: u8;                    // in scope 0 at ui/numeric/numeric-cast_fixed.rs:228:15: 228:19
    let _352: ();                        // in scope 0 at ui/numeric/numeric-cast_fixed.rs:230:5: 230:43
    let mut _353: i8;                    // in scope 0 at ui/numeric/numeric-cast_fixed.rs:230:15: 230:42
    let mut _354: std::result::Result<i8, std::num::TryFromIntError>; // in scope 0 at ui/numeric/numeric-cast_fixed.rs:230:15: 230:33
    let mut _355: isize;                 // in scope 0 at ui/numeric/numeric-cast_fixed.rs:230:15: 230:22
    let _356: ();                        // in scope 0 at ui/numeric/numeric-cast_fixed.rs:232:5: 232:41
    let mut _357: i8;                    // in scope 0 at ui/numeric/numeric-cast_fixed.rs:232:15: 232:40
    let mut _358: std::result::Result<i8, std::num::TryFromIntError>; // in scope 0 at ui/numeric/numeric-cast_fixed.rs:232:15: 232:31
    let mut _359: i64;                   // in scope 0 at ui/numeric/numeric-cast_fixed.rs:232:15: 232:20
    let _360: ();                        // in scope 0 at ui/numeric/numeric-cast_fixed.rs:234:5: 234:41
    let mut _361: i8;                    // in scope 0 at ui/numeric/numeric-cast_fixed.rs:234:15: 234:40
    let mut _362: std::result::Result<i8, std::num::TryFromIntError>; // in scope 0 at ui/numeric/numeric-cast_fixed.rs:234:15: 234:31
    let mut _363: i32;                   // in scope 0 at ui/numeric/numeric-cast_fixed.rs:234:15: 234:20
    let _364: ();                        // in scope 0 at ui/numeric/numeric-cast_fixed.rs:236:5: 236:41
    let mut _365: i8;                    // in scope 0 at ui/numeric/numeric-cast_fixed.rs:236:15: 236:40
    let mut _366: std::result::Result<i8, std::num::TryFromIntError>; // in scope 0 at ui/numeric/numeric-cast_fixed.rs:236:15: 236:31
    let mut _367: i16;                   // in scope 0 at ui/numeric/numeric-cast_fixed.rs:236:15: 236:20
    let _368: ();                        // in scope 0 at ui/numeric/numeric-cast_fixed.rs:238:5: 238:20
    let mut _369: i8;                    // in scope 0 at ui/numeric/numeric-cast_fixed.rs:238:15: 238:19
    let _370: ();                        // in scope 0 at ui/numeric/numeric-cast_fixed.rs:242:5: 242:31
    let mut _371: f64;                   // in scope 0 at ui/numeric/numeric-cast_fixed.rs:242:16: 242:30
    let mut _372: usize;                 // in scope 0 at ui/numeric/numeric-cast_fixed.rs:242:16: 242:23
    let _373: ();                        // in scope 0 at ui/numeric/numeric-cast_fixed.rs:244:5: 244:29
    let mut _374: f64;                   // in scope 0 at ui/numeric/numeric-cast_fixed.rs:244:16: 244:28
    let mut _375: u64;                   // in scope 0 at ui/numeric/numeric-cast_fixed.rs:244:16: 244:21
    let _376: ();                        // in scope 0 at ui/numeric/numeric-cast_fixed.rs:246:5: 246:29
    let mut _377: f64;                   // in scope 0 at ui/numeric/numeric-cast_fixed.rs:246:16: 246:28
    let mut _378: u32;                   // in scope 0 at ui/numeric/numeric-cast_fixed.rs:246:16: 246:21
    let _379: ();                        // in scope 0 at ui/numeric/numeric-cast_fixed.rs:248:5: 248:29
    let mut _380: f64;                   // in scope 0 at ui/numeric/numeric-cast_fixed.rs:248:16: 248:28
    let mut _381: u16;                   // in scope 0 at ui/numeric/numeric-cast_fixed.rs:248:16: 248:21
    let _382: ();                        // in scope 0 at ui/numeric/numeric-cast_fixed.rs:250:5: 250:28
    let mut _383: f64;                   // in scope 0 at ui/numeric/numeric-cast_fixed.rs:250:16: 250:27
    let mut _384: u8;                    // in scope 0 at ui/numeric/numeric-cast_fixed.rs:250:16: 250:20
    let _385: ();                        // in scope 0 at ui/numeric/numeric-cast_fixed.rs:252:5: 252:31
    let mut _386: f64;                   // in scope 0 at ui/numeric/numeric-cast_fixed.rs:252:16: 252:30
    let mut _387: isize;                 // in scope 0 at ui/numeric/numeric-cast_fixed.rs:252:16: 252:23
    let _388: ();                        // in scope 0 at ui/numeric/numeric-cast_fixed.rs:254:5: 254:29
    let mut _389: f64;                   // in scope 0 at ui/numeric/numeric-cast_fixed.rs:254:16: 254:28
    let mut _390: i64;                   // in scope 0 at ui/numeric/numeric-cast_fixed.rs:254:16: 254:21
    let _391: ();                        // in scope 0 at ui/numeric/numeric-cast_fixed.rs:256:5: 256:29
    let mut _392: f64;                   // in scope 0 at ui/numeric/numeric-cast_fixed.rs:256:16: 256:28
    let mut _393: i32;                   // in scope 0 at ui/numeric/numeric-cast_fixed.rs:256:16: 256:21
    let _394: ();                        // in scope 0 at ui/numeric/numeric-cast_fixed.rs:258:5: 258:29
    let mut _395: f64;                   // in scope 0 at ui/numeric/numeric-cast_fixed.rs:258:16: 258:28
    let mut _396: i16;                   // in scope 0 at ui/numeric/numeric-cast_fixed.rs:258:16: 258:21
    let _397: ();                        // in scope 0 at ui/numeric/numeric-cast_fixed.rs:260:5: 260:28
    let mut _398: f64;                   // in scope 0 at ui/numeric/numeric-cast_fixed.rs:260:16: 260:27
    let mut _399: i8;                    // in scope 0 at ui/numeric/numeric-cast_fixed.rs:260:16: 260:20
    let _400: ();                        // in scope 0 at ui/numeric/numeric-cast_fixed.rs:262:5: 262:22
    let mut _401: f64;                   // in scope 0 at ui/numeric/numeric-cast_fixed.rs:262:16: 262:21
    let _402: ();                        // in scope 0 at ui/numeric/numeric-cast_fixed.rs:263:5: 263:29
    let mut _403: f64;                   // in scope 0 at ui/numeric/numeric-cast_fixed.rs:263:16: 263:28
    let mut _404: f32;                   // in scope 0 at ui/numeric/numeric-cast_fixed.rs:263:16: 263:21
    let _405: ();                        // in scope 0 at ui/numeric/numeric-cast_fixed.rs:266:5: 266:31
    let mut _406: f32;                   // in scope 0 at ui/numeric/numeric-cast_fixed.rs:266:16: 266:30
    let mut _407: usize;                 // in scope 0 at ui/numeric/numeric-cast_fixed.rs:266:16: 266:23
    let _408: ();                        // in scope 0 at ui/numeric/numeric-cast_fixed.rs:268:5: 268:29
    let mut _409: f32;                   // in scope 0 at ui/numeric/numeric-cast_fixed.rs:268:16: 268:28
    let mut _410: u64;                   // in scope 0 at ui/numeric/numeric-cast_fixed.rs:268:16: 268:21
    let _411: ();                        // in scope 0 at ui/numeric/numeric-cast_fixed.rs:270:5: 270:29
    let mut _412: f32;                   // in scope 0 at ui/numeric/numeric-cast_fixed.rs:270:16: 270:28
    let mut _413: u32;                   // in scope 0 at ui/numeric/numeric-cast_fixed.rs:270:16: 270:21
    let _414: ();                        // in scope 0 at ui/numeric/numeric-cast_fixed.rs:272:5: 272:29
    let mut _415: f32;                   // in scope 0 at ui/numeric/numeric-cast_fixed.rs:272:16: 272:28
    let mut _416: u16;                   // in scope 0 at ui/numeric/numeric-cast_fixed.rs:272:16: 272:21
    let _417: ();                        // in scope 0 at ui/numeric/numeric-cast_fixed.rs:274:5: 274:28
    let mut _418: f32;                   // in scope 0 at ui/numeric/numeric-cast_fixed.rs:274:16: 274:27
    let mut _419: u8;                    // in scope 0 at ui/numeric/numeric-cast_fixed.rs:274:16: 274:20
    let _420: ();                        // in scope 0 at ui/numeric/numeric-cast_fixed.rs:276:5: 276:31
    let mut _421: f32;                   // in scope 0 at ui/numeric/numeric-cast_fixed.rs:276:16: 276:30
    let mut _422: isize;                 // in scope 0 at ui/numeric/numeric-cast_fixed.rs:276:16: 276:23
    let _423: ();                        // in scope 0 at ui/numeric/numeric-cast_fixed.rs:278:5: 278:29
    let mut _424: f32;                   // in scope 0 at ui/numeric/numeric-cast_fixed.rs:278:16: 278:28
    let mut _425: i64;                   // in scope 0 at ui/numeric/numeric-cast_fixed.rs:278:16: 278:21
    let _426: ();                        // in scope 0 at ui/numeric/numeric-cast_fixed.rs:280:5: 280:29
    let mut _427: f32;                   // in scope 0 at ui/numeric/numeric-cast_fixed.rs:280:16: 280:28
    let mut _428: i32;                   // in scope 0 at ui/numeric/numeric-cast_fixed.rs:280:16: 280:21
    let _429: ();                        // in scope 0 at ui/numeric/numeric-cast_fixed.rs:282:5: 282:29
    let mut _430: f32;                   // in scope 0 at ui/numeric/numeric-cast_fixed.rs:282:16: 282:28
    let mut _431: i16;                   // in scope 0 at ui/numeric/numeric-cast_fixed.rs:282:16: 282:21
    let _432: ();                        // in scope 0 at ui/numeric/numeric-cast_fixed.rs:284:5: 284:28
    let mut _433: f32;                   // in scope 0 at ui/numeric/numeric-cast_fixed.rs:284:16: 284:27
    let mut _434: i8;                    // in scope 0 at ui/numeric/numeric-cast_fixed.rs:284:16: 284:20
    let _435: ();                        // in scope 0 at ui/numeric/numeric-cast_fixed.rs:287:5: 287:22
    let mut _436: f32;                   // in scope 0 at ui/numeric/numeric-cast_fixed.rs:287:16: 287:21
    let _437: ();                        // in scope 0 at ui/numeric/numeric-cast_fixed.rs:289:5: 289:37
    let mut _438: u32;                   // in scope 0 at ui/numeric/numeric-cast_fixed.rs:289:16: 289:36
    let mut _439: u16;                   // in scope 0 at ui/numeric/numeric-cast_fixed.rs:289:16: 289:29
    let mut _440: u8;                    // in scope 0 at ui/numeric/numeric-cast_fixed.rs:289:17: 289:21
    let _441: ();                        // in scope 0 at ui/numeric/numeric-cast_fixed.rs:291:5: 291:31
    let mut _442: i32;                   // in scope 0 at ui/numeric/numeric-cast_fixed.rs:291:16: 291:30
    let mut _443: i8;                    // in scope 0 at ui/numeric/numeric-cast_fixed.rs:291:16: 291:23
    let mut _444: i8;                    // in scope 0 at ui/numeric/numeric-cast_fixed.rs:291:18: 291:22
    let mut _445: bool;                  // in scope 0 at ui/numeric/numeric-cast_fixed.rs:291:16: 291:23
    scope 1 {
        debug x_usize => _1;             // in scope 1 at ui/numeric/numeric-cast_fixed.rs:9:9: 9:16
        let _2: u64;                     // in scope 1 at ui/numeric/numeric-cast_fixed.rs:10:9: 10:14
        scope 2 {
            debug x_u64 => _2;           // in scope 2 at ui/numeric/numeric-cast_fixed.rs:10:9: 10:14
            let _3: u32;                 // in scope 2 at ui/numeric/numeric-cast_fixed.rs:11:9: 11:14
            scope 3 {
                debug x_u32 => _3;       // in scope 3 at ui/numeric/numeric-cast_fixed.rs:11:9: 11:14
                let _4: u16;             // in scope 3 at ui/numeric/numeric-cast_fixed.rs:12:9: 12:14
                scope 4 {
                    debug x_u16 => _4;   // in scope 4 at ui/numeric/numeric-cast_fixed.rs:12:9: 12:14
                    let _5: u8;          // in scope 4 at ui/numeric/numeric-cast_fixed.rs:13:9: 13:13
                    scope 5 {
                        debug x_u8 => _5; // in scope 5 at ui/numeric/numeric-cast_fixed.rs:13:9: 13:13
                        let _6: isize;   // in scope 5 at ui/numeric/numeric-cast_fixed.rs:14:9: 14:16
                        scope 6 {
                            debug x_isize => _6; // in scope 6 at ui/numeric/numeric-cast_fixed.rs:14:9: 14:16
                            let _7: i64; // in scope 6 at ui/numeric/numeric-cast_fixed.rs:15:9: 15:14
                            scope 7 {
                                debug x_i64 => _7; // in scope 7 at ui/numeric/numeric-cast_fixed.rs:15:9: 15:14
                                let _8: i32; // in scope 7 at ui/numeric/numeric-cast_fixed.rs:16:9: 16:14
                                scope 8 {
                                    debug x_i32 => _8; // in scope 8 at ui/numeric/numeric-cast_fixed.rs:16:9: 16:14
                                    let _9: i16; // in scope 8 at ui/numeric/numeric-cast_fixed.rs:17:9: 17:14
                                    scope 9 {
                                        debug x_i16 => _9; // in scope 9 at ui/numeric/numeric-cast_fixed.rs:17:9: 17:14
                                        let _10: i8; // in scope 9 at ui/numeric/numeric-cast_fixed.rs:18:9: 18:13
                                        scope 10 {
                                            debug x_i8 => _10; // in scope 10 at ui/numeric/numeric-cast_fixed.rs:18:9: 18:13
                                            let _11: f64; // in scope 10 at ui/numeric/numeric-cast_fixed.rs:19:9: 19:14
                                            scope 11 {
                                                debug x_f64 => _11; // in scope 11 at ui/numeric/numeric-cast_fixed.rs:19:9: 19:14
                                                let _12: f32; // in scope 11 at ui/numeric/numeric-cast_fixed.rs:20:9: 20:14
                                                scope 12 {
                                                    debug x_f32 => _12; // in scope 12 at ui/numeric/numeric-cast_fixed.rs:20:9: 20:14
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    }

    bb0: {
        _1 = const 1_usize;              // scope 0 at ui/numeric/numeric-cast_fixed.rs:9:26: 9:27
        _2 = const 2_u64;                // scope 1 at ui/numeric/numeric-cast_fixed.rs:10:22: 10:23
        _3 = const 3_u32;                // scope 2 at ui/numeric/numeric-cast_fixed.rs:11:22: 11:23
        _4 = const 4_u16;                // scope 3 at ui/numeric/numeric-cast_fixed.rs:12:22: 12:23
        _5 = const 5_u8;                 // scope 4 at ui/numeric/numeric-cast_fixed.rs:13:20: 13:21
        _6 = const 6_isize;              // scope 5 at ui/numeric/numeric-cast_fixed.rs:14:26: 14:27
        _7 = const 7_i64;                // scope 6 at ui/numeric/numeric-cast_fixed.rs:15:22: 15:23
        _8 = const 8_i32;                // scope 7 at ui/numeric/numeric-cast_fixed.rs:16:22: 16:23
        _9 = const 9_i16;                // scope 8 at ui/numeric/numeric-cast_fixed.rs:17:22: 17:23
        _10 = const 10_i8;               // scope 9 at ui/numeric/numeric-cast_fixed.rs:18:20: 18:22
        _11 = const 11f64;               // scope 10 at ui/numeric/numeric-cast_fixed.rs:19:22: 19:26
        _12 = const 12f32;               // scope 11 at ui/numeric/numeric-cast_fixed.rs:20:22: 20:26
        _14 = const 1_usize;             // scope 12 at ui/numeric/numeric-cast_fixed.rs:22:18: 22:25
        _13 = foo::<usize>(move _14) -> bb1; // scope 12 at ui/numeric/numeric-cast_fixed.rs:22:5: 22:26
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast_fixed.rs:22:5: 22:17
                                         // + literal: Const { ty: fn(usize) {foo::<usize>}, val: Value(<ZST>) }
    }

    bb1: {
        _18 = _2;                        // scope 12 at ui/numeric/numeric-cast_fixed.rs:23:18: 23:23
        _17 = <u64 as TryInto<usize>>::try_into(move _18) -> bb2; // scope 12 at ui/numeric/numeric-cast_fixed.rs:23:18: 23:34
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast_fixed.rs:23:24: 23:32
                                         // + literal: Const { ty: fn(u64) -> Result<usize, <u64 as TryInto<usize>>::Error> {<u64 as TryInto<usize>>::try_into}, val: Value(<ZST>) }
    }

    bb2: {
        _16 = Result::<usize, TryFromIntError>::unwrap(move _17) -> bb3; // scope 12 at ui/numeric/numeric-cast_fixed.rs:23:18: 23:43
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast_fixed.rs:23:35: 23:41
                                         // + literal: Const { ty: fn(Result<usize, TryFromIntError>) -> usize {Result::<usize, TryFromIntError>::unwrap}, val: Value(<ZST>) }
    }

    bb3: {
        _15 = foo::<usize>(move _16) -> bb4; // scope 12 at ui/numeric/numeric-cast_fixed.rs:23:5: 23:44
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast_fixed.rs:23:5: 23:17
                                         // + literal: Const { ty: fn(usize) {foo::<usize>}, val: Value(<ZST>) }
    }

    bb4: {
        _22 = _3;                        // scope 12 at ui/numeric/numeric-cast_fixed.rs:25:18: 25:23
        _21 = <u32 as TryInto<usize>>::try_into(move _22) -> bb5; // scope 12 at ui/numeric/numeric-cast_fixed.rs:25:18: 25:34
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast_fixed.rs:25:24: 25:32
                                         // + literal: Const { ty: fn(u32) -> Result<usize, <u32 as TryInto<usize>>::Error> {<u32 as TryInto<usize>>::try_into}, val: Value(<ZST>) }
    }

    bb5: {
        _20 = Result::<usize, TryFromIntError>::unwrap(move _21) -> bb6; // scope 12 at ui/numeric/numeric-cast_fixed.rs:25:18: 25:43
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast_fixed.rs:25:35: 25:41
                                         // + literal: Const { ty: fn(Result<usize, TryFromIntError>) -> usize {Result::<usize, TryFromIntError>::unwrap}, val: Value(<ZST>) }
    }

    bb6: {
        _19 = foo::<usize>(move _20) -> bb7; // scope 12 at ui/numeric/numeric-cast_fixed.rs:25:5: 25:44
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast_fixed.rs:25:5: 25:17
                                         // + literal: Const { ty: fn(usize) {foo::<usize>}, val: Value(<ZST>) }
    }

    bb7: {
        _25 = _4;                        // scope 12 at ui/numeric/numeric-cast_fixed.rs:27:18: 27:23
        _24 = <u16 as Into<usize>>::into(move _25) -> bb8; // scope 12 at ui/numeric/numeric-cast_fixed.rs:27:18: 27:30
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast_fixed.rs:27:24: 27:28
                                         // + literal: Const { ty: fn(u16) -> usize {<u16 as Into<usize>>::into}, val: Value(<ZST>) }
    }

    bb8: {
        _23 = foo::<usize>(move _24) -> bb9; // scope 12 at ui/numeric/numeric-cast_fixed.rs:27:5: 27:31
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast_fixed.rs:27:5: 27:17
                                         // + literal: Const { ty: fn(usize) {foo::<usize>}, val: Value(<ZST>) }
    }

    bb9: {
        _28 = _5;                        // scope 12 at ui/numeric/numeric-cast_fixed.rs:29:18: 29:22
        _27 = <u8 as Into<usize>>::into(move _28) -> bb10; // scope 12 at ui/numeric/numeric-cast_fixed.rs:29:18: 29:29
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast_fixed.rs:29:23: 29:27
                                         // + literal: Const { ty: fn(u8) -> usize {<u8 as Into<usize>>::into}, val: Value(<ZST>) }
    }

    bb10: {
        _26 = foo::<usize>(move _27) -> bb11; // scope 12 at ui/numeric/numeric-cast_fixed.rs:29:5: 29:30
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast_fixed.rs:29:5: 29:17
                                         // + literal: Const { ty: fn(usize) {foo::<usize>}, val: Value(<ZST>) }
    }

    bb11: {
        _32 = _6;                        // scope 12 at ui/numeric/numeric-cast_fixed.rs:31:18: 31:25
        _31 = <isize as TryInto<usize>>::try_into(move _32) -> bb12; // scope 12 at ui/numeric/numeric-cast_fixed.rs:31:18: 31:36
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast_fixed.rs:31:26: 31:34
                                         // + literal: Const { ty: fn(isize) -> Result<usize, <isize as TryInto<usize>>::Error> {<isize as TryInto<usize>>::try_into}, val: Value(<ZST>) }
    }

    bb12: {
        _30 = Result::<usize, TryFromIntError>::unwrap(move _31) -> bb13; // scope 12 at ui/numeric/numeric-cast_fixed.rs:31:18: 31:45
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast_fixed.rs:31:37: 31:43
                                         // + literal: Const { ty: fn(Result<usize, TryFromIntError>) -> usize {Result::<usize, TryFromIntError>::unwrap}, val: Value(<ZST>) }
    }

    bb13: {
        _29 = foo::<usize>(move _30) -> bb14; // scope 12 at ui/numeric/numeric-cast_fixed.rs:31:5: 31:46
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast_fixed.rs:31:5: 31:17
                                         // + literal: Const { ty: fn(usize) {foo::<usize>}, val: Value(<ZST>) }
    }

    bb14: {
        _36 = _7;                        // scope 12 at ui/numeric/numeric-cast_fixed.rs:33:18: 33:23
        _35 = <i64 as TryInto<usize>>::try_into(move _36) -> bb15; // scope 12 at ui/numeric/numeric-cast_fixed.rs:33:18: 33:34
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast_fixed.rs:33:24: 33:32
                                         // + literal: Const { ty: fn(i64) -> Result<usize, <i64 as TryInto<usize>>::Error> {<i64 as TryInto<usize>>::try_into}, val: Value(<ZST>) }
    }

    bb15: {
        _34 = Result::<usize, TryFromIntError>::unwrap(move _35) -> bb16; // scope 12 at ui/numeric/numeric-cast_fixed.rs:33:18: 33:43
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast_fixed.rs:33:35: 33:41
                                         // + literal: Const { ty: fn(Result<usize, TryFromIntError>) -> usize {Result::<usize, TryFromIntError>::unwrap}, val: Value(<ZST>) }
    }

    bb16: {
        _33 = foo::<usize>(move _34) -> bb17; // scope 12 at ui/numeric/numeric-cast_fixed.rs:33:5: 33:44
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast_fixed.rs:33:5: 33:17
                                         // + literal: Const { ty: fn(usize) {foo::<usize>}, val: Value(<ZST>) }
    }

    bb17: {
        _40 = _8;                        // scope 12 at ui/numeric/numeric-cast_fixed.rs:35:18: 35:23
        _39 = <i32 as TryInto<usize>>::try_into(move _40) -> bb18; // scope 12 at ui/numeric/numeric-cast_fixed.rs:35:18: 35:34
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast_fixed.rs:35:24: 35:32
                                         // + literal: Const { ty: fn(i32) -> Result<usize, <i32 as TryInto<usize>>::Error> {<i32 as TryInto<usize>>::try_into}, val: Value(<ZST>) }
    }

    bb18: {
        _38 = Result::<usize, TryFromIntError>::unwrap(move _39) -> bb19; // scope 12 at ui/numeric/numeric-cast_fixed.rs:35:18: 35:43
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast_fixed.rs:35:35: 35:41
                                         // + literal: Const { ty: fn(Result<usize, TryFromIntError>) -> usize {Result::<usize, TryFromIntError>::unwrap}, val: Value(<ZST>) }
    }

    bb19: {
        _37 = foo::<usize>(move _38) -> bb20; // scope 12 at ui/numeric/numeric-cast_fixed.rs:35:5: 35:44
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast_fixed.rs:35:5: 35:17
                                         // + literal: Const { ty: fn(usize) {foo::<usize>}, val: Value(<ZST>) }
    }

    bb20: {
        _44 = _9;                        // scope 12 at ui/numeric/numeric-cast_fixed.rs:37:18: 37:23
        _43 = <i16 as TryInto<usize>>::try_into(move _44) -> bb21; // scope 12 at ui/numeric/numeric-cast_fixed.rs:37:18: 37:34
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast_fixed.rs:37:24: 37:32
                                         // + literal: Const { ty: fn(i16) -> Result<usize, <i16 as TryInto<usize>>::Error> {<i16 as TryInto<usize>>::try_into}, val: Value(<ZST>) }
    }

    bb21: {
        _42 = Result::<usize, TryFromIntError>::unwrap(move _43) -> bb22; // scope 12 at ui/numeric/numeric-cast_fixed.rs:37:18: 37:43
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast_fixed.rs:37:35: 37:41
                                         // + literal: Const { ty: fn(Result<usize, TryFromIntError>) -> usize {Result::<usize, TryFromIntError>::unwrap}, val: Value(<ZST>) }
    }

    bb22: {
        _41 = foo::<usize>(move _42) -> bb23; // scope 12 at ui/numeric/numeric-cast_fixed.rs:37:5: 37:44
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast_fixed.rs:37:5: 37:17
                                         // + literal: Const { ty: fn(usize) {foo::<usize>}, val: Value(<ZST>) }
    }

    bb23: {
        _48 = _10;                       // scope 12 at ui/numeric/numeric-cast_fixed.rs:39:18: 39:22
        _47 = <i8 as TryInto<usize>>::try_into(move _48) -> bb24; // scope 12 at ui/numeric/numeric-cast_fixed.rs:39:18: 39:33
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast_fixed.rs:39:23: 39:31
                                         // + literal: Const { ty: fn(i8) -> Result<usize, <i8 as TryInto<usize>>::Error> {<i8 as TryInto<usize>>::try_into}, val: Value(<ZST>) }
    }

    bb24: {
        _46 = Result::<usize, TryFromIntError>::unwrap(move _47) -> bb25; // scope 12 at ui/numeric/numeric-cast_fixed.rs:39:18: 39:42
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast_fixed.rs:39:34: 39:40
                                         // + literal: Const { ty: fn(Result<usize, TryFromIntError>) -> usize {Result::<usize, TryFromIntError>::unwrap}, val: Value(<ZST>) }
    }

    bb25: {
        _45 = foo::<usize>(move _46) -> bb26; // scope 12 at ui/numeric/numeric-cast_fixed.rs:39:5: 39:43
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast_fixed.rs:39:5: 39:17
                                         // + literal: Const { ty: fn(usize) {foo::<usize>}, val: Value(<ZST>) }
    }

    bb26: {
        _52 = _1;                        // scope 12 at ui/numeric/numeric-cast_fixed.rs:44:18: 44:25
        _51 = <usize as TryInto<isize>>::try_into(move _52) -> bb27; // scope 12 at ui/numeric/numeric-cast_fixed.rs:44:18: 44:36
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast_fixed.rs:44:26: 44:34
                                         // + literal: Const { ty: fn(usize) -> Result<isize, <usize as TryInto<isize>>::Error> {<usize as TryInto<isize>>::try_into}, val: Value(<ZST>) }
    }

    bb27: {
        _50 = Result::<isize, TryFromIntError>::unwrap(move _51) -> bb28; // scope 12 at ui/numeric/numeric-cast_fixed.rs:44:18: 44:45
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast_fixed.rs:44:37: 44:43
                                         // + literal: Const { ty: fn(Result<isize, TryFromIntError>) -> isize {Result::<isize, TryFromIntError>::unwrap}, val: Value(<ZST>) }
    }

    bb28: {
        _49 = foo::<isize>(move _50) -> bb29; // scope 12 at ui/numeric/numeric-cast_fixed.rs:44:5: 44:46
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast_fixed.rs:44:5: 44:17
                                         // + literal: Const { ty: fn(isize) {foo::<isize>}, val: Value(<ZST>) }
    }

    bb29: {
        _56 = _2;                        // scope 12 at ui/numeric/numeric-cast_fixed.rs:46:18: 46:23
        _55 = <u64 as TryInto<isize>>::try_into(move _56) -> bb30; // scope 12 at ui/numeric/numeric-cast_fixed.rs:46:18: 46:34
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast_fixed.rs:46:24: 46:32
                                         // + literal: Const { ty: fn(u64) -> Result<isize, <u64 as TryInto<isize>>::Error> {<u64 as TryInto<isize>>::try_into}, val: Value(<ZST>) }
    }

    bb30: {
        _54 = Result::<isize, TryFromIntError>::unwrap(move _55) -> bb31; // scope 12 at ui/numeric/numeric-cast_fixed.rs:46:18: 46:43
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast_fixed.rs:46:35: 46:41
                                         // + literal: Const { ty: fn(Result<isize, TryFromIntError>) -> isize {Result::<isize, TryFromIntError>::unwrap}, val: Value(<ZST>) }
    }

    bb31: {
        _53 = foo::<isize>(move _54) -> bb32; // scope 12 at ui/numeric/numeric-cast_fixed.rs:46:5: 46:44
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast_fixed.rs:46:5: 46:17
                                         // + literal: Const { ty: fn(isize) {foo::<isize>}, val: Value(<ZST>) }
    }

    bb32: {
        _60 = _3;                        // scope 12 at ui/numeric/numeric-cast_fixed.rs:48:18: 48:23
        _59 = <u32 as TryInto<isize>>::try_into(move _60) -> bb33; // scope 12 at ui/numeric/numeric-cast_fixed.rs:48:18: 48:34
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast_fixed.rs:48:24: 48:32
                                         // + literal: Const { ty: fn(u32) -> Result<isize, <u32 as TryInto<isize>>::Error> {<u32 as TryInto<isize>>::try_into}, val: Value(<ZST>) }
    }

    bb33: {
        _58 = Result::<isize, TryFromIntError>::unwrap(move _59) -> bb34; // scope 12 at ui/numeric/numeric-cast_fixed.rs:48:18: 48:43
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast_fixed.rs:48:35: 48:41
                                         // + literal: Const { ty: fn(Result<isize, TryFromIntError>) -> isize {Result::<isize, TryFromIntError>::unwrap}, val: Value(<ZST>) }
    }

    bb34: {
        _57 = foo::<isize>(move _58) -> bb35; // scope 12 at ui/numeric/numeric-cast_fixed.rs:48:5: 48:44
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast_fixed.rs:48:5: 48:17
                                         // + literal: Const { ty: fn(isize) {foo::<isize>}, val: Value(<ZST>) }
    }

    bb35: {
        _64 = _4;                        // scope 12 at ui/numeric/numeric-cast_fixed.rs:50:18: 50:23
        _63 = <u16 as TryInto<isize>>::try_into(move _64) -> bb36; // scope 12 at ui/numeric/numeric-cast_fixed.rs:50:18: 50:34
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast_fixed.rs:50:24: 50:32
                                         // + literal: Const { ty: fn(u16) -> Result<isize, <u16 as TryInto<isize>>::Error> {<u16 as TryInto<isize>>::try_into}, val: Value(<ZST>) }
    }

    bb36: {
        _62 = Result::<isize, TryFromIntError>::unwrap(move _63) -> bb37; // scope 12 at ui/numeric/numeric-cast_fixed.rs:50:18: 50:43
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast_fixed.rs:50:35: 50:41
                                         // + literal: Const { ty: fn(Result<isize, TryFromIntError>) -> isize {Result::<isize, TryFromIntError>::unwrap}, val: Value(<ZST>) }
    }

    bb37: {
        _61 = foo::<isize>(move _62) -> bb38; // scope 12 at ui/numeric/numeric-cast_fixed.rs:50:5: 50:44
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast_fixed.rs:50:5: 50:17
                                         // + literal: Const { ty: fn(isize) {foo::<isize>}, val: Value(<ZST>) }
    }

    bb38: {
        _67 = _5;                        // scope 12 at ui/numeric/numeric-cast_fixed.rs:52:18: 52:22
        _66 = <u8 as Into<isize>>::into(move _67) -> bb39; // scope 12 at ui/numeric/numeric-cast_fixed.rs:52:18: 52:29
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast_fixed.rs:52:23: 52:27
                                         // + literal: Const { ty: fn(u8) -> isize {<u8 as Into<isize>>::into}, val: Value(<ZST>) }
    }

    bb39: {
        _65 = foo::<isize>(move _66) -> bb40; // scope 12 at ui/numeric/numeric-cast_fixed.rs:52:5: 52:30
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast_fixed.rs:52:5: 52:17
                                         // + literal: Const { ty: fn(isize) {foo::<isize>}, val: Value(<ZST>) }
    }

    bb40: {
        _69 = _6;                        // scope 12 at ui/numeric/numeric-cast_fixed.rs:54:18: 54:25
        _68 = foo::<isize>(move _69) -> bb41; // scope 12 at ui/numeric/numeric-cast_fixed.rs:54:5: 54:26
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast_fixed.rs:54:5: 54:17
                                         // + literal: Const { ty: fn(isize) {foo::<isize>}, val: Value(<ZST>) }
    }

    bb41: {
        _73 = _7;                        // scope 12 at ui/numeric/numeric-cast_fixed.rs:55:18: 55:23
        _72 = <i64 as TryInto<isize>>::try_into(move _73) -> bb42; // scope 12 at ui/numeric/numeric-cast_fixed.rs:55:18: 55:34
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast_fixed.rs:55:24: 55:32
                                         // + literal: Const { ty: fn(i64) -> Result<isize, <i64 as TryInto<isize>>::Error> {<i64 as TryInto<isize>>::try_into}, val: Value(<ZST>) }
    }

    bb42: {
        _71 = Result::<isize, TryFromIntError>::unwrap(move _72) -> bb43; // scope 12 at ui/numeric/numeric-cast_fixed.rs:55:18: 55:43
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast_fixed.rs:55:35: 55:41
                                         // + literal: Const { ty: fn(Result<isize, TryFromIntError>) -> isize {Result::<isize, TryFromIntError>::unwrap}, val: Value(<ZST>) }
    }

    bb43: {
        _70 = foo::<isize>(move _71) -> bb44; // scope 12 at ui/numeric/numeric-cast_fixed.rs:55:5: 55:44
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast_fixed.rs:55:5: 55:17
                                         // + literal: Const { ty: fn(isize) {foo::<isize>}, val: Value(<ZST>) }
    }

    bb44: {
        _77 = _8;                        // scope 12 at ui/numeric/numeric-cast_fixed.rs:57:18: 57:23
        _76 = <i32 as TryInto<isize>>::try_into(move _77) -> bb45; // scope 12 at ui/numeric/numeric-cast_fixed.rs:57:18: 57:34
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast_fixed.rs:57:24: 57:32
                                         // + literal: Const { ty: fn(i32) -> Result<isize, <i32 as TryInto<isize>>::Error> {<i32 as TryInto<isize>>::try_into}, val: Value(<ZST>) }
    }

    bb45: {
        _75 = Result::<isize, TryFromIntError>::unwrap(move _76) -> bb46; // scope 12 at ui/numeric/numeric-cast_fixed.rs:57:18: 57:43
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast_fixed.rs:57:35: 57:41
                                         // + literal: Const { ty: fn(Result<isize, TryFromIntError>) -> isize {Result::<isize, TryFromIntError>::unwrap}, val: Value(<ZST>) }
    }

    bb46: {
        _74 = foo::<isize>(move _75) -> bb47; // scope 12 at ui/numeric/numeric-cast_fixed.rs:57:5: 57:44
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast_fixed.rs:57:5: 57:17
                                         // + literal: Const { ty: fn(isize) {foo::<isize>}, val: Value(<ZST>) }
    }

    bb47: {
        _80 = _9;                        // scope 12 at ui/numeric/numeric-cast_fixed.rs:59:18: 59:23
        _79 = <i16 as Into<isize>>::into(move _80) -> bb48; // scope 12 at ui/numeric/numeric-cast_fixed.rs:59:18: 59:30
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast_fixed.rs:59:24: 59:28
                                         // + literal: Const { ty: fn(i16) -> isize {<i16 as Into<isize>>::into}, val: Value(<ZST>) }
    }

    bb48: {
        _78 = foo::<isize>(move _79) -> bb49; // scope 12 at ui/numeric/numeric-cast_fixed.rs:59:5: 59:31
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast_fixed.rs:59:5: 59:17
                                         // + literal: Const { ty: fn(isize) {foo::<isize>}, val: Value(<ZST>) }
    }

    bb49: {
        _83 = _10;                       // scope 12 at ui/numeric/numeric-cast_fixed.rs:61:18: 61:22
        _82 = <i8 as Into<isize>>::into(move _83) -> bb50; // scope 12 at ui/numeric/numeric-cast_fixed.rs:61:18: 61:29
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast_fixed.rs:61:23: 61:27
                                         // + literal: Const { ty: fn(i8) -> isize {<i8 as Into<isize>>::into}, val: Value(<ZST>) }
    }

    bb50: {
        _81 = foo::<isize>(move _82) -> bb51; // scope 12 at ui/numeric/numeric-cast_fixed.rs:61:5: 61:30
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast_fixed.rs:61:5: 61:17
                                         // + literal: Const { ty: fn(isize) {foo::<isize>}, val: Value(<ZST>) }
    }

    bb51: {
        _87 = _1;                        // scope 12 at ui/numeric/numeric-cast_fixed.rs:66:16: 66:23
        _86 = <usize as TryInto<u64>>::try_into(move _87) -> bb52; // scope 12 at ui/numeric/numeric-cast_fixed.rs:66:16: 66:34
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast_fixed.rs:66:24: 66:32
                                         // + literal: Const { ty: fn(usize) -> Result<u64, <usize as TryInto<u64>>::Error> {<usize as TryInto<u64>>::try_into}, val: Value(<ZST>) }
    }

    bb52: {
        _85 = Result::<u64, TryFromIntError>::unwrap(move _86) -> bb53; // scope 12 at ui/numeric/numeric-cast_fixed.rs:66:16: 66:43
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast_fixed.rs:66:35: 66:41
                                         // + literal: Const { ty: fn(Result<u64, TryFromIntError>) -> u64 {Result::<u64, TryFromIntError>::unwrap}, val: Value(<ZST>) }
    }

    bb53: {
        _84 = foo::<u64>(move _85) -> bb54; // scope 12 at ui/numeric/numeric-cast_fixed.rs:66:5: 66:44
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast_fixed.rs:66:5: 66:15
                                         // + literal: Const { ty: fn(u64) {foo::<u64>}, val: Value(<ZST>) }
    }

    bb54: {
        _89 = _2;                        // scope 12 at ui/numeric/numeric-cast_fixed.rs:68:16: 68:21
        _88 = foo::<u64>(move _89) -> bb55; // scope 12 at ui/numeric/numeric-cast_fixed.rs:68:5: 68:22
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast_fixed.rs:68:5: 68:15
                                         // + literal: Const { ty: fn(u64) {foo::<u64>}, val: Value(<ZST>) }
    }

    bb55: {
        _92 = _3;                        // scope 12 at ui/numeric/numeric-cast_fixed.rs:69:16: 69:21
        _91 = <u32 as Into<u64>>::into(move _92) -> bb56; // scope 12 at ui/numeric/numeric-cast_fixed.rs:69:16: 69:28
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast_fixed.rs:69:22: 69:26
                                         // + literal: Const { ty: fn(u32) -> u64 {<u32 as Into<u64>>::into}, val: Value(<ZST>) }
    }

    bb56: {
        _90 = foo::<u64>(move _91) -> bb57; // scope 12 at ui/numeric/numeric-cast_fixed.rs:69:5: 69:29
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast_fixed.rs:69:5: 69:15
                                         // + literal: Const { ty: fn(u64) {foo::<u64>}, val: Value(<ZST>) }
    }

    bb57: {
        _95 = _4;                        // scope 12 at ui/numeric/numeric-cast_fixed.rs:71:16: 71:21
        _94 = <u16 as Into<u64>>::into(move _95) -> bb58; // scope 12 at ui/numeric/numeric-cast_fixed.rs:71:16: 71:28
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast_fixed.rs:71:22: 71:26
                                         // + literal: Const { ty: fn(u16) -> u64 {<u16 as Into<u64>>::into}, val: Value(<ZST>) }
    }

    bb58: {
        _93 = foo::<u64>(move _94) -> bb59; // scope 12 at ui/numeric/numeric-cast_fixed.rs:71:5: 71:29
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast_fixed.rs:71:5: 71:15
                                         // + literal: Const { ty: fn(u64) {foo::<u64>}, val: Value(<ZST>) }
    }

    bb59: {
        _98 = _5;                        // scope 12 at ui/numeric/numeric-cast_fixed.rs:73:16: 73:20
        _97 = <u8 as Into<u64>>::into(move _98) -> bb60; // scope 12 at ui/numeric/numeric-cast_fixed.rs:73:16: 73:27
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast_fixed.rs:73:21: 73:25
                                         // + literal: Const { ty: fn(u8) -> u64 {<u8 as Into<u64>>::into}, val: Value(<ZST>) }
    }

    bb60: {
        _96 = foo::<u64>(move _97) -> bb61; // scope 12 at ui/numeric/numeric-cast_fixed.rs:73:5: 73:28
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast_fixed.rs:73:5: 73:15
                                         // + literal: Const { ty: fn(u64) {foo::<u64>}, val: Value(<ZST>) }
    }

    bb61: {
        _102 = _6;                       // scope 12 at ui/numeric/numeric-cast_fixed.rs:75:16: 75:23
        _101 = <isize as TryInto<u64>>::try_into(move _102) -> bb62; // scope 12 at ui/numeric/numeric-cast_fixed.rs:75:16: 75:34
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast_fixed.rs:75:24: 75:32
                                         // + literal: Const { ty: fn(isize) -> Result<u64, <isize as TryInto<u64>>::Error> {<isize as TryInto<u64>>::try_into}, val: Value(<ZST>) }
    }

    bb62: {
        _100 = Result::<u64, TryFromIntError>::unwrap(move _101) -> bb63; // scope 12 at ui/numeric/numeric-cast_fixed.rs:75:16: 75:43
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast_fixed.rs:75:35: 75:41
                                         // + literal: Const { ty: fn(Result<u64, TryFromIntError>) -> u64 {Result::<u64, TryFromIntError>::unwrap}, val: Value(<ZST>) }
    }

    bb63: {
        _99 = foo::<u64>(move _100) -> bb64; // scope 12 at ui/numeric/numeric-cast_fixed.rs:75:5: 75:44
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast_fixed.rs:75:5: 75:15
                                         // + literal: Const { ty: fn(u64) {foo::<u64>}, val: Value(<ZST>) }
    }

    bb64: {
        _106 = _7;                       // scope 12 at ui/numeric/numeric-cast_fixed.rs:77:16: 77:21
        _105 = <i64 as TryInto<u64>>::try_into(move _106) -> bb65; // scope 12 at ui/numeric/numeric-cast_fixed.rs:77:16: 77:32
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast_fixed.rs:77:22: 77:30
                                         // + literal: Const { ty: fn(i64) -> Result<u64, <i64 as TryInto<u64>>::Error> {<i64 as TryInto<u64>>::try_into}, val: Value(<ZST>) }
    }

    bb65: {
        _104 = Result::<u64, TryFromIntError>::unwrap(move _105) -> bb66; // scope 12 at ui/numeric/numeric-cast_fixed.rs:77:16: 77:41
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast_fixed.rs:77:33: 77:39
                                         // + literal: Const { ty: fn(Result<u64, TryFromIntError>) -> u64 {Result::<u64, TryFromIntError>::unwrap}, val: Value(<ZST>) }
    }

    bb66: {
        _103 = foo::<u64>(move _104) -> bb67; // scope 12 at ui/numeric/numeric-cast_fixed.rs:77:5: 77:42
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast_fixed.rs:77:5: 77:15
                                         // + literal: Const { ty: fn(u64) {foo::<u64>}, val: Value(<ZST>) }
    }

    bb67: {
        _110 = _8;                       // scope 12 at ui/numeric/numeric-cast_fixed.rs:79:16: 79:21
        _109 = <i32 as TryInto<u64>>::try_into(move _110) -> bb68; // scope 12 at ui/numeric/numeric-cast_fixed.rs:79:16: 79:32
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast_fixed.rs:79:22: 79:30
                                         // + literal: Const { ty: fn(i32) -> Result<u64, <i32 as TryInto<u64>>::Error> {<i32 as TryInto<u64>>::try_into}, val: Value(<ZST>) }
    }

    bb68: {
        _108 = Result::<u64, TryFromIntError>::unwrap(move _109) -> bb69; // scope 12 at ui/numeric/numeric-cast_fixed.rs:79:16: 79:41
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast_fixed.rs:79:33: 79:39
                                         // + literal: Const { ty: fn(Result<u64, TryFromIntError>) -> u64 {Result::<u64, TryFromIntError>::unwrap}, val: Value(<ZST>) }
    }

    bb69: {
        _107 = foo::<u64>(move _108) -> bb70; // scope 12 at ui/numeric/numeric-cast_fixed.rs:79:5: 79:42
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast_fixed.rs:79:5: 79:15
                                         // + literal: Const { ty: fn(u64) {foo::<u64>}, val: Value(<ZST>) }
    }

    bb70: {
        _114 = _9;                       // scope 12 at ui/numeric/numeric-cast_fixed.rs:81:16: 81:21
        _113 = <i16 as TryInto<u64>>::try_into(move _114) -> bb71; // scope 12 at ui/numeric/numeric-cast_fixed.rs:81:16: 81:32
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast_fixed.rs:81:22: 81:30
                                         // + literal: Const { ty: fn(i16) -> Result<u64, <i16 as TryInto<u64>>::Error> {<i16 as TryInto<u64>>::try_into}, val: Value(<ZST>) }
    }

    bb71: {
        _112 = Result::<u64, TryFromIntError>::unwrap(move _113) -> bb72; // scope 12 at ui/numeric/numeric-cast_fixed.rs:81:16: 81:41
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast_fixed.rs:81:33: 81:39
                                         // + literal: Const { ty: fn(Result<u64, TryFromIntError>) -> u64 {Result::<u64, TryFromIntError>::unwrap}, val: Value(<ZST>) }
    }

    bb72: {
        _111 = foo::<u64>(move _112) -> bb73; // scope 12 at ui/numeric/numeric-cast_fixed.rs:81:5: 81:42
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast_fixed.rs:81:5: 81:15
                                         // + literal: Const { ty: fn(u64) {foo::<u64>}, val: Value(<ZST>) }
    }

    bb73: {
        _118 = _10;                      // scope 12 at ui/numeric/numeric-cast_fixed.rs:83:16: 83:20
        _117 = <i8 as TryInto<u64>>::try_into(move _118) -> bb74; // scope 12 at ui/numeric/numeric-cast_fixed.rs:83:16: 83:31
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast_fixed.rs:83:21: 83:29
                                         // + literal: Const { ty: fn(i8) -> Result<u64, <i8 as TryInto<u64>>::Error> {<i8 as TryInto<u64>>::try_into}, val: Value(<ZST>) }
    }

    bb74: {
        _116 = Result::<u64, TryFromIntError>::unwrap(move _117) -> bb75; // scope 12 at ui/numeric/numeric-cast_fixed.rs:83:16: 83:40
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast_fixed.rs:83:32: 83:38
                                         // + literal: Const { ty: fn(Result<u64, TryFromIntError>) -> u64 {Result::<u64, TryFromIntError>::unwrap}, val: Value(<ZST>) }
    }

    bb75: {
        _115 = foo::<u64>(move _116) -> bb76; // scope 12 at ui/numeric/numeric-cast_fixed.rs:83:5: 83:41
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast_fixed.rs:83:5: 83:15
                                         // + literal: Const { ty: fn(u64) {foo::<u64>}, val: Value(<ZST>) }
    }

    bb76: {
        _122 = _1;                       // scope 12 at ui/numeric/numeric-cast_fixed.rs:88:16: 88:23
        _121 = <usize as TryInto<i64>>::try_into(move _122) -> bb77; // scope 12 at ui/numeric/numeric-cast_fixed.rs:88:16: 88:34
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast_fixed.rs:88:24: 88:32
                                         // + literal: Const { ty: fn(usize) -> Result<i64, <usize as TryInto<i64>>::Error> {<usize as TryInto<i64>>::try_into}, val: Value(<ZST>) }
    }

    bb77: {
        _120 = Result::<i64, TryFromIntError>::unwrap(move _121) -> bb78; // scope 12 at ui/numeric/numeric-cast_fixed.rs:88:16: 88:43
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast_fixed.rs:88:35: 88:41
                                         // + literal: Const { ty: fn(Result<i64, TryFromIntError>) -> i64 {Result::<i64, TryFromIntError>::unwrap}, val: Value(<ZST>) }
    }

    bb78: {
        _119 = foo::<i64>(move _120) -> bb79; // scope 12 at ui/numeric/numeric-cast_fixed.rs:88:5: 88:44
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast_fixed.rs:88:5: 88:15
                                         // + literal: Const { ty: fn(i64) {foo::<i64>}, val: Value(<ZST>) }
    }

    bb79: {
        _126 = _2;                       // scope 12 at ui/numeric/numeric-cast_fixed.rs:90:16: 90:21
        _125 = <u64 as TryInto<i64>>::try_into(move _126) -> bb80; // scope 12 at ui/numeric/numeric-cast_fixed.rs:90:16: 90:32
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast_fixed.rs:90:22: 90:30
                                         // + literal: Const { ty: fn(u64) -> Result<i64, <u64 as TryInto<i64>>::Error> {<u64 as TryInto<i64>>::try_into}, val: Value(<ZST>) }
    }

    bb80: {
        _124 = Result::<i64, TryFromIntError>::unwrap(move _125) -> bb81; // scope 12 at ui/numeric/numeric-cast_fixed.rs:90:16: 90:41
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast_fixed.rs:90:33: 90:39
                                         // + literal: Const { ty: fn(Result<i64, TryFromIntError>) -> i64 {Result::<i64, TryFromIntError>::unwrap}, val: Value(<ZST>) }
    }

    bb81: {
        _123 = foo::<i64>(move _124) -> bb82; // scope 12 at ui/numeric/numeric-cast_fixed.rs:90:5: 90:42
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast_fixed.rs:90:5: 90:15
                                         // + literal: Const { ty: fn(i64) {foo::<i64>}, val: Value(<ZST>) }
    }

    bb82: {
        _129 = _3;                       // scope 12 at ui/numeric/numeric-cast_fixed.rs:92:16: 92:21
        _128 = <u32 as Into<i64>>::into(move _129) -> bb83; // scope 12 at ui/numeric/numeric-cast_fixed.rs:92:16: 92:28
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast_fixed.rs:92:22: 92:26
                                         // + literal: Const { ty: fn(u32) -> i64 {<u32 as Into<i64>>::into}, val: Value(<ZST>) }
    }

    bb83: {
        _127 = foo::<i64>(move _128) -> bb84; // scope 12 at ui/numeric/numeric-cast_fixed.rs:92:5: 92:29
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast_fixed.rs:92:5: 92:15
                                         // + literal: Const { ty: fn(i64) {foo::<i64>}, val: Value(<ZST>) }
    }

    bb84: {
        _132 = _4;                       // scope 12 at ui/numeric/numeric-cast_fixed.rs:94:16: 94:21
        _131 = <u16 as Into<i64>>::into(move _132) -> bb85; // scope 12 at ui/numeric/numeric-cast_fixed.rs:94:16: 94:28
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast_fixed.rs:94:22: 94:26
                                         // + literal: Const { ty: fn(u16) -> i64 {<u16 as Into<i64>>::into}, val: Value(<ZST>) }
    }

    bb85: {
        _130 = foo::<i64>(move _131) -> bb86; // scope 12 at ui/numeric/numeric-cast_fixed.rs:94:5: 94:29
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast_fixed.rs:94:5: 94:15
                                         // + literal: Const { ty: fn(i64) {foo::<i64>}, val: Value(<ZST>) }
    }

    bb86: {
        _135 = _5;                       // scope 12 at ui/numeric/numeric-cast_fixed.rs:96:16: 96:20
        _134 = <u8 as Into<i64>>::into(move _135) -> bb87; // scope 12 at ui/numeric/numeric-cast_fixed.rs:96:16: 96:27
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast_fixed.rs:96:21: 96:25
                                         // + literal: Const { ty: fn(u8) -> i64 {<u8 as Into<i64>>::into}, val: Value(<ZST>) }
    }

    bb87: {
        _133 = foo::<i64>(move _134) -> bb88; // scope 12 at ui/numeric/numeric-cast_fixed.rs:96:5: 96:28
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast_fixed.rs:96:5: 96:15
                                         // + literal: Const { ty: fn(i64) {foo::<i64>}, val: Value(<ZST>) }
    }

    bb88: {
        _139 = _6;                       // scope 12 at ui/numeric/numeric-cast_fixed.rs:98:16: 98:23
        _138 = <isize as TryInto<i64>>::try_into(move _139) -> bb89; // scope 12 at ui/numeric/numeric-cast_fixed.rs:98:16: 98:34
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast_fixed.rs:98:24: 98:32
                                         // + literal: Const { ty: fn(isize) -> Result<i64, <isize as TryInto<i64>>::Error> {<isize as TryInto<i64>>::try_into}, val: Value(<ZST>) }
    }

    bb89: {
        _137 = Result::<i64, TryFromIntError>::unwrap(move _138) -> bb90; // scope 12 at ui/numeric/numeric-cast_fixed.rs:98:16: 98:43
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast_fixed.rs:98:35: 98:41
                                         // + literal: Const { ty: fn(Result<i64, TryFromIntError>) -> i64 {Result::<i64, TryFromIntError>::unwrap}, val: Value(<ZST>) }
    }

    bb90: {
        _136 = foo::<i64>(move _137) -> bb91; // scope 12 at ui/numeric/numeric-cast_fixed.rs:98:5: 98:44
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast_fixed.rs:98:5: 98:15
                                         // + literal: Const { ty: fn(i64) {foo::<i64>}, val: Value(<ZST>) }
    }

    bb91: {
        _141 = _7;                       // scope 12 at ui/numeric/numeric-cast_fixed.rs:100:16: 100:21
        _140 = foo::<i64>(move _141) -> bb92; // scope 12 at ui/numeric/numeric-cast_fixed.rs:100:5: 100:22
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast_fixed.rs:100:5: 100:15
                                         // + literal: Const { ty: fn(i64) {foo::<i64>}, val: Value(<ZST>) }
    }

    bb92: {
        _144 = _8;                       // scope 12 at ui/numeric/numeric-cast_fixed.rs:101:16: 101:21
        _143 = <i32 as Into<i64>>::into(move _144) -> bb93; // scope 12 at ui/numeric/numeric-cast_fixed.rs:101:16: 101:28
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast_fixed.rs:101:22: 101:26
                                         // + literal: Const { ty: fn(i32) -> i64 {<i32 as Into<i64>>::into}, val: Value(<ZST>) }
    }

    bb93: {
        _142 = foo::<i64>(move _143) -> bb94; // scope 12 at ui/numeric/numeric-cast_fixed.rs:101:5: 101:29
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast_fixed.rs:101:5: 101:15
                                         // + literal: Const { ty: fn(i64) {foo::<i64>}, val: Value(<ZST>) }
    }

    bb94: {
        _147 = _9;                       // scope 12 at ui/numeric/numeric-cast_fixed.rs:103:16: 103:21
        _146 = <i16 as Into<i64>>::into(move _147) -> bb95; // scope 12 at ui/numeric/numeric-cast_fixed.rs:103:16: 103:28
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast_fixed.rs:103:22: 103:26
                                         // + literal: Const { ty: fn(i16) -> i64 {<i16 as Into<i64>>::into}, val: Value(<ZST>) }
    }

    bb95: {
        _145 = foo::<i64>(move _146) -> bb96; // scope 12 at ui/numeric/numeric-cast_fixed.rs:103:5: 103:29
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast_fixed.rs:103:5: 103:15
                                         // + literal: Const { ty: fn(i64) {foo::<i64>}, val: Value(<ZST>) }
    }

    bb96: {
        _150 = _10;                      // scope 12 at ui/numeric/numeric-cast_fixed.rs:105:16: 105:20
        _149 = <i8 as Into<i64>>::into(move _150) -> bb97; // scope 12 at ui/numeric/numeric-cast_fixed.rs:105:16: 105:27
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast_fixed.rs:105:21: 105:25
                                         // + literal: Const { ty: fn(i8) -> i64 {<i8 as Into<i64>>::into}, val: Value(<ZST>) }
    }

    bb97: {
        _148 = foo::<i64>(move _149) -> bb98; // scope 12 at ui/numeric/numeric-cast_fixed.rs:105:5: 105:28
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast_fixed.rs:105:5: 105:15
                                         // + literal: Const { ty: fn(i64) {foo::<i64>}, val: Value(<ZST>) }
    }

    bb98: {
        _154 = _1;                       // scope 12 at ui/numeric/numeric-cast_fixed.rs:110:16: 110:23
        _153 = <usize as TryInto<u32>>::try_into(move _154) -> bb99; // scope 12 at ui/numeric/numeric-cast_fixed.rs:110:16: 110:34
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast_fixed.rs:110:24: 110:32
                                         // + literal: Const { ty: fn(usize) -> Result<u32, <usize as TryInto<u32>>::Error> {<usize as TryInto<u32>>::try_into}, val: Value(<ZST>) }
    }

    bb99: {
        _152 = Result::<u32, TryFromIntError>::unwrap(move _153) -> bb100; // scope 12 at ui/numeric/numeric-cast_fixed.rs:110:16: 110:43
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast_fixed.rs:110:35: 110:41
                                         // + literal: Const { ty: fn(Result<u32, TryFromIntError>) -> u32 {Result::<u32, TryFromIntError>::unwrap}, val: Value(<ZST>) }
    }

    bb100: {
        _151 = foo::<u32>(move _152) -> bb101; // scope 12 at ui/numeric/numeric-cast_fixed.rs:110:5: 110:44
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast_fixed.rs:110:5: 110:15
                                         // + literal: Const { ty: fn(u32) {foo::<u32>}, val: Value(<ZST>) }
    }

    bb101: {
        _158 = _2;                       // scope 12 at ui/numeric/numeric-cast_fixed.rs:112:16: 112:21
        _157 = <u64 as TryInto<u32>>::try_into(move _158) -> bb102; // scope 12 at ui/numeric/numeric-cast_fixed.rs:112:16: 112:32
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast_fixed.rs:112:22: 112:30
                                         // + literal: Const { ty: fn(u64) -> Result<u32, <u64 as TryInto<u32>>::Error> {<u64 as TryInto<u32>>::try_into}, val: Value(<ZST>) }
    }

    bb102: {
        _156 = Result::<u32, TryFromIntError>::unwrap(move _157) -> bb103; // scope 12 at ui/numeric/numeric-cast_fixed.rs:112:16: 112:41
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast_fixed.rs:112:33: 112:39
                                         // + literal: Const { ty: fn(Result<u32, TryFromIntError>) -> u32 {Result::<u32, TryFromIntError>::unwrap}, val: Value(<ZST>) }
    }

    bb103: {
        _155 = foo::<u32>(move _156) -> bb104; // scope 12 at ui/numeric/numeric-cast_fixed.rs:112:5: 112:42
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast_fixed.rs:112:5: 112:15
                                         // + literal: Const { ty: fn(u32) {foo::<u32>}, val: Value(<ZST>) }
    }

    bb104: {
        _160 = _3;                       // scope 12 at ui/numeric/numeric-cast_fixed.rs:114:16: 114:21
        _159 = foo::<u32>(move _160) -> bb105; // scope 12 at ui/numeric/numeric-cast_fixed.rs:114:5: 114:22
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast_fixed.rs:114:5: 114:15
                                         // + literal: Const { ty: fn(u32) {foo::<u32>}, val: Value(<ZST>) }
    }

    bb105: {
        _163 = _4;                       // scope 12 at ui/numeric/numeric-cast_fixed.rs:115:16: 115:21
        _162 = <u16 as Into<u32>>::into(move _163) -> bb106; // scope 12 at ui/numeric/numeric-cast_fixed.rs:115:16: 115:28
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast_fixed.rs:115:22: 115:26
                                         // + literal: Const { ty: fn(u16) -> u32 {<u16 as Into<u32>>::into}, val: Value(<ZST>) }
    }

    bb106: {
        _161 = foo::<u32>(move _162) -> bb107; // scope 12 at ui/numeric/numeric-cast_fixed.rs:115:5: 115:29
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast_fixed.rs:115:5: 115:15
                                         // + literal: Const { ty: fn(u32) {foo::<u32>}, val: Value(<ZST>) }
    }

    bb107: {
        _166 = _5;                       // scope 12 at ui/numeric/numeric-cast_fixed.rs:117:16: 117:20
        _165 = <u8 as Into<u32>>::into(move _166) -> bb108; // scope 12 at ui/numeric/numeric-cast_fixed.rs:117:16: 117:27
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast_fixed.rs:117:21: 117:25
                                         // + literal: Const { ty: fn(u8) -> u32 {<u8 as Into<u32>>::into}, val: Value(<ZST>) }
    }

    bb108: {
        _164 = foo::<u32>(move _165) -> bb109; // scope 12 at ui/numeric/numeric-cast_fixed.rs:117:5: 117:28
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast_fixed.rs:117:5: 117:15
                                         // + literal: Const { ty: fn(u32) {foo::<u32>}, val: Value(<ZST>) }
    }

    bb109: {
        _170 = _6;                       // scope 12 at ui/numeric/numeric-cast_fixed.rs:119:16: 119:23
        _169 = <isize as TryInto<u32>>::try_into(move _170) -> bb110; // scope 12 at ui/numeric/numeric-cast_fixed.rs:119:16: 119:34
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast_fixed.rs:119:24: 119:32
                                         // + literal: Const { ty: fn(isize) -> Result<u32, <isize as TryInto<u32>>::Error> {<isize as TryInto<u32>>::try_into}, val: Value(<ZST>) }
    }

    bb110: {
        _168 = Result::<u32, TryFromIntError>::unwrap(move _169) -> bb111; // scope 12 at ui/numeric/numeric-cast_fixed.rs:119:16: 119:43
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast_fixed.rs:119:35: 119:41
                                         // + literal: Const { ty: fn(Result<u32, TryFromIntError>) -> u32 {Result::<u32, TryFromIntError>::unwrap}, val: Value(<ZST>) }
    }

    bb111: {
        _167 = foo::<u32>(move _168) -> bb112; // scope 12 at ui/numeric/numeric-cast_fixed.rs:119:5: 119:44
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast_fixed.rs:119:5: 119:15
                                         // + literal: Const { ty: fn(u32) {foo::<u32>}, val: Value(<ZST>) }
    }

    bb112: {
        _174 = _7;                       // scope 12 at ui/numeric/numeric-cast_fixed.rs:121:16: 121:21
        _173 = <i64 as TryInto<u32>>::try_into(move _174) -> bb113; // scope 12 at ui/numeric/numeric-cast_fixed.rs:121:16: 121:32
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast_fixed.rs:121:22: 121:30
                                         // + literal: Const { ty: fn(i64) -> Result<u32, <i64 as TryInto<u32>>::Error> {<i64 as TryInto<u32>>::try_into}, val: Value(<ZST>) }
    }

    bb113: {
        _172 = Result::<u32, TryFromIntError>::unwrap(move _173) -> bb114; // scope 12 at ui/numeric/numeric-cast_fixed.rs:121:16: 121:41
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast_fixed.rs:121:33: 121:39
                                         // + literal: Const { ty: fn(Result<u32, TryFromIntError>) -> u32 {Result::<u32, TryFromIntError>::unwrap}, val: Value(<ZST>) }
    }

    bb114: {
        _171 = foo::<u32>(move _172) -> bb115; // scope 12 at ui/numeric/numeric-cast_fixed.rs:121:5: 121:42
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast_fixed.rs:121:5: 121:15
                                         // + literal: Const { ty: fn(u32) {foo::<u32>}, val: Value(<ZST>) }
    }

    bb115: {
        _178 = _8;                       // scope 12 at ui/numeric/numeric-cast_fixed.rs:123:16: 123:21
        _177 = <i32 as TryInto<u32>>::try_into(move _178) -> bb116; // scope 12 at ui/numeric/numeric-cast_fixed.rs:123:16: 123:32
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast_fixed.rs:123:22: 123:30
                                         // + literal: Const { ty: fn(i32) -> Result<u32, <i32 as TryInto<u32>>::Error> {<i32 as TryInto<u32>>::try_into}, val: Value(<ZST>) }
    }

    bb116: {
        _176 = Result::<u32, TryFromIntError>::unwrap(move _177) -> bb117; // scope 12 at ui/numeric/numeric-cast_fixed.rs:123:16: 123:41
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast_fixed.rs:123:33: 123:39
                                         // + literal: Const { ty: fn(Result<u32, TryFromIntError>) -> u32 {Result::<u32, TryFromIntError>::unwrap}, val: Value(<ZST>) }
    }

    bb117: {
        _175 = foo::<u32>(move _176) -> bb118; // scope 12 at ui/numeric/numeric-cast_fixed.rs:123:5: 123:42
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast_fixed.rs:123:5: 123:15
                                         // + literal: Const { ty: fn(u32) {foo::<u32>}, val: Value(<ZST>) }
    }

    bb118: {
        _182 = _9;                       // scope 12 at ui/numeric/numeric-cast_fixed.rs:125:16: 125:21
        _181 = <i16 as TryInto<u32>>::try_into(move _182) -> bb119; // scope 12 at ui/numeric/numeric-cast_fixed.rs:125:16: 125:32
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast_fixed.rs:125:22: 125:30
                                         // + literal: Const { ty: fn(i16) -> Result<u32, <i16 as TryInto<u32>>::Error> {<i16 as TryInto<u32>>::try_into}, val: Value(<ZST>) }
    }

    bb119: {
        _180 = Result::<u32, TryFromIntError>::unwrap(move _181) -> bb120; // scope 12 at ui/numeric/numeric-cast_fixed.rs:125:16: 125:41
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast_fixed.rs:125:33: 125:39
                                         // + literal: Const { ty: fn(Result<u32, TryFromIntError>) -> u32 {Result::<u32, TryFromIntError>::unwrap}, val: Value(<ZST>) }
    }

    bb120: {
        _179 = foo::<u32>(move _180) -> bb121; // scope 12 at ui/numeric/numeric-cast_fixed.rs:125:5: 125:42
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast_fixed.rs:125:5: 125:15
                                         // + literal: Const { ty: fn(u32) {foo::<u32>}, val: Value(<ZST>) }
    }

    bb121: {
        _186 = _10;                      // scope 12 at ui/numeric/numeric-cast_fixed.rs:127:16: 127:20
        _185 = <i8 as TryInto<u32>>::try_into(move _186) -> bb122; // scope 12 at ui/numeric/numeric-cast_fixed.rs:127:16: 127:31
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast_fixed.rs:127:21: 127:29
                                         // + literal: Const { ty: fn(i8) -> Result<u32, <i8 as TryInto<u32>>::Error> {<i8 as TryInto<u32>>::try_into}, val: Value(<ZST>) }
    }

    bb122: {
        _184 = Result::<u32, TryFromIntError>::unwrap(move _185) -> bb123; // scope 12 at ui/numeric/numeric-cast_fixed.rs:127:16: 127:40
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast_fixed.rs:127:32: 127:38
                                         // + literal: Const { ty: fn(Result<u32, TryFromIntError>) -> u32 {Result::<u32, TryFromIntError>::unwrap}, val: Value(<ZST>) }
    }

    bb123: {
        _183 = foo::<u32>(move _184) -> bb124; // scope 12 at ui/numeric/numeric-cast_fixed.rs:127:5: 127:41
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast_fixed.rs:127:5: 127:15
                                         // + literal: Const { ty: fn(u32) {foo::<u32>}, val: Value(<ZST>) }
    }

    bb124: {
        _190 = _1;                       // scope 12 at ui/numeric/numeric-cast_fixed.rs:132:16: 132:23
        _189 = <usize as TryInto<i32>>::try_into(move _190) -> bb125; // scope 12 at ui/numeric/numeric-cast_fixed.rs:132:16: 132:34
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast_fixed.rs:132:24: 132:32
                                         // + literal: Const { ty: fn(usize) -> Result<i32, <usize as TryInto<i32>>::Error> {<usize as TryInto<i32>>::try_into}, val: Value(<ZST>) }
    }

    bb125: {
        _188 = Result::<i32, TryFromIntError>::unwrap(move _189) -> bb126; // scope 12 at ui/numeric/numeric-cast_fixed.rs:132:16: 132:43
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast_fixed.rs:132:35: 132:41
                                         // + literal: Const { ty: fn(Result<i32, TryFromIntError>) -> i32 {Result::<i32, TryFromIntError>::unwrap}, val: Value(<ZST>) }
    }

    bb126: {
        _187 = foo::<i32>(move _188) -> bb127; // scope 12 at ui/numeric/numeric-cast_fixed.rs:132:5: 132:44
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast_fixed.rs:132:5: 132:15
                                         // + literal: Const { ty: fn(i32) {foo::<i32>}, val: Value(<ZST>) }
    }

    bb127: {
        _194 = _2;                       // scope 12 at ui/numeric/numeric-cast_fixed.rs:134:16: 134:21
        _193 = <u64 as TryInto<i32>>::try_into(move _194) -> bb128; // scope 12 at ui/numeric/numeric-cast_fixed.rs:134:16: 134:32
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast_fixed.rs:134:22: 134:30
                                         // + literal: Const { ty: fn(u64) -> Result<i32, <u64 as TryInto<i32>>::Error> {<u64 as TryInto<i32>>::try_into}, val: Value(<ZST>) }
    }

    bb128: {
        _192 = Result::<i32, TryFromIntError>::unwrap(move _193) -> bb129; // scope 12 at ui/numeric/numeric-cast_fixed.rs:134:16: 134:41
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast_fixed.rs:134:33: 134:39
                                         // + literal: Const { ty: fn(Result<i32, TryFromIntError>) -> i32 {Result::<i32, TryFromIntError>::unwrap}, val: Value(<ZST>) }
    }

    bb129: {
        _191 = foo::<i32>(move _192) -> bb130; // scope 12 at ui/numeric/numeric-cast_fixed.rs:134:5: 134:42
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast_fixed.rs:134:5: 134:15
                                         // + literal: Const { ty: fn(i32) {foo::<i32>}, val: Value(<ZST>) }
    }

    bb130: {
        _198 = _3;                       // scope 12 at ui/numeric/numeric-cast_fixed.rs:136:16: 136:21
        _197 = <u32 as TryInto<i32>>::try_into(move _198) -> bb131; // scope 12 at ui/numeric/numeric-cast_fixed.rs:136:16: 136:32
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast_fixed.rs:136:22: 136:30
                                         // + literal: Const { ty: fn(u32) -> Result<i32, <u32 as TryInto<i32>>::Error> {<u32 as TryInto<i32>>::try_into}, val: Value(<ZST>) }
    }

    bb131: {
        _196 = Result::<i32, TryFromIntError>::unwrap(move _197) -> bb132; // scope 12 at ui/numeric/numeric-cast_fixed.rs:136:16: 136:41
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast_fixed.rs:136:33: 136:39
                                         // + literal: Const { ty: fn(Result<i32, TryFromIntError>) -> i32 {Result::<i32, TryFromIntError>::unwrap}, val: Value(<ZST>) }
    }

    bb132: {
        _195 = foo::<i32>(move _196) -> bb133; // scope 12 at ui/numeric/numeric-cast_fixed.rs:136:5: 136:42
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast_fixed.rs:136:5: 136:15
                                         // + literal: Const { ty: fn(i32) {foo::<i32>}, val: Value(<ZST>) }
    }

    bb133: {
        _201 = _4;                       // scope 12 at ui/numeric/numeric-cast_fixed.rs:138:16: 138:21
        _200 = <u16 as Into<i32>>::into(move _201) -> bb134; // scope 12 at ui/numeric/numeric-cast_fixed.rs:138:16: 138:28
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast_fixed.rs:138:22: 138:26
                                         // + literal: Const { ty: fn(u16) -> i32 {<u16 as Into<i32>>::into}, val: Value(<ZST>) }
    }

    bb134: {
        _199 = foo::<i32>(move _200) -> bb135; // scope 12 at ui/numeric/numeric-cast_fixed.rs:138:5: 138:29
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast_fixed.rs:138:5: 138:15
                                         // + literal: Const { ty: fn(i32) {foo::<i32>}, val: Value(<ZST>) }
    }

    bb135: {
        _204 = _5;                       // scope 12 at ui/numeric/numeric-cast_fixed.rs:140:16: 140:20
        _203 = <u8 as Into<i32>>::into(move _204) -> bb136; // scope 12 at ui/numeric/numeric-cast_fixed.rs:140:16: 140:27
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast_fixed.rs:140:21: 140:25
                                         // + literal: Const { ty: fn(u8) -> i32 {<u8 as Into<i32>>::into}, val: Value(<ZST>) }
    }

    bb136: {
        _202 = foo::<i32>(move _203) -> bb137; // scope 12 at ui/numeric/numeric-cast_fixed.rs:140:5: 140:28
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast_fixed.rs:140:5: 140:15
                                         // + literal: Const { ty: fn(i32) {foo::<i32>}, val: Value(<ZST>) }
    }

    bb137: {
        _208 = _6;                       // scope 12 at ui/numeric/numeric-cast_fixed.rs:142:16: 142:23
        _207 = <isize as TryInto<i32>>::try_into(move _208) -> bb138; // scope 12 at ui/numeric/numeric-cast_fixed.rs:142:16: 142:34
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast_fixed.rs:142:24: 142:32
                                         // + literal: Const { ty: fn(isize) -> Result<i32, <isize as TryInto<i32>>::Error> {<isize as TryInto<i32>>::try_into}, val: Value(<ZST>) }
    }

    bb138: {
        _206 = Result::<i32, TryFromIntError>::unwrap(move _207) -> bb139; // scope 12 at ui/numeric/numeric-cast_fixed.rs:142:16: 142:43
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast_fixed.rs:142:35: 142:41
                                         // + literal: Const { ty: fn(Result<i32, TryFromIntError>) -> i32 {Result::<i32, TryFromIntError>::unwrap}, val: Value(<ZST>) }
    }

    bb139: {
        _205 = foo::<i32>(move _206) -> bb140; // scope 12 at ui/numeric/numeric-cast_fixed.rs:142:5: 142:44
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast_fixed.rs:142:5: 142:15
                                         // + literal: Const { ty: fn(i32) {foo::<i32>}, val: Value(<ZST>) }
    }

    bb140: {
        _212 = _7;                       // scope 12 at ui/numeric/numeric-cast_fixed.rs:144:16: 144:21
        _211 = <i64 as TryInto<i32>>::try_into(move _212) -> bb141; // scope 12 at ui/numeric/numeric-cast_fixed.rs:144:16: 144:32
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast_fixed.rs:144:22: 144:30
                                         // + literal: Const { ty: fn(i64) -> Result<i32, <i64 as TryInto<i32>>::Error> {<i64 as TryInto<i32>>::try_into}, val: Value(<ZST>) }
    }

    bb141: {
        _210 = Result::<i32, TryFromIntError>::unwrap(move _211) -> bb142; // scope 12 at ui/numeric/numeric-cast_fixed.rs:144:16: 144:41
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast_fixed.rs:144:33: 144:39
                                         // + literal: Const { ty: fn(Result<i32, TryFromIntError>) -> i32 {Result::<i32, TryFromIntError>::unwrap}, val: Value(<ZST>) }
    }

    bb142: {
        _209 = foo::<i32>(move _210) -> bb143; // scope 12 at ui/numeric/numeric-cast_fixed.rs:144:5: 144:42
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast_fixed.rs:144:5: 144:15
                                         // + literal: Const { ty: fn(i32) {foo::<i32>}, val: Value(<ZST>) }
    }

    bb143: {
        _214 = _8;                       // scope 12 at ui/numeric/numeric-cast_fixed.rs:146:16: 146:21
        _213 = foo::<i32>(move _214) -> bb144; // scope 12 at ui/numeric/numeric-cast_fixed.rs:146:5: 146:22
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast_fixed.rs:146:5: 146:15
                                         // + literal: Const { ty: fn(i32) {foo::<i32>}, val: Value(<ZST>) }
    }

    bb144: {
        _217 = _9;                       // scope 12 at ui/numeric/numeric-cast_fixed.rs:147:16: 147:21
        _216 = <i16 as Into<i32>>::into(move _217) -> bb145; // scope 12 at ui/numeric/numeric-cast_fixed.rs:147:16: 147:28
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast_fixed.rs:147:22: 147:26
                                         // + literal: Const { ty: fn(i16) -> i32 {<i16 as Into<i32>>::into}, val: Value(<ZST>) }
    }

    bb145: {
        _215 = foo::<i32>(move _216) -> bb146; // scope 12 at ui/numeric/numeric-cast_fixed.rs:147:5: 147:29
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast_fixed.rs:147:5: 147:15
                                         // + literal: Const { ty: fn(i32) {foo::<i32>}, val: Value(<ZST>) }
    }

    bb146: {
        _220 = _10;                      // scope 12 at ui/numeric/numeric-cast_fixed.rs:149:16: 149:20
        _219 = <i8 as Into<i32>>::into(move _220) -> bb147; // scope 12 at ui/numeric/numeric-cast_fixed.rs:149:16: 149:27
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast_fixed.rs:149:21: 149:25
                                         // + literal: Const { ty: fn(i8) -> i32 {<i8 as Into<i32>>::into}, val: Value(<ZST>) }
    }

    bb147: {
        _218 = foo::<i32>(move _219) -> bb148; // scope 12 at ui/numeric/numeric-cast_fixed.rs:149:5: 149:28
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast_fixed.rs:149:5: 149:15
                                         // + literal: Const { ty: fn(i32) {foo::<i32>}, val: Value(<ZST>) }
    }

    bb148: {
        _224 = _1;                       // scope 12 at ui/numeric/numeric-cast_fixed.rs:154:16: 154:23
        _223 = <usize as TryInto<u16>>::try_into(move _224) -> bb149; // scope 12 at ui/numeric/numeric-cast_fixed.rs:154:16: 154:34
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast_fixed.rs:154:24: 154:32
                                         // + literal: Const { ty: fn(usize) -> Result<u16, <usize as TryInto<u16>>::Error> {<usize as TryInto<u16>>::try_into}, val: Value(<ZST>) }
    }

    bb149: {
        _222 = Result::<u16, TryFromIntError>::unwrap(move _223) -> bb150; // scope 12 at ui/numeric/numeric-cast_fixed.rs:154:16: 154:43
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast_fixed.rs:154:35: 154:41
                                         // + literal: Const { ty: fn(Result<u16, TryFromIntError>) -> u16 {Result::<u16, TryFromIntError>::unwrap}, val: Value(<ZST>) }
    }

    bb150: {
        _221 = foo::<u16>(move _222) -> bb151; // scope 12 at ui/numeric/numeric-cast_fixed.rs:154:5: 154:44
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast_fixed.rs:154:5: 154:15
                                         // + literal: Const { ty: fn(u16) {foo::<u16>}, val: Value(<ZST>) }
    }

    bb151: {
        _228 = _2;                       // scope 12 at ui/numeric/numeric-cast_fixed.rs:156:16: 156:21
        _227 = <u64 as TryInto<u16>>::try_into(move _228) -> bb152; // scope 12 at ui/numeric/numeric-cast_fixed.rs:156:16: 156:32
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast_fixed.rs:156:22: 156:30
                                         // + literal: Const { ty: fn(u64) -> Result<u16, <u64 as TryInto<u16>>::Error> {<u64 as TryInto<u16>>::try_into}, val: Value(<ZST>) }
    }

    bb152: {
        _226 = Result::<u16, TryFromIntError>::unwrap(move _227) -> bb153; // scope 12 at ui/numeric/numeric-cast_fixed.rs:156:16: 156:41
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast_fixed.rs:156:33: 156:39
                                         // + literal: Const { ty: fn(Result<u16, TryFromIntError>) -> u16 {Result::<u16, TryFromIntError>::unwrap}, val: Value(<ZST>) }
    }

    bb153: {
        _225 = foo::<u16>(move _226) -> bb154; // scope 12 at ui/numeric/numeric-cast_fixed.rs:156:5: 156:42
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast_fixed.rs:156:5: 156:15
                                         // + literal: Const { ty: fn(u16) {foo::<u16>}, val: Value(<ZST>) }
    }

    bb154: {
        _232 = _3;                       // scope 12 at ui/numeric/numeric-cast_fixed.rs:158:16: 158:21
        _231 = <u32 as TryInto<u16>>::try_into(move _232) -> bb155; // scope 12 at ui/numeric/numeric-cast_fixed.rs:158:16: 158:32
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast_fixed.rs:158:22: 158:30
                                         // + literal: Const { ty: fn(u32) -> Result<u16, <u32 as TryInto<u16>>::Error> {<u32 as TryInto<u16>>::try_into}, val: Value(<ZST>) }
    }

    bb155: {
        _230 = Result::<u16, TryFromIntError>::unwrap(move _231) -> bb156; // scope 12 at ui/numeric/numeric-cast_fixed.rs:158:16: 158:41
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast_fixed.rs:158:33: 158:39
                                         // + literal: Const { ty: fn(Result<u16, TryFromIntError>) -> u16 {Result::<u16, TryFromIntError>::unwrap}, val: Value(<ZST>) }
    }

    bb156: {
        _229 = foo::<u16>(move _230) -> bb157; // scope 12 at ui/numeric/numeric-cast_fixed.rs:158:5: 158:42
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast_fixed.rs:158:5: 158:15
                                         // + literal: Const { ty: fn(u16) {foo::<u16>}, val: Value(<ZST>) }
    }

    bb157: {
        _234 = _4;                       // scope 12 at ui/numeric/numeric-cast_fixed.rs:160:16: 160:21
        _233 = foo::<u16>(move _234) -> bb158; // scope 12 at ui/numeric/numeric-cast_fixed.rs:160:5: 160:22
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast_fixed.rs:160:5: 160:15
                                         // + literal: Const { ty: fn(u16) {foo::<u16>}, val: Value(<ZST>) }
    }

    bb158: {
        _237 = _5;                       // scope 12 at ui/numeric/numeric-cast_fixed.rs:161:16: 161:20
        _236 = <u8 as Into<u16>>::into(move _237) -> bb159; // scope 12 at ui/numeric/numeric-cast_fixed.rs:161:16: 161:27
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast_fixed.rs:161:21: 161:25
                                         // + literal: Const { ty: fn(u8) -> u16 {<u8 as Into<u16>>::into}, val: Value(<ZST>) }
    }

    bb159: {
        _235 = foo::<u16>(move _236) -> bb160; // scope 12 at ui/numeric/numeric-cast_fixed.rs:161:5: 161:28
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast_fixed.rs:161:5: 161:15
                                         // + literal: Const { ty: fn(u16) {foo::<u16>}, val: Value(<ZST>) }
    }

    bb160: {
        _241 = _6;                       // scope 12 at ui/numeric/numeric-cast_fixed.rs:163:16: 163:23
        _240 = <isize as TryInto<u16>>::try_into(move _241) -> bb161; // scope 12 at ui/numeric/numeric-cast_fixed.rs:163:16: 163:34
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast_fixed.rs:163:24: 163:32
                                         // + literal: Const { ty: fn(isize) -> Result<u16, <isize as TryInto<u16>>::Error> {<isize as TryInto<u16>>::try_into}, val: Value(<ZST>) }
    }

    bb161: {
        _239 = Result::<u16, TryFromIntError>::unwrap(move _240) -> bb162; // scope 12 at ui/numeric/numeric-cast_fixed.rs:163:16: 163:43
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast_fixed.rs:163:35: 163:41
                                         // + literal: Const { ty: fn(Result<u16, TryFromIntError>) -> u16 {Result::<u16, TryFromIntError>::unwrap}, val: Value(<ZST>) }
    }

    bb162: {
        _238 = foo::<u16>(move _239) -> bb163; // scope 12 at ui/numeric/numeric-cast_fixed.rs:163:5: 163:44
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast_fixed.rs:163:5: 163:15
                                         // + literal: Const { ty: fn(u16) {foo::<u16>}, val: Value(<ZST>) }
    }

    bb163: {
        _245 = _7;                       // scope 12 at ui/numeric/numeric-cast_fixed.rs:165:16: 165:21
        _244 = <i64 as TryInto<u16>>::try_into(move _245) -> bb164; // scope 12 at ui/numeric/numeric-cast_fixed.rs:165:16: 165:32
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast_fixed.rs:165:22: 165:30
                                         // + literal: Const { ty: fn(i64) -> Result<u16, <i64 as TryInto<u16>>::Error> {<i64 as TryInto<u16>>::try_into}, val: Value(<ZST>) }
    }

    bb164: {
        _243 = Result::<u16, TryFromIntError>::unwrap(move _244) -> bb165; // scope 12 at ui/numeric/numeric-cast_fixed.rs:165:16: 165:41
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast_fixed.rs:165:33: 165:39
                                         // + literal: Const { ty: fn(Result<u16, TryFromIntError>) -> u16 {Result::<u16, TryFromIntError>::unwrap}, val: Value(<ZST>) }
    }

    bb165: {
        _242 = foo::<u16>(move _243) -> bb166; // scope 12 at ui/numeric/numeric-cast_fixed.rs:165:5: 165:42
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast_fixed.rs:165:5: 165:15
                                         // + literal: Const { ty: fn(u16) {foo::<u16>}, val: Value(<ZST>) }
    }

    bb166: {
        _249 = _8;                       // scope 12 at ui/numeric/numeric-cast_fixed.rs:167:16: 167:21
        _248 = <i32 as TryInto<u16>>::try_into(move _249) -> bb167; // scope 12 at ui/numeric/numeric-cast_fixed.rs:167:16: 167:32
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast_fixed.rs:167:22: 167:30
                                         // + literal: Const { ty: fn(i32) -> Result<u16, <i32 as TryInto<u16>>::Error> {<i32 as TryInto<u16>>::try_into}, val: Value(<ZST>) }
    }

    bb167: {
        _247 = Result::<u16, TryFromIntError>::unwrap(move _248) -> bb168; // scope 12 at ui/numeric/numeric-cast_fixed.rs:167:16: 167:41
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast_fixed.rs:167:33: 167:39
                                         // + literal: Const { ty: fn(Result<u16, TryFromIntError>) -> u16 {Result::<u16, TryFromIntError>::unwrap}, val: Value(<ZST>) }
    }

    bb168: {
        _246 = foo::<u16>(move _247) -> bb169; // scope 12 at ui/numeric/numeric-cast_fixed.rs:167:5: 167:42
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast_fixed.rs:167:5: 167:15
                                         // + literal: Const { ty: fn(u16) {foo::<u16>}, val: Value(<ZST>) }
    }

    bb169: {
        _253 = _9;                       // scope 12 at ui/numeric/numeric-cast_fixed.rs:169:16: 169:21
        _252 = <i16 as TryInto<u16>>::try_into(move _253) -> bb170; // scope 12 at ui/numeric/numeric-cast_fixed.rs:169:16: 169:32
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast_fixed.rs:169:22: 169:30
                                         // + literal: Const { ty: fn(i16) -> Result<u16, <i16 as TryInto<u16>>::Error> {<i16 as TryInto<u16>>::try_into}, val: Value(<ZST>) }
    }

    bb170: {
        _251 = Result::<u16, TryFromIntError>::unwrap(move _252) -> bb171; // scope 12 at ui/numeric/numeric-cast_fixed.rs:169:16: 169:41
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast_fixed.rs:169:33: 169:39
                                         // + literal: Const { ty: fn(Result<u16, TryFromIntError>) -> u16 {Result::<u16, TryFromIntError>::unwrap}, val: Value(<ZST>) }
    }

    bb171: {
        _250 = foo::<u16>(move _251) -> bb172; // scope 12 at ui/numeric/numeric-cast_fixed.rs:169:5: 169:42
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast_fixed.rs:169:5: 169:15
                                         // + literal: Const { ty: fn(u16) {foo::<u16>}, val: Value(<ZST>) }
    }

    bb172: {
        _257 = _10;                      // scope 12 at ui/numeric/numeric-cast_fixed.rs:171:16: 171:20
        _256 = <i8 as TryInto<u16>>::try_into(move _257) -> bb173; // scope 12 at ui/numeric/numeric-cast_fixed.rs:171:16: 171:31
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast_fixed.rs:171:21: 171:29
                                         // + literal: Const { ty: fn(i8) -> Result<u16, <i8 as TryInto<u16>>::Error> {<i8 as TryInto<u16>>::try_into}, val: Value(<ZST>) }
    }

    bb173: {
        _255 = Result::<u16, TryFromIntError>::unwrap(move _256) -> bb174; // scope 12 at ui/numeric/numeric-cast_fixed.rs:171:16: 171:40
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast_fixed.rs:171:32: 171:38
                                         // + literal: Const { ty: fn(Result<u16, TryFromIntError>) -> u16 {Result::<u16, TryFromIntError>::unwrap}, val: Value(<ZST>) }
    }

    bb174: {
        _254 = foo::<u16>(move _255) -> bb175; // scope 12 at ui/numeric/numeric-cast_fixed.rs:171:5: 171:41
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast_fixed.rs:171:5: 171:15
                                         // + literal: Const { ty: fn(u16) {foo::<u16>}, val: Value(<ZST>) }
    }

    bb175: {
        _261 = _1;                       // scope 12 at ui/numeric/numeric-cast_fixed.rs:176:16: 176:23
        _260 = <usize as TryInto<i16>>::try_into(move _261) -> bb176; // scope 12 at ui/numeric/numeric-cast_fixed.rs:176:16: 176:34
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast_fixed.rs:176:24: 176:32
                                         // + literal: Const { ty: fn(usize) -> Result<i16, <usize as TryInto<i16>>::Error> {<usize as TryInto<i16>>::try_into}, val: Value(<ZST>) }
    }

    bb176: {
        _259 = Result::<i16, TryFromIntError>::unwrap(move _260) -> bb177; // scope 12 at ui/numeric/numeric-cast_fixed.rs:176:16: 176:43
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast_fixed.rs:176:35: 176:41
                                         // + literal: Const { ty: fn(Result<i16, TryFromIntError>) -> i16 {Result::<i16, TryFromIntError>::unwrap}, val: Value(<ZST>) }
    }

    bb177: {
        _258 = foo::<i16>(move _259) -> bb178; // scope 12 at ui/numeric/numeric-cast_fixed.rs:176:5: 176:44
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast_fixed.rs:176:5: 176:15
                                         // + literal: Const { ty: fn(i16) {foo::<i16>}, val: Value(<ZST>) }
    }

    bb178: {
        _265 = _2;                       // scope 12 at ui/numeric/numeric-cast_fixed.rs:178:16: 178:21
        _264 = <u64 as TryInto<i16>>::try_into(move _265) -> bb179; // scope 12 at ui/numeric/numeric-cast_fixed.rs:178:16: 178:32
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast_fixed.rs:178:22: 178:30
                                         // + literal: Const { ty: fn(u64) -> Result<i16, <u64 as TryInto<i16>>::Error> {<u64 as TryInto<i16>>::try_into}, val: Value(<ZST>) }
    }

    bb179: {
        _263 = Result::<i16, TryFromIntError>::unwrap(move _264) -> bb180; // scope 12 at ui/numeric/numeric-cast_fixed.rs:178:16: 178:41
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast_fixed.rs:178:33: 178:39
                                         // + literal: Const { ty: fn(Result<i16, TryFromIntError>) -> i16 {Result::<i16, TryFromIntError>::unwrap}, val: Value(<ZST>) }
    }

    bb180: {
        _262 = foo::<i16>(move _263) -> bb181; // scope 12 at ui/numeric/numeric-cast_fixed.rs:178:5: 178:42
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast_fixed.rs:178:5: 178:15
                                         // + literal: Const { ty: fn(i16) {foo::<i16>}, val: Value(<ZST>) }
    }

    bb181: {
        _269 = _3;                       // scope 12 at ui/numeric/numeric-cast_fixed.rs:180:16: 180:21
        _268 = <u32 as TryInto<i16>>::try_into(move _269) -> bb182; // scope 12 at ui/numeric/numeric-cast_fixed.rs:180:16: 180:32
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast_fixed.rs:180:22: 180:30
                                         // + literal: Const { ty: fn(u32) -> Result<i16, <u32 as TryInto<i16>>::Error> {<u32 as TryInto<i16>>::try_into}, val: Value(<ZST>) }
    }

    bb182: {
        _267 = Result::<i16, TryFromIntError>::unwrap(move _268) -> bb183; // scope 12 at ui/numeric/numeric-cast_fixed.rs:180:16: 180:41
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast_fixed.rs:180:33: 180:39
                                         // + literal: Const { ty: fn(Result<i16, TryFromIntError>) -> i16 {Result::<i16, TryFromIntError>::unwrap}, val: Value(<ZST>) }
    }

    bb183: {
        _266 = foo::<i16>(move _267) -> bb184; // scope 12 at ui/numeric/numeric-cast_fixed.rs:180:5: 180:42
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast_fixed.rs:180:5: 180:15
                                         // + literal: Const { ty: fn(i16) {foo::<i16>}, val: Value(<ZST>) }
    }

    bb184: {
        _273 = _4;                       // scope 12 at ui/numeric/numeric-cast_fixed.rs:182:16: 182:21
        _272 = <u16 as TryInto<i16>>::try_into(move _273) -> bb185; // scope 12 at ui/numeric/numeric-cast_fixed.rs:182:16: 182:32
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast_fixed.rs:182:22: 182:30
                                         // + literal: Const { ty: fn(u16) -> Result<i16, <u16 as TryInto<i16>>::Error> {<u16 as TryInto<i16>>::try_into}, val: Value(<ZST>) }
    }

    bb185: {
        _271 = Result::<i16, TryFromIntError>::unwrap(move _272) -> bb186; // scope 12 at ui/numeric/numeric-cast_fixed.rs:182:16: 182:41
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast_fixed.rs:182:33: 182:39
                                         // + literal: Const { ty: fn(Result<i16, TryFromIntError>) -> i16 {Result::<i16, TryFromIntError>::unwrap}, val: Value(<ZST>) }
    }

    bb186: {
        _270 = foo::<i16>(move _271) -> bb187; // scope 12 at ui/numeric/numeric-cast_fixed.rs:182:5: 182:42
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast_fixed.rs:182:5: 182:15
                                         // + literal: Const { ty: fn(i16) {foo::<i16>}, val: Value(<ZST>) }
    }

    bb187: {
        _276 = _5;                       // scope 12 at ui/numeric/numeric-cast_fixed.rs:184:16: 184:20
        _275 = <u8 as Into<i16>>::into(move _276) -> bb188; // scope 12 at ui/numeric/numeric-cast_fixed.rs:184:16: 184:27
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast_fixed.rs:184:21: 184:25
                                         // + literal: Const { ty: fn(u8) -> i16 {<u8 as Into<i16>>::into}, val: Value(<ZST>) }
    }

    bb188: {
        _274 = foo::<i16>(move _275) -> bb189; // scope 12 at ui/numeric/numeric-cast_fixed.rs:184:5: 184:28
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast_fixed.rs:184:5: 184:15
                                         // + literal: Const { ty: fn(i16) {foo::<i16>}, val: Value(<ZST>) }
    }

    bb189: {
        _280 = _6;                       // scope 12 at ui/numeric/numeric-cast_fixed.rs:186:16: 186:23
        _279 = <isize as TryInto<i16>>::try_into(move _280) -> bb190; // scope 12 at ui/numeric/numeric-cast_fixed.rs:186:16: 186:34
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast_fixed.rs:186:24: 186:32
                                         // + literal: Const { ty: fn(isize) -> Result<i16, <isize as TryInto<i16>>::Error> {<isize as TryInto<i16>>::try_into}, val: Value(<ZST>) }
    }

    bb190: {
        _278 = Result::<i16, TryFromIntError>::unwrap(move _279) -> bb191; // scope 12 at ui/numeric/numeric-cast_fixed.rs:186:16: 186:43
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast_fixed.rs:186:35: 186:41
                                         // + literal: Const { ty: fn(Result<i16, TryFromIntError>) -> i16 {Result::<i16, TryFromIntError>::unwrap}, val: Value(<ZST>) }
    }

    bb191: {
        _277 = foo::<i16>(move _278) -> bb192; // scope 12 at ui/numeric/numeric-cast_fixed.rs:186:5: 186:44
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast_fixed.rs:186:5: 186:15
                                         // + literal: Const { ty: fn(i16) {foo::<i16>}, val: Value(<ZST>) }
    }

    bb192: {
        _284 = _7;                       // scope 12 at ui/numeric/numeric-cast_fixed.rs:188:16: 188:21
        _283 = <i64 as TryInto<i16>>::try_into(move _284) -> bb193; // scope 12 at ui/numeric/numeric-cast_fixed.rs:188:16: 188:32
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast_fixed.rs:188:22: 188:30
                                         // + literal: Const { ty: fn(i64) -> Result<i16, <i64 as TryInto<i16>>::Error> {<i64 as TryInto<i16>>::try_into}, val: Value(<ZST>) }
    }

    bb193: {
        _282 = Result::<i16, TryFromIntError>::unwrap(move _283) -> bb194; // scope 12 at ui/numeric/numeric-cast_fixed.rs:188:16: 188:41
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast_fixed.rs:188:33: 188:39
                                         // + literal: Const { ty: fn(Result<i16, TryFromIntError>) -> i16 {Result::<i16, TryFromIntError>::unwrap}, val: Value(<ZST>) }
    }

    bb194: {
        _281 = foo::<i16>(move _282) -> bb195; // scope 12 at ui/numeric/numeric-cast_fixed.rs:188:5: 188:42
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast_fixed.rs:188:5: 188:15
                                         // + literal: Const { ty: fn(i16) {foo::<i16>}, val: Value(<ZST>) }
    }

    bb195: {
        _288 = _8;                       // scope 12 at ui/numeric/numeric-cast_fixed.rs:190:16: 190:21
        _287 = <i32 as TryInto<i16>>::try_into(move _288) -> bb196; // scope 12 at ui/numeric/numeric-cast_fixed.rs:190:16: 190:32
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast_fixed.rs:190:22: 190:30
                                         // + literal: Const { ty: fn(i32) -> Result<i16, <i32 as TryInto<i16>>::Error> {<i32 as TryInto<i16>>::try_into}, val: Value(<ZST>) }
    }

    bb196: {
        _286 = Result::<i16, TryFromIntError>::unwrap(move _287) -> bb197; // scope 12 at ui/numeric/numeric-cast_fixed.rs:190:16: 190:41
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast_fixed.rs:190:33: 190:39
                                         // + literal: Const { ty: fn(Result<i16, TryFromIntError>) -> i16 {Result::<i16, TryFromIntError>::unwrap}, val: Value(<ZST>) }
    }

    bb197: {
        _285 = foo::<i16>(move _286) -> bb198; // scope 12 at ui/numeric/numeric-cast_fixed.rs:190:5: 190:42
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast_fixed.rs:190:5: 190:15
                                         // + literal: Const { ty: fn(i16) {foo::<i16>}, val: Value(<ZST>) }
    }

    bb198: {
        _290 = _9;                       // scope 12 at ui/numeric/numeric-cast_fixed.rs:192:16: 192:21
        _289 = foo::<i16>(move _290) -> bb199; // scope 12 at ui/numeric/numeric-cast_fixed.rs:192:5: 192:22
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast_fixed.rs:192:5: 192:15
                                         // + literal: Const { ty: fn(i16) {foo::<i16>}, val: Value(<ZST>) }
    }

    bb199: {
        _293 = _10;                      // scope 12 at ui/numeric/numeric-cast_fixed.rs:193:16: 193:20
        _292 = <i8 as Into<i16>>::into(move _293) -> bb200; // scope 12 at ui/numeric/numeric-cast_fixed.rs:193:16: 193:27
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast_fixed.rs:193:21: 193:25
                                         // + literal: Const { ty: fn(i8) -> i16 {<i8 as Into<i16>>::into}, val: Value(<ZST>) }
    }

    bb200: {
        _291 = foo::<i16>(move _292) -> bb201; // scope 12 at ui/numeric/numeric-cast_fixed.rs:193:5: 193:28
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast_fixed.rs:193:5: 193:15
                                         // + literal: Const { ty: fn(i16) {foo::<i16>}, val: Value(<ZST>) }
    }

    bb201: {
        _297 = _1;                       // scope 12 at ui/numeric/numeric-cast_fixed.rs:198:15: 198:22
        _296 = <usize as TryInto<u8>>::try_into(move _297) -> bb202; // scope 12 at ui/numeric/numeric-cast_fixed.rs:198:15: 198:33
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast_fixed.rs:198:23: 198:31
                                         // + literal: Const { ty: fn(usize) -> Result<u8, <usize as TryInto<u8>>::Error> {<usize as TryInto<u8>>::try_into}, val: Value(<ZST>) }
    }

    bb202: {
        _295 = Result::<u8, TryFromIntError>::unwrap(move _296) -> bb203; // scope 12 at ui/numeric/numeric-cast_fixed.rs:198:15: 198:42
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast_fixed.rs:198:34: 198:40
                                         // + literal: Const { ty: fn(Result<u8, TryFromIntError>) -> u8 {Result::<u8, TryFromIntError>::unwrap}, val: Value(<ZST>) }
    }

    bb203: {
        _294 = foo::<u8>(move _295) -> bb204; // scope 12 at ui/numeric/numeric-cast_fixed.rs:198:5: 198:43
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast_fixed.rs:198:5: 198:14
                                         // + literal: Const { ty: fn(u8) {foo::<u8>}, val: Value(<ZST>) }
    }

    bb204: {
        _301 = _2;                       // scope 12 at ui/numeric/numeric-cast_fixed.rs:200:15: 200:20
        _300 = <u64 as TryInto<u8>>::try_into(move _301) -> bb205; // scope 12 at ui/numeric/numeric-cast_fixed.rs:200:15: 200:31
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast_fixed.rs:200:21: 200:29
                                         // + literal: Const { ty: fn(u64) -> Result<u8, <u64 as TryInto<u8>>::Error> {<u64 as TryInto<u8>>::try_into}, val: Value(<ZST>) }
    }

    bb205: {
        _299 = Result::<u8, TryFromIntError>::unwrap(move _300) -> bb206; // scope 12 at ui/numeric/numeric-cast_fixed.rs:200:15: 200:40
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast_fixed.rs:200:32: 200:38
                                         // + literal: Const { ty: fn(Result<u8, TryFromIntError>) -> u8 {Result::<u8, TryFromIntError>::unwrap}, val: Value(<ZST>) }
    }

    bb206: {
        _298 = foo::<u8>(move _299) -> bb207; // scope 12 at ui/numeric/numeric-cast_fixed.rs:200:5: 200:41
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast_fixed.rs:200:5: 200:14
                                         // + literal: Const { ty: fn(u8) {foo::<u8>}, val: Value(<ZST>) }
    }

    bb207: {
        _305 = _3;                       // scope 12 at ui/numeric/numeric-cast_fixed.rs:202:15: 202:20
        _304 = <u32 as TryInto<u8>>::try_into(move _305) -> bb208; // scope 12 at ui/numeric/numeric-cast_fixed.rs:202:15: 202:31
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast_fixed.rs:202:21: 202:29
                                         // + literal: Const { ty: fn(u32) -> Result<u8, <u32 as TryInto<u8>>::Error> {<u32 as TryInto<u8>>::try_into}, val: Value(<ZST>) }
    }

    bb208: {
        _303 = Result::<u8, TryFromIntError>::unwrap(move _304) -> bb209; // scope 12 at ui/numeric/numeric-cast_fixed.rs:202:15: 202:40
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast_fixed.rs:202:32: 202:38
                                         // + literal: Const { ty: fn(Result<u8, TryFromIntError>) -> u8 {Result::<u8, TryFromIntError>::unwrap}, val: Value(<ZST>) }
    }

    bb209: {
        _302 = foo::<u8>(move _303) -> bb210; // scope 12 at ui/numeric/numeric-cast_fixed.rs:202:5: 202:41
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast_fixed.rs:202:5: 202:14
                                         // + literal: Const { ty: fn(u8) {foo::<u8>}, val: Value(<ZST>) }
    }

    bb210: {
        _309 = _4;                       // scope 12 at ui/numeric/numeric-cast_fixed.rs:204:15: 204:20
        _308 = <u16 as TryInto<u8>>::try_into(move _309) -> bb211; // scope 12 at ui/numeric/numeric-cast_fixed.rs:204:15: 204:31
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast_fixed.rs:204:21: 204:29
                                         // + literal: Const { ty: fn(u16) -> Result<u8, <u16 as TryInto<u8>>::Error> {<u16 as TryInto<u8>>::try_into}, val: Value(<ZST>) }
    }

    bb211: {
        _307 = Result::<u8, TryFromIntError>::unwrap(move _308) -> bb212; // scope 12 at ui/numeric/numeric-cast_fixed.rs:204:15: 204:40
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast_fixed.rs:204:32: 204:38
                                         // + literal: Const { ty: fn(Result<u8, TryFromIntError>) -> u8 {Result::<u8, TryFromIntError>::unwrap}, val: Value(<ZST>) }
    }

    bb212: {
        _306 = foo::<u8>(move _307) -> bb213; // scope 12 at ui/numeric/numeric-cast_fixed.rs:204:5: 204:41
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast_fixed.rs:204:5: 204:14
                                         // + literal: Const { ty: fn(u8) {foo::<u8>}, val: Value(<ZST>) }
    }

    bb213: {
        _311 = _5;                       // scope 12 at ui/numeric/numeric-cast_fixed.rs:206:15: 206:19
        _310 = foo::<u8>(move _311) -> bb214; // scope 12 at ui/numeric/numeric-cast_fixed.rs:206:5: 206:20
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast_fixed.rs:206:5: 206:14
                                         // + literal: Const { ty: fn(u8) {foo::<u8>}, val: Value(<ZST>) }
    }

    bb214: {
        _315 = _6;                       // scope 12 at ui/numeric/numeric-cast_fixed.rs:207:15: 207:22
        _314 = <isize as TryInto<u8>>::try_into(move _315) -> bb215; // scope 12 at ui/numeric/numeric-cast_fixed.rs:207:15: 207:33
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast_fixed.rs:207:23: 207:31
                                         // + literal: Const { ty: fn(isize) -> Result<u8, <isize as TryInto<u8>>::Error> {<isize as TryInto<u8>>::try_into}, val: Value(<ZST>) }
    }

    bb215: {
        _313 = Result::<u8, TryFromIntError>::unwrap(move _314) -> bb216; // scope 12 at ui/numeric/numeric-cast_fixed.rs:207:15: 207:42
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast_fixed.rs:207:34: 207:40
                                         // + literal: Const { ty: fn(Result<u8, TryFromIntError>) -> u8 {Result::<u8, TryFromIntError>::unwrap}, val: Value(<ZST>) }
    }

    bb216: {
        _312 = foo::<u8>(move _313) -> bb217; // scope 12 at ui/numeric/numeric-cast_fixed.rs:207:5: 207:43
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast_fixed.rs:207:5: 207:14
                                         // + literal: Const { ty: fn(u8) {foo::<u8>}, val: Value(<ZST>) }
    }

    bb217: {
        _319 = _7;                       // scope 12 at ui/numeric/numeric-cast_fixed.rs:209:15: 209:20
        _318 = <i64 as TryInto<u8>>::try_into(move _319) -> bb218; // scope 12 at ui/numeric/numeric-cast_fixed.rs:209:15: 209:31
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast_fixed.rs:209:21: 209:29
                                         // + literal: Const { ty: fn(i64) -> Result<u8, <i64 as TryInto<u8>>::Error> {<i64 as TryInto<u8>>::try_into}, val: Value(<ZST>) }
    }

    bb218: {
        _317 = Result::<u8, TryFromIntError>::unwrap(move _318) -> bb219; // scope 12 at ui/numeric/numeric-cast_fixed.rs:209:15: 209:40
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast_fixed.rs:209:32: 209:38
                                         // + literal: Const { ty: fn(Result<u8, TryFromIntError>) -> u8 {Result::<u8, TryFromIntError>::unwrap}, val: Value(<ZST>) }
    }

    bb219: {
        _316 = foo::<u8>(move _317) -> bb220; // scope 12 at ui/numeric/numeric-cast_fixed.rs:209:5: 209:41
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast_fixed.rs:209:5: 209:14
                                         // + literal: Const { ty: fn(u8) {foo::<u8>}, val: Value(<ZST>) }
    }

    bb220: {
        _323 = _8;                       // scope 12 at ui/numeric/numeric-cast_fixed.rs:211:15: 211:20
        _322 = <i32 as TryInto<u8>>::try_into(move _323) -> bb221; // scope 12 at ui/numeric/numeric-cast_fixed.rs:211:15: 211:31
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast_fixed.rs:211:21: 211:29
                                         // + literal: Const { ty: fn(i32) -> Result<u8, <i32 as TryInto<u8>>::Error> {<i32 as TryInto<u8>>::try_into}, val: Value(<ZST>) }
    }

    bb221: {
        _321 = Result::<u8, TryFromIntError>::unwrap(move _322) -> bb222; // scope 12 at ui/numeric/numeric-cast_fixed.rs:211:15: 211:40
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast_fixed.rs:211:32: 211:38
                                         // + literal: Const { ty: fn(Result<u8, TryFromIntError>) -> u8 {Result::<u8, TryFromIntError>::unwrap}, val: Value(<ZST>) }
    }

    bb222: {
        _320 = foo::<u8>(move _321) -> bb223; // scope 12 at ui/numeric/numeric-cast_fixed.rs:211:5: 211:41
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast_fixed.rs:211:5: 211:14
                                         // + literal: Const { ty: fn(u8) {foo::<u8>}, val: Value(<ZST>) }
    }

    bb223: {
        _327 = _9;                       // scope 12 at ui/numeric/numeric-cast_fixed.rs:213:15: 213:20
        _326 = <i16 as TryInto<u8>>::try_into(move _327) -> bb224; // scope 12 at ui/numeric/numeric-cast_fixed.rs:213:15: 213:31
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast_fixed.rs:213:21: 213:29
                                         // + literal: Const { ty: fn(i16) -> Result<u8, <i16 as TryInto<u8>>::Error> {<i16 as TryInto<u8>>::try_into}, val: Value(<ZST>) }
    }

    bb224: {
        _325 = Result::<u8, TryFromIntError>::unwrap(move _326) -> bb225; // scope 12 at ui/numeric/numeric-cast_fixed.rs:213:15: 213:40
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast_fixed.rs:213:32: 213:38
                                         // + literal: Const { ty: fn(Result<u8, TryFromIntError>) -> u8 {Result::<u8, TryFromIntError>::unwrap}, val: Value(<ZST>) }
    }

    bb225: {
        _324 = foo::<u8>(move _325) -> bb226; // scope 12 at ui/numeric/numeric-cast_fixed.rs:213:5: 213:41
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast_fixed.rs:213:5: 213:14
                                         // + literal: Const { ty: fn(u8) {foo::<u8>}, val: Value(<ZST>) }
    }

    bb226: {
        _331 = _10;                      // scope 12 at ui/numeric/numeric-cast_fixed.rs:215:15: 215:19
        _330 = <i8 as TryInto<u8>>::try_into(move _331) -> bb227; // scope 12 at ui/numeric/numeric-cast_fixed.rs:215:15: 215:30
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast_fixed.rs:215:20: 215:28
                                         // + literal: Const { ty: fn(i8) -> Result<u8, <i8 as TryInto<u8>>::Error> {<i8 as TryInto<u8>>::try_into}, val: Value(<ZST>) }
    }

    bb227: {
        _329 = Result::<u8, TryFromIntError>::unwrap(move _330) -> bb228; // scope 12 at ui/numeric/numeric-cast_fixed.rs:215:15: 215:39
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast_fixed.rs:215:31: 215:37
                                         // + literal: Const { ty: fn(Result<u8, TryFromIntError>) -> u8 {Result::<u8, TryFromIntError>::unwrap}, val: Value(<ZST>) }
    }

    bb228: {
        _328 = foo::<u8>(move _329) -> bb229; // scope 12 at ui/numeric/numeric-cast_fixed.rs:215:5: 215:40
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast_fixed.rs:215:5: 215:14
                                         // + literal: Const { ty: fn(u8) {foo::<u8>}, val: Value(<ZST>) }
    }

    bb229: {
        _335 = _1;                       // scope 12 at ui/numeric/numeric-cast_fixed.rs:220:15: 220:22
        _334 = <usize as TryInto<i8>>::try_into(move _335) -> bb230; // scope 12 at ui/numeric/numeric-cast_fixed.rs:220:15: 220:33
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast_fixed.rs:220:23: 220:31
                                         // + literal: Const { ty: fn(usize) -> Result<i8, <usize as TryInto<i8>>::Error> {<usize as TryInto<i8>>::try_into}, val: Value(<ZST>) }
    }

    bb230: {
        _333 = Result::<i8, TryFromIntError>::unwrap(move _334) -> bb231; // scope 12 at ui/numeric/numeric-cast_fixed.rs:220:15: 220:42
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast_fixed.rs:220:34: 220:40
                                         // + literal: Const { ty: fn(Result<i8, TryFromIntError>) -> i8 {Result::<i8, TryFromIntError>::unwrap}, val: Value(<ZST>) }
    }

    bb231: {
        _332 = foo::<i8>(move _333) -> bb232; // scope 12 at ui/numeric/numeric-cast_fixed.rs:220:5: 220:43
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast_fixed.rs:220:5: 220:14
                                         // + literal: Const { ty: fn(i8) {foo::<i8>}, val: Value(<ZST>) }
    }

    bb232: {
        _339 = _2;                       // scope 12 at ui/numeric/numeric-cast_fixed.rs:222:15: 222:20
        _338 = <u64 as TryInto<i8>>::try_into(move _339) -> bb233; // scope 12 at ui/numeric/numeric-cast_fixed.rs:222:15: 222:31
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast_fixed.rs:222:21: 222:29
                                         // + literal: Const { ty: fn(u64) -> Result<i8, <u64 as TryInto<i8>>::Error> {<u64 as TryInto<i8>>::try_into}, val: Value(<ZST>) }
    }

    bb233: {
        _337 = Result::<i8, TryFromIntError>::unwrap(move _338) -> bb234; // scope 12 at ui/numeric/numeric-cast_fixed.rs:222:15: 222:40
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast_fixed.rs:222:32: 222:38
                                         // + literal: Const { ty: fn(Result<i8, TryFromIntError>) -> i8 {Result::<i8, TryFromIntError>::unwrap}, val: Value(<ZST>) }
    }

    bb234: {
        _336 = foo::<i8>(move _337) -> bb235; // scope 12 at ui/numeric/numeric-cast_fixed.rs:222:5: 222:41
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast_fixed.rs:222:5: 222:14
                                         // + literal: Const { ty: fn(i8) {foo::<i8>}, val: Value(<ZST>) }
    }

    bb235: {
        _343 = _3;                       // scope 12 at ui/numeric/numeric-cast_fixed.rs:224:15: 224:20
        _342 = <u32 as TryInto<i8>>::try_into(move _343) -> bb236; // scope 12 at ui/numeric/numeric-cast_fixed.rs:224:15: 224:31
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast_fixed.rs:224:21: 224:29
                                         // + literal: Const { ty: fn(u32) -> Result<i8, <u32 as TryInto<i8>>::Error> {<u32 as TryInto<i8>>::try_into}, val: Value(<ZST>) }
    }

    bb236: {
        _341 = Result::<i8, TryFromIntError>::unwrap(move _342) -> bb237; // scope 12 at ui/numeric/numeric-cast_fixed.rs:224:15: 224:40
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast_fixed.rs:224:32: 224:38
                                         // + literal: Const { ty: fn(Result<i8, TryFromIntError>) -> i8 {Result::<i8, TryFromIntError>::unwrap}, val: Value(<ZST>) }
    }

    bb237: {
        _340 = foo::<i8>(move _341) -> bb238; // scope 12 at ui/numeric/numeric-cast_fixed.rs:224:5: 224:41
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast_fixed.rs:224:5: 224:14
                                         // + literal: Const { ty: fn(i8) {foo::<i8>}, val: Value(<ZST>) }
    }

    bb238: {
        _347 = _4;                       // scope 12 at ui/numeric/numeric-cast_fixed.rs:226:15: 226:20
        _346 = <u16 as TryInto<i8>>::try_into(move _347) -> bb239; // scope 12 at ui/numeric/numeric-cast_fixed.rs:226:15: 226:31
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast_fixed.rs:226:21: 226:29
                                         // + literal: Const { ty: fn(u16) -> Result<i8, <u16 as TryInto<i8>>::Error> {<u16 as TryInto<i8>>::try_into}, val: Value(<ZST>) }
    }

    bb239: {
        _345 = Result::<i8, TryFromIntError>::unwrap(move _346) -> bb240; // scope 12 at ui/numeric/numeric-cast_fixed.rs:226:15: 226:40
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast_fixed.rs:226:32: 226:38
                                         // + literal: Const { ty: fn(Result<i8, TryFromIntError>) -> i8 {Result::<i8, TryFromIntError>::unwrap}, val: Value(<ZST>) }
    }

    bb240: {
        _344 = foo::<i8>(move _345) -> bb241; // scope 12 at ui/numeric/numeric-cast_fixed.rs:226:5: 226:41
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast_fixed.rs:226:5: 226:14
                                         // + literal: Const { ty: fn(i8) {foo::<i8>}, val: Value(<ZST>) }
    }

    bb241: {
        _351 = _5;                       // scope 12 at ui/numeric/numeric-cast_fixed.rs:228:15: 228:19
        _350 = <u8 as TryInto<i8>>::try_into(move _351) -> bb242; // scope 12 at ui/numeric/numeric-cast_fixed.rs:228:15: 228:30
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast_fixed.rs:228:20: 228:28
                                         // + literal: Const { ty: fn(u8) -> Result<i8, <u8 as TryInto<i8>>::Error> {<u8 as TryInto<i8>>::try_into}, val: Value(<ZST>) }
    }

    bb242: {
        _349 = Result::<i8, TryFromIntError>::unwrap(move _350) -> bb243; // scope 12 at ui/numeric/numeric-cast_fixed.rs:228:15: 228:39
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast_fixed.rs:228:31: 228:37
                                         // + literal: Const { ty: fn(Result<i8, TryFromIntError>) -> i8 {Result::<i8, TryFromIntError>::unwrap}, val: Value(<ZST>) }
    }

    bb243: {
        _348 = foo::<i8>(move _349) -> bb244; // scope 12 at ui/numeric/numeric-cast_fixed.rs:228:5: 228:40
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast_fixed.rs:228:5: 228:14
                                         // + literal: Const { ty: fn(i8) {foo::<i8>}, val: Value(<ZST>) }
    }

    bb244: {
        _355 = _6;                       // scope 12 at ui/numeric/numeric-cast_fixed.rs:230:15: 230:22
        _354 = <isize as TryInto<i8>>::try_into(move _355) -> bb245; // scope 12 at ui/numeric/numeric-cast_fixed.rs:230:15: 230:33
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast_fixed.rs:230:23: 230:31
                                         // + literal: Const { ty: fn(isize) -> Result<i8, <isize as TryInto<i8>>::Error> {<isize as TryInto<i8>>::try_into}, val: Value(<ZST>) }
    }

    bb245: {
        _353 = Result::<i8, TryFromIntError>::unwrap(move _354) -> bb246; // scope 12 at ui/numeric/numeric-cast_fixed.rs:230:15: 230:42
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast_fixed.rs:230:34: 230:40
                                         // + literal: Const { ty: fn(Result<i8, TryFromIntError>) -> i8 {Result::<i8, TryFromIntError>::unwrap}, val: Value(<ZST>) }
    }

    bb246: {
        _352 = foo::<i8>(move _353) -> bb247; // scope 12 at ui/numeric/numeric-cast_fixed.rs:230:5: 230:43
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast_fixed.rs:230:5: 230:14
                                         // + literal: Const { ty: fn(i8) {foo::<i8>}, val: Value(<ZST>) }
    }

    bb247: {
        _359 = _7;                       // scope 12 at ui/numeric/numeric-cast_fixed.rs:232:15: 232:20
        _358 = <i64 as TryInto<i8>>::try_into(move _359) -> bb248; // scope 12 at ui/numeric/numeric-cast_fixed.rs:232:15: 232:31
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast_fixed.rs:232:21: 232:29
                                         // + literal: Const { ty: fn(i64) -> Result<i8, <i64 as TryInto<i8>>::Error> {<i64 as TryInto<i8>>::try_into}, val: Value(<ZST>) }
    }

    bb248: {
        _357 = Result::<i8, TryFromIntError>::unwrap(move _358) -> bb249; // scope 12 at ui/numeric/numeric-cast_fixed.rs:232:15: 232:40
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast_fixed.rs:232:32: 232:38
                                         // + literal: Const { ty: fn(Result<i8, TryFromIntError>) -> i8 {Result::<i8, TryFromIntError>::unwrap}, val: Value(<ZST>) }
    }

    bb249: {
        _356 = foo::<i8>(move _357) -> bb250; // scope 12 at ui/numeric/numeric-cast_fixed.rs:232:5: 232:41
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast_fixed.rs:232:5: 232:14
                                         // + literal: Const { ty: fn(i8) {foo::<i8>}, val: Value(<ZST>) }
    }

    bb250: {
        _363 = _8;                       // scope 12 at ui/numeric/numeric-cast_fixed.rs:234:15: 234:20
        _362 = <i32 as TryInto<i8>>::try_into(move _363) -> bb251; // scope 12 at ui/numeric/numeric-cast_fixed.rs:234:15: 234:31
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast_fixed.rs:234:21: 234:29
                                         // + literal: Const { ty: fn(i32) -> Result<i8, <i32 as TryInto<i8>>::Error> {<i32 as TryInto<i8>>::try_into}, val: Value(<ZST>) }
    }

    bb251: {
        _361 = Result::<i8, TryFromIntError>::unwrap(move _362) -> bb252; // scope 12 at ui/numeric/numeric-cast_fixed.rs:234:15: 234:40
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast_fixed.rs:234:32: 234:38
                                         // + literal: Const { ty: fn(Result<i8, TryFromIntError>) -> i8 {Result::<i8, TryFromIntError>::unwrap}, val: Value(<ZST>) }
    }

    bb252: {
        _360 = foo::<i8>(move _361) -> bb253; // scope 12 at ui/numeric/numeric-cast_fixed.rs:234:5: 234:41
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast_fixed.rs:234:5: 234:14
                                         // + literal: Const { ty: fn(i8) {foo::<i8>}, val: Value(<ZST>) }
    }

    bb253: {
        _367 = _9;                       // scope 12 at ui/numeric/numeric-cast_fixed.rs:236:15: 236:20
        _366 = <i16 as TryInto<i8>>::try_into(move _367) -> bb254; // scope 12 at ui/numeric/numeric-cast_fixed.rs:236:15: 236:31
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast_fixed.rs:236:21: 236:29
                                         // + literal: Const { ty: fn(i16) -> Result<i8, <i16 as TryInto<i8>>::Error> {<i16 as TryInto<i8>>::try_into}, val: Value(<ZST>) }
    }

    bb254: {
        _365 = Result::<i8, TryFromIntError>::unwrap(move _366) -> bb255; // scope 12 at ui/numeric/numeric-cast_fixed.rs:236:15: 236:40
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast_fixed.rs:236:32: 236:38
                                         // + literal: Const { ty: fn(Result<i8, TryFromIntError>) -> i8 {Result::<i8, TryFromIntError>::unwrap}, val: Value(<ZST>) }
    }

    bb255: {
        _364 = foo::<i8>(move _365) -> bb256; // scope 12 at ui/numeric/numeric-cast_fixed.rs:236:5: 236:41
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast_fixed.rs:236:5: 236:14
                                         // + literal: Const { ty: fn(i8) {foo::<i8>}, val: Value(<ZST>) }
    }

    bb256: {
        _369 = _10;                      // scope 12 at ui/numeric/numeric-cast_fixed.rs:238:15: 238:19
        _368 = foo::<i8>(move _369) -> bb257; // scope 12 at ui/numeric/numeric-cast_fixed.rs:238:5: 238:20
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast_fixed.rs:238:5: 238:14
                                         // + literal: Const { ty: fn(i8) {foo::<i8>}, val: Value(<ZST>) }
    }

    bb257: {
        _372 = _1;                       // scope 12 at ui/numeric/numeric-cast_fixed.rs:242:16: 242:23
        _371 = move _372 as f64 (IntToFloat); // scope 12 at ui/numeric/numeric-cast_fixed.rs:242:16: 242:30
        _370 = foo::<f64>(move _371) -> bb258; // scope 12 at ui/numeric/numeric-cast_fixed.rs:242:5: 242:31
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast_fixed.rs:242:5: 242:15
                                         // + literal: Const { ty: fn(f64) {foo::<f64>}, val: Value(<ZST>) }
    }

    bb258: {
        _375 = _2;                       // scope 12 at ui/numeric/numeric-cast_fixed.rs:244:16: 244:21
        _374 = move _375 as f64 (IntToFloat); // scope 12 at ui/numeric/numeric-cast_fixed.rs:244:16: 244:28
        _373 = foo::<f64>(move _374) -> bb259; // scope 12 at ui/numeric/numeric-cast_fixed.rs:244:5: 244:29
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast_fixed.rs:244:5: 244:15
                                         // + literal: Const { ty: fn(f64) {foo::<f64>}, val: Value(<ZST>) }
    }

    bb259: {
        _378 = _3;                       // scope 12 at ui/numeric/numeric-cast_fixed.rs:246:16: 246:21
        _377 = <u32 as Into<f64>>::into(move _378) -> bb260; // scope 12 at ui/numeric/numeric-cast_fixed.rs:246:16: 246:28
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast_fixed.rs:246:22: 246:26
                                         // + literal: Const { ty: fn(u32) -> f64 {<u32 as Into<f64>>::into}, val: Value(<ZST>) }
    }

    bb260: {
        _376 = foo::<f64>(move _377) -> bb261; // scope 12 at ui/numeric/numeric-cast_fixed.rs:246:5: 246:29
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast_fixed.rs:246:5: 246:15
                                         // + literal: Const { ty: fn(f64) {foo::<f64>}, val: Value(<ZST>) }
    }

    bb261: {
        _381 = _4;                       // scope 12 at ui/numeric/numeric-cast_fixed.rs:248:16: 248:21
        _380 = <u16 as Into<f64>>::into(move _381) -> bb262; // scope 12 at ui/numeric/numeric-cast_fixed.rs:248:16: 248:28
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast_fixed.rs:248:22: 248:26
                                         // + literal: Const { ty: fn(u16) -> f64 {<u16 as Into<f64>>::into}, val: Value(<ZST>) }
    }

    bb262: {
        _379 = foo::<f64>(move _380) -> bb263; // scope 12 at ui/numeric/numeric-cast_fixed.rs:248:5: 248:29
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast_fixed.rs:248:5: 248:15
                                         // + literal: Const { ty: fn(f64) {foo::<f64>}, val: Value(<ZST>) }
    }

    bb263: {
        _384 = _5;                       // scope 12 at ui/numeric/numeric-cast_fixed.rs:250:16: 250:20
        _383 = <u8 as Into<f64>>::into(move _384) -> bb264; // scope 12 at ui/numeric/numeric-cast_fixed.rs:250:16: 250:27
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast_fixed.rs:250:21: 250:25
                                         // + literal: Const { ty: fn(u8) -> f64 {<u8 as Into<f64>>::into}, val: Value(<ZST>) }
    }

    bb264: {
        _382 = foo::<f64>(move _383) -> bb265; // scope 12 at ui/numeric/numeric-cast_fixed.rs:250:5: 250:28
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast_fixed.rs:250:5: 250:15
                                         // + literal: Const { ty: fn(f64) {foo::<f64>}, val: Value(<ZST>) }
    }

    bb265: {
        _387 = _6;                       // scope 12 at ui/numeric/numeric-cast_fixed.rs:252:16: 252:23
        _386 = move _387 as f64 (IntToFloat); // scope 12 at ui/numeric/numeric-cast_fixed.rs:252:16: 252:30
        _385 = foo::<f64>(move _386) -> bb266; // scope 12 at ui/numeric/numeric-cast_fixed.rs:252:5: 252:31
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast_fixed.rs:252:5: 252:15
                                         // + literal: Const { ty: fn(f64) {foo::<f64>}, val: Value(<ZST>) }
    }

    bb266: {
        _390 = _7;                       // scope 12 at ui/numeric/numeric-cast_fixed.rs:254:16: 254:21
        _389 = move _390 as f64 (IntToFloat); // scope 12 at ui/numeric/numeric-cast_fixed.rs:254:16: 254:28
        _388 = foo::<f64>(move _389) -> bb267; // scope 12 at ui/numeric/numeric-cast_fixed.rs:254:5: 254:29
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast_fixed.rs:254:5: 254:15
                                         // + literal: Const { ty: fn(f64) {foo::<f64>}, val: Value(<ZST>) }
    }

    bb267: {
        _393 = _8;                       // scope 12 at ui/numeric/numeric-cast_fixed.rs:256:16: 256:21
        _392 = <i32 as Into<f64>>::into(move _393) -> bb268; // scope 12 at ui/numeric/numeric-cast_fixed.rs:256:16: 256:28
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast_fixed.rs:256:22: 256:26
                                         // + literal: Const { ty: fn(i32) -> f64 {<i32 as Into<f64>>::into}, val: Value(<ZST>) }
    }

    bb268: {
        _391 = foo::<f64>(move _392) -> bb269; // scope 12 at ui/numeric/numeric-cast_fixed.rs:256:5: 256:29
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast_fixed.rs:256:5: 256:15
                                         // + literal: Const { ty: fn(f64) {foo::<f64>}, val: Value(<ZST>) }
    }

    bb269: {
        _396 = _9;                       // scope 12 at ui/numeric/numeric-cast_fixed.rs:258:16: 258:21
        _395 = <i16 as Into<f64>>::into(move _396) -> bb270; // scope 12 at ui/numeric/numeric-cast_fixed.rs:258:16: 258:28
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast_fixed.rs:258:22: 258:26
                                         // + literal: Const { ty: fn(i16) -> f64 {<i16 as Into<f64>>::into}, val: Value(<ZST>) }
    }

    bb270: {
        _394 = foo::<f64>(move _395) -> bb271; // scope 12 at ui/numeric/numeric-cast_fixed.rs:258:5: 258:29
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast_fixed.rs:258:5: 258:15
                                         // + literal: Const { ty: fn(f64) {foo::<f64>}, val: Value(<ZST>) }
    }

    bb271: {
        _399 = _10;                      // scope 12 at ui/numeric/numeric-cast_fixed.rs:260:16: 260:20
        _398 = <i8 as Into<f64>>::into(move _399) -> bb272; // scope 12 at ui/numeric/numeric-cast_fixed.rs:260:16: 260:27
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast_fixed.rs:260:21: 260:25
                                         // + literal: Const { ty: fn(i8) -> f64 {<i8 as Into<f64>>::into}, val: Value(<ZST>) }
    }

    bb272: {
        _397 = foo::<f64>(move _398) -> bb273; // scope 12 at ui/numeric/numeric-cast_fixed.rs:260:5: 260:28
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast_fixed.rs:260:5: 260:15
                                         // + literal: Const { ty: fn(f64) {foo::<f64>}, val: Value(<ZST>) }
    }

    bb273: {
        _401 = _11;                      // scope 12 at ui/numeric/numeric-cast_fixed.rs:262:16: 262:21
        _400 = foo::<f64>(move _401) -> bb274; // scope 12 at ui/numeric/numeric-cast_fixed.rs:262:5: 262:22
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast_fixed.rs:262:5: 262:15
                                         // + literal: Const { ty: fn(f64) {foo::<f64>}, val: Value(<ZST>) }
    }

    bb274: {
        _404 = _12;                      // scope 12 at ui/numeric/numeric-cast_fixed.rs:263:16: 263:21
        _403 = <f32 as Into<f64>>::into(move _404) -> bb275; // scope 12 at ui/numeric/numeric-cast_fixed.rs:263:16: 263:28
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast_fixed.rs:263:22: 263:26
                                         // + literal: Const { ty: fn(f32) -> f64 {<f32 as Into<f64>>::into}, val: Value(<ZST>) }
    }

    bb275: {
        _402 = foo::<f64>(move _403) -> bb276; // scope 12 at ui/numeric/numeric-cast_fixed.rs:263:5: 263:29
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast_fixed.rs:263:5: 263:15
                                         // + literal: Const { ty: fn(f64) {foo::<f64>}, val: Value(<ZST>) }
    }

    bb276: {
        _407 = _1;                       // scope 12 at ui/numeric/numeric-cast_fixed.rs:266:16: 266:23
        _406 = move _407 as f32 (IntToFloat); // scope 12 at ui/numeric/numeric-cast_fixed.rs:266:16: 266:30
        _405 = foo::<f32>(move _406) -> bb277; // scope 12 at ui/numeric/numeric-cast_fixed.rs:266:5: 266:31
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast_fixed.rs:266:5: 266:15
                                         // + literal: Const { ty: fn(f32) {foo::<f32>}, val: Value(<ZST>) }
    }

    bb277: {
        _410 = _2;                       // scope 12 at ui/numeric/numeric-cast_fixed.rs:268:16: 268:21
        _409 = move _410 as f32 (IntToFloat); // scope 12 at ui/numeric/numeric-cast_fixed.rs:268:16: 268:28
        _408 = foo::<f32>(move _409) -> bb278; // scope 12 at ui/numeric/numeric-cast_fixed.rs:268:5: 268:29
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast_fixed.rs:268:5: 268:15
                                         // + literal: Const { ty: fn(f32) {foo::<f32>}, val: Value(<ZST>) }
    }

    bb278: {
        _413 = _3;                       // scope 12 at ui/numeric/numeric-cast_fixed.rs:270:16: 270:21
        _412 = move _413 as f32 (IntToFloat); // scope 12 at ui/numeric/numeric-cast_fixed.rs:270:16: 270:28
        _411 = foo::<f32>(move _412) -> bb279; // scope 12 at ui/numeric/numeric-cast_fixed.rs:270:5: 270:29
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast_fixed.rs:270:5: 270:15
                                         // + literal: Const { ty: fn(f32) {foo::<f32>}, val: Value(<ZST>) }
    }

    bb279: {
        _416 = _4;                       // scope 12 at ui/numeric/numeric-cast_fixed.rs:272:16: 272:21
        _415 = <u16 as Into<f32>>::into(move _416) -> bb280; // scope 12 at ui/numeric/numeric-cast_fixed.rs:272:16: 272:28
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast_fixed.rs:272:22: 272:26
                                         // + literal: Const { ty: fn(u16) -> f32 {<u16 as Into<f32>>::into}, val: Value(<ZST>) }
    }

    bb280: {
        _414 = foo::<f32>(move _415) -> bb281; // scope 12 at ui/numeric/numeric-cast_fixed.rs:272:5: 272:29
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast_fixed.rs:272:5: 272:15
                                         // + literal: Const { ty: fn(f32) {foo::<f32>}, val: Value(<ZST>) }
    }

    bb281: {
        _419 = _5;                       // scope 12 at ui/numeric/numeric-cast_fixed.rs:274:16: 274:20
        _418 = <u8 as Into<f32>>::into(move _419) -> bb282; // scope 12 at ui/numeric/numeric-cast_fixed.rs:274:16: 274:27
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast_fixed.rs:274:21: 274:25
                                         // + literal: Const { ty: fn(u8) -> f32 {<u8 as Into<f32>>::into}, val: Value(<ZST>) }
    }

    bb282: {
        _417 = foo::<f32>(move _418) -> bb283; // scope 12 at ui/numeric/numeric-cast_fixed.rs:274:5: 274:28
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast_fixed.rs:274:5: 274:15
                                         // + literal: Const { ty: fn(f32) {foo::<f32>}, val: Value(<ZST>) }
    }

    bb283: {
        _422 = _6;                       // scope 12 at ui/numeric/numeric-cast_fixed.rs:276:16: 276:23
        _421 = move _422 as f32 (IntToFloat); // scope 12 at ui/numeric/numeric-cast_fixed.rs:276:16: 276:30
        _420 = foo::<f32>(move _421) -> bb284; // scope 12 at ui/numeric/numeric-cast_fixed.rs:276:5: 276:31
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast_fixed.rs:276:5: 276:15
                                         // + literal: Const { ty: fn(f32) {foo::<f32>}, val: Value(<ZST>) }
    }

    bb284: {
        _425 = _7;                       // scope 12 at ui/numeric/numeric-cast_fixed.rs:278:16: 278:21
        _424 = move _425 as f32 (IntToFloat); // scope 12 at ui/numeric/numeric-cast_fixed.rs:278:16: 278:28
        _423 = foo::<f32>(move _424) -> bb285; // scope 12 at ui/numeric/numeric-cast_fixed.rs:278:5: 278:29
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast_fixed.rs:278:5: 278:15
                                         // + literal: Const { ty: fn(f32) {foo::<f32>}, val: Value(<ZST>) }
    }

    bb285: {
        _428 = _8;                       // scope 12 at ui/numeric/numeric-cast_fixed.rs:280:16: 280:21
        _427 = move _428 as f32 (IntToFloat); // scope 12 at ui/numeric/numeric-cast_fixed.rs:280:16: 280:28
        _426 = foo::<f32>(move _427) -> bb286; // scope 12 at ui/numeric/numeric-cast_fixed.rs:280:5: 280:29
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast_fixed.rs:280:5: 280:15
                                         // + literal: Const { ty: fn(f32) {foo::<f32>}, val: Value(<ZST>) }
    }

    bb286: {
        _431 = _9;                       // scope 12 at ui/numeric/numeric-cast_fixed.rs:282:16: 282:21
        _430 = <i16 as Into<f32>>::into(move _431) -> bb287; // scope 12 at ui/numeric/numeric-cast_fixed.rs:282:16: 282:28
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast_fixed.rs:282:22: 282:26
                                         // + literal: Const { ty: fn(i16) -> f32 {<i16 as Into<f32>>::into}, val: Value(<ZST>) }
    }

    bb287: {
        _429 = foo::<f32>(move _430) -> bb288; // scope 12 at ui/numeric/numeric-cast_fixed.rs:282:5: 282:29
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast_fixed.rs:282:5: 282:15
                                         // + literal: Const { ty: fn(f32) {foo::<f32>}, val: Value(<ZST>) }
    }

    bb288: {
        _434 = _10;                      // scope 12 at ui/numeric/numeric-cast_fixed.rs:284:16: 284:20
        _433 = <i8 as Into<f32>>::into(move _434) -> bb289; // scope 12 at ui/numeric/numeric-cast_fixed.rs:284:16: 284:27
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast_fixed.rs:284:21: 284:25
                                         // + literal: Const { ty: fn(i8) -> f32 {<i8 as Into<f32>>::into}, val: Value(<ZST>) }
    }

    bb289: {
        _432 = foo::<f32>(move _433) -> bb290; // scope 12 at ui/numeric/numeric-cast_fixed.rs:284:5: 284:28
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast_fixed.rs:284:5: 284:15
                                         // + literal: Const { ty: fn(f32) {foo::<f32>}, val: Value(<ZST>) }
    }

    bb290: {
        _436 = _12;                      // scope 12 at ui/numeric/numeric-cast_fixed.rs:287:16: 287:21
        _435 = foo::<f32>(move _436) -> bb291; // scope 12 at ui/numeric/numeric-cast_fixed.rs:287:5: 287:22
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast_fixed.rs:287:5: 287:15
                                         // + literal: Const { ty: fn(f32) {foo::<f32>}, val: Value(<ZST>) }
    }

    bb291: {
        _440 = _5;                       // scope 12 at ui/numeric/numeric-cast_fixed.rs:289:17: 289:21
        _439 = move _440 as u16 (IntToInt); // scope 12 at ui/numeric/numeric-cast_fixed.rs:289:16: 289:29
        _438 = <u16 as Into<u32>>::into(move _439) -> bb292; // scope 12 at ui/numeric/numeric-cast_fixed.rs:289:16: 289:36
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast_fixed.rs:289:30: 289:34
                                         // + literal: Const { ty: fn(u16) -> u32 {<u16 as Into<u32>>::into}, val: Value(<ZST>) }
    }

    bb292: {
        _437 = foo::<u32>(move _438) -> bb293; // scope 12 at ui/numeric/numeric-cast_fixed.rs:289:5: 289:37
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast_fixed.rs:289:5: 289:15
                                         // + literal: Const { ty: fn(u32) {foo::<u32>}, val: Value(<ZST>) }
    }

    bb293: {
        _444 = _10;                      // scope 12 at ui/numeric/numeric-cast_fixed.rs:291:18: 291:22
        _445 = Eq(_444, const i8::MIN);  // scope 12 at ui/numeric/numeric-cast_fixed.rs:291:16: 291:23
        assert(!move _445, "attempt to negate `{}`, which would overflow", _444) -> bb294; // scope 12 at ui/numeric/numeric-cast_fixed.rs:291:16: 291:23
    }

    bb294: {
        _443 = Neg(move _444);           // scope 12 at ui/numeric/numeric-cast_fixed.rs:291:16: 291:23
        _442 = <i8 as Into<i32>>::into(move _443) -> bb295; // scope 12 at ui/numeric/numeric-cast_fixed.rs:291:16: 291:30
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast_fixed.rs:291:24: 291:28
                                         // + literal: Const { ty: fn(i8) -> i32 {<i8 as Into<i32>>::into}, val: Value(<ZST>) }
    }

    bb295: {
        _441 = foo::<i32>(move _442) -> bb296; // scope 12 at ui/numeric/numeric-cast_fixed.rs:291:5: 291:31
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast_fixed.rs:291:5: 291:15
                                         // + literal: Const { ty: fn(i32) {foo::<i32>}, val: Value(<ZST>) }
    }

    bb296: {
        return;                          // scope 0 at ui/numeric/numeric-cast_fixed.rs:293:2: 293:2
    }
}
