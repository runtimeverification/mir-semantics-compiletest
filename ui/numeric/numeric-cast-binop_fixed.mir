// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
fn main() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/numeric/numeric-cast-binop_fixed.rs:7:11: 7:11
    let _1: usize;                       // in scope 0 at ui/numeric/numeric-cast-binop_fixed.rs:8:9: 8:16
    let mut _13: u16;                    // in scope 0 at ui/numeric/numeric-cast-binop_fixed.rs:23:9: 23:24
    let mut _14: u8;                     // in scope 0 at ui/numeric/numeric-cast-binop_fixed.rs:23:19: 23:23
    let mut _15: u32;                    // in scope 0 at ui/numeric/numeric-cast-binop_fixed.rs:25:9: 25:24
    let mut _16: u8;                     // in scope 0 at ui/numeric/numeric-cast-binop_fixed.rs:25:19: 25:23
    let mut _17: u64;                    // in scope 0 at ui/numeric/numeric-cast-binop_fixed.rs:27:9: 27:24
    let mut _18: u8;                     // in scope 0 at ui/numeric/numeric-cast-binop_fixed.rs:27:19: 27:23
    let mut _19: u128;                   // in scope 0 at ui/numeric/numeric-cast-binop_fixed.rs:29:9: 29:25
    let mut _20: u8;                     // in scope 0 at ui/numeric/numeric-cast-binop_fixed.rs:29:20: 29:24
    let mut _21: usize;                  // in scope 0 at ui/numeric/numeric-cast-binop_fixed.rs:31:9: 31:26
    let mut _22: u8;                     // in scope 0 at ui/numeric/numeric-cast-binop_fixed.rs:31:21: 31:25
    let mut _23: u16;                    // in scope 0 at ui/numeric/numeric-cast-binop_fixed.rs:34:17: 34:28
    let mut _24: u8;                     // in scope 0 at ui/numeric/numeric-cast-binop_fixed.rs:34:17: 34:21
    let mut _25: u32;                    // in scope 0 at ui/numeric/numeric-cast-binop_fixed.rs:36:9: 36:25
    let mut _26: u16;                    // in scope 0 at ui/numeric/numeric-cast-binop_fixed.rs:36:19: 36:24
    let mut _27: u64;                    // in scope 0 at ui/numeric/numeric-cast-binop_fixed.rs:38:9: 38:25
    let mut _28: u16;                    // in scope 0 at ui/numeric/numeric-cast-binop_fixed.rs:38:19: 38:24
    let mut _29: u128;                   // in scope 0 at ui/numeric/numeric-cast-binop_fixed.rs:40:9: 40:26
    let mut _30: u16;                    // in scope 0 at ui/numeric/numeric-cast-binop_fixed.rs:40:20: 40:25
    let mut _31: usize;                  // in scope 0 at ui/numeric/numeric-cast-binop_fixed.rs:42:9: 42:27
    let mut _32: u16;                    // in scope 0 at ui/numeric/numeric-cast-binop_fixed.rs:42:21: 42:26
    let mut _33: u32;                    // in scope 0 at ui/numeric/numeric-cast-binop_fixed.rs:45:17: 45:28
    let mut _34: u8;                     // in scope 0 at ui/numeric/numeric-cast-binop_fixed.rs:45:17: 45:21
    let mut _35: u32;                    // in scope 0 at ui/numeric/numeric-cast-binop_fixed.rs:47:17: 47:29
    let mut _36: u16;                    // in scope 0 at ui/numeric/numeric-cast-binop_fixed.rs:47:17: 47:22
    let mut _37: u64;                    // in scope 0 at ui/numeric/numeric-cast-binop_fixed.rs:49:9: 49:25
    let mut _38: u32;                    // in scope 0 at ui/numeric/numeric-cast-binop_fixed.rs:49:19: 49:24
    let mut _39: u128;                   // in scope 0 at ui/numeric/numeric-cast-binop_fixed.rs:51:9: 51:26
    let mut _40: u32;                    // in scope 0 at ui/numeric/numeric-cast-binop_fixed.rs:51:20: 51:25
    let mut _41: u32;                    // in scope 0 at ui/numeric/numeric-cast-binop_fixed.rs:53:17: 53:44
    let mut _42: std::result::Result<u32, std::num::TryFromIntError>; // in scope 0 at ui/numeric/numeric-cast-binop_fixed.rs:53:17: 53:35
    let mut _43: usize;                  // in scope 0 at ui/numeric/numeric-cast-binop_fixed.rs:53:17: 53:24
    let mut _44: u64;                    // in scope 0 at ui/numeric/numeric-cast-binop_fixed.rs:56:17: 56:28
    let mut _45: u8;                     // in scope 0 at ui/numeric/numeric-cast-binop_fixed.rs:56:17: 56:21
    let mut _46: u64;                    // in scope 0 at ui/numeric/numeric-cast-binop_fixed.rs:58:17: 58:29
    let mut _47: u16;                    // in scope 0 at ui/numeric/numeric-cast-binop_fixed.rs:58:17: 58:22
    let mut _48: u64;                    // in scope 0 at ui/numeric/numeric-cast-binop_fixed.rs:60:17: 60:29
    let mut _49: u32;                    // in scope 0 at ui/numeric/numeric-cast-binop_fixed.rs:60:17: 60:22
    let mut _50: u128;                   // in scope 0 at ui/numeric/numeric-cast-binop_fixed.rs:62:9: 62:26
    let mut _51: u64;                    // in scope 0 at ui/numeric/numeric-cast-binop_fixed.rs:62:20: 62:25
    let mut _52: u64;                    // in scope 0 at ui/numeric/numeric-cast-binop_fixed.rs:64:17: 64:44
    let mut _53: std::result::Result<u64, std::num::TryFromIntError>; // in scope 0 at ui/numeric/numeric-cast-binop_fixed.rs:64:17: 64:35
    let mut _54: usize;                  // in scope 0 at ui/numeric/numeric-cast-binop_fixed.rs:64:17: 64:24
    let mut _55: u128;                   // in scope 0 at ui/numeric/numeric-cast-binop_fixed.rs:67:18: 67:29
    let mut _56: u8;                     // in scope 0 at ui/numeric/numeric-cast-binop_fixed.rs:67:18: 67:22
    let mut _57: u128;                   // in scope 0 at ui/numeric/numeric-cast-binop_fixed.rs:69:18: 69:30
    let mut _58: u16;                    // in scope 0 at ui/numeric/numeric-cast-binop_fixed.rs:69:18: 69:23
    let mut _59: u128;                   // in scope 0 at ui/numeric/numeric-cast-binop_fixed.rs:71:18: 71:30
    let mut _60: u32;                    // in scope 0 at ui/numeric/numeric-cast-binop_fixed.rs:71:18: 71:23
    let mut _61: u128;                   // in scope 0 at ui/numeric/numeric-cast-binop_fixed.rs:73:18: 73:30
    let mut _62: u64;                    // in scope 0 at ui/numeric/numeric-cast-binop_fixed.rs:73:18: 73:23
    let mut _63: u128;                   // in scope 0 at ui/numeric/numeric-cast-binop_fixed.rs:75:18: 75:45
    let mut _64: std::result::Result<u128, std::num::TryFromIntError>; // in scope 0 at ui/numeric/numeric-cast-binop_fixed.rs:75:18: 75:36
    let mut _65: usize;                  // in scope 0 at ui/numeric/numeric-cast-binop_fixed.rs:75:18: 75:25
    let mut _66: usize;                  // in scope 0 at ui/numeric/numeric-cast-binop_fixed.rs:78:19: 78:30
    let mut _67: u8;                     // in scope 0 at ui/numeric/numeric-cast-binop_fixed.rs:78:19: 78:23
    let mut _68: usize;                  // in scope 0 at ui/numeric/numeric-cast-binop_fixed.rs:80:19: 80:31
    let mut _69: u16;                    // in scope 0 at ui/numeric/numeric-cast-binop_fixed.rs:80:19: 80:24
    let mut _70: usize;                  // in scope 0 at ui/numeric/numeric-cast-binop_fixed.rs:82:19: 82:44
    let mut _71: std::result::Result<usize, std::num::TryFromIntError>; // in scope 0 at ui/numeric/numeric-cast-binop_fixed.rs:82:19: 82:35
    let mut _72: u32;                    // in scope 0 at ui/numeric/numeric-cast-binop_fixed.rs:82:19: 82:24
    let mut _73: usize;                  // in scope 0 at ui/numeric/numeric-cast-binop_fixed.rs:84:19: 84:44
    let mut _74: std::result::Result<usize, std::num::TryFromIntError>; // in scope 0 at ui/numeric/numeric-cast-binop_fixed.rs:84:19: 84:35
    let mut _75: u64;                    // in scope 0 at ui/numeric/numeric-cast-binop_fixed.rs:84:19: 84:24
    let mut _76: usize;                  // in scope 0 at ui/numeric/numeric-cast-binop_fixed.rs:86:19: 86:45
    let mut _77: std::result::Result<usize, std::num::TryFromIntError>; // in scope 0 at ui/numeric/numeric-cast-binop_fixed.rs:86:19: 86:36
    let mut _78: u128;                   // in scope 0 at ui/numeric/numeric-cast-binop_fixed.rs:86:19: 86:25
    let mut _79: i16;                    // in scope 0 at ui/numeric/numeric-cast-binop_fixed.rs:92:9: 92:24
    let mut _80: i8;                     // in scope 0 at ui/numeric/numeric-cast-binop_fixed.rs:92:19: 92:23
    let mut _81: i32;                    // in scope 0 at ui/numeric/numeric-cast-binop_fixed.rs:94:9: 94:24
    let mut _82: i8;                     // in scope 0 at ui/numeric/numeric-cast-binop_fixed.rs:94:19: 94:23
    let mut _83: i64;                    // in scope 0 at ui/numeric/numeric-cast-binop_fixed.rs:96:9: 96:24
    let mut _84: i8;                     // in scope 0 at ui/numeric/numeric-cast-binop_fixed.rs:96:19: 96:23
    let mut _85: i128;                   // in scope 0 at ui/numeric/numeric-cast-binop_fixed.rs:98:9: 98:25
    let mut _86: i8;                     // in scope 0 at ui/numeric/numeric-cast-binop_fixed.rs:98:20: 98:24
    let mut _87: isize;                  // in scope 0 at ui/numeric/numeric-cast-binop_fixed.rs:100:9: 100:26
    let mut _88: i8;                     // in scope 0 at ui/numeric/numeric-cast-binop_fixed.rs:100:21: 100:25
    let mut _89: i16;                    // in scope 0 at ui/numeric/numeric-cast-binop_fixed.rs:103:17: 103:28
    let mut _90: i8;                     // in scope 0 at ui/numeric/numeric-cast-binop_fixed.rs:103:17: 103:21
    let mut _91: i32;                    // in scope 0 at ui/numeric/numeric-cast-binop_fixed.rs:105:9: 105:25
    let mut _92: i16;                    // in scope 0 at ui/numeric/numeric-cast-binop_fixed.rs:105:19: 105:24
    let mut _93: i64;                    // in scope 0 at ui/numeric/numeric-cast-binop_fixed.rs:107:9: 107:25
    let mut _94: i16;                    // in scope 0 at ui/numeric/numeric-cast-binop_fixed.rs:107:19: 107:24
    let mut _95: i128;                   // in scope 0 at ui/numeric/numeric-cast-binop_fixed.rs:109:9: 109:26
    let mut _96: i16;                    // in scope 0 at ui/numeric/numeric-cast-binop_fixed.rs:109:20: 109:25
    let mut _97: isize;                  // in scope 0 at ui/numeric/numeric-cast-binop_fixed.rs:111:9: 111:27
    let mut _98: i16;                    // in scope 0 at ui/numeric/numeric-cast-binop_fixed.rs:111:21: 111:26
    let mut _99: i32;                    // in scope 0 at ui/numeric/numeric-cast-binop_fixed.rs:114:17: 114:28
    let mut _100: i8;                    // in scope 0 at ui/numeric/numeric-cast-binop_fixed.rs:114:17: 114:21
    let mut _101: i32;                   // in scope 0 at ui/numeric/numeric-cast-binop_fixed.rs:116:17: 116:29
    let mut _102: i16;                   // in scope 0 at ui/numeric/numeric-cast-binop_fixed.rs:116:17: 116:22
    let mut _103: i64;                   // in scope 0 at ui/numeric/numeric-cast-binop_fixed.rs:118:9: 118:25
    let mut _104: i32;                   // in scope 0 at ui/numeric/numeric-cast-binop_fixed.rs:118:19: 118:24
    let mut _105: i128;                  // in scope 0 at ui/numeric/numeric-cast-binop_fixed.rs:120:9: 120:26
    let mut _106: i32;                   // in scope 0 at ui/numeric/numeric-cast-binop_fixed.rs:120:20: 120:25
    let mut _107: i32;                   // in scope 0 at ui/numeric/numeric-cast-binop_fixed.rs:122:17: 122:44
    let mut _108: std::result::Result<i32, std::num::TryFromIntError>; // in scope 0 at ui/numeric/numeric-cast-binop_fixed.rs:122:17: 122:35
    let mut _109: isize;                 // in scope 0 at ui/numeric/numeric-cast-binop_fixed.rs:122:17: 122:24
    let mut _110: i64;                   // in scope 0 at ui/numeric/numeric-cast-binop_fixed.rs:125:17: 125:28
    let mut _111: i8;                    // in scope 0 at ui/numeric/numeric-cast-binop_fixed.rs:125:17: 125:21
    let mut _112: i64;                   // in scope 0 at ui/numeric/numeric-cast-binop_fixed.rs:127:17: 127:29
    let mut _113: i16;                   // in scope 0 at ui/numeric/numeric-cast-binop_fixed.rs:127:17: 127:22
    let mut _114: i64;                   // in scope 0 at ui/numeric/numeric-cast-binop_fixed.rs:129:17: 129:29
    let mut _115: i32;                   // in scope 0 at ui/numeric/numeric-cast-binop_fixed.rs:129:17: 129:22
    let mut _116: i128;                  // in scope 0 at ui/numeric/numeric-cast-binop_fixed.rs:131:9: 131:26
    let mut _117: i64;                   // in scope 0 at ui/numeric/numeric-cast-binop_fixed.rs:131:20: 131:25
    let mut _118: i64;                   // in scope 0 at ui/numeric/numeric-cast-binop_fixed.rs:133:17: 133:44
    let mut _119: std::result::Result<i64, std::num::TryFromIntError>; // in scope 0 at ui/numeric/numeric-cast-binop_fixed.rs:133:17: 133:35
    let mut _120: isize;                 // in scope 0 at ui/numeric/numeric-cast-binop_fixed.rs:133:17: 133:24
    let mut _121: i128;                  // in scope 0 at ui/numeric/numeric-cast-binop_fixed.rs:136:18: 136:29
    let mut _122: i8;                    // in scope 0 at ui/numeric/numeric-cast-binop_fixed.rs:136:18: 136:22
    let mut _123: i128;                  // in scope 0 at ui/numeric/numeric-cast-binop_fixed.rs:138:18: 138:30
    let mut _124: i16;                   // in scope 0 at ui/numeric/numeric-cast-binop_fixed.rs:138:18: 138:23
    let mut _125: i128;                  // in scope 0 at ui/numeric/numeric-cast-binop_fixed.rs:140:18: 140:30
    let mut _126: i32;                   // in scope 0 at ui/numeric/numeric-cast-binop_fixed.rs:140:18: 140:23
    let mut _127: i128;                  // in scope 0 at ui/numeric/numeric-cast-binop_fixed.rs:142:18: 142:30
    let mut _128: i64;                   // in scope 0 at ui/numeric/numeric-cast-binop_fixed.rs:142:18: 142:23
    let mut _129: i128;                  // in scope 0 at ui/numeric/numeric-cast-binop_fixed.rs:144:18: 144:45
    let mut _130: std::result::Result<i128, std::num::TryFromIntError>; // in scope 0 at ui/numeric/numeric-cast-binop_fixed.rs:144:18: 144:36
    let mut _131: isize;                 // in scope 0 at ui/numeric/numeric-cast-binop_fixed.rs:144:18: 144:25
    let mut _132: isize;                 // in scope 0 at ui/numeric/numeric-cast-binop_fixed.rs:147:19: 147:30
    let mut _133: i8;                    // in scope 0 at ui/numeric/numeric-cast-binop_fixed.rs:147:19: 147:23
    let mut _134: isize;                 // in scope 0 at ui/numeric/numeric-cast-binop_fixed.rs:149:19: 149:31
    let mut _135: i16;                   // in scope 0 at ui/numeric/numeric-cast-binop_fixed.rs:149:19: 149:24
    let mut _136: isize;                 // in scope 0 at ui/numeric/numeric-cast-binop_fixed.rs:151:19: 151:44
    let mut _137: std::result::Result<isize, std::num::TryFromIntError>; // in scope 0 at ui/numeric/numeric-cast-binop_fixed.rs:151:19: 151:35
    let mut _138: i32;                   // in scope 0 at ui/numeric/numeric-cast-binop_fixed.rs:151:19: 151:24
    let mut _139: isize;                 // in scope 0 at ui/numeric/numeric-cast-binop_fixed.rs:153:19: 153:44
    let mut _140: std::result::Result<isize, std::num::TryFromIntError>; // in scope 0 at ui/numeric/numeric-cast-binop_fixed.rs:153:19: 153:35
    let mut _141: i64;                   // in scope 0 at ui/numeric/numeric-cast-binop_fixed.rs:153:19: 153:24
    let mut _142: isize;                 // in scope 0 at ui/numeric/numeric-cast-binop_fixed.rs:155:19: 155:45
    let mut _143: std::result::Result<isize, std::num::TryFromIntError>; // in scope 0 at ui/numeric/numeric-cast-binop_fixed.rs:155:19: 155:36
    let mut _144: i128;                  // in scope 0 at ui/numeric/numeric-cast-binop_fixed.rs:155:19: 155:25
    let mut _145: u8;                    // in scope 0 at ui/numeric/numeric-cast-binop_fixed.rs:161:16: 161:40
    let mut _146: std::result::Result<u8, std::num::TryFromIntError>; // in scope 0 at ui/numeric/numeric-cast-binop_fixed.rs:161:16: 161:31
    let mut _147: i8;                    // in scope 0 at ui/numeric/numeric-cast-binop_fixed.rs:161:16: 161:20
    let mut _148: i16;                   // in scope 0 at ui/numeric/numeric-cast-binop_fixed.rs:163:9: 163:24
    let mut _149: u8;                    // in scope 0 at ui/numeric/numeric-cast-binop_fixed.rs:163:19: 163:23
    let mut _150: i32;                   // in scope 0 at ui/numeric/numeric-cast-binop_fixed.rs:165:9: 165:24
    let mut _151: u8;                    // in scope 0 at ui/numeric/numeric-cast-binop_fixed.rs:165:19: 165:23
    let mut _152: i64;                   // in scope 0 at ui/numeric/numeric-cast-binop_fixed.rs:167:9: 167:24
    let mut _153: u8;                    // in scope 0 at ui/numeric/numeric-cast-binop_fixed.rs:167:19: 167:23
    let mut _154: i128;                  // in scope 0 at ui/numeric/numeric-cast-binop_fixed.rs:169:9: 169:25
    let mut _155: u8;                    // in scope 0 at ui/numeric/numeric-cast-binop_fixed.rs:169:20: 169:24
    let mut _156: isize;                 // in scope 0 at ui/numeric/numeric-cast-binop_fixed.rs:171:9: 171:26
    let mut _157: u8;                    // in scope 0 at ui/numeric/numeric-cast-binop_fixed.rs:171:21: 171:25
    let mut _158: u16;                   // in scope 0 at ui/numeric/numeric-cast-binop_fixed.rs:174:17: 174:41
    let mut _159: std::result::Result<u16, std::num::TryFromIntError>; // in scope 0 at ui/numeric/numeric-cast-binop_fixed.rs:174:17: 174:32
    let mut _160: i8;                    // in scope 0 at ui/numeric/numeric-cast-binop_fixed.rs:174:17: 174:21
    let mut _161: u16;                   // in scope 0 at ui/numeric/numeric-cast-binop_fixed.rs:176:17: 176:42
    let mut _162: std::result::Result<u16, std::num::TryFromIntError>; // in scope 0 at ui/numeric/numeric-cast-binop_fixed.rs:176:17: 176:33
    let mut _163: i16;                   // in scope 0 at ui/numeric/numeric-cast-binop_fixed.rs:176:17: 176:22
    let mut _164: i32;                   // in scope 0 at ui/numeric/numeric-cast-binop_fixed.rs:178:9: 178:25
    let mut _165: u16;                   // in scope 0 at ui/numeric/numeric-cast-binop_fixed.rs:178:19: 178:24
    let mut _166: i64;                   // in scope 0 at ui/numeric/numeric-cast-binop_fixed.rs:180:9: 180:25
    let mut _167: u16;                   // in scope 0 at ui/numeric/numeric-cast-binop_fixed.rs:180:19: 180:24
    let mut _168: i128;                  // in scope 0 at ui/numeric/numeric-cast-binop_fixed.rs:182:9: 182:26
    let mut _169: u16;                   // in scope 0 at ui/numeric/numeric-cast-binop_fixed.rs:182:20: 182:25
    let mut _170: u16;                   // in scope 0 at ui/numeric/numeric-cast-binop_fixed.rs:184:17: 184:44
    let mut _171: std::result::Result<u16, std::num::TryFromIntError>; // in scope 0 at ui/numeric/numeric-cast-binop_fixed.rs:184:17: 184:35
    let mut _172: isize;                 // in scope 0 at ui/numeric/numeric-cast-binop_fixed.rs:184:17: 184:24
    let mut _173: u32;                   // in scope 0 at ui/numeric/numeric-cast-binop_fixed.rs:187:17: 187:41
    let mut _174: std::result::Result<u32, std::num::TryFromIntError>; // in scope 0 at ui/numeric/numeric-cast-binop_fixed.rs:187:17: 187:32
    let mut _175: i8;                    // in scope 0 at ui/numeric/numeric-cast-binop_fixed.rs:187:17: 187:21
    let mut _176: u32;                   // in scope 0 at ui/numeric/numeric-cast-binop_fixed.rs:189:17: 189:42
    let mut _177: std::result::Result<u32, std::num::TryFromIntError>; // in scope 0 at ui/numeric/numeric-cast-binop_fixed.rs:189:17: 189:33
    let mut _178: i16;                   // in scope 0 at ui/numeric/numeric-cast-binop_fixed.rs:189:17: 189:22
    let mut _179: u32;                   // in scope 0 at ui/numeric/numeric-cast-binop_fixed.rs:191:17: 191:42
    let mut _180: std::result::Result<u32, std::num::TryFromIntError>; // in scope 0 at ui/numeric/numeric-cast-binop_fixed.rs:191:17: 191:33
    let mut _181: i32;                   // in scope 0 at ui/numeric/numeric-cast-binop_fixed.rs:191:17: 191:22
    let mut _182: i64;                   // in scope 0 at ui/numeric/numeric-cast-binop_fixed.rs:193:9: 193:25
    let mut _183: u32;                   // in scope 0 at ui/numeric/numeric-cast-binop_fixed.rs:193:19: 193:24
    let mut _184: i128;                  // in scope 0 at ui/numeric/numeric-cast-binop_fixed.rs:195:9: 195:26
    let mut _185: u32;                   // in scope 0 at ui/numeric/numeric-cast-binop_fixed.rs:195:20: 195:25
    let mut _186: u32;                   // in scope 0 at ui/numeric/numeric-cast-binop_fixed.rs:197:17: 197:44
    let mut _187: std::result::Result<u32, std::num::TryFromIntError>; // in scope 0 at ui/numeric/numeric-cast-binop_fixed.rs:197:17: 197:35
    let mut _188: isize;                 // in scope 0 at ui/numeric/numeric-cast-binop_fixed.rs:197:17: 197:24
    let mut _189: u64;                   // in scope 0 at ui/numeric/numeric-cast-binop_fixed.rs:200:17: 200:41
    let mut _190: std::result::Result<u64, std::num::TryFromIntError>; // in scope 0 at ui/numeric/numeric-cast-binop_fixed.rs:200:17: 200:32
    let mut _191: i8;                    // in scope 0 at ui/numeric/numeric-cast-binop_fixed.rs:200:17: 200:21
    let mut _192: u64;                   // in scope 0 at ui/numeric/numeric-cast-binop_fixed.rs:202:17: 202:42
    let mut _193: std::result::Result<u64, std::num::TryFromIntError>; // in scope 0 at ui/numeric/numeric-cast-binop_fixed.rs:202:17: 202:33
    let mut _194: i16;                   // in scope 0 at ui/numeric/numeric-cast-binop_fixed.rs:202:17: 202:22
    let mut _195: u64;                   // in scope 0 at ui/numeric/numeric-cast-binop_fixed.rs:204:17: 204:42
    let mut _196: std::result::Result<u64, std::num::TryFromIntError>; // in scope 0 at ui/numeric/numeric-cast-binop_fixed.rs:204:17: 204:33
    let mut _197: i32;                   // in scope 0 at ui/numeric/numeric-cast-binop_fixed.rs:204:17: 204:22
    let mut _198: u64;                   // in scope 0 at ui/numeric/numeric-cast-binop_fixed.rs:206:17: 206:42
    let mut _199: std::result::Result<u64, std::num::TryFromIntError>; // in scope 0 at ui/numeric/numeric-cast-binop_fixed.rs:206:17: 206:33
    let mut _200: i64;                   // in scope 0 at ui/numeric/numeric-cast-binop_fixed.rs:206:17: 206:22
    let mut _201: i128;                  // in scope 0 at ui/numeric/numeric-cast-binop_fixed.rs:208:9: 208:26
    let mut _202: u64;                   // in scope 0 at ui/numeric/numeric-cast-binop_fixed.rs:208:20: 208:25
    let mut _203: u64;                   // in scope 0 at ui/numeric/numeric-cast-binop_fixed.rs:210:17: 210:44
    let mut _204: std::result::Result<u64, std::num::TryFromIntError>; // in scope 0 at ui/numeric/numeric-cast-binop_fixed.rs:210:17: 210:35
    let mut _205: isize;                 // in scope 0 at ui/numeric/numeric-cast-binop_fixed.rs:210:17: 210:24
    let mut _206: u128;                  // in scope 0 at ui/numeric/numeric-cast-binop_fixed.rs:213:18: 213:42
    let mut _207: std::result::Result<u128, std::num::TryFromIntError>; // in scope 0 at ui/numeric/numeric-cast-binop_fixed.rs:213:18: 213:33
    let mut _208: i8;                    // in scope 0 at ui/numeric/numeric-cast-binop_fixed.rs:213:18: 213:22
    let mut _209: u128;                  // in scope 0 at ui/numeric/numeric-cast-binop_fixed.rs:215:18: 215:43
    let mut _210: std::result::Result<u128, std::num::TryFromIntError>; // in scope 0 at ui/numeric/numeric-cast-binop_fixed.rs:215:18: 215:34
    let mut _211: i16;                   // in scope 0 at ui/numeric/numeric-cast-binop_fixed.rs:215:18: 215:23
    let mut _212: u128;                  // in scope 0 at ui/numeric/numeric-cast-binop_fixed.rs:217:18: 217:43
    let mut _213: std::result::Result<u128, std::num::TryFromIntError>; // in scope 0 at ui/numeric/numeric-cast-binop_fixed.rs:217:18: 217:34
    let mut _214: i32;                   // in scope 0 at ui/numeric/numeric-cast-binop_fixed.rs:217:18: 217:23
    let mut _215: u128;                  // in scope 0 at ui/numeric/numeric-cast-binop_fixed.rs:219:18: 219:43
    let mut _216: std::result::Result<u128, std::num::TryFromIntError>; // in scope 0 at ui/numeric/numeric-cast-binop_fixed.rs:219:18: 219:34
    let mut _217: i64;                   // in scope 0 at ui/numeric/numeric-cast-binop_fixed.rs:219:18: 219:23
    let mut _218: u128;                  // in scope 0 at ui/numeric/numeric-cast-binop_fixed.rs:221:18: 221:44
    let mut _219: std::result::Result<u128, std::num::TryFromIntError>; // in scope 0 at ui/numeric/numeric-cast-binop_fixed.rs:221:18: 221:35
    let mut _220: i128;                  // in scope 0 at ui/numeric/numeric-cast-binop_fixed.rs:221:18: 221:24
    let mut _221: u128;                  // in scope 0 at ui/numeric/numeric-cast-binop_fixed.rs:223:18: 223:45
    let mut _222: std::result::Result<u128, std::num::TryFromIntError>; // in scope 0 at ui/numeric/numeric-cast-binop_fixed.rs:223:18: 223:36
    let mut _223: isize;                 // in scope 0 at ui/numeric/numeric-cast-binop_fixed.rs:223:18: 223:25
    let mut _224: usize;                 // in scope 0 at ui/numeric/numeric-cast-binop_fixed.rs:226:19: 226:43
    let mut _225: std::result::Result<usize, std::num::TryFromIntError>; // in scope 0 at ui/numeric/numeric-cast-binop_fixed.rs:226:19: 226:34
    let mut _226: i8;                    // in scope 0 at ui/numeric/numeric-cast-binop_fixed.rs:226:19: 226:23
    let mut _227: usize;                 // in scope 0 at ui/numeric/numeric-cast-binop_fixed.rs:228:19: 228:44
    let mut _228: std::result::Result<usize, std::num::TryFromIntError>; // in scope 0 at ui/numeric/numeric-cast-binop_fixed.rs:228:19: 228:35
    let mut _229: i16;                   // in scope 0 at ui/numeric/numeric-cast-binop_fixed.rs:228:19: 228:24
    let mut _230: usize;                 // in scope 0 at ui/numeric/numeric-cast-binop_fixed.rs:230:19: 230:44
    let mut _231: std::result::Result<usize, std::num::TryFromIntError>; // in scope 0 at ui/numeric/numeric-cast-binop_fixed.rs:230:19: 230:35
    let mut _232: i32;                   // in scope 0 at ui/numeric/numeric-cast-binop_fixed.rs:230:19: 230:24
    let mut _233: usize;                 // in scope 0 at ui/numeric/numeric-cast-binop_fixed.rs:232:19: 232:44
    let mut _234: std::result::Result<usize, std::num::TryFromIntError>; // in scope 0 at ui/numeric/numeric-cast-binop_fixed.rs:232:19: 232:35
    let mut _235: i64;                   // in scope 0 at ui/numeric/numeric-cast-binop_fixed.rs:232:19: 232:24
    let mut _236: usize;                 // in scope 0 at ui/numeric/numeric-cast-binop_fixed.rs:234:19: 234:45
    let mut _237: std::result::Result<usize, std::num::TryFromIntError>; // in scope 0 at ui/numeric/numeric-cast-binop_fixed.rs:234:19: 234:36
    let mut _238: i128;                  // in scope 0 at ui/numeric/numeric-cast-binop_fixed.rs:234:19: 234:25
    let mut _239: usize;                 // in scope 0 at ui/numeric/numeric-cast-binop_fixed.rs:236:19: 236:46
    let mut _240: std::result::Result<usize, std::num::TryFromIntError>; // in scope 0 at ui/numeric/numeric-cast-binop_fixed.rs:236:19: 236:37
    let mut _241: isize;                 // in scope 0 at ui/numeric/numeric-cast-binop_fixed.rs:236:19: 236:26
    let mut _242: i8;                    // in scope 0 at ui/numeric/numeric-cast-binop_fixed.rs:242:16: 242:40
    let mut _243: std::result::Result<i8, std::num::TryFromIntError>; // in scope 0 at ui/numeric/numeric-cast-binop_fixed.rs:242:16: 242:31
    let mut _244: u8;                    // in scope 0 at ui/numeric/numeric-cast-binop_fixed.rs:242:16: 242:20
    let mut _245: i8;                    // in scope 0 at ui/numeric/numeric-cast-binop_fixed.rs:244:16: 244:41
    let mut _246: std::result::Result<i8, std::num::TryFromIntError>; // in scope 0 at ui/numeric/numeric-cast-binop_fixed.rs:244:16: 244:32
    let mut _247: u16;                   // in scope 0 at ui/numeric/numeric-cast-binop_fixed.rs:244:16: 244:21
    let mut _248: i8;                    // in scope 0 at ui/numeric/numeric-cast-binop_fixed.rs:246:16: 246:41
    let mut _249: std::result::Result<i8, std::num::TryFromIntError>; // in scope 0 at ui/numeric/numeric-cast-binop_fixed.rs:246:16: 246:32
    let mut _250: u32;                   // in scope 0 at ui/numeric/numeric-cast-binop_fixed.rs:246:16: 246:21
    let mut _251: i8;                    // in scope 0 at ui/numeric/numeric-cast-binop_fixed.rs:248:16: 248:41
    let mut _252: std::result::Result<i8, std::num::TryFromIntError>; // in scope 0 at ui/numeric/numeric-cast-binop_fixed.rs:248:16: 248:32
    let mut _253: u64;                   // in scope 0 at ui/numeric/numeric-cast-binop_fixed.rs:248:16: 248:21
    let mut _254: i8;                    // in scope 0 at ui/numeric/numeric-cast-binop_fixed.rs:250:16: 250:42
    let mut _255: std::result::Result<i8, std::num::TryFromIntError>; // in scope 0 at ui/numeric/numeric-cast-binop_fixed.rs:250:16: 250:33
    let mut _256: u128;                  // in scope 0 at ui/numeric/numeric-cast-binop_fixed.rs:250:16: 250:22
    let mut _257: i8;                    // in scope 0 at ui/numeric/numeric-cast-binop_fixed.rs:252:16: 252:43
    let mut _258: std::result::Result<i8, std::num::TryFromIntError>; // in scope 0 at ui/numeric/numeric-cast-binop_fixed.rs:252:16: 252:34
    let mut _259: usize;                 // in scope 0 at ui/numeric/numeric-cast-binop_fixed.rs:252:16: 252:23
    let mut _260: i16;                   // in scope 0 at ui/numeric/numeric-cast-binop_fixed.rs:255:17: 255:28
    let mut _261: u8;                    // in scope 0 at ui/numeric/numeric-cast-binop_fixed.rs:255:17: 255:21
    let mut _262: i16;                   // in scope 0 at ui/numeric/numeric-cast-binop_fixed.rs:257:17: 257:42
    let mut _263: std::result::Result<i16, std::num::TryFromIntError>; // in scope 0 at ui/numeric/numeric-cast-binop_fixed.rs:257:17: 257:33
    let mut _264: u16;                   // in scope 0 at ui/numeric/numeric-cast-binop_fixed.rs:257:17: 257:22
    let mut _265: i16;                   // in scope 0 at ui/numeric/numeric-cast-binop_fixed.rs:259:17: 259:42
    let mut _266: std::result::Result<i16, std::num::TryFromIntError>; // in scope 0 at ui/numeric/numeric-cast-binop_fixed.rs:259:17: 259:33
    let mut _267: u32;                   // in scope 0 at ui/numeric/numeric-cast-binop_fixed.rs:259:17: 259:22
    let mut _268: i16;                   // in scope 0 at ui/numeric/numeric-cast-binop_fixed.rs:261:17: 261:42
    let mut _269: std::result::Result<i16, std::num::TryFromIntError>; // in scope 0 at ui/numeric/numeric-cast-binop_fixed.rs:261:17: 261:33
    let mut _270: u64;                   // in scope 0 at ui/numeric/numeric-cast-binop_fixed.rs:261:17: 261:22
    let mut _271: i16;                   // in scope 0 at ui/numeric/numeric-cast-binop_fixed.rs:263:17: 263:43
    let mut _272: std::result::Result<i16, std::num::TryFromIntError>; // in scope 0 at ui/numeric/numeric-cast-binop_fixed.rs:263:17: 263:34
    let mut _273: u128;                  // in scope 0 at ui/numeric/numeric-cast-binop_fixed.rs:263:17: 263:23
    let mut _274: i16;                   // in scope 0 at ui/numeric/numeric-cast-binop_fixed.rs:265:17: 265:44
    let mut _275: std::result::Result<i16, std::num::TryFromIntError>; // in scope 0 at ui/numeric/numeric-cast-binop_fixed.rs:265:17: 265:35
    let mut _276: usize;                 // in scope 0 at ui/numeric/numeric-cast-binop_fixed.rs:265:17: 265:24
    let mut _277: i32;                   // in scope 0 at ui/numeric/numeric-cast-binop_fixed.rs:268:17: 268:28
    let mut _278: u8;                    // in scope 0 at ui/numeric/numeric-cast-binop_fixed.rs:268:17: 268:21
    let mut _279: i32;                   // in scope 0 at ui/numeric/numeric-cast-binop_fixed.rs:270:17: 270:29
    let mut _280: u16;                   // in scope 0 at ui/numeric/numeric-cast-binop_fixed.rs:270:17: 270:22
    let mut _281: i32;                   // in scope 0 at ui/numeric/numeric-cast-binop_fixed.rs:272:17: 272:42
    let mut _282: std::result::Result<i32, std::num::TryFromIntError>; // in scope 0 at ui/numeric/numeric-cast-binop_fixed.rs:272:17: 272:33
    let mut _283: u32;                   // in scope 0 at ui/numeric/numeric-cast-binop_fixed.rs:272:17: 272:22
    let mut _284: i32;                   // in scope 0 at ui/numeric/numeric-cast-binop_fixed.rs:274:17: 274:42
    let mut _285: std::result::Result<i32, std::num::TryFromIntError>; // in scope 0 at ui/numeric/numeric-cast-binop_fixed.rs:274:17: 274:33
    let mut _286: u64;                   // in scope 0 at ui/numeric/numeric-cast-binop_fixed.rs:274:17: 274:22
    let mut _287: i32;                   // in scope 0 at ui/numeric/numeric-cast-binop_fixed.rs:276:17: 276:43
    let mut _288: std::result::Result<i32, std::num::TryFromIntError>; // in scope 0 at ui/numeric/numeric-cast-binop_fixed.rs:276:17: 276:34
    let mut _289: u128;                  // in scope 0 at ui/numeric/numeric-cast-binop_fixed.rs:276:17: 276:23
    let mut _290: i32;                   // in scope 0 at ui/numeric/numeric-cast-binop_fixed.rs:278:17: 278:44
    let mut _291: std::result::Result<i32, std::num::TryFromIntError>; // in scope 0 at ui/numeric/numeric-cast-binop_fixed.rs:278:17: 278:35
    let mut _292: usize;                 // in scope 0 at ui/numeric/numeric-cast-binop_fixed.rs:278:17: 278:24
    let mut _293: i64;                   // in scope 0 at ui/numeric/numeric-cast-binop_fixed.rs:281:17: 281:28
    let mut _294: u8;                    // in scope 0 at ui/numeric/numeric-cast-binop_fixed.rs:281:17: 281:21
    let mut _295: i64;                   // in scope 0 at ui/numeric/numeric-cast-binop_fixed.rs:283:17: 283:29
    let mut _296: u16;                   // in scope 0 at ui/numeric/numeric-cast-binop_fixed.rs:283:17: 283:22
    let mut _297: i64;                   // in scope 0 at ui/numeric/numeric-cast-binop_fixed.rs:285:17: 285:29
    let mut _298: u32;                   // in scope 0 at ui/numeric/numeric-cast-binop_fixed.rs:285:17: 285:22
    let mut _299: i64;                   // in scope 0 at ui/numeric/numeric-cast-binop_fixed.rs:287:17: 287:42
    let mut _300: std::result::Result<i64, std::num::TryFromIntError>; // in scope 0 at ui/numeric/numeric-cast-binop_fixed.rs:287:17: 287:33
    let mut _301: u64;                   // in scope 0 at ui/numeric/numeric-cast-binop_fixed.rs:287:17: 287:22
    let mut _302: i64;                   // in scope 0 at ui/numeric/numeric-cast-binop_fixed.rs:289:17: 289:43
    let mut _303: std::result::Result<i64, std::num::TryFromIntError>; // in scope 0 at ui/numeric/numeric-cast-binop_fixed.rs:289:17: 289:34
    let mut _304: u128;                  // in scope 0 at ui/numeric/numeric-cast-binop_fixed.rs:289:17: 289:23
    let mut _305: i64;                   // in scope 0 at ui/numeric/numeric-cast-binop_fixed.rs:291:17: 291:44
    let mut _306: std::result::Result<i64, std::num::TryFromIntError>; // in scope 0 at ui/numeric/numeric-cast-binop_fixed.rs:291:17: 291:35
    let mut _307: usize;                 // in scope 0 at ui/numeric/numeric-cast-binop_fixed.rs:291:17: 291:24
    let mut _308: i128;                  // in scope 0 at ui/numeric/numeric-cast-binop_fixed.rs:294:18: 294:29
    let mut _309: u8;                    // in scope 0 at ui/numeric/numeric-cast-binop_fixed.rs:294:18: 294:22
    let mut _310: i128;                  // in scope 0 at ui/numeric/numeric-cast-binop_fixed.rs:296:18: 296:30
    let mut _311: u16;                   // in scope 0 at ui/numeric/numeric-cast-binop_fixed.rs:296:18: 296:23
    let mut _312: i128;                  // in scope 0 at ui/numeric/numeric-cast-binop_fixed.rs:298:18: 298:30
    let mut _313: u32;                   // in scope 0 at ui/numeric/numeric-cast-binop_fixed.rs:298:18: 298:23
    let mut _314: i128;                  // in scope 0 at ui/numeric/numeric-cast-binop_fixed.rs:300:18: 300:30
    let mut _315: u64;                   // in scope 0 at ui/numeric/numeric-cast-binop_fixed.rs:300:18: 300:23
    let mut _316: i128;                  // in scope 0 at ui/numeric/numeric-cast-binop_fixed.rs:302:18: 302:44
    let mut _317: std::result::Result<i128, std::num::TryFromIntError>; // in scope 0 at ui/numeric/numeric-cast-binop_fixed.rs:302:18: 302:35
    let mut _318: u128;                  // in scope 0 at ui/numeric/numeric-cast-binop_fixed.rs:302:18: 302:24
    let mut _319: i128;                  // in scope 0 at ui/numeric/numeric-cast-binop_fixed.rs:304:18: 304:45
    let mut _320: std::result::Result<i128, std::num::TryFromIntError>; // in scope 0 at ui/numeric/numeric-cast-binop_fixed.rs:304:18: 304:36
    let mut _321: usize;                 // in scope 0 at ui/numeric/numeric-cast-binop_fixed.rs:304:18: 304:25
    let mut _322: isize;                 // in scope 0 at ui/numeric/numeric-cast-binop_fixed.rs:307:19: 307:30
    let mut _323: u8;                    // in scope 0 at ui/numeric/numeric-cast-binop_fixed.rs:307:19: 307:23
    let mut _324: isize;                 // in scope 0 at ui/numeric/numeric-cast-binop_fixed.rs:309:19: 309:44
    let mut _325: std::result::Result<isize, std::num::TryFromIntError>; // in scope 0 at ui/numeric/numeric-cast-binop_fixed.rs:309:19: 309:35
    let mut _326: u16;                   // in scope 0 at ui/numeric/numeric-cast-binop_fixed.rs:309:19: 309:24
    let mut _327: isize;                 // in scope 0 at ui/numeric/numeric-cast-binop_fixed.rs:311:19: 311:44
    let mut _328: std::result::Result<isize, std::num::TryFromIntError>; // in scope 0 at ui/numeric/numeric-cast-binop_fixed.rs:311:19: 311:35
    let mut _329: u32;                   // in scope 0 at ui/numeric/numeric-cast-binop_fixed.rs:311:19: 311:24
    let mut _330: isize;                 // in scope 0 at ui/numeric/numeric-cast-binop_fixed.rs:313:19: 313:44
    let mut _331: std::result::Result<isize, std::num::TryFromIntError>; // in scope 0 at ui/numeric/numeric-cast-binop_fixed.rs:313:19: 313:35
    let mut _332: u64;                   // in scope 0 at ui/numeric/numeric-cast-binop_fixed.rs:313:19: 313:24
    let mut _333: isize;                 // in scope 0 at ui/numeric/numeric-cast-binop_fixed.rs:315:19: 315:45
    let mut _334: std::result::Result<isize, std::num::TryFromIntError>; // in scope 0 at ui/numeric/numeric-cast-binop_fixed.rs:315:19: 315:36
    let mut _335: u128;                  // in scope 0 at ui/numeric/numeric-cast-binop_fixed.rs:315:19: 315:25
    let mut _336: isize;                 // in scope 0 at ui/numeric/numeric-cast-binop_fixed.rs:317:19: 317:46
    let mut _337: std::result::Result<isize, std::num::TryFromIntError>; // in scope 0 at ui/numeric/numeric-cast-binop_fixed.rs:317:19: 317:37
    let mut _338: usize;                 // in scope 0 at ui/numeric/numeric-cast-binop_fixed.rs:317:19: 317:26
    scope 1 {
        debug x_usize => _1;             // in scope 1 at ui/numeric/numeric-cast-binop_fixed.rs:8:9: 8:16
        let _2: u128;                    // in scope 1 at ui/numeric/numeric-cast-binop_fixed.rs:9:9: 9:15
        scope 2 {
            debug x_u128 => _2;          // in scope 2 at ui/numeric/numeric-cast-binop_fixed.rs:9:9: 9:15
            let _3: u64;                 // in scope 2 at ui/numeric/numeric-cast-binop_fixed.rs:10:9: 10:14
            scope 3 {
                debug x_u64 => _3;       // in scope 3 at ui/numeric/numeric-cast-binop_fixed.rs:10:9: 10:14
                let _4: u32;             // in scope 3 at ui/numeric/numeric-cast-binop_fixed.rs:11:9: 11:14
                scope 4 {
                    debug x_u32 => _4;   // in scope 4 at ui/numeric/numeric-cast-binop_fixed.rs:11:9: 11:14
                    let _5: u16;         // in scope 4 at ui/numeric/numeric-cast-binop_fixed.rs:12:9: 12:14
                    scope 5 {
                        debug x_u16 => _5; // in scope 5 at ui/numeric/numeric-cast-binop_fixed.rs:12:9: 12:14
                        let _6: u8;      // in scope 5 at ui/numeric/numeric-cast-binop_fixed.rs:13:9: 13:13
                        scope 6 {
                            debug x_u8 => _6; // in scope 6 at ui/numeric/numeric-cast-binop_fixed.rs:13:9: 13:13
                            let _7: isize; // in scope 6 at ui/numeric/numeric-cast-binop_fixed.rs:14:9: 14:16
                            scope 7 {
                                debug x_isize => _7; // in scope 7 at ui/numeric/numeric-cast-binop_fixed.rs:14:9: 14:16
                                let _8: i64; // in scope 7 at ui/numeric/numeric-cast-binop_fixed.rs:15:9: 15:14
                                scope 8 {
                                    debug x_i64 => _8; // in scope 8 at ui/numeric/numeric-cast-binop_fixed.rs:15:9: 15:14
                                    let _9: i32; // in scope 8 at ui/numeric/numeric-cast-binop_fixed.rs:16:9: 16:14
                                    scope 9 {
                                        debug x_i32 => _9; // in scope 9 at ui/numeric/numeric-cast-binop_fixed.rs:16:9: 16:14
                                        let _10: i16; // in scope 9 at ui/numeric/numeric-cast-binop_fixed.rs:17:9: 17:14
                                        scope 10 {
                                            debug x_i16 => _10; // in scope 10 at ui/numeric/numeric-cast-binop_fixed.rs:17:9: 17:14
                                            let _11: i8; // in scope 10 at ui/numeric/numeric-cast-binop_fixed.rs:18:9: 18:13
                                            scope 11 {
                                                debug x_i8 => _11; // in scope 11 at ui/numeric/numeric-cast-binop_fixed.rs:18:9: 18:13
                                                let _12: i128; // in scope 11 at ui/numeric/numeric-cast-binop_fixed.rs:19:9: 19:15
                                                scope 12 {
                                                    debug x_i128 => _12; // in scope 12 at ui/numeric/numeric-cast-binop_fixed.rs:19:9: 19:15
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    }

    bb0: {
        _1 = const 1_usize;              // scope 0 at ui/numeric/numeric-cast-binop_fixed.rs:8:26: 8:27
        _2 = const 2_u128;               // scope 1 at ui/numeric/numeric-cast-binop_fixed.rs:9:24: 9:25
        _3 = const 3_u64;                // scope 2 at ui/numeric/numeric-cast-binop_fixed.rs:10:22: 10:23
        _4 = const 4_u32;                // scope 3 at ui/numeric/numeric-cast-binop_fixed.rs:11:22: 11:23
        _5 = const 5_u16;                // scope 4 at ui/numeric/numeric-cast-binop_fixed.rs:12:22: 12:23
        _6 = const 6_u8;                 // scope 5 at ui/numeric/numeric-cast-binop_fixed.rs:13:20: 13:21
        _7 = const 7_isize;              // scope 6 at ui/numeric/numeric-cast-binop_fixed.rs:14:26: 14:27
        _8 = const 8_i64;                // scope 7 at ui/numeric/numeric-cast-binop_fixed.rs:15:22: 15:23
        _9 = const 9_i32;                // scope 8 at ui/numeric/numeric-cast-binop_fixed.rs:16:22: 16:23
        _10 = const 10_i16;              // scope 9 at ui/numeric/numeric-cast-binop_fixed.rs:17:22: 17:24
        _11 = const 11_i8;               // scope 10 at ui/numeric/numeric-cast-binop_fixed.rs:18:20: 18:22
        _12 = const 12_i128;             // scope 11 at ui/numeric/numeric-cast-binop_fixed.rs:19:24: 19:26
        _14 = const 6_u8;                // scope 12 at ui/numeric/numeric-cast-binop_fixed.rs:23:19: 23:23
        _13 = <u16 as From<u8>>::from(move _14) -> bb1; // scope 12 at ui/numeric/numeric-cast-binop_fixed.rs:23:9: 23:24
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast-binop_fixed.rs:23:9: 23:18
                                         // + user_ty: UserType(24)
                                         // + literal: Const { ty: fn(u8) -> u16 {<u16 as From<u8>>::from}, val: Value(<ZST>) }
    }

    bb1: {
        _16 = _6;                        // scope 12 at ui/numeric/numeric-cast-binop_fixed.rs:25:19: 25:23
        _15 = <u32 as From<u8>>::from(move _16) -> bb2; // scope 12 at ui/numeric/numeric-cast-binop_fixed.rs:25:9: 25:24
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast-binop_fixed.rs:25:9: 25:18
                                         // + user_ty: UserType(25)
                                         // + literal: Const { ty: fn(u8) -> u32 {<u32 as From<u8>>::from}, val: Value(<ZST>) }
    }

    bb2: {
        _18 = _6;                        // scope 12 at ui/numeric/numeric-cast-binop_fixed.rs:27:19: 27:23
        _17 = <u64 as From<u8>>::from(move _18) -> bb3; // scope 12 at ui/numeric/numeric-cast-binop_fixed.rs:27:9: 27:24
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast-binop_fixed.rs:27:9: 27:18
                                         // + user_ty: UserType(26)
                                         // + literal: Const { ty: fn(u8) -> u64 {<u64 as From<u8>>::from}, val: Value(<ZST>) }
    }

    bb3: {
        _20 = _6;                        // scope 12 at ui/numeric/numeric-cast-binop_fixed.rs:29:20: 29:24
        _19 = <u128 as From<u8>>::from(move _20) -> bb4; // scope 12 at ui/numeric/numeric-cast-binop_fixed.rs:29:9: 29:25
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast-binop_fixed.rs:29:9: 29:19
                                         // + user_ty: UserType(27)
                                         // + literal: Const { ty: fn(u8) -> u128 {<u128 as From<u8>>::from}, val: Value(<ZST>) }
    }

    bb4: {
        _22 = _6;                        // scope 12 at ui/numeric/numeric-cast-binop_fixed.rs:31:21: 31:25
        _21 = <usize as From<u8>>::from(move _22) -> bb5; // scope 12 at ui/numeric/numeric-cast-binop_fixed.rs:31:9: 31:26
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast-binop_fixed.rs:31:9: 31:20
                                         // + user_ty: UserType(28)
                                         // + literal: Const { ty: fn(u8) -> usize {<usize as From<u8>>::from}, val: Value(<ZST>) }
    }

    bb5: {
        _24 = _6;                        // scope 12 at ui/numeric/numeric-cast-binop_fixed.rs:34:17: 34:21
        _23 = <u8 as Into<u16>>::into(move _24) -> bb6; // scope 12 at ui/numeric/numeric-cast-binop_fixed.rs:34:17: 34:28
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast-binop_fixed.rs:34:22: 34:26
                                         // + literal: Const { ty: fn(u8) -> u16 {<u8 as Into<u16>>::into}, val: Value(<ZST>) }
    }

    bb6: {
        _26 = _5;                        // scope 12 at ui/numeric/numeric-cast-binop_fixed.rs:36:19: 36:24
        _25 = <u32 as From<u16>>::from(move _26) -> bb7; // scope 12 at ui/numeric/numeric-cast-binop_fixed.rs:36:9: 36:25
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast-binop_fixed.rs:36:9: 36:18
                                         // + user_ty: UserType(29)
                                         // + literal: Const { ty: fn(u16) -> u32 {<u32 as From<u16>>::from}, val: Value(<ZST>) }
    }

    bb7: {
        _28 = _5;                        // scope 12 at ui/numeric/numeric-cast-binop_fixed.rs:38:19: 38:24
        _27 = <u64 as From<u16>>::from(move _28) -> bb8; // scope 12 at ui/numeric/numeric-cast-binop_fixed.rs:38:9: 38:25
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast-binop_fixed.rs:38:9: 38:18
                                         // + user_ty: UserType(30)
                                         // + literal: Const { ty: fn(u16) -> u64 {<u64 as From<u16>>::from}, val: Value(<ZST>) }
    }

    bb8: {
        _30 = _5;                        // scope 12 at ui/numeric/numeric-cast-binop_fixed.rs:40:20: 40:25
        _29 = <u128 as From<u16>>::from(move _30) -> bb9; // scope 12 at ui/numeric/numeric-cast-binop_fixed.rs:40:9: 40:26
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast-binop_fixed.rs:40:9: 40:19
                                         // + user_ty: UserType(31)
                                         // + literal: Const { ty: fn(u16) -> u128 {<u128 as From<u16>>::from}, val: Value(<ZST>) }
    }

    bb9: {
        _32 = _5;                        // scope 12 at ui/numeric/numeric-cast-binop_fixed.rs:42:21: 42:26
        _31 = <usize as From<u16>>::from(move _32) -> bb10; // scope 12 at ui/numeric/numeric-cast-binop_fixed.rs:42:9: 42:27
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast-binop_fixed.rs:42:9: 42:20
                                         // + user_ty: UserType(32)
                                         // + literal: Const { ty: fn(u16) -> usize {<usize as From<u16>>::from}, val: Value(<ZST>) }
    }

    bb10: {
        _34 = _6;                        // scope 12 at ui/numeric/numeric-cast-binop_fixed.rs:45:17: 45:21
        _33 = <u8 as Into<u32>>::into(move _34) -> bb11; // scope 12 at ui/numeric/numeric-cast-binop_fixed.rs:45:17: 45:28
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast-binop_fixed.rs:45:22: 45:26
                                         // + literal: Const { ty: fn(u8) -> u32 {<u8 as Into<u32>>::into}, val: Value(<ZST>) }
    }

    bb11: {
        _36 = _5;                        // scope 12 at ui/numeric/numeric-cast-binop_fixed.rs:47:17: 47:22
        _35 = <u16 as Into<u32>>::into(move _36) -> bb12; // scope 12 at ui/numeric/numeric-cast-binop_fixed.rs:47:17: 47:29
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast-binop_fixed.rs:47:23: 47:27
                                         // + literal: Const { ty: fn(u16) -> u32 {<u16 as Into<u32>>::into}, val: Value(<ZST>) }
    }

    bb12: {
        _38 = _4;                        // scope 12 at ui/numeric/numeric-cast-binop_fixed.rs:49:19: 49:24
        _37 = <u64 as From<u32>>::from(move _38) -> bb13; // scope 12 at ui/numeric/numeric-cast-binop_fixed.rs:49:9: 49:25
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast-binop_fixed.rs:49:9: 49:18
                                         // + user_ty: UserType(33)
                                         // + literal: Const { ty: fn(u32) -> u64 {<u64 as From<u32>>::from}, val: Value(<ZST>) }
    }

    bb13: {
        _40 = _4;                        // scope 12 at ui/numeric/numeric-cast-binop_fixed.rs:51:20: 51:25
        _39 = <u128 as From<u32>>::from(move _40) -> bb14; // scope 12 at ui/numeric/numeric-cast-binop_fixed.rs:51:9: 51:26
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast-binop_fixed.rs:51:9: 51:19
                                         // + user_ty: UserType(34)
                                         // + literal: Const { ty: fn(u32) -> u128 {<u128 as From<u32>>::from}, val: Value(<ZST>) }
    }

    bb14: {
        _43 = _1;                        // scope 12 at ui/numeric/numeric-cast-binop_fixed.rs:53:17: 53:24
        _42 = <usize as TryInto<u32>>::try_into(move _43) -> bb15; // scope 12 at ui/numeric/numeric-cast-binop_fixed.rs:53:17: 53:35
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast-binop_fixed.rs:53:25: 53:33
                                         // + literal: Const { ty: fn(usize) -> Result<u32, <usize as TryInto<u32>>::Error> {<usize as TryInto<u32>>::try_into}, val: Value(<ZST>) }
    }

    bb15: {
        _41 = Result::<u32, TryFromIntError>::unwrap(move _42) -> bb16; // scope 12 at ui/numeric/numeric-cast-binop_fixed.rs:53:17: 53:44
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast-binop_fixed.rs:53:36: 53:42
                                         // + literal: Const { ty: fn(Result<u32, TryFromIntError>) -> u32 {Result::<u32, TryFromIntError>::unwrap}, val: Value(<ZST>) }
    }

    bb16: {
        _45 = _6;                        // scope 12 at ui/numeric/numeric-cast-binop_fixed.rs:56:17: 56:21
        _44 = <u8 as Into<u64>>::into(move _45) -> bb17; // scope 12 at ui/numeric/numeric-cast-binop_fixed.rs:56:17: 56:28
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast-binop_fixed.rs:56:22: 56:26
                                         // + literal: Const { ty: fn(u8) -> u64 {<u8 as Into<u64>>::into}, val: Value(<ZST>) }
    }

    bb17: {
        _47 = _5;                        // scope 12 at ui/numeric/numeric-cast-binop_fixed.rs:58:17: 58:22
        _46 = <u16 as Into<u64>>::into(move _47) -> bb18; // scope 12 at ui/numeric/numeric-cast-binop_fixed.rs:58:17: 58:29
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast-binop_fixed.rs:58:23: 58:27
                                         // + literal: Const { ty: fn(u16) -> u64 {<u16 as Into<u64>>::into}, val: Value(<ZST>) }
    }

    bb18: {
        _49 = _4;                        // scope 12 at ui/numeric/numeric-cast-binop_fixed.rs:60:17: 60:22
        _48 = <u32 as Into<u64>>::into(move _49) -> bb19; // scope 12 at ui/numeric/numeric-cast-binop_fixed.rs:60:17: 60:29
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast-binop_fixed.rs:60:23: 60:27
                                         // + literal: Const { ty: fn(u32) -> u64 {<u32 as Into<u64>>::into}, val: Value(<ZST>) }
    }

    bb19: {
        _51 = _3;                        // scope 12 at ui/numeric/numeric-cast-binop_fixed.rs:62:20: 62:25
        _50 = <u128 as From<u64>>::from(move _51) -> bb20; // scope 12 at ui/numeric/numeric-cast-binop_fixed.rs:62:9: 62:26
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast-binop_fixed.rs:62:9: 62:19
                                         // + user_ty: UserType(35)
                                         // + literal: Const { ty: fn(u64) -> u128 {<u128 as From<u64>>::from}, val: Value(<ZST>) }
    }

    bb20: {
        _54 = _1;                        // scope 12 at ui/numeric/numeric-cast-binop_fixed.rs:64:17: 64:24
        _53 = <usize as TryInto<u64>>::try_into(move _54) -> bb21; // scope 12 at ui/numeric/numeric-cast-binop_fixed.rs:64:17: 64:35
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast-binop_fixed.rs:64:25: 64:33
                                         // + literal: Const { ty: fn(usize) -> Result<u64, <usize as TryInto<u64>>::Error> {<usize as TryInto<u64>>::try_into}, val: Value(<ZST>) }
    }

    bb21: {
        _52 = Result::<u64, TryFromIntError>::unwrap(move _53) -> bb22; // scope 12 at ui/numeric/numeric-cast-binop_fixed.rs:64:17: 64:44
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast-binop_fixed.rs:64:36: 64:42
                                         // + literal: Const { ty: fn(Result<u64, TryFromIntError>) -> u64 {Result::<u64, TryFromIntError>::unwrap}, val: Value(<ZST>) }
    }

    bb22: {
        _56 = _6;                        // scope 12 at ui/numeric/numeric-cast-binop_fixed.rs:67:18: 67:22
        _55 = <u8 as Into<u128>>::into(move _56) -> bb23; // scope 12 at ui/numeric/numeric-cast-binop_fixed.rs:67:18: 67:29
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast-binop_fixed.rs:67:23: 67:27
                                         // + literal: Const { ty: fn(u8) -> u128 {<u8 as Into<u128>>::into}, val: Value(<ZST>) }
    }

    bb23: {
        _58 = _5;                        // scope 12 at ui/numeric/numeric-cast-binop_fixed.rs:69:18: 69:23
        _57 = <u16 as Into<u128>>::into(move _58) -> bb24; // scope 12 at ui/numeric/numeric-cast-binop_fixed.rs:69:18: 69:30
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast-binop_fixed.rs:69:24: 69:28
                                         // + literal: Const { ty: fn(u16) -> u128 {<u16 as Into<u128>>::into}, val: Value(<ZST>) }
    }

    bb24: {
        _60 = _4;                        // scope 12 at ui/numeric/numeric-cast-binop_fixed.rs:71:18: 71:23
        _59 = <u32 as Into<u128>>::into(move _60) -> bb25; // scope 12 at ui/numeric/numeric-cast-binop_fixed.rs:71:18: 71:30
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast-binop_fixed.rs:71:24: 71:28
                                         // + literal: Const { ty: fn(u32) -> u128 {<u32 as Into<u128>>::into}, val: Value(<ZST>) }
    }

    bb25: {
        _62 = _3;                        // scope 12 at ui/numeric/numeric-cast-binop_fixed.rs:73:18: 73:23
        _61 = <u64 as Into<u128>>::into(move _62) -> bb26; // scope 12 at ui/numeric/numeric-cast-binop_fixed.rs:73:18: 73:30
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast-binop_fixed.rs:73:24: 73:28
                                         // + literal: Const { ty: fn(u64) -> u128 {<u64 as Into<u128>>::into}, val: Value(<ZST>) }
    }

    bb26: {
        _65 = _1;                        // scope 12 at ui/numeric/numeric-cast-binop_fixed.rs:75:18: 75:25
        _64 = <usize as TryInto<u128>>::try_into(move _65) -> bb27; // scope 12 at ui/numeric/numeric-cast-binop_fixed.rs:75:18: 75:36
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast-binop_fixed.rs:75:26: 75:34
                                         // + literal: Const { ty: fn(usize) -> Result<u128, <usize as TryInto<u128>>::Error> {<usize as TryInto<u128>>::try_into}, val: Value(<ZST>) }
    }

    bb27: {
        _63 = Result::<u128, TryFromIntError>::unwrap(move _64) -> bb28; // scope 12 at ui/numeric/numeric-cast-binop_fixed.rs:75:18: 75:45
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast-binop_fixed.rs:75:37: 75:43
                                         // + literal: Const { ty: fn(Result<u128, TryFromIntError>) -> u128 {Result::<u128, TryFromIntError>::unwrap}, val: Value(<ZST>) }
    }

    bb28: {
        _67 = _6;                        // scope 12 at ui/numeric/numeric-cast-binop_fixed.rs:78:19: 78:23
        _66 = <u8 as Into<usize>>::into(move _67) -> bb29; // scope 12 at ui/numeric/numeric-cast-binop_fixed.rs:78:19: 78:30
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast-binop_fixed.rs:78:24: 78:28
                                         // + literal: Const { ty: fn(u8) -> usize {<u8 as Into<usize>>::into}, val: Value(<ZST>) }
    }

    bb29: {
        _69 = _5;                        // scope 12 at ui/numeric/numeric-cast-binop_fixed.rs:80:19: 80:24
        _68 = <u16 as Into<usize>>::into(move _69) -> bb30; // scope 12 at ui/numeric/numeric-cast-binop_fixed.rs:80:19: 80:31
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast-binop_fixed.rs:80:25: 80:29
                                         // + literal: Const { ty: fn(u16) -> usize {<u16 as Into<usize>>::into}, val: Value(<ZST>) }
    }

    bb30: {
        _72 = _4;                        // scope 12 at ui/numeric/numeric-cast-binop_fixed.rs:82:19: 82:24
        _71 = <u32 as TryInto<usize>>::try_into(move _72) -> bb31; // scope 12 at ui/numeric/numeric-cast-binop_fixed.rs:82:19: 82:35
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast-binop_fixed.rs:82:25: 82:33
                                         // + literal: Const { ty: fn(u32) -> Result<usize, <u32 as TryInto<usize>>::Error> {<u32 as TryInto<usize>>::try_into}, val: Value(<ZST>) }
    }

    bb31: {
        _70 = Result::<usize, TryFromIntError>::unwrap(move _71) -> bb32; // scope 12 at ui/numeric/numeric-cast-binop_fixed.rs:82:19: 82:44
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast-binop_fixed.rs:82:36: 82:42
                                         // + literal: Const { ty: fn(Result<usize, TryFromIntError>) -> usize {Result::<usize, TryFromIntError>::unwrap}, val: Value(<ZST>) }
    }

    bb32: {
        _75 = _3;                        // scope 12 at ui/numeric/numeric-cast-binop_fixed.rs:84:19: 84:24
        _74 = <u64 as TryInto<usize>>::try_into(move _75) -> bb33; // scope 12 at ui/numeric/numeric-cast-binop_fixed.rs:84:19: 84:35
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast-binop_fixed.rs:84:25: 84:33
                                         // + literal: Const { ty: fn(u64) -> Result<usize, <u64 as TryInto<usize>>::Error> {<u64 as TryInto<usize>>::try_into}, val: Value(<ZST>) }
    }

    bb33: {
        _73 = Result::<usize, TryFromIntError>::unwrap(move _74) -> bb34; // scope 12 at ui/numeric/numeric-cast-binop_fixed.rs:84:19: 84:44
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast-binop_fixed.rs:84:36: 84:42
                                         // + literal: Const { ty: fn(Result<usize, TryFromIntError>) -> usize {Result::<usize, TryFromIntError>::unwrap}, val: Value(<ZST>) }
    }

    bb34: {
        _78 = _2;                        // scope 12 at ui/numeric/numeric-cast-binop_fixed.rs:86:19: 86:25
        _77 = <u128 as TryInto<usize>>::try_into(move _78) -> bb35; // scope 12 at ui/numeric/numeric-cast-binop_fixed.rs:86:19: 86:36
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast-binop_fixed.rs:86:26: 86:34
                                         // + literal: Const { ty: fn(u128) -> Result<usize, <u128 as TryInto<usize>>::Error> {<u128 as TryInto<usize>>::try_into}, val: Value(<ZST>) }
    }

    bb35: {
        _76 = Result::<usize, TryFromIntError>::unwrap(move _77) -> bb36; // scope 12 at ui/numeric/numeric-cast-binop_fixed.rs:86:19: 86:45
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast-binop_fixed.rs:86:37: 86:43
                                         // + literal: Const { ty: fn(Result<usize, TryFromIntError>) -> usize {Result::<usize, TryFromIntError>::unwrap}, val: Value(<ZST>) }
    }

    bb36: {
        _80 = _11;                       // scope 12 at ui/numeric/numeric-cast-binop_fixed.rs:92:19: 92:23
        _79 = <i16 as From<i8>>::from(move _80) -> bb37; // scope 12 at ui/numeric/numeric-cast-binop_fixed.rs:92:9: 92:24
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast-binop_fixed.rs:92:9: 92:18
                                         // + user_ty: UserType(36)
                                         // + literal: Const { ty: fn(i8) -> i16 {<i16 as From<i8>>::from}, val: Value(<ZST>) }
    }

    bb37: {
        _82 = _11;                       // scope 12 at ui/numeric/numeric-cast-binop_fixed.rs:94:19: 94:23
        _81 = <i32 as From<i8>>::from(move _82) -> bb38; // scope 12 at ui/numeric/numeric-cast-binop_fixed.rs:94:9: 94:24
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast-binop_fixed.rs:94:9: 94:18
                                         // + user_ty: UserType(37)
                                         // + literal: Const { ty: fn(i8) -> i32 {<i32 as From<i8>>::from}, val: Value(<ZST>) }
    }

    bb38: {
        _84 = _11;                       // scope 12 at ui/numeric/numeric-cast-binop_fixed.rs:96:19: 96:23
        _83 = <i64 as From<i8>>::from(move _84) -> bb39; // scope 12 at ui/numeric/numeric-cast-binop_fixed.rs:96:9: 96:24
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast-binop_fixed.rs:96:9: 96:18
                                         // + user_ty: UserType(38)
                                         // + literal: Const { ty: fn(i8) -> i64 {<i64 as From<i8>>::from}, val: Value(<ZST>) }
    }

    bb39: {
        _86 = _11;                       // scope 12 at ui/numeric/numeric-cast-binop_fixed.rs:98:20: 98:24
        _85 = <i128 as From<i8>>::from(move _86) -> bb40; // scope 12 at ui/numeric/numeric-cast-binop_fixed.rs:98:9: 98:25
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast-binop_fixed.rs:98:9: 98:19
                                         // + user_ty: UserType(39)
                                         // + literal: Const { ty: fn(i8) -> i128 {<i128 as From<i8>>::from}, val: Value(<ZST>) }
    }

    bb40: {
        _88 = _11;                       // scope 12 at ui/numeric/numeric-cast-binop_fixed.rs:100:21: 100:25
        _87 = <isize as From<i8>>::from(move _88) -> bb41; // scope 12 at ui/numeric/numeric-cast-binop_fixed.rs:100:9: 100:26
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast-binop_fixed.rs:100:9: 100:20
                                         // + user_ty: UserType(40)
                                         // + literal: Const { ty: fn(i8) -> isize {<isize as From<i8>>::from}, val: Value(<ZST>) }
    }

    bb41: {
        _90 = _11;                       // scope 12 at ui/numeric/numeric-cast-binop_fixed.rs:103:17: 103:21
        _89 = <i8 as Into<i16>>::into(move _90) -> bb42; // scope 12 at ui/numeric/numeric-cast-binop_fixed.rs:103:17: 103:28
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast-binop_fixed.rs:103:22: 103:26
                                         // + literal: Const { ty: fn(i8) -> i16 {<i8 as Into<i16>>::into}, val: Value(<ZST>) }
    }

    bb42: {
        _92 = _10;                       // scope 12 at ui/numeric/numeric-cast-binop_fixed.rs:105:19: 105:24
        _91 = <i32 as From<i16>>::from(move _92) -> bb43; // scope 12 at ui/numeric/numeric-cast-binop_fixed.rs:105:9: 105:25
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast-binop_fixed.rs:105:9: 105:18
                                         // + user_ty: UserType(41)
                                         // + literal: Const { ty: fn(i16) -> i32 {<i32 as From<i16>>::from}, val: Value(<ZST>) }
    }

    bb43: {
        _94 = _10;                       // scope 12 at ui/numeric/numeric-cast-binop_fixed.rs:107:19: 107:24
        _93 = <i64 as From<i16>>::from(move _94) -> bb44; // scope 12 at ui/numeric/numeric-cast-binop_fixed.rs:107:9: 107:25
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast-binop_fixed.rs:107:9: 107:18
                                         // + user_ty: UserType(42)
                                         // + literal: Const { ty: fn(i16) -> i64 {<i64 as From<i16>>::from}, val: Value(<ZST>) }
    }

    bb44: {
        _96 = _10;                       // scope 12 at ui/numeric/numeric-cast-binop_fixed.rs:109:20: 109:25
        _95 = <i128 as From<i16>>::from(move _96) -> bb45; // scope 12 at ui/numeric/numeric-cast-binop_fixed.rs:109:9: 109:26
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast-binop_fixed.rs:109:9: 109:19
                                         // + user_ty: UserType(43)
                                         // + literal: Const { ty: fn(i16) -> i128 {<i128 as From<i16>>::from}, val: Value(<ZST>) }
    }

    bb45: {
        _98 = _10;                       // scope 12 at ui/numeric/numeric-cast-binop_fixed.rs:111:21: 111:26
        _97 = <isize as From<i16>>::from(move _98) -> bb46; // scope 12 at ui/numeric/numeric-cast-binop_fixed.rs:111:9: 111:27
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast-binop_fixed.rs:111:9: 111:20
                                         // + user_ty: UserType(44)
                                         // + literal: Const { ty: fn(i16) -> isize {<isize as From<i16>>::from}, val: Value(<ZST>) }
    }

    bb46: {
        _100 = _11;                      // scope 12 at ui/numeric/numeric-cast-binop_fixed.rs:114:17: 114:21
        _99 = <i8 as Into<i32>>::into(move _100) -> bb47; // scope 12 at ui/numeric/numeric-cast-binop_fixed.rs:114:17: 114:28
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast-binop_fixed.rs:114:22: 114:26
                                         // + literal: Const { ty: fn(i8) -> i32 {<i8 as Into<i32>>::into}, val: Value(<ZST>) }
    }

    bb47: {
        _102 = _10;                      // scope 12 at ui/numeric/numeric-cast-binop_fixed.rs:116:17: 116:22
        _101 = <i16 as Into<i32>>::into(move _102) -> bb48; // scope 12 at ui/numeric/numeric-cast-binop_fixed.rs:116:17: 116:29
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast-binop_fixed.rs:116:23: 116:27
                                         // + literal: Const { ty: fn(i16) -> i32 {<i16 as Into<i32>>::into}, val: Value(<ZST>) }
    }

    bb48: {
        _104 = _9;                       // scope 12 at ui/numeric/numeric-cast-binop_fixed.rs:118:19: 118:24
        _103 = <i64 as From<i32>>::from(move _104) -> bb49; // scope 12 at ui/numeric/numeric-cast-binop_fixed.rs:118:9: 118:25
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast-binop_fixed.rs:118:9: 118:18
                                         // + user_ty: UserType(45)
                                         // + literal: Const { ty: fn(i32) -> i64 {<i64 as From<i32>>::from}, val: Value(<ZST>) }
    }

    bb49: {
        _106 = _9;                       // scope 12 at ui/numeric/numeric-cast-binop_fixed.rs:120:20: 120:25
        _105 = <i128 as From<i32>>::from(move _106) -> bb50; // scope 12 at ui/numeric/numeric-cast-binop_fixed.rs:120:9: 120:26
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast-binop_fixed.rs:120:9: 120:19
                                         // + user_ty: UserType(46)
                                         // + literal: Const { ty: fn(i32) -> i128 {<i128 as From<i32>>::from}, val: Value(<ZST>) }
    }

    bb50: {
        _109 = _7;                       // scope 12 at ui/numeric/numeric-cast-binop_fixed.rs:122:17: 122:24
        _108 = <isize as TryInto<i32>>::try_into(move _109) -> bb51; // scope 12 at ui/numeric/numeric-cast-binop_fixed.rs:122:17: 122:35
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast-binop_fixed.rs:122:25: 122:33
                                         // + literal: Const { ty: fn(isize) -> Result<i32, <isize as TryInto<i32>>::Error> {<isize as TryInto<i32>>::try_into}, val: Value(<ZST>) }
    }

    bb51: {
        _107 = Result::<i32, TryFromIntError>::unwrap(move _108) -> bb52; // scope 12 at ui/numeric/numeric-cast-binop_fixed.rs:122:17: 122:44
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast-binop_fixed.rs:122:36: 122:42
                                         // + literal: Const { ty: fn(Result<i32, TryFromIntError>) -> i32 {Result::<i32, TryFromIntError>::unwrap}, val: Value(<ZST>) }
    }

    bb52: {
        _111 = _11;                      // scope 12 at ui/numeric/numeric-cast-binop_fixed.rs:125:17: 125:21
        _110 = <i8 as Into<i64>>::into(move _111) -> bb53; // scope 12 at ui/numeric/numeric-cast-binop_fixed.rs:125:17: 125:28
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast-binop_fixed.rs:125:22: 125:26
                                         // + literal: Const { ty: fn(i8) -> i64 {<i8 as Into<i64>>::into}, val: Value(<ZST>) }
    }

    bb53: {
        _113 = _10;                      // scope 12 at ui/numeric/numeric-cast-binop_fixed.rs:127:17: 127:22
        _112 = <i16 as Into<i64>>::into(move _113) -> bb54; // scope 12 at ui/numeric/numeric-cast-binop_fixed.rs:127:17: 127:29
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast-binop_fixed.rs:127:23: 127:27
                                         // + literal: Const { ty: fn(i16) -> i64 {<i16 as Into<i64>>::into}, val: Value(<ZST>) }
    }

    bb54: {
        _115 = _9;                       // scope 12 at ui/numeric/numeric-cast-binop_fixed.rs:129:17: 129:22
        _114 = <i32 as Into<i64>>::into(move _115) -> bb55; // scope 12 at ui/numeric/numeric-cast-binop_fixed.rs:129:17: 129:29
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast-binop_fixed.rs:129:23: 129:27
                                         // + literal: Const { ty: fn(i32) -> i64 {<i32 as Into<i64>>::into}, val: Value(<ZST>) }
    }

    bb55: {
        _117 = _8;                       // scope 12 at ui/numeric/numeric-cast-binop_fixed.rs:131:20: 131:25
        _116 = <i128 as From<i64>>::from(move _117) -> bb56; // scope 12 at ui/numeric/numeric-cast-binop_fixed.rs:131:9: 131:26
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast-binop_fixed.rs:131:9: 131:19
                                         // + user_ty: UserType(47)
                                         // + literal: Const { ty: fn(i64) -> i128 {<i128 as From<i64>>::from}, val: Value(<ZST>) }
    }

    bb56: {
        _120 = _7;                       // scope 12 at ui/numeric/numeric-cast-binop_fixed.rs:133:17: 133:24
        _119 = <isize as TryInto<i64>>::try_into(move _120) -> bb57; // scope 12 at ui/numeric/numeric-cast-binop_fixed.rs:133:17: 133:35
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast-binop_fixed.rs:133:25: 133:33
                                         // + literal: Const { ty: fn(isize) -> Result<i64, <isize as TryInto<i64>>::Error> {<isize as TryInto<i64>>::try_into}, val: Value(<ZST>) }
    }

    bb57: {
        _118 = Result::<i64, TryFromIntError>::unwrap(move _119) -> bb58; // scope 12 at ui/numeric/numeric-cast-binop_fixed.rs:133:17: 133:44
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast-binop_fixed.rs:133:36: 133:42
                                         // + literal: Const { ty: fn(Result<i64, TryFromIntError>) -> i64 {Result::<i64, TryFromIntError>::unwrap}, val: Value(<ZST>) }
    }

    bb58: {
        _122 = _11;                      // scope 12 at ui/numeric/numeric-cast-binop_fixed.rs:136:18: 136:22
        _121 = <i8 as Into<i128>>::into(move _122) -> bb59; // scope 12 at ui/numeric/numeric-cast-binop_fixed.rs:136:18: 136:29
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast-binop_fixed.rs:136:23: 136:27
                                         // + literal: Const { ty: fn(i8) -> i128 {<i8 as Into<i128>>::into}, val: Value(<ZST>) }
    }

    bb59: {
        _124 = _10;                      // scope 12 at ui/numeric/numeric-cast-binop_fixed.rs:138:18: 138:23
        _123 = <i16 as Into<i128>>::into(move _124) -> bb60; // scope 12 at ui/numeric/numeric-cast-binop_fixed.rs:138:18: 138:30
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast-binop_fixed.rs:138:24: 138:28
                                         // + literal: Const { ty: fn(i16) -> i128 {<i16 as Into<i128>>::into}, val: Value(<ZST>) }
    }

    bb60: {
        _126 = _9;                       // scope 12 at ui/numeric/numeric-cast-binop_fixed.rs:140:18: 140:23
        _125 = <i32 as Into<i128>>::into(move _126) -> bb61; // scope 12 at ui/numeric/numeric-cast-binop_fixed.rs:140:18: 140:30
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast-binop_fixed.rs:140:24: 140:28
                                         // + literal: Const { ty: fn(i32) -> i128 {<i32 as Into<i128>>::into}, val: Value(<ZST>) }
    }

    bb61: {
        _128 = _8;                       // scope 12 at ui/numeric/numeric-cast-binop_fixed.rs:142:18: 142:23
        _127 = <i64 as Into<i128>>::into(move _128) -> bb62; // scope 12 at ui/numeric/numeric-cast-binop_fixed.rs:142:18: 142:30
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast-binop_fixed.rs:142:24: 142:28
                                         // + literal: Const { ty: fn(i64) -> i128 {<i64 as Into<i128>>::into}, val: Value(<ZST>) }
    }

    bb62: {
        _131 = _7;                       // scope 12 at ui/numeric/numeric-cast-binop_fixed.rs:144:18: 144:25
        _130 = <isize as TryInto<i128>>::try_into(move _131) -> bb63; // scope 12 at ui/numeric/numeric-cast-binop_fixed.rs:144:18: 144:36
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast-binop_fixed.rs:144:26: 144:34
                                         // + literal: Const { ty: fn(isize) -> Result<i128, <isize as TryInto<i128>>::Error> {<isize as TryInto<i128>>::try_into}, val: Value(<ZST>) }
    }

    bb63: {
        _129 = Result::<i128, TryFromIntError>::unwrap(move _130) -> bb64; // scope 12 at ui/numeric/numeric-cast-binop_fixed.rs:144:18: 144:45
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast-binop_fixed.rs:144:37: 144:43
                                         // + literal: Const { ty: fn(Result<i128, TryFromIntError>) -> i128 {Result::<i128, TryFromIntError>::unwrap}, val: Value(<ZST>) }
    }

    bb64: {
        _133 = _11;                      // scope 12 at ui/numeric/numeric-cast-binop_fixed.rs:147:19: 147:23
        _132 = <i8 as Into<isize>>::into(move _133) -> bb65; // scope 12 at ui/numeric/numeric-cast-binop_fixed.rs:147:19: 147:30
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast-binop_fixed.rs:147:24: 147:28
                                         // + literal: Const { ty: fn(i8) -> isize {<i8 as Into<isize>>::into}, val: Value(<ZST>) }
    }

    bb65: {
        _135 = _10;                      // scope 12 at ui/numeric/numeric-cast-binop_fixed.rs:149:19: 149:24
        _134 = <i16 as Into<isize>>::into(move _135) -> bb66; // scope 12 at ui/numeric/numeric-cast-binop_fixed.rs:149:19: 149:31
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast-binop_fixed.rs:149:25: 149:29
                                         // + literal: Const { ty: fn(i16) -> isize {<i16 as Into<isize>>::into}, val: Value(<ZST>) }
    }

    bb66: {
        _138 = _9;                       // scope 12 at ui/numeric/numeric-cast-binop_fixed.rs:151:19: 151:24
        _137 = <i32 as TryInto<isize>>::try_into(move _138) -> bb67; // scope 12 at ui/numeric/numeric-cast-binop_fixed.rs:151:19: 151:35
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast-binop_fixed.rs:151:25: 151:33
                                         // + literal: Const { ty: fn(i32) -> Result<isize, <i32 as TryInto<isize>>::Error> {<i32 as TryInto<isize>>::try_into}, val: Value(<ZST>) }
    }

    bb67: {
        _136 = Result::<isize, TryFromIntError>::unwrap(move _137) -> bb68; // scope 12 at ui/numeric/numeric-cast-binop_fixed.rs:151:19: 151:44
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast-binop_fixed.rs:151:36: 151:42
                                         // + literal: Const { ty: fn(Result<isize, TryFromIntError>) -> isize {Result::<isize, TryFromIntError>::unwrap}, val: Value(<ZST>) }
    }

    bb68: {
        _141 = _8;                       // scope 12 at ui/numeric/numeric-cast-binop_fixed.rs:153:19: 153:24
        _140 = <i64 as TryInto<isize>>::try_into(move _141) -> bb69; // scope 12 at ui/numeric/numeric-cast-binop_fixed.rs:153:19: 153:35
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast-binop_fixed.rs:153:25: 153:33
                                         // + literal: Const { ty: fn(i64) -> Result<isize, <i64 as TryInto<isize>>::Error> {<i64 as TryInto<isize>>::try_into}, val: Value(<ZST>) }
    }

    bb69: {
        _139 = Result::<isize, TryFromIntError>::unwrap(move _140) -> bb70; // scope 12 at ui/numeric/numeric-cast-binop_fixed.rs:153:19: 153:44
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast-binop_fixed.rs:153:36: 153:42
                                         // + literal: Const { ty: fn(Result<isize, TryFromIntError>) -> isize {Result::<isize, TryFromIntError>::unwrap}, val: Value(<ZST>) }
    }

    bb70: {
        _144 = _12;                      // scope 12 at ui/numeric/numeric-cast-binop_fixed.rs:155:19: 155:25
        _143 = <i128 as TryInto<isize>>::try_into(move _144) -> bb71; // scope 12 at ui/numeric/numeric-cast-binop_fixed.rs:155:19: 155:36
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast-binop_fixed.rs:155:26: 155:34
                                         // + literal: Const { ty: fn(i128) -> Result<isize, <i128 as TryInto<isize>>::Error> {<i128 as TryInto<isize>>::try_into}, val: Value(<ZST>) }
    }

    bb71: {
        _142 = Result::<isize, TryFromIntError>::unwrap(move _143) -> bb72; // scope 12 at ui/numeric/numeric-cast-binop_fixed.rs:155:19: 155:45
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast-binop_fixed.rs:155:37: 155:43
                                         // + literal: Const { ty: fn(Result<isize, TryFromIntError>) -> isize {Result::<isize, TryFromIntError>::unwrap}, val: Value(<ZST>) }
    }

    bb72: {
        _147 = _11;                      // scope 12 at ui/numeric/numeric-cast-binop_fixed.rs:161:16: 161:20
        _146 = <i8 as TryInto<u8>>::try_into(move _147) -> bb73; // scope 12 at ui/numeric/numeric-cast-binop_fixed.rs:161:16: 161:31
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast-binop_fixed.rs:161:21: 161:29
                                         // + literal: Const { ty: fn(i8) -> Result<u8, <i8 as TryInto<u8>>::Error> {<i8 as TryInto<u8>>::try_into}, val: Value(<ZST>) }
    }

    bb73: {
        _145 = Result::<u8, TryFromIntError>::unwrap(move _146) -> bb74; // scope 12 at ui/numeric/numeric-cast-binop_fixed.rs:161:16: 161:40
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast-binop_fixed.rs:161:32: 161:38
                                         // + literal: Const { ty: fn(Result<u8, TryFromIntError>) -> u8 {Result::<u8, TryFromIntError>::unwrap}, val: Value(<ZST>) }
    }

    bb74: {
        _149 = _6;                       // scope 12 at ui/numeric/numeric-cast-binop_fixed.rs:163:19: 163:23
        _148 = <i16 as From<u8>>::from(move _149) -> bb75; // scope 12 at ui/numeric/numeric-cast-binop_fixed.rs:163:9: 163:24
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast-binop_fixed.rs:163:9: 163:18
                                         // + user_ty: UserType(48)
                                         // + literal: Const { ty: fn(u8) -> i16 {<i16 as From<u8>>::from}, val: Value(<ZST>) }
    }

    bb75: {
        _151 = _6;                       // scope 12 at ui/numeric/numeric-cast-binop_fixed.rs:165:19: 165:23
        _150 = <i32 as From<u8>>::from(move _151) -> bb76; // scope 12 at ui/numeric/numeric-cast-binop_fixed.rs:165:9: 165:24
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast-binop_fixed.rs:165:9: 165:18
                                         // + user_ty: UserType(49)
                                         // + literal: Const { ty: fn(u8) -> i32 {<i32 as From<u8>>::from}, val: Value(<ZST>) }
    }

    bb76: {
        _153 = _6;                       // scope 12 at ui/numeric/numeric-cast-binop_fixed.rs:167:19: 167:23
        _152 = <i64 as From<u8>>::from(move _153) -> bb77; // scope 12 at ui/numeric/numeric-cast-binop_fixed.rs:167:9: 167:24
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast-binop_fixed.rs:167:9: 167:18
                                         // + user_ty: UserType(50)
                                         // + literal: Const { ty: fn(u8) -> i64 {<i64 as From<u8>>::from}, val: Value(<ZST>) }
    }

    bb77: {
        _155 = _6;                       // scope 12 at ui/numeric/numeric-cast-binop_fixed.rs:169:20: 169:24
        _154 = <i128 as From<u8>>::from(move _155) -> bb78; // scope 12 at ui/numeric/numeric-cast-binop_fixed.rs:169:9: 169:25
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast-binop_fixed.rs:169:9: 169:19
                                         // + user_ty: UserType(51)
                                         // + literal: Const { ty: fn(u8) -> i128 {<i128 as From<u8>>::from}, val: Value(<ZST>) }
    }

    bb78: {
        _157 = _6;                       // scope 12 at ui/numeric/numeric-cast-binop_fixed.rs:171:21: 171:25
        _156 = <isize as From<u8>>::from(move _157) -> bb79; // scope 12 at ui/numeric/numeric-cast-binop_fixed.rs:171:9: 171:26
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast-binop_fixed.rs:171:9: 171:20
                                         // + user_ty: UserType(52)
                                         // + literal: Const { ty: fn(u8) -> isize {<isize as From<u8>>::from}, val: Value(<ZST>) }
    }

    bb79: {
        _160 = _11;                      // scope 12 at ui/numeric/numeric-cast-binop_fixed.rs:174:17: 174:21
        _159 = <i8 as TryInto<u16>>::try_into(move _160) -> bb80; // scope 12 at ui/numeric/numeric-cast-binop_fixed.rs:174:17: 174:32
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast-binop_fixed.rs:174:22: 174:30
                                         // + literal: Const { ty: fn(i8) -> Result<u16, <i8 as TryInto<u16>>::Error> {<i8 as TryInto<u16>>::try_into}, val: Value(<ZST>) }
    }

    bb80: {
        _158 = Result::<u16, TryFromIntError>::unwrap(move _159) -> bb81; // scope 12 at ui/numeric/numeric-cast-binop_fixed.rs:174:17: 174:41
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast-binop_fixed.rs:174:33: 174:39
                                         // + literal: Const { ty: fn(Result<u16, TryFromIntError>) -> u16 {Result::<u16, TryFromIntError>::unwrap}, val: Value(<ZST>) }
    }

    bb81: {
        _163 = _10;                      // scope 12 at ui/numeric/numeric-cast-binop_fixed.rs:176:17: 176:22
        _162 = <i16 as TryInto<u16>>::try_into(move _163) -> bb82; // scope 12 at ui/numeric/numeric-cast-binop_fixed.rs:176:17: 176:33
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast-binop_fixed.rs:176:23: 176:31
                                         // + literal: Const { ty: fn(i16) -> Result<u16, <i16 as TryInto<u16>>::Error> {<i16 as TryInto<u16>>::try_into}, val: Value(<ZST>) }
    }

    bb82: {
        _161 = Result::<u16, TryFromIntError>::unwrap(move _162) -> bb83; // scope 12 at ui/numeric/numeric-cast-binop_fixed.rs:176:17: 176:42
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast-binop_fixed.rs:176:34: 176:40
                                         // + literal: Const { ty: fn(Result<u16, TryFromIntError>) -> u16 {Result::<u16, TryFromIntError>::unwrap}, val: Value(<ZST>) }
    }

    bb83: {
        _165 = _5;                       // scope 12 at ui/numeric/numeric-cast-binop_fixed.rs:178:19: 178:24
        _164 = <i32 as From<u16>>::from(move _165) -> bb84; // scope 12 at ui/numeric/numeric-cast-binop_fixed.rs:178:9: 178:25
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast-binop_fixed.rs:178:9: 178:18
                                         // + user_ty: UserType(53)
                                         // + literal: Const { ty: fn(u16) -> i32 {<i32 as From<u16>>::from}, val: Value(<ZST>) }
    }

    bb84: {
        _167 = _5;                       // scope 12 at ui/numeric/numeric-cast-binop_fixed.rs:180:19: 180:24
        _166 = <i64 as From<u16>>::from(move _167) -> bb85; // scope 12 at ui/numeric/numeric-cast-binop_fixed.rs:180:9: 180:25
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast-binop_fixed.rs:180:9: 180:18
                                         // + user_ty: UserType(54)
                                         // + literal: Const { ty: fn(u16) -> i64 {<i64 as From<u16>>::from}, val: Value(<ZST>) }
    }

    bb85: {
        _169 = _5;                       // scope 12 at ui/numeric/numeric-cast-binop_fixed.rs:182:20: 182:25
        _168 = <i128 as From<u16>>::from(move _169) -> bb86; // scope 12 at ui/numeric/numeric-cast-binop_fixed.rs:182:9: 182:26
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast-binop_fixed.rs:182:9: 182:19
                                         // + user_ty: UserType(55)
                                         // + literal: Const { ty: fn(u16) -> i128 {<i128 as From<u16>>::from}, val: Value(<ZST>) }
    }

    bb86: {
        _172 = _7;                       // scope 12 at ui/numeric/numeric-cast-binop_fixed.rs:184:17: 184:24
        _171 = <isize as TryInto<u16>>::try_into(move _172) -> bb87; // scope 12 at ui/numeric/numeric-cast-binop_fixed.rs:184:17: 184:35
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast-binop_fixed.rs:184:25: 184:33
                                         // + literal: Const { ty: fn(isize) -> Result<u16, <isize as TryInto<u16>>::Error> {<isize as TryInto<u16>>::try_into}, val: Value(<ZST>) }
    }

    bb87: {
        _170 = Result::<u16, TryFromIntError>::unwrap(move _171) -> bb88; // scope 12 at ui/numeric/numeric-cast-binop_fixed.rs:184:17: 184:44
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast-binop_fixed.rs:184:36: 184:42
                                         // + literal: Const { ty: fn(Result<u16, TryFromIntError>) -> u16 {Result::<u16, TryFromIntError>::unwrap}, val: Value(<ZST>) }
    }

    bb88: {
        _175 = _11;                      // scope 12 at ui/numeric/numeric-cast-binop_fixed.rs:187:17: 187:21
        _174 = <i8 as TryInto<u32>>::try_into(move _175) -> bb89; // scope 12 at ui/numeric/numeric-cast-binop_fixed.rs:187:17: 187:32
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast-binop_fixed.rs:187:22: 187:30
                                         // + literal: Const { ty: fn(i8) -> Result<u32, <i8 as TryInto<u32>>::Error> {<i8 as TryInto<u32>>::try_into}, val: Value(<ZST>) }
    }

    bb89: {
        _173 = Result::<u32, TryFromIntError>::unwrap(move _174) -> bb90; // scope 12 at ui/numeric/numeric-cast-binop_fixed.rs:187:17: 187:41
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast-binop_fixed.rs:187:33: 187:39
                                         // + literal: Const { ty: fn(Result<u32, TryFromIntError>) -> u32 {Result::<u32, TryFromIntError>::unwrap}, val: Value(<ZST>) }
    }

    bb90: {
        _178 = _10;                      // scope 12 at ui/numeric/numeric-cast-binop_fixed.rs:189:17: 189:22
        _177 = <i16 as TryInto<u32>>::try_into(move _178) -> bb91; // scope 12 at ui/numeric/numeric-cast-binop_fixed.rs:189:17: 189:33
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast-binop_fixed.rs:189:23: 189:31
                                         // + literal: Const { ty: fn(i16) -> Result<u32, <i16 as TryInto<u32>>::Error> {<i16 as TryInto<u32>>::try_into}, val: Value(<ZST>) }
    }

    bb91: {
        _176 = Result::<u32, TryFromIntError>::unwrap(move _177) -> bb92; // scope 12 at ui/numeric/numeric-cast-binop_fixed.rs:189:17: 189:42
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast-binop_fixed.rs:189:34: 189:40
                                         // + literal: Const { ty: fn(Result<u32, TryFromIntError>) -> u32 {Result::<u32, TryFromIntError>::unwrap}, val: Value(<ZST>) }
    }

    bb92: {
        _181 = _9;                       // scope 12 at ui/numeric/numeric-cast-binop_fixed.rs:191:17: 191:22
        _180 = <i32 as TryInto<u32>>::try_into(move _181) -> bb93; // scope 12 at ui/numeric/numeric-cast-binop_fixed.rs:191:17: 191:33
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast-binop_fixed.rs:191:23: 191:31
                                         // + literal: Const { ty: fn(i32) -> Result<u32, <i32 as TryInto<u32>>::Error> {<i32 as TryInto<u32>>::try_into}, val: Value(<ZST>) }
    }

    bb93: {
        _179 = Result::<u32, TryFromIntError>::unwrap(move _180) -> bb94; // scope 12 at ui/numeric/numeric-cast-binop_fixed.rs:191:17: 191:42
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast-binop_fixed.rs:191:34: 191:40
                                         // + literal: Const { ty: fn(Result<u32, TryFromIntError>) -> u32 {Result::<u32, TryFromIntError>::unwrap}, val: Value(<ZST>) }
    }

    bb94: {
        _183 = _4;                       // scope 12 at ui/numeric/numeric-cast-binop_fixed.rs:193:19: 193:24
        _182 = <i64 as From<u32>>::from(move _183) -> bb95; // scope 12 at ui/numeric/numeric-cast-binop_fixed.rs:193:9: 193:25
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast-binop_fixed.rs:193:9: 193:18
                                         // + user_ty: UserType(56)
                                         // + literal: Const { ty: fn(u32) -> i64 {<i64 as From<u32>>::from}, val: Value(<ZST>) }
    }

    bb95: {
        _185 = _4;                       // scope 12 at ui/numeric/numeric-cast-binop_fixed.rs:195:20: 195:25
        _184 = <i128 as From<u32>>::from(move _185) -> bb96; // scope 12 at ui/numeric/numeric-cast-binop_fixed.rs:195:9: 195:26
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast-binop_fixed.rs:195:9: 195:19
                                         // + user_ty: UserType(57)
                                         // + literal: Const { ty: fn(u32) -> i128 {<i128 as From<u32>>::from}, val: Value(<ZST>) }
    }

    bb96: {
        _188 = _7;                       // scope 12 at ui/numeric/numeric-cast-binop_fixed.rs:197:17: 197:24
        _187 = <isize as TryInto<u32>>::try_into(move _188) -> bb97; // scope 12 at ui/numeric/numeric-cast-binop_fixed.rs:197:17: 197:35
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast-binop_fixed.rs:197:25: 197:33
                                         // + literal: Const { ty: fn(isize) -> Result<u32, <isize as TryInto<u32>>::Error> {<isize as TryInto<u32>>::try_into}, val: Value(<ZST>) }
    }

    bb97: {
        _186 = Result::<u32, TryFromIntError>::unwrap(move _187) -> bb98; // scope 12 at ui/numeric/numeric-cast-binop_fixed.rs:197:17: 197:44
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast-binop_fixed.rs:197:36: 197:42
                                         // + literal: Const { ty: fn(Result<u32, TryFromIntError>) -> u32 {Result::<u32, TryFromIntError>::unwrap}, val: Value(<ZST>) }
    }

    bb98: {
        _191 = _11;                      // scope 12 at ui/numeric/numeric-cast-binop_fixed.rs:200:17: 200:21
        _190 = <i8 as TryInto<u64>>::try_into(move _191) -> bb99; // scope 12 at ui/numeric/numeric-cast-binop_fixed.rs:200:17: 200:32
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast-binop_fixed.rs:200:22: 200:30
                                         // + literal: Const { ty: fn(i8) -> Result<u64, <i8 as TryInto<u64>>::Error> {<i8 as TryInto<u64>>::try_into}, val: Value(<ZST>) }
    }

    bb99: {
        _189 = Result::<u64, TryFromIntError>::unwrap(move _190) -> bb100; // scope 12 at ui/numeric/numeric-cast-binop_fixed.rs:200:17: 200:41
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast-binop_fixed.rs:200:33: 200:39
                                         // + literal: Const { ty: fn(Result<u64, TryFromIntError>) -> u64 {Result::<u64, TryFromIntError>::unwrap}, val: Value(<ZST>) }
    }

    bb100: {
        _194 = _10;                      // scope 12 at ui/numeric/numeric-cast-binop_fixed.rs:202:17: 202:22
        _193 = <i16 as TryInto<u64>>::try_into(move _194) -> bb101; // scope 12 at ui/numeric/numeric-cast-binop_fixed.rs:202:17: 202:33
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast-binop_fixed.rs:202:23: 202:31
                                         // + literal: Const { ty: fn(i16) -> Result<u64, <i16 as TryInto<u64>>::Error> {<i16 as TryInto<u64>>::try_into}, val: Value(<ZST>) }
    }

    bb101: {
        _192 = Result::<u64, TryFromIntError>::unwrap(move _193) -> bb102; // scope 12 at ui/numeric/numeric-cast-binop_fixed.rs:202:17: 202:42
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast-binop_fixed.rs:202:34: 202:40
                                         // + literal: Const { ty: fn(Result<u64, TryFromIntError>) -> u64 {Result::<u64, TryFromIntError>::unwrap}, val: Value(<ZST>) }
    }

    bb102: {
        _197 = _9;                       // scope 12 at ui/numeric/numeric-cast-binop_fixed.rs:204:17: 204:22
        _196 = <i32 as TryInto<u64>>::try_into(move _197) -> bb103; // scope 12 at ui/numeric/numeric-cast-binop_fixed.rs:204:17: 204:33
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast-binop_fixed.rs:204:23: 204:31
                                         // + literal: Const { ty: fn(i32) -> Result<u64, <i32 as TryInto<u64>>::Error> {<i32 as TryInto<u64>>::try_into}, val: Value(<ZST>) }
    }

    bb103: {
        _195 = Result::<u64, TryFromIntError>::unwrap(move _196) -> bb104; // scope 12 at ui/numeric/numeric-cast-binop_fixed.rs:204:17: 204:42
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast-binop_fixed.rs:204:34: 204:40
                                         // + literal: Const { ty: fn(Result<u64, TryFromIntError>) -> u64 {Result::<u64, TryFromIntError>::unwrap}, val: Value(<ZST>) }
    }

    bb104: {
        _200 = _8;                       // scope 12 at ui/numeric/numeric-cast-binop_fixed.rs:206:17: 206:22
        _199 = <i64 as TryInto<u64>>::try_into(move _200) -> bb105; // scope 12 at ui/numeric/numeric-cast-binop_fixed.rs:206:17: 206:33
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast-binop_fixed.rs:206:23: 206:31
                                         // + literal: Const { ty: fn(i64) -> Result<u64, <i64 as TryInto<u64>>::Error> {<i64 as TryInto<u64>>::try_into}, val: Value(<ZST>) }
    }

    bb105: {
        _198 = Result::<u64, TryFromIntError>::unwrap(move _199) -> bb106; // scope 12 at ui/numeric/numeric-cast-binop_fixed.rs:206:17: 206:42
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast-binop_fixed.rs:206:34: 206:40
                                         // + literal: Const { ty: fn(Result<u64, TryFromIntError>) -> u64 {Result::<u64, TryFromIntError>::unwrap}, val: Value(<ZST>) }
    }

    bb106: {
        _202 = _3;                       // scope 12 at ui/numeric/numeric-cast-binop_fixed.rs:208:20: 208:25
        _201 = <i128 as From<u64>>::from(move _202) -> bb107; // scope 12 at ui/numeric/numeric-cast-binop_fixed.rs:208:9: 208:26
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast-binop_fixed.rs:208:9: 208:19
                                         // + user_ty: UserType(58)
                                         // + literal: Const { ty: fn(u64) -> i128 {<i128 as From<u64>>::from}, val: Value(<ZST>) }
    }

    bb107: {
        _205 = _7;                       // scope 12 at ui/numeric/numeric-cast-binop_fixed.rs:210:17: 210:24
        _204 = <isize as TryInto<u64>>::try_into(move _205) -> bb108; // scope 12 at ui/numeric/numeric-cast-binop_fixed.rs:210:17: 210:35
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast-binop_fixed.rs:210:25: 210:33
                                         // + literal: Const { ty: fn(isize) -> Result<u64, <isize as TryInto<u64>>::Error> {<isize as TryInto<u64>>::try_into}, val: Value(<ZST>) }
    }

    bb108: {
        _203 = Result::<u64, TryFromIntError>::unwrap(move _204) -> bb109; // scope 12 at ui/numeric/numeric-cast-binop_fixed.rs:210:17: 210:44
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast-binop_fixed.rs:210:36: 210:42
                                         // + literal: Const { ty: fn(Result<u64, TryFromIntError>) -> u64 {Result::<u64, TryFromIntError>::unwrap}, val: Value(<ZST>) }
    }

    bb109: {
        _208 = _11;                      // scope 12 at ui/numeric/numeric-cast-binop_fixed.rs:213:18: 213:22
        _207 = <i8 as TryInto<u128>>::try_into(move _208) -> bb110; // scope 12 at ui/numeric/numeric-cast-binop_fixed.rs:213:18: 213:33
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast-binop_fixed.rs:213:23: 213:31
                                         // + literal: Const { ty: fn(i8) -> Result<u128, <i8 as TryInto<u128>>::Error> {<i8 as TryInto<u128>>::try_into}, val: Value(<ZST>) }
    }

    bb110: {
        _206 = Result::<u128, TryFromIntError>::unwrap(move _207) -> bb111; // scope 12 at ui/numeric/numeric-cast-binop_fixed.rs:213:18: 213:42
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast-binop_fixed.rs:213:34: 213:40
                                         // + literal: Const { ty: fn(Result<u128, TryFromIntError>) -> u128 {Result::<u128, TryFromIntError>::unwrap}, val: Value(<ZST>) }
    }

    bb111: {
        _211 = _10;                      // scope 12 at ui/numeric/numeric-cast-binop_fixed.rs:215:18: 215:23
        _210 = <i16 as TryInto<u128>>::try_into(move _211) -> bb112; // scope 12 at ui/numeric/numeric-cast-binop_fixed.rs:215:18: 215:34
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast-binop_fixed.rs:215:24: 215:32
                                         // + literal: Const { ty: fn(i16) -> Result<u128, <i16 as TryInto<u128>>::Error> {<i16 as TryInto<u128>>::try_into}, val: Value(<ZST>) }
    }

    bb112: {
        _209 = Result::<u128, TryFromIntError>::unwrap(move _210) -> bb113; // scope 12 at ui/numeric/numeric-cast-binop_fixed.rs:215:18: 215:43
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast-binop_fixed.rs:215:35: 215:41
                                         // + literal: Const { ty: fn(Result<u128, TryFromIntError>) -> u128 {Result::<u128, TryFromIntError>::unwrap}, val: Value(<ZST>) }
    }

    bb113: {
        _214 = _9;                       // scope 12 at ui/numeric/numeric-cast-binop_fixed.rs:217:18: 217:23
        _213 = <i32 as TryInto<u128>>::try_into(move _214) -> bb114; // scope 12 at ui/numeric/numeric-cast-binop_fixed.rs:217:18: 217:34
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast-binop_fixed.rs:217:24: 217:32
                                         // + literal: Const { ty: fn(i32) -> Result<u128, <i32 as TryInto<u128>>::Error> {<i32 as TryInto<u128>>::try_into}, val: Value(<ZST>) }
    }

    bb114: {
        _212 = Result::<u128, TryFromIntError>::unwrap(move _213) -> bb115; // scope 12 at ui/numeric/numeric-cast-binop_fixed.rs:217:18: 217:43
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast-binop_fixed.rs:217:35: 217:41
                                         // + literal: Const { ty: fn(Result<u128, TryFromIntError>) -> u128 {Result::<u128, TryFromIntError>::unwrap}, val: Value(<ZST>) }
    }

    bb115: {
        _217 = _8;                       // scope 12 at ui/numeric/numeric-cast-binop_fixed.rs:219:18: 219:23
        _216 = <i64 as TryInto<u128>>::try_into(move _217) -> bb116; // scope 12 at ui/numeric/numeric-cast-binop_fixed.rs:219:18: 219:34
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast-binop_fixed.rs:219:24: 219:32
                                         // + literal: Const { ty: fn(i64) -> Result<u128, <i64 as TryInto<u128>>::Error> {<i64 as TryInto<u128>>::try_into}, val: Value(<ZST>) }
    }

    bb116: {
        _215 = Result::<u128, TryFromIntError>::unwrap(move _216) -> bb117; // scope 12 at ui/numeric/numeric-cast-binop_fixed.rs:219:18: 219:43
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast-binop_fixed.rs:219:35: 219:41
                                         // + literal: Const { ty: fn(Result<u128, TryFromIntError>) -> u128 {Result::<u128, TryFromIntError>::unwrap}, val: Value(<ZST>) }
    }

    bb117: {
        _220 = _12;                      // scope 12 at ui/numeric/numeric-cast-binop_fixed.rs:221:18: 221:24
        _219 = <i128 as TryInto<u128>>::try_into(move _220) -> bb118; // scope 12 at ui/numeric/numeric-cast-binop_fixed.rs:221:18: 221:35
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast-binop_fixed.rs:221:25: 221:33
                                         // + literal: Const { ty: fn(i128) -> Result<u128, <i128 as TryInto<u128>>::Error> {<i128 as TryInto<u128>>::try_into}, val: Value(<ZST>) }
    }

    bb118: {
        _218 = Result::<u128, TryFromIntError>::unwrap(move _219) -> bb119; // scope 12 at ui/numeric/numeric-cast-binop_fixed.rs:221:18: 221:44
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast-binop_fixed.rs:221:36: 221:42
                                         // + literal: Const { ty: fn(Result<u128, TryFromIntError>) -> u128 {Result::<u128, TryFromIntError>::unwrap}, val: Value(<ZST>) }
    }

    bb119: {
        _223 = _7;                       // scope 12 at ui/numeric/numeric-cast-binop_fixed.rs:223:18: 223:25
        _222 = <isize as TryInto<u128>>::try_into(move _223) -> bb120; // scope 12 at ui/numeric/numeric-cast-binop_fixed.rs:223:18: 223:36
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast-binop_fixed.rs:223:26: 223:34
                                         // + literal: Const { ty: fn(isize) -> Result<u128, <isize as TryInto<u128>>::Error> {<isize as TryInto<u128>>::try_into}, val: Value(<ZST>) }
    }

    bb120: {
        _221 = Result::<u128, TryFromIntError>::unwrap(move _222) -> bb121; // scope 12 at ui/numeric/numeric-cast-binop_fixed.rs:223:18: 223:45
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast-binop_fixed.rs:223:37: 223:43
                                         // + literal: Const { ty: fn(Result<u128, TryFromIntError>) -> u128 {Result::<u128, TryFromIntError>::unwrap}, val: Value(<ZST>) }
    }

    bb121: {
        _226 = _11;                      // scope 12 at ui/numeric/numeric-cast-binop_fixed.rs:226:19: 226:23
        _225 = <i8 as TryInto<usize>>::try_into(move _226) -> bb122; // scope 12 at ui/numeric/numeric-cast-binop_fixed.rs:226:19: 226:34
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast-binop_fixed.rs:226:24: 226:32
                                         // + literal: Const { ty: fn(i8) -> Result<usize, <i8 as TryInto<usize>>::Error> {<i8 as TryInto<usize>>::try_into}, val: Value(<ZST>) }
    }

    bb122: {
        _224 = Result::<usize, TryFromIntError>::unwrap(move _225) -> bb123; // scope 12 at ui/numeric/numeric-cast-binop_fixed.rs:226:19: 226:43
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast-binop_fixed.rs:226:35: 226:41
                                         // + literal: Const { ty: fn(Result<usize, TryFromIntError>) -> usize {Result::<usize, TryFromIntError>::unwrap}, val: Value(<ZST>) }
    }

    bb123: {
        _229 = _10;                      // scope 12 at ui/numeric/numeric-cast-binop_fixed.rs:228:19: 228:24
        _228 = <i16 as TryInto<usize>>::try_into(move _229) -> bb124; // scope 12 at ui/numeric/numeric-cast-binop_fixed.rs:228:19: 228:35
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast-binop_fixed.rs:228:25: 228:33
                                         // + literal: Const { ty: fn(i16) -> Result<usize, <i16 as TryInto<usize>>::Error> {<i16 as TryInto<usize>>::try_into}, val: Value(<ZST>) }
    }

    bb124: {
        _227 = Result::<usize, TryFromIntError>::unwrap(move _228) -> bb125; // scope 12 at ui/numeric/numeric-cast-binop_fixed.rs:228:19: 228:44
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast-binop_fixed.rs:228:36: 228:42
                                         // + literal: Const { ty: fn(Result<usize, TryFromIntError>) -> usize {Result::<usize, TryFromIntError>::unwrap}, val: Value(<ZST>) }
    }

    bb125: {
        _232 = _9;                       // scope 12 at ui/numeric/numeric-cast-binop_fixed.rs:230:19: 230:24
        _231 = <i32 as TryInto<usize>>::try_into(move _232) -> bb126; // scope 12 at ui/numeric/numeric-cast-binop_fixed.rs:230:19: 230:35
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast-binop_fixed.rs:230:25: 230:33
                                         // + literal: Const { ty: fn(i32) -> Result<usize, <i32 as TryInto<usize>>::Error> {<i32 as TryInto<usize>>::try_into}, val: Value(<ZST>) }
    }

    bb126: {
        _230 = Result::<usize, TryFromIntError>::unwrap(move _231) -> bb127; // scope 12 at ui/numeric/numeric-cast-binop_fixed.rs:230:19: 230:44
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast-binop_fixed.rs:230:36: 230:42
                                         // + literal: Const { ty: fn(Result<usize, TryFromIntError>) -> usize {Result::<usize, TryFromIntError>::unwrap}, val: Value(<ZST>) }
    }

    bb127: {
        _235 = _8;                       // scope 12 at ui/numeric/numeric-cast-binop_fixed.rs:232:19: 232:24
        _234 = <i64 as TryInto<usize>>::try_into(move _235) -> bb128; // scope 12 at ui/numeric/numeric-cast-binop_fixed.rs:232:19: 232:35
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast-binop_fixed.rs:232:25: 232:33
                                         // + literal: Const { ty: fn(i64) -> Result<usize, <i64 as TryInto<usize>>::Error> {<i64 as TryInto<usize>>::try_into}, val: Value(<ZST>) }
    }

    bb128: {
        _233 = Result::<usize, TryFromIntError>::unwrap(move _234) -> bb129; // scope 12 at ui/numeric/numeric-cast-binop_fixed.rs:232:19: 232:44
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast-binop_fixed.rs:232:36: 232:42
                                         // + literal: Const { ty: fn(Result<usize, TryFromIntError>) -> usize {Result::<usize, TryFromIntError>::unwrap}, val: Value(<ZST>) }
    }

    bb129: {
        _238 = _12;                      // scope 12 at ui/numeric/numeric-cast-binop_fixed.rs:234:19: 234:25
        _237 = <i128 as TryInto<usize>>::try_into(move _238) -> bb130; // scope 12 at ui/numeric/numeric-cast-binop_fixed.rs:234:19: 234:36
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast-binop_fixed.rs:234:26: 234:34
                                         // + literal: Const { ty: fn(i128) -> Result<usize, <i128 as TryInto<usize>>::Error> {<i128 as TryInto<usize>>::try_into}, val: Value(<ZST>) }
    }

    bb130: {
        _236 = Result::<usize, TryFromIntError>::unwrap(move _237) -> bb131; // scope 12 at ui/numeric/numeric-cast-binop_fixed.rs:234:19: 234:45
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast-binop_fixed.rs:234:37: 234:43
                                         // + literal: Const { ty: fn(Result<usize, TryFromIntError>) -> usize {Result::<usize, TryFromIntError>::unwrap}, val: Value(<ZST>) }
    }

    bb131: {
        _241 = _7;                       // scope 12 at ui/numeric/numeric-cast-binop_fixed.rs:236:19: 236:26
        _240 = <isize as TryInto<usize>>::try_into(move _241) -> bb132; // scope 12 at ui/numeric/numeric-cast-binop_fixed.rs:236:19: 236:37
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast-binop_fixed.rs:236:27: 236:35
                                         // + literal: Const { ty: fn(isize) -> Result<usize, <isize as TryInto<usize>>::Error> {<isize as TryInto<usize>>::try_into}, val: Value(<ZST>) }
    }

    bb132: {
        _239 = Result::<usize, TryFromIntError>::unwrap(move _240) -> bb133; // scope 12 at ui/numeric/numeric-cast-binop_fixed.rs:236:19: 236:46
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast-binop_fixed.rs:236:38: 236:44
                                         // + literal: Const { ty: fn(Result<usize, TryFromIntError>) -> usize {Result::<usize, TryFromIntError>::unwrap}, val: Value(<ZST>) }
    }

    bb133: {
        _244 = _6;                       // scope 12 at ui/numeric/numeric-cast-binop_fixed.rs:242:16: 242:20
        _243 = <u8 as TryInto<i8>>::try_into(move _244) -> bb134; // scope 12 at ui/numeric/numeric-cast-binop_fixed.rs:242:16: 242:31
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast-binop_fixed.rs:242:21: 242:29
                                         // + literal: Const { ty: fn(u8) -> Result<i8, <u8 as TryInto<i8>>::Error> {<u8 as TryInto<i8>>::try_into}, val: Value(<ZST>) }
    }

    bb134: {
        _242 = Result::<i8, TryFromIntError>::unwrap(move _243) -> bb135; // scope 12 at ui/numeric/numeric-cast-binop_fixed.rs:242:16: 242:40
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast-binop_fixed.rs:242:32: 242:38
                                         // + literal: Const { ty: fn(Result<i8, TryFromIntError>) -> i8 {Result::<i8, TryFromIntError>::unwrap}, val: Value(<ZST>) }
    }

    bb135: {
        _247 = _5;                       // scope 12 at ui/numeric/numeric-cast-binop_fixed.rs:244:16: 244:21
        _246 = <u16 as TryInto<i8>>::try_into(move _247) -> bb136; // scope 12 at ui/numeric/numeric-cast-binop_fixed.rs:244:16: 244:32
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast-binop_fixed.rs:244:22: 244:30
                                         // + literal: Const { ty: fn(u16) -> Result<i8, <u16 as TryInto<i8>>::Error> {<u16 as TryInto<i8>>::try_into}, val: Value(<ZST>) }
    }

    bb136: {
        _245 = Result::<i8, TryFromIntError>::unwrap(move _246) -> bb137; // scope 12 at ui/numeric/numeric-cast-binop_fixed.rs:244:16: 244:41
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast-binop_fixed.rs:244:33: 244:39
                                         // + literal: Const { ty: fn(Result<i8, TryFromIntError>) -> i8 {Result::<i8, TryFromIntError>::unwrap}, val: Value(<ZST>) }
    }

    bb137: {
        _250 = _4;                       // scope 12 at ui/numeric/numeric-cast-binop_fixed.rs:246:16: 246:21
        _249 = <u32 as TryInto<i8>>::try_into(move _250) -> bb138; // scope 12 at ui/numeric/numeric-cast-binop_fixed.rs:246:16: 246:32
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast-binop_fixed.rs:246:22: 246:30
                                         // + literal: Const { ty: fn(u32) -> Result<i8, <u32 as TryInto<i8>>::Error> {<u32 as TryInto<i8>>::try_into}, val: Value(<ZST>) }
    }

    bb138: {
        _248 = Result::<i8, TryFromIntError>::unwrap(move _249) -> bb139; // scope 12 at ui/numeric/numeric-cast-binop_fixed.rs:246:16: 246:41
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast-binop_fixed.rs:246:33: 246:39
                                         // + literal: Const { ty: fn(Result<i8, TryFromIntError>) -> i8 {Result::<i8, TryFromIntError>::unwrap}, val: Value(<ZST>) }
    }

    bb139: {
        _253 = _3;                       // scope 12 at ui/numeric/numeric-cast-binop_fixed.rs:248:16: 248:21
        _252 = <u64 as TryInto<i8>>::try_into(move _253) -> bb140; // scope 12 at ui/numeric/numeric-cast-binop_fixed.rs:248:16: 248:32
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast-binop_fixed.rs:248:22: 248:30
                                         // + literal: Const { ty: fn(u64) -> Result<i8, <u64 as TryInto<i8>>::Error> {<u64 as TryInto<i8>>::try_into}, val: Value(<ZST>) }
    }

    bb140: {
        _251 = Result::<i8, TryFromIntError>::unwrap(move _252) -> bb141; // scope 12 at ui/numeric/numeric-cast-binop_fixed.rs:248:16: 248:41
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast-binop_fixed.rs:248:33: 248:39
                                         // + literal: Const { ty: fn(Result<i8, TryFromIntError>) -> i8 {Result::<i8, TryFromIntError>::unwrap}, val: Value(<ZST>) }
    }

    bb141: {
        _256 = _2;                       // scope 12 at ui/numeric/numeric-cast-binop_fixed.rs:250:16: 250:22
        _255 = <u128 as TryInto<i8>>::try_into(move _256) -> bb142; // scope 12 at ui/numeric/numeric-cast-binop_fixed.rs:250:16: 250:33
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast-binop_fixed.rs:250:23: 250:31
                                         // + literal: Const { ty: fn(u128) -> Result<i8, <u128 as TryInto<i8>>::Error> {<u128 as TryInto<i8>>::try_into}, val: Value(<ZST>) }
    }

    bb142: {
        _254 = Result::<i8, TryFromIntError>::unwrap(move _255) -> bb143; // scope 12 at ui/numeric/numeric-cast-binop_fixed.rs:250:16: 250:42
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast-binop_fixed.rs:250:34: 250:40
                                         // + literal: Const { ty: fn(Result<i8, TryFromIntError>) -> i8 {Result::<i8, TryFromIntError>::unwrap}, val: Value(<ZST>) }
    }

    bb143: {
        _259 = _1;                       // scope 12 at ui/numeric/numeric-cast-binop_fixed.rs:252:16: 252:23
        _258 = <usize as TryInto<i8>>::try_into(move _259) -> bb144; // scope 12 at ui/numeric/numeric-cast-binop_fixed.rs:252:16: 252:34
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast-binop_fixed.rs:252:24: 252:32
                                         // + literal: Const { ty: fn(usize) -> Result<i8, <usize as TryInto<i8>>::Error> {<usize as TryInto<i8>>::try_into}, val: Value(<ZST>) }
    }

    bb144: {
        _257 = Result::<i8, TryFromIntError>::unwrap(move _258) -> bb145; // scope 12 at ui/numeric/numeric-cast-binop_fixed.rs:252:16: 252:43
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast-binop_fixed.rs:252:35: 252:41
                                         // + literal: Const { ty: fn(Result<i8, TryFromIntError>) -> i8 {Result::<i8, TryFromIntError>::unwrap}, val: Value(<ZST>) }
    }

    bb145: {
        _261 = _6;                       // scope 12 at ui/numeric/numeric-cast-binop_fixed.rs:255:17: 255:21
        _260 = <u8 as Into<i16>>::into(move _261) -> bb146; // scope 12 at ui/numeric/numeric-cast-binop_fixed.rs:255:17: 255:28
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast-binop_fixed.rs:255:22: 255:26
                                         // + literal: Const { ty: fn(u8) -> i16 {<u8 as Into<i16>>::into}, val: Value(<ZST>) }
    }

    bb146: {
        _264 = _5;                       // scope 12 at ui/numeric/numeric-cast-binop_fixed.rs:257:17: 257:22
        _263 = <u16 as TryInto<i16>>::try_into(move _264) -> bb147; // scope 12 at ui/numeric/numeric-cast-binop_fixed.rs:257:17: 257:33
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast-binop_fixed.rs:257:23: 257:31
                                         // + literal: Const { ty: fn(u16) -> Result<i16, <u16 as TryInto<i16>>::Error> {<u16 as TryInto<i16>>::try_into}, val: Value(<ZST>) }
    }

    bb147: {
        _262 = Result::<i16, TryFromIntError>::unwrap(move _263) -> bb148; // scope 12 at ui/numeric/numeric-cast-binop_fixed.rs:257:17: 257:42
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast-binop_fixed.rs:257:34: 257:40
                                         // + literal: Const { ty: fn(Result<i16, TryFromIntError>) -> i16 {Result::<i16, TryFromIntError>::unwrap}, val: Value(<ZST>) }
    }

    bb148: {
        _267 = _4;                       // scope 12 at ui/numeric/numeric-cast-binop_fixed.rs:259:17: 259:22
        _266 = <u32 as TryInto<i16>>::try_into(move _267) -> bb149; // scope 12 at ui/numeric/numeric-cast-binop_fixed.rs:259:17: 259:33
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast-binop_fixed.rs:259:23: 259:31
                                         // + literal: Const { ty: fn(u32) -> Result<i16, <u32 as TryInto<i16>>::Error> {<u32 as TryInto<i16>>::try_into}, val: Value(<ZST>) }
    }

    bb149: {
        _265 = Result::<i16, TryFromIntError>::unwrap(move _266) -> bb150; // scope 12 at ui/numeric/numeric-cast-binop_fixed.rs:259:17: 259:42
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast-binop_fixed.rs:259:34: 259:40
                                         // + literal: Const { ty: fn(Result<i16, TryFromIntError>) -> i16 {Result::<i16, TryFromIntError>::unwrap}, val: Value(<ZST>) }
    }

    bb150: {
        _270 = _3;                       // scope 12 at ui/numeric/numeric-cast-binop_fixed.rs:261:17: 261:22
        _269 = <u64 as TryInto<i16>>::try_into(move _270) -> bb151; // scope 12 at ui/numeric/numeric-cast-binop_fixed.rs:261:17: 261:33
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast-binop_fixed.rs:261:23: 261:31
                                         // + literal: Const { ty: fn(u64) -> Result<i16, <u64 as TryInto<i16>>::Error> {<u64 as TryInto<i16>>::try_into}, val: Value(<ZST>) }
    }

    bb151: {
        _268 = Result::<i16, TryFromIntError>::unwrap(move _269) -> bb152; // scope 12 at ui/numeric/numeric-cast-binop_fixed.rs:261:17: 261:42
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast-binop_fixed.rs:261:34: 261:40
                                         // + literal: Const { ty: fn(Result<i16, TryFromIntError>) -> i16 {Result::<i16, TryFromIntError>::unwrap}, val: Value(<ZST>) }
    }

    bb152: {
        _273 = _2;                       // scope 12 at ui/numeric/numeric-cast-binop_fixed.rs:263:17: 263:23
        _272 = <u128 as TryInto<i16>>::try_into(move _273) -> bb153; // scope 12 at ui/numeric/numeric-cast-binop_fixed.rs:263:17: 263:34
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast-binop_fixed.rs:263:24: 263:32
                                         // + literal: Const { ty: fn(u128) -> Result<i16, <u128 as TryInto<i16>>::Error> {<u128 as TryInto<i16>>::try_into}, val: Value(<ZST>) }
    }

    bb153: {
        _271 = Result::<i16, TryFromIntError>::unwrap(move _272) -> bb154; // scope 12 at ui/numeric/numeric-cast-binop_fixed.rs:263:17: 263:43
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast-binop_fixed.rs:263:35: 263:41
                                         // + literal: Const { ty: fn(Result<i16, TryFromIntError>) -> i16 {Result::<i16, TryFromIntError>::unwrap}, val: Value(<ZST>) }
    }

    bb154: {
        _276 = _1;                       // scope 12 at ui/numeric/numeric-cast-binop_fixed.rs:265:17: 265:24
        _275 = <usize as TryInto<i16>>::try_into(move _276) -> bb155; // scope 12 at ui/numeric/numeric-cast-binop_fixed.rs:265:17: 265:35
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast-binop_fixed.rs:265:25: 265:33
                                         // + literal: Const { ty: fn(usize) -> Result<i16, <usize as TryInto<i16>>::Error> {<usize as TryInto<i16>>::try_into}, val: Value(<ZST>) }
    }

    bb155: {
        _274 = Result::<i16, TryFromIntError>::unwrap(move _275) -> bb156; // scope 12 at ui/numeric/numeric-cast-binop_fixed.rs:265:17: 265:44
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast-binop_fixed.rs:265:36: 265:42
                                         // + literal: Const { ty: fn(Result<i16, TryFromIntError>) -> i16 {Result::<i16, TryFromIntError>::unwrap}, val: Value(<ZST>) }
    }

    bb156: {
        _278 = _6;                       // scope 12 at ui/numeric/numeric-cast-binop_fixed.rs:268:17: 268:21
        _277 = <u8 as Into<i32>>::into(move _278) -> bb157; // scope 12 at ui/numeric/numeric-cast-binop_fixed.rs:268:17: 268:28
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast-binop_fixed.rs:268:22: 268:26
                                         // + literal: Const { ty: fn(u8) -> i32 {<u8 as Into<i32>>::into}, val: Value(<ZST>) }
    }

    bb157: {
        _280 = _5;                       // scope 12 at ui/numeric/numeric-cast-binop_fixed.rs:270:17: 270:22
        _279 = <u16 as Into<i32>>::into(move _280) -> bb158; // scope 12 at ui/numeric/numeric-cast-binop_fixed.rs:270:17: 270:29
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast-binop_fixed.rs:270:23: 270:27
                                         // + literal: Const { ty: fn(u16) -> i32 {<u16 as Into<i32>>::into}, val: Value(<ZST>) }
    }

    bb158: {
        _283 = _4;                       // scope 12 at ui/numeric/numeric-cast-binop_fixed.rs:272:17: 272:22
        _282 = <u32 as TryInto<i32>>::try_into(move _283) -> bb159; // scope 12 at ui/numeric/numeric-cast-binop_fixed.rs:272:17: 272:33
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast-binop_fixed.rs:272:23: 272:31
                                         // + literal: Const { ty: fn(u32) -> Result<i32, <u32 as TryInto<i32>>::Error> {<u32 as TryInto<i32>>::try_into}, val: Value(<ZST>) }
    }

    bb159: {
        _281 = Result::<i32, TryFromIntError>::unwrap(move _282) -> bb160; // scope 12 at ui/numeric/numeric-cast-binop_fixed.rs:272:17: 272:42
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast-binop_fixed.rs:272:34: 272:40
                                         // + literal: Const { ty: fn(Result<i32, TryFromIntError>) -> i32 {Result::<i32, TryFromIntError>::unwrap}, val: Value(<ZST>) }
    }

    bb160: {
        _286 = _3;                       // scope 12 at ui/numeric/numeric-cast-binop_fixed.rs:274:17: 274:22
        _285 = <u64 as TryInto<i32>>::try_into(move _286) -> bb161; // scope 12 at ui/numeric/numeric-cast-binop_fixed.rs:274:17: 274:33
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast-binop_fixed.rs:274:23: 274:31
                                         // + literal: Const { ty: fn(u64) -> Result<i32, <u64 as TryInto<i32>>::Error> {<u64 as TryInto<i32>>::try_into}, val: Value(<ZST>) }
    }

    bb161: {
        _284 = Result::<i32, TryFromIntError>::unwrap(move _285) -> bb162; // scope 12 at ui/numeric/numeric-cast-binop_fixed.rs:274:17: 274:42
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast-binop_fixed.rs:274:34: 274:40
                                         // + literal: Const { ty: fn(Result<i32, TryFromIntError>) -> i32 {Result::<i32, TryFromIntError>::unwrap}, val: Value(<ZST>) }
    }

    bb162: {
        _289 = _2;                       // scope 12 at ui/numeric/numeric-cast-binop_fixed.rs:276:17: 276:23
        _288 = <u128 as TryInto<i32>>::try_into(move _289) -> bb163; // scope 12 at ui/numeric/numeric-cast-binop_fixed.rs:276:17: 276:34
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast-binop_fixed.rs:276:24: 276:32
                                         // + literal: Const { ty: fn(u128) -> Result<i32, <u128 as TryInto<i32>>::Error> {<u128 as TryInto<i32>>::try_into}, val: Value(<ZST>) }
    }

    bb163: {
        _287 = Result::<i32, TryFromIntError>::unwrap(move _288) -> bb164; // scope 12 at ui/numeric/numeric-cast-binop_fixed.rs:276:17: 276:43
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast-binop_fixed.rs:276:35: 276:41
                                         // + literal: Const { ty: fn(Result<i32, TryFromIntError>) -> i32 {Result::<i32, TryFromIntError>::unwrap}, val: Value(<ZST>) }
    }

    bb164: {
        _292 = _1;                       // scope 12 at ui/numeric/numeric-cast-binop_fixed.rs:278:17: 278:24
        _291 = <usize as TryInto<i32>>::try_into(move _292) -> bb165; // scope 12 at ui/numeric/numeric-cast-binop_fixed.rs:278:17: 278:35
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast-binop_fixed.rs:278:25: 278:33
                                         // + literal: Const { ty: fn(usize) -> Result<i32, <usize as TryInto<i32>>::Error> {<usize as TryInto<i32>>::try_into}, val: Value(<ZST>) }
    }

    bb165: {
        _290 = Result::<i32, TryFromIntError>::unwrap(move _291) -> bb166; // scope 12 at ui/numeric/numeric-cast-binop_fixed.rs:278:17: 278:44
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast-binop_fixed.rs:278:36: 278:42
                                         // + literal: Const { ty: fn(Result<i32, TryFromIntError>) -> i32 {Result::<i32, TryFromIntError>::unwrap}, val: Value(<ZST>) }
    }

    bb166: {
        _294 = _6;                       // scope 12 at ui/numeric/numeric-cast-binop_fixed.rs:281:17: 281:21
        _293 = <u8 as Into<i64>>::into(move _294) -> bb167; // scope 12 at ui/numeric/numeric-cast-binop_fixed.rs:281:17: 281:28
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast-binop_fixed.rs:281:22: 281:26
                                         // + literal: Const { ty: fn(u8) -> i64 {<u8 as Into<i64>>::into}, val: Value(<ZST>) }
    }

    bb167: {
        _296 = _5;                       // scope 12 at ui/numeric/numeric-cast-binop_fixed.rs:283:17: 283:22
        _295 = <u16 as Into<i64>>::into(move _296) -> bb168; // scope 12 at ui/numeric/numeric-cast-binop_fixed.rs:283:17: 283:29
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast-binop_fixed.rs:283:23: 283:27
                                         // + literal: Const { ty: fn(u16) -> i64 {<u16 as Into<i64>>::into}, val: Value(<ZST>) }
    }

    bb168: {
        _298 = _4;                       // scope 12 at ui/numeric/numeric-cast-binop_fixed.rs:285:17: 285:22
        _297 = <u32 as Into<i64>>::into(move _298) -> bb169; // scope 12 at ui/numeric/numeric-cast-binop_fixed.rs:285:17: 285:29
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast-binop_fixed.rs:285:23: 285:27
                                         // + literal: Const { ty: fn(u32) -> i64 {<u32 as Into<i64>>::into}, val: Value(<ZST>) }
    }

    bb169: {
        _301 = _3;                       // scope 12 at ui/numeric/numeric-cast-binop_fixed.rs:287:17: 287:22
        _300 = <u64 as TryInto<i64>>::try_into(move _301) -> bb170; // scope 12 at ui/numeric/numeric-cast-binop_fixed.rs:287:17: 287:33
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast-binop_fixed.rs:287:23: 287:31
                                         // + literal: Const { ty: fn(u64) -> Result<i64, <u64 as TryInto<i64>>::Error> {<u64 as TryInto<i64>>::try_into}, val: Value(<ZST>) }
    }

    bb170: {
        _299 = Result::<i64, TryFromIntError>::unwrap(move _300) -> bb171; // scope 12 at ui/numeric/numeric-cast-binop_fixed.rs:287:17: 287:42
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast-binop_fixed.rs:287:34: 287:40
                                         // + literal: Const { ty: fn(Result<i64, TryFromIntError>) -> i64 {Result::<i64, TryFromIntError>::unwrap}, val: Value(<ZST>) }
    }

    bb171: {
        _304 = _2;                       // scope 12 at ui/numeric/numeric-cast-binop_fixed.rs:289:17: 289:23
        _303 = <u128 as TryInto<i64>>::try_into(move _304) -> bb172; // scope 12 at ui/numeric/numeric-cast-binop_fixed.rs:289:17: 289:34
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast-binop_fixed.rs:289:24: 289:32
                                         // + literal: Const { ty: fn(u128) -> Result<i64, <u128 as TryInto<i64>>::Error> {<u128 as TryInto<i64>>::try_into}, val: Value(<ZST>) }
    }

    bb172: {
        _302 = Result::<i64, TryFromIntError>::unwrap(move _303) -> bb173; // scope 12 at ui/numeric/numeric-cast-binop_fixed.rs:289:17: 289:43
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast-binop_fixed.rs:289:35: 289:41
                                         // + literal: Const { ty: fn(Result<i64, TryFromIntError>) -> i64 {Result::<i64, TryFromIntError>::unwrap}, val: Value(<ZST>) }
    }

    bb173: {
        _307 = _1;                       // scope 12 at ui/numeric/numeric-cast-binop_fixed.rs:291:17: 291:24
        _306 = <usize as TryInto<i64>>::try_into(move _307) -> bb174; // scope 12 at ui/numeric/numeric-cast-binop_fixed.rs:291:17: 291:35
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast-binop_fixed.rs:291:25: 291:33
                                         // + literal: Const { ty: fn(usize) -> Result<i64, <usize as TryInto<i64>>::Error> {<usize as TryInto<i64>>::try_into}, val: Value(<ZST>) }
    }

    bb174: {
        _305 = Result::<i64, TryFromIntError>::unwrap(move _306) -> bb175; // scope 12 at ui/numeric/numeric-cast-binop_fixed.rs:291:17: 291:44
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast-binop_fixed.rs:291:36: 291:42
                                         // + literal: Const { ty: fn(Result<i64, TryFromIntError>) -> i64 {Result::<i64, TryFromIntError>::unwrap}, val: Value(<ZST>) }
    }

    bb175: {
        _309 = _6;                       // scope 12 at ui/numeric/numeric-cast-binop_fixed.rs:294:18: 294:22
        _308 = <u8 as Into<i128>>::into(move _309) -> bb176; // scope 12 at ui/numeric/numeric-cast-binop_fixed.rs:294:18: 294:29
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast-binop_fixed.rs:294:23: 294:27
                                         // + literal: Const { ty: fn(u8) -> i128 {<u8 as Into<i128>>::into}, val: Value(<ZST>) }
    }

    bb176: {
        _311 = _5;                       // scope 12 at ui/numeric/numeric-cast-binop_fixed.rs:296:18: 296:23
        _310 = <u16 as Into<i128>>::into(move _311) -> bb177; // scope 12 at ui/numeric/numeric-cast-binop_fixed.rs:296:18: 296:30
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast-binop_fixed.rs:296:24: 296:28
                                         // + literal: Const { ty: fn(u16) -> i128 {<u16 as Into<i128>>::into}, val: Value(<ZST>) }
    }

    bb177: {
        _313 = _4;                       // scope 12 at ui/numeric/numeric-cast-binop_fixed.rs:298:18: 298:23
        _312 = <u32 as Into<i128>>::into(move _313) -> bb178; // scope 12 at ui/numeric/numeric-cast-binop_fixed.rs:298:18: 298:30
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast-binop_fixed.rs:298:24: 298:28
                                         // + literal: Const { ty: fn(u32) -> i128 {<u32 as Into<i128>>::into}, val: Value(<ZST>) }
    }

    bb178: {
        _315 = _3;                       // scope 12 at ui/numeric/numeric-cast-binop_fixed.rs:300:18: 300:23
        _314 = <u64 as Into<i128>>::into(move _315) -> bb179; // scope 12 at ui/numeric/numeric-cast-binop_fixed.rs:300:18: 300:30
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast-binop_fixed.rs:300:24: 300:28
                                         // + literal: Const { ty: fn(u64) -> i128 {<u64 as Into<i128>>::into}, val: Value(<ZST>) }
    }

    bb179: {
        _318 = _2;                       // scope 12 at ui/numeric/numeric-cast-binop_fixed.rs:302:18: 302:24
        _317 = <u128 as TryInto<i128>>::try_into(move _318) -> bb180; // scope 12 at ui/numeric/numeric-cast-binop_fixed.rs:302:18: 302:35
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast-binop_fixed.rs:302:25: 302:33
                                         // + literal: Const { ty: fn(u128) -> Result<i128, <u128 as TryInto<i128>>::Error> {<u128 as TryInto<i128>>::try_into}, val: Value(<ZST>) }
    }

    bb180: {
        _316 = Result::<i128, TryFromIntError>::unwrap(move _317) -> bb181; // scope 12 at ui/numeric/numeric-cast-binop_fixed.rs:302:18: 302:44
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast-binop_fixed.rs:302:36: 302:42
                                         // + literal: Const { ty: fn(Result<i128, TryFromIntError>) -> i128 {Result::<i128, TryFromIntError>::unwrap}, val: Value(<ZST>) }
    }

    bb181: {
        _321 = _1;                       // scope 12 at ui/numeric/numeric-cast-binop_fixed.rs:304:18: 304:25
        _320 = <usize as TryInto<i128>>::try_into(move _321) -> bb182; // scope 12 at ui/numeric/numeric-cast-binop_fixed.rs:304:18: 304:36
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast-binop_fixed.rs:304:26: 304:34
                                         // + literal: Const { ty: fn(usize) -> Result<i128, <usize as TryInto<i128>>::Error> {<usize as TryInto<i128>>::try_into}, val: Value(<ZST>) }
    }

    bb182: {
        _319 = Result::<i128, TryFromIntError>::unwrap(move _320) -> bb183; // scope 12 at ui/numeric/numeric-cast-binop_fixed.rs:304:18: 304:45
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast-binop_fixed.rs:304:37: 304:43
                                         // + literal: Const { ty: fn(Result<i128, TryFromIntError>) -> i128 {Result::<i128, TryFromIntError>::unwrap}, val: Value(<ZST>) }
    }

    bb183: {
        _323 = _6;                       // scope 12 at ui/numeric/numeric-cast-binop_fixed.rs:307:19: 307:23
        _322 = <u8 as Into<isize>>::into(move _323) -> bb184; // scope 12 at ui/numeric/numeric-cast-binop_fixed.rs:307:19: 307:30
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast-binop_fixed.rs:307:24: 307:28
                                         // + literal: Const { ty: fn(u8) -> isize {<u8 as Into<isize>>::into}, val: Value(<ZST>) }
    }

    bb184: {
        _326 = _5;                       // scope 12 at ui/numeric/numeric-cast-binop_fixed.rs:309:19: 309:24
        _325 = <u16 as TryInto<isize>>::try_into(move _326) -> bb185; // scope 12 at ui/numeric/numeric-cast-binop_fixed.rs:309:19: 309:35
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast-binop_fixed.rs:309:25: 309:33
                                         // + literal: Const { ty: fn(u16) -> Result<isize, <u16 as TryInto<isize>>::Error> {<u16 as TryInto<isize>>::try_into}, val: Value(<ZST>) }
    }

    bb185: {
        _324 = Result::<isize, TryFromIntError>::unwrap(move _325) -> bb186; // scope 12 at ui/numeric/numeric-cast-binop_fixed.rs:309:19: 309:44
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast-binop_fixed.rs:309:36: 309:42
                                         // + literal: Const { ty: fn(Result<isize, TryFromIntError>) -> isize {Result::<isize, TryFromIntError>::unwrap}, val: Value(<ZST>) }
    }

    bb186: {
        _329 = _4;                       // scope 12 at ui/numeric/numeric-cast-binop_fixed.rs:311:19: 311:24
        _328 = <u32 as TryInto<isize>>::try_into(move _329) -> bb187; // scope 12 at ui/numeric/numeric-cast-binop_fixed.rs:311:19: 311:35
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast-binop_fixed.rs:311:25: 311:33
                                         // + literal: Const { ty: fn(u32) -> Result<isize, <u32 as TryInto<isize>>::Error> {<u32 as TryInto<isize>>::try_into}, val: Value(<ZST>) }
    }

    bb187: {
        _327 = Result::<isize, TryFromIntError>::unwrap(move _328) -> bb188; // scope 12 at ui/numeric/numeric-cast-binop_fixed.rs:311:19: 311:44
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast-binop_fixed.rs:311:36: 311:42
                                         // + literal: Const { ty: fn(Result<isize, TryFromIntError>) -> isize {Result::<isize, TryFromIntError>::unwrap}, val: Value(<ZST>) }
    }

    bb188: {
        _332 = _3;                       // scope 12 at ui/numeric/numeric-cast-binop_fixed.rs:313:19: 313:24
        _331 = <u64 as TryInto<isize>>::try_into(move _332) -> bb189; // scope 12 at ui/numeric/numeric-cast-binop_fixed.rs:313:19: 313:35
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast-binop_fixed.rs:313:25: 313:33
                                         // + literal: Const { ty: fn(u64) -> Result<isize, <u64 as TryInto<isize>>::Error> {<u64 as TryInto<isize>>::try_into}, val: Value(<ZST>) }
    }

    bb189: {
        _330 = Result::<isize, TryFromIntError>::unwrap(move _331) -> bb190; // scope 12 at ui/numeric/numeric-cast-binop_fixed.rs:313:19: 313:44
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast-binop_fixed.rs:313:36: 313:42
                                         // + literal: Const { ty: fn(Result<isize, TryFromIntError>) -> isize {Result::<isize, TryFromIntError>::unwrap}, val: Value(<ZST>) }
    }

    bb190: {
        _335 = _2;                       // scope 12 at ui/numeric/numeric-cast-binop_fixed.rs:315:19: 315:25
        _334 = <u128 as TryInto<isize>>::try_into(move _335) -> bb191; // scope 12 at ui/numeric/numeric-cast-binop_fixed.rs:315:19: 315:36
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast-binop_fixed.rs:315:26: 315:34
                                         // + literal: Const { ty: fn(u128) -> Result<isize, <u128 as TryInto<isize>>::Error> {<u128 as TryInto<isize>>::try_into}, val: Value(<ZST>) }
    }

    bb191: {
        _333 = Result::<isize, TryFromIntError>::unwrap(move _334) -> bb192; // scope 12 at ui/numeric/numeric-cast-binop_fixed.rs:315:19: 315:45
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast-binop_fixed.rs:315:37: 315:43
                                         // + literal: Const { ty: fn(Result<isize, TryFromIntError>) -> isize {Result::<isize, TryFromIntError>::unwrap}, val: Value(<ZST>) }
    }

    bb192: {
        _338 = _1;                       // scope 12 at ui/numeric/numeric-cast-binop_fixed.rs:317:19: 317:26
        _337 = <usize as TryInto<isize>>::try_into(move _338) -> bb193; // scope 12 at ui/numeric/numeric-cast-binop_fixed.rs:317:19: 317:37
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast-binop_fixed.rs:317:27: 317:35
                                         // + literal: Const { ty: fn(usize) -> Result<isize, <usize as TryInto<isize>>::Error> {<usize as TryInto<isize>>::try_into}, val: Value(<ZST>) }
    }

    bb193: {
        _336 = Result::<isize, TryFromIntError>::unwrap(move _337) -> bb194; // scope 12 at ui/numeric/numeric-cast-binop_fixed.rs:317:19: 317:46
                                         // mir::Constant
                                         // + span: ui/numeric/numeric-cast-binop_fixed.rs:317:38: 317:44
                                         // + literal: Const { ty: fn(Result<isize, TryFromIntError>) -> isize {Result::<isize, TryFromIntError>::unwrap}, val: Value(<ZST>) }
    }

    bb194: {
        return;                          // scope 0 at ui/numeric/numeric-cast-binop_fixed.rs:320:2: 320:2
    }
}
