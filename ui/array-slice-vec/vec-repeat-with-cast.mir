// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
fn main() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/array-slice-vec/vec-repeat-with-cast.rs:5:15: 5:15
    let _1: [i32; 1];                    // in scope 0 at ui/array-slice-vec/vec-repeat-with-cast.rs:5:21: 5:23
    scope 1 {
        debug _a => _1;                  // in scope 1 at ui/array-slice-vec/vec-repeat-with-cast.rs:5:21: 5:23
    }

    bb0: {
        _1 = [const 0_i32; 1];           // scope 0 at ui/array-slice-vec/vec-repeat-with-cast.rs:5:26: 5:41
        return;                          // scope 0 at ui/array-slice-vec/vec-repeat-with-cast.rs:5:44: 5:44
    }
}

main::{constant#0}: usize = {
    let mut _0: usize;                   // return place in scope 0 at ui/array-slice-vec/vec-repeat-with-cast.rs:5:30: 5:40

    bb0: {
        _0 = const 1_usize;              // scope 0 at ui/array-slice-vec/vec-repeat-with-cast.rs:5:30: 5:31
        return;                          // scope 0 at ui/array-slice-vec/vec-repeat-with-cast.rs:5:30: 5:40
    }
}
