// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
fn <impl at ui/array-slice-vec/rcvr-borrowed-to-slice.rs:10:1: 10:29>::sum_(_1: &[isize]) -> isize {
    debug self => _1;                    // in scope 0 at ui/array-slice-vec/rcvr-borrowed-to-slice.rs:11:13: 11:17
    let mut _0: isize;                   // return place in scope 0 at ui/array-slice-vec/rcvr-borrowed-to-slice.rs:11:22: 11:27
    let mut _2: std::slice::Iter<'_, isize>; // in scope 0 at ui/array-slice-vec/rcvr-borrowed-to-slice.rs:12:9: 12:20
    let mut _3: &[isize];                // in scope 0 at ui/array-slice-vec/rcvr-borrowed-to-slice.rs:12:9: 12:20
    let mut _4: [closure@ui/array-slice-vec/rcvr-borrowed-to-slice.rs:12:29: 12:36]; // in scope 0 at ui/array-slice-vec/rcvr-borrowed-to-slice.rs:12:29: 12:42

    bb0: {
        _3 = _1;                         // scope 0 at ui/array-slice-vec/rcvr-borrowed-to-slice.rs:12:9: 12:20
        _2 = core::slice::<impl [isize]>::iter(move _3) -> bb1; // scope 0 at ui/array-slice-vec/rcvr-borrowed-to-slice.rs:12:9: 12:20
                                         // mir::Constant
                                         // + span: ui/array-slice-vec/rcvr-borrowed-to-slice.rs:12:14: 12:18
                                         // + literal: Const { ty: for<'a> fn(&'a [isize]) -> std::slice::Iter<'a, isize> {core::slice::<impl [isize]>::iter}, val: Value(<ZST>) }
    }

    bb1: {
        _0 = <std::slice::Iter<'_, isize> as Iterator>::fold::<isize, [closure@ui/array-slice-vec/rcvr-borrowed-to-slice.rs:12:29: 12:36]>(move _2, const 0_isize, move _4) -> bb2; // scope 0 at ui/array-slice-vec/rcvr-borrowed-to-slice.rs:12:9: 12:43
                                         // mir::Constant
                                         // + span: ui/array-slice-vec/rcvr-borrowed-to-slice.rs:12:21: 12:25
                                         // + literal: Const { ty: fn(std::slice::Iter<'_, isize>, isize, [closure@ui/array-slice-vec/rcvr-borrowed-to-slice.rs:12:29: 12:36]) -> isize {<std::slice::Iter<'_, isize> as Iterator>::fold::<isize, [closure@ui/array-slice-vec/rcvr-borrowed-to-slice.rs:12:29: 12:36]>}, val: Value(<ZST>) }
    }

    bb2: {
        return;                          // scope 0 at ui/array-slice-vec/rcvr-borrowed-to-slice.rs:13:6: 13:6
    }
}

fn <impl at ui/array-slice-vec/rcvr-borrowed-to-slice.rs:10:1: 10:29>::sum_::{closure#0}(_1: &mut [closure@ui/array-slice-vec/rcvr-borrowed-to-slice.rs:12:29: 12:36], _2: isize, _3: &isize) -> isize {
    debug a => _2;                       // in scope 0 at ui/array-slice-vec/rcvr-borrowed-to-slice.rs:12:30: 12:31
    let mut _0: isize;                   // return place in scope 0 at ui/array-slice-vec/rcvr-borrowed-to-slice.rs:12:37: 12:37
    let _4: isize;                       // in scope 0 at ui/array-slice-vec/rcvr-borrowed-to-slice.rs:12:34: 12:35
    let mut _5: isize;                   // in scope 0 at ui/array-slice-vec/rcvr-borrowed-to-slice.rs:12:37: 12:38
    let mut _6: isize;                   // in scope 0 at ui/array-slice-vec/rcvr-borrowed-to-slice.rs:12:41: 12:42
    let mut _7: (isize, bool);           // in scope 0 at ui/array-slice-vec/rcvr-borrowed-to-slice.rs:12:37: 12:42
    scope 1 {
        debug b => _4;                   // in scope 1 at ui/array-slice-vec/rcvr-borrowed-to-slice.rs:12:34: 12:35
    }

    bb0: {
        _4 = (*_3);                      // scope 0 at ui/array-slice-vec/rcvr-borrowed-to-slice.rs:12:34: 12:35
        _5 = _2;                         // scope 1 at ui/array-slice-vec/rcvr-borrowed-to-slice.rs:12:37: 12:38
        _6 = _4;                         // scope 1 at ui/array-slice-vec/rcvr-borrowed-to-slice.rs:12:41: 12:42
        _7 = CheckedAdd(_5, _6);         // scope 1 at ui/array-slice-vec/rcvr-borrowed-to-slice.rs:12:37: 12:42
        assert(!move (_7.1: bool), "attempt to compute `{} + {}`, which would overflow", move _5, move _6) -> bb1; // scope 1 at ui/array-slice-vec/rcvr-borrowed-to-slice.rs:12:37: 12:42
    }

    bb1: {
        _0 = move (_7.0: isize);         // scope 1 at ui/array-slice-vec/rcvr-borrowed-to-slice.rs:12:37: 12:42
        return;                          // scope 0 at ui/array-slice-vec/rcvr-borrowed-to-slice.rs:12:42: 12:42
    }
}

fn call_sum(_1: &[isize]) -> isize {
    debug x => _1;                       // in scope 0 at ui/array-slice-vec/rcvr-borrowed-to-slice.rs:16:13: 16:14
    let mut _0: isize;                   // return place in scope 0 at ui/array-slice-vec/rcvr-borrowed-to-slice.rs:16:29: 16:34
    let mut _2: &[isize];                // in scope 0 at ui/array-slice-vec/rcvr-borrowed-to-slice.rs:16:37: 16:45

    bb0: {
        _2 = _1;                         // scope 0 at ui/array-slice-vec/rcvr-borrowed-to-slice.rs:16:37: 16:45
        _0 = <&[isize] as sum>::sum_(move _2) -> bb1; // scope 0 at ui/array-slice-vec/rcvr-borrowed-to-slice.rs:16:37: 16:45
                                         // mir::Constant
                                         // + span: ui/array-slice-vec/rcvr-borrowed-to-slice.rs:16:39: 16:43
                                         // + literal: Const { ty: fn(&[isize]) -> isize {<&[isize] as sum>::sum_}, val: Value(<ZST>) }
    }

    bb1: {
        return;                          // scope 0 at ui/array-slice-vec/rcvr-borrowed-to-slice.rs:16:47: 16:47
    }
}

fn main() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/array-slice-vec/rcvr-borrowed-to-slice.rs:18:15: 18:15
    let _1: std::vec::Vec<isize>;        // in scope 0 at ui/array-slice-vec/rcvr-borrowed-to-slice.rs:19:9: 19:10
    let mut _2: std::boxed::Box<[isize]>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
    let mut _3: std::boxed::Box<[isize; 3]>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
    let mut _4: usize;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
    let mut _5: usize;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
    let mut _6: *mut u8;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
    let mut _7: std::boxed::Box<[isize; 3]>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
    let mut _9: &[isize];                // in scope 0 at ui/array-slice-vec/rcvr-borrowed-to-slice.rs:20:22: 20:24
    let _10: &[isize];                   // in scope 0 at ui/array-slice-vec/rcvr-borrowed-to-slice.rs:20:22: 20:24
    let mut _11: &std::vec::Vec<isize>;  // in scope 0 at ui/array-slice-vec/rcvr-borrowed-to-slice.rs:20:22: 20:24
    let _12: &std::vec::Vec<isize>;      // in scope 0 at ui/array-slice-vec/rcvr-borrowed-to-slice.rs:20:22: 20:24
    let _13: ();                         // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:62
    let mut _14: std::fmt::Arguments<'_>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _15: &[&str];                // in scope 0 at ui/array-slice-vec/rcvr-borrowed-to-slice.rs:21:14: 21:21
    let mut _16: &[&str; 2];             // in scope 0 at ui/array-slice-vec/rcvr-borrowed-to-slice.rs:21:14: 21:21
    let _17: &[&str; 2];                 // in scope 0 at ui/array-slice-vec/rcvr-borrowed-to-slice.rs:21:14: 21:21
    let mut _18: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _19: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let _20: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let _21: [core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _22: core::fmt::ArgumentV1<'_>; // in scope 0 at ui/array-slice-vec/rcvr-borrowed-to-slice.rs:21:23: 21:24
    let mut _23: &isize;                 // in scope 0 at ui/array-slice-vec/rcvr-borrowed-to-slice.rs:21:23: 21:24
    let _24: &isize;                     // in scope 0 at ui/array-slice-vec/rcvr-borrowed-to-slice.rs:21:23: 21:24
    let mut _25: (&isize, &isize);       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _26: &isize;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let mut _27: &isize;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _30: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    let mut _31: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
    let mut _32: isize;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
    let mut _33: isize;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
    let _35: !;                          // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
    let mut _36: core::panicking::AssertKind; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
    let mut _37: &isize;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let _38: &isize;                     // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let mut _39: &isize;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let _40: &isize;                     // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let mut _41: std::option::Option<std::fmt::Arguments<'_>>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
    let mut _43: std::boxed::Box<[isize]>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
    let mut _44: std::boxed::Box<[isize; 3]>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
    let mut _45: usize;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
    let mut _46: usize;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
    let mut _47: *mut u8;                // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
    let mut _48: std::boxed::Box<[isize; 3]>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
    let mut _50: &[isize];               // in scope 0 at ui/array-slice-vec/rcvr-borrowed-to-slice.rs:25:13: 25:21
    let _51: &[isize];                   // in scope 0 at ui/array-slice-vec/rcvr-borrowed-to-slice.rs:25:13: 25:21
    let mut _52: &std::vec::Vec<isize>;  // in scope 0 at ui/array-slice-vec/rcvr-borrowed-to-slice.rs:25:13: 25:21
    let _53: ();                         // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:62
    let mut _54: std::fmt::Arguments<'_>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _55: &[&str];                // in scope 0 at ui/array-slice-vec/rcvr-borrowed-to-slice.rs:26:14: 26:21
    let mut _56: &[&str; 2];             // in scope 0 at ui/array-slice-vec/rcvr-borrowed-to-slice.rs:26:14: 26:21
    let _57: &[&str; 2];                 // in scope 0 at ui/array-slice-vec/rcvr-borrowed-to-slice.rs:26:14: 26:21
    let mut _58: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _59: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let _60: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let _61: [core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _62: core::fmt::ArgumentV1<'_>; // in scope 0 at ui/array-slice-vec/rcvr-borrowed-to-slice.rs:26:23: 26:24
    let mut _63: &isize;                 // in scope 0 at ui/array-slice-vec/rcvr-borrowed-to-slice.rs:26:23: 26:24
    let _64: &isize;                     // in scope 0 at ui/array-slice-vec/rcvr-borrowed-to-slice.rs:26:23: 26:24
    let mut _65: (&isize, &isize);       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _66: &isize;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let mut _67: &isize;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _70: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    let mut _71: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
    let mut _72: isize;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
    let mut _73: isize;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
    let _75: !;                          // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
    let mut _76: core::panicking::AssertKind; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
    let mut _77: &isize;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let _78: &isize;                     // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let mut _79: &isize;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let _80: &isize;                     // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let mut _81: std::option::Option<std::fmt::Arguments<'_>>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
    let mut _83: std::boxed::Box<[isize]>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
    let mut _84: std::boxed::Box<[isize; 3]>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
    let mut _85: usize;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
    let mut _86: usize;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
    let mut _87: *mut u8;                // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
    let mut _88: std::boxed::Box<[isize; 3]>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
    let mut _90: &[isize];               // in scope 0 at ui/array-slice-vec/rcvr-borrowed-to-slice.rs:30:13: 30:21
    let _91: &[isize];                   // in scope 0 at ui/array-slice-vec/rcvr-borrowed-to-slice.rs:30:13: 30:21
    let mut _92: &std::vec::Vec<isize>;  // in scope 0 at ui/array-slice-vec/rcvr-borrowed-to-slice.rs:30:13: 30:21
    let _93: ();                         // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:62
    let mut _94: std::fmt::Arguments<'_>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _95: &[&str];                // in scope 0 at ui/array-slice-vec/rcvr-borrowed-to-slice.rs:31:14: 31:21
    let mut _96: &[&str; 2];             // in scope 0 at ui/array-slice-vec/rcvr-borrowed-to-slice.rs:31:14: 31:21
    let _97: &[&str; 2];                 // in scope 0 at ui/array-slice-vec/rcvr-borrowed-to-slice.rs:31:14: 31:21
    let mut _98: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _99: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let _100: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let _101: [core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _102: core::fmt::ArgumentV1<'_>; // in scope 0 at ui/array-slice-vec/rcvr-borrowed-to-slice.rs:31:23: 31:24
    let mut _103: &isize;                // in scope 0 at ui/array-slice-vec/rcvr-borrowed-to-slice.rs:31:23: 31:24
    let _104: &isize;                    // in scope 0 at ui/array-slice-vec/rcvr-borrowed-to-slice.rs:31:23: 31:24
    let mut _105: (&isize, &isize);      // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _106: &isize;                // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let mut _107: &isize;                // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _110: bool;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    let mut _111: bool;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
    let mut _112: isize;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
    let mut _113: isize;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
    let _115: !;                         // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
    let mut _116: core::panicking::AssertKind; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
    let mut _117: &isize;                // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let _118: &isize;                    // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let mut _119: &isize;                // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let _120: &isize;                    // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let mut _121: std::option::Option<std::fmt::Arguments<'_>>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
    let mut _128: *const [isize; 3];     // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
    let mut _129: *const [isize; 3];     // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
    let mut _130: *const [isize; 3];     // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
    scope 1 {
        debug x => _1;                   // in scope 1 at ui/array-slice-vec/rcvr-borrowed-to-slice.rs:19:9: 19:10
        let _8: isize;                   // in scope 1 at ui/array-slice-vec/rcvr-borrowed-to-slice.rs:20:9: 20:10
        scope 3 {
            debug y => _8;               // in scope 3 at ui/array-slice-vec/rcvr-borrowed-to-slice.rs:20:9: 20:10
            let _28: &isize;             // in scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
            let _29: &isize;             // in scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
            let _42: std::vec::Vec<isize>; // in scope 3 at ui/array-slice-vec/rcvr-borrowed-to-slice.rs:24:9: 24:10
            let mut _126: &isize;        // in scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
            let mut _127: &[&str; 2];    // in scope 3 at ui/array-slice-vec/rcvr-borrowed-to-slice.rs:21:14: 21:21
            scope 4 {
                debug left_val => _28;   // in scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
                debug right_val => _29;  // in scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
                let _34: core::panicking::AssertKind; // in scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                scope 5 {
                    debug kind => _34;   // in scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                }
            }
            scope 6 {
                debug x => _42;          // in scope 6 at ui/array-slice-vec/rcvr-borrowed-to-slice.rs:24:9: 24:10
                let _49: isize;          // in scope 6 at ui/array-slice-vec/rcvr-borrowed-to-slice.rs:25:9: 25:10
                scope 8 {
                    debug y => _49;      // in scope 8 at ui/array-slice-vec/rcvr-borrowed-to-slice.rs:25:9: 25:10
                    let _68: &isize;     // in scope 8 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
                    let _69: &isize;     // in scope 8 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
                    let _82: std::vec::Vec<isize>; // in scope 8 at ui/array-slice-vec/rcvr-borrowed-to-slice.rs:29:9: 29:10
                    let mut _124: &isize; // in scope 8 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                    let mut _125: &[&str; 2]; // in scope 8 at ui/array-slice-vec/rcvr-borrowed-to-slice.rs:26:14: 26:21
                    scope 9 {
                        debug left_val => _68; // in scope 9 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
                        debug right_val => _69; // in scope 9 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
                        let _74: core::panicking::AssertKind; // in scope 9 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                        scope 10 {
                            debug kind => _74; // in scope 10 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                        }
                    }
                    scope 11 {
                        debug x => _82;  // in scope 11 at ui/array-slice-vec/rcvr-borrowed-to-slice.rs:29:9: 29:10
                        let _89: isize;  // in scope 11 at ui/array-slice-vec/rcvr-borrowed-to-slice.rs:30:9: 30:10
                        scope 13 {
                            debug y => _89; // in scope 13 at ui/array-slice-vec/rcvr-borrowed-to-slice.rs:30:9: 30:10
                            let _108: &isize; // in scope 13 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
                            let _109: &isize; // in scope 13 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
                            let mut _122: &isize; // in scope 13 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                            let mut _123: &[&str; 2]; // in scope 13 at ui/array-slice-vec/rcvr-borrowed-to-slice.rs:31:14: 31:21
                            scope 14 {
                                debug left_val => _108; // in scope 14 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
                                debug right_val => _109; // in scope 14 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
                                let _114: core::panicking::AssertKind; // in scope 14 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                                scope 15 {
                                    debug kind => _114; // in scope 15 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                                }
                            }
                        }
                    }
                    scope 12 {
                    }
                }
            }
            scope 7 {
            }
        }
    }
    scope 2 {
    }

    bb0: {
        _4 = const 24_usize;             // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
        _5 = const 8_usize;              // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
        _6 = alloc::alloc::exchange_malloc(move _4, move _5) -> bb1; // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
                                         // + literal: Const { ty: unsafe fn(usize, usize) -> *mut u8 {alloc::alloc::exchange_malloc}, val: Value(<ZST>) }
    }

    bb1: {
        _7 = ShallowInitBox(move _6, [isize; 3]); // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
        _128 = (((_7.0: std::ptr::Unique<[isize; 3]>).0: std::ptr::NonNull<[isize; 3]>).0: *const [isize; 3]); // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:37: 52:46
        (*_128) = [const 1_isize, const 2_isize, const 3_isize]; // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:37: 52:46
        _3 = move _7;                    // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
        _2 = move _3 as std::boxed::Box<[isize]> (Pointer(Unsize)); // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
        _1 = slice::<impl [isize]>::into_vec::<std::alloc::Global>(move _2) -> bb2; // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:50:36: 53:10
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:50:36: 50:51
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: fn(Box<[isize]>) -> Vec<isize> {slice::<impl [isize]>::into_vec::<std::alloc::Global>}, val: Value(<ZST>) }
    }

    bb2: {
        _12 = &_1;                       // scope 1 at ui/array-slice-vec/rcvr-borrowed-to-slice.rs:20:22: 20:24
        _11 = _12;                       // scope 1 at ui/array-slice-vec/rcvr-borrowed-to-slice.rs:20:22: 20:24
        _10 = <Vec<isize> as Deref>::deref(move _11) -> [return: bb3, unwind: bb33]; // scope 1 at ui/array-slice-vec/rcvr-borrowed-to-slice.rs:20:22: 20:24
                                         // mir::Constant
                                         // + span: ui/array-slice-vec/rcvr-borrowed-to-slice.rs:20:22: 20:24
                                         // + literal: Const { ty: for<'a> fn(&'a Vec<isize>) -> &'a <Vec<isize> as Deref>::Target {<Vec<isize> as Deref>::deref}, val: Value(<ZST>) }
    }

    bb3: {
        _9 = _10;                        // scope 1 at ui/array-slice-vec/rcvr-borrowed-to-slice.rs:20:22: 20:24
        _8 = call_sum(move _9) -> [return: bb4, unwind: bb33]; // scope 1 at ui/array-slice-vec/rcvr-borrowed-to-slice.rs:20:13: 20:25
                                         // mir::Constant
                                         // + span: ui/array-slice-vec/rcvr-borrowed-to-slice.rs:20:13: 20:21
                                         // + literal: Const { ty: for<'a> fn(&'a [isize]) -> isize {call_sum}, val: Value(<ZST>) }
    }

    bb4: {
        _127 = const _;                  // scope 3 at ui/array-slice-vec/rcvr-borrowed-to-slice.rs:21:14: 21:21
                                         // mir::Constant
                                         // + span: ui/array-slice-vec/rcvr-borrowed-to-slice.rs:21:14: 21:21
                                         // + literal: Const { ty: &[&str; 2], val: Unevaluated(main, [], Some(promoted[5])) }
        _17 = _127;                      // scope 3 at ui/array-slice-vec/rcvr-borrowed-to-slice.rs:21:14: 21:21
        _16 = _17;                       // scope 3 at ui/array-slice-vec/rcvr-borrowed-to-slice.rs:21:14: 21:21
        _15 = move _16 as &[&str] (Pointer(Unsize)); // scope 3 at ui/array-slice-vec/rcvr-borrowed-to-slice.rs:21:14: 21:21
        _24 = &_8;                       // scope 3 at ui/array-slice-vec/rcvr-borrowed-to-slice.rs:21:23: 21:24
        _23 = _24;                       // scope 3 at ui/array-slice-vec/rcvr-borrowed-to-slice.rs:21:23: 21:24
        _22 = core::fmt::ArgumentV1::<'_>::new_display::<isize>(move _23) -> [return: bb5, unwind: bb33]; // scope 3 at ui/array-slice-vec/rcvr-borrowed-to-slice.rs:21:23: 21:24
                                         // mir::Constant
                                         // + span: ui/array-slice-vec/rcvr-borrowed-to-slice.rs:21:23: 21:24
                                         // + user_ty: UserType(2)
                                         // + literal: Const { ty: for<'b> fn(&'b isize) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_display::<isize>}, val: Value(<ZST>) }
    }

    bb5: {
        _21 = [move _22];                // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _20 = &_21;                      // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _19 = _20;                       // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _18 = move _19 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _14 = Arguments::<'_>::new_v1(move _15, move _18) -> [return: bb6, unwind: bb33]; // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // + user_ty: UserType(1)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb6: {
        _13 = _print(move _14) -> [return: bb7, unwind: bb33]; // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:62
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:27
                                         // + literal: Const { ty: for<'a> fn(Arguments<'a>) {_print}, val: Value(<ZST>) }
    }

    bb7: {
        _26 = &_8;                       // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _126 = const _;                  // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // + literal: Const { ty: &isize, val: Unevaluated(main, [], Some(promoted[4])) }
        _27 = _126;                      // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _25 = (move _26, move _27);      // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _28 = (_25.0: &isize);           // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _29 = (_25.1: &isize);           // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _32 = (*_28);                    // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
        _33 = const 6_isize;             // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
        _31 = Eq(move _32, move _33);    // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
        _30 = Not(move _31);             // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
        switchInt(move _30) -> [0: bb9, otherwise: bb8]; // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    }

    bb8: {
        _34 = const core::panicking::AssertKind::Eq; // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _36 = const core::panicking::AssertKind::Eq; // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _38 = _28;                       // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _37 = _38;                       // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _40 = _29;                       // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _39 = _40;                       // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _41 = Option::<Arguments<'_>>::None; // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
        _35 = core::panicking::assert_failed::<isize, isize>(move _36, move _37, move _39, move _41) -> bb33; // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:53
                                         // + literal: Const { ty: for<'a, 'b, 'c> fn(core::panicking::AssertKind, &'a isize, &'b isize, Option<Arguments<'c>>) -> ! {core::panicking::assert_failed::<isize, isize>}, val: Value(<ZST>) }
    }

    bb9: {
        _45 = const 24_usize;            // scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
        _46 = const 8_usize;             // scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
        _47 = alloc::alloc::exchange_malloc(move _45, move _46) -> [return: bb10, unwind: bb33]; // scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
                                         // + literal: Const { ty: unsafe fn(usize, usize) -> *mut u8 {alloc::alloc::exchange_malloc}, val: Value(<ZST>) }
    }

    bb10: {
        _48 = ShallowInitBox(move _47, [isize; 3]); // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
        _129 = (((_48.0: std::ptr::Unique<[isize; 3]>).0: std::ptr::NonNull<[isize; 3]>).0: *const [isize; 3]); // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:37: 52:46
        (*_129) = [const 1_isize, const 2_isize, const 3_isize]; // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:37: 52:46
        _44 = move _48;                  // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
        _43 = move _44 as std::boxed::Box<[isize]> (Pointer(Unsize)); // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
        _42 = slice::<impl [isize]>::into_vec::<std::alloc::Global>(move _43) -> [return: bb11, unwind: bb33]; // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:50:36: 53:10
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:50:36: 50:51
                                         // + user_ty: UserType(3)
                                         // + literal: Const { ty: fn(Box<[isize]>) -> Vec<isize> {slice::<impl [isize]>::into_vec::<std::alloc::Global>}, val: Value(<ZST>) }
    }

    bb11: {
        _52 = &_42;                      // scope 6 at ui/array-slice-vec/rcvr-borrowed-to-slice.rs:25:13: 25:21
        _51 = <Vec<isize> as Deref>::deref(move _52) -> [return: bb12, unwind: bb32]; // scope 6 at ui/array-slice-vec/rcvr-borrowed-to-slice.rs:25:13: 25:21
                                         // mir::Constant
                                         // + span: ui/array-slice-vec/rcvr-borrowed-to-slice.rs:25:13: 25:21
                                         // + literal: Const { ty: for<'a> fn(&'a Vec<isize>) -> &'a <Vec<isize> as Deref>::Target {<Vec<isize> as Deref>::deref}, val: Value(<ZST>) }
    }

    bb12: {
        _50 = _51;                       // scope 6 at ui/array-slice-vec/rcvr-borrowed-to-slice.rs:25:13: 25:21
        _49 = <&[isize] as sum>::sum_(move _50) -> [return: bb13, unwind: bb32]; // scope 6 at ui/array-slice-vec/rcvr-borrowed-to-slice.rs:25:13: 25:21
                                         // mir::Constant
                                         // + span: ui/array-slice-vec/rcvr-borrowed-to-slice.rs:25:15: 25:19
                                         // + literal: Const { ty: fn(&[isize]) -> isize {<&[isize] as sum>::sum_}, val: Value(<ZST>) }
    }

    bb13: {
        _125 = const _;                  // scope 8 at ui/array-slice-vec/rcvr-borrowed-to-slice.rs:26:14: 26:21
                                         // mir::Constant
                                         // + span: ui/array-slice-vec/rcvr-borrowed-to-slice.rs:26:14: 26:21
                                         // + literal: Const { ty: &[&str; 2], val: Unevaluated(main, [], Some(promoted[3])) }
        _57 = _125;                      // scope 8 at ui/array-slice-vec/rcvr-borrowed-to-slice.rs:26:14: 26:21
        _56 = _57;                       // scope 8 at ui/array-slice-vec/rcvr-borrowed-to-slice.rs:26:14: 26:21
        _55 = move _56 as &[&str] (Pointer(Unsize)); // scope 8 at ui/array-slice-vec/rcvr-borrowed-to-slice.rs:26:14: 26:21
        _64 = &_49;                      // scope 8 at ui/array-slice-vec/rcvr-borrowed-to-slice.rs:26:23: 26:24
        _63 = _64;                       // scope 8 at ui/array-slice-vec/rcvr-borrowed-to-slice.rs:26:23: 26:24
        _62 = core::fmt::ArgumentV1::<'_>::new_display::<isize>(move _63) -> [return: bb14, unwind: bb32]; // scope 8 at ui/array-slice-vec/rcvr-borrowed-to-slice.rs:26:23: 26:24
                                         // mir::Constant
                                         // + span: ui/array-slice-vec/rcvr-borrowed-to-slice.rs:26:23: 26:24
                                         // + user_ty: UserType(5)
                                         // + literal: Const { ty: for<'b> fn(&'b isize) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_display::<isize>}, val: Value(<ZST>) }
    }

    bb14: {
        _61 = [move _62];                // scope 8 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _60 = &_61;                      // scope 8 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _59 = _60;                       // scope 8 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _58 = move _59 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 8 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _54 = Arguments::<'_>::new_v1(move _55, move _58) -> [return: bb15, unwind: bb32]; // scope 8 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // + user_ty: UserType(4)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb15: {
        _53 = _print(move _54) -> [return: bb16, unwind: bb32]; // scope 8 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:62
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:27
                                         // + literal: Const { ty: for<'a> fn(Arguments<'a>) {_print}, val: Value(<ZST>) }
    }

    bb16: {
        _66 = &_49;                      // scope 8 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _124 = const _;                  // scope 8 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // + literal: Const { ty: &isize, val: Unevaluated(main, [], Some(promoted[2])) }
        _67 = _124;                      // scope 8 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _65 = (move _66, move _67);      // scope 8 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _68 = (_65.0: &isize);           // scope 8 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _69 = (_65.1: &isize);           // scope 8 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _72 = (*_68);                    // scope 9 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
        _73 = const 6_isize;             // scope 9 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
        _71 = Eq(move _72, move _73);    // scope 9 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
        _70 = Not(move _71);             // scope 9 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
        switchInt(move _70) -> [0: bb18, otherwise: bb17]; // scope 9 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    }

    bb17: {
        _74 = const core::panicking::AssertKind::Eq; // scope 9 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _76 = const core::panicking::AssertKind::Eq; // scope 10 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _78 = _68;                       // scope 10 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _77 = _78;                       // scope 10 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _80 = _69;                       // scope 10 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _79 = _80;                       // scope 10 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _81 = Option::<Arguments<'_>>::None; // scope 10 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
        _75 = core::panicking::assert_failed::<isize, isize>(move _76, move _77, move _79, move _81) -> bb32; // scope 10 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:53
                                         // + literal: Const { ty: for<'a, 'b, 'c> fn(core::panicking::AssertKind, &'a isize, &'b isize, Option<Arguments<'c>>) -> ! {core::panicking::assert_failed::<isize, isize>}, val: Value(<ZST>) }
    }

    bb18: {
        _85 = const 24_usize;            // scope 12 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
        _86 = const 8_usize;             // scope 12 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
        _87 = alloc::alloc::exchange_malloc(move _85, move _86) -> [return: bb19, unwind: bb32]; // scope 12 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
                                         // + literal: Const { ty: unsafe fn(usize, usize) -> *mut u8 {alloc::alloc::exchange_malloc}, val: Value(<ZST>) }
    }

    bb19: {
        _88 = ShallowInitBox(move _87, [isize; 3]); // scope 8 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
        _130 = (((_88.0: std::ptr::Unique<[isize; 3]>).0: std::ptr::NonNull<[isize; 3]>).0: *const [isize; 3]); // scope 8 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:37: 52:46
        (*_130) = [const 1_isize, const 2_isize, const 3_isize]; // scope 8 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:37: 52:46
        _84 = move _88;                  // scope 8 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
        _83 = move _84 as std::boxed::Box<[isize]> (Pointer(Unsize)); // scope 8 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
        _82 = slice::<impl [isize]>::into_vec::<std::alloc::Global>(move _83) -> [return: bb20, unwind: bb32]; // scope 8 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:50:36: 53:10
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:50:36: 50:51
                                         // + user_ty: UserType(6)
                                         // + literal: Const { ty: fn(Box<[isize]>) -> Vec<isize> {slice::<impl [isize]>::into_vec::<std::alloc::Global>}, val: Value(<ZST>) }
    }

    bb20: {
        _92 = &_82;                      // scope 11 at ui/array-slice-vec/rcvr-borrowed-to-slice.rs:30:13: 30:21
        _91 = <Vec<isize> as Deref>::deref(move _92) -> [return: bb21, unwind: bb31]; // scope 11 at ui/array-slice-vec/rcvr-borrowed-to-slice.rs:30:13: 30:21
                                         // mir::Constant
                                         // + span: ui/array-slice-vec/rcvr-borrowed-to-slice.rs:30:13: 30:21
                                         // + literal: Const { ty: for<'a> fn(&'a Vec<isize>) -> &'a <Vec<isize> as Deref>::Target {<Vec<isize> as Deref>::deref}, val: Value(<ZST>) }
    }

    bb21: {
        _90 = _91;                       // scope 11 at ui/array-slice-vec/rcvr-borrowed-to-slice.rs:30:13: 30:21
        _89 = <&[isize] as sum>::sum_(move _90) -> [return: bb22, unwind: bb31]; // scope 11 at ui/array-slice-vec/rcvr-borrowed-to-slice.rs:30:13: 30:21
                                         // mir::Constant
                                         // + span: ui/array-slice-vec/rcvr-borrowed-to-slice.rs:30:15: 30:19
                                         // + literal: Const { ty: fn(&[isize]) -> isize {<&[isize] as sum>::sum_}, val: Value(<ZST>) }
    }

    bb22: {
        _123 = const _;                  // scope 13 at ui/array-slice-vec/rcvr-borrowed-to-slice.rs:31:14: 31:21
                                         // mir::Constant
                                         // + span: ui/array-slice-vec/rcvr-borrowed-to-slice.rs:31:14: 31:21
                                         // + literal: Const { ty: &[&str; 2], val: Unevaluated(main, [], Some(promoted[1])) }
        _97 = _123;                      // scope 13 at ui/array-slice-vec/rcvr-borrowed-to-slice.rs:31:14: 31:21
        _96 = _97;                       // scope 13 at ui/array-slice-vec/rcvr-borrowed-to-slice.rs:31:14: 31:21
        _95 = move _96 as &[&str] (Pointer(Unsize)); // scope 13 at ui/array-slice-vec/rcvr-borrowed-to-slice.rs:31:14: 31:21
        _104 = &_89;                     // scope 13 at ui/array-slice-vec/rcvr-borrowed-to-slice.rs:31:23: 31:24
        _103 = _104;                     // scope 13 at ui/array-slice-vec/rcvr-borrowed-to-slice.rs:31:23: 31:24
        _102 = core::fmt::ArgumentV1::<'_>::new_display::<isize>(move _103) -> [return: bb23, unwind: bb31]; // scope 13 at ui/array-slice-vec/rcvr-borrowed-to-slice.rs:31:23: 31:24
                                         // mir::Constant
                                         // + span: ui/array-slice-vec/rcvr-borrowed-to-slice.rs:31:23: 31:24
                                         // + user_ty: UserType(8)
                                         // + literal: Const { ty: for<'b> fn(&'b isize) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_display::<isize>}, val: Value(<ZST>) }
    }

    bb23: {
        _101 = [move _102];              // scope 13 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _100 = &_101;                    // scope 13 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _99 = _100;                      // scope 13 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _98 = move _99 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 13 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _94 = Arguments::<'_>::new_v1(move _95, move _98) -> [return: bb24, unwind: bb31]; // scope 13 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // + user_ty: UserType(7)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb24: {
        _93 = _print(move _94) -> [return: bb25, unwind: bb31]; // scope 13 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:62
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:27
                                         // + literal: Const { ty: for<'a> fn(Arguments<'a>) {_print}, val: Value(<ZST>) }
    }

    bb25: {
        _106 = &_89;                     // scope 13 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _122 = const _;                  // scope 13 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // + literal: Const { ty: &isize, val: Unevaluated(main, [], Some(promoted[0])) }
        _107 = _122;                     // scope 13 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _105 = (move _106, move _107);   // scope 13 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _108 = (_105.0: &isize);         // scope 13 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _109 = (_105.1: &isize);         // scope 13 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _112 = (*_108);                  // scope 14 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
        _113 = const 6_isize;            // scope 14 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
        _111 = Eq(move _112, move _113); // scope 14 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
        _110 = Not(move _111);           // scope 14 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
        switchInt(move _110) -> [0: bb27, otherwise: bb26]; // scope 14 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    }

    bb26: {
        _114 = const core::panicking::AssertKind::Eq; // scope 14 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _116 = const core::panicking::AssertKind::Eq; // scope 15 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _118 = _108;                     // scope 15 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _117 = _118;                     // scope 15 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _120 = _109;                     // scope 15 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _119 = _120;                     // scope 15 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _121 = Option::<Arguments<'_>>::None; // scope 15 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
        _115 = core::panicking::assert_failed::<isize, isize>(move _116, move _117, move _119, move _121) -> bb31; // scope 15 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:53
                                         // + literal: Const { ty: for<'a, 'b, 'c> fn(core::panicking::AssertKind, &'a isize, &'b isize, Option<Arguments<'c>>) -> ! {core::panicking::assert_failed::<isize, isize>}, val: Value(<ZST>) }
    }

    bb27: {
        drop(_82) -> [return: bb28, unwind: bb32]; // scope 8 at ui/array-slice-vec/rcvr-borrowed-to-slice.rs:33:1: 33:2
    }

    bb28: {
        drop(_42) -> [return: bb29, unwind: bb33]; // scope 3 at ui/array-slice-vec/rcvr-borrowed-to-slice.rs:33:1: 33:2
    }

    bb29: {
        drop(_1) -> bb30;                // scope 0 at ui/array-slice-vec/rcvr-borrowed-to-slice.rs:33:1: 33:2
    }

    bb30: {
        return;                          // scope 0 at ui/array-slice-vec/rcvr-borrowed-to-slice.rs:33:2: 33:2
    }

    bb31 (cleanup): {
        drop(_82) -> bb32;               // scope 8 at ui/array-slice-vec/rcvr-borrowed-to-slice.rs:33:1: 33:2
    }

    bb32 (cleanup): {
        drop(_42) -> bb33;               // scope 3 at ui/array-slice-vec/rcvr-borrowed-to-slice.rs:33:1: 33:2
    }

    bb33 (cleanup): {
        drop(_1) -> bb34;                // scope 0 at ui/array-slice-vec/rcvr-borrowed-to-slice.rs:33:1: 33:2
    }

    bb34 (cleanup): {
        resume;                          // scope 0 at ui/array-slice-vec/rcvr-borrowed-to-slice.rs:18:1: 33:2
    }
}

promoted[0] in main: &isize = {
    let mut _0: &isize;                  // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _1: isize;                   // in scope 0 at ui/array-slice-vec/rcvr-borrowed-to-slice.rs:32:19: 32:20

    bb0: {
        _1 = const 6_isize;              // scope 0 at ui/array-slice-vec/rcvr-borrowed-to-slice.rs:32:19: 32:20
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    }
}

promoted[1] in main: &[&str; 2] = {
    let mut _0: &[&str; 2];              // return place in scope 0 at ui/array-slice-vec/rcvr-borrowed-to-slice.rs:31:14: 31:21
    let mut _1: [&str; 2];               // in scope 0 at ui/array-slice-vec/rcvr-borrowed-to-slice.rs:31:14: 31:21

    bb0: {
        _1 = [const "y==", const "\n"];  // scope 0 at ui/array-slice-vec/rcvr-borrowed-to-slice.rs:31:14: 31:21
                                         // mir::Constant
                                         // + span: ui/array-slice-vec/rcvr-borrowed-to-slice.rs:31:14: 31:21
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
                                         // mir::Constant
                                         // + span: ui/array-slice-vec/rcvr-borrowed-to-slice.rs:31:14: 31:21
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at ui/array-slice-vec/rcvr-borrowed-to-slice.rs:31:14: 31:21
        return;                          // scope 0 at ui/array-slice-vec/rcvr-borrowed-to-slice.rs:31:14: 31:21
    }
}

promoted[2] in main: &isize = {
    let mut _0: &isize;                  // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _1: isize;                   // in scope 0 at ui/array-slice-vec/rcvr-borrowed-to-slice.rs:27:19: 27:20

    bb0: {
        _1 = const 6_isize;              // scope 0 at ui/array-slice-vec/rcvr-borrowed-to-slice.rs:27:19: 27:20
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    }
}

promoted[3] in main: &[&str; 2] = {
    let mut _0: &[&str; 2];              // return place in scope 0 at ui/array-slice-vec/rcvr-borrowed-to-slice.rs:26:14: 26:21
    let mut _1: [&str; 2];               // in scope 0 at ui/array-slice-vec/rcvr-borrowed-to-slice.rs:26:14: 26:21

    bb0: {
        _1 = [const "y==", const "\n"];  // scope 0 at ui/array-slice-vec/rcvr-borrowed-to-slice.rs:26:14: 26:21
                                         // mir::Constant
                                         // + span: ui/array-slice-vec/rcvr-borrowed-to-slice.rs:26:14: 26:21
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
                                         // mir::Constant
                                         // + span: ui/array-slice-vec/rcvr-borrowed-to-slice.rs:26:14: 26:21
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at ui/array-slice-vec/rcvr-borrowed-to-slice.rs:26:14: 26:21
        return;                          // scope 0 at ui/array-slice-vec/rcvr-borrowed-to-slice.rs:26:14: 26:21
    }
}

promoted[4] in main: &isize = {
    let mut _0: &isize;                  // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _1: isize;                   // in scope 0 at ui/array-slice-vec/rcvr-borrowed-to-slice.rs:22:19: 22:20

    bb0: {
        _1 = const 6_isize;              // scope 0 at ui/array-slice-vec/rcvr-borrowed-to-slice.rs:22:19: 22:20
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    }
}

promoted[5] in main: &[&str; 2] = {
    let mut _0: &[&str; 2];              // return place in scope 0 at ui/array-slice-vec/rcvr-borrowed-to-slice.rs:21:14: 21:21
    let mut _1: [&str; 2];               // in scope 0 at ui/array-slice-vec/rcvr-borrowed-to-slice.rs:21:14: 21:21

    bb0: {
        _1 = [const "y==", const "\n"];  // scope 0 at ui/array-slice-vec/rcvr-borrowed-to-slice.rs:21:14: 21:21
                                         // mir::Constant
                                         // + span: ui/array-slice-vec/rcvr-borrowed-to-slice.rs:21:14: 21:21
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
                                         // mir::Constant
                                         // + span: ui/array-slice-vec/rcvr-borrowed-to-slice.rs:21:14: 21:21
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at ui/array-slice-vec/rcvr-borrowed-to-slice.rs:21:14: 21:21
        return;                          // scope 0 at ui/array-slice-vec/rcvr-borrowed-to-slice.rs:21:14: 21:21
    }
}
