// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
const AA: [isize; 3] = {
    let mut _0: [isize; 3];              // return place in scope 0 at ui/array-slice-vec/check-static-slice.rs:7:11: 7:21

    bb0: {
        _0 = [const 1_isize, const 2_isize, const 3_isize]; // scope 0 at ui/array-slice-vec/check-static-slice.rs:7:24: 7:33
        return;                          // scope 0 at ui/array-slice-vec/check-static-slice.rs:7:1: 7:34
    }
}

AA::{constant#0}: usize = {
    let mut _0: usize;                   // return place in scope 0 at ui/array-slice-vec/check-static-slice.rs:7:19: 7:20

    bb0: {
        _0 = const 3_usize;              // scope 0 at ui/array-slice-vec/check-static-slice.rs:7:19: 7:20
        return;                          // scope 0 at ui/array-slice-vec/check-static-slice.rs:7:19: 7:20
    }
}

const AB: &[isize; 3] = {
    let mut _0: &[isize; 3];             // return place in scope 0 at ui/array-slice-vec/check-static-slice.rs:8:11: 8:30
    let _1: &[isize; 3];                 // in scope 0 at ui/array-slice-vec/check-static-slice.rs:8:33: 8:36
    let _2: [isize; 3];                  // in scope 0 at ui/array-slice-vec/check-static-slice.rs:8:34: 8:36
    let mut _3: &[isize; 3];             // in scope 0 at ui/array-slice-vec/check-static-slice.rs:8:33: 8:36

    bb0: {
        StorageLive(_1);                 // scope 0 at ui/array-slice-vec/check-static-slice.rs:8:33: 8:36
        _3 = const _;                    // scope 0 at ui/array-slice-vec/check-static-slice.rs:8:33: 8:36
                                         // mir::Constant
                                         // + span: ui/array-slice-vec/check-static-slice.rs:8:33: 8:36
                                         // + literal: Const { ty: &[isize; 3], val: Unevaluated(AB, [], Some(promoted[0])) }
        _1 = &(*_3);                     // scope 0 at ui/array-slice-vec/check-static-slice.rs:8:33: 8:36
        _0 = &(*_1);                     // scope 0 at ui/array-slice-vec/check-static-slice.rs:8:33: 8:36
        StorageDead(_1);                 // scope 0 at ui/array-slice-vec/check-static-slice.rs:8:35: 8:36
        return;                          // scope 0 at ui/array-slice-vec/check-static-slice.rs:8:1: 8:37
    }
}

promoted[0] in AB: &[isize; 3] = {
    let mut _0: &[isize; 3];             // return place in scope 0 at ui/array-slice-vec/check-static-slice.rs:8:33: 8:36
    let mut _1: [isize; 3];              // in scope 0 at ui/array-slice-vec/check-static-slice.rs:8:34: 8:36

    bb0: {
        _1 = const _;                    // scope 0 at ui/array-slice-vec/check-static-slice.rs:8:34: 8:36
        _0 = &_1;                        // scope 0 at ui/array-slice-vec/check-static-slice.rs:8:33: 8:36
        return;                          // scope 0 at ui/array-slice-vec/check-static-slice.rs:8:33: 8:36
    }
}

AB::{constant#0}: usize = {
    let mut _0: usize;                   // return place in scope 0 at ui/array-slice-vec/check-static-slice.rs:8:28: 8:29

    bb0: {
        _0 = const 3_usize;              // scope 0 at ui/array-slice-vec/check-static-slice.rs:8:28: 8:29
        return;                          // scope 0 at ui/array-slice-vec/check-static-slice.rs:8:28: 8:29
    }
}

const AC: &[isize] = {
    let mut _0: &[isize];                // return place in scope 0 at ui/array-slice-vec/check-static-slice.rs:9:11: 9:27
    let mut _1: &[isize; 3];             // in scope 0 at ui/array-slice-vec/check-static-slice.rs:9:30: 9:32
    let _2: &[isize; 3];                 // in scope 0 at ui/array-slice-vec/check-static-slice.rs:9:30: 9:32

    bb0: {
        StorageLive(_1);                 // scope 0 at ui/array-slice-vec/check-static-slice.rs:9:30: 9:32
        StorageLive(_2);                 // scope 0 at ui/array-slice-vec/check-static-slice.rs:9:30: 9:32
        _2 = const _;                    // scope 0 at ui/array-slice-vec/check-static-slice.rs:9:30: 9:32
                                         // mir::Constant
                                         // + span: ui/array-slice-vec/check-static-slice.rs:9:30: 9:32
                                         // + literal: Const { ty: &[isize; 3], val: Unevaluated(AB, [], None) }
        _1 = &(*_2);                     // scope 0 at ui/array-slice-vec/check-static-slice.rs:9:30: 9:32
        _0 = move _1 as &[isize] (Pointer(Unsize)); // scope 0 at ui/array-slice-vec/check-static-slice.rs:9:30: 9:32
        StorageDead(_2);                 // scope 0 at ui/array-slice-vec/check-static-slice.rs:9:31: 9:32
        StorageDead(_1);                 // scope 0 at ui/array-slice-vec/check-static-slice.rs:9:31: 9:32
        return;                          // scope 0 at ui/array-slice-vec/check-static-slice.rs:9:1: 9:33
    }
}

const AD: &[isize] = {
    let mut _0: &[isize];                // return place in scope 0 at ui/array-slice-vec/check-static-slice.rs:10:11: 10:27
    let mut _1: &[isize; 3];             // in scope 0 at ui/array-slice-vec/check-static-slice.rs:10:30: 10:33
    let _2: &[isize; 3];                 // in scope 0 at ui/array-slice-vec/check-static-slice.rs:10:30: 10:33
    let _3: [isize; 3];                  // in scope 0 at ui/array-slice-vec/check-static-slice.rs:10:31: 10:33
    let mut _4: &[isize; 3];             // in scope 0 at ui/array-slice-vec/check-static-slice.rs:10:30: 10:33

    bb0: {
        StorageLive(_1);                 // scope 0 at ui/array-slice-vec/check-static-slice.rs:10:30: 10:33
        StorageLive(_2);                 // scope 0 at ui/array-slice-vec/check-static-slice.rs:10:30: 10:33
        _4 = const _;                    // scope 0 at ui/array-slice-vec/check-static-slice.rs:10:30: 10:33
                                         // mir::Constant
                                         // + span: ui/array-slice-vec/check-static-slice.rs:10:30: 10:33
                                         // + literal: Const { ty: &[isize; 3], val: Unevaluated(AD, [], Some(promoted[0])) }
        _2 = &(*_4);                     // scope 0 at ui/array-slice-vec/check-static-slice.rs:10:30: 10:33
        _1 = &(*_2);                     // scope 0 at ui/array-slice-vec/check-static-slice.rs:10:30: 10:33
        _0 = move _1 as &[isize] (Pointer(Unsize)); // scope 0 at ui/array-slice-vec/check-static-slice.rs:10:30: 10:33
        StorageDead(_2);                 // scope 0 at ui/array-slice-vec/check-static-slice.rs:10:32: 10:33
        StorageDead(_1);                 // scope 0 at ui/array-slice-vec/check-static-slice.rs:10:32: 10:33
        return;                          // scope 0 at ui/array-slice-vec/check-static-slice.rs:10:1: 10:34
    }
}

promoted[0] in AD: &[isize; 3] = {
    let mut _0: &[isize; 3];             // return place in scope 0 at ui/array-slice-vec/check-static-slice.rs:10:30: 10:33
    let mut _1: [isize; 3];              // in scope 0 at ui/array-slice-vec/check-static-slice.rs:10:31: 10:33

    bb0: {
        _1 = const _;                    // scope 0 at ui/array-slice-vec/check-static-slice.rs:10:31: 10:33
        _0 = &_1;                        // scope 0 at ui/array-slice-vec/check-static-slice.rs:10:30: 10:33
        return;                          // scope 0 at ui/array-slice-vec/check-static-slice.rs:10:30: 10:33
    }
}

const AE: &[isize; 3] = {
    let mut _0: &[isize; 3];             // return place in scope 0 at ui/array-slice-vec/check-static-slice.rs:11:11: 11:30
    let _1: &[isize; 3];                 // in scope 0 at ui/array-slice-vec/check-static-slice.rs:11:33: 11:43
    let _2: [isize; 3];                  // in scope 0 at ui/array-slice-vec/check-static-slice.rs:11:34: 11:43
    let mut _3: &[isize; 3];             // in scope 0 at ui/array-slice-vec/check-static-slice.rs:11:33: 11:43

    bb0: {
        StorageLive(_1);                 // scope 0 at ui/array-slice-vec/check-static-slice.rs:11:33: 11:43
        _3 = const _;                    // scope 0 at ui/array-slice-vec/check-static-slice.rs:11:33: 11:43
                                         // mir::Constant
                                         // + span: ui/array-slice-vec/check-static-slice.rs:11:33: 11:43
                                         // + literal: Const { ty: &[isize; 3], val: Unevaluated(AE, [], Some(promoted[0])) }
        _1 = &(*_3);                     // scope 0 at ui/array-slice-vec/check-static-slice.rs:11:33: 11:43
        _0 = &(*_1);                     // scope 0 at ui/array-slice-vec/check-static-slice.rs:11:33: 11:43
        StorageDead(_1);                 // scope 0 at ui/array-slice-vec/check-static-slice.rs:11:42: 11:43
        return;                          // scope 0 at ui/array-slice-vec/check-static-slice.rs:11:1: 11:44
    }
}

promoted[0] in AE: &[isize; 3] = {
    let mut _0: &[isize; 3];             // return place in scope 0 at ui/array-slice-vec/check-static-slice.rs:11:33: 11:43
    let mut _1: [isize; 3];              // in scope 0 at ui/array-slice-vec/check-static-slice.rs:11:34: 11:43

    bb0: {
        _1 = [const 1_isize, const 2_isize, const 3_isize]; // scope 0 at ui/array-slice-vec/check-static-slice.rs:11:34: 11:43
        _0 = &_1;                        // scope 0 at ui/array-slice-vec/check-static-slice.rs:11:33: 11:43
        return;                          // scope 0 at ui/array-slice-vec/check-static-slice.rs:11:33: 11:43
    }
}

AE::{constant#0}: usize = {
    let mut _0: usize;                   // return place in scope 0 at ui/array-slice-vec/check-static-slice.rs:11:28: 11:29

    bb0: {
        _0 = const 3_usize;              // scope 0 at ui/array-slice-vec/check-static-slice.rs:11:28: 11:29
        return;                          // scope 0 at ui/array-slice-vec/check-static-slice.rs:11:28: 11:29
    }
}

const AF: &[isize] = {
    let mut _0: &[isize];                // return place in scope 0 at ui/array-slice-vec/check-static-slice.rs:12:11: 12:27
    let mut _1: &[isize; 3];             // in scope 0 at ui/array-slice-vec/check-static-slice.rs:12:30: 12:40
    let _2: &[isize; 3];                 // in scope 0 at ui/array-slice-vec/check-static-slice.rs:12:30: 12:40
    let _3: [isize; 3];                  // in scope 0 at ui/array-slice-vec/check-static-slice.rs:12:31: 12:40
    let mut _4: &[isize; 3];             // in scope 0 at ui/array-slice-vec/check-static-slice.rs:12:30: 12:40

    bb0: {
        StorageLive(_1);                 // scope 0 at ui/array-slice-vec/check-static-slice.rs:12:30: 12:40
        StorageLive(_2);                 // scope 0 at ui/array-slice-vec/check-static-slice.rs:12:30: 12:40
        _4 = const _;                    // scope 0 at ui/array-slice-vec/check-static-slice.rs:12:30: 12:40
                                         // mir::Constant
                                         // + span: ui/array-slice-vec/check-static-slice.rs:12:30: 12:40
                                         // + literal: Const { ty: &[isize; 3], val: Unevaluated(AF, [], Some(promoted[0])) }
        _2 = &(*_4);                     // scope 0 at ui/array-slice-vec/check-static-slice.rs:12:30: 12:40
        _1 = &(*_2);                     // scope 0 at ui/array-slice-vec/check-static-slice.rs:12:30: 12:40
        _0 = move _1 as &[isize] (Pointer(Unsize)); // scope 0 at ui/array-slice-vec/check-static-slice.rs:12:30: 12:40
        StorageDead(_2);                 // scope 0 at ui/array-slice-vec/check-static-slice.rs:12:39: 12:40
        StorageDead(_1);                 // scope 0 at ui/array-slice-vec/check-static-slice.rs:12:39: 12:40
        return;                          // scope 0 at ui/array-slice-vec/check-static-slice.rs:12:1: 12:41
    }
}

promoted[0] in AF: &[isize; 3] = {
    let mut _0: &[isize; 3];             // return place in scope 0 at ui/array-slice-vec/check-static-slice.rs:12:30: 12:40
    let mut _1: [isize; 3];              // in scope 0 at ui/array-slice-vec/check-static-slice.rs:12:31: 12:40

    bb0: {
        _1 = [const 1_isize, const 2_isize, const 3_isize]; // scope 0 at ui/array-slice-vec/check-static-slice.rs:12:31: 12:40
        _0 = &_1;                        // scope 0 at ui/array-slice-vec/check-static-slice.rs:12:30: 12:40
        return;                          // scope 0 at ui/array-slice-vec/check-static-slice.rs:12:30: 12:40
    }
}

static CA: isize = {
    let mut _0: isize;                   // return place in scope 0 at ui/array-slice-vec/check-static-slice.rs:14:12: 14:17
    let mut _1: [isize; 3];              // in scope 0 at ui/array-slice-vec/check-static-slice.rs:14:20: 14:22
    let _2: usize;                       // in scope 0 at ui/array-slice-vec/check-static-slice.rs:14:23: 14:24
    let mut _3: usize;                   // in scope 0 at ui/array-slice-vec/check-static-slice.rs:14:20: 14:25
    let mut _4: bool;                    // in scope 0 at ui/array-slice-vec/check-static-slice.rs:14:20: 14:25

    bb0: {
        StorageLive(_1);                 // scope 0 at ui/array-slice-vec/check-static-slice.rs:14:20: 14:22
        _1 = const _;                    // scope 0 at ui/array-slice-vec/check-static-slice.rs:14:20: 14:22
        StorageLive(_2);                 // scope 0 at ui/array-slice-vec/check-static-slice.rs:14:23: 14:24
        _2 = const 0_usize;              // scope 0 at ui/array-slice-vec/check-static-slice.rs:14:23: 14:24
        _3 = Len(_1);                    // scope 0 at ui/array-slice-vec/check-static-slice.rs:14:20: 14:25
        _4 = Lt(_2, _3);                 // scope 0 at ui/array-slice-vec/check-static-slice.rs:14:20: 14:25
        assert(move _4, "index out of bounds: the length is {} but the index is {}", move _3, _2) -> bb1; // scope 0 at ui/array-slice-vec/check-static-slice.rs:14:20: 14:25
    }

    bb1: {
        _0 = _1[_2];                     // scope 0 at ui/array-slice-vec/check-static-slice.rs:14:20: 14:25
        StorageDead(_2);                 // scope 0 at ui/array-slice-vec/check-static-slice.rs:14:24: 14:25
        StorageDead(_1);                 // scope 0 at ui/array-slice-vec/check-static-slice.rs:14:24: 14:25
        return;                          // scope 0 at ui/array-slice-vec/check-static-slice.rs:14:1: 14:26
    }
}

static CB: isize = {
    let mut _0: isize;                   // return place in scope 0 at ui/array-slice-vec/check-static-slice.rs:15:12: 15:17
    let mut _1: &[isize; 3];             // in scope 0 at ui/array-slice-vec/check-static-slice.rs:15:20: 15:22
    let _2: usize;                       // in scope 0 at ui/array-slice-vec/check-static-slice.rs:15:23: 15:24
    let mut _3: usize;                   // in scope 0 at ui/array-slice-vec/check-static-slice.rs:15:20: 15:25
    let mut _4: bool;                    // in scope 0 at ui/array-slice-vec/check-static-slice.rs:15:20: 15:25

    bb0: {
        StorageLive(_1);                 // scope 0 at ui/array-slice-vec/check-static-slice.rs:15:20: 15:22
        _1 = const _;                    // scope 0 at ui/array-slice-vec/check-static-slice.rs:15:20: 15:22
                                         // mir::Constant
                                         // + span: ui/array-slice-vec/check-static-slice.rs:15:20: 15:22
                                         // + literal: Const { ty: &[isize; 3], val: Unevaluated(AB, [], None) }
        StorageLive(_2);                 // scope 0 at ui/array-slice-vec/check-static-slice.rs:15:23: 15:24
        _2 = const 1_usize;              // scope 0 at ui/array-slice-vec/check-static-slice.rs:15:23: 15:24
        _3 = Len((*_1));                 // scope 0 at ui/array-slice-vec/check-static-slice.rs:15:20: 15:25
        _4 = Lt(_2, _3);                 // scope 0 at ui/array-slice-vec/check-static-slice.rs:15:20: 15:25
        assert(move _4, "index out of bounds: the length is {} but the index is {}", move _3, _2) -> bb1; // scope 0 at ui/array-slice-vec/check-static-slice.rs:15:20: 15:25
    }

    bb1: {
        _0 = (*_1)[_2];                  // scope 0 at ui/array-slice-vec/check-static-slice.rs:15:20: 15:25
        StorageDead(_2);                 // scope 0 at ui/array-slice-vec/check-static-slice.rs:15:24: 15:25
        StorageDead(_1);                 // scope 0 at ui/array-slice-vec/check-static-slice.rs:15:24: 15:25
        return;                          // scope 0 at ui/array-slice-vec/check-static-slice.rs:15:1: 15:26
    }
}

static CC: isize = {
    let mut _0: isize;                   // return place in scope 0 at ui/array-slice-vec/check-static-slice.rs:16:12: 16:17
    let mut _1: &[isize];                // in scope 0 at ui/array-slice-vec/check-static-slice.rs:16:20: 16:22
    let _2: usize;                       // in scope 0 at ui/array-slice-vec/check-static-slice.rs:16:23: 16:24
    let mut _3: usize;                   // in scope 0 at ui/array-slice-vec/check-static-slice.rs:16:20: 16:25
    let mut _4: bool;                    // in scope 0 at ui/array-slice-vec/check-static-slice.rs:16:20: 16:25

    bb0: {
        StorageLive(_1);                 // scope 0 at ui/array-slice-vec/check-static-slice.rs:16:20: 16:22
        _1 = const _;                    // scope 0 at ui/array-slice-vec/check-static-slice.rs:16:20: 16:22
                                         // mir::Constant
                                         // + span: ui/array-slice-vec/check-static-slice.rs:16:20: 16:22
                                         // + literal: Const { ty: &[isize], val: Unevaluated(AC, [], None) }
        StorageLive(_2);                 // scope 0 at ui/array-slice-vec/check-static-slice.rs:16:23: 16:24
        _2 = const 2_usize;              // scope 0 at ui/array-slice-vec/check-static-slice.rs:16:23: 16:24
        _3 = Len((*_1));                 // scope 0 at ui/array-slice-vec/check-static-slice.rs:16:20: 16:25
        _4 = Lt(_2, _3);                 // scope 0 at ui/array-slice-vec/check-static-slice.rs:16:20: 16:25
        assert(move _4, "index out of bounds: the length is {} but the index is {}", move _3, _2) -> bb1; // scope 0 at ui/array-slice-vec/check-static-slice.rs:16:20: 16:25
    }

    bb1: {
        _0 = (*_1)[_2];                  // scope 0 at ui/array-slice-vec/check-static-slice.rs:16:20: 16:25
        StorageDead(_2);                 // scope 0 at ui/array-slice-vec/check-static-slice.rs:16:24: 16:25
        StorageDead(_1);                 // scope 0 at ui/array-slice-vec/check-static-slice.rs:16:24: 16:25
        return;                          // scope 0 at ui/array-slice-vec/check-static-slice.rs:16:1: 16:26
    }
}

static CD: isize = {
    let mut _0: isize;                   // return place in scope 0 at ui/array-slice-vec/check-static-slice.rs:17:12: 17:17
    let mut _1: &[isize];                // in scope 0 at ui/array-slice-vec/check-static-slice.rs:17:20: 17:22
    let _2: usize;                       // in scope 0 at ui/array-slice-vec/check-static-slice.rs:17:23: 17:24
    let mut _3: usize;                   // in scope 0 at ui/array-slice-vec/check-static-slice.rs:17:20: 17:25
    let mut _4: bool;                    // in scope 0 at ui/array-slice-vec/check-static-slice.rs:17:20: 17:25

    bb0: {
        StorageLive(_1);                 // scope 0 at ui/array-slice-vec/check-static-slice.rs:17:20: 17:22
        _1 = const _;                    // scope 0 at ui/array-slice-vec/check-static-slice.rs:17:20: 17:22
                                         // mir::Constant
                                         // + span: ui/array-slice-vec/check-static-slice.rs:17:20: 17:22
                                         // + literal: Const { ty: &[isize], val: Unevaluated(AD, [], None) }
        StorageLive(_2);                 // scope 0 at ui/array-slice-vec/check-static-slice.rs:17:23: 17:24
        _2 = const 0_usize;              // scope 0 at ui/array-slice-vec/check-static-slice.rs:17:23: 17:24
        _3 = Len((*_1));                 // scope 0 at ui/array-slice-vec/check-static-slice.rs:17:20: 17:25
        _4 = Lt(_2, _3);                 // scope 0 at ui/array-slice-vec/check-static-slice.rs:17:20: 17:25
        assert(move _4, "index out of bounds: the length is {} but the index is {}", move _3, _2) -> bb1; // scope 0 at ui/array-slice-vec/check-static-slice.rs:17:20: 17:25
    }

    bb1: {
        _0 = (*_1)[_2];                  // scope 0 at ui/array-slice-vec/check-static-slice.rs:17:20: 17:25
        StorageDead(_2);                 // scope 0 at ui/array-slice-vec/check-static-slice.rs:17:24: 17:25
        StorageDead(_1);                 // scope 0 at ui/array-slice-vec/check-static-slice.rs:17:24: 17:25
        return;                          // scope 0 at ui/array-slice-vec/check-static-slice.rs:17:1: 17:26
    }
}

static CE: isize = {
    let mut _0: isize;                   // return place in scope 0 at ui/array-slice-vec/check-static-slice.rs:18:12: 18:17
    let mut _1: &[isize; 3];             // in scope 0 at ui/array-slice-vec/check-static-slice.rs:18:20: 18:22
    let _2: usize;                       // in scope 0 at ui/array-slice-vec/check-static-slice.rs:18:23: 18:24
    let mut _3: usize;                   // in scope 0 at ui/array-slice-vec/check-static-slice.rs:18:20: 18:25
    let mut _4: bool;                    // in scope 0 at ui/array-slice-vec/check-static-slice.rs:18:20: 18:25

    bb0: {
        StorageLive(_1);                 // scope 0 at ui/array-slice-vec/check-static-slice.rs:18:20: 18:22
        _1 = const _;                    // scope 0 at ui/array-slice-vec/check-static-slice.rs:18:20: 18:22
                                         // mir::Constant
                                         // + span: ui/array-slice-vec/check-static-slice.rs:18:20: 18:22
                                         // + literal: Const { ty: &[isize; 3], val: Unevaluated(AE, [], None) }
        StorageLive(_2);                 // scope 0 at ui/array-slice-vec/check-static-slice.rs:18:23: 18:24
        _2 = const 1_usize;              // scope 0 at ui/array-slice-vec/check-static-slice.rs:18:23: 18:24
        _3 = Len((*_1));                 // scope 0 at ui/array-slice-vec/check-static-slice.rs:18:20: 18:25
        _4 = Lt(_2, _3);                 // scope 0 at ui/array-slice-vec/check-static-slice.rs:18:20: 18:25
        assert(move _4, "index out of bounds: the length is {} but the index is {}", move _3, _2) -> bb1; // scope 0 at ui/array-slice-vec/check-static-slice.rs:18:20: 18:25
    }

    bb1: {
        _0 = (*_1)[_2];                  // scope 0 at ui/array-slice-vec/check-static-slice.rs:18:20: 18:25
        StorageDead(_2);                 // scope 0 at ui/array-slice-vec/check-static-slice.rs:18:24: 18:25
        StorageDead(_1);                 // scope 0 at ui/array-slice-vec/check-static-slice.rs:18:24: 18:25
        return;                          // scope 0 at ui/array-slice-vec/check-static-slice.rs:18:1: 18:26
    }
}

static CF: isize = {
    let mut _0: isize;                   // return place in scope 0 at ui/array-slice-vec/check-static-slice.rs:19:12: 19:17
    let mut _1: &[isize];                // in scope 0 at ui/array-slice-vec/check-static-slice.rs:19:20: 19:22
    let _2: usize;                       // in scope 0 at ui/array-slice-vec/check-static-slice.rs:19:23: 19:24
    let mut _3: usize;                   // in scope 0 at ui/array-slice-vec/check-static-slice.rs:19:20: 19:25
    let mut _4: bool;                    // in scope 0 at ui/array-slice-vec/check-static-slice.rs:19:20: 19:25

    bb0: {
        StorageLive(_1);                 // scope 0 at ui/array-slice-vec/check-static-slice.rs:19:20: 19:22
        _1 = const _;                    // scope 0 at ui/array-slice-vec/check-static-slice.rs:19:20: 19:22
                                         // mir::Constant
                                         // + span: ui/array-slice-vec/check-static-slice.rs:19:20: 19:22
                                         // + literal: Const { ty: &[isize], val: Unevaluated(AF, [], None) }
        StorageLive(_2);                 // scope 0 at ui/array-slice-vec/check-static-slice.rs:19:23: 19:24
        _2 = const 2_usize;              // scope 0 at ui/array-slice-vec/check-static-slice.rs:19:23: 19:24
        _3 = Len((*_1));                 // scope 0 at ui/array-slice-vec/check-static-slice.rs:19:20: 19:25
        _4 = Lt(_2, _3);                 // scope 0 at ui/array-slice-vec/check-static-slice.rs:19:20: 19:25
        assert(move _4, "index out of bounds: the length is {} but the index is {}", move _3, _2) -> bb1; // scope 0 at ui/array-slice-vec/check-static-slice.rs:19:20: 19:25
    }

    bb1: {
        _0 = (*_1)[_2];                  // scope 0 at ui/array-slice-vec/check-static-slice.rs:19:20: 19:25
        StorageDead(_2);                 // scope 0 at ui/array-slice-vec/check-static-slice.rs:19:24: 19:25
        StorageDead(_1);                 // scope 0 at ui/array-slice-vec/check-static-slice.rs:19:24: 19:25
        return;                          // scope 0 at ui/array-slice-vec/check-static-slice.rs:19:1: 19:26
    }
}

static AG: &isize = {
    let mut _0: &isize;                  // return place in scope 0 at ui/array-slice-vec/check-static-slice.rs:21:12: 21:26
    let _1: &isize;                      // in scope 0 at ui/array-slice-vec/check-static-slice.rs:21:29: 21:35
    let _2: [isize; 3];                  // in scope 0 at ui/array-slice-vec/check-static-slice.rs:21:30: 21:32
    let _3: usize;                       // in scope 0 at ui/array-slice-vec/check-static-slice.rs:21:33: 21:34
    let mut _4: usize;                   // in scope 0 at ui/array-slice-vec/check-static-slice.rs:21:30: 21:35
    let mut _5: bool;                    // in scope 0 at ui/array-slice-vec/check-static-slice.rs:21:30: 21:35
    let mut _6: &[isize; 3];             // in scope 0 at ui/array-slice-vec/check-static-slice.rs:21:29: 21:35

    bb0: {
        StorageLive(_1);                 // scope 0 at ui/array-slice-vec/check-static-slice.rs:21:29: 21:35
        StorageLive(_2);                 // scope 0 at ui/array-slice-vec/check-static-slice.rs:21:30: 21:32
        _2 = const _;                    // scope 0 at ui/array-slice-vec/check-static-slice.rs:21:30: 21:32
        StorageLive(_3);                 // scope 0 at ui/array-slice-vec/check-static-slice.rs:21:33: 21:34
        _3 = const 2_usize;              // scope 0 at ui/array-slice-vec/check-static-slice.rs:21:33: 21:34
        _4 = Len(_2);                    // scope 0 at ui/array-slice-vec/check-static-slice.rs:21:30: 21:35
        _5 = Lt(_3, _4);                 // scope 0 at ui/array-slice-vec/check-static-slice.rs:21:30: 21:35
        assert(move _5, "index out of bounds: the length is {} but the index is {}", move _4, _3) -> bb1; // scope 0 at ui/array-slice-vec/check-static-slice.rs:21:30: 21:35
    }

    bb1: {
        _6 = const _;                    // scope 0 at ui/array-slice-vec/check-static-slice.rs:21:29: 21:35
                                         // mir::Constant
                                         // + span: ui/array-slice-vec/check-static-slice.rs:21:29: 21:35
                                         // + literal: Const { ty: &[isize; 3], val: Unevaluated(AG, [], Some(promoted[0])) }
        _1 = &(*_6)[_3];                 // scope 0 at ui/array-slice-vec/check-static-slice.rs:21:29: 21:35
        _0 = &(*_1);                     // scope 0 at ui/array-slice-vec/check-static-slice.rs:21:29: 21:35
        StorageDead(_1);                 // scope 0 at ui/array-slice-vec/check-static-slice.rs:21:34: 21:35
        return;                          // scope 0 at ui/array-slice-vec/check-static-slice.rs:21:1: 21:36
    }
}

promoted[0] in AG: &[isize; 3] = {
    let mut _0: &[isize; 3];             // return place in scope 0 at ui/array-slice-vec/check-static-slice.rs:21:29: 21:35
    let mut _1: [isize; 3];              // in scope 0 at ui/array-slice-vec/check-static-slice.rs:21:30: 21:32

    bb0: {
        _1 = const _;                    // scope 0 at ui/array-slice-vec/check-static-slice.rs:21:30: 21:32
        _0 = &_1;                        // scope 0 at ui/array-slice-vec/check-static-slice.rs:21:29: 21:35
        return;                          // scope 0 at ui/array-slice-vec/check-static-slice.rs:21:29: 21:35
    }
}

fn main() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/array-slice-vec/check-static-slice.rs:23:12: 23:12
    let _1: &[isize];                    // in scope 0 at ui/array-slice-vec/check-static-slice.rs:24:9: 24:10
    let mut _2: &[isize; 3];             // in scope 0 at ui/array-slice-vec/check-static-slice.rs:24:23: 24:33
    let _3: &[isize; 3];                 // in scope 0 at ui/array-slice-vec/check-static-slice.rs:24:23: 24:33
    let mut _4: (&&[isize], &&[isize]);  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _5: &&[isize];               // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let mut _6: &&[isize];               // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _9: bool;                    // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    let mut _10: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
    let mut _11: &&[isize];              // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
    let mut _12: &&[isize];              // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
    let _14: !;                          // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
    let mut _15: core::panicking::AssertKind; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
    let mut _16: &&[isize];              // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let _17: &&[isize];                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let mut _18: &&[isize];              // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let _19: &&[isize];                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let mut _20: std::option::Option<std::fmt::Arguments<'_>>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
    let mut _21: (&&[isize], &&[isize]); // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _22: &&[isize];              // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let mut _23: &&[isize];              // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _26: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    let mut _27: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
    let mut _28: &&[isize];              // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
    let mut _29: &&[isize];              // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
    let _31: !;                          // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
    let mut _32: core::panicking::AssertKind; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
    let mut _33: &&[isize];              // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let _34: &&[isize];                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let mut _35: &&[isize];              // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let _36: &&[isize];                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let mut _37: std::option::Option<std::fmt::Arguments<'_>>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
    let mut _38: (&&[isize], &&[isize]); // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _39: &&[isize];              // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let mut _40: &&[isize];              // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _43: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    let mut _44: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
    let mut _45: &&[isize];              // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
    let mut _46: &&[isize];              // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
    let _48: !;                          // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
    let mut _49: core::panicking::AssertKind; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
    let mut _50: &&[isize];              // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let _51: &&[isize];                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let mut _52: &&[isize];              // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let _53: &&[isize];                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let mut _54: std::option::Option<std::fmt::Arguments<'_>>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
    let mut _55: (&isize, &isize);       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _56: &isize;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let _57: &&isize;                    // in scope 0 at ui/array-slice-vec/check-static-slice.rs:28:17: 28:19
    let mut _58: &isize;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _62: (&isize, &isize);       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _63: &isize;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let _64: &isize;                     // in scope 0 at ui/array-slice-vec/check-static-slice.rs:30:16: 30:18
    let mut _65: &isize;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _69: (&isize, &isize);       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _70: &isize;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let _71: &isize;                     // in scope 0 at ui/array-slice-vec/check-static-slice.rs:31:16: 31:18
    let mut _72: &isize;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _76: (&isize, &isize);       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _77: &isize;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let _78: &isize;                     // in scope 0 at ui/array-slice-vec/check-static-slice.rs:32:16: 32:18
    let mut _79: &isize;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _83: (&isize, &isize);       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _84: &isize;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let _85: &isize;                     // in scope 0 at ui/array-slice-vec/check-static-slice.rs:33:16: 33:18
    let mut _86: &isize;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _90: (&isize, &isize);       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _91: &isize;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let _92: &isize;                     // in scope 0 at ui/array-slice-vec/check-static-slice.rs:34:16: 34:18
    let mut _93: &isize;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _97: (&isize, &isize);       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _98: &isize;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let _99: &isize;                     // in scope 0 at ui/array-slice-vec/check-static-slice.rs:35:16: 35:18
    let mut _100: &isize;                // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _114: &[isize; 3];           // in scope 0 at ui/array-slice-vec/check-static-slice.rs:24:23: 24:33
    let mut _115: &isize;                // in scope 0 at ui/array-slice-vec/check-static-slice.rs:28:17: 28:19
    scope 1 {
        debug b => _1;                   // in scope 1 at ui/array-slice-vec/check-static-slice.rs:24:9: 24:10
        let _7: &&[isize];               // in scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        let _8: &&[isize];               // in scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        let _24: &&[isize];              // in scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        let _25: &&[isize];              // in scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        let _41: &&[isize];              // in scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        let _42: &&[isize];              // in scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        let _59: &isize;                 // in scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        let _60: &isize;                 // in scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        let _66: &isize;                 // in scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        let _67: &isize;                 // in scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        let _73: &isize;                 // in scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        let _74: &isize;                 // in scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        let _80: &isize;                 // in scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        let _81: &isize;                 // in scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        let _87: &isize;                 // in scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        let _88: &isize;                 // in scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        let _94: &isize;                 // in scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        let _95: &isize;                 // in scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        let _101: &isize;                // in scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        let _102: &isize;                // in scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        let mut _104: &isize;            // in scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        let mut _105: &isize;            // in scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        let mut _106: &isize;            // in scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        let mut _107: &isize;            // in scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        let mut _108: &isize;            // in scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        let mut _109: &isize;            // in scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        let mut _110: &isize;            // in scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        let mut _111: &&[isize];         // in scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        let mut _112: &&[isize];         // in scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        let mut _113: &&[isize];         // in scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        scope 2 {
            debug left_val => _7;        // in scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
            debug right_val => _8;       // in scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
            let _13: core::panicking::AssertKind; // in scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
            scope 3 {
                debug kind => _13;       // in scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
            }
        }
        scope 4 {
            debug left_val => _24;       // in scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
            debug right_val => _25;      // in scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
            let _30: core::panicking::AssertKind; // in scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
            scope 5 {
                debug kind => _30;       // in scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
            }
        }
        scope 6 {
            debug left_val => _41;       // in scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
            debug right_val => _42;      // in scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
            let _47: core::panicking::AssertKind; // in scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
            scope 7 {
                debug kind => _47;       // in scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
            }
        }
        scope 8 {
            debug left_val => _59;       // in scope 8 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
            debug right_val => _60;      // in scope 8 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
            let _61: core::panicking::AssertKind; // in scope 8 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
            scope 9 {
                debug kind => _61;       // in scope 9 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
            }
        }
        scope 10 {
            debug left_val => _66;       // in scope 10 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
            debug right_val => _67;      // in scope 10 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
            let _68: core::panicking::AssertKind; // in scope 10 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
            scope 11 {
                debug kind => _68;       // in scope 11 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
            }
        }
        scope 12 {
            debug left_val => _73;       // in scope 12 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
            debug right_val => _74;      // in scope 12 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
            let _75: core::panicking::AssertKind; // in scope 12 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
            scope 13 {
                debug kind => _75;       // in scope 13 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
            }
        }
        scope 14 {
            debug left_val => _80;       // in scope 14 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
            debug right_val => _81;      // in scope 14 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
            let _82: core::panicking::AssertKind; // in scope 14 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
            scope 15 {
                debug kind => _82;       // in scope 15 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
            }
        }
        scope 16 {
            debug left_val => _87;       // in scope 16 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
            debug right_val => _88;      // in scope 16 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
            let _89: core::panicking::AssertKind; // in scope 16 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
            scope 17 {
                debug kind => _89;       // in scope 17 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
            }
        }
        scope 18 {
            debug left_val => _94;       // in scope 18 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
            debug right_val => _95;      // in scope 18 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
            let _96: core::panicking::AssertKind; // in scope 18 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
            scope 19 {
                debug kind => _96;       // in scope 19 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
            }
        }
        scope 20 {
            debug left_val => _101;      // in scope 20 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
            debug right_val => _102;     // in scope 20 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
            let _103: core::panicking::AssertKind; // in scope 20 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
            scope 21 {
                debug kind => _103;      // in scope 21 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
            }
        }
    }

    bb0: {
        _114 = const _;                  // scope 0 at ui/array-slice-vec/check-static-slice.rs:24:23: 24:33
                                         // mir::Constant
                                         // + span: ui/array-slice-vec/check-static-slice.rs:24:23: 24:33
                                         // + literal: Const { ty: &[isize; 3], val: Unevaluated(main, [], Some(promoted[10])) }
        _3 = _114;                       // scope 0 at ui/array-slice-vec/check-static-slice.rs:24:23: 24:33
        _2 = _3;                         // scope 0 at ui/array-slice-vec/check-static-slice.rs:24:23: 24:33
        _1 = move _2 as &[isize] (Pointer(Unsize)); // scope 0 at ui/array-slice-vec/check-static-slice.rs:24:23: 24:33
        _113 = const _;                  // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
                                         // + literal: Const { ty: &&[isize], val: Unevaluated(main, [], Some(promoted[9])) }
        _5 = _113;                       // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _6 = &_1;                        // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _4 = (move _5, move _6);         // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _7 = (_4.0: &&[isize]);          // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _8 = (_4.1: &&[isize]);          // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _11 = _7;                        // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
        _12 = _8;                        // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
        _10 = <&[isize] as PartialEq>::eq(move _11, move _12) -> bb1; // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a &[isize], &'b &[isize]) -> bool {<&[isize] as PartialEq>::eq}, val: Value(<ZST>) }
    }

    bb1: {
        _9 = Not(move _10);              // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
        switchInt(move _9) -> [0: bb3, otherwise: bb2]; // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    }

    bb2: {
        _13 = const core::panicking::AssertKind::Eq; // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _15 = const core::panicking::AssertKind::Eq; // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _17 = _7;                        // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _16 = _17;                       // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _19 = _8;                        // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _18 = _19;                       // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _20 = Option::<Arguments<'_>>::None; // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
        _14 = core::panicking::assert_failed::<&[isize], &[isize]>(move _15, move _16, move _18, move _20); // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:53
                                         // + literal: Const { ty: for<'a, 'b, 'c> fn(core::panicking::AssertKind, &'a &[isize], &'b &[isize], Option<Arguments<'c>>) -> ! {core::panicking::assert_failed::<&[isize], &[isize]>}, val: Value(<ZST>) }
    }

    bb3: {
        _112 = const _;                  // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
                                         // + literal: Const { ty: &&[isize], val: Unevaluated(main, [], Some(promoted[8])) }
        _22 = _112;                      // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _23 = &_1;                       // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _21 = (move _22, move _23);      // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _24 = (_21.0: &&[isize]);        // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _25 = (_21.1: &&[isize]);        // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _28 = _24;                       // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
        _29 = _25;                       // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
        _27 = <&[isize] as PartialEq>::eq(move _28, move _29) -> bb4; // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a &[isize], &'b &[isize]) -> bool {<&[isize] as PartialEq>::eq}, val: Value(<ZST>) }
    }

    bb4: {
        _26 = Not(move _27);             // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
        switchInt(move _26) -> [0: bb6, otherwise: bb5]; // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    }

    bb5: {
        _30 = const core::panicking::AssertKind::Eq; // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _32 = const core::panicking::AssertKind::Eq; // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _34 = _24;                       // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _33 = _34;                       // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _36 = _25;                       // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _35 = _36;                       // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _37 = Option::<Arguments<'_>>::None; // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
        _31 = core::panicking::assert_failed::<&[isize], &[isize]>(move _32, move _33, move _35, move _37); // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:53
                                         // + literal: Const { ty: for<'a, 'b, 'c> fn(core::panicking::AssertKind, &'a &[isize], &'b &[isize], Option<Arguments<'c>>) -> ! {core::panicking::assert_failed::<&[isize], &[isize]>}, val: Value(<ZST>) }
    }

    bb6: {
        _111 = const _;                  // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
                                         // + literal: Const { ty: &&[isize], val: Unevaluated(main, [], Some(promoted[7])) }
        _39 = _111;                      // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _40 = &_1;                       // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _38 = (move _39, move _40);      // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _41 = (_38.0: &&[isize]);        // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _42 = (_38.1: &&[isize]);        // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _45 = _41;                       // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
        _46 = _42;                       // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
        _44 = <&[isize] as PartialEq>::eq(move _45, move _46) -> bb7; // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a &[isize], &'b &[isize]) -> bool {<&[isize] as PartialEq>::eq}, val: Value(<ZST>) }
    }

    bb7: {
        _43 = Not(move _44);             // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
        switchInt(move _43) -> [0: bb9, otherwise: bb8]; // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    }

    bb8: {
        _47 = const core::panicking::AssertKind::Eq; // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _49 = const core::panicking::AssertKind::Eq; // scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _51 = _41;                       // scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _50 = _51;                       // scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _53 = _42;                       // scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _52 = _53;                       // scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _54 = Option::<Arguments<'_>>::None; // scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
        _48 = core::panicking::assert_failed::<&[isize], &[isize]>(move _49, move _50, move _52, move _54); // scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:53
                                         // + literal: Const { ty: for<'a, 'b, 'c> fn(core::panicking::AssertKind, &'a &[isize], &'b &[isize], Option<Arguments<'c>>) -> ! {core::panicking::assert_failed::<&[isize], &[isize]>}, val: Value(<ZST>) }
    }

    bb9: {
        _57 = const {alloc1: &&isize};   // scope 1 at ui/array-slice-vec/check-static-slice.rs:28:17: 28:19
                                         // mir::Constant
                                         // + span: ui/array-slice-vec/check-static-slice.rs:28:17: 28:19
                                         // + literal: Const { ty: &&isize, val: Value(Scalar(alloc1)) }
        _115 = deref_copy (*_57);        // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _56 = _115;                      // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _110 = const _;                  // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // + literal: Const { ty: &isize, val: Unevaluated(main, [], Some(promoted[6])) }
        _58 = _110;                      // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _55 = (move _56, move _58);      // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _59 = (_55.0: &isize);           // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _60 = (_55.1: &isize);           // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _64 = const {alloc2: &isize};    // scope 1 at ui/array-slice-vec/check-static-slice.rs:30:16: 30:18
                                         // mir::Constant
                                         // + span: ui/array-slice-vec/check-static-slice.rs:30:16: 30:18
                                         // + literal: Const { ty: &isize, val: Value(Scalar(alloc2)) }
        _63 = _64;                       // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _109 = const _;                  // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // + literal: Const { ty: &isize, val: Unevaluated(main, [], Some(promoted[5])) }
        _65 = _109;                      // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _62 = (move _63, move _65);      // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _66 = (_62.0: &isize);           // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _67 = (_62.1: &isize);           // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _71 = const {alloc3: &isize};    // scope 1 at ui/array-slice-vec/check-static-slice.rs:31:16: 31:18
                                         // mir::Constant
                                         // + span: ui/array-slice-vec/check-static-slice.rs:31:16: 31:18
                                         // + literal: Const { ty: &isize, val: Value(Scalar(alloc3)) }
        _70 = _71;                       // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _108 = const _;                  // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // + literal: Const { ty: &isize, val: Unevaluated(main, [], Some(promoted[4])) }
        _72 = _108;                      // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _69 = (move _70, move _72);      // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _73 = (_69.0: &isize);           // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _74 = (_69.1: &isize);           // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _78 = const {alloc4: &isize};    // scope 1 at ui/array-slice-vec/check-static-slice.rs:32:16: 32:18
                                         // mir::Constant
                                         // + span: ui/array-slice-vec/check-static-slice.rs:32:16: 32:18
                                         // + literal: Const { ty: &isize, val: Value(Scalar(alloc4)) }
        _77 = _78;                       // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _107 = const _;                  // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // + literal: Const { ty: &isize, val: Unevaluated(main, [], Some(promoted[3])) }
        _79 = _107;                      // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _76 = (move _77, move _79);      // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _80 = (_76.0: &isize);           // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _81 = (_76.1: &isize);           // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _85 = const {alloc5: &isize};    // scope 1 at ui/array-slice-vec/check-static-slice.rs:33:16: 33:18
                                         // mir::Constant
                                         // + span: ui/array-slice-vec/check-static-slice.rs:33:16: 33:18
                                         // + literal: Const { ty: &isize, val: Value(Scalar(alloc5)) }
        _84 = _85;                       // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _106 = const _;                  // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // + literal: Const { ty: &isize, val: Unevaluated(main, [], Some(promoted[2])) }
        _86 = _106;                      // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _83 = (move _84, move _86);      // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _87 = (_83.0: &isize);           // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _88 = (_83.1: &isize);           // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _92 = const {alloc6: &isize};    // scope 1 at ui/array-slice-vec/check-static-slice.rs:34:16: 34:18
                                         // mir::Constant
                                         // + span: ui/array-slice-vec/check-static-slice.rs:34:16: 34:18
                                         // + literal: Const { ty: &isize, val: Value(Scalar(alloc6)) }
        _91 = _92;                       // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _105 = const _;                  // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // + literal: Const { ty: &isize, val: Unevaluated(main, [], Some(promoted[1])) }
        _93 = _105;                      // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _90 = (move _91, move _93);      // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _94 = (_90.0: &isize);           // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _95 = (_90.1: &isize);           // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _99 = const {alloc7: &isize};    // scope 1 at ui/array-slice-vec/check-static-slice.rs:35:16: 35:18
                                         // mir::Constant
                                         // + span: ui/array-slice-vec/check-static-slice.rs:35:16: 35:18
                                         // + literal: Const { ty: &isize, val: Value(Scalar(alloc7)) }
        _98 = _99;                       // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _104 = const _;                  // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // + literal: Const { ty: &isize, val: Unevaluated(main, [], Some(promoted[0])) }
        _100 = _104;                     // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _97 = (move _98, move _100);     // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _101 = (_97.0: &isize);          // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _102 = (_97.1: &isize);          // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        return;                          // scope 0 at ui/array-slice-vec/check-static-slice.rs:36:2: 36:2
    }
}

alloc7 (static: CF, size: 8, align: 8) {
    03 00 00 00 00 00 00 00                         │ ........
}

alloc6 (static: CE, size: 8, align: 8) {
    02 00 00 00 00 00 00 00                         │ ........
}

alloc5 (static: CD, size: 8, align: 8) {
    01 00 00 00 00 00 00 00                         │ ........
}

alloc4 (static: CC, size: 8, align: 8) {
    03 00 00 00 00 00 00 00                         │ ........
}

alloc3 (static: CB, size: 8, align: 8) {
    02 00 00 00 00 00 00 00                         │ ........
}

alloc2 (static: CA, size: 8, align: 8) {
    01 00 00 00 00 00 00 00                         │ ........
}

alloc1 (static: AG, size: 8, align: 8) {
    ╾────alloc33+0x10─────╼                         │ ╾──────╼
}

alloc33 (size: 24, align: 8) {
    0x00 │ 01 00 00 00 00 00 00 00 02 00 00 00 00 00 00 00 │ ................
    0x10 │ 03 00 00 00 00 00 00 00                         │ ........
}

promoted[0] in main: &isize = {
    let mut _0: &isize;                  // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _1: isize;                   // in scope 0 at ui/array-slice-vec/check-static-slice.rs:35:20: 35:21

    bb0: {
        _1 = const 3_isize;              // scope 0 at ui/array-slice-vec/check-static-slice.rs:35:20: 35:21
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    }
}

promoted[1] in main: &isize = {
    let mut _0: &isize;                  // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _1: isize;                   // in scope 0 at ui/array-slice-vec/check-static-slice.rs:34:20: 34:21

    bb0: {
        _1 = const 2_isize;              // scope 0 at ui/array-slice-vec/check-static-slice.rs:34:20: 34:21
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    }
}

promoted[2] in main: &isize = {
    let mut _0: &isize;                  // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _1: isize;                   // in scope 0 at ui/array-slice-vec/check-static-slice.rs:33:20: 33:21

    bb0: {
        _1 = const 1_isize;              // scope 0 at ui/array-slice-vec/check-static-slice.rs:33:20: 33:21
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    }
}

promoted[3] in main: &isize = {
    let mut _0: &isize;                  // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _1: isize;                   // in scope 0 at ui/array-slice-vec/check-static-slice.rs:32:20: 32:21

    bb0: {
        _1 = const 3_isize;              // scope 0 at ui/array-slice-vec/check-static-slice.rs:32:20: 32:21
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    }
}

promoted[4] in main: &isize = {
    let mut _0: &isize;                  // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _1: isize;                   // in scope 0 at ui/array-slice-vec/check-static-slice.rs:31:20: 31:21

    bb0: {
        _1 = const 2_isize;              // scope 0 at ui/array-slice-vec/check-static-slice.rs:31:20: 31:21
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    }
}

promoted[5] in main: &isize = {
    let mut _0: &isize;                  // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _1: isize;                   // in scope 0 at ui/array-slice-vec/check-static-slice.rs:30:20: 30:21

    bb0: {
        _1 = const 1_isize;              // scope 0 at ui/array-slice-vec/check-static-slice.rs:30:20: 30:21
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    }
}

promoted[6] in main: &isize = {
    let mut _0: &isize;                  // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _1: isize;                   // in scope 0 at ui/array-slice-vec/check-static-slice.rs:28:21: 28:22

    bb0: {
        _1 = const 3_isize;              // scope 0 at ui/array-slice-vec/check-static-slice.rs:28:21: 28:22
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    }
}

promoted[7] in main: &&[isize] = {
    let mut _0: &&[isize];               // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let mut _1: &[isize];                // in scope 0 at ui/array-slice-vec/check-static-slice.rs:27:16: 27:18

    bb0: {
        _1 = const _;                    // scope 0 at ui/array-slice-vec/check-static-slice.rs:27:16: 27:18
                                         // mir::Constant
                                         // + span: ui/array-slice-vec/check-static-slice.rs:27:16: 27:18
                                         // + literal: Const { ty: &[isize], val: Unevaluated(AF, [], None) }
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    }
}

promoted[8] in main: &&[isize] = {
    let mut _0: &&[isize];               // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let mut _1: &[isize];                // in scope 0 at ui/array-slice-vec/check-static-slice.rs:26:16: 26:18

    bb0: {
        _1 = const _;                    // scope 0 at ui/array-slice-vec/check-static-slice.rs:26:16: 26:18
                                         // mir::Constant
                                         // + span: ui/array-slice-vec/check-static-slice.rs:26:16: 26:18
                                         // + literal: Const { ty: &[isize], val: Unevaluated(AD, [], None) }
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    }
}

promoted[9] in main: &&[isize] = {
    let mut _0: &&[isize];               // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let mut _1: &[isize];                // in scope 0 at ui/array-slice-vec/check-static-slice.rs:25:16: 25:18

    bb0: {
        _1 = const _;                    // scope 0 at ui/array-slice-vec/check-static-slice.rs:25:16: 25:18
                                         // mir::Constant
                                         // + span: ui/array-slice-vec/check-static-slice.rs:25:16: 25:18
                                         // + literal: Const { ty: &[isize], val: Unevaluated(AC, [], None) }
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    }
}

promoted[10] in main: &[isize; 3] = {
    let mut _0: &[isize; 3];             // return place in scope 0 at ui/array-slice-vec/check-static-slice.rs:24:23: 24:33
    let mut _1: [isize; 3];              // in scope 0 at ui/array-slice-vec/check-static-slice.rs:24:24: 24:33

    bb0: {
        _1 = [const 1_isize, const 2_isize, const 3_isize]; // scope 0 at ui/array-slice-vec/check-static-slice.rs:24:24: 24:33
        _0 = &_1;                        // scope 0 at ui/array-slice-vec/check-static-slice.rs:24:23: 24:33
        return;                          // scope 0 at ui/array-slice-vec/check-static-slice.rs:24:23: 24:33
    }
}
