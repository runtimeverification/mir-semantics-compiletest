// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
const SIZE: isize = {
    let mut _0: isize;                   // return place in scope 0 at ui/array-slice-vec/cast-in-array-size.rs:7:13: 7:18

    bb0: {
        _0 = const 25_isize;             // scope 0 at ui/array-slice-vec/cast-in-array-size.rs:7:21: 7:23
        return;                          // scope 0 at ui/array-slice-vec/cast-in-array-size.rs:7:1: 7:24
    }
}

fn main() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/array-slice-vec/cast-in-array-size.rs:9:11: 9:11
    let _1: [bool; 1];                   // in scope 0 at ui/array-slice-vec/cast-in-array-size.rs:10:9: 10:11
    scope 1 {
        debug _a => _1;                  // in scope 1 at ui/array-slice-vec/cast-in-array-size.rs:10:9: 10:11
        let _2: [isize; 25];             // in scope 1 at ui/array-slice-vec/cast-in-array-size.rs:11:9: 11:11
        scope 2 {
            debug _b => _2;              // in scope 2 at ui/array-slice-vec/cast-in-array-size.rs:11:9: 11:11
            let _3: [bool; 10];          // in scope 2 at ui/array-slice-vec/cast-in-array-size.rs:12:9: 12:11
            scope 3 {
                debug _c => _3;          // in scope 3 at ui/array-slice-vec/cast-in-array-size.rs:12:9: 12:11
                let _4: [bool; 1];       // in scope 3 at ui/array-slice-vec/cast-in-array-size.rs:13:9: 13:11
                scope 4 {
                    debug _d => _4;      // in scope 4 at ui/array-slice-vec/cast-in-array-size.rs:13:9: 13:11
                }
            }
        }
    }

    bb0: {
        _2 = [const 1_isize; 25];        // scope 1 at ui/array-slice-vec/cast-in-array-size.rs:11:38: 11:56
        _3 = [const true; 10];           // scope 2 at ui/array-slice-vec/cast-in-array-size.rs:12:37: 12:58
        _4 = [const true; 1];            // scope 3 at ui/array-slice-vec/cast-in-array-size.rs:13:37: 13:58
        return;                          // scope 0 at ui/array-slice-vec/cast-in-array-size.rs:14:2: 14:2
    }
}

main::{constant#0}: usize = {
    let mut _0: usize;                   // return place in scope 0 at ui/array-slice-vec/cast-in-array-size.rs:10:20: 10:30

    bb0: {
        _0 = const 1_usize;              // scope 0 at ui/array-slice-vec/cast-in-array-size.rs:10:20: 10:21
        return;                          // scope 0 at ui/array-slice-vec/cast-in-array-size.rs:10:20: 10:30
    }
}

main::{constant#2}: usize = {
    let mut _0: usize;                   // return place in scope 0 at ui/array-slice-vec/cast-in-array-size.rs:11:42: 11:55

    bb0: {
        _0 = const _ as usize (IntToInt); // scope 0 at ui/array-slice-vec/cast-in-array-size.rs:11:42: 11:55
        return;                          // scope 0 at ui/array-slice-vec/cast-in-array-size.rs:11:42: 11:55
    }
}

main::{constant#1}: usize = {
    let mut _0: usize;                   // return place in scope 0 at ui/array-slice-vec/cast-in-array-size.rs:11:21: 11:34

    bb0: {
        _0 = const _ as usize (IntToInt); // scope 0 at ui/array-slice-vec/cast-in-array-size.rs:11:21: 11:34
        return;                          // scope 0 at ui/array-slice-vec/cast-in-array-size.rs:11:21: 11:34
    }
}

main::{constant#4}: usize = {
    let mut _0: usize;                   // return place in scope 0 at ui/array-slice-vec/cast-in-array-size.rs:12:44: 12:57

    bb0: {
        _0 = const '\n' as usize (IntToInt); // scope 0 at ui/array-slice-vec/cast-in-array-size.rs:12:44: 12:57
        return;                          // scope 0 at ui/array-slice-vec/cast-in-array-size.rs:12:44: 12:57
    }
}

main::{constant#3}: usize = {
    let mut _0: usize;                   // return place in scope 0 at ui/array-slice-vec/cast-in-array-size.rs:12:20: 12:33

    bb0: {
        _0 = const '\n' as usize (IntToInt); // scope 0 at ui/array-slice-vec/cast-in-array-size.rs:12:20: 12:33
        return;                          // scope 0 at ui/array-slice-vec/cast-in-array-size.rs:12:20: 12:33
    }
}

main::{constant#6}: usize = {
    let mut _0: usize;                   // return place in scope 0 at ui/array-slice-vec/cast-in-array-size.rs:13:44: 13:57

    bb0: {
        _0 = const true as usize (IntToInt); // scope 0 at ui/array-slice-vec/cast-in-array-size.rs:13:44: 13:57
        return;                          // scope 0 at ui/array-slice-vec/cast-in-array-size.rs:13:44: 13:57
    }
}

main::{constant#5}: usize = {
    let mut _0: usize;                   // return place in scope 0 at ui/array-slice-vec/cast-in-array-size.rs:13:20: 13:33

    bb0: {
        _0 = const true as usize (IntToInt); // scope 0 at ui/array-slice-vec/cast-in-array-size.rs:13:20: 13:33
        return;                          // scope 0 at ui/array-slice-vec/cast-in-array-size.rs:13:20: 13:33
    }
}
