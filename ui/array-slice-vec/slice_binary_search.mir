// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
fn <impl at ui/array-slice-vec/slice_binary_search.rs:6:10: 6:15>::fmt(_1: &Assignment, _2: &mut Formatter<'_>) -> Result<(), std::fmt::Error> {
    debug self => _1;                    // in scope 0 at ui/array-slice-vec/slice_binary_search.rs:6:10: 6:15
    debug f => _2;                       // in scope 0 at ui/array-slice-vec/slice_binary_search.rs:6:10: 6:15
    let mut _0: std::result::Result<(), std::fmt::Error>; // return place in scope 0 at ui/array-slice-vec/slice_binary_search.rs:6:10: 6:15
    let mut _3: &mut std::fmt::Formatter<'_>; // in scope 0 at ui/array-slice-vec/slice_binary_search.rs:6:10: 6:15
    let mut _4: &str;                    // in scope 0 at ui/array-slice-vec/slice_binary_search.rs:6:10: 6:15
    let _5: &str;                        // in scope 0 at ui/array-slice-vec/slice_binary_search.rs:6:10: 6:15
    let mut _6: &str;                    // in scope 0 at ui/array-slice-vec/slice_binary_search.rs:8:5: 8:18
    let _7: &str;                        // in scope 0 at ui/array-slice-vec/slice_binary_search.rs:8:5: 8:18
    let mut _8: &dyn std::fmt::Debug;    // in scope 0 at ui/array-slice-vec/slice_binary_search.rs:8:5: 8:18
    let mut _9: &std::string::String;    // in scope 0 at ui/array-slice-vec/slice_binary_search.rs:8:5: 8:18
    let _10: &std::string::String;       // in scope 0 at ui/array-slice-vec/slice_binary_search.rs:8:5: 8:18
    let mut _11: &str;                   // in scope 0 at ui/array-slice-vec/slice_binary_search.rs:9:5: 9:19
    let _12: &str;                       // in scope 0 at ui/array-slice-vec/slice_binary_search.rs:9:5: 9:19
    let mut _13: &dyn std::fmt::Debug;   // in scope 0 at ui/array-slice-vec/slice_binary_search.rs:9:5: 9:19
    let mut _14: &&i32;                  // in scope 0 at ui/array-slice-vec/slice_binary_search.rs:9:5: 9:19
    let _15: &&i32;                      // in scope 0 at ui/array-slice-vec/slice_binary_search.rs:9:5: 9:19
    let _16: &i32;                       // in scope 0 at ui/array-slice-vec/slice_binary_search.rs:9:5: 9:19

    bb0: {
        _3 = &mut (*_2);                 // scope 0 at ui/array-slice-vec/slice_binary_search.rs:6:10: 6:15
        _5 = const "Assignment";         // scope 0 at ui/array-slice-vec/slice_binary_search.rs:6:10: 6:15
                                         // mir::Constant
                                         // + span: ui/array-slice-vec/slice_binary_search.rs:6:10: 6:15
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _4 = _5;                         // scope 0 at ui/array-slice-vec/slice_binary_search.rs:6:10: 6:15
        _7 = const "topic";              // scope 0 at ui/array-slice-vec/slice_binary_search.rs:8:5: 8:18
                                         // mir::Constant
                                         // + span: ui/array-slice-vec/slice_binary_search.rs:8:5: 8:18
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _6 = _7;                         // scope 0 at ui/array-slice-vec/slice_binary_search.rs:8:5: 8:18
        _10 = &((*_1).0: std::string::String); // scope 0 at ui/array-slice-vec/slice_binary_search.rs:8:5: 8:18
        _9 = _10;                        // scope 0 at ui/array-slice-vec/slice_binary_search.rs:8:5: 8:18
        _8 = move _9 as &dyn std::fmt::Debug (Pointer(Unsize)); // scope 0 at ui/array-slice-vec/slice_binary_search.rs:8:5: 8:18
        _12 = const "partition";         // scope 0 at ui/array-slice-vec/slice_binary_search.rs:9:5: 9:19
                                         // mir::Constant
                                         // + span: ui/array-slice-vec/slice_binary_search.rs:9:5: 9:19
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _11 = _12;                       // scope 0 at ui/array-slice-vec/slice_binary_search.rs:9:5: 9:19
        _16 = &((*_1).1: i32);           // scope 0 at ui/array-slice-vec/slice_binary_search.rs:9:5: 9:19
        _15 = &_16;                      // scope 0 at ui/array-slice-vec/slice_binary_search.rs:9:5: 9:19
        _14 = _15;                       // scope 0 at ui/array-slice-vec/slice_binary_search.rs:9:5: 9:19
        _13 = move _14 as &dyn std::fmt::Debug (Pointer(Unsize)); // scope 0 at ui/array-slice-vec/slice_binary_search.rs:9:5: 9:19
        _0 = Formatter::<'_>::debug_struct_field2_finish(move _3, move _4, move _6, move _8, move _11, move _13) -> bb1; // scope 0 at ui/array-slice-vec/slice_binary_search.rs:6:10: 6:15
                                         // mir::Constant
                                         // + span: ui/array-slice-vec/slice_binary_search.rs:6:10: 6:15
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: for<'b, 'a, 'c, 'd, 'e, 'f> fn(&'b mut Formatter<'_>, &'a str, &'c str, &'d (dyn Debug + 'd), &'e str, &'f (dyn Debug + 'f)) -> Result<(), std::fmt::Error> {Formatter::<'_>::debug_struct_field2_finish}, val: Value(<ZST>) }
    }

    bb1: {
        return;                          // scope 0 at ui/array-slice-vec/slice_binary_search.rs:6:15: 6:15
    }
}

fn main() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/array-slice-vec/slice_binary_search.rs:12:11: 12:11
    let _1: std::vec::Vec<Assignment>;   // in scope 0 at ui/array-slice-vec/slice_binary_search.rs:13:9: 13:11
    let mut _2: std::boxed::Box<[Assignment]>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
    let mut _3: std::boxed::Box<[Assignment; 3]>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
    let mut _4: usize;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
    let mut _5: usize;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
    let mut _6: *mut u8;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
    let mut _7: std::boxed::Box<[Assignment; 3]>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
    let mut _8: Assignment;              // in scope 0 at ui/array-slice-vec/slice_binary_search.rs:14:9: 14:57
    let mut _9: std::string::String;     // in scope 0 at ui/array-slice-vec/slice_binary_search.rs:14:29: 14:41
    let mut _10: &str;                   // in scope 0 at ui/array-slice-vec/slice_binary_search.rs:14:29: 14:41
    let _11: &str;                       // in scope 0 at ui/array-slice-vec/slice_binary_search.rs:14:29: 14:34
    let mut _12: Assignment;             // in scope 0 at ui/array-slice-vec/slice_binary_search.rs:15:9: 15:57
    let mut _13: std::string::String;    // in scope 0 at ui/array-slice-vec/slice_binary_search.rs:15:29: 15:41
    let mut _14: &str;                   // in scope 0 at ui/array-slice-vec/slice_binary_search.rs:15:29: 15:41
    let _15: &str;                       // in scope 0 at ui/array-slice-vec/slice_binary_search.rs:15:29: 15:34
    let mut _16: Assignment;             // in scope 0 at ui/array-slice-vec/slice_binary_search.rs:16:9: 16:57
    let mut _17: std::string::String;    // in scope 0 at ui/array-slice-vec/slice_binary_search.rs:16:29: 16:41
    let mut _18: &str;                   // in scope 0 at ui/array-slice-vec/slice_binary_search.rs:16:29: 16:41
    let _19: &str;                       // in scope 0 at ui/array-slice-vec/slice_binary_search.rs:16:29: 16:34
    let _21: &str;                       // in scope 0 at ui/array-slice-vec/slice_binary_search.rs:19:21: 19:26
    let mut _23: &[Assignment];          // in scope 0 at ui/array-slice-vec/slice_binary_search.rs:20:13: 20:56
    let _24: &[Assignment];              // in scope 0 at ui/array-slice-vec/slice_binary_search.rs:20:13: 20:56
    let mut _25: &std::vec::Vec<Assignment>; // in scope 0 at ui/array-slice-vec/slice_binary_search.rs:20:13: 20:56
    let mut _26: &&str;                  // in scope 0 at ui/array-slice-vec/slice_binary_search.rs:20:37: 20:41
    let _27: &&str;                      // in scope 0 at ui/array-slice-vec/slice_binary_search.rs:20:37: 20:41
    let mut _28: [closure@ui/array-slice-vec/slice_binary_search.rs:20:43: 20:46]; // in scope 0 at ui/array-slice-vec/slice_binary_search.rs:20:43: 20:55
    let mut _29: (&std::result::Result<usize, usize>, &std::result::Result<usize, usize>); // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _30: &std::result::Result<usize, usize>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let mut _31: &std::result::Result<usize, usize>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let _32: std::result::Result<usize, usize>; // in scope 0 at ui/array-slice-vec/slice_binary_search.rs:21:23: 21:35
    let mut _33: std::result::Result<usize, usize>; // in scope 0 at ui/array-slice-vec/slice_binary_search.rs:21:23: 21:24
    let mut _34: [closure@ui/array-slice-vec/slice_binary_search.rs:21:29: 21:32]; // in scope 0 at ui/array-slice-vec/slice_binary_search.rs:21:29: 21:34
    let mut _37: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    let mut _38: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
    let mut _39: &std::result::Result<usize, usize>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
    let mut _40: &std::result::Result<usize, usize>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
    let _42: !;                          // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
    let mut _43: core::panicking::AssertKind; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
    let mut _44: &std::result::Result<usize, usize>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let _45: &std::result::Result<usize, usize>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let mut _46: &std::result::Result<usize, usize>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let _47: &std::result::Result<usize, usize>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let mut _48: std::option::Option<std::fmt::Arguments<'_>>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
    let mut _50: ();                     // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:46: 52:47
    let mut _51: *const [Assignment; 3]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
    scope 1 {
        debug xs => _1;                  // in scope 1 at ui/array-slice-vec/slice_binary_search.rs:13:9: 13:11
        let _20: &str;                   // in scope 1 at ui/array-slice-vec/slice_binary_search.rs:19:9: 19:12
        scope 3 {
            debug key => _20;            // in scope 3 at ui/array-slice-vec/slice_binary_search.rs:19:9: 19:12
            let _22: std::result::Result<usize, usize>; // in scope 3 at ui/array-slice-vec/slice_binary_search.rs:20:9: 20:10
            scope 4 {
                debug r => _22;          // in scope 4 at ui/array-slice-vec/slice_binary_search.rs:20:9: 20:10
                let _35: &std::result::Result<usize, usize>; // in scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
                let _36: &std::result::Result<usize, usize>; // in scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
                let mut _49: &std::result::Result<usize, usize>; // in scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
                scope 5 {
                    debug left_val => _35; // in scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
                    debug right_val => _36; // in scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
                    let _41: core::panicking::AssertKind; // in scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                    scope 6 {
                        debug kind => _41; // in scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                    }
                }
            }
        }
    }
    scope 2 {
    }

    bb0: {
        _4 = const 96_usize;             // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
        _5 = const 8_usize;              // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
        _6 = alloc::alloc::exchange_malloc(move _4, move _5) -> bb1; // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
                                         // + literal: Const { ty: unsafe fn(usize, usize) -> *mut u8 {alloc::alloc::exchange_malloc}, val: Value(<ZST>) }
    }

    bb1: {
        _7 = ShallowInitBox(move _6, [Assignment; 3]); // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
        _11 = const "abc";               // scope 0 at ui/array-slice-vec/slice_binary_search.rs:14:29: 14:34
                                         // mir::Constant
                                         // + span: ui/array-slice-vec/slice_binary_search.rs:14:29: 14:34
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _10 = _11;                       // scope 0 at ui/array-slice-vec/slice_binary_search.rs:14:29: 14:41
        _9 = <&str as Into<String>>::into(move _10) -> [return: bb2, unwind: bb17]; // scope 0 at ui/array-slice-vec/slice_binary_search.rs:14:29: 14:41
                                         // mir::Constant
                                         // + span: ui/array-slice-vec/slice_binary_search.rs:14:35: 14:39
                                         // + literal: Const { ty: fn(&str) -> String {<&str as Into<String>>::into}, val: Value(<ZST>) }
    }

    bb2: {
        _8 = Assignment { topic: move _9, partition: const 1_i32 }; // scope 0 at ui/array-slice-vec/slice_binary_search.rs:14:9: 14:57
        _15 = const "def";               // scope 0 at ui/array-slice-vec/slice_binary_search.rs:15:29: 15:34
                                         // mir::Constant
                                         // + span: ui/array-slice-vec/slice_binary_search.rs:15:29: 15:34
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _14 = _15;                       // scope 0 at ui/array-slice-vec/slice_binary_search.rs:15:29: 15:41
        _13 = <&str as Into<String>>::into(move _14) -> [return: bb3, unwind: bb15]; // scope 0 at ui/array-slice-vec/slice_binary_search.rs:15:29: 15:41
                                         // mir::Constant
                                         // + span: ui/array-slice-vec/slice_binary_search.rs:15:35: 15:39
                                         // + literal: Const { ty: fn(&str) -> String {<&str as Into<String>>::into}, val: Value(<ZST>) }
    }

    bb3: {
        _12 = Assignment { topic: move _13, partition: const 2_i32 }; // scope 0 at ui/array-slice-vec/slice_binary_search.rs:15:9: 15:57
        _19 = const "ghi";               // scope 0 at ui/array-slice-vec/slice_binary_search.rs:16:29: 16:34
                                         // mir::Constant
                                         // + span: ui/array-slice-vec/slice_binary_search.rs:16:29: 16:34
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _18 = _19;                       // scope 0 at ui/array-slice-vec/slice_binary_search.rs:16:29: 16:41
        _17 = <&str as Into<String>>::into(move _18) -> [return: bb4, unwind: bb14]; // scope 0 at ui/array-slice-vec/slice_binary_search.rs:16:29: 16:41
                                         // mir::Constant
                                         // + span: ui/array-slice-vec/slice_binary_search.rs:16:35: 16:39
                                         // + literal: Const { ty: fn(&str) -> String {<&str as Into<String>>::into}, val: Value(<ZST>) }
    }

    bb4: {
        _16 = Assignment { topic: move _17, partition: const 3_i32 }; // scope 0 at ui/array-slice-vec/slice_binary_search.rs:16:9: 16:57
        _51 = (((_7.0: std::ptr::Unique<[Assignment; 3]>).0: std::ptr::NonNull<[Assignment; 3]>).0: *const [Assignment; 3]); // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:37: 52:46
        (*_51) = [move _8, move _12, move _16]; // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:37: 52:46
        _3 = move _7;                    // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
        _2 = move _3 as std::boxed::Box<[Assignment]> (Pointer(Unsize)); // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
        _1 = slice::<impl [Assignment]>::into_vec::<std::alloc::Global>(move _2) -> bb5; // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:50:36: 53:10
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:50:36: 50:51
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: fn(Box<[Assignment]>) -> Vec<Assignment> {slice::<impl [Assignment]>::into_vec::<std::alloc::Global>}, val: Value(<ZST>) }
    }

    bb5: {
        _21 = const "def";               // scope 1 at ui/array-slice-vec/slice_binary_search.rs:19:21: 19:26
                                         // mir::Constant
                                         // + span: ui/array-slice-vec/slice_binary_search.rs:19:21: 19:26
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _20 = _21;                       // scope 1 at ui/array-slice-vec/slice_binary_search.rs:19:21: 19:26
        _25 = &_1;                       // scope 3 at ui/array-slice-vec/slice_binary_search.rs:20:13: 20:56
        _24 = <Vec<Assignment> as Deref>::deref(move _25) -> [return: bb6, unwind: bb13]; // scope 3 at ui/array-slice-vec/slice_binary_search.rs:20:13: 20:56
                                         // mir::Constant
                                         // + span: ui/array-slice-vec/slice_binary_search.rs:20:13: 20:56
                                         // + literal: Const { ty: for<'a> fn(&'a Vec<Assignment>) -> &'a <Vec<Assignment> as Deref>::Target {<Vec<Assignment> as Deref>::deref}, val: Value(<ZST>) }
    }

    bb6: {
        _23 = _24;                       // scope 3 at ui/array-slice-vec/slice_binary_search.rs:20:13: 20:56
        _27 = &_20;                      // scope 3 at ui/array-slice-vec/slice_binary_search.rs:20:37: 20:41
        _26 = _27;                       // scope 3 at ui/array-slice-vec/slice_binary_search.rs:20:37: 20:41
        _22 = core::slice::<impl [Assignment]>::binary_search_by_key::<'_, &str, [closure@ui/array-slice-vec/slice_binary_search.rs:20:43: 20:46]>(move _23, move _26, move _28) -> [return: bb7, unwind: bb13]; // scope 3 at ui/array-slice-vec/slice_binary_search.rs:20:13: 20:56
                                         // mir::Constant
                                         // + span: ui/array-slice-vec/slice_binary_search.rs:20:16: 20:36
                                         // + literal: Const { ty: for<'a> fn(&[Assignment], &'a &str, [closure@ui/array-slice-vec/slice_binary_search.rs:20:43: 20:46]) -> Result<usize, usize> {core::slice::<impl [Assignment]>::binary_search_by_key::<'_, &str, [closure@ui/array-slice-vec/slice_binary_search.rs:20:43: 20:46]>}, val: Value(<ZST>) }
    }

    bb7: {
        _49 = const _;                   // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
                                         // + literal: Const { ty: &Result<usize, usize>, val: Unevaluated(main, [], Some(promoted[0])) }
        _30 = _49;                       // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _33 = _22;                       // scope 4 at ui/array-slice-vec/slice_binary_search.rs:21:23: 21:24
        _32 = Result::<usize, usize>::map::<usize, [closure@ui/array-slice-vec/slice_binary_search.rs:21:29: 21:32]>(move _33, move _34) -> [return: bb8, unwind: bb13]; // scope 4 at ui/array-slice-vec/slice_binary_search.rs:21:23: 21:35
                                         // mir::Constant
                                         // + span: ui/array-slice-vec/slice_binary_search.rs:21:25: 21:28
                                         // + literal: Const { ty: fn(Result<usize, usize>, [closure@ui/array-slice-vec/slice_binary_search.rs:21:29: 21:32]) -> Result<usize, usize> {Result::<usize, usize>::map::<usize, [closure@ui/array-slice-vec/slice_binary_search.rs:21:29: 21:32]>}, val: Value(<ZST>) }
    }

    bb8: {
        _31 = &_32;                      // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _29 = (move _30, move _31);      // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _35 = (_29.0: &std::result::Result<usize, usize>); // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _36 = (_29.1: &std::result::Result<usize, usize>); // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _39 = _35;                       // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
        _40 = _36;                       // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
        _38 = <Result<usize, usize> as PartialEq>::eq(move _39, move _40) -> [return: bb9, unwind: bb13]; // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a Result<usize, usize>, &'b Result<usize, usize>) -> bool {<Result<usize, usize> as PartialEq>::eq}, val: Value(<ZST>) }
    }

    bb9: {
        _37 = Not(move _38);             // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
        switchInt(move _37) -> [0: bb11, otherwise: bb10]; // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    }

    bb10: {
        _41 = const core::panicking::AssertKind::Eq; // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _43 = const core::panicking::AssertKind::Eq; // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _45 = _35;                       // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _44 = _45;                       // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _47 = _36;                       // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _46 = _47;                       // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _48 = Option::<Arguments<'_>>::None; // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
        _42 = core::panicking::assert_failed::<Result<usize, usize>, Result<usize, usize>>(move _43, move _44, move _46, move _48) -> bb13; // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:53
                                         // + literal: Const { ty: for<'a, 'b, 'c> fn(core::panicking::AssertKind, &'a Result<usize, usize>, &'b Result<usize, usize>, Option<Arguments<'c>>) -> ! {core::panicking::assert_failed::<Result<usize, usize>, Result<usize, usize>>}, val: Value(<ZST>) }
    }

    bb11: {
        drop(_1) -> bb12;                // scope 0 at ui/array-slice-vec/slice_binary_search.rs:22:1: 22:2
    }

    bb12: {
        return;                          // scope 0 at ui/array-slice-vec/slice_binary_search.rs:22:2: 22:2
    }

    bb13 (cleanup): {
        drop(_1) -> bb16;                // scope 0 at ui/array-slice-vec/slice_binary_search.rs:22:1: 22:2
    }

    bb14 (cleanup): {
        drop(_12) -> bb15;               // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:45: 52:46
    }

    bb15 (cleanup): {
        drop(_8) -> bb17;                // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:45: 52:46
    }

    bb16 (cleanup): {
        resume;                          // scope 0 at ui/array-slice-vec/slice_binary_search.rs:12:1: 22:2
    }

    bb17 (cleanup): {
        _50 = alloc::alloc::box_free::<[Assignment; 3], std::alloc::Global>(move (_7.0: std::ptr::Unique<[Assignment; 3]>), move (_7.1: std::alloc::Global)) -> bb16; // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:46: 52:47
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:46: 52:47
                                         // + literal: Const { ty: unsafe fn(Unique<[Assignment; 3]>, std::alloc::Global) {alloc::alloc::box_free::<[Assignment; 3], std::alloc::Global>}, val: Value(<ZST>) }
    }
}

promoted[0] in main: &Result<usize, usize> = {
    let mut _0: &std::result::Result<usize, usize>; // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let mut _1: std::result::Result<usize, usize>; // in scope 0 at ui/array-slice-vec/slice_binary_search.rs:21:16: 21:21

    bb0: {
        _1 = Result::<usize, usize>::Ok(const 1_usize); // scope 0 at ui/array-slice-vec/slice_binary_search.rs:21:16: 21:21
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    }
}

fn main::{closure#0}(_1: &mut [closure@ui/array-slice-vec/slice_binary_search.rs:20:43: 20:46], _2: &Assignment) -> &str {
    debug e => _2;                       // in scope 0 at ui/array-slice-vec/slice_binary_search.rs:20:44: 20:45
    let mut _0: &str;                    // return place in scope 0 at ui/array-slice-vec/slice_binary_search.rs:20:47: 20:55
    let mut _3: &std::string::String;    // in scope 0 at ui/array-slice-vec/slice_binary_search.rs:20:47: 20:55
    let _4: &std::string::String;        // in scope 0 at ui/array-slice-vec/slice_binary_search.rs:20:47: 20:55

    bb0: {
        _4 = &((*_2).0: std::string::String); // scope 0 at ui/array-slice-vec/slice_binary_search.rs:20:47: 20:55
        _3 = _4;                         // scope 0 at ui/array-slice-vec/slice_binary_search.rs:20:47: 20:55
        _0 = <String as Deref>::deref(move _3) -> bb1; // scope 0 at ui/array-slice-vec/slice_binary_search.rs:20:47: 20:55
                                         // mir::Constant
                                         // + span: ui/array-slice-vec/slice_binary_search.rs:20:47: 20:55
                                         // + literal: Const { ty: for<'a> fn(&'a String) -> &'a <String as Deref>::Target {<String as Deref>::deref}, val: Value(<ZST>) }
    }

    bb1: {
        return;                          // scope 0 at ui/array-slice-vec/slice_binary_search.rs:20:55: 20:55
    }
}

fn main::{closure#1}(_1: [closure@ui/array-slice-vec/slice_binary_search.rs:21:29: 21:32], _2: usize) -> usize {
    debug i => _2;                       // in scope 0 at ui/array-slice-vec/slice_binary_search.rs:21:30: 21:31
    let mut _0: usize;                   // return place in scope 0 at ui/array-slice-vec/slice_binary_search.rs:21:33: 21:33

    bb0: {
        _0 = _2;                         // scope 0 at ui/array-slice-vec/slice_binary_search.rs:21:33: 21:34
        return;                          // scope 0 at ui/array-slice-vec/slice_binary_search.rs:21:34: 21:34
    }
}
