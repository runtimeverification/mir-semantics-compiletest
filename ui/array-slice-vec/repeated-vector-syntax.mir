// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
fn main() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/array-slice-vec/repeated-vector-syntax.rs:3:15: 3:15
    let _1: [[bool; 1]; 512];            // in scope 0 at ui/array-slice-vec/repeated-vector-syntax.rs:4:9: 4:10
    let mut _2: [bool; 1];               // in scope 0 at ui/array-slice-vec/repeated-vector-syntax.rs:4:15: 4:21
    let _4: ();                          // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:81:9: 81:59
    let mut _5: std::fmt::Arguments<'_>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:81:28: 81:58
    let mut _6: &[&str];                 // in scope 0 at ui/array-slice-vec/repeated-vector-syntax.rs:7:12: 7:15
    let mut _7: &[&str; 1];              // in scope 0 at ui/array-slice-vec/repeated-vector-syntax.rs:7:12: 7:15
    let _8: &[&str; 1];                  // in scope 0 at ui/array-slice-vec/repeated-vector-syntax.rs:7:12: 7:15
    let mut _9: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:81:28: 81:58
    let mut _10: &[core::fmt::ArgumentV1<'_>; 0]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:81:28: 81:58
    let _11: &[core::fmt::ArgumentV1<'_>; 0]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:81:28: 81:58
    let mut _12: std::slice::Iter<'_, [bool; 1]>; // in scope 0 at ui/array-slice-vec/repeated-vector-syntax.rs:8:15: 8:21
    let mut _13: &[[bool; 1]];           // in scope 0 at ui/array-slice-vec/repeated-vector-syntax.rs:8:15: 8:21
    let _14: &[[bool; 1]];               // in scope 0 at ui/array-slice-vec/repeated-vector-syntax.rs:8:16: 8:21
    let mut _15: &[[bool; 1]; 512];      // in scope 0 at ui/array-slice-vec/repeated-vector-syntax.rs:8:16: 8:17
    let mut _16: std::ops::RangeFull;    // in scope 0 at ui/array-slice-vec/repeated-vector-syntax.rs:8:18: 8:20
    let mut _18: std::option::Option<&[bool; 1]>; // in scope 0 at ui/array-slice-vec/repeated-vector-syntax.rs:8:15: 8:21
    let mut _19: &mut std::slice::Iter<'_, [bool; 1]>; // in scope 0 at ui/array-slice-vec/repeated-vector-syntax.rs:8:15: 8:21
    let mut _20: &mut std::slice::Iter<'_, [bool; 1]>; // in scope 0 at ui/array-slice-vec/repeated-vector-syntax.rs:8:15: 8:21
    let mut _21: isize;                  // in scope 0 at ui/array-slice-vec/repeated-vector-syntax.rs:8:5: 10:6
    let _23: ();                         // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:81:9: 81:59
    let mut _24: std::fmt::Arguments<'_>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:81:28: 81:58
    let mut _25: &[&str];                // in scope 0 at ui/array-slice-vec/repeated-vector-syntax.rs:9:16: 9:24
    let mut _26: &[&str; 2];             // in scope 0 at ui/array-slice-vec/repeated-vector-syntax.rs:9:16: 9:24
    let _27: &[&str; 2];                 // in scope 0 at ui/array-slice-vec/repeated-vector-syntax.rs:9:16: 9:24
    let mut _28: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:81:28: 81:58
    let mut _29: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:81:28: 81:58
    let _30: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:81:28: 81:58
    let _31: [core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:81:28: 81:58
    let mut _32: core::fmt::ArgumentV1<'_>; // in scope 0 at ui/array-slice-vec/repeated-vector-syntax.rs:9:26: 9:33
    let mut _33: &&[bool];               // in scope 0 at ui/array-slice-vec/repeated-vector-syntax.rs:9:26: 9:33
    let _34: &&[bool];                   // in scope 0 at ui/array-slice-vec/repeated-vector-syntax.rs:9:26: 9:33
    let _35: &[bool];                    // in scope 0 at ui/array-slice-vec/repeated-vector-syntax.rs:9:26: 9:33
    let _36: &[bool];                    // in scope 0 at ui/array-slice-vec/repeated-vector-syntax.rs:9:27: 9:33
    let mut _37: &[bool; 1];             // in scope 0 at ui/array-slice-vec/repeated-vector-syntax.rs:9:27: 9:29
    let mut _38: std::ops::RangeFull;    // in scope 0 at ui/array-slice-vec/repeated-vector-syntax.rs:9:30: 9:32
    let _39: ();                         // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:62
    let mut _40: std::fmt::Arguments<'_>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _41: &[&str];                // in scope 0 at ui/array-slice-vec/repeated-vector-syntax.rs:11:14: 11:17
    let mut _42: &[&str; 1];             // in scope 0 at ui/array-slice-vec/repeated-vector-syntax.rs:11:14: 11:17
    let _43: &[&str; 1];                 // in scope 0 at ui/array-slice-vec/repeated-vector-syntax.rs:11:14: 11:17
    let mut _44: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _45: &[core::fmt::ArgumentV1<'_>; 0]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let _46: &[core::fmt::ArgumentV1<'_>; 0]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let _47: ();                         // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:62
    let mut _48: std::fmt::Arguments<'_>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _49: &[&str];                // in scope 0 at ui/array-slice-vec/repeated-vector-syntax.rs:12:14: 12:20
    let mut _50: &[&str; 2];             // in scope 0 at ui/array-slice-vec/repeated-vector-syntax.rs:12:14: 12:20
    let _51: &[&str; 2];                 // in scope 0 at ui/array-slice-vec/repeated-vector-syntax.rs:12:14: 12:20
    let mut _52: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _53: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let _54: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let _55: [core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _56: core::fmt::ArgumentV1<'_>; // in scope 0 at ui/array-slice-vec/repeated-vector-syntax.rs:12:22: 12:28
    let mut _57: &&[i32];                // in scope 0 at ui/array-slice-vec/repeated-vector-syntax.rs:12:22: 12:28
    let _58: &&[i32];                    // in scope 0 at ui/array-slice-vec/repeated-vector-syntax.rs:12:22: 12:28
    let _59: &[i32];                     // in scope 0 at ui/array-slice-vec/repeated-vector-syntax.rs:12:22: 12:28
    let _60: &[i32];                     // in scope 0 at ui/array-slice-vec/repeated-vector-syntax.rs:12:23: 12:28
    let mut _61: &[i32; 1];              // in scope 0 at ui/array-slice-vec/repeated-vector-syntax.rs:12:23: 12:24
    let mut _62: std::ops::RangeFull;    // in scope 0 at ui/array-slice-vec/repeated-vector-syntax.rs:12:25: 12:27
    scope 1 {
        debug x => _1;                   // in scope 1 at ui/array-slice-vec/repeated-vector-syntax.rs:4:9: 4:10
        let _3: [i32; 1];                // in scope 1 at ui/array-slice-vec/repeated-vector-syntax.rs:5:9: 5:10
        scope 2 {
            debug y => _3;               // in scope 2 at ui/array-slice-vec/repeated-vector-syntax.rs:5:9: 5:10
            let mut _17: std::slice::Iter<'_, [bool; 1]>; // in scope 2 at ui/array-slice-vec/repeated-vector-syntax.rs:8:15: 8:21
            let mut _63: &[&str; 2];     // in scope 2 at ui/array-slice-vec/repeated-vector-syntax.rs:12:14: 12:20
            let mut _64: &[core::fmt::ArgumentV1<'_>; 0]; // in scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
            let mut _65: &[&str; 1];     // in scope 2 at ui/array-slice-vec/repeated-vector-syntax.rs:11:14: 11:17
            let mut _67: &[core::fmt::ArgumentV1<'_>; 0]; // in scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:81:28: 81:58
            let mut _68: &[&str; 1];     // in scope 2 at ui/array-slice-vec/repeated-vector-syntax.rs:7:12: 7:15
            scope 3 {
                debug iter => _17;       // in scope 3 at ui/array-slice-vec/repeated-vector-syntax.rs:8:15: 8:21
                let _22: &[bool; 1];     // in scope 3 at ui/array-slice-vec/repeated-vector-syntax.rs:8:9: 8:11
                scope 4 {
                    debug xi => _22;     // in scope 4 at ui/array-slice-vec/repeated-vector-syntax.rs:8:9: 8:11
                    let mut _66: &[&str; 2]; // in scope 4 at ui/array-slice-vec/repeated-vector-syntax.rs:9:16: 9:24
                }
            }
        }
    }

    bb0: {
        _2 = [const true];               // scope 0 at ui/array-slice-vec/repeated-vector-syntax.rs:4:15: 4:21
        _1 = [move _2; 512];             // scope 0 at ui/array-slice-vec/repeated-vector-syntax.rs:4:13: 4:28
        _3 = [const 0_i32; 1];           // scope 1 at ui/array-slice-vec/repeated-vector-syntax.rs:5:13: 5:21
        _68 = const _;                   // scope 2 at ui/array-slice-vec/repeated-vector-syntax.rs:7:12: 7:15
                                         // mir::Constant
                                         // + span: ui/array-slice-vec/repeated-vector-syntax.rs:7:12: 7:15
                                         // + literal: Const { ty: &[&str; 1], val: Unevaluated(main, [], Some(promoted[5])) }
        _8 = _68;                        // scope 2 at ui/array-slice-vec/repeated-vector-syntax.rs:7:12: 7:15
        _7 = _8;                         // scope 2 at ui/array-slice-vec/repeated-vector-syntax.rs:7:12: 7:15
        _6 = move _7 as &[&str] (Pointer(Unsize)); // scope 2 at ui/array-slice-vec/repeated-vector-syntax.rs:7:12: 7:15
        _67 = const _;                   // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:81:28: 81:58
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:81:28: 81:58
                                         // + literal: Const { ty: &[core::fmt::ArgumentV1<'_>; 0], val: Unevaluated(main, [], Some(promoted[4])) }
        _11 = _67;                       // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:81:28: 81:58
        _10 = _11;                       // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:81:28: 81:58
        _9 = move _10 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:81:28: 81:58
        _5 = Arguments::<'_>::new_v1(move _6, move _9) -> bb1; // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:81:28: 81:58
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:81:28: 81:58
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb1: {
        _4 = _print(move _5) -> bb2;     // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:81:9: 81:59
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:81:9: 81:27
                                         // + literal: Const { ty: for<'a> fn(Arguments<'a>) {_print}, val: Value(<ZST>) }
    }

    bb2: {
        _15 = &_1;                       // scope 2 at ui/array-slice-vec/repeated-vector-syntax.rs:8:16: 8:17
        _14 = <[[bool; 1]; 512] as Index<RangeFull>>::index(move _15, move _16) -> bb3; // scope 2 at ui/array-slice-vec/repeated-vector-syntax.rs:8:16: 8:21
                                         // mir::Constant
                                         // + span: ui/array-slice-vec/repeated-vector-syntax.rs:8:16: 8:21
                                         // + literal: Const { ty: for<'a> fn(&'a [[bool; 1]; 512], RangeFull) -> &'a <[[bool; 1]; 512] as Index<RangeFull>>::Output {<[[bool; 1]; 512] as Index<RangeFull>>::index}, val: Value(<ZST>) }
    }

    bb3: {
        _13 = _14;                       // scope 2 at ui/array-slice-vec/repeated-vector-syntax.rs:8:15: 8:21
        _12 = <&[[bool; 1]] as IntoIterator>::into_iter(move _13) -> bb4; // scope 2 at ui/array-slice-vec/repeated-vector-syntax.rs:8:15: 8:21
                                         // mir::Constant
                                         // + span: ui/array-slice-vec/repeated-vector-syntax.rs:8:15: 8:21
                                         // + literal: Const { ty: fn(&[[bool; 1]]) -> <&[[bool; 1]] as IntoIterator>::IntoIter {<&[[bool; 1]] as IntoIterator>::into_iter}, val: Value(<ZST>) }
    }

    bb4: {
        _17 = move _12;                  // scope 2 at ui/array-slice-vec/repeated-vector-syntax.rs:8:15: 8:21
        goto -> bb5;                     // scope 3 at ui/array-slice-vec/repeated-vector-syntax.rs:8:5: 10:6
    }

    bb5: {
        _20 = &mut _17;                  // scope 3 at ui/array-slice-vec/repeated-vector-syntax.rs:8:15: 8:21
        _19 = &mut (*_20);               // scope 3 at ui/array-slice-vec/repeated-vector-syntax.rs:8:15: 8:21
        _18 = <std::slice::Iter<'_, [bool; 1]> as Iterator>::next(move _19) -> bb6; // scope 3 at ui/array-slice-vec/repeated-vector-syntax.rs:8:15: 8:21
                                         // mir::Constant
                                         // + span: ui/array-slice-vec/repeated-vector-syntax.rs:8:15: 8:21
                                         // + literal: Const { ty: for<'a> fn(&'a mut std::slice::Iter<'_, [bool; 1]>) -> Option<<std::slice::Iter<'_, [bool; 1]> as Iterator>::Item> {<std::slice::Iter<'_, [bool; 1]> as Iterator>::next}, val: Value(<ZST>) }
    }

    bb6: {
        _21 = discriminant(_18);         // scope 3 at ui/array-slice-vec/repeated-vector-syntax.rs:8:15: 8:21
        switchInt(move _21) -> [0: bb9, 1: bb7, otherwise: bb8]; // scope 3 at ui/array-slice-vec/repeated-vector-syntax.rs:8:15: 8:21
    }

    bb7: {
        _22 = ((_18 as Some).0: &[bool; 1]); // scope 3 at ui/array-slice-vec/repeated-vector-syntax.rs:8:9: 8:11
        _66 = const _;                   // scope 4 at ui/array-slice-vec/repeated-vector-syntax.rs:9:16: 9:24
                                         // mir::Constant
                                         // + span: ui/array-slice-vec/repeated-vector-syntax.rs:9:16: 9:24
                                         // + literal: Const { ty: &[&str; 2], val: Unevaluated(main, [], Some(promoted[3])) }
        _27 = _66;                       // scope 4 at ui/array-slice-vec/repeated-vector-syntax.rs:9:16: 9:24
        _26 = _27;                       // scope 4 at ui/array-slice-vec/repeated-vector-syntax.rs:9:16: 9:24
        _25 = move _26 as &[&str] (Pointer(Unsize)); // scope 4 at ui/array-slice-vec/repeated-vector-syntax.rs:9:16: 9:24
        _37 = _22;                       // scope 4 at ui/array-slice-vec/repeated-vector-syntax.rs:9:27: 9:29
        _36 = <[bool; 1] as Index<RangeFull>>::index(move _37, move _38) -> bb10; // scope 4 at ui/array-slice-vec/repeated-vector-syntax.rs:9:27: 9:33
                                         // mir::Constant
                                         // + span: ui/array-slice-vec/repeated-vector-syntax.rs:9:27: 9:33
                                         // + literal: Const { ty: for<'a> fn(&'a [bool; 1], RangeFull) -> &'a <[bool; 1] as Index<RangeFull>>::Output {<[bool; 1] as Index<RangeFull>>::index}, val: Value(<ZST>) }
    }

    bb8: {
        unreachable;                     // scope 3 at ui/array-slice-vec/repeated-vector-syntax.rs:8:15: 8:21
    }

    bb9: {
        _65 = const _;                   // scope 2 at ui/array-slice-vec/repeated-vector-syntax.rs:11:14: 11:17
                                         // mir::Constant
                                         // + span: ui/array-slice-vec/repeated-vector-syntax.rs:11:14: 11:17
                                         // + literal: Const { ty: &[&str; 1], val: Unevaluated(main, [], Some(promoted[2])) }
        _43 = _65;                       // scope 2 at ui/array-slice-vec/repeated-vector-syntax.rs:11:14: 11:17
        _42 = _43;                       // scope 2 at ui/array-slice-vec/repeated-vector-syntax.rs:11:14: 11:17
        _41 = move _42 as &[&str] (Pointer(Unsize)); // scope 2 at ui/array-slice-vec/repeated-vector-syntax.rs:11:14: 11:17
        _64 = const _;                   // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // + literal: Const { ty: &[core::fmt::ArgumentV1<'_>; 0], val: Unevaluated(main, [], Some(promoted[1])) }
        _46 = _64;                       // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _45 = _46;                       // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _44 = move _45 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _40 = Arguments::<'_>::new_v1(move _41, move _44) -> bb13; // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // + user_ty: UserType(3)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb10: {
        _35 = _36;                       // scope 4 at ui/array-slice-vec/repeated-vector-syntax.rs:9:26: 9:33
        _34 = &_35;                      // scope 4 at ui/array-slice-vec/repeated-vector-syntax.rs:9:26: 9:33
        _33 = _34;                       // scope 4 at ui/array-slice-vec/repeated-vector-syntax.rs:9:26: 9:33
        _32 = core::fmt::ArgumentV1::<'_>::new_debug::<&[bool]>(move _33) -> bb11; // scope 4 at ui/array-slice-vec/repeated-vector-syntax.rs:9:26: 9:33
                                         // mir::Constant
                                         // + span: ui/array-slice-vec/repeated-vector-syntax.rs:9:26: 9:33
                                         // + user_ty: UserType(2)
                                         // + literal: Const { ty: for<'b> fn(&'b &[bool]) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_debug::<&[bool]>}, val: Value(<ZST>) }
    }

    bb11: {
        _31 = [move _32];                // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:81:28: 81:58
        _30 = &_31;                      // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:81:28: 81:58
        _29 = _30;                       // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:81:28: 81:58
        _28 = move _29 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:81:28: 81:58
        _24 = Arguments::<'_>::new_v1(move _25, move _28) -> bb12; // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:81:28: 81:58
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:81:28: 81:58
                                         // + user_ty: UserType(1)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb12: {
        _23 = _print(move _24) -> bb5;   // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:81:9: 81:59
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:81:9: 81:27
                                         // + literal: Const { ty: for<'a> fn(Arguments<'a>) {_print}, val: Value(<ZST>) }
    }

    bb13: {
        _39 = _print(move _40) -> bb14;  // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:62
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:27
                                         // + literal: Const { ty: for<'a> fn(Arguments<'a>) {_print}, val: Value(<ZST>) }
    }

    bb14: {
        _63 = const _;                   // scope 2 at ui/array-slice-vec/repeated-vector-syntax.rs:12:14: 12:20
                                         // mir::Constant
                                         // + span: ui/array-slice-vec/repeated-vector-syntax.rs:12:14: 12:20
                                         // + literal: Const { ty: &[&str; 2], val: Unevaluated(main, [], Some(promoted[0])) }
        _51 = _63;                       // scope 2 at ui/array-slice-vec/repeated-vector-syntax.rs:12:14: 12:20
        _50 = _51;                       // scope 2 at ui/array-slice-vec/repeated-vector-syntax.rs:12:14: 12:20
        _49 = move _50 as &[&str] (Pointer(Unsize)); // scope 2 at ui/array-slice-vec/repeated-vector-syntax.rs:12:14: 12:20
        _61 = &_3;                       // scope 2 at ui/array-slice-vec/repeated-vector-syntax.rs:12:23: 12:24
        _60 = <[i32; 1] as Index<RangeFull>>::index(move _61, move _62) -> bb15; // scope 2 at ui/array-slice-vec/repeated-vector-syntax.rs:12:23: 12:28
                                         // mir::Constant
                                         // + span: ui/array-slice-vec/repeated-vector-syntax.rs:12:23: 12:28
                                         // + literal: Const { ty: for<'a> fn(&'a [i32; 1], RangeFull) -> &'a <[i32; 1] as Index<RangeFull>>::Output {<[i32; 1] as Index<RangeFull>>::index}, val: Value(<ZST>) }
    }

    bb15: {
        _59 = _60;                       // scope 2 at ui/array-slice-vec/repeated-vector-syntax.rs:12:22: 12:28
        _58 = &_59;                      // scope 2 at ui/array-slice-vec/repeated-vector-syntax.rs:12:22: 12:28
        _57 = _58;                       // scope 2 at ui/array-slice-vec/repeated-vector-syntax.rs:12:22: 12:28
        _56 = core::fmt::ArgumentV1::<'_>::new_debug::<&[i32]>(move _57) -> bb16; // scope 2 at ui/array-slice-vec/repeated-vector-syntax.rs:12:22: 12:28
                                         // mir::Constant
                                         // + span: ui/array-slice-vec/repeated-vector-syntax.rs:12:22: 12:28
                                         // + user_ty: UserType(5)
                                         // + literal: Const { ty: for<'b> fn(&'b &[i32]) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_debug::<&[i32]>}, val: Value(<ZST>) }
    }

    bb16: {
        _55 = [move _56];                // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _54 = &_55;                      // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _53 = _54;                       // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _52 = move _53 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _48 = Arguments::<'_>::new_v1(move _49, move _52) -> bb17; // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // + user_ty: UserType(4)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb17: {
        _47 = _print(move _48) -> bb18;  // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:62
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:27
                                         // + literal: Const { ty: for<'a> fn(Arguments<'a>) {_print}, val: Value(<ZST>) }
    }

    bb18: {
        return;                          // scope 0 at ui/array-slice-vec/repeated-vector-syntax.rs:13:2: 13:2
    }
}

promoted[0] in main: &[&str; 2] = {
    let mut _0: &[&str; 2];              // return place in scope 0 at ui/array-slice-vec/repeated-vector-syntax.rs:12:14: 12:20
    let mut _1: [&str; 2];               // in scope 0 at ui/array-slice-vec/repeated-vector-syntax.rs:12:14: 12:20

    bb0: {
        _1 = [const "", const "\n"];     // scope 0 at ui/array-slice-vec/repeated-vector-syntax.rs:12:14: 12:20
                                         // mir::Constant
                                         // + span: ui/array-slice-vec/repeated-vector-syntax.rs:12:14: 12:20
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
                                         // mir::Constant
                                         // + span: ui/array-slice-vec/repeated-vector-syntax.rs:12:14: 12:20
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at ui/array-slice-vec/repeated-vector-syntax.rs:12:14: 12:20
        return;                          // scope 0 at ui/array-slice-vec/repeated-vector-syntax.rs:12:14: 12:20
    }
}

promoted[1] in main: &[core::fmt::ArgumentV1<'_>; 0] = {
    let mut _0: &[core::fmt::ArgumentV1<'_>; 0]; // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _1: [core::fmt::ArgumentV1<'_>; 0]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61

    bb0: {
        _1 = [];                         // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    }
}

promoted[2] in main: &[&str; 1] = {
    let mut _0: &[&str; 1];              // return place in scope 0 at ui/array-slice-vec/repeated-vector-syntax.rs:11:14: 11:17
    let mut _1: [&str; 1];               // in scope 0 at ui/array-slice-vec/repeated-vector-syntax.rs:11:14: 11:17

    bb0: {
        _1 = [const "]\n"];              // scope 0 at ui/array-slice-vec/repeated-vector-syntax.rs:11:14: 11:17
                                         // mir::Constant
                                         // + span: ui/array-slice-vec/repeated-vector-syntax.rs:11:14: 11:17
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at ui/array-slice-vec/repeated-vector-syntax.rs:11:14: 11:17
        return;                          // scope 0 at ui/array-slice-vec/repeated-vector-syntax.rs:11:14: 11:17
    }
}

promoted[3] in main: &[&str; 2] = {
    let mut _0: &[&str; 2];              // return place in scope 0 at ui/array-slice-vec/repeated-vector-syntax.rs:9:16: 9:24
    let mut _1: [&str; 2];               // in scope 0 at ui/array-slice-vec/repeated-vector-syntax.rs:9:16: 9:24

    bb0: {
        _1 = [const "", const ", "];     // scope 0 at ui/array-slice-vec/repeated-vector-syntax.rs:9:16: 9:24
                                         // mir::Constant
                                         // + span: ui/array-slice-vec/repeated-vector-syntax.rs:9:16: 9:24
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
                                         // mir::Constant
                                         // + span: ui/array-slice-vec/repeated-vector-syntax.rs:9:16: 9:24
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at ui/array-slice-vec/repeated-vector-syntax.rs:9:16: 9:24
        return;                          // scope 0 at ui/array-slice-vec/repeated-vector-syntax.rs:9:16: 9:24
    }
}

promoted[4] in main: &[core::fmt::ArgumentV1<'_>; 0] = {
    let mut _0: &[core::fmt::ArgumentV1<'_>; 0]; // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:81:28: 81:58
    let mut _1: [core::fmt::ArgumentV1<'_>; 0]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:81:28: 81:58

    bb0: {
        _1 = [];                         // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:81:28: 81:58
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:81:28: 81:58
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:81:28: 81:58
    }
}

promoted[5] in main: &[&str; 1] = {
    let mut _0: &[&str; 1];              // return place in scope 0 at ui/array-slice-vec/repeated-vector-syntax.rs:7:12: 7:15
    let mut _1: [&str; 1];               // in scope 0 at ui/array-slice-vec/repeated-vector-syntax.rs:7:12: 7:15

    bb0: {
        _1 = [const "["];                // scope 0 at ui/array-slice-vec/repeated-vector-syntax.rs:7:12: 7:15
                                         // mir::Constant
                                         // + span: ui/array-slice-vec/repeated-vector-syntax.rs:7:12: 7:15
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at ui/array-slice-vec/repeated-vector-syntax.rs:7:12: 7:15
        return;                          // scope 0 at ui/array-slice-vec/repeated-vector-syntax.rs:7:12: 7:15
    }
}

main::{constant#0}: usize = {
    let mut _0: usize;                   // return place in scope 0 at ui/array-slice-vec/repeated-vector-syntax.rs:4:23: 4:26

    bb0: {
        _0 = const 512_usize;            // scope 0 at ui/array-slice-vec/repeated-vector-syntax.rs:4:23: 4:26
        return;                          // scope 0 at ui/array-slice-vec/repeated-vector-syntax.rs:4:23: 4:26
    }
}

main::{constant#1}: usize = {
    let mut _0: usize;                   // return place in scope 0 at ui/array-slice-vec/repeated-vector-syntax.rs:5:18: 5:19

    bb0: {
        _0 = const 1_usize;              // scope 0 at ui/array-slice-vec/repeated-vector-syntax.rs:5:18: 5:19
        return;                          // scope 0 at ui/array-slice-vec/repeated-vector-syntax.rs:5:18: 5:19
    }
}
