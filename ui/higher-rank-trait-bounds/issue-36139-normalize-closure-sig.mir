// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
fn m(_1: F) -> () {
    let mut _0: ();                      // return place in scope 0 at ui/higher-rank-trait-bounds/issue-36139-normalize-closure-sig.rs:13:5: 13:5

    bb0: {
        drop(_1) -> bb1;                 // scope 0 at ui/higher-rank-trait-bounds/issue-36139-normalize-closure-sig.rs:14:55: 14:56
    }

    bb1: {
        return;                          // scope 0 at ui/higher-rank-trait-bounds/issue-36139-normalize-closure-sig.rs:14:56: 14:56
    }
}

fn main() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/higher-rank-trait-bounds/issue-36139-normalize-closure-sig.rs:17:11: 17:11
    let _1: ();                          // in scope 0 at ui/higher-rank-trait-bounds/issue-36139-normalize-closure-sig.rs:18:5: 18:37
    let mut _2: [closure@ui/higher-rank-trait-bounds/issue-36139-normalize-closure-sig.rs:18:20: 18:23]; // in scope 0 at ui/higher-rank-trait-bounds/issue-36139-normalize-closure-sig.rs:18:20: 18:36

    bb0: {
        _1 = m::<usize, S, [closure@ui/higher-rank-trait-bounds/issue-36139-normalize-closure-sig.rs:18:20: 18:23]>(move _2) -> bb1; // scope 0 at ui/higher-rank-trait-bounds/issue-36139-normalize-closure-sig.rs:18:5: 18:37
                                         // mir::Constant
                                         // + span: ui/higher-rank-trait-bounds/issue-36139-normalize-closure-sig.rs:18:5: 18:19
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: fn([closure@ui/higher-rank-trait-bounds/issue-36139-normalize-closure-sig.rs:18:20: 18:23]) {m::<usize, S, [closure@ui/higher-rank-trait-bounds/issue-36139-normalize-closure-sig.rs:18:20: 18:23]>}, val: Value(<ZST>) }
    }

    bb1: {
        return;                          // scope 0 at ui/higher-rank-trait-bounds/issue-36139-normalize-closure-sig.rs:19:2: 19:2
    }
}

fn main::{closure#0}(_1: &mut [closure@ui/higher-rank-trait-bounds/issue-36139-normalize-closure-sig.rs:18:20: 18:23], _2: &mut usize) -> () {
    debug x => _2;                       // in scope 0 at ui/higher-rank-trait-bounds/issue-36139-normalize-closure-sig.rs:18:21: 18:22
    let mut _0: ();                      // return place in scope 0 at ui/higher-rank-trait-bounds/issue-36139-normalize-closure-sig.rs:18:24: 18:24
    let mut _3: (usize, bool);           // in scope 0 at ui/higher-rank-trait-bounds/issue-36139-normalize-closure-sig.rs:18:26: 18:33

    bb0: {
        _3 = CheckedAdd((*_2), const 1_usize); // scope 0 at ui/higher-rank-trait-bounds/issue-36139-normalize-closure-sig.rs:18:26: 18:33
        assert(!move (_3.1: bool), "attempt to compute `{} + {}`, which would overflow", (*_2), const 1_usize) -> bb1; // scope 0 at ui/higher-rank-trait-bounds/issue-36139-normalize-closure-sig.rs:18:26: 18:33
    }

    bb1: {
        (*_2) = move (_3.0: usize);      // scope 0 at ui/higher-rank-trait-bounds/issue-36139-normalize-closure-sig.rs:18:26: 18:33
        return;                          // scope 0 at ui/higher-rank-trait-bounds/issue-36139-normalize-closure-sig.rs:18:36: 18:36
    }
}
