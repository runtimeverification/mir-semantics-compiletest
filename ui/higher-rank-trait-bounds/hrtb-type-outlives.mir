// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
fn Foo::foo(_1: &Self, _2: X) -> () {
    debug self => _1;                    // in scope 0 at ui/higher-rank-trait-bounds/hrtb-type-outlives.rs:9:12: 9:17
    debug x => _2;                       // in scope 0 at ui/higher-rank-trait-bounds/hrtb-type-outlives.rs:9:19: 9:20
    let mut _0: ();                      // return place in scope 0 at ui/higher-rank-trait-bounds/hrtb-type-outlives.rs:9:25: 9:25

    bb0: {
        drop(_2) -> bb1;                 // scope 0 at ui/higher-rank-trait-bounds/hrtb-type-outlives.rs:9:27: 9:28
    }

    bb1: {
        return;                          // scope 0 at ui/higher-rank-trait-bounds/hrtb-type-outlives.rs:9:28: 9:28
    }
}

fn want_foo() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/higher-rank-trait-bounds/hrtb-type-outlives.rs:13:5: 13:5

    bb0: {
        return;                          // scope 0 at ui/higher-rank-trait-bounds/hrtb-type-outlives.rs:15:2: 15:2
    }
}

fn one() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/higher-rank-trait-bounds/hrtb-type-outlives.rs:28:10: 28:10
    let _1: ();                          // in scope 0 at ui/higher-rank-trait-bounds/hrtb-type-outlives.rs:29:5: 29:36

    bb0: {
        _1 = want_foo::<SomeStruct<usize>>() -> bb1; // scope 0 at ui/higher-rank-trait-bounds/hrtb-type-outlives.rs:29:5: 29:36
                                         // mir::Constant
                                         // + span: ui/higher-rank-trait-bounds/hrtb-type-outlives.rs:29:5: 29:34
                                         // + literal: Const { ty: fn() {want_foo::<SomeStruct<usize>>}, val: Value(<ZST>) }
    }

    bb1: {
        return;                          // scope 0 at ui/higher-rank-trait-bounds/hrtb-type-outlives.rs:30:2: 30:2
    }
}

fn two() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/higher-rank-trait-bounds/hrtb-type-outlives.rs:42:10: 42:10
    let _1: ();                          // in scope 0 at ui/higher-rank-trait-bounds/hrtb-type-outlives.rs:43:5: 43:39

    bb0: {
        _1 = want_foo::<AnotherStruct<usize>>() -> bb1; // scope 0 at ui/higher-rank-trait-bounds/hrtb-type-outlives.rs:43:5: 43:39
                                         // mir::Constant
                                         // + span: ui/higher-rank-trait-bounds/hrtb-type-outlives.rs:43:5: 43:37
                                         // + literal: Const { ty: fn() {want_foo::<AnotherStruct<usize>>}, val: Value(<ZST>) }
    }

    bb1: {
        return;                          // scope 0 at ui/higher-rank-trait-bounds/hrtb-type-outlives.rs:44:2: 44:2
    }
}

fn main() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/higher-rank-trait-bounds/hrtb-type-outlives.rs:46:11: 46:11

    bb0: {
        return;                          // scope 0 at ui/higher-rank-trait-bounds/hrtb-type-outlives.rs:46:14: 46:14
    }
}
