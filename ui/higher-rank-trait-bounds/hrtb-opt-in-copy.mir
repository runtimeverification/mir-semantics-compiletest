// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
fn <impl at ui/higher-rank-trait-bounds/hrtb-opt-in-copy.rs:14:16: 14:21>::clone(_1: &Foo<T>) -> Foo<T> {
    debug self => _1;                    // in scope 0 at ui/higher-rank-trait-bounds/hrtb-opt-in-copy.rs:14:16: 14:21
    let mut _0: Foo<T>;                  // return place in scope 0 at ui/higher-rank-trait-bounds/hrtb-opt-in-copy.rs:14:16: 14:21
    let mut _2: T;                       // in scope 0 at ui/higher-rank-trait-bounds/hrtb-opt-in-copy.rs:15:17: 15:21
    let mut _3: &T;                      // in scope 0 at ui/higher-rank-trait-bounds/hrtb-opt-in-copy.rs:15:17: 15:21
    let _4: &T;                          // in scope 0 at ui/higher-rank-trait-bounds/hrtb-opt-in-copy.rs:15:17: 15:21

    bb0: {
        _4 = &((*_1).0: T);              // scope 0 at ui/higher-rank-trait-bounds/hrtb-opt-in-copy.rs:15:17: 15:21
        _3 = _4;                         // scope 0 at ui/higher-rank-trait-bounds/hrtb-opt-in-copy.rs:15:17: 15:21
        _2 = <T as Clone>::clone(move _3) -> bb1; // scope 0 at ui/higher-rank-trait-bounds/hrtb-opt-in-copy.rs:15:17: 15:21
                                         // mir::Constant
                                         // + span: ui/higher-rank-trait-bounds/hrtb-opt-in-copy.rs:15:17: 15:21
                                         // + literal: Const { ty: for<'a> fn(&'a T) -> T {<T as Clone>::clone}, val: Value(<ZST>) }
    }

    bb1: {
        _0 = Foo::<T> { x: move _2 };    // scope 0 at ui/higher-rank-trait-bounds/hrtb-opt-in-copy.rs:14:16: 14:21
        return;                          // scope 0 at ui/higher-rank-trait-bounds/hrtb-opt-in-copy.rs:14:21: 14:21
    }
}

fn <impl at ui/higher-rank-trait-bounds/hrtb-opt-in-copy.rs:23:16: 23:21>::clone(_1: &Bar<'_>) -> Bar<'_> {
    debug self => _1;                    // in scope 0 at ui/higher-rank-trait-bounds/hrtb-opt-in-copy.rs:23:16: 23:21
    let mut _0: Bar<'_>;                 // return place in scope 0 at ui/higher-rank-trait-bounds/hrtb-opt-in-copy.rs:23:16: 23:21
    scope 1 {
    }

    bb0: {
        _0 = (*_1);                      // scope 1 at ui/higher-rank-trait-bounds/hrtb-opt-in-copy.rs:23:16: 23:21
        return;                          // scope 0 at ui/higher-rank-trait-bounds/hrtb-opt-in-copy.rs:23:21: 23:21
    }
}

fn main() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/higher-rank-trait-bounds/hrtb-opt-in-copy.rs:28:11: 28:11

    bb0: {
        return;                          // scope 0 at ui/higher-rank-trait-bounds/hrtb-opt-in-copy.rs:28:14: 28:14
    }
}

fn TyS::Boop(_1: PhantomData<*mut &()>) -> TyS<'_> {
    let mut _0: TyS<'_>;                 // return place in scope 0 at ui/higher-rank-trait-bounds/hrtb-opt-in-copy.rs:20:5: 20:9

    bb0: {
        _0 = TyS::<'_>::Boop(move _1);   // scope 0 at ui/higher-rank-trait-bounds/hrtb-opt-in-copy.rs:20:5: 20:9
        return;                          // scope 0 at ui/higher-rank-trait-bounds/hrtb-opt-in-copy.rs:20:5: 20:9
    }
}

// MIR FOR CTFE
fn TyS::Boop(_1: PhantomData<*mut &()>) -> TyS<'_> {
    let mut _0: TyS<'_>;                 // return place in scope 0 at ui/higher-rank-trait-bounds/hrtb-opt-in-copy.rs:20:5: 20:9

    bb0: {
        _0 = TyS::<'_>::Boop(move _1);   // scope 0 at ui/higher-rank-trait-bounds/hrtb-opt-in-copy.rs:20:5: 20:9
        return;                          // scope 0 at ui/higher-rank-trait-bounds/hrtb-opt-in-copy.rs:20:5: 20:9
    }
}

fn Bar::Baz(_1: Foo<&TyS<'_>>) -> Bar<'_> {
    let mut _0: Bar<'_>;                 // return place in scope 0 at ui/higher-rank-trait-bounds/hrtb-opt-in-copy.rs:25:5: 25:8

    bb0: {
        _0 = Bar::<'_>::Baz(move _1);    // scope 0 at ui/higher-rank-trait-bounds/hrtb-opt-in-copy.rs:25:5: 25:8
        return;                          // scope 0 at ui/higher-rank-trait-bounds/hrtb-opt-in-copy.rs:25:5: 25:8
    }
}

// MIR FOR CTFE
fn Bar::Baz(_1: Foo<&TyS<'_>>) -> Bar<'_> {
    let mut _0: Bar<'_>;                 // return place in scope 0 at ui/higher-rank-trait-bounds/hrtb-opt-in-copy.rs:25:5: 25:8

    bb0: {
        _0 = Bar::<'_>::Baz(move _1);    // scope 0 at ui/higher-rank-trait-bounds/hrtb-opt-in-copy.rs:25:5: 25:8
        return;                          // scope 0 at ui/higher-rank-trait-bounds/hrtb-opt-in-copy.rs:25:5: 25:8
    }
}
