// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
fn lifetime() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/higher-rank-trait-bounds/issue-42114.rs:4:1: 4:1

    bb0: {
        return;                          // scope 0 at ui/higher-rank-trait-bounds/issue-42114.rs:8:2: 8:2
    }
}

fn doesnt_work() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/higher-rank-trait-bounds/issue-42114.rs:11:1: 11:1

    bb0: {
        return;                          // scope 0 at ui/higher-rank-trait-bounds/issue-42114.rs:15:2: 15:2
    }
}

fn main() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/higher-rank-trait-bounds/issue-42114.rs:17:11: 17:11
    let _1: ();                          // in scope 0 at ui/higher-rank-trait-bounds/issue-42114.rs:18:5: 18:15
    let _2: ();                          // in scope 0 at ui/higher-rank-trait-bounds/issue-42114.rs:19:5: 19:18

    bb0: {
        _1 = lifetime::<'_>() -> bb1;    // scope 0 at ui/higher-rank-trait-bounds/issue-42114.rs:18:5: 18:15
                                         // mir::Constant
                                         // + span: ui/higher-rank-trait-bounds/issue-42114.rs:18:5: 18:13
                                         // + literal: Const { ty: fn() {lifetime::<'_>}, val: Value(<ZST>) }
    }

    bb1: {
        _2 = doesnt_work() -> bb2;       // scope 0 at ui/higher-rank-trait-bounds/issue-42114.rs:19:5: 19:18
                                         // mir::Constant
                                         // + span: ui/higher-rank-trait-bounds/issue-42114.rs:19:5: 19:16
                                         // + literal: Const { ty: fn() {doesnt_work}, val: Value(<ZST>) }
    }

    bb2: {
        return;                          // scope 0 at ui/higher-rank-trait-bounds/issue-42114.rs:20:2: 20:2
    }
}
