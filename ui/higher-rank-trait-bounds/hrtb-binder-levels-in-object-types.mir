// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
fn Typer::method(_1: &Self, _2: &isize) -> &isize {
    debug self => _1;                    // in scope 0 at ui/higher-rank-trait-bounds/hrtb-binder-levels-in-object-types.rs:12:15: 12:20
    debug data => _2;                    // in scope 0 at ui/higher-rank-trait-bounds/hrtb-binder-levels-in-object-types.rs:12:22: 12:26
    let mut _0: &isize;                  // return place in scope 0 at ui/higher-rank-trait-bounds/hrtb-binder-levels-in-object-types.rs:12:44: 12:55

    bb0: {
        _0 = _2;                         // scope 0 at ui/higher-rank-trait-bounds/hrtb-binder-levels-in-object-types.rs:12:58: 12:62
        return;                          // scope 0 at ui/higher-rank-trait-bounds/hrtb-binder-levels-in-object-types.rs:12:64: 12:64
    }
}

fn g(_1: &dyn Typer<'_>) -> () {
    debug typer => _1;                   // in scope 0 at ui/higher-rank-trait-bounds/hrtb-binder-levels-in-object-types.rs:22:12: 22:17
    let mut _0: ();                      // return place in scope 0 at ui/higher-rank-trait-bounds/hrtb-binder-levels-in-object-types.rs:22:37: 22:37

    bb0: {
        return;                          // scope 0 at ui/higher-rank-trait-bounds/hrtb-binder-levels-in-object-types.rs:23:2: 23:2
    }
}

fn check_static_type(_1: &Tcx<'_>) -> () {
    debug tcx => _1;                     // in scope 0 at ui/higher-rank-trait-bounds/hrtb-binder-levels-in-object-types.rs:25:26: 25:29
    let mut _0: ();                      // return place in scope 0 at ui/higher-rank-trait-bounds/hrtb-binder-levels-in-object-types.rs:25:41: 25:41
    let mut _2: &dyn Typer<'_>;          // in scope 0 at ui/higher-rank-trait-bounds/hrtb-binder-levels-in-object-types.rs:26:7: 26:10
    let mut _3: &Tcx<'_>;                // in scope 0 at ui/higher-rank-trait-bounds/hrtb-binder-levels-in-object-types.rs:26:7: 26:10

    bb0: {
        _3 = _1;                         // scope 0 at ui/higher-rank-trait-bounds/hrtb-binder-levels-in-object-types.rs:26:7: 26:10
        _2 = move _3 as &dyn Typer<'_> (Pointer(Unsize)); // scope 0 at ui/higher-rank-trait-bounds/hrtb-binder-levels-in-object-types.rs:26:7: 26:10
        _0 = g(move _2) -> bb1;          // scope 0 at ui/higher-rank-trait-bounds/hrtb-binder-levels-in-object-types.rs:26:5: 26:11
                                         // mir::Constant
                                         // + span: ui/higher-rank-trait-bounds/hrtb-binder-levels-in-object-types.rs:26:5: 26:6
                                         // + literal: Const { ty: for<'a, 'tcx> fn(&'a (dyn Typer<'tcx> + 'a)) {g}, val: Value(<ZST>) }
    }

    bb1: {
        return;                          // scope 0 at ui/higher-rank-trait-bounds/hrtb-binder-levels-in-object-types.rs:27:2: 27:2
    }
}

fn main() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/higher-rank-trait-bounds/hrtb-binder-levels-in-object-types.rs:29:11: 29:11

    bb0: {
        return;                          // scope 0 at ui/higher-rank-trait-bounds/hrtb-binder-levels-in-object-types.rs:29:14: 29:14
    }
}
