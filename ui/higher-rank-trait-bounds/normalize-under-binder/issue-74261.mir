// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
fn <impl at ui/higher-rank-trait-bounds/normalize-under-binder/issue-74261.rs:13:1: 13:21>::b(_1: T) -> S<'_> {
    debug self => _1;                    // in scope 0 at ui/higher-rank-trait-bounds/normalize-under-binder/issue-74261.rs:15:10: 15:14
    let mut _0: S<'_>;                   // return place in scope 0 at ui/higher-rank-trait-bounds/normalize-under-binder/issue-74261.rs:15:19: 15:26

    bb0: {
        return;                          // scope 0 at ui/higher-rank-trait-bounds/normalize-under-binder/issue-74261.rs:17:6: 17:6
    }
}

fn s(_1: TT, _2: F) -> () {
    debug t => _1;                       // in scope 0 at ui/higher-rank-trait-bounds/normalize-under-binder/issue-74261.rs:20:13: 20:14
    debug f => _2;                       // in scope 0 at ui/higher-rank-trait-bounds/normalize-under-binder/issue-74261.rs:20:20: 20:21
    let mut _0: ();                      // return place in scope 0 at ui/higher-rank-trait-bounds/normalize-under-binder/issue-74261.rs:21:1: 21:1
    let _3: ();                          // in scope 0 at ui/higher-rank-trait-bounds/normalize-under-binder/issue-74261.rs:25:5: 25:13
    let mut _4: F;                       // in scope 0 at ui/higher-rank-trait-bounds/normalize-under-binder/issue-74261.rs:25:5: 25:6
    let mut _5: (<TT as A<'_>>::B,);     // in scope 0 at ui/higher-rank-trait-bounds/normalize-under-binder/issue-74261.rs:25:5: 25:13
    let mut _6: <TT as A<'_>>::B;        // in scope 0 at ui/higher-rank-trait-bounds/normalize-under-binder/issue-74261.rs:25:7: 25:12
    let mut _7: TT;                      // in scope 0 at ui/higher-rank-trait-bounds/normalize-under-binder/issue-74261.rs:25:7: 25:8
    let mut _8: bool;                    // in scope 0 at ui/higher-rank-trait-bounds/normalize-under-binder/issue-74261.rs:25:12: 25:13

    bb0: {
        _8 = const false;                // scope 0 at ui/higher-rank-trait-bounds/normalize-under-binder/issue-74261.rs:25:5: 25:13
        _8 = const true;                 // scope 0 at ui/higher-rank-trait-bounds/normalize-under-binder/issue-74261.rs:25:5: 25:6
        _4 = move _2;                    // scope 0 at ui/higher-rank-trait-bounds/normalize-under-binder/issue-74261.rs:25:5: 25:6
        _7 = move _1;                    // scope 0 at ui/higher-rank-trait-bounds/normalize-under-binder/issue-74261.rs:25:7: 25:8
        _6 = <TT as A<'_>>::b(move _7) -> [return: bb1, unwind: bb5]; // scope 0 at ui/higher-rank-trait-bounds/normalize-under-binder/issue-74261.rs:25:7: 25:12
                                         // mir::Constant
                                         // + span: ui/higher-rank-trait-bounds/normalize-under-binder/issue-74261.rs:25:9: 25:10
                                         // + literal: Const { ty: fn(TT) -> <TT as A<'_>>::B {<TT as A<'_>>::b}, val: Value(<ZST>) }
    }

    bb1: {
        _5 = (move _6,);                 // scope 0 at ui/higher-rank-trait-bounds/normalize-under-binder/issue-74261.rs:25:5: 25:13
        _8 = const false;                // scope 0 at ui/higher-rank-trait-bounds/normalize-under-binder/issue-74261.rs:25:5: 25:13
        _3 = <F as FnOnce<(<TT as A<'_>>::B,)>>::call_once(move _4, move _5) -> [return: bb2, unwind: bb5]; // scope 0 at ui/higher-rank-trait-bounds/normalize-under-binder/issue-74261.rs:25:5: 25:13
                                         // mir::Constant
                                         // + span: ui/higher-rank-trait-bounds/normalize-under-binder/issue-74261.rs:25:5: 25:6
                                         // + literal: Const { ty: extern "rust-call" fn(F, (<TT as A<'_>>::B,)) -> <F as FnOnce<(<TT as A<'_>>::B,)>>::Output {<F as FnOnce<(<TT as A<'_>>::B,)>>::call_once}, val: Value(<ZST>) }
    }

    bb2: {
        _8 = const false;                // scope 0 at ui/higher-rank-trait-bounds/normalize-under-binder/issue-74261.rs:25:12: 25:13
        return;                          // scope 0 at ui/higher-rank-trait-bounds/normalize-under-binder/issue-74261.rs:26:2: 26:2
    }

    bb3 (cleanup): {
        resume;                          // scope 0 at ui/higher-rank-trait-bounds/normalize-under-binder/issue-74261.rs:20:1: 26:2
    }

    bb4 (cleanup): {
        drop(_4) -> bb3;                 // scope 0 at ui/higher-rank-trait-bounds/normalize-under-binder/issue-74261.rs:25:12: 25:13
    }

    bb5 (cleanup): {
        switchInt(_8) -> [0: bb3, otherwise: bb4]; // scope 0 at ui/higher-rank-trait-bounds/normalize-under-binder/issue-74261.rs:25:12: 25:13
    }
}

fn main() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/higher-rank-trait-bounds/normalize-under-binder/issue-74261.rs:28:11: 28:11
    let _1: ();                          // in scope 0 at ui/higher-rank-trait-bounds/normalize-under-binder/issue-74261.rs:29:5: 29:17
    let mut _2: T;                       // in scope 0 at ui/higher-rank-trait-bounds/normalize-under-binder/issue-74261.rs:29:7: 29:8
    let mut _3: [closure@ui/higher-rank-trait-bounds/normalize-under-binder/issue-74261.rs:29:10: 29:13]; // in scope 0 at ui/higher-rank-trait-bounds/normalize-under-binder/issue-74261.rs:29:10: 29:16

    bb0: {
        _1 = s::<T, [closure@ui/higher-rank-trait-bounds/normalize-under-binder/issue-74261.rs:29:10: 29:13]>(move _2, move _3) -> bb1; // scope 0 at ui/higher-rank-trait-bounds/normalize-under-binder/issue-74261.rs:29:5: 29:17
                                         // mir::Constant
                                         // + span: ui/higher-rank-trait-bounds/normalize-under-binder/issue-74261.rs:29:5: 29:6
                                         // + literal: Const { ty: fn(T, [closure@ui/higher-rank-trait-bounds/normalize-under-binder/issue-74261.rs:29:10: 29:13]) {s::<T, [closure@ui/higher-rank-trait-bounds/normalize-under-binder/issue-74261.rs:29:10: 29:13]>}, val: Value(<ZST>) }
    }

    bb1: {
        return;                          // scope 0 at ui/higher-rank-trait-bounds/normalize-under-binder/issue-74261.rs:30:2: 30:2
    }
}

fn main::{closure#0}(_1: [closure@ui/higher-rank-trait-bounds/normalize-under-binder/issue-74261.rs:29:10: 29:13], _2: S<'_>) -> () {
    let mut _0: ();                      // return place in scope 0 at ui/higher-rank-trait-bounds/normalize-under-binder/issue-74261.rs:29:14: 29:14

    bb0: {
        return;                          // scope 0 at ui/higher-rank-trait-bounds/normalize-under-binder/issue-74261.rs:29:16: 29:16
    }
}

fn S(_1: PhantomData<&()>) -> S<'_> {
    let mut _0: S<'_>;                   // return place in scope 0 at ui/higher-rank-trait-bounds/normalize-under-binder/issue-74261.rs:11:1: 11:13

    bb0: {
        _0 = S::<'_>(move _1);           // scope 0 at ui/higher-rank-trait-bounds/normalize-under-binder/issue-74261.rs:11:1: 11:13
        return;                          // scope 0 at ui/higher-rank-trait-bounds/normalize-under-binder/issue-74261.rs:11:1: 11:13
    }
}

// MIR FOR CTFE
fn S(_1: PhantomData<&()>) -> S<'_> {
    let mut _0: S<'_>;                   // return place in scope 0 at ui/higher-rank-trait-bounds/normalize-under-binder/issue-74261.rs:11:1: 11:13

    bb0: {
        _0 = S::<'_>(move _1);           // scope 0 at ui/higher-rank-trait-bounds/normalize-under-binder/issue-74261.rs:11:1: 11:13
        return;                          // scope 0 at ui/higher-rank-trait-bounds/normalize-under-binder/issue-74261.rs:11:1: 11:13
    }
}
