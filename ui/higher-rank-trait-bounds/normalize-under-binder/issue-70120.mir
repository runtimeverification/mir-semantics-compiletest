// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
fn <impl at ui/higher-rank-trait-bounds/normalize-under-binder/issue-70120.rs:10:1: 10:34>::gimme_value(_1: &MyStruct) -> &usize {
    debug self => _1;                    // in scope 0 at ui/higher-rank-trait-bounds/normalize-under-binder/issue-70120.rs:12:20: 12:25
    let mut _0: &usize;                  // return place in scope 0 at ui/higher-rank-trait-bounds/normalize-under-binder/issue-70120.rs:12:30: 12:42
    let mut _2: !;                       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:706:9: 706:52

    bb0: {
        _2 = core::panicking::panic(const "not implemented"); // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:706:9: 706:52
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:706:9: 706:33
                                         // + literal: Const { ty: fn(&'static str) -> ! {core::panicking::panic}, val: Value(<ZST>) }
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:706:34: 706:51
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
    }
}

fn meow(_1: T, _2: F) -> () {
    debug t => _1;                       // in scope 0 at ui/higher-rank-trait-bounds/normalize-under-binder/issue-70120.rs:17:15: 17:16
    debug f => _2;                       // in scope 0 at ui/higher-rank-trait-bounds/normalize-under-binder/issue-70120.rs:17:21: 17:22
    let mut _0: ();                      // return place in scope 0 at ui/higher-rank-trait-bounds/normalize-under-binder/issue-70120.rs:18:1: 18:1
    let _3: <T as MyTrait<'_>>::Output;  // in scope 0 at ui/higher-rank-trait-bounds/normalize-under-binder/issue-70120.rs:22:9: 22:10
    let mut _4: &T;                      // in scope 0 at ui/higher-rank-trait-bounds/normalize-under-binder/issue-70120.rs:22:13: 22:28
    let _5: ();                          // in scope 0 at ui/higher-rank-trait-bounds/normalize-under-binder/issue-70120.rs:23:5: 23:9
    let mut _6: &F;                      // in scope 0 at ui/higher-rank-trait-bounds/normalize-under-binder/issue-70120.rs:23:5: 23:6
    let mut _7: (<T as MyTrait<'_>>::Output,); // in scope 0 at ui/higher-rank-trait-bounds/normalize-under-binder/issue-70120.rs:23:5: 23:9
    let mut _8: <T as MyTrait<'_>>::Output; // in scope 0 at ui/higher-rank-trait-bounds/normalize-under-binder/issue-70120.rs:23:7: 23:8
    scope 1 {
        debug v => _3;                   // in scope 1 at ui/higher-rank-trait-bounds/normalize-under-binder/issue-70120.rs:22:9: 22:10
    }

    bb0: {
        _4 = &_1;                        // scope 0 at ui/higher-rank-trait-bounds/normalize-under-binder/issue-70120.rs:22:13: 22:28
        _3 = <T as MyTrait<'_>>::gimme_value(move _4) -> [return: bb1, unwind: bb5]; // scope 0 at ui/higher-rank-trait-bounds/normalize-under-binder/issue-70120.rs:22:13: 22:28
                                         // mir::Constant
                                         // + span: ui/higher-rank-trait-bounds/normalize-under-binder/issue-70120.rs:22:15: 22:26
                                         // + literal: Const { ty: for<'a> fn(&'a T) -> <T as MyTrait<'_>>::Output {<T as MyTrait<'_>>::gimme_value}, val: Value(<ZST>) }
    }

    bb1: {
        _6 = &_2;                        // scope 1 at ui/higher-rank-trait-bounds/normalize-under-binder/issue-70120.rs:23:5: 23:6
        _8 = move _3;                    // scope 1 at ui/higher-rank-trait-bounds/normalize-under-binder/issue-70120.rs:23:7: 23:8
        _7 = (move _8,);                 // scope 1 at ui/higher-rank-trait-bounds/normalize-under-binder/issue-70120.rs:23:5: 23:9
        _5 = <F as Fn<(<T as MyTrait<'_>>::Output,)>>::call(move _6, move _7) -> [return: bb2, unwind: bb5]; // scope 1 at ui/higher-rank-trait-bounds/normalize-under-binder/issue-70120.rs:23:5: 23:9
                                         // mir::Constant
                                         // + span: ui/higher-rank-trait-bounds/normalize-under-binder/issue-70120.rs:23:5: 23:6
                                         // + literal: Const { ty: for<'a> extern "rust-call" fn(&'a F, (<T as MyTrait<'_>>::Output,)) -> <F as FnOnce<(<T as MyTrait<'_>>::Output,)>>::Output {<F as Fn<(<T as MyTrait<'_>>::Output,)>>::call}, val: Value(<ZST>) }
    }

    bb2: {
        drop(_2) -> [return: bb3, unwind: bb6]; // scope 0 at ui/higher-rank-trait-bounds/normalize-under-binder/issue-70120.rs:24:1: 24:2
    }

    bb3: {
        drop(_1) -> bb4;                 // scope 0 at ui/higher-rank-trait-bounds/normalize-under-binder/issue-70120.rs:24:1: 24:2
    }

    bb4: {
        return;                          // scope 0 at ui/higher-rank-trait-bounds/normalize-under-binder/issue-70120.rs:24:2: 24:2
    }

    bb5 (cleanup): {
        drop(_2) -> bb6;                 // scope 0 at ui/higher-rank-trait-bounds/normalize-under-binder/issue-70120.rs:24:1: 24:2
    }

    bb6 (cleanup): {
        drop(_1) -> bb7;                 // scope 0 at ui/higher-rank-trait-bounds/normalize-under-binder/issue-70120.rs:24:1: 24:2
    }

    bb7 (cleanup): {
        resume;                          // scope 0 at ui/higher-rank-trait-bounds/normalize-under-binder/issue-70120.rs:17:1: 24:2
    }
}

fn main() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/higher-rank-trait-bounds/normalize-under-binder/issue-70120.rs:26:11: 26:11
    let _1: MyStruct;                    // in scope 0 at ui/higher-rank-trait-bounds/normalize-under-binder/issue-70120.rs:27:9: 27:14
    let mut _2: MyStruct;                // in scope 0 at ui/higher-rank-trait-bounds/normalize-under-binder/issue-70120.rs:28:10: 28:15
    let mut _3: [closure@ui/higher-rank-trait-bounds/normalize-under-binder/issue-70120.rs:28:17: 28:22]; // in scope 0 at ui/higher-rank-trait-bounds/normalize-under-binder/issue-70120.rs:28:17: 30:6
    scope 1 {
        debug struc => _1;               // in scope 1 at ui/higher-rank-trait-bounds/normalize-under-binder/issue-70120.rs:27:9: 27:14
    }

    bb0: {
        _0 = meow::<MyStruct, [closure@ui/higher-rank-trait-bounds/normalize-under-binder/issue-70120.rs:28:17: 28:22]>(move _2, move _3) -> bb1; // scope 1 at ui/higher-rank-trait-bounds/normalize-under-binder/issue-70120.rs:28:5: 30:7
                                         // mir::Constant
                                         // + span: ui/higher-rank-trait-bounds/normalize-under-binder/issue-70120.rs:28:5: 28:9
                                         // + literal: Const { ty: fn(MyStruct, [closure@ui/higher-rank-trait-bounds/normalize-under-binder/issue-70120.rs:28:17: 28:22]) {meow::<MyStruct, [closure@ui/higher-rank-trait-bounds/normalize-under-binder/issue-70120.rs:28:17: 28:22]>}, val: Value(<ZST>) }
    }

    bb1: {
        return;                          // scope 0 at ui/higher-rank-trait-bounds/normalize-under-binder/issue-70120.rs:31:2: 31:2
    }
}

fn main::{closure#0}(_1: &[closure@ui/higher-rank-trait-bounds/normalize-under-binder/issue-70120.rs:28:17: 28:22], _2: &usize) -> () {
    debug foo => _2;                     // in scope 0 at ui/higher-rank-trait-bounds/normalize-under-binder/issue-70120.rs:28:18: 28:21
    let mut _0: ();                      // return place in scope 0 at ui/higher-rank-trait-bounds/normalize-under-binder/issue-70120.rs:28:23: 28:23
    let _3: ();                          // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:62
    let mut _4: std::fmt::Arguments<'_>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _5: &[&str];                 // in scope 0 at ui/higher-rank-trait-bounds/normalize-under-binder/issue-70120.rs:29:18: 29:24
    let mut _6: &[&str; 2];              // in scope 0 at ui/higher-rank-trait-bounds/normalize-under-binder/issue-70120.rs:29:18: 29:24
    let _7: &[&str; 2];                  // in scope 0 at ui/higher-rank-trait-bounds/normalize-under-binder/issue-70120.rs:29:18: 29:24
    let mut _8: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _9: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let _10: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let _11: [core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _12: core::fmt::ArgumentV1<'_>; // in scope 0 at ui/higher-rank-trait-bounds/normalize-under-binder/issue-70120.rs:29:26: 29:29
    let mut _13: &&usize;                // in scope 0 at ui/higher-rank-trait-bounds/normalize-under-binder/issue-70120.rs:29:26: 29:29
    let _14: &&usize;                    // in scope 0 at ui/higher-rank-trait-bounds/normalize-under-binder/issue-70120.rs:29:26: 29:29
    let mut _15: &[&str; 2];             // in scope 0 at ui/higher-rank-trait-bounds/normalize-under-binder/issue-70120.rs:29:18: 29:24

    bb0: {
        _15 = const _;                   // scope 0 at ui/higher-rank-trait-bounds/normalize-under-binder/issue-70120.rs:29:18: 29:24
                                         // mir::Constant
                                         // + span: ui/higher-rank-trait-bounds/normalize-under-binder/issue-70120.rs:29:18: 29:24
                                         // + literal: Const { ty: &[&str; 2], val: Unevaluated(main::{closure#0}, [<closure_kind>, <closure_signature>, <upvars>], Some(promoted[0])) }
        _7 = _15;                        // scope 0 at ui/higher-rank-trait-bounds/normalize-under-binder/issue-70120.rs:29:18: 29:24
        _6 = _7;                         // scope 0 at ui/higher-rank-trait-bounds/normalize-under-binder/issue-70120.rs:29:18: 29:24
        _5 = move _6 as &[&str] (Pointer(Unsize)); // scope 0 at ui/higher-rank-trait-bounds/normalize-under-binder/issue-70120.rs:29:18: 29:24
        _14 = &_2;                       // scope 0 at ui/higher-rank-trait-bounds/normalize-under-binder/issue-70120.rs:29:26: 29:29
        _13 = _14;                       // scope 0 at ui/higher-rank-trait-bounds/normalize-under-binder/issue-70120.rs:29:26: 29:29
        _12 = core::fmt::ArgumentV1::<'_>::new_debug::<&usize>(move _13) -> bb1; // scope 0 at ui/higher-rank-trait-bounds/normalize-under-binder/issue-70120.rs:29:26: 29:29
                                         // mir::Constant
                                         // + span: ui/higher-rank-trait-bounds/normalize-under-binder/issue-70120.rs:29:26: 29:29
                                         // + user_ty: UserType(1)
                                         // + literal: Const { ty: for<'b> fn(&'b &usize) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_debug::<&usize>}, val: Value(<ZST>) }
    }

    bb1: {
        _11 = [move _12];                // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _10 = &_11;                      // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _9 = _10;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _8 = move _9 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _4 = Arguments::<'_>::new_v1(move _5, move _8) -> bb2; // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb2: {
        _3 = _print(move _4) -> bb3;     // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:62
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:27
                                         // + literal: Const { ty: for<'a> fn(Arguments<'a>) {_print}, val: Value(<ZST>) }
    }

    bb3: {
        return;                          // scope 0 at ui/higher-rank-trait-bounds/normalize-under-binder/issue-70120.rs:30:6: 30:6
    }
}

promoted[0] in main::{closure#0}: &[&str; 2] = {
    let mut _0: &[&str; 2];              // return place in scope 0 at ui/higher-rank-trait-bounds/normalize-under-binder/issue-70120.rs:29:18: 29:24
    let mut _1: [&str; 2];               // in scope 0 at ui/higher-rank-trait-bounds/normalize-under-binder/issue-70120.rs:29:18: 29:24

    bb0: {
        _1 = [const "", const "\n"];     // scope 0 at ui/higher-rank-trait-bounds/normalize-under-binder/issue-70120.rs:29:18: 29:24
                                         // mir::Constant
                                         // + span: ui/higher-rank-trait-bounds/normalize-under-binder/issue-70120.rs:29:18: 29:24
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
                                         // mir::Constant
                                         // + span: ui/higher-rank-trait-bounds/normalize-under-binder/issue-70120.rs:29:18: 29:24
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at ui/higher-rank-trait-bounds/normalize-under-binder/issue-70120.rs:29:18: 29:24
        return;                          // scope 0 at ui/higher-rank-trait-bounds/normalize-under-binder/issue-70120.rs:29:18: 29:24
    }
}
