// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
fn Family::apply_all(_1: &Self, _2: F) -> () {
    debug self => _1;                    // in scope 0 at ui/higher-rank-trait-bounds/normalize-under-binder/issue-90612.rs:8:21: 8:26
    debug f => _2;                       // in scope 0 at ui/higher-rank-trait-bounds/normalize-under-binder/issue-90612.rs:8:28: 8:29
    let mut _0: ();                      // return place in scope 0 at ui/higher-rank-trait-bounds/normalize-under-binder/issue-90612.rs:9:5: 9:5

    bb0: {
        drop(_2) -> bb1;                 // scope 0 at ui/higher-rank-trait-bounds/normalize-under-binder/issue-90612.rs:10:33: 10:34
    }

    bb1: {
        return;                          // scope 0 at ui/higher-rank-trait-bounds/normalize-under-binder/issue-90612.rs:10:34: 10:34
    }
}

fn <impl at ui/higher-rank-trait-bounds/normalize-under-binder/issue-90612.rs:23:1: 23:33>::apply(_1: &F, _2: <T as Family>::Item<'_>) -> () {
    debug self => _1;                    // in scope 0 at ui/higher-rank-trait-bounds/normalize-under-binder/issue-90612.rs:28:14: 28:19
    debug item => _2;                    // in scope 0 at ui/higher-rank-trait-bounds/normalize-under-binder/issue-90612.rs:28:21: 28:25
    let mut _0: ();                      // return place in scope 0 at ui/higher-rank-trait-bounds/normalize-under-binder/issue-90612.rs:28:40: 28:40
    let _3: ();                          // in scope 0 at ui/higher-rank-trait-bounds/normalize-under-binder/issue-90612.rs:29:9: 29:22
    let mut _4: &F;                      // in scope 0 at ui/higher-rank-trait-bounds/normalize-under-binder/issue-90612.rs:29:9: 29:16
    let mut _5: (<T as Family>::Item<'_>,); // in scope 0 at ui/higher-rank-trait-bounds/normalize-under-binder/issue-90612.rs:29:9: 29:22
    let mut _6: <T as Family>::Item<'_>; // in scope 0 at ui/higher-rank-trait-bounds/normalize-under-binder/issue-90612.rs:29:17: 29:21

    bb0: {
        _4 = _1;                         // scope 0 at ui/higher-rank-trait-bounds/normalize-under-binder/issue-90612.rs:29:9: 29:16
        _6 = move _2;                    // scope 0 at ui/higher-rank-trait-bounds/normalize-under-binder/issue-90612.rs:29:17: 29:21
        _5 = (move _6,);                 // scope 0 at ui/higher-rank-trait-bounds/normalize-under-binder/issue-90612.rs:29:9: 29:22
        _3 = <F as Fn<(<T as Family>::Item<'_>,)>>::call(move _4, move _5) -> bb1; // scope 0 at ui/higher-rank-trait-bounds/normalize-under-binder/issue-90612.rs:29:9: 29:22
                                         // mir::Constant
                                         // + span: ui/higher-rank-trait-bounds/normalize-under-binder/issue-90612.rs:29:9: 29:16
                                         // + literal: Const { ty: for<'a> extern "rust-call" fn(&'a F, (<T as Family>::Item<'_>,)) -> <F as FnOnce<(<T as Family>::Item<'_>,)>>::Output {<F as Fn<(<T as Family>::Item<'_>,)>>::call}, val: Value(<ZST>) }
    }

    bb1: {
        return;                          // scope 0 at ui/higher-rank-trait-bounds/normalize-under-binder/issue-90612.rs:30:6: 30:6
    }
}

fn process(_1: Array<T>) -> () {
    debug array => _1;                   // in scope 0 at ui/higher-rank-trait-bounds/normalize-under-binder/issue-90612.rs:33:24: 33:29
    let mut _0: ();                      // return place in scope 0 at ui/higher-rank-trait-bounds/normalize-under-binder/issue-90612.rs:33:41: 33:41
    let _2: ();                          // in scope 0 at ui/higher-rank-trait-bounds/normalize-under-binder/issue-90612.rs:35:5: 35:33
    let mut _3: &Array<T>;               // in scope 0 at ui/higher-rank-trait-bounds/normalize-under-binder/issue-90612.rs:35:5: 35:33
    let mut _4: [closure@ui/higher-rank-trait-bounds/normalize-under-binder/issue-90612.rs:35:21: 35:28]; // in scope 0 at ui/higher-rank-trait-bounds/normalize-under-binder/issue-90612.rs:35:21: 35:32
    let _5: ();                          // in scope 0 at ui/higher-rank-trait-bounds/normalize-under-binder/issue-90612.rs:38:5: 38:61
    let mut _6: &Array<T>;               // in scope 0 at ui/higher-rank-trait-bounds/normalize-under-binder/issue-90612.rs:38:5: 38:61
    let mut _7: [closure@ui/higher-rank-trait-bounds/normalize-under-binder/issue-90612.rs:38:21: 38:56]; // in scope 0 at ui/higher-rank-trait-bounds/normalize-under-binder/issue-90612.rs:38:21: 38:60

    bb0: {
        _3 = &_1;                        // scope 0 at ui/higher-rank-trait-bounds/normalize-under-binder/issue-90612.rs:35:5: 35:33
        _2 = <Array<T> as Family>::apply_all::<[closure@ui/higher-rank-trait-bounds/normalize-under-binder/issue-90612.rs:35:21: 35:28]>(move _3, move _4) -> bb1; // scope 0 at ui/higher-rank-trait-bounds/normalize-under-binder/issue-90612.rs:35:5: 35:33
                                         // mir::Constant
                                         // + span: ui/higher-rank-trait-bounds/normalize-under-binder/issue-90612.rs:35:11: 35:20
                                         // + literal: Const { ty: for<'a> fn(&'a Array<T>, [closure@ui/higher-rank-trait-bounds/normalize-under-binder/issue-90612.rs:35:21: 35:28]) {<Array<T> as Family>::apply_all::<[closure@ui/higher-rank-trait-bounds/normalize-under-binder/issue-90612.rs:35:21: 35:28]>}, val: Value(<ZST>) }
    }

    bb1: {
        _6 = &_1;                        // scope 0 at ui/higher-rank-trait-bounds/normalize-under-binder/issue-90612.rs:38:5: 38:61
        _5 = <Array<T> as Family>::apply_all::<[closure@ui/higher-rank-trait-bounds/normalize-under-binder/issue-90612.rs:38:21: 38:56]>(move _6, move _7) -> bb2; // scope 0 at ui/higher-rank-trait-bounds/normalize-under-binder/issue-90612.rs:38:5: 38:61
                                         // mir::Constant
                                         // + span: ui/higher-rank-trait-bounds/normalize-under-binder/issue-90612.rs:38:11: 38:20
                                         // + literal: Const { ty: for<'a> fn(&'a Array<T>, [closure@ui/higher-rank-trait-bounds/normalize-under-binder/issue-90612.rs:38:21: 38:56]) {<Array<T> as Family>::apply_all::<[closure@ui/higher-rank-trait-bounds/normalize-under-binder/issue-90612.rs:38:21: 38:56]>}, val: Value(<ZST>) }
    }

    bb2: {
        return;                          // scope 0 at ui/higher-rank-trait-bounds/normalize-under-binder/issue-90612.rs:39:2: 39:2
    }
}

fn process::{closure#0}(_1: &[closure@ui/higher-rank-trait-bounds/normalize-under-binder/issue-90612.rs:35:21: 35:28], _2: &T) -> () {
    debug x => _2;                       // in scope 0 at ui/higher-rank-trait-bounds/normalize-under-binder/issue-90612.rs:35:22: 35:23
    let mut _0: ();                      // return place in scope 0 at ui/higher-rank-trait-bounds/normalize-under-binder/issue-90612.rs:35:29: 35:29

    bb0: {
        return;                          // scope 0 at ui/higher-rank-trait-bounds/normalize-under-binder/issue-90612.rs:35:32: 35:32
    }
}

fn process::{closure#1}(_1: &[closure@ui/higher-rank-trait-bounds/normalize-under-binder/issue-90612.rs:38:21: 38:56], _2: &T) -> () {
    debug x => _2;                       // in scope 0 at ui/higher-rank-trait-bounds/normalize-under-binder/issue-90612.rs:38:22: 38:23
    let mut _0: ();                      // return place in scope 0 at ui/higher-rank-trait-bounds/normalize-under-binder/issue-90612.rs:38:57: 38:57

    bb0: {
        return;                          // scope 0 at ui/higher-rank-trait-bounds/normalize-under-binder/issue-90612.rs:38:60: 38:60
    }
}

fn main() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/higher-rank-trait-bounds/normalize-under-binder/issue-90612.rs:41:11: 41:11

    bb0: {
        return;                          // scope 0 at ui/higher-rank-trait-bounds/normalize-under-binder/issue-90612.rs:41:13: 41:13
    }
}

fn Array(_1: PhantomData<T>) -> Array<T> {
    let mut _0: Array<T>;                // return place in scope 0 at ui/higher-rank-trait-bounds/normalize-under-binder/issue-90612.rs:13:1: 13:16

    bb0: {
        _0 = Array::<T>(move _1);        // scope 0 at ui/higher-rank-trait-bounds/normalize-under-binder/issue-90612.rs:13:1: 13:16
        return;                          // scope 0 at ui/higher-rank-trait-bounds/normalize-under-binder/issue-90612.rs:13:1: 13:16
    }
}

// MIR FOR CTFE
fn Array(_1: PhantomData<T>) -> Array<T> {
    let mut _0: Array<T>;                // return place in scope 0 at ui/higher-rank-trait-bounds/normalize-under-binder/issue-90612.rs:13:1: 13:16

    bb0: {
        _0 = Array::<T>(move _1);        // scope 0 at ui/higher-rank-trait-bounds/normalize-under-binder/issue-90612.rs:13:1: 13:16
        return;                          // scope 0 at ui/higher-rank-trait-bounds/normalize-under-binder/issue-90612.rs:13:1: 13:16
    }
}
