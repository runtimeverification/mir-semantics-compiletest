// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
fn check(_1: F) -> () {
    let mut _0: ();                      // return place in scope 0 at ui/higher-rank-trait-bounds/normalize-under-binder/issue-90875.rs:12:1: 12:1

    bb0: {
        drop(_1) -> bb1;                 // scope 0 at ui/higher-rank-trait-bounds/normalize-under-binder/issue-90875.rs:17:1: 17:2
    }

    bb1: {
        return;                          // scope 0 at ui/higher-rank-trait-bounds/normalize-under-binder/issue-90875.rs:17:2: 17:2
    }
}

fn test(_1: impl Fn(())) -> () {
    debug arg => _1;                     // in scope 0 at ui/higher-rank-trait-bounds/normalize-under-binder/issue-90875.rs:19:9: 19:12
    let mut _0: ();                      // return place in scope 0 at ui/higher-rank-trait-bounds/normalize-under-binder/issue-90875.rs:19:27: 19:27
    let _2: [closure@ui/higher-rank-trait-bounds/normalize-under-binder/issue-90875.rs:21:16: 21:23]; // in scope 0 at ui/higher-rank-trait-bounds/normalize-under-binder/issue-90875.rs:21:9: 21:13
    let _5: ();                          // in scope 0 at ui/higher-rank-trait-bounds/normalize-under-binder/issue-90875.rs:25:5: 25:16
    let _6: ();                          // in scope 0 at ui/higher-rank-trait-bounds/normalize-under-binder/issue-90875.rs:26:5: 26:16
    let mut _7: [closure@ui/higher-rank-trait-bounds/normalize-under-binder/issue-90875.rs:21:16: 21:23]; // in scope 0 at ui/higher-rank-trait-bounds/normalize-under-binder/issue-90875.rs:26:11: 26:15
    let _8: ();                          // in scope 0 at ui/higher-rank-trait-bounds/normalize-under-binder/issue-90875.rs:27:5: 27:16
    let mut _9: [closure@ui/higher-rank-trait-bounds/normalize-under-binder/issue-90875.rs:22:16: 22:19]; // in scope 0 at ui/higher-rank-trait-bounds/normalize-under-binder/issue-90875.rs:27:11: 27:15
    let _10: ();                         // in scope 0 at ui/higher-rank-trait-bounds/normalize-under-binder/issue-90875.rs:28:5: 28:16
    let mut _11: impl Fn(());            // in scope 0 at ui/higher-rank-trait-bounds/normalize-under-binder/issue-90875.rs:28:11: 28:15
    let mut _12: bool;                   // in scope 0 at ui/higher-rank-trait-bounds/normalize-under-binder/issue-90875.rs:29:1: 29:2
    scope 1 {
        debug fn_2 => _2;                // in scope 1 at ui/higher-rank-trait-bounds/normalize-under-binder/issue-90875.rs:21:9: 21:13
        let _3: [closure@ui/higher-rank-trait-bounds/normalize-under-binder/issue-90875.rs:22:16: 22:19]; // in scope 1 at ui/higher-rank-trait-bounds/normalize-under-binder/issue-90875.rs:22:9: 22:13
        scope 2 {
            debug fn_3 => _3;            // in scope 2 at ui/higher-rank-trait-bounds/normalize-under-binder/issue-90875.rs:22:9: 22:13
            let _4: impl Fn(());         // in scope 2 at ui/higher-rank-trait-bounds/normalize-under-binder/issue-90875.rs:23:9: 23:13
            scope 3 {
                debug fn_4 => _4;        // in scope 3 at ui/higher-rank-trait-bounds/normalize-under-binder/issue-90875.rs:23:9: 23:13
            }
        }
    }

    bb0: {
        _12 = const false;               // scope 0 at ui/higher-rank-trait-bounds/normalize-under-binder/issue-90875.rs:21:9: 21:13
        _12 = const true;                // scope 2 at ui/higher-rank-trait-bounds/normalize-under-binder/issue-90875.rs:23:16: 23:19
        _4 = move _1;                    // scope 2 at ui/higher-rank-trait-bounds/normalize-under-binder/issue-90875.rs:23:16: 23:19
        _5 = check::<fn(()) {fn_1}, ()>(fn_1) -> [return: bb1, unwind: bb7]; // scope 3 at ui/higher-rank-trait-bounds/normalize-under-binder/issue-90875.rs:25:5: 25:16
                                         // mir::Constant
                                         // + span: ui/higher-rank-trait-bounds/normalize-under-binder/issue-90875.rs:25:5: 25:10
                                         // + literal: Const { ty: fn(fn(()) {fn_1}) {check::<fn(()) {fn_1}, ()>}, val: Value(<ZST>) }
                                         // mir::Constant
                                         // + span: ui/higher-rank-trait-bounds/normalize-under-binder/issue-90875.rs:25:11: 25:15
                                         // + literal: Const { ty: fn(()) {fn_1}, val: Value(<ZST>) }
    }

    bb1: {
        _6 = check::<[closure@ui/higher-rank-trait-bounds/normalize-under-binder/issue-90875.rs:21:16: 21:23], ()>(move _7) -> [return: bb2, unwind: bb7]; // scope 3 at ui/higher-rank-trait-bounds/normalize-under-binder/issue-90875.rs:26:5: 26:16
                                         // mir::Constant
                                         // + span: ui/higher-rank-trait-bounds/normalize-under-binder/issue-90875.rs:26:5: 26:10
                                         // + literal: Const { ty: fn([closure@ui/higher-rank-trait-bounds/normalize-under-binder/issue-90875.rs:21:16: 21:23]) {check::<[closure@ui/higher-rank-trait-bounds/normalize-under-binder/issue-90875.rs:21:16: 21:23], ()>}, val: Value(<ZST>) }
    }

    bb2: {
        _8 = check::<[closure@ui/higher-rank-trait-bounds/normalize-under-binder/issue-90875.rs:22:16: 22:19], ()>(move _9) -> [return: bb3, unwind: bb7]; // scope 3 at ui/higher-rank-trait-bounds/normalize-under-binder/issue-90875.rs:27:5: 27:16
                                         // mir::Constant
                                         // + span: ui/higher-rank-trait-bounds/normalize-under-binder/issue-90875.rs:27:5: 27:10
                                         // + literal: Const { ty: fn([closure@ui/higher-rank-trait-bounds/normalize-under-binder/issue-90875.rs:22:16: 22:19]) {check::<[closure@ui/higher-rank-trait-bounds/normalize-under-binder/issue-90875.rs:22:16: 22:19], ()>}, val: Value(<ZST>) }
    }

    bb3: {
        _12 = const false;               // scope 3 at ui/higher-rank-trait-bounds/normalize-under-binder/issue-90875.rs:28:11: 28:15
        _11 = move _4;                   // scope 3 at ui/higher-rank-trait-bounds/normalize-under-binder/issue-90875.rs:28:11: 28:15
        _10 = check::<impl Fn(()), ()>(move _11) -> [return: bb4, unwind: bb7]; // scope 3 at ui/higher-rank-trait-bounds/normalize-under-binder/issue-90875.rs:28:5: 28:16
                                         // mir::Constant
                                         // + span: ui/higher-rank-trait-bounds/normalize-under-binder/issue-90875.rs:28:5: 28:10
                                         // + literal: Const { ty: fn(impl Fn(())) {check::<impl Fn(()), ()>}, val: Value(<ZST>) }
    }

    bb4: {
        _12 = const false;               // scope 2 at ui/higher-rank-trait-bounds/normalize-under-binder/issue-90875.rs:29:1: 29:2
        return;                          // scope 0 at ui/higher-rank-trait-bounds/normalize-under-binder/issue-90875.rs:29:2: 29:2
    }

    bb5 (cleanup): {
        resume;                          // scope 0 at ui/higher-rank-trait-bounds/normalize-under-binder/issue-90875.rs:19:1: 29:2
    }

    bb6 (cleanup): {
        drop(_4) -> bb5;                 // scope 2 at ui/higher-rank-trait-bounds/normalize-under-binder/issue-90875.rs:29:1: 29:2
    }

    bb7 (cleanup): {
        switchInt(_12) -> [0: bb5, otherwise: bb6]; // scope 2 at ui/higher-rank-trait-bounds/normalize-under-binder/issue-90875.rs:29:1: 29:2
    }
}

fn fn_1(_1: ()) -> () {
    let mut _0: ();                      // return place in scope 0 at ui/higher-rank-trait-bounds/normalize-under-binder/issue-90875.rs:20:20: 20:20

    bb0: {
        return;                          // scope 0 at ui/higher-rank-trait-bounds/normalize-under-binder/issue-90875.rs:20:22: 20:22
    }
}

fn test::{closure#0}(_1: &[closure@ui/higher-rank-trait-bounds/normalize-under-binder/issue-90875.rs:21:16: 21:23], _2: ()) -> () {
    let mut _0: ();                      // return place in scope 0 at ui/higher-rank-trait-bounds/normalize-under-binder/issue-90875.rs:21:24: 21:24

    bb0: {
        return;                          // scope 0 at ui/higher-rank-trait-bounds/normalize-under-binder/issue-90875.rs:21:26: 21:26
    }
}

fn test::{closure#1}(_1: &[closure@ui/higher-rank-trait-bounds/normalize-under-binder/issue-90875.rs:22:16: 22:19], _2: ()) -> () {
    debug a => _2;                       // in scope 0 at ui/higher-rank-trait-bounds/normalize-under-binder/issue-90875.rs:22:17: 22:18
    let mut _0: ();                      // return place in scope 0 at ui/higher-rank-trait-bounds/normalize-under-binder/issue-90875.rs:22:20: 22:20
    let mut _3: ();                      // in scope 0 at ui/higher-rank-trait-bounds/normalize-under-binder/issue-90875.rs:22:25: 22:26

    bb0: {
        _0 = fn_1(move _3) -> bb1;       // scope 0 at ui/higher-rank-trait-bounds/normalize-under-binder/issue-90875.rs:22:20: 22:27
                                         // mir::Constant
                                         // + span: ui/higher-rank-trait-bounds/normalize-under-binder/issue-90875.rs:22:20: 22:24
                                         // + literal: Const { ty: fn(()) {fn_1}, val: Value(<ZST>) }
    }

    bb1: {
        return;                          // scope 0 at ui/higher-rank-trait-bounds/normalize-under-binder/issue-90875.rs:22:27: 22:27
    }
}

fn main() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/higher-rank-trait-bounds/normalize-under-binder/issue-90875.rs:31:11: 31:11

    bb0: {
        return;                          // scope 0 at ui/higher-rank-trait-bounds/normalize-under-binder/issue-90875.rs:31:13: 31:13
    }
}
