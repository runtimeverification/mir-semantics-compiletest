// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
fn foo() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/higher-rank-trait-bounds/hrtb-exists-forall-trait-covariant.rs:11:1: 11:1

    bb0: {
        return;                          // scope 0 at ui/higher-rank-trait-bounds/hrtb-exists-forall-trait-covariant.rs:14:2: 14:2
    }
}

fn main() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/higher-rank-trait-bounds/hrtb-exists-forall-trait-covariant.rs:18:11: 18:11
    let _1: ();                          // in scope 0 at ui/higher-rank-trait-bounds/hrtb-exists-forall-trait-covariant.rs:36:5: 36:16

    bb0: {
        _1 = foo::<()>() -> bb1;         // scope 0 at ui/higher-rank-trait-bounds/hrtb-exists-forall-trait-covariant.rs:36:5: 36:16
                                         // mir::Constant
                                         // + span: ui/higher-rank-trait-bounds/hrtb-exists-forall-trait-covariant.rs:36:5: 36:14
                                         // + literal: Const { ty: fn() {foo::<()>}, val: Value(<ZST>) }
    }

    bb1: {
        return;                          // scope 0 at ui/higher-rank-trait-bounds/hrtb-exists-forall-trait-covariant.rs:37:2: 37:2
    }
}
