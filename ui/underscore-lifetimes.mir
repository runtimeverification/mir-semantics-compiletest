// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
fn foo(_1: &u8) -> Foo<'_> {
    debug x => _1;                       // in scope 0 at ui/underscore-lifetimes.rs:6:8: 6:9
    let mut _0: Foo<'_>;                 // return place in scope 0 at ui/underscore-lifetimes.rs:6:19: 6:26
    let mut _2: &u8;                     // in scope 0 at ui/underscore-lifetimes.rs:7:9: 7:10

    bb0: {
        _2 = _1;                         // scope 0 at ui/underscore-lifetimes.rs:7:9: 7:10
        _0 = Foo::<'_>(move _2);         // scope 0 at ui/underscore-lifetimes.rs:7:5: 7:11
        return;                          // scope 0 at ui/underscore-lifetimes.rs:8:2: 8:2
    }
}

fn foo2(_1: &u8) -> Foo<'_> {
    debug x => _1;                       // in scope 0 at ui/underscore-lifetimes.rs:10:9: 10:10
    let mut _0: Foo<'_>;                 // return place in scope 0 at ui/underscore-lifetimes.rs:10:23: 10:30
    let mut _2: &u8;                     // in scope 0 at ui/underscore-lifetimes.rs:11:9: 11:10

    bb0: {
        _2 = _1;                         // scope 0 at ui/underscore-lifetimes.rs:11:9: 11:10
        _0 = Foo::<'_>(move _2);         // scope 0 at ui/underscore-lifetimes.rs:11:5: 11:11
        return;                          // scope 0 at ui/underscore-lifetimes.rs:12:2: 12:2
    }
}

fn foo3(_1: &u8) -> Foo<'_> {
    debug x => _1;                       // in scope 0 at ui/underscore-lifetimes.rs:14:9: 14:10
    let mut _0: Foo<'_>;                 // return place in scope 0 at ui/underscore-lifetimes.rs:14:23: 14:26
    let mut _2: &u8;                     // in scope 0 at ui/underscore-lifetimes.rs:15:9: 15:10

    bb0: {
        _2 = _1;                         // scope 0 at ui/underscore-lifetimes.rs:15:9: 15:10
        _0 = Foo::<'_>(move _2);         // scope 0 at ui/underscore-lifetimes.rs:15:5: 15:11
        return;                          // scope 0 at ui/underscore-lifetimes.rs:16:2: 16:2
    }
}

fn foo4(_1: Foo<'_>) -> () {
    let mut _0: ();                      // return place in scope 0 at ui/underscore-lifetimes.rs:18:21: 18:21

    bb0: {
        return;                          // scope 0 at ui/underscore-lifetimes.rs:18:23: 18:23
    }
}

fn foo5(_1: Foo2<'_, '_>) -> &u8 {
    debug foo => _1;                     // in scope 0 at ui/underscore-lifetimes.rs:24:13: 24:16
    let mut _0: &u8;                     // return place in scope 0 at ui/underscore-lifetimes.rs:24:35: 24:41

    bb0: {
        _0 = (_1.1: &u8);                // scope 0 at ui/underscore-lifetimes.rs:25:5: 25:10
        return;                          // scope 0 at ui/underscore-lifetimes.rs:26:2: 26:2
    }
}

fn main() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/underscore-lifetimes.rs:28:11: 28:11
    let _1: &u8;                         // in scope 0 at ui/underscore-lifetimes.rs:29:9: 29:10
    let mut _2: Foo<'_>;                 // in scope 0 at ui/underscore-lifetimes.rs:30:13: 30:19
    let mut _3: &u8;                     // in scope 0 at ui/underscore-lifetimes.rs:30:17: 30:18
    let mut _4: Foo<'_>;                 // in scope 0 at ui/underscore-lifetimes.rs:31:13: 31:20
    let mut _5: &u8;                     // in scope 0 at ui/underscore-lifetimes.rs:31:18: 31:19
    let mut _6: Foo<'_>;                 // in scope 0 at ui/underscore-lifetimes.rs:32:13: 32:20
    let mut _7: &u8;                     // in scope 0 at ui/underscore-lifetimes.rs:32:18: 32:19
    let _8: ();                          // in scope 0 at ui/underscore-lifetimes.rs:33:5: 33:17
    let mut _9: Foo<'_>;                 // in scope 0 at ui/underscore-lifetimes.rs:33:10: 33:16
    let mut _10: &u8;                    // in scope 0 at ui/underscore-lifetimes.rs:33:14: 33:15
    let mut _11: &u8;                    // in scope 0 at ui/underscore-lifetimes.rs:34:13: 37:7
    let mut _12: Foo2<'_, '_>;           // in scope 0 at ui/underscore-lifetimes.rs:34:18: 37:6
    let mut _13: &u8;                    // in scope 0 at ui/underscore-lifetimes.rs:35:12: 35:13
    let mut _14: &u8;                    // in scope 0 at ui/underscore-lifetimes.rs:36:12: 36:14
    let _15: &u8;                        // in scope 0 at ui/underscore-lifetimes.rs:36:12: 36:14
    let mut _17: &u8;                    // in scope 0 at ui/underscore-lifetimes.rs:29:13: 29:15
    scope 1 {
        debug x => _1;                   // in scope 1 at ui/underscore-lifetimes.rs:29:9: 29:10
        scope 2 {
            scope 3 {
                scope 4 {
                    let mut _16: &u8;    // in scope 4 at ui/underscore-lifetimes.rs:36:12: 36:14
                    scope 5 {
                    }
                }
            }
        }
    }

    bb0: {
        _17 = const _;                   // scope 0 at ui/underscore-lifetimes.rs:29:13: 29:15
                                         // mir::Constant
                                         // + span: ui/underscore-lifetimes.rs:29:13: 29:15
                                         // + literal: Const { ty: &u8, val: Unevaluated(main, [], Some(promoted[1])) }
        _1 = _17;                        // scope 0 at ui/underscore-lifetimes.rs:29:13: 29:15
        _3 = _1;                         // scope 1 at ui/underscore-lifetimes.rs:30:17: 30:18
        _2 = foo(move _3) -> bb1;        // scope 1 at ui/underscore-lifetimes.rs:30:13: 30:19
                                         // mir::Constant
                                         // + span: ui/underscore-lifetimes.rs:30:13: 30:16
                                         // + literal: Const { ty: for<'a> fn(&'a u8) -> Foo<'a> {foo}, val: Value(<ZST>) }
    }

    bb1: {
        _5 = _1;                         // scope 2 at ui/underscore-lifetimes.rs:31:18: 31:19
        _4 = foo2(move _5) -> bb2;       // scope 2 at ui/underscore-lifetimes.rs:31:13: 31:20
                                         // mir::Constant
                                         // + span: ui/underscore-lifetimes.rs:31:13: 31:17
                                         // + literal: Const { ty: for<'a> fn(&'a u8) -> Foo<'a> {foo2}, val: Value(<ZST>) }
    }

    bb2: {
        _7 = _1;                         // scope 3 at ui/underscore-lifetimes.rs:32:18: 32:19
        _6 = foo3(move _7) -> bb3;       // scope 3 at ui/underscore-lifetimes.rs:32:13: 32:20
                                         // mir::Constant
                                         // + span: ui/underscore-lifetimes.rs:32:13: 32:17
                                         // + literal: Const { ty: for<'a> fn(&'a u8) -> Foo<'a> {foo3}, val: Value(<ZST>) }
    }

    bb3: {
        _10 = _1;                        // scope 4 at ui/underscore-lifetimes.rs:33:14: 33:15
        _9 = Foo::<'_>(move _10);        // scope 4 at ui/underscore-lifetimes.rs:33:10: 33:16
        _8 = foo4(move _9) -> bb4;       // scope 4 at ui/underscore-lifetimes.rs:33:5: 33:17
                                         // mir::Constant
                                         // + span: ui/underscore-lifetimes.rs:33:5: 33:9
                                         // + literal: Const { ty: for<'a> fn(Foo<'a>) {foo4}, val: Value(<ZST>) }
    }

    bb4: {
        _13 = _1;                        // scope 4 at ui/underscore-lifetimes.rs:35:12: 35:13
        _16 = const _;                   // scope 4 at ui/underscore-lifetimes.rs:36:12: 36:14
                                         // mir::Constant
                                         // + span: ui/underscore-lifetimes.rs:36:12: 36:14
                                         // + literal: Const { ty: &u8, val: Unevaluated(main, [], Some(promoted[0])) }
        _15 = _16;                       // scope 4 at ui/underscore-lifetimes.rs:36:12: 36:14
        _14 = _15;                       // scope 4 at ui/underscore-lifetimes.rs:36:12: 36:14
        _12 = Foo2::<'_, '_> { a: move _13, b: move _14 }; // scope 4 at ui/underscore-lifetimes.rs:34:18: 37:6
        _11 = foo5(move _12) -> bb5;     // scope 4 at ui/underscore-lifetimes.rs:34:13: 37:7
                                         // mir::Constant
                                         // + span: ui/underscore-lifetimes.rs:34:13: 34:17
                                         // + literal: Const { ty: for<'a, 'b> fn(Foo2<'a, 'b>) -> &'b u8 {foo5}, val: Value(<ZST>) }
    }

    bb5: {
        return;                          // scope 0 at ui/underscore-lifetimes.rs:38:2: 38:2
    }
}

promoted[0] in main: &u8 = {
    let mut _0: &u8;                     // return place in scope 0 at ui/underscore-lifetimes.rs:36:12: 36:14
    let mut _1: u8;                      // in scope 0 at ui/underscore-lifetimes.rs:36:13: 36:14

    bb0: {
        _1 = const 6_u8;                 // scope 0 at ui/underscore-lifetimes.rs:36:13: 36:14
        _0 = &_1;                        // scope 0 at ui/underscore-lifetimes.rs:36:12: 36:14
        return;                          // scope 0 at ui/underscore-lifetimes.rs:36:12: 36:14
    }
}

promoted[1] in main: &u8 = {
    let mut _0: &u8;                     // return place in scope 0 at ui/underscore-lifetimes.rs:29:13: 29:15
    let mut _1: u8;                      // in scope 0 at ui/underscore-lifetimes.rs:29:14: 29:15

    bb0: {
        _1 = const 5_u8;                 // scope 0 at ui/underscore-lifetimes.rs:29:14: 29:15
        _0 = &_1;                        // scope 0 at ui/underscore-lifetimes.rs:29:13: 29:15
        return;                          // scope 0 at ui/underscore-lifetimes.rs:29:13: 29:15
    }
}

fn Foo(_1: &u8) -> Foo<'_> {
    let mut _0: Foo<'_>;                 // return place in scope 0 at ui/underscore-lifetimes.rs:4:1: 4:15

    bb0: {
        _0 = Foo::<'_>(move _1);         // scope 0 at ui/underscore-lifetimes.rs:4:1: 4:15
        return;                          // scope 0 at ui/underscore-lifetimes.rs:4:1: 4:15
    }
}

// MIR FOR CTFE
fn Foo(_1: &u8) -> Foo<'_> {
    let mut _0: Foo<'_>;                 // return place in scope 0 at ui/underscore-lifetimes.rs:4:1: 4:15

    bb0: {
        _0 = Foo::<'_>(move _1);         // scope 0 at ui/underscore-lifetimes.rs:4:1: 4:15
        return;                          // scope 0 at ui/underscore-lifetimes.rs:4:1: 4:15
    }
}
