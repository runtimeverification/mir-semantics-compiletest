// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
fn main() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/closures/2229_closure_analysis/run_pass/nested-closure.rs:11:11: 11:11
    let mut _1: Point;                   // in scope 0 at ui/closures/2229_closure_analysis/run_pass/nested-closure.rs:12:9: 12:14
    let mut _3: &i32;                    // in scope 0 at ui/closures/2229_closure_analysis/run_pass/nested-closure.rs:16:18: 25:6
    let mut _4: &mut i32;                // in scope 0 at ui/closures/2229_closure_analysis/run_pass/nested-closure.rs:16:18: 25:6
    let _5: ();                          // in scope 0 at ui/closures/2229_closure_analysis/run_pass/nested-closure.rs:27:5: 27:9
    let mut _6: &mut [closure@ui/closures/2229_closure_analysis/run_pass/nested-closure.rs:16:18: 16:20]; // in scope 0 at ui/closures/2229_closure_analysis/run_pass/nested-closure.rs:27:5: 27:7
    let mut _7: ();                      // in scope 0 at ui/closures/2229_closure_analysis/run_pass/nested-closure.rs:27:5: 27:9
    let _9: ();                          // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:62
    let mut _10: std::fmt::Arguments<'_>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _11: &[&str];                // in scope 0 at ui/closures/2229_closure_analysis/run_pass/nested-closure.rs:33:14: 33:18
    let mut _12: &[&str; 2];             // in scope 0 at ui/closures/2229_closure_analysis/run_pass/nested-closure.rs:33:14: 33:18
    let _13: &[&str; 2];                 // in scope 0 at ui/closures/2229_closure_analysis/run_pass/nested-closure.rs:33:14: 33:18
    let mut _14: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _15: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let _16: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let _17: [core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _18: core::fmt::ArgumentV1<'_>; // in scope 0 at ui/closures/2229_closure_analysis/run_pass/nested-closure.rs:33:20: 33:22
    let mut _19: &&i32;                  // in scope 0 at ui/closures/2229_closure_analysis/run_pass/nested-closure.rs:33:20: 33:22
    let _20: &&i32;                      // in scope 0 at ui/closures/2229_closure_analysis/run_pass/nested-closure.rs:33:20: 33:22
    let _21: ();                         // in scope 0 at ui/closures/2229_closure_analysis/run_pass/nested-closure.rs:35:5: 35:9
    let mut _22: &mut [closure@ui/closures/2229_closure_analysis/run_pass/nested-closure.rs:16:18: 16:20]; // in scope 0 at ui/closures/2229_closure_analysis/run_pass/nested-closure.rs:35:5: 35:7
    let mut _23: ();                     // in scope 0 at ui/closures/2229_closure_analysis/run_pass/nested-closure.rs:35:5: 35:9
    scope 1 {
        debug p => _1;                   // in scope 1 at ui/closures/2229_closure_analysis/run_pass/nested-closure.rs:12:9: 12:14
        let mut _2: [closure@ui/closures/2229_closure_analysis/run_pass/nested-closure.rs:16:18: 16:20]; // in scope 1 at ui/closures/2229_closure_analysis/run_pass/nested-closure.rs:16:9: 16:15
        scope 2 {
            debug c1 => _2;              // in scope 2 at ui/closures/2229_closure_analysis/run_pass/nested-closure.rs:16:9: 16:15
            let _8: &i32;                // in scope 2 at ui/closures/2229_closure_analysis/run_pass/nested-closure.rs:31:9: 31:11
            scope 3 {
                debug px => _8;          // in scope 3 at ui/closures/2229_closure_analysis/run_pass/nested-closure.rs:31:9: 31:11
                let mut _24: &[&str; 2]; // in scope 3 at ui/closures/2229_closure_analysis/run_pass/nested-closure.rs:33:14: 33:18
            }
        }
    }

    bb0: {
        _1 = Point { x: const 5_i32, y: const 20_i32 }; // scope 0 at ui/closures/2229_closure_analysis/run_pass/nested-closure.rs:12:17: 12:38
        _3 = &(_1.0: i32);               // scope 1 at ui/closures/2229_closure_analysis/run_pass/nested-closure.rs:16:18: 25:6
        _4 = &mut (_1.1: i32);           // scope 1 at ui/closures/2229_closure_analysis/run_pass/nested-closure.rs:16:18: 25:6
        _2 = [closure@ui/closures/2229_closure_analysis/run_pass/nested-closure.rs:16:18: 16:20] { p: move _3 }; // scope 1 at ui/closures/2229_closure_analysis/run_pass/nested-closure.rs:16:18: 25:6
                                         // closure
                                         // + def_id: DefId(0:7 ~ nested_closure[79e4]::main::{closure#0})
                                         // + substs: [
                                         //     i16,
                                         //     extern "rust-call" fn(()),
                                         //     (&i32, &mut i32),
                                         // ]
        _6 = &mut _2;                    // scope 2 at ui/closures/2229_closure_analysis/run_pass/nested-closure.rs:27:5: 27:7
        _5 = <[closure@ui/closures/2229_closure_analysis/run_pass/nested-closure.rs:16:18: 16:20] as FnMut<()>>::call_mut(move _6, move _7) -> bb1; // scope 2 at ui/closures/2229_closure_analysis/run_pass/nested-closure.rs:27:5: 27:9
                                         // mir::Constant
                                         // + span: ui/closures/2229_closure_analysis/run_pass/nested-closure.rs:27:5: 27:7
                                         // + literal: Const { ty: for<'a> extern "rust-call" fn(&'a mut [closure@ui/closures/2229_closure_analysis/run_pass/nested-closure.rs:16:18: 16:20], ()) -> <[closure@ui/closures/2229_closure_analysis/run_pass/nested-closure.rs:16:18: 16:20] as FnOnce<()>>::Output {<[closure@ui/closures/2229_closure_analysis/run_pass/nested-closure.rs:16:18: 16:20] as FnMut<()>>::call_mut}, val: Value(<ZST>) }
    }

    bb1: {
        _8 = &(_1.0: i32);               // scope 2 at ui/closures/2229_closure_analysis/run_pass/nested-closure.rs:31:14: 31:18
        _24 = const _;                   // scope 3 at ui/closures/2229_closure_analysis/run_pass/nested-closure.rs:33:14: 33:18
                                         // mir::Constant
                                         // + span: ui/closures/2229_closure_analysis/run_pass/nested-closure.rs:33:14: 33:18
                                         // + literal: Const { ty: &[&str; 2], val: Unevaluated(main, [], Some(promoted[0])) }
        _13 = _24;                       // scope 3 at ui/closures/2229_closure_analysis/run_pass/nested-closure.rs:33:14: 33:18
        _12 = _13;                       // scope 3 at ui/closures/2229_closure_analysis/run_pass/nested-closure.rs:33:14: 33:18
        _11 = move _12 as &[&str] (Pointer(Unsize)); // scope 3 at ui/closures/2229_closure_analysis/run_pass/nested-closure.rs:33:14: 33:18
        _20 = &_8;                       // scope 3 at ui/closures/2229_closure_analysis/run_pass/nested-closure.rs:33:20: 33:22
        _19 = _20;                       // scope 3 at ui/closures/2229_closure_analysis/run_pass/nested-closure.rs:33:20: 33:22
        _18 = core::fmt::ArgumentV1::<'_>::new_display::<&i32>(move _19) -> bb2; // scope 3 at ui/closures/2229_closure_analysis/run_pass/nested-closure.rs:33:20: 33:22
                                         // mir::Constant
                                         // + span: ui/closures/2229_closure_analysis/run_pass/nested-closure.rs:33:20: 33:22
                                         // + user_ty: UserType(1)
                                         // + literal: Const { ty: for<'b> fn(&'b &i32) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_display::<&i32>}, val: Value(<ZST>) }
    }

    bb2: {
        _17 = [move _18];                // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _16 = &_17;                      // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _15 = _16;                       // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _14 = move _15 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _10 = Arguments::<'_>::new_v1(move _11, move _14) -> bb3; // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb3: {
        _9 = _print(move _10) -> bb4;    // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:62
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:27
                                         // + literal: Const { ty: for<'a> fn(Arguments<'a>) {_print}, val: Value(<ZST>) }
    }

    bb4: {
        _22 = &mut _2;                   // scope 3 at ui/closures/2229_closure_analysis/run_pass/nested-closure.rs:35:5: 35:7
        _21 = <[closure@ui/closures/2229_closure_analysis/run_pass/nested-closure.rs:16:18: 16:20] as FnMut<()>>::call_mut(move _22, move _23) -> bb5; // scope 3 at ui/closures/2229_closure_analysis/run_pass/nested-closure.rs:35:5: 35:9
                                         // mir::Constant
                                         // + span: ui/closures/2229_closure_analysis/run_pass/nested-closure.rs:35:5: 35:7
                                         // + literal: Const { ty: for<'a> extern "rust-call" fn(&'a mut [closure@ui/closures/2229_closure_analysis/run_pass/nested-closure.rs:16:18: 16:20], ()) -> <[closure@ui/closures/2229_closure_analysis/run_pass/nested-closure.rs:16:18: 16:20] as FnOnce<()>>::Output {<[closure@ui/closures/2229_closure_analysis/run_pass/nested-closure.rs:16:18: 16:20] as FnMut<()>>::call_mut}, val: Value(<ZST>) }
    }

    bb5: {
        return;                          // scope 0 at ui/closures/2229_closure_analysis/run_pass/nested-closure.rs:36:2: 36:2
    }
}

promoted[0] in main: &[&str; 2] = {
    let mut _0: &[&str; 2];              // return place in scope 0 at ui/closures/2229_closure_analysis/run_pass/nested-closure.rs:33:14: 33:18
    let mut _1: [&str; 2];               // in scope 0 at ui/closures/2229_closure_analysis/run_pass/nested-closure.rs:33:14: 33:18

    bb0: {
        _1 = [const "", const "\n"];     // scope 0 at ui/closures/2229_closure_analysis/run_pass/nested-closure.rs:33:14: 33:18
                                         // mir::Constant
                                         // + span: ui/closures/2229_closure_analysis/run_pass/nested-closure.rs:33:14: 33:18
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
                                         // mir::Constant
                                         // + span: ui/closures/2229_closure_analysis/run_pass/nested-closure.rs:33:14: 33:18
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at ui/closures/2229_closure_analysis/run_pass/nested-closure.rs:33:14: 33:18
        return;                          // scope 0 at ui/closures/2229_closure_analysis/run_pass/nested-closure.rs:33:14: 33:18
    }
}

fn main::{closure#0}(_1: &mut [closure@ui/closures/2229_closure_analysis/run_pass/nested-closure.rs:16:18: 16:20]) -> () {
    debug p__x => (*((*_1).0: &i32));    // in scope 0 at ui/closures/2229_closure_analysis/run_pass/nested-closure.rs:12:9: 12:14
    debug p__y => (*((*_1).1: &mut i32)); // in scope 0 at ui/closures/2229_closure_analysis/run_pass/nested-closure.rs:12:9: 12:14
    let mut _0: ();                      // return place in scope 0 at ui/closures/2229_closure_analysis/run_pass/nested-closure.rs:16:21: 16:21
    let _2: ();                          // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:62
    let mut _3: std::fmt::Arguments<'_>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _4: &[&str];                 // in scope 0 at ui/closures/2229_closure_analysis/run_pass/nested-closure.rs:17:18: 17:22
    let mut _5: &[&str; 2];              // in scope 0 at ui/closures/2229_closure_analysis/run_pass/nested-closure.rs:17:18: 17:22
    let _6: &[&str; 2];                  // in scope 0 at ui/closures/2229_closure_analysis/run_pass/nested-closure.rs:17:18: 17:22
    let mut _7: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _8: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let _9: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let _10: [core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _11: core::fmt::ArgumentV1<'_>; // in scope 0 at ui/closures/2229_closure_analysis/run_pass/nested-closure.rs:17:24: 17:27
    let mut _12: &i32;                   // in scope 0 at ui/closures/2229_closure_analysis/run_pass/nested-closure.rs:17:24: 17:27
    let _13: &i32;                       // in scope 0 at ui/closures/2229_closure_analysis/run_pass/nested-closure.rs:17:24: 17:27
    let _14: i32;                        // in scope 0 at ui/closures/2229_closure_analysis/run_pass/nested-closure.rs:19:13: 19:17
    let mut _16: &mut i32;               // in scope 0 at ui/closures/2229_closure_analysis/run_pass/nested-closure.rs:21:22: 21:36
    let mut _17: &i32;                   // in scope 0 at ui/closures/2229_closure_analysis/run_pass/nested-closure.rs:21:22: 21:36
    let _18: ();                         // in scope 0 at ui/closures/2229_closure_analysis/run_pass/nested-closure.rs:22:9: 22:13
    let mut _19: &mut [closure@ui/closures/2229_closure_analysis/run_pass/nested-closure.rs:21:22: 21:24]; // in scope 0 at ui/closures/2229_closure_analysis/run_pass/nested-closure.rs:22:9: 22:11
    let mut _20: ();                     // in scope 0 at ui/closures/2229_closure_analysis/run_pass/nested-closure.rs:22:9: 22:13
    let _21: ();                         // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:62
    let mut _22: std::fmt::Arguments<'_>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _23: &[&str];                // in scope 0 at ui/closures/2229_closure_analysis/run_pass/nested-closure.rs:24:18: 24:22
    let mut _24: &[&str; 2];             // in scope 0 at ui/closures/2229_closure_analysis/run_pass/nested-closure.rs:24:18: 24:22
    let _25: &[&str; 2];                 // in scope 0 at ui/closures/2229_closure_analysis/run_pass/nested-closure.rs:24:18: 24:22
    let mut _26: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _27: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let _28: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let _29: [core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _30: core::fmt::ArgumentV1<'_>; // in scope 0 at ui/closures/2229_closure_analysis/run_pass/nested-closure.rs:24:24: 24:27
    let mut _31: &i32;                   // in scope 0 at ui/closures/2229_closure_analysis/run_pass/nested-closure.rs:24:24: 24:27
    let _32: &i32;                       // in scope 0 at ui/closures/2229_closure_analysis/run_pass/nested-closure.rs:24:24: 24:27
    let mut _34: &[&str; 2];             // in scope 0 at ui/closures/2229_closure_analysis/run_pass/nested-closure.rs:17:18: 17:22
    let mut _35: &i32;                   // in scope 0 at ui/closures/2229_closure_analysis/run_pass/nested-closure.rs:16:18: 25:6
    let mut _36: &mut i32;               // in scope 0 at ui/closures/2229_closure_analysis/run_pass/nested-closure.rs:16:18: 25:6
    let mut _37: &mut i32;               // in scope 0 at ui/closures/2229_closure_analysis/run_pass/nested-closure.rs:16:18: 25:6
    scope 1 {
        debug incr => _14;               // in scope 1 at ui/closures/2229_closure_analysis/run_pass/nested-closure.rs:19:13: 19:17
        let mut _15: [closure@ui/closures/2229_closure_analysis/run_pass/nested-closure.rs:21:22: 21:24]; // in scope 1 at ui/closures/2229_closure_analysis/run_pass/nested-closure.rs:21:13: 21:19
        scope 2 {
            debug c2 => _15;             // in scope 2 at ui/closures/2229_closure_analysis/run_pass/nested-closure.rs:21:13: 21:19
            let mut _33: &[&str; 2];     // in scope 2 at ui/closures/2229_closure_analysis/run_pass/nested-closure.rs:24:18: 24:22
        }
    }

    bb0: {
        _34 = const _;                   // scope 0 at ui/closures/2229_closure_analysis/run_pass/nested-closure.rs:17:18: 17:22
                                         // mir::Constant
                                         // + span: ui/closures/2229_closure_analysis/run_pass/nested-closure.rs:17:18: 17:22
                                         // + literal: Const { ty: &[&str; 2], val: Unevaluated(main::{closure#0}, [<closure_kind>, <closure_signature>, <upvars>], Some(promoted[1])) }
        _6 = _34;                        // scope 0 at ui/closures/2229_closure_analysis/run_pass/nested-closure.rs:17:18: 17:22
        _5 = _6;                         // scope 0 at ui/closures/2229_closure_analysis/run_pass/nested-closure.rs:17:18: 17:22
        _4 = move _5 as &[&str] (Pointer(Unsize)); // scope 0 at ui/closures/2229_closure_analysis/run_pass/nested-closure.rs:17:18: 17:22
        _35 = deref_copy ((*_1).0: &i32); // scope 0 at ui/closures/2229_closure_analysis/run_pass/nested-closure.rs:17:24: 17:27
        _13 = _35;                       // scope 0 at ui/closures/2229_closure_analysis/run_pass/nested-closure.rs:17:24: 17:27
        _12 = _13;                       // scope 0 at ui/closures/2229_closure_analysis/run_pass/nested-closure.rs:17:24: 17:27
        _11 = core::fmt::ArgumentV1::<'_>::new_display::<i32>(move _12) -> bb1; // scope 0 at ui/closures/2229_closure_analysis/run_pass/nested-closure.rs:17:24: 17:27
                                         // mir::Constant
                                         // + span: ui/closures/2229_closure_analysis/run_pass/nested-closure.rs:17:24: 17:27
                                         // + user_ty: UserType(1)
                                         // + literal: Const { ty: for<'b> fn(&'b i32) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_display::<i32>}, val: Value(<ZST>) }
    }

    bb1: {
        _10 = [move _11];                // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _9 = &_10;                       // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _8 = _9;                         // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _7 = move _8 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _3 = Arguments::<'_>::new_v1(move _4, move _7) -> bb2; // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb2: {
        _2 = _print(move _3) -> bb3;     // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:62
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:27
                                         // + literal: Const { ty: for<'a> fn(Arguments<'a>) {_print}, val: Value(<ZST>) }
    }

    bb3: {
        _14 = const 10_i32;              // scope 0 at ui/closures/2229_closure_analysis/run_pass/nested-closure.rs:19:20: 19:22
        _36 = deref_copy ((*_1).1: &mut i32); // scope 1 at ui/closures/2229_closure_analysis/run_pass/nested-closure.rs:21:22: 21:36
        _16 = &mut (*_36);               // scope 1 at ui/closures/2229_closure_analysis/run_pass/nested-closure.rs:21:22: 21:36
        _17 = &_14;                      // scope 1 at ui/closures/2229_closure_analysis/run_pass/nested-closure.rs:21:22: 21:36
        _15 = [closure@ui/closures/2229_closure_analysis/run_pass/nested-closure.rs:21:22: 21:24] { incr: move _16, p: move _17 }; // scope 1 at ui/closures/2229_closure_analysis/run_pass/nested-closure.rs:21:22: 21:36
                                         // closure
                                         // + def_id: DefId(0:8 ~ nested_closure[79e4]::main::{closure#0}::{closure#0})
                                         // + substs: [
                                         //     i16,
                                         //     extern "rust-call" fn(()),
                                         //     (&mut i32, &i32),
                                         // ]
        _19 = &mut _15;                  // scope 2 at ui/closures/2229_closure_analysis/run_pass/nested-closure.rs:22:9: 22:11
        _18 = <[closure@ui/closures/2229_closure_analysis/run_pass/nested-closure.rs:21:22: 21:24] as FnMut<()>>::call_mut(move _19, move _20) -> bb4; // scope 2 at ui/closures/2229_closure_analysis/run_pass/nested-closure.rs:22:9: 22:13
                                         // mir::Constant
                                         // + span: ui/closures/2229_closure_analysis/run_pass/nested-closure.rs:22:9: 22:11
                                         // + literal: Const { ty: for<'a> extern "rust-call" fn(&'a mut [closure@ui/closures/2229_closure_analysis/run_pass/nested-closure.rs:21:22: 21:24], ()) -> <[closure@ui/closures/2229_closure_analysis/run_pass/nested-closure.rs:21:22: 21:24] as FnOnce<()>>::Output {<[closure@ui/closures/2229_closure_analysis/run_pass/nested-closure.rs:21:22: 21:24] as FnMut<()>>::call_mut}, val: Value(<ZST>) }
    }

    bb4: {
        _33 = const _;                   // scope 2 at ui/closures/2229_closure_analysis/run_pass/nested-closure.rs:24:18: 24:22
                                         // mir::Constant
                                         // + span: ui/closures/2229_closure_analysis/run_pass/nested-closure.rs:24:18: 24:22
                                         // + literal: Const { ty: &[&str; 2], val: Unevaluated(main::{closure#0}, [<closure_kind>, <closure_signature>, <upvars>], Some(promoted[0])) }
        _25 = _33;                       // scope 2 at ui/closures/2229_closure_analysis/run_pass/nested-closure.rs:24:18: 24:22
        _24 = _25;                       // scope 2 at ui/closures/2229_closure_analysis/run_pass/nested-closure.rs:24:18: 24:22
        _23 = move _24 as &[&str] (Pointer(Unsize)); // scope 2 at ui/closures/2229_closure_analysis/run_pass/nested-closure.rs:24:18: 24:22
        _37 = deref_copy ((*_1).1: &mut i32); // scope 2 at ui/closures/2229_closure_analysis/run_pass/nested-closure.rs:24:24: 24:27
        _32 = &(*_37);                   // scope 2 at ui/closures/2229_closure_analysis/run_pass/nested-closure.rs:24:24: 24:27
        _31 = _32;                       // scope 2 at ui/closures/2229_closure_analysis/run_pass/nested-closure.rs:24:24: 24:27
        _30 = core::fmt::ArgumentV1::<'_>::new_display::<i32>(move _31) -> bb5; // scope 2 at ui/closures/2229_closure_analysis/run_pass/nested-closure.rs:24:24: 24:27
                                         // mir::Constant
                                         // + span: ui/closures/2229_closure_analysis/run_pass/nested-closure.rs:24:24: 24:27
                                         // + user_ty: UserType(3)
                                         // + literal: Const { ty: for<'b> fn(&'b i32) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_display::<i32>}, val: Value(<ZST>) }
    }

    bb5: {
        _29 = [move _30];                // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _28 = &_29;                      // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _27 = _28;                       // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _26 = move _27 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _22 = Arguments::<'_>::new_v1(move _23, move _26) -> bb6; // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // + user_ty: UserType(2)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb6: {
        _21 = _print(move _22) -> bb7;   // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:62
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:27
                                         // + literal: Const { ty: for<'a> fn(Arguments<'a>) {_print}, val: Value(<ZST>) }
    }

    bb7: {
        return;                          // scope 0 at ui/closures/2229_closure_analysis/run_pass/nested-closure.rs:25:6: 25:6
    }
}

promoted[0] in main::{closure#0}: &[&str; 2] = {
    let mut _0: &[&str; 2];              // return place in scope 0 at ui/closures/2229_closure_analysis/run_pass/nested-closure.rs:24:18: 24:22
    let mut _1: [&str; 2];               // in scope 0 at ui/closures/2229_closure_analysis/run_pass/nested-closure.rs:24:18: 24:22

    bb0: {
        _1 = [const "", const "\n"];     // scope 0 at ui/closures/2229_closure_analysis/run_pass/nested-closure.rs:24:18: 24:22
                                         // mir::Constant
                                         // + span: ui/closures/2229_closure_analysis/run_pass/nested-closure.rs:24:18: 24:22
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
                                         // mir::Constant
                                         // + span: ui/closures/2229_closure_analysis/run_pass/nested-closure.rs:24:18: 24:22
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at ui/closures/2229_closure_analysis/run_pass/nested-closure.rs:24:18: 24:22
        return;                          // scope 0 at ui/closures/2229_closure_analysis/run_pass/nested-closure.rs:24:18: 24:22
    }
}

promoted[1] in main::{closure#0}: &[&str; 2] = {
    let mut _0: &[&str; 2];              // return place in scope 0 at ui/closures/2229_closure_analysis/run_pass/nested-closure.rs:17:18: 17:22
    let mut _1: [&str; 2];               // in scope 0 at ui/closures/2229_closure_analysis/run_pass/nested-closure.rs:17:18: 17:22

    bb0: {
        _1 = [const "", const "\n"];     // scope 0 at ui/closures/2229_closure_analysis/run_pass/nested-closure.rs:17:18: 17:22
                                         // mir::Constant
                                         // + span: ui/closures/2229_closure_analysis/run_pass/nested-closure.rs:17:18: 17:22
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
                                         // mir::Constant
                                         // + span: ui/closures/2229_closure_analysis/run_pass/nested-closure.rs:17:18: 17:22
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at ui/closures/2229_closure_analysis/run_pass/nested-closure.rs:17:18: 17:22
        return;                          // scope 0 at ui/closures/2229_closure_analysis/run_pass/nested-closure.rs:17:18: 17:22
    }
}

fn main::{closure#0}::{closure#0}(_1: &mut [closure@ui/closures/2229_closure_analysis/run_pass/nested-closure.rs:21:22: 21:24]) -> () {
    debug p__y => (*((*_1).0: &mut i32)); // in scope 0 at ui/closures/2229_closure_analysis/run_pass/nested-closure.rs:12:9: 12:14
    debug incr => (*((*_1).1: &i32));    // in scope 0 at ui/closures/2229_closure_analysis/run_pass/nested-closure.rs:19:13: 19:17
    let mut _0: ();                      // return place in scope 0 at ui/closures/2229_closure_analysis/run_pass/nested-closure.rs:21:25: 21:25
    let mut _2: i32;                     // in scope 0 at ui/closures/2229_closure_analysis/run_pass/nested-closure.rs:21:32: 21:36
    let mut _3: (i32, bool);             // in scope 0 at ui/closures/2229_closure_analysis/run_pass/nested-closure.rs:21:25: 21:36
    let mut _4: &i32;                    // in scope 0 at ui/closures/2229_closure_analysis/run_pass/nested-closure.rs:21:22: 21:36
    let mut _5: &mut i32;                // in scope 0 at ui/closures/2229_closure_analysis/run_pass/nested-closure.rs:21:22: 21:36
    let mut _6: &mut i32;                // in scope 0 at ui/closures/2229_closure_analysis/run_pass/nested-closure.rs:21:22: 21:36
    let mut _7: &mut i32;                // in scope 0 at ui/closures/2229_closure_analysis/run_pass/nested-closure.rs:21:22: 21:36

    bb0: {
        _4 = deref_copy ((*_1).1: &i32); // scope 0 at ui/closures/2229_closure_analysis/run_pass/nested-closure.rs:21:32: 21:36
        _2 = (*_4);                      // scope 0 at ui/closures/2229_closure_analysis/run_pass/nested-closure.rs:21:32: 21:36
        _5 = deref_copy ((*_1).0: &mut i32); // scope 0 at ui/closures/2229_closure_analysis/run_pass/nested-closure.rs:21:25: 21:36
        _3 = CheckedAdd((*_5), _2);      // scope 0 at ui/closures/2229_closure_analysis/run_pass/nested-closure.rs:21:25: 21:36
        _6 = deref_copy ((*_1).0: &mut i32); // scope 0 at ui/closures/2229_closure_analysis/run_pass/nested-closure.rs:21:25: 21:36
        assert(!move (_3.1: bool), "attempt to compute `{} + {}`, which would overflow", (*_6), move _2) -> bb1; // scope 0 at ui/closures/2229_closure_analysis/run_pass/nested-closure.rs:21:25: 21:36
    }

    bb1: {
        _7 = deref_copy ((*_1).0: &mut i32); // scope 0 at ui/closures/2229_closure_analysis/run_pass/nested-closure.rs:21:25: 21:36
        (*_7) = move (_3.0: i32);        // scope 0 at ui/closures/2229_closure_analysis/run_pass/nested-closure.rs:21:25: 21:36
        return;                          // scope 0 at ui/closures/2229_closure_analysis/run_pass/nested-closure.rs:21:36: 21:36
    }
}
