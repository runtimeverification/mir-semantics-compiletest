// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
fn <impl at ui/closures/2229_closure_analysis/run_pass/by_value.rs:7:10: 7:15>::fmt(_1: &SomeLargeType, _2: &mut Formatter<'_>) -> Result<(), std::fmt::Error> {
    debug self => _1;                    // in scope 0 at ui/closures/2229_closure_analysis/run_pass/by_value.rs:7:10: 7:15
    debug f => _2;                       // in scope 0 at ui/closures/2229_closure_analysis/run_pass/by_value.rs:7:10: 7:15
    let mut _0: std::result::Result<(), std::fmt::Error>; // return place in scope 0 at ui/closures/2229_closure_analysis/run_pass/by_value.rs:7:10: 7:15
    let mut _3: &mut std::fmt::Formatter<'_>; // in scope 0 at ui/closures/2229_closure_analysis/run_pass/by_value.rs:7:10: 7:15
    let mut _4: &str;                    // in scope 0 at ui/closures/2229_closure_analysis/run_pass/by_value.rs:7:10: 7:15
    let _5: &str;                        // in scope 0 at ui/closures/2229_closure_analysis/run_pass/by_value.rs:7:10: 7:15

    bb0: {
        _3 = &mut (*_2);                 // scope 0 at ui/closures/2229_closure_analysis/run_pass/by_value.rs:7:10: 7:15
        _5 = const "SomeLargeType";      // scope 0 at ui/closures/2229_closure_analysis/run_pass/by_value.rs:7:10: 7:15
                                         // mir::Constant
                                         // + span: ui/closures/2229_closure_analysis/run_pass/by_value.rs:7:10: 7:15
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _4 = _5;                         // scope 0 at ui/closures/2229_closure_analysis/run_pass/by_value.rs:7:10: 7:15
        _0 = Formatter::<'_>::write_str(move _3, move _4) -> bb1; // scope 0 at ui/closures/2229_closure_analysis/run_pass/by_value.rs:7:10: 7:15
                                         // mir::Constant
                                         // + span: ui/closures/2229_closure_analysis/run_pass/by_value.rs:7:10: 7:15
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a mut Formatter<'_>, &'b str) -> Result<(), std::fmt::Error> {Formatter::<'_>::write_str}, val: Value(<ZST>) }
    }

    bb1: {
        return;                          // scope 0 at ui/closures/2229_closure_analysis/run_pass/by_value.rs:7:15: 7:15
    }
}

fn <impl at ui/closures/2229_closure_analysis/run_pass/by_value.rs:7:17: 7:24>::default() -> SomeLargeType {
    let mut _0: SomeLargeType;           // return place in scope 0 at ui/closures/2229_closure_analysis/run_pass/by_value.rs:7:17: 7:24

    bb0: {
        return;                          // scope 0 at ui/closures/2229_closure_analysis/run_pass/by_value.rs:7:24: 7:24
    }
}

MuchLargerType::0::{constant#0}: usize = {
    let mut _0: usize;                   // return place in scope 0 at ui/closures/2229_closure_analysis/run_pass/by_value.rs:9:39: 9:41

    bb0: {
        _0 = const 32_usize;             // scope 0 at ui/closures/2229_closure_analysis/run_pass/by_value.rs:9:39: 9:41
        return;                          // scope 0 at ui/closures/2229_closure_analysis/run_pass/by_value.rs:9:39: 9:41
    }
}

fn big_box() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/closures/2229_closure_analysis/run_pass/by_value.rs:11:14: 11:14
    let _1: MuchLargerType;              // in scope 0 at ui/closures/2229_closure_analysis/run_pass/by_value.rs:12:9: 12:10
    let mut _2: [SomeLargeType; 32];     // in scope 0 at ui/closures/2229_closure_analysis/run_pass/by_value.rs:12:28: 12:46
    let mut _4: MuchLargerType;          // in scope 0 at ui/closures/2229_closure_analysis/run_pass/by_value.rs:13:22: 13:23
    let mut _6: std::boxed::Box<MuchLargerType>; // in scope 0 at ui/closures/2229_closure_analysis/run_pass/by_value.rs:14:14: 14:15
    let mut _8: &i32;                    // in scope 0 at ui/closures/2229_closure_analysis/run_pass/by_value.rs:16:13: 19:6
    let _9: ();                          // in scope 0 at ui/closures/2229_closure_analysis/run_pass/by_value.rs:21:5: 21:8
    let mut _10: [closure@ui/closures/2229_closure_analysis/run_pass/by_value.rs:16:13: 16:15]; // in scope 0 at ui/closures/2229_closure_analysis/run_pass/by_value.rs:21:5: 21:6
    let mut _11: ();                     // in scope 0 at ui/closures/2229_closure_analysis/run_pass/by_value.rs:21:5: 21:8
    scope 1 {
        debug s => _1;                   // in scope 1 at ui/closures/2229_closure_analysis/run_pass/by_value.rs:12:9: 12:10
        let _3: std::boxed::Box<MuchLargerType>; // in scope 1 at ui/closures/2229_closure_analysis/run_pass/by_value.rs:13:9: 13:10
        scope 2 {
            debug b => _3;               // in scope 2 at ui/closures/2229_closure_analysis/run_pass/by_value.rs:13:9: 13:10
            let _5: (std::boxed::Box<MuchLargerType>, i32); // in scope 2 at ui/closures/2229_closure_analysis/run_pass/by_value.rs:14:9: 14:10
            scope 3 {
                debug t => _5;           // in scope 3 at ui/closures/2229_closure_analysis/run_pass/by_value.rs:14:9: 14:10
                let _7: [closure@ui/closures/2229_closure_analysis/run_pass/by_value.rs:16:13: 16:15]; // in scope 3 at ui/closures/2229_closure_analysis/run_pass/by_value.rs:16:9: 16:10
                scope 4 {
                    debug c => _7;       // in scope 4 at ui/closures/2229_closure_analysis/run_pass/by_value.rs:16:9: 16:10
                }
            }
        }
    }

    bb0: {
        _2 = <[SomeLargeType; 32] as Default>::default() -> bb1; // scope 0 at ui/closures/2229_closure_analysis/run_pass/by_value.rs:12:28: 12:46
                                         // mir::Constant
                                         // + span: ui/closures/2229_closure_analysis/run_pass/by_value.rs:12:28: 12:44
                                         // + literal: Const { ty: fn() -> [SomeLargeType; 32] {<[SomeLargeType; 32] as Default>::default}, val: Value(<ZST>) }
    }

    bb1: {
        _3 = Box::<MuchLargerType>::new(move _4) -> bb2; // scope 1 at ui/closures/2229_closure_analysis/run_pass/by_value.rs:13:13: 13:24
                                         // mir::Constant
                                         // + span: ui/closures/2229_closure_analysis/run_pass/by_value.rs:13:13: 13:21
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: fn(MuchLargerType) -> Box<MuchLargerType> {Box::<MuchLargerType>::new}, val: Value(<ZST>) }
    }

    bb2: {
        _6 = move _3;                    // scope 2 at ui/closures/2229_closure_analysis/run_pass/by_value.rs:14:14: 14:15
        _5 = (move _6, const 10_i32);    // scope 2 at ui/closures/2229_closure_analysis/run_pass/by_value.rs:14:13: 14:20
        _8 = &(_5.1: i32);               // scope 3 at ui/closures/2229_closure_analysis/run_pass/by_value.rs:16:13: 19:6
        _7 = [closure@ui/closures/2229_closure_analysis/run_pass/by_value.rs:16:13: 16:15] { t: move (_5.0: std::boxed::Box<MuchLargerType>) }; // scope 3 at ui/closures/2229_closure_analysis/run_pass/by_value.rs:16:13: 19:6
                                         // closure
                                         // + def_id: DefId(0:8 ~ by_value[794a]::big_box::{closure#0})
                                         // + substs: [
                                         //     i32,
                                         //     extern "rust-call" fn(()),
                                         //     (std::boxed::Box<MuchLargerType>, &i32),
                                         // ]
        _10 = move _7;                   // scope 4 at ui/closures/2229_closure_analysis/run_pass/by_value.rs:21:5: 21:6
        _9 = <[closure@ui/closures/2229_closure_analysis/run_pass/by_value.rs:16:13: 16:15] as FnOnce<()>>::call_once(move _10, move _11) -> bb3; // scope 4 at ui/closures/2229_closure_analysis/run_pass/by_value.rs:21:5: 21:8
                                         // mir::Constant
                                         // + span: ui/closures/2229_closure_analysis/run_pass/by_value.rs:21:5: 21:6
                                         // + literal: Const { ty: extern "rust-call" fn([closure@ui/closures/2229_closure_analysis/run_pass/by_value.rs:16:13: 16:15], ()) -> <[closure@ui/closures/2229_closure_analysis/run_pass/by_value.rs:16:13: 16:15] as FnOnce<()>>::Output {<[closure@ui/closures/2229_closure_analysis/run_pass/by_value.rs:16:13: 16:15] as FnOnce<()>>::call_once}, val: Value(<ZST>) }
    }

    bb3: {
        return;                          // scope 0 at ui/closures/2229_closure_analysis/run_pass/by_value.rs:22:2: 22:2
    }
}

fn big_box::{closure#0}(_1: [closure@ui/closures/2229_closure_analysis/run_pass/by_value.rs:16:13: 16:15]) -> () {
    debug t__0 => (_1.0: std::boxed::Box<MuchLargerType>); // in scope 0 at ui/closures/2229_closure_analysis/run_pass/by_value.rs:14:9: 14:10
    debug t__1 => (*(_1.1: &i32));       // in scope 0 at ui/closures/2229_closure_analysis/run_pass/by_value.rs:14:9: 14:10
    let mut _0: ();                      // return place in scope 0 at ui/closures/2229_closure_analysis/run_pass/by_value.rs:16:16: 16:16
    let _2: [SomeLargeType; 32];         // in scope 0 at ui/closures/2229_closure_analysis/run_pass/by_value.rs:17:13: 17:14
    let _3: ();                          // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:62
    let mut _4: std::fmt::Arguments<'_>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _5: &[&str];                 // in scope 0 at ui/closures/2229_closure_analysis/run_pass/by_value.rs:18:18: 18:27
    let mut _6: &[&str; 3];              // in scope 0 at ui/closures/2229_closure_analysis/run_pass/by_value.rs:18:18: 18:27
    let _7: &[&str; 3];                  // in scope 0 at ui/closures/2229_closure_analysis/run_pass/by_value.rs:18:18: 18:27
    let mut _8: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _9: &[core::fmt::ArgumentV1<'_>; 2]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let _10: &[core::fmt::ArgumentV1<'_>; 2]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let _11: [core::fmt::ArgumentV1<'_>; 2]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _12: core::fmt::ArgumentV1<'_>; // in scope 0 at ui/closures/2229_closure_analysis/run_pass/by_value.rs:18:29: 18:32
    let mut _13: &i32;                   // in scope 0 at ui/closures/2229_closure_analysis/run_pass/by_value.rs:18:29: 18:32
    let _14: &i32;                       // in scope 0 at ui/closures/2229_closure_analysis/run_pass/by_value.rs:18:29: 18:32
    let mut _15: core::fmt::ArgumentV1<'_>; // in scope 0 at ui/closures/2229_closure_analysis/run_pass/by_value.rs:18:34: 18:35
    let mut _16: &[SomeLargeType; 32];   // in scope 0 at ui/closures/2229_closure_analysis/run_pass/by_value.rs:18:34: 18:35
    let _17: &[SomeLargeType; 32];       // in scope 0 at ui/closures/2229_closure_analysis/run_pass/by_value.rs:18:34: 18:35
    let mut _19: &i32;                   // in scope 0 at ui/closures/2229_closure_analysis/run_pass/by_value.rs:16:13: 19:6
    let mut _20: ();                     // in scope 0 at ui/closures/2229_closure_analysis/run_pass/by_value.rs:19:5: 19:6
    let mut _21: ();                     // in scope 0 at ui/closures/2229_closure_analysis/run_pass/by_value.rs:19:5: 19:6
    scope 1 {
        debug p => _2;                   // in scope 1 at ui/closures/2229_closure_analysis/run_pass/by_value.rs:17:13: 17:14
        let mut _18: &[&str; 3];         // in scope 1 at ui/closures/2229_closure_analysis/run_pass/by_value.rs:18:18: 18:27
    }

    bb0: {
        _18 = const _;                   // scope 1 at ui/closures/2229_closure_analysis/run_pass/by_value.rs:18:18: 18:27
                                         // mir::Constant
                                         // + span: ui/closures/2229_closure_analysis/run_pass/by_value.rs:18:18: 18:27
                                         // + literal: Const { ty: &[&str; 3], val: Unevaluated(big_box::{closure#0}, [<closure_kind>, <closure_signature>, <upvars>], Some(promoted[0])) }
        _7 = _18;                        // scope 1 at ui/closures/2229_closure_analysis/run_pass/by_value.rs:18:18: 18:27
        _6 = _7;                         // scope 1 at ui/closures/2229_closure_analysis/run_pass/by_value.rs:18:18: 18:27
        _5 = move _6 as &[&str] (Pointer(Unsize)); // scope 1 at ui/closures/2229_closure_analysis/run_pass/by_value.rs:18:18: 18:27
        _19 = deref_copy (_1.1: &i32);   // scope 1 at ui/closures/2229_closure_analysis/run_pass/by_value.rs:18:29: 18:32
        _14 = _19;                       // scope 1 at ui/closures/2229_closure_analysis/run_pass/by_value.rs:18:29: 18:32
        _13 = _14;                       // scope 1 at ui/closures/2229_closure_analysis/run_pass/by_value.rs:18:29: 18:32
        _12 = core::fmt::ArgumentV1::<'_>::new_display::<i32>(move _13) -> [return: bb1, unwind: bb7]; // scope 1 at ui/closures/2229_closure_analysis/run_pass/by_value.rs:18:29: 18:32
                                         // mir::Constant
                                         // + span: ui/closures/2229_closure_analysis/run_pass/by_value.rs:18:29: 18:32
                                         // + user_ty: UserType(1)
                                         // + literal: Const { ty: for<'b> fn(&'b i32) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_display::<i32>}, val: Value(<ZST>) }
    }

    bb1: {
        _17 = &_2;                       // scope 1 at ui/closures/2229_closure_analysis/run_pass/by_value.rs:18:34: 18:35
        _16 = _17;                       // scope 1 at ui/closures/2229_closure_analysis/run_pass/by_value.rs:18:34: 18:35
        _15 = core::fmt::ArgumentV1::<'_>::new_debug::<[SomeLargeType; 32]>(move _16) -> [return: bb2, unwind: bb7]; // scope 1 at ui/closures/2229_closure_analysis/run_pass/by_value.rs:18:34: 18:35
                                         // mir::Constant
                                         // + span: ui/closures/2229_closure_analysis/run_pass/by_value.rs:18:34: 18:35
                                         // + user_ty: UserType(2)
                                         // + literal: Const { ty: for<'b> fn(&'b [SomeLargeType; 32]) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_debug::<[SomeLargeType; 32]>}, val: Value(<ZST>) }
    }

    bb2: {
        _11 = [move _12, move _15];      // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _10 = &_11;                      // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _9 = _10;                        // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _8 = move _9 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _4 = Arguments::<'_>::new_v1(move _5, move _8) -> [return: bb3, unwind: bb7]; // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb3: {
        _3 = _print(move _4) -> [return: bb4, unwind: bb7]; // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:62
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:27
                                         // + literal: Const { ty: for<'a> fn(Arguments<'a>) {_print}, val: Value(<ZST>) }
    }

    bb4: {
        _20 = alloc::alloc::box_free::<MuchLargerType, std::alloc::Global>(move ((_1.0: std::boxed::Box<MuchLargerType>).0: std::ptr::Unique<MuchLargerType>), move ((_1.0: std::boxed::Box<MuchLargerType>).1: std::alloc::Global)) -> bb6; // scope 0 at ui/closures/2229_closure_analysis/run_pass/by_value.rs:19:5: 19:6
                                         // mir::Constant
                                         // + span: ui/closures/2229_closure_analysis/run_pass/by_value.rs:19:5: 19:6
                                         // + literal: Const { ty: unsafe fn(Unique<MuchLargerType>, std::alloc::Global) {alloc::alloc::box_free::<MuchLargerType, std::alloc::Global>}, val: Value(<ZST>) }
    }

    bb5 (cleanup): {
        resume;                          // scope 0 at ui/closures/2229_closure_analysis/run_pass/by_value.rs:16:13: 19:6
    }

    bb6: {
        return;                          // scope 0 at ui/closures/2229_closure_analysis/run_pass/by_value.rs:19:6: 19:6
    }

    bb7 (cleanup): {
        _21 = alloc::alloc::box_free::<MuchLargerType, std::alloc::Global>(move ((_1.0: std::boxed::Box<MuchLargerType>).0: std::ptr::Unique<MuchLargerType>), move ((_1.0: std::boxed::Box<MuchLargerType>).1: std::alloc::Global)) -> bb5; // scope 0 at ui/closures/2229_closure_analysis/run_pass/by_value.rs:19:5: 19:6
                                         // mir::Constant
                                         // + span: ui/closures/2229_closure_analysis/run_pass/by_value.rs:19:5: 19:6
                                         // + literal: Const { ty: unsafe fn(Unique<MuchLargerType>, std::alloc::Global) {alloc::alloc::box_free::<MuchLargerType, std::alloc::Global>}, val: Value(<ZST>) }
    }
}

promoted[0] in big_box::{closure#0}: &[&str; 3] = {
    let mut _0: &[&str; 3];              // return place in scope 0 at ui/closures/2229_closure_analysis/run_pass/by_value.rs:18:18: 18:27
    let mut _1: [&str; 3];               // in scope 0 at ui/closures/2229_closure_analysis/run_pass/by_value.rs:18:18: 18:27

    bb0: {
        _1 = [const "", const " ", const "\n"]; // scope 0 at ui/closures/2229_closure_analysis/run_pass/by_value.rs:18:18: 18:27
                                         // mir::Constant
                                         // + span: ui/closures/2229_closure_analysis/run_pass/by_value.rs:18:18: 18:27
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
                                         // mir::Constant
                                         // + span: ui/closures/2229_closure_analysis/run_pass/by_value.rs:18:18: 18:27
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
                                         // mir::Constant
                                         // + span: ui/closures/2229_closure_analysis/run_pass/by_value.rs:18:18: 18:27
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at ui/closures/2229_closure_analysis/run_pass/by_value.rs:18:18: 18:27
        return;                          // scope 0 at ui/closures/2229_closure_analysis/run_pass/by_value.rs:18:18: 18:27
    }
}

fn main() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/closures/2229_closure_analysis/run_pass/by_value.rs:24:11: 24:11
    let _1: ();                          // in scope 0 at ui/closures/2229_closure_analysis/run_pass/by_value.rs:25:5: 25:14

    bb0: {
        _1 = big_box() -> bb1;           // scope 0 at ui/closures/2229_closure_analysis/run_pass/by_value.rs:25:5: 25:14
                                         // mir::Constant
                                         // + span: ui/closures/2229_closure_analysis/run_pass/by_value.rs:25:5: 25:12
                                         // + literal: Const { ty: fn() {big_box}, val: Value(<ZST>) }
    }

    bb1: {
        return;                          // scope 0 at ui/closures/2229_closure_analysis/run_pass/by_value.rs:26:2: 26:2
    }
}

fn MuchLargerType(_1: [SomeLargeType; 32]) -> MuchLargerType {
    let mut _0: MuchLargerType;          // return place in scope 0 at ui/closures/2229_closure_analysis/run_pass/by_value.rs:9:1: 9:22

    bb0: {
        _0 = MuchLargerType(move _1);    // scope 0 at ui/closures/2229_closure_analysis/run_pass/by_value.rs:9:1: 9:22
        return;                          // scope 0 at ui/closures/2229_closure_analysis/run_pass/by_value.rs:9:1: 9:22
    }
}

// MIR FOR CTFE
fn MuchLargerType(_1: [SomeLargeType; 32]) -> MuchLargerType {
    let mut _0: MuchLargerType;          // return place in scope 0 at ui/closures/2229_closure_analysis/run_pass/by_value.rs:9:1: 9:22

    bb0: {
        _0 = MuchLargerType(move _1);    // scope 0 at ui/closures/2229_closure_analysis/run_pass/by_value.rs:9:1: 9:22
        return;                          // scope 0 at ui/closures/2229_closure_analysis/run_pass/by_value.rs:9:1: 9:22
    }
}
