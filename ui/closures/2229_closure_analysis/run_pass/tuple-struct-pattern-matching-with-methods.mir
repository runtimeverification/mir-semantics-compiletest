// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
fn <impl at ui/closures/2229_closure_analysis/run_pass/tuple-struct-pattern-matching-with-methods.rs:4:16: 4:21>::clone(_1: &PointType) -> PointType {
    debug self => _1;                    // in scope 0 at ui/closures/2229_closure_analysis/run_pass/tuple-struct-pattern-matching-with-methods.rs:4:16: 4:21
    let mut _0: PointType;               // return place in scope 0 at ui/closures/2229_closure_analysis/run_pass/tuple-struct-pattern-matching-with-methods.rs:4:16: 4:21
    scope 1 {
    }

    bb0: {
        _0 = (*_1);                      // scope 1 at ui/closures/2229_closure_analysis/run_pass/tuple-struct-pattern-matching-with-methods.rs:4:16: 4:21
        return;                          // scope 0 at ui/closures/2229_closure_analysis/run_pass/tuple-struct-pattern-matching-with-methods.rs:4:21: 4:21
    }
}

fn <impl at ui/closures/2229_closure_analysis/run_pass/tuple-struct-pattern-matching-with-methods.rs:15:1: 15:12>::test1(_1: &mut Points) -> Vec<usize> {
    debug self => _1;                    // in scope 0 at ui/closures/2229_closure_analysis/run_pass/tuple-struct-pattern-matching-with-methods.rs:16:18: 16:27
    let mut _0: std::vec::Vec<usize>;    // return place in scope 0 at ui/closures/2229_closure_analysis/run_pass/tuple-struct-pattern-matching-with-methods.rs:16:32: 16:42
    let mut _2: std::iter::FilterMap<std::ops::Range<usize>, [closure@ui/closures/2229_closure_analysis/run_pass/tuple-struct-pattern-matching-with-methods.rs:18:25: 18:28]>; // in scope 0 at ui/closures/2229_closure_analysis/run_pass/tuple-struct-pattern-matching-with-methods.rs:17:9: 23:15
    let mut _3: std::ops::Range<usize>;  // in scope 0 at ui/closures/2229_closure_analysis/run_pass/tuple-struct-pattern-matching-with-methods.rs:17:9: 17:31
    let mut _4: usize;                   // in scope 0 at ui/closures/2229_closure_analysis/run_pass/tuple-struct-pattern-matching-with-methods.rs:17:13: 17:30
    let mut _5: &std::vec::Vec<PointType>; // in scope 0 at ui/closures/2229_closure_analysis/run_pass/tuple-struct-pattern-matching-with-methods.rs:17:13: 17:30
    let mut _6: [closure@ui/closures/2229_closure_analysis/run_pass/tuple-struct-pattern-matching-with-methods.rs:18:25: 18:28]; // in scope 0 at ui/closures/2229_closure_analysis/run_pass/tuple-struct-pattern-matching-with-methods.rs:18:25: 23:14
    let mut _7: &mut Points;             // in scope 0 at ui/closures/2229_closure_analysis/run_pass/tuple-struct-pattern-matching-with-methods.rs:18:25: 23:14

    bb0: {
        _5 = &((*_1).0: std::vec::Vec<PointType>); // scope 0 at ui/closures/2229_closure_analysis/run_pass/tuple-struct-pattern-matching-with-methods.rs:17:13: 17:30
        _4 = Vec::<PointType>::len(move _5) -> bb1; // scope 0 at ui/closures/2229_closure_analysis/run_pass/tuple-struct-pattern-matching-with-methods.rs:17:13: 17:30
                                         // mir::Constant
                                         // + span: ui/closures/2229_closure_analysis/run_pass/tuple-struct-pattern-matching-with-methods.rs:17:25: 17:28
                                         // + literal: Const { ty: for<'a> fn(&'a Vec<PointType>) -> usize {Vec::<PointType>::len}, val: Value(<ZST>) }
    }

    bb1: {
        _3 = std::ops::Range::<usize> { start: const 0_usize, end: move _4 }; // scope 0 at ui/closures/2229_closure_analysis/run_pass/tuple-struct-pattern-matching-with-methods.rs:17:9: 17:31
        _7 = &mut (*_1);                 // scope 0 at ui/closures/2229_closure_analysis/run_pass/tuple-struct-pattern-matching-with-methods.rs:18:25: 23:14
        _6 = [closure@ui/closures/2229_closure_analysis/run_pass/tuple-struct-pattern-matching-with-methods.rs:18:25: 18:28] { self: move _7 }; // scope 0 at ui/closures/2229_closure_analysis/run_pass/tuple-struct-pattern-matching-with-methods.rs:18:25: 23:14
                                         // closure
                                         // + def_id: DefId(0:7 ~ tuple_struct_pattern_matching_with_methods[95ef]::{impl#0}::test1::{closure#0})
                                         // + substs: [
                                         //     i16,
                                         //     extern "rust-call" fn((usize,)) -> std::option::Option<usize>,
                                         //     (&mut Points,),
                                         // ]
        _2 = <std::ops::Range<usize> as Iterator>::filter_map::<usize, [closure@ui/closures/2229_closure_analysis/run_pass/tuple-struct-pattern-matching-with-methods.rs:18:25: 18:28]>(move _3, move _6) -> bb2; // scope 0 at ui/closures/2229_closure_analysis/run_pass/tuple-struct-pattern-matching-with-methods.rs:17:9: 23:15
                                         // mir::Constant
                                         // + span: ui/closures/2229_closure_analysis/run_pass/tuple-struct-pattern-matching-with-methods.rs:18:14: 18:24
                                         // + literal: Const { ty: fn(std::ops::Range<usize>, [closure@ui/closures/2229_closure_analysis/run_pass/tuple-struct-pattern-matching-with-methods.rs:18:25: 18:28]) -> FilterMap<std::ops::Range<usize>, [closure@ui/closures/2229_closure_analysis/run_pass/tuple-struct-pattern-matching-with-methods.rs:18:25: 18:28]> {<std::ops::Range<usize> as Iterator>::filter_map::<usize, [closure@ui/closures/2229_closure_analysis/run_pass/tuple-struct-pattern-matching-with-methods.rs:18:25: 18:28]>}, val: Value(<ZST>) }
    }

    bb2: {
        _0 = <FilterMap<std::ops::Range<usize>, [closure@ui/closures/2229_closure_analysis/run_pass/tuple-struct-pattern-matching-with-methods.rs:18:25: 18:28]> as Iterator>::collect::<Vec<usize>>(move _2) -> bb3; // scope 0 at ui/closures/2229_closure_analysis/run_pass/tuple-struct-pattern-matching-with-methods.rs:17:9: 24:23
                                         // mir::Constant
                                         // + span: ui/closures/2229_closure_analysis/run_pass/tuple-struct-pattern-matching-with-methods.rs:24:14: 24:21
                                         // + literal: Const { ty: fn(FilterMap<std::ops::Range<usize>, [closure@ui/closures/2229_closure_analysis/run_pass/tuple-struct-pattern-matching-with-methods.rs:18:25: 18:28]>) -> Vec<usize> {<FilterMap<std::ops::Range<usize>, [closure@ui/closures/2229_closure_analysis/run_pass/tuple-struct-pattern-matching-with-methods.rs:18:25: 18:28]> as Iterator>::collect::<Vec<usize>>}, val: Value(<ZST>) }
    }

    bb3: {
        return;                          // scope 0 at ui/closures/2229_closure_analysis/run_pass/tuple-struct-pattern-matching-with-methods.rs:25:6: 25:6
    }
}

fn <impl at ui/closures/2229_closure_analysis/run_pass/tuple-struct-pattern-matching-with-methods.rs:15:1: 15:12>::test1::{closure#0}(_1: &mut [closure@ui/closures/2229_closure_analysis/run_pass/tuple-struct-pattern-matching-with-methods.rs:18:25: 18:28], _2: usize) -> Option<usize> {
    debug i => _2;                       // in scope 0 at ui/closures/2229_closure_analysis/run_pass/tuple-struct-pattern-matching-with-methods.rs:18:26: 18:27
    debug self => (*((*_1).0: &mut Points)); // in scope 0 at ui/closures/2229_closure_analysis/run_pass/tuple-struct-pattern-matching-with-methods.rs:16:18: 16:27
    let mut _0: std::option::Option<usize>; // return place in scope 0 at ui/closures/2229_closure_analysis/run_pass/tuple-struct-pattern-matching-with-methods.rs:18:29: 18:29
    let mut _3: PointType;               // in scope 0 at ui/closures/2229_closure_analysis/run_pass/tuple-struct-pattern-matching-with-methods.rs:19:23: 19:36
    let mut _4: &mut Points;             // in scope 0 at ui/closures/2229_closure_analysis/run_pass/tuple-struct-pattern-matching-with-methods.rs:19:23: 19:36
    let mut _5: usize;                   // in scope 0 at ui/closures/2229_closure_analysis/run_pass/tuple-struct-pattern-matching-with-methods.rs:19:34: 19:35
    let mut _6: isize;                   // in scope 0 at ui/closures/2229_closure_analysis/run_pass/tuple-struct-pattern-matching-with-methods.rs:20:21: 20:41
    let mut _7: usize;                   // in scope 0 at ui/closures/2229_closure_analysis/run_pass/tuple-struct-pattern-matching-with-methods.rs:20:50: 20:51
    let mut _8: &mut Points;             // in scope 0 at ui/closures/2229_closure_analysis/run_pass/tuple-struct-pattern-matching-with-methods.rs:18:25: 23:14

    bb0: {
        _8 = deref_copy ((*_1).0: &mut Points); // scope 0 at ui/closures/2229_closure_analysis/run_pass/tuple-struct-pattern-matching-with-methods.rs:19:23: 19:36
        _4 = &mut (*_8);                 // scope 0 at ui/closures/2229_closure_analysis/run_pass/tuple-struct-pattern-matching-with-methods.rs:19:23: 19:36
        _5 = _2;                         // scope 0 at ui/closures/2229_closure_analysis/run_pass/tuple-struct-pattern-matching-with-methods.rs:19:34: 19:35
        _3 = Points::test2(move _4, move _5) -> bb1; // scope 0 at ui/closures/2229_closure_analysis/run_pass/tuple-struct-pattern-matching-with-methods.rs:19:23: 19:36
                                         // mir::Constant
                                         // + span: ui/closures/2229_closure_analysis/run_pass/tuple-struct-pattern-matching-with-methods.rs:19:28: 19:33
                                         // + literal: Const { ty: for<'a> fn(&'a mut Points, usize) -> PointType {Points::test2}, val: Value(<ZST>) }
    }

    bb1: {
        _6 = discriminant(_3);           // scope 0 at ui/closures/2229_closure_analysis/run_pass/tuple-struct-pattern-matching-with-methods.rs:19:23: 19:36
        switchInt(move _6) -> [0: bb4, 1: bb2, otherwise: bb3]; // scope 0 at ui/closures/2229_closure_analysis/run_pass/tuple-struct-pattern-matching-with-methods.rs:19:17: 19:36
    }

    bb2: {
        _0 = Option::<usize>::None;      // scope 0 at ui/closures/2229_closure_analysis/run_pass/tuple-struct-pattern-matching-with-methods.rs:21:47: 21:51
        goto -> bb5;                     // scope 0 at ui/closures/2229_closure_analysis/run_pass/tuple-struct-pattern-matching-with-methods.rs:21:47: 21:51
    }

    bb3: {
        unreachable;                     // scope 0 at ui/closures/2229_closure_analysis/run_pass/tuple-struct-pattern-matching-with-methods.rs:19:23: 19:36
    }

    bb4: {
        _7 = _2;                         // scope 0 at ui/closures/2229_closure_analysis/run_pass/tuple-struct-pattern-matching-with-methods.rs:20:50: 20:51
        _0 = Option::<usize>::Some(move _7); // scope 0 at ui/closures/2229_closure_analysis/run_pass/tuple-struct-pattern-matching-with-methods.rs:20:45: 20:52
        goto -> bb5;                     // scope 0 at ui/closures/2229_closure_analysis/run_pass/tuple-struct-pattern-matching-with-methods.rs:20:51: 20:52
    }

    bb5: {
        return;                          // scope 0 at ui/closures/2229_closure_analysis/run_pass/tuple-struct-pattern-matching-with-methods.rs:23:14: 23:14
    }
}

fn <impl at ui/closures/2229_closure_analysis/run_pass/tuple-struct-pattern-matching-with-methods.rs:15:1: 15:12>::test2(_1: &mut Points, _2: usize) -> PointType {
    debug self => _1;                    // in scope 0 at ui/closures/2229_closure_analysis/run_pass/tuple-struct-pattern-matching-with-methods.rs:27:18: 27:27
    debug i => _2;                       // in scope 0 at ui/closures/2229_closure_analysis/run_pass/tuple-struct-pattern-matching-with-methods.rs:27:29: 27:30
    let mut _0: PointType;               // return place in scope 0 at ui/closures/2229_closure_analysis/run_pass/tuple-struct-pattern-matching-with-methods.rs:27:42: 27:51
    let mut _3: &PointType;              // in scope 0 at ui/closures/2229_closure_analysis/run_pass/tuple-struct-pattern-matching-with-methods.rs:28:9: 28:23
    let mut _4: &std::vec::Vec<PointType>; // in scope 0 at ui/closures/2229_closure_analysis/run_pass/tuple-struct-pattern-matching-with-methods.rs:28:9: 28:20
    let mut _5: usize;                   // in scope 0 at ui/closures/2229_closure_analysis/run_pass/tuple-struct-pattern-matching-with-methods.rs:28:21: 28:22

    bb0: {
        _4 = &((*_1).0: std::vec::Vec<PointType>); // scope 0 at ui/closures/2229_closure_analysis/run_pass/tuple-struct-pattern-matching-with-methods.rs:28:9: 28:20
        _5 = _2;                         // scope 0 at ui/closures/2229_closure_analysis/run_pass/tuple-struct-pattern-matching-with-methods.rs:28:21: 28:22
        _3 = <Vec<PointType> as Index<usize>>::index(move _4, move _5) -> bb1; // scope 0 at ui/closures/2229_closure_analysis/run_pass/tuple-struct-pattern-matching-with-methods.rs:28:9: 28:23
                                         // mir::Constant
                                         // + span: ui/closures/2229_closure_analysis/run_pass/tuple-struct-pattern-matching-with-methods.rs:28:9: 28:23
                                         // + literal: Const { ty: for<'a> fn(&'a Vec<PointType>, usize) -> &'a <Vec<PointType> as Index<usize>>::Output {<Vec<PointType> as Index<usize>>::index}, val: Value(<ZST>) }
    }

    bb1: {
        _0 = (*_3);                      // scope 0 at ui/closures/2229_closure_analysis/run_pass/tuple-struct-pattern-matching-with-methods.rs:28:9: 28:23
        return;                          // scope 0 at ui/closures/2229_closure_analysis/run_pass/tuple-struct-pattern-matching-with-methods.rs:29:6: 29:6
    }
}

fn main() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/closures/2229_closure_analysis/run_pass/tuple-struct-pattern-matching-with-methods.rs:32:11: 32:11
    let mut _1: Points;                  // in scope 0 at ui/closures/2229_closure_analysis/run_pass/tuple-struct-pattern-matching-with-methods.rs:33:9: 33:19
    let mut _2: std::vec::Vec<PointType>; // in scope 0 at ui/closures/2229_closure_analysis/run_pass/tuple-struct-pattern-matching-with-methods.rs:34:17: 34:40
    let _3: ();                          // in scope 0 at ui/closures/2229_closure_analysis/run_pass/tuple-struct-pattern-matching-with-methods.rs:37:5: 37:49
    let mut _4: &mut std::vec::Vec<PointType>; // in scope 0 at ui/closures/2229_closure_analysis/run_pass/tuple-struct-pattern-matching-with-methods.rs:37:5: 37:49
    let mut _5: PointType;               // in scope 0 at ui/closures/2229_closure_analysis/run_pass/tuple-struct-pattern-matching-with-methods.rs:37:24: 37:48
    let _6: ();                          // in scope 0 at ui/closures/2229_closure_analysis/run_pass/tuple-struct-pattern-matching-with-methods.rs:38:5: 38:45
    let mut _7: &mut std::vec::Vec<PointType>; // in scope 0 at ui/closures/2229_closure_analysis/run_pass/tuple-struct-pattern-matching-with-methods.rs:38:5: 38:45
    let mut _8: PointType;               // in scope 0 at ui/closures/2229_closure_analysis/run_pass/tuple-struct-pattern-matching-with-methods.rs:38:24: 38:44
    let _9: ();                          // in scope 0 at ui/closures/2229_closure_analysis/run_pass/tuple-struct-pattern-matching-with-methods.rs:39:5: 39:49
    let mut _10: &mut std::vec::Vec<PointType>; // in scope 0 at ui/closures/2229_closure_analysis/run_pass/tuple-struct-pattern-matching-with-methods.rs:39:5: 39:49
    let mut _11: PointType;              // in scope 0 at ui/closures/2229_closure_analysis/run_pass/tuple-struct-pattern-matching-with-methods.rs:39:24: 39:48
    let _12: ();                         // in scope 0 at ui/closures/2229_closure_analysis/run_pass/tuple-struct-pattern-matching-with-methods.rs:40:5: 40:45
    let mut _13: &mut std::vec::Vec<PointType>; // in scope 0 at ui/closures/2229_closure_analysis/run_pass/tuple-struct-pattern-matching-with-methods.rs:40:5: 40:45
    let mut _14: PointType;              // in scope 0 at ui/closures/2229_closure_analysis/run_pass/tuple-struct-pattern-matching-with-methods.rs:40:24: 40:44
    let _15: ();                         // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:62
    let mut _16: std::fmt::Arguments<'_>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _17: &[&str];                // in scope 0 at ui/closures/2229_closure_analysis/run_pass/tuple-struct-pattern-matching-with-methods.rs:42:14: 42:20
    let mut _18: &[&str; 2];             // in scope 0 at ui/closures/2229_closure_analysis/run_pass/tuple-struct-pattern-matching-with-methods.rs:42:14: 42:20
    let _19: &[&str; 2];                 // in scope 0 at ui/closures/2229_closure_analysis/run_pass/tuple-struct-pattern-matching-with-methods.rs:42:14: 42:20
    let mut _20: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _21: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let _22: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let _23: [core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _24: core::fmt::ArgumentV1<'_>; // in scope 0 at ui/closures/2229_closure_analysis/run_pass/tuple-struct-pattern-matching-with-methods.rs:42:22: 42:36
    let mut _25: &std::vec::Vec<usize>;  // in scope 0 at ui/closures/2229_closure_analysis/run_pass/tuple-struct-pattern-matching-with-methods.rs:42:22: 42:36
    let _26: &std::vec::Vec<usize>;      // in scope 0 at ui/closures/2229_closure_analysis/run_pass/tuple-struct-pattern-matching-with-methods.rs:42:22: 42:36
    let _27: std::vec::Vec<usize>;       // in scope 0 at ui/closures/2229_closure_analysis/run_pass/tuple-struct-pattern-matching-with-methods.rs:42:22: 42:36
    let mut _28: &mut Points;            // in scope 0 at ui/closures/2229_closure_analysis/run_pass/tuple-struct-pattern-matching-with-methods.rs:42:22: 42:36
    scope 1 {
        debug points => _1;              // in scope 1 at ui/closures/2229_closure_analysis/run_pass/tuple-struct-pattern-matching-with-methods.rs:33:9: 33:19
        let mut _29: &[&str; 2];         // in scope 1 at ui/closures/2229_closure_analysis/run_pass/tuple-struct-pattern-matching-with-methods.rs:42:14: 42:20
    }

    bb0: {
        _2 = Vec::<PointType>::new() -> bb1; // scope 0 at ui/closures/2229_closure_analysis/run_pass/tuple-struct-pattern-matching-with-methods.rs:34:17: 34:40
                                         // mir::Constant
                                         // + span: ui/closures/2229_closure_analysis/run_pass/tuple-struct-pattern-matching-with-methods.rs:34:17: 34:38
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: fn() -> Vec<PointType> {Vec::<PointType>::new}, val: Value(<ZST>) }
    }

    bb1: {
        _1 = Points { points: move _2 }; // scope 0 at ui/closures/2229_closure_analysis/run_pass/tuple-struct-pattern-matching-with-methods.rs:33:22: 35:6
        _4 = &mut (_1.0: std::vec::Vec<PointType>); // scope 1 at ui/closures/2229_closure_analysis/run_pass/tuple-struct-pattern-matching-with-methods.rs:37:5: 37:49
        _5 = PointType::ThreeD(const 0_u32, const 0_u32, const 0_u32); // scope 1 at ui/closures/2229_closure_analysis/run_pass/tuple-struct-pattern-matching-with-methods.rs:37:24: 37:48
        _3 = Vec::<PointType>::push(move _4, move _5) -> [return: bb2, unwind: bb13]; // scope 1 at ui/closures/2229_closure_analysis/run_pass/tuple-struct-pattern-matching-with-methods.rs:37:5: 37:49
                                         // mir::Constant
                                         // + span: ui/closures/2229_closure_analysis/run_pass/tuple-struct-pattern-matching-with-methods.rs:37:19: 37:23
                                         // + literal: Const { ty: for<'a> fn(&'a mut Vec<PointType>, PointType) {Vec::<PointType>::push}, val: Value(<ZST>) }
    }

    bb2: {
        _7 = &mut (_1.0: std::vec::Vec<PointType>); // scope 1 at ui/closures/2229_closure_analysis/run_pass/tuple-struct-pattern-matching-with-methods.rs:38:5: 38:45
        _8 = PointType::TwoD(const 0_u32, const 0_u32); // scope 1 at ui/closures/2229_closure_analysis/run_pass/tuple-struct-pattern-matching-with-methods.rs:38:24: 38:44
        _6 = Vec::<PointType>::push(move _7, move _8) -> [return: bb3, unwind: bb13]; // scope 1 at ui/closures/2229_closure_analysis/run_pass/tuple-struct-pattern-matching-with-methods.rs:38:5: 38:45
                                         // mir::Constant
                                         // + span: ui/closures/2229_closure_analysis/run_pass/tuple-struct-pattern-matching-with-methods.rs:38:19: 38:23
                                         // + literal: Const { ty: for<'a> fn(&'a mut Vec<PointType>, PointType) {Vec::<PointType>::push}, val: Value(<ZST>) }
    }

    bb3: {
        _10 = &mut (_1.0: std::vec::Vec<PointType>); // scope 1 at ui/closures/2229_closure_analysis/run_pass/tuple-struct-pattern-matching-with-methods.rs:39:5: 39:49
        _11 = PointType::ThreeD(const 0_u32, const 0_u32, const 1_u32); // scope 1 at ui/closures/2229_closure_analysis/run_pass/tuple-struct-pattern-matching-with-methods.rs:39:24: 39:48
        _9 = Vec::<PointType>::push(move _10, move _11) -> [return: bb4, unwind: bb13]; // scope 1 at ui/closures/2229_closure_analysis/run_pass/tuple-struct-pattern-matching-with-methods.rs:39:5: 39:49
                                         // mir::Constant
                                         // + span: ui/closures/2229_closure_analysis/run_pass/tuple-struct-pattern-matching-with-methods.rs:39:19: 39:23
                                         // + literal: Const { ty: for<'a> fn(&'a mut Vec<PointType>, PointType) {Vec::<PointType>::push}, val: Value(<ZST>) }
    }

    bb4: {
        _13 = &mut (_1.0: std::vec::Vec<PointType>); // scope 1 at ui/closures/2229_closure_analysis/run_pass/tuple-struct-pattern-matching-with-methods.rs:40:5: 40:45
        _14 = PointType::TwoD(const 0_u32, const 1_u32); // scope 1 at ui/closures/2229_closure_analysis/run_pass/tuple-struct-pattern-matching-with-methods.rs:40:24: 40:44
        _12 = Vec::<PointType>::push(move _13, move _14) -> [return: bb5, unwind: bb13]; // scope 1 at ui/closures/2229_closure_analysis/run_pass/tuple-struct-pattern-matching-with-methods.rs:40:5: 40:45
                                         // mir::Constant
                                         // + span: ui/closures/2229_closure_analysis/run_pass/tuple-struct-pattern-matching-with-methods.rs:40:19: 40:23
                                         // + literal: Const { ty: for<'a> fn(&'a mut Vec<PointType>, PointType) {Vec::<PointType>::push}, val: Value(<ZST>) }
    }

    bb5: {
        _29 = const _;                   // scope 1 at ui/closures/2229_closure_analysis/run_pass/tuple-struct-pattern-matching-with-methods.rs:42:14: 42:20
                                         // mir::Constant
                                         // + span: ui/closures/2229_closure_analysis/run_pass/tuple-struct-pattern-matching-with-methods.rs:42:14: 42:20
                                         // + literal: Const { ty: &[&str; 2], val: Unevaluated(main, [], Some(promoted[0])) }
        _19 = _29;                       // scope 1 at ui/closures/2229_closure_analysis/run_pass/tuple-struct-pattern-matching-with-methods.rs:42:14: 42:20
        _18 = _19;                       // scope 1 at ui/closures/2229_closure_analysis/run_pass/tuple-struct-pattern-matching-with-methods.rs:42:14: 42:20
        _17 = move _18 as &[&str] (Pointer(Unsize)); // scope 1 at ui/closures/2229_closure_analysis/run_pass/tuple-struct-pattern-matching-with-methods.rs:42:14: 42:20
        _28 = &mut _1;                   // scope 1 at ui/closures/2229_closure_analysis/run_pass/tuple-struct-pattern-matching-with-methods.rs:42:22: 42:36
        _27 = Points::test1(move _28) -> [return: bb6, unwind: bb13]; // scope 1 at ui/closures/2229_closure_analysis/run_pass/tuple-struct-pattern-matching-with-methods.rs:42:22: 42:36
                                         // mir::Constant
                                         // + span: ui/closures/2229_closure_analysis/run_pass/tuple-struct-pattern-matching-with-methods.rs:42:29: 42:34
                                         // + literal: Const { ty: for<'a> fn(&'a mut Points) -> Vec<usize> {Points::test1}, val: Value(<ZST>) }
    }

    bb6: {
        _26 = &_27;                      // scope 1 at ui/closures/2229_closure_analysis/run_pass/tuple-struct-pattern-matching-with-methods.rs:42:22: 42:36
        _25 = _26;                       // scope 1 at ui/closures/2229_closure_analysis/run_pass/tuple-struct-pattern-matching-with-methods.rs:42:22: 42:36
        _24 = core::fmt::ArgumentV1::<'_>::new_debug::<Vec<usize>>(move _25) -> [return: bb7, unwind: bb12]; // scope 1 at ui/closures/2229_closure_analysis/run_pass/tuple-struct-pattern-matching-with-methods.rs:42:22: 42:36
                                         // mir::Constant
                                         // + span: ui/closures/2229_closure_analysis/run_pass/tuple-struct-pattern-matching-with-methods.rs:42:22: 42:36
                                         // + user_ty: UserType(2)
                                         // + literal: Const { ty: for<'b> fn(&'b Vec<usize>) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_debug::<Vec<usize>>}, val: Value(<ZST>) }
    }

    bb7: {
        _23 = [move _24];                // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _22 = &_23;                      // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _21 = _22;                       // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _20 = move _21 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _16 = Arguments::<'_>::new_v1(move _17, move _20) -> [return: bb8, unwind: bb12]; // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // + user_ty: UserType(1)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb8: {
        _15 = _print(move _16) -> [return: bb9, unwind: bb12]; // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:62
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:27
                                         // + literal: Const { ty: for<'a> fn(Arguments<'a>) {_print}, val: Value(<ZST>) }
    }

    bb9: {
        drop(_27) -> [return: bb10, unwind: bb13]; // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:62: 137:63
    }

    bb10: {
        drop(_1) -> bb11;                // scope 0 at ui/closures/2229_closure_analysis/run_pass/tuple-struct-pattern-matching-with-methods.rs:43:1: 43:2
    }

    bb11: {
        return;                          // scope 0 at ui/closures/2229_closure_analysis/run_pass/tuple-struct-pattern-matching-with-methods.rs:43:2: 43:2
    }

    bb12 (cleanup): {
        drop(_27) -> bb13;               // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:62: 137:63
    }

    bb13 (cleanup): {
        drop(_1) -> bb14;                // scope 0 at ui/closures/2229_closure_analysis/run_pass/tuple-struct-pattern-matching-with-methods.rs:43:1: 43:2
    }

    bb14 (cleanup): {
        resume;                          // scope 0 at ui/closures/2229_closure_analysis/run_pass/tuple-struct-pattern-matching-with-methods.rs:32:1: 43:2
    }
}

promoted[0] in main: &[&str; 2] = {
    let mut _0: &[&str; 2];              // return place in scope 0 at ui/closures/2229_closure_analysis/run_pass/tuple-struct-pattern-matching-with-methods.rs:42:14: 42:20
    let mut _1: [&str; 2];               // in scope 0 at ui/closures/2229_closure_analysis/run_pass/tuple-struct-pattern-matching-with-methods.rs:42:14: 42:20

    bb0: {
        _1 = [const "", const "\n"];     // scope 0 at ui/closures/2229_closure_analysis/run_pass/tuple-struct-pattern-matching-with-methods.rs:42:14: 42:20
                                         // mir::Constant
                                         // + span: ui/closures/2229_closure_analysis/run_pass/tuple-struct-pattern-matching-with-methods.rs:42:14: 42:20
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
                                         // mir::Constant
                                         // + span: ui/closures/2229_closure_analysis/run_pass/tuple-struct-pattern-matching-with-methods.rs:42:14: 42:20
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at ui/closures/2229_closure_analysis/run_pass/tuple-struct-pattern-matching-with-methods.rs:42:14: 42:20
        return;                          // scope 0 at ui/closures/2229_closure_analysis/run_pass/tuple-struct-pattern-matching-with-methods.rs:42:14: 42:20
    }
}

fn PointType::TwoD(_1: u32, _2: u32) -> PointType {
    let mut _0: PointType;               // return place in scope 0 at ui/closures/2229_closure_analysis/run_pass/tuple-struct-pattern-matching-with-methods.rs:6:5: 6:9

    bb0: {
        _0 = PointType::TwoD(move _1, move _2); // scope 0 at ui/closures/2229_closure_analysis/run_pass/tuple-struct-pattern-matching-with-methods.rs:6:5: 6:9
        return;                          // scope 0 at ui/closures/2229_closure_analysis/run_pass/tuple-struct-pattern-matching-with-methods.rs:6:5: 6:9
    }
}

// MIR FOR CTFE
fn PointType::TwoD(_1: u32, _2: u32) -> PointType {
    let mut _0: PointType;               // return place in scope 0 at ui/closures/2229_closure_analysis/run_pass/tuple-struct-pattern-matching-with-methods.rs:6:5: 6:9

    bb0: {
        _0 = PointType::TwoD(move _1, move _2); // scope 0 at ui/closures/2229_closure_analysis/run_pass/tuple-struct-pattern-matching-with-methods.rs:6:5: 6:9
        return;                          // scope 0 at ui/closures/2229_closure_analysis/run_pass/tuple-struct-pattern-matching-with-methods.rs:6:5: 6:9
    }
}

fn PointType::ThreeD(_1: u32, _2: u32, _3: u32) -> PointType {
    let mut _0: PointType;               // return place in scope 0 at ui/closures/2229_closure_analysis/run_pass/tuple-struct-pattern-matching-with-methods.rs:7:5: 7:11

    bb0: {
        _0 = PointType::ThreeD(move _1, move _2, move _3); // scope 0 at ui/closures/2229_closure_analysis/run_pass/tuple-struct-pattern-matching-with-methods.rs:7:5: 7:11
        return;                          // scope 0 at ui/closures/2229_closure_analysis/run_pass/tuple-struct-pattern-matching-with-methods.rs:7:5: 7:11
    }
}

// MIR FOR CTFE
fn PointType::ThreeD(_1: u32, _2: u32, _3: u32) -> PointType {
    let mut _0: PointType;               // return place in scope 0 at ui/closures/2229_closure_analysis/run_pass/tuple-struct-pattern-matching-with-methods.rs:7:5: 7:11

    bb0: {
        _0 = PointType::ThreeD(move _1, move _2, move _3); // scope 0 at ui/closures/2229_closure_analysis/run_pass/tuple-struct-pattern-matching-with-methods.rs:7:5: 7:11
        return;                          // scope 0 at ui/closures/2229_closure_analysis/run_pass/tuple-struct-pattern-matching-with-methods.rs:7:5: 7:11
    }
}
