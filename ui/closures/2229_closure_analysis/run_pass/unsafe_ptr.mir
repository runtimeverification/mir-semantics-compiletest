// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
fn <impl at ui/closures/2229_closure_analysis/run_pass/unsafe_ptr.rs:8:10: 8:15>::fmt(_1: &S, _2: &mut Formatter<'_>) -> Result<(), std::fmt::Error> {
    debug self => _1;                    // in scope 0 at ui/closures/2229_closure_analysis/run_pass/unsafe_ptr.rs:8:10: 8:15
    debug f => _2;                       // in scope 0 at ui/closures/2229_closure_analysis/run_pass/unsafe_ptr.rs:8:10: 8:15
    let mut _0: std::result::Result<(), std::fmt::Error>; // return place in scope 0 at ui/closures/2229_closure_analysis/run_pass/unsafe_ptr.rs:8:10: 8:15
    let mut _3: &mut std::fmt::Formatter<'_>; // in scope 0 at ui/closures/2229_closure_analysis/run_pass/unsafe_ptr.rs:8:10: 8:15
    let mut _4: &str;                    // in scope 0 at ui/closures/2229_closure_analysis/run_pass/unsafe_ptr.rs:8:10: 8:15
    let _5: &str;                        // in scope 0 at ui/closures/2229_closure_analysis/run_pass/unsafe_ptr.rs:8:10: 8:15
    let mut _6: &str;                    // in scope 0 at ui/closures/2229_closure_analysis/run_pass/unsafe_ptr.rs:10:5: 10:14
    let _7: &str;                        // in scope 0 at ui/closures/2229_closure_analysis/run_pass/unsafe_ptr.rs:10:5: 10:14
    let mut _8: &dyn std::fmt::Debug;    // in scope 0 at ui/closures/2229_closure_analysis/run_pass/unsafe_ptr.rs:10:5: 10:14
    let mut _9: &std::string::String;    // in scope 0 at ui/closures/2229_closure_analysis/run_pass/unsafe_ptr.rs:10:5: 10:14
    let _10: &std::string::String;       // in scope 0 at ui/closures/2229_closure_analysis/run_pass/unsafe_ptr.rs:10:5: 10:14
    let mut _11: &str;                   // in scope 0 at ui/closures/2229_closure_analysis/run_pass/unsafe_ptr.rs:11:5: 11:14
    let _12: &str;                       // in scope 0 at ui/closures/2229_closure_analysis/run_pass/unsafe_ptr.rs:11:5: 11:14
    let mut _13: &dyn std::fmt::Debug;   // in scope 0 at ui/closures/2229_closure_analysis/run_pass/unsafe_ptr.rs:11:5: 11:14
    let mut _14: &&std::string::String;  // in scope 0 at ui/closures/2229_closure_analysis/run_pass/unsafe_ptr.rs:11:5: 11:14
    let _15: &&std::string::String;      // in scope 0 at ui/closures/2229_closure_analysis/run_pass/unsafe_ptr.rs:11:5: 11:14
    let _16: &std::string::String;       // in scope 0 at ui/closures/2229_closure_analysis/run_pass/unsafe_ptr.rs:11:5: 11:14

    bb0: {
        _3 = &mut (*_2);                 // scope 0 at ui/closures/2229_closure_analysis/run_pass/unsafe_ptr.rs:8:10: 8:15
        _5 = const "S";                  // scope 0 at ui/closures/2229_closure_analysis/run_pass/unsafe_ptr.rs:8:10: 8:15
                                         // mir::Constant
                                         // + span: ui/closures/2229_closure_analysis/run_pass/unsafe_ptr.rs:8:10: 8:15
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _4 = _5;                         // scope 0 at ui/closures/2229_closure_analysis/run_pass/unsafe_ptr.rs:8:10: 8:15
        _7 = const "s";                  // scope 0 at ui/closures/2229_closure_analysis/run_pass/unsafe_ptr.rs:10:5: 10:14
                                         // mir::Constant
                                         // + span: ui/closures/2229_closure_analysis/run_pass/unsafe_ptr.rs:10:5: 10:14
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _6 = _7;                         // scope 0 at ui/closures/2229_closure_analysis/run_pass/unsafe_ptr.rs:10:5: 10:14
        _10 = &((*_1).0: std::string::String); // scope 0 at ui/closures/2229_closure_analysis/run_pass/unsafe_ptr.rs:10:5: 10:14
        _9 = _10;                        // scope 0 at ui/closures/2229_closure_analysis/run_pass/unsafe_ptr.rs:10:5: 10:14
        _8 = move _9 as &dyn std::fmt::Debug (Pointer(Unsize)); // scope 0 at ui/closures/2229_closure_analysis/run_pass/unsafe_ptr.rs:10:5: 10:14
        _12 = const "t";                 // scope 0 at ui/closures/2229_closure_analysis/run_pass/unsafe_ptr.rs:11:5: 11:14
                                         // mir::Constant
                                         // + span: ui/closures/2229_closure_analysis/run_pass/unsafe_ptr.rs:11:5: 11:14
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _11 = _12;                       // scope 0 at ui/closures/2229_closure_analysis/run_pass/unsafe_ptr.rs:11:5: 11:14
        _16 = &((*_1).1: std::string::String); // scope 0 at ui/closures/2229_closure_analysis/run_pass/unsafe_ptr.rs:11:5: 11:14
        _15 = &_16;                      // scope 0 at ui/closures/2229_closure_analysis/run_pass/unsafe_ptr.rs:11:5: 11:14
        _14 = _15;                       // scope 0 at ui/closures/2229_closure_analysis/run_pass/unsafe_ptr.rs:11:5: 11:14
        _13 = move _14 as &dyn std::fmt::Debug (Pointer(Unsize)); // scope 0 at ui/closures/2229_closure_analysis/run_pass/unsafe_ptr.rs:11:5: 11:14
        _0 = Formatter::<'_>::debug_struct_field2_finish(move _3, move _4, move _6, move _8, move _11, move _13) -> bb1; // scope 0 at ui/closures/2229_closure_analysis/run_pass/unsafe_ptr.rs:8:10: 8:15
                                         // mir::Constant
                                         // + span: ui/closures/2229_closure_analysis/run_pass/unsafe_ptr.rs:8:10: 8:15
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: for<'b, 'a, 'c, 'd, 'e, 'f> fn(&'b mut Formatter<'_>, &'a str, &'c str, &'d (dyn Debug + 'd), &'e str, &'f (dyn Debug + 'f)) -> Result<(), std::fmt::Error> {Formatter::<'_>::debug_struct_field2_finish}, val: Value(<ZST>) }
    }

    bb1: {
        return;                          // scope 0 at ui/closures/2229_closure_analysis/run_pass/unsafe_ptr.rs:8:15: 8:15
    }
}

fn unsafe_imm() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/closures/2229_closure_analysis/run_pass/unsafe_ptr.rs:16:17: 16:17
    let _1: std::string::String;         // in scope 0 at ui/closures/2229_closure_analysis/run_pass/unsafe_ptr.rs:17:9: 17:10
    let mut _2: &str;                    // in scope 0 at ui/closures/2229_closure_analysis/run_pass/unsafe_ptr.rs:17:13: 17:22
    let _3: &str;                        // in scope 0 at ui/closures/2229_closure_analysis/run_pass/unsafe_ptr.rs:17:13: 17:15
    let mut _5: &str;                    // in scope 0 at ui/closures/2229_closure_analysis/run_pass/unsafe_ptr.rs:18:13: 18:22
    let _6: &str;                        // in scope 0 at ui/closures/2229_closure_analysis/run_pass/unsafe_ptr.rs:18:13: 18:15
    let mut _8: S;                       // in scope 0 at ui/closures/2229_closure_analysis/run_pass/unsafe_ptr.rs:19:37: 19:47
    let mut _9: std::string::String;     // in scope 0 at ui/closures/2229_closure_analysis/run_pass/unsafe_ptr.rs:19:41: 19:42
    let mut _10: std::string::String;    // in scope 0 at ui/closures/2229_closure_analysis/run_pass/unsafe_ptr.rs:19:44: 19:45
    let mut _12: *mut S;                 // in scope 0 at ui/closures/2229_closure_analysis/run_pass/unsafe_ptr.rs:21:24: 21:47
    let mut _13: std::boxed::Box<S>;     // in scope 0 at ui/closures/2229_closure_analysis/run_pass/unsafe_ptr.rs:21:38: 21:46
    let mut _15: *const S;               // in scope 0 at ui/closures/2229_closure_analysis/run_pass/unsafe_ptr.rs:22:15: 22:16
    let mut _17: &*const S;              // in scope 0 at ui/closures/2229_closure_analysis/run_pass/unsafe_ptr.rs:24:13: 26:6
    let _18: ();                         // in scope 0 at ui/closures/2229_closure_analysis/run_pass/unsafe_ptr.rs:28:5: 28:8
    let mut _19: &[closure@ui/closures/2229_closure_analysis/run_pass/unsafe_ptr.rs:24:13: 24:15]; // in scope 0 at ui/closures/2229_closure_analysis/run_pass/unsafe_ptr.rs:28:5: 28:6
    let mut _20: ();                     // in scope 0 at ui/closures/2229_closure_analysis/run_pass/unsafe_ptr.rs:28:5: 28:8
    let mut _21: bool;                   // in scope 0 at ui/closures/2229_closure_analysis/run_pass/unsafe_ptr.rs:29:1: 29:2
    scope 1 {
        debug s => _1;                   // in scope 1 at ui/closures/2229_closure_analysis/run_pass/unsafe_ptr.rs:17:9: 17:10
        let _4: std::string::String;     // in scope 1 at ui/closures/2229_closure_analysis/run_pass/unsafe_ptr.rs:18:9: 18:10
        scope 2 {
            debug t => _4;               // in scope 2 at ui/closures/2229_closure_analysis/run_pass/unsafe_ptr.rs:18:9: 18:10
            let _7: std::boxed::Box<S>;  // in scope 2 at ui/closures/2229_closure_analysis/run_pass/unsafe_ptr.rs:19:9: 19:17
            scope 3 {
                debug my_speed => _7;    // in scope 3 at ui/closures/2229_closure_analysis/run_pass/unsafe_ptr.rs:19:9: 19:17
                let _11: *const S;       // in scope 3 at ui/closures/2229_closure_analysis/run_pass/unsafe_ptr.rs:21:9: 21:10
                scope 4 {
                    debug p => _11;      // in scope 4 at ui/closures/2229_closure_analysis/run_pass/unsafe_ptr.rs:21:9: 21:10
                    let _14: T;          // in scope 4 at ui/closures/2229_closure_analysis/run_pass/unsafe_ptr.rs:22:9: 22:10
                    scope 5 {
                        debug t => _14;  // in scope 5 at ui/closures/2229_closure_analysis/run_pass/unsafe_ptr.rs:22:9: 22:10
                        let _16: [closure@ui/closures/2229_closure_analysis/run_pass/unsafe_ptr.rs:24:13: 24:15]; // in scope 5 at ui/closures/2229_closure_analysis/run_pass/unsafe_ptr.rs:24:9: 24:10
                        scope 6 {
                            debug c => _16; // in scope 6 at ui/closures/2229_closure_analysis/run_pass/unsafe_ptr.rs:24:9: 24:10
                        }
                    }
                }
            }
        }
    }

    bb0: {
        _21 = const false;               // scope 0 at ui/closures/2229_closure_analysis/run_pass/unsafe_ptr.rs:17:9: 17:10
        _3 = const "";                   // scope 0 at ui/closures/2229_closure_analysis/run_pass/unsafe_ptr.rs:17:13: 17:15
                                         // mir::Constant
                                         // + span: ui/closures/2229_closure_analysis/run_pass/unsafe_ptr.rs:17:13: 17:15
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _2 = _3;                         // scope 0 at ui/closures/2229_closure_analysis/run_pass/unsafe_ptr.rs:17:13: 17:22
        _21 = const true;                // scope 0 at ui/closures/2229_closure_analysis/run_pass/unsafe_ptr.rs:17:13: 17:22
        _1 = <&str as Into<String>>::into(move _2) -> bb1; // scope 0 at ui/closures/2229_closure_analysis/run_pass/unsafe_ptr.rs:17:13: 17:22
                                         // mir::Constant
                                         // + span: ui/closures/2229_closure_analysis/run_pass/unsafe_ptr.rs:17:16: 17:20
                                         // + literal: Const { ty: fn(&str) -> String {<&str as Into<String>>::into}, val: Value(<ZST>) }
    }

    bb1: {
        _6 = const "";                   // scope 1 at ui/closures/2229_closure_analysis/run_pass/unsafe_ptr.rs:18:13: 18:15
                                         // mir::Constant
                                         // + span: ui/closures/2229_closure_analysis/run_pass/unsafe_ptr.rs:18:13: 18:15
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _5 = _6;                         // scope 1 at ui/closures/2229_closure_analysis/run_pass/unsafe_ptr.rs:18:13: 18:22
        _4 = <&str as Into<String>>::into(move _5) -> [return: bb2, unwind: bb8]; // scope 1 at ui/closures/2229_closure_analysis/run_pass/unsafe_ptr.rs:18:13: 18:22
                                         // mir::Constant
                                         // + span: ui/closures/2229_closure_analysis/run_pass/unsafe_ptr.rs:18:16: 18:20
                                         // + literal: Const { ty: fn(&str) -> String {<&str as Into<String>>::into}, val: Value(<ZST>) }
    }

    bb2: {
        _21 = const false;               // scope 2 at ui/closures/2229_closure_analysis/run_pass/unsafe_ptr.rs:19:41: 19:42
        _9 = move _1;                    // scope 2 at ui/closures/2229_closure_analysis/run_pass/unsafe_ptr.rs:19:41: 19:42
        _10 = move _4;                   // scope 2 at ui/closures/2229_closure_analysis/run_pass/unsafe_ptr.rs:19:44: 19:45
        _8 = S { s: move _9, t: move _10 }; // scope 2 at ui/closures/2229_closure_analysis/run_pass/unsafe_ptr.rs:19:37: 19:47
        _7 = Box::<S>::new(move _8) -> [return: bb3, unwind: bb8]; // scope 2 at ui/closures/2229_closure_analysis/run_pass/unsafe_ptr.rs:19:28: 19:48
                                         // mir::Constant
                                         // + span: ui/closures/2229_closure_analysis/run_pass/unsafe_ptr.rs:19:28: 19:36
                                         // + user_ty: UserType(1)
                                         // + literal: Const { ty: fn(S) -> Box<S> {Box::<S>::new}, val: Value(<ZST>) }
    }

    bb3: {
        _13 = move _7;                   // scope 3 at ui/closures/2229_closure_analysis/run_pass/unsafe_ptr.rs:21:38: 21:46
        _12 = Box::<S>::into_raw(move _13) -> [return: bb4, unwind: bb8]; // scope 3 at ui/closures/2229_closure_analysis/run_pass/unsafe_ptr.rs:21:24: 21:47
                                         // mir::Constant
                                         // + span: ui/closures/2229_closure_analysis/run_pass/unsafe_ptr.rs:21:24: 21:37
                                         // + user_ty: UserType(4)
                                         // + literal: Const { ty: fn(Box<S>) -> *mut S {Box::<S>::into_raw}, val: Value(<ZST>) }
    }

    bb4: {
        _11 = move _12 as *const S (Pointer(MutToConstPointer)); // scope 3 at ui/closures/2229_closure_analysis/run_pass/unsafe_ptr.rs:21:24: 21:47
        _15 = _11;                       // scope 4 at ui/closures/2229_closure_analysis/run_pass/unsafe_ptr.rs:22:15: 22:16
        _14 = T(move _15);               // scope 4 at ui/closures/2229_closure_analysis/run_pass/unsafe_ptr.rs:22:13: 22:17
        _17 = &(_14.0: *const S);        // scope 5 at ui/closures/2229_closure_analysis/run_pass/unsafe_ptr.rs:24:13: 26:6
        _16 = [closure@ui/closures/2229_closure_analysis/run_pass/unsafe_ptr.rs:24:13: 24:15] { t: move _17 }; // scope 5 at ui/closures/2229_closure_analysis/run_pass/unsafe_ptr.rs:24:13: 26:6
                                         // closure
                                         // + def_id: DefId(0:7 ~ unsafe_ptr[89bf]::unsafe_imm::{closure#0})
                                         // + substs: [
                                         //     i8,
                                         //     extern "rust-call" fn(()),
                                         //     (&*const S,),
                                         // ]
        _19 = &_16;                      // scope 6 at ui/closures/2229_closure_analysis/run_pass/unsafe_ptr.rs:28:5: 28:6
        _18 = <[closure@ui/closures/2229_closure_analysis/run_pass/unsafe_ptr.rs:24:13: 24:15] as Fn<()>>::call(move _19, move _20) -> [return: bb5, unwind: bb8]; // scope 6 at ui/closures/2229_closure_analysis/run_pass/unsafe_ptr.rs:28:5: 28:8
                                         // mir::Constant
                                         // + span: ui/closures/2229_closure_analysis/run_pass/unsafe_ptr.rs:28:5: 28:6
                                         // + literal: Const { ty: for<'a> extern "rust-call" fn(&'a [closure@ui/closures/2229_closure_analysis/run_pass/unsafe_ptr.rs:24:13: 24:15], ()) -> <[closure@ui/closures/2229_closure_analysis/run_pass/unsafe_ptr.rs:24:13: 24:15] as FnOnce<()>>::Output {<[closure@ui/closures/2229_closure_analysis/run_pass/unsafe_ptr.rs:24:13: 24:15] as Fn<()>>::call}, val: Value(<ZST>) }
    }

    bb5: {
        _21 = const false;               // scope 0 at ui/closures/2229_closure_analysis/run_pass/unsafe_ptr.rs:29:1: 29:2
        return;                          // scope 0 at ui/closures/2229_closure_analysis/run_pass/unsafe_ptr.rs:29:2: 29:2
    }

    bb6 (cleanup): {
        resume;                          // scope 0 at ui/closures/2229_closure_analysis/run_pass/unsafe_ptr.rs:16:1: 29:2
    }

    bb7 (cleanup): {
        drop(_1) -> bb6;                 // scope 0 at ui/closures/2229_closure_analysis/run_pass/unsafe_ptr.rs:29:1: 29:2
    }

    bb8 (cleanup): {
        switchInt(_21) -> [0: bb6, otherwise: bb7]; // scope 0 at ui/closures/2229_closure_analysis/run_pass/unsafe_ptr.rs:29:1: 29:2
    }
}

fn unsafe_imm::{closure#0}(_1: &[closure@ui/closures/2229_closure_analysis/run_pass/unsafe_ptr.rs:24:13: 24:15]) -> () {
    debug t__0 => (*((*_1).0: &*const S)); // in scope 0 at ui/closures/2229_closure_analysis/run_pass/unsafe_ptr.rs:22:9: 22:10
    let mut _0: ();                      // return place in scope 0 at ui/closures/2229_closure_analysis/run_pass/unsafe_ptr.rs:24:16: 24:16
    let _2: ();                          // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:62
    let mut _3: std::fmt::Arguments<'_>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _4: &[&str];                 // in scope 0 at ui/closures/2229_closure_analysis/run_pass/unsafe_ptr.rs:25:18: 25:24
    let mut _5: &[&str; 2];              // in scope 0 at ui/closures/2229_closure_analysis/run_pass/unsafe_ptr.rs:25:18: 25:24
    let _6: &[&str; 2];                  // in scope 0 at ui/closures/2229_closure_analysis/run_pass/unsafe_ptr.rs:25:18: 25:24
    let mut _7: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _8: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let _9: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let _10: [core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _11: core::fmt::ArgumentV1<'_>; // in scope 0 at ui/closures/2229_closure_analysis/run_pass/unsafe_ptr.rs:25:26: 25:34
    let mut _12: &std::string::String;   // in scope 0 at ui/closures/2229_closure_analysis/run_pass/unsafe_ptr.rs:25:26: 25:34
    let _13: &std::string::String;       // in scope 0 at ui/closures/2229_closure_analysis/run_pass/unsafe_ptr.rs:25:26: 25:34
    let mut _15: &*const S;              // in scope 0 at ui/closures/2229_closure_analysis/run_pass/unsafe_ptr.rs:24:13: 26:6
    let mut _16: *const S;               // in scope 0 at ui/closures/2229_closure_analysis/run_pass/unsafe_ptr.rs:24:13: 26:6
    scope 1 {
        let mut _14: &[&str; 2];         // in scope 1 at ui/closures/2229_closure_analysis/run_pass/unsafe_ptr.rs:25:18: 25:24
    }

    bb0: {
        _14 = const _;                   // scope 1 at ui/closures/2229_closure_analysis/run_pass/unsafe_ptr.rs:25:18: 25:24
                                         // mir::Constant
                                         // + span: ui/closures/2229_closure_analysis/run_pass/unsafe_ptr.rs:25:18: 25:24
                                         // + literal: Const { ty: &[&str; 2], val: Unevaluated(unsafe_imm::{closure#0}, [<closure_kind>, <closure_signature>, <upvars>], Some(promoted[0])) }
        _6 = _14;                        // scope 1 at ui/closures/2229_closure_analysis/run_pass/unsafe_ptr.rs:25:18: 25:24
        _5 = _6;                         // scope 1 at ui/closures/2229_closure_analysis/run_pass/unsafe_ptr.rs:25:18: 25:24
        _4 = move _5 as &[&str] (Pointer(Unsize)); // scope 1 at ui/closures/2229_closure_analysis/run_pass/unsafe_ptr.rs:25:18: 25:24
        _15 = deref_copy ((*_1).0: &*const S); // scope 1 at ui/closures/2229_closure_analysis/run_pass/unsafe_ptr.rs:25:26: 25:34
        _16 = deref_copy (*_15);         // scope 1 at ui/closures/2229_closure_analysis/run_pass/unsafe_ptr.rs:25:26: 25:34
        _13 = &((*_16).0: std::string::String); // scope 1 at ui/closures/2229_closure_analysis/run_pass/unsafe_ptr.rs:25:26: 25:34
        _12 = _13;                       // scope 1 at ui/closures/2229_closure_analysis/run_pass/unsafe_ptr.rs:25:26: 25:34
        _11 = core::fmt::ArgumentV1::<'_>::new_debug::<String>(move _12) -> bb1; // scope 1 at ui/closures/2229_closure_analysis/run_pass/unsafe_ptr.rs:25:26: 25:34
                                         // mir::Constant
                                         // + span: ui/closures/2229_closure_analysis/run_pass/unsafe_ptr.rs:25:26: 25:34
                                         // + user_ty: UserType(1)
                                         // + literal: Const { ty: for<'b> fn(&'b String) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_debug::<String>}, val: Value(<ZST>) }
    }

    bb1: {
        _10 = [move _11];                // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _9 = &_10;                       // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _8 = _9;                         // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _7 = move _8 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _3 = Arguments::<'_>::new_v1(move _4, move _7) -> bb2; // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb2: {
        _2 = _print(move _3) -> bb3;     // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:62
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:27
                                         // + literal: Const { ty: for<'a> fn(Arguments<'a>) {_print}, val: Value(<ZST>) }
    }

    bb3: {
        return;                          // scope 0 at ui/closures/2229_closure_analysis/run_pass/unsafe_ptr.rs:26:6: 26:6
    }
}

promoted[0] in unsafe_imm::{closure#0}: &[&str; 2] = {
    let mut _0: &[&str; 2];              // return place in scope 0 at ui/closures/2229_closure_analysis/run_pass/unsafe_ptr.rs:25:18: 25:24
    let mut _1: [&str; 2];               // in scope 0 at ui/closures/2229_closure_analysis/run_pass/unsafe_ptr.rs:25:18: 25:24

    bb0: {
        _1 = [const "", const "\n"];     // scope 0 at ui/closures/2229_closure_analysis/run_pass/unsafe_ptr.rs:25:18: 25:24
                                         // mir::Constant
                                         // + span: ui/closures/2229_closure_analysis/run_pass/unsafe_ptr.rs:25:18: 25:24
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
                                         // mir::Constant
                                         // + span: ui/closures/2229_closure_analysis/run_pass/unsafe_ptr.rs:25:18: 25:24
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at ui/closures/2229_closure_analysis/run_pass/unsafe_ptr.rs:25:18: 25:24
        return;                          // scope 0 at ui/closures/2229_closure_analysis/run_pass/unsafe_ptr.rs:25:18: 25:24
    }
}

fn unsafe_mut() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/closures/2229_closure_analysis/run_pass/unsafe_ptr.rs:31:17: 31:17
    let _1: std::string::String;         // in scope 0 at ui/closures/2229_closure_analysis/run_pass/unsafe_ptr.rs:32:9: 32:10
    let mut _2: &str;                    // in scope 0 at ui/closures/2229_closure_analysis/run_pass/unsafe_ptr.rs:32:13: 32:22
    let _3: &str;                        // in scope 0 at ui/closures/2229_closure_analysis/run_pass/unsafe_ptr.rs:32:13: 32:15
    let mut _5: &str;                    // in scope 0 at ui/closures/2229_closure_analysis/run_pass/unsafe_ptr.rs:33:13: 33:22
    let _6: &str;                        // in scope 0 at ui/closures/2229_closure_analysis/run_pass/unsafe_ptr.rs:33:13: 33:15
    let mut _8: S;                       // in scope 0 at ui/closures/2229_closure_analysis/run_pass/unsafe_ptr.rs:34:41: 34:51
    let mut _9: std::string::String;     // in scope 0 at ui/closures/2229_closure_analysis/run_pass/unsafe_ptr.rs:34:45: 34:46
    let mut _10: std::string::String;    // in scope 0 at ui/closures/2229_closure_analysis/run_pass/unsafe_ptr.rs:34:48: 34:49
    let mut _12: &mut S;                 // in scope 0 at ui/closures/2229_closure_analysis/run_pass/unsafe_ptr.rs:35:22: 35:36
    let mut _14: &*mut S;                // in scope 0 at ui/closures/2229_closure_analysis/run_pass/unsafe_ptr.rs:37:13: 40:6
    let _15: ();                         // in scope 0 at ui/closures/2229_closure_analysis/run_pass/unsafe_ptr.rs:41:5: 41:8
    let mut _16: &[closure@ui/closures/2229_closure_analysis/run_pass/unsafe_ptr.rs:37:13: 37:15]; // in scope 0 at ui/closures/2229_closure_analysis/run_pass/unsafe_ptr.rs:41:5: 41:6
    let mut _17: ();                     // in scope 0 at ui/closures/2229_closure_analysis/run_pass/unsafe_ptr.rs:41:5: 41:8
    let mut _18: bool;                   // in scope 0 at ui/closures/2229_closure_analysis/run_pass/unsafe_ptr.rs:42:1: 42:2
    let mut _19: *const S;               // in scope 0 at ui/closures/2229_closure_analysis/run_pass/unsafe_ptr.rs:34:9: 34:21
    scope 1 {
        debug s => _1;                   // in scope 1 at ui/closures/2229_closure_analysis/run_pass/unsafe_ptr.rs:32:9: 32:10
        let _4: std::string::String;     // in scope 1 at ui/closures/2229_closure_analysis/run_pass/unsafe_ptr.rs:33:9: 33:10
        scope 2 {
            debug t => _4;               // in scope 2 at ui/closures/2229_closure_analysis/run_pass/unsafe_ptr.rs:33:9: 33:10
            let mut _7: std::boxed::Box<S>; // in scope 2 at ui/closures/2229_closure_analysis/run_pass/unsafe_ptr.rs:34:9: 34:21
            scope 3 {
                debug my_speed => _7;    // in scope 3 at ui/closures/2229_closure_analysis/run_pass/unsafe_ptr.rs:34:9: 34:21
                let _11: *mut S;         // in scope 3 at ui/closures/2229_closure_analysis/run_pass/unsafe_ptr.rs:35:9: 35:10
                scope 4 {
                    debug p => _11;      // in scope 4 at ui/closures/2229_closure_analysis/run_pass/unsafe_ptr.rs:35:9: 35:10
                    let _13: [closure@ui/closures/2229_closure_analysis/run_pass/unsafe_ptr.rs:37:13: 37:15]; // in scope 4 at ui/closures/2229_closure_analysis/run_pass/unsafe_ptr.rs:37:9: 37:10
                    scope 5 {
                        debug c => _13;  // in scope 5 at ui/closures/2229_closure_analysis/run_pass/unsafe_ptr.rs:37:9: 37:10
                    }
                }
            }
        }
    }

    bb0: {
        _18 = const false;               // scope 0 at ui/closures/2229_closure_analysis/run_pass/unsafe_ptr.rs:32:9: 32:10
        _3 = const "";                   // scope 0 at ui/closures/2229_closure_analysis/run_pass/unsafe_ptr.rs:32:13: 32:15
                                         // mir::Constant
                                         // + span: ui/closures/2229_closure_analysis/run_pass/unsafe_ptr.rs:32:13: 32:15
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _2 = _3;                         // scope 0 at ui/closures/2229_closure_analysis/run_pass/unsafe_ptr.rs:32:13: 32:22
        _18 = const true;                // scope 0 at ui/closures/2229_closure_analysis/run_pass/unsafe_ptr.rs:32:13: 32:22
        _1 = <&str as Into<String>>::into(move _2) -> bb1; // scope 0 at ui/closures/2229_closure_analysis/run_pass/unsafe_ptr.rs:32:13: 32:22
                                         // mir::Constant
                                         // + span: ui/closures/2229_closure_analysis/run_pass/unsafe_ptr.rs:32:16: 32:20
                                         // + literal: Const { ty: fn(&str) -> String {<&str as Into<String>>::into}, val: Value(<ZST>) }
    }

    bb1: {
        _6 = const "";                   // scope 1 at ui/closures/2229_closure_analysis/run_pass/unsafe_ptr.rs:33:13: 33:15
                                         // mir::Constant
                                         // + span: ui/closures/2229_closure_analysis/run_pass/unsafe_ptr.rs:33:13: 33:15
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _5 = _6;                         // scope 1 at ui/closures/2229_closure_analysis/run_pass/unsafe_ptr.rs:33:13: 33:22
        _4 = <&str as Into<String>>::into(move _5) -> [return: bb2, unwind: bb9]; // scope 1 at ui/closures/2229_closure_analysis/run_pass/unsafe_ptr.rs:33:13: 33:22
                                         // mir::Constant
                                         // + span: ui/closures/2229_closure_analysis/run_pass/unsafe_ptr.rs:33:16: 33:20
                                         // + literal: Const { ty: fn(&str) -> String {<&str as Into<String>>::into}, val: Value(<ZST>) }
    }

    bb2: {
        _18 = const false;               // scope 2 at ui/closures/2229_closure_analysis/run_pass/unsafe_ptr.rs:34:45: 34:46
        _9 = move _1;                    // scope 2 at ui/closures/2229_closure_analysis/run_pass/unsafe_ptr.rs:34:45: 34:46
        _10 = move _4;                   // scope 2 at ui/closures/2229_closure_analysis/run_pass/unsafe_ptr.rs:34:48: 34:49
        _8 = S { s: move _9, t: move _10 }; // scope 2 at ui/closures/2229_closure_analysis/run_pass/unsafe_ptr.rs:34:41: 34:51
        _7 = Box::<S>::new(move _8) -> [return: bb3, unwind: bb9]; // scope 2 at ui/closures/2229_closure_analysis/run_pass/unsafe_ptr.rs:34:32: 34:52
                                         // mir::Constant
                                         // + span: ui/closures/2229_closure_analysis/run_pass/unsafe_ptr.rs:34:32: 34:40
                                         // + user_ty: UserType(1)
                                         // + literal: Const { ty: fn(S) -> Box<S> {Box::<S>::new}, val: Value(<ZST>) }
    }

    bb3: {
        _19 = (((_7.0: std::ptr::Unique<S>).0: std::ptr::NonNull<S>).0: *const S); // scope 3 at ui/closures/2229_closure_analysis/run_pass/unsafe_ptr.rs:35:22: 35:36
        _12 = &mut (*_19);               // scope 3 at ui/closures/2229_closure_analysis/run_pass/unsafe_ptr.rs:35:22: 35:36
        _11 = &raw mut (*_12);           // scope 3 at ui/closures/2229_closure_analysis/run_pass/unsafe_ptr.rs:35:22: 35:36
        _14 = &_11;                      // scope 4 at ui/closures/2229_closure_analysis/run_pass/unsafe_ptr.rs:37:13: 40:6
        _13 = [closure@ui/closures/2229_closure_analysis/run_pass/unsafe_ptr.rs:37:13: 37:15] { p: move _14 }; // scope 4 at ui/closures/2229_closure_analysis/run_pass/unsafe_ptr.rs:37:13: 40:6
                                         // closure
                                         // + def_id: DefId(0:9 ~ unsafe_ptr[89bf]::unsafe_mut::{closure#0})
                                         // + substs: [
                                         //     i8,
                                         //     extern "rust-call" fn(()),
                                         //     (&*mut S,),
                                         // ]
        _16 = &_13;                      // scope 5 at ui/closures/2229_closure_analysis/run_pass/unsafe_ptr.rs:41:5: 41:6
        _15 = <[closure@ui/closures/2229_closure_analysis/run_pass/unsafe_ptr.rs:37:13: 37:15] as Fn<()>>::call(move _16, move _17) -> [return: bb4, unwind: bb6]; // scope 5 at ui/closures/2229_closure_analysis/run_pass/unsafe_ptr.rs:41:5: 41:8
                                         // mir::Constant
                                         // + span: ui/closures/2229_closure_analysis/run_pass/unsafe_ptr.rs:41:5: 41:6
                                         // + literal: Const { ty: for<'a> extern "rust-call" fn(&'a [closure@ui/closures/2229_closure_analysis/run_pass/unsafe_ptr.rs:37:13: 37:15], ()) -> <[closure@ui/closures/2229_closure_analysis/run_pass/unsafe_ptr.rs:37:13: 37:15] as FnOnce<()>>::Output {<[closure@ui/closures/2229_closure_analysis/run_pass/unsafe_ptr.rs:37:13: 37:15] as Fn<()>>::call}, val: Value(<ZST>) }
    }

    bb4: {
        drop(_7) -> [return: bb5, unwind: bb9]; // scope 2 at ui/closures/2229_closure_analysis/run_pass/unsafe_ptr.rs:42:1: 42:2
    }

    bb5: {
        _18 = const false;               // scope 0 at ui/closures/2229_closure_analysis/run_pass/unsafe_ptr.rs:42:1: 42:2
        return;                          // scope 0 at ui/closures/2229_closure_analysis/run_pass/unsafe_ptr.rs:42:2: 42:2
    }

    bb6 (cleanup): {
        drop(_7) -> bb9;                 // scope 2 at ui/closures/2229_closure_analysis/run_pass/unsafe_ptr.rs:42:1: 42:2
    }

    bb7 (cleanup): {
        resume;                          // scope 0 at ui/closures/2229_closure_analysis/run_pass/unsafe_ptr.rs:31:1: 42:2
    }

    bb8 (cleanup): {
        drop(_1) -> bb7;                 // scope 0 at ui/closures/2229_closure_analysis/run_pass/unsafe_ptr.rs:42:1: 42:2
    }

    bb9 (cleanup): {
        switchInt(_18) -> [0: bb7, otherwise: bb8]; // scope 0 at ui/closures/2229_closure_analysis/run_pass/unsafe_ptr.rs:42:1: 42:2
    }
}

fn unsafe_mut::{closure#0}(_1: &[closure@ui/closures/2229_closure_analysis/run_pass/unsafe_ptr.rs:37:13: 37:15]) -> () {
    debug p => (*((*_1).0: &*mut S));    // in scope 0 at ui/closures/2229_closure_analysis/run_pass/unsafe_ptr.rs:35:9: 35:10
    let mut _0: ();                      // return place in scope 0 at ui/closures/2229_closure_analysis/run_pass/unsafe_ptr.rs:37:16: 37:16
    let _2: &mut std::string::String;    // in scope 0 at ui/closures/2229_closure_analysis/run_pass/unsafe_ptr.rs:38:13: 38:14
    let mut _3: &mut std::string::String; // in scope 0 at ui/closures/2229_closure_analysis/run_pass/unsafe_ptr.rs:38:26: 38:37
    let mut _4: std::string::String;     // in scope 0 at ui/closures/2229_closure_analysis/run_pass/unsafe_ptr.rs:39:14: 39:24
    let mut _5: &str;                    // in scope 0 at ui/closures/2229_closure_analysis/run_pass/unsafe_ptr.rs:39:14: 39:24
    let _6: &str;                        // in scope 0 at ui/closures/2229_closure_analysis/run_pass/unsafe_ptr.rs:39:14: 39:17
    let mut _7: &*mut S;                 // in scope 0 at ui/closures/2229_closure_analysis/run_pass/unsafe_ptr.rs:37:13: 40:6
    let mut _8: *mut S;                  // in scope 0 at ui/closures/2229_closure_analysis/run_pass/unsafe_ptr.rs:37:13: 40:6
    scope 1 {
        debug x => _2;                   // in scope 1 at ui/closures/2229_closure_analysis/run_pass/unsafe_ptr.rs:38:13: 38:14
    }
    scope 2 {
    }

    bb0: {
        _7 = deref_copy ((*_1).0: &*mut S); // scope 2 at ui/closures/2229_closure_analysis/run_pass/unsafe_ptr.rs:38:26: 38:37
        _8 = deref_copy (*_7);           // scope 2 at ui/closures/2229_closure_analysis/run_pass/unsafe_ptr.rs:38:26: 38:37
        _3 = &mut ((*_8).0: std::string::String); // scope 2 at ui/closures/2229_closure_analysis/run_pass/unsafe_ptr.rs:38:26: 38:37
        _2 = &mut (*_3);                 // scope 0 at ui/closures/2229_closure_analysis/run_pass/unsafe_ptr.rs:38:26: 38:37
        _6 = const "s";                  // scope 1 at ui/closures/2229_closure_analysis/run_pass/unsafe_ptr.rs:39:14: 39:17
                                         // mir::Constant
                                         // + span: ui/closures/2229_closure_analysis/run_pass/unsafe_ptr.rs:39:14: 39:17
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _5 = _6;                         // scope 1 at ui/closures/2229_closure_analysis/run_pass/unsafe_ptr.rs:39:14: 39:24
        _4 = <&str as Into<String>>::into(move _5) -> bb1; // scope 1 at ui/closures/2229_closure_analysis/run_pass/unsafe_ptr.rs:39:14: 39:24
                                         // mir::Constant
                                         // + span: ui/closures/2229_closure_analysis/run_pass/unsafe_ptr.rs:39:18: 39:22
                                         // + literal: Const { ty: fn(&str) -> String {<&str as Into<String>>::into}, val: Value(<ZST>) }
    }

    bb1: {
        drop((*_2)) -> [return: bb3, unwind: bb2]; // scope 1 at ui/closures/2229_closure_analysis/run_pass/unsafe_ptr.rs:39:9: 39:11
    }

    bb2 (cleanup): {
        (*_2) = move _4;                 // scope 1 at ui/closures/2229_closure_analysis/run_pass/unsafe_ptr.rs:39:9: 39:11
        resume;                          // scope 0 at ui/closures/2229_closure_analysis/run_pass/unsafe_ptr.rs:37:13: 40:6
    }

    bb3: {
        (*_2) = move _4;                 // scope 1 at ui/closures/2229_closure_analysis/run_pass/unsafe_ptr.rs:39:9: 39:11
        return;                          // scope 0 at ui/closures/2229_closure_analysis/run_pass/unsafe_ptr.rs:40:6: 40:6
    }
}

fn main() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/closures/2229_closure_analysis/run_pass/unsafe_ptr.rs:44:11: 44:11
    let _1: ();                          // in scope 0 at ui/closures/2229_closure_analysis/run_pass/unsafe_ptr.rs:45:5: 45:17
    let _2: ();                          // in scope 0 at ui/closures/2229_closure_analysis/run_pass/unsafe_ptr.rs:46:5: 46:17

    bb0: {
        _1 = unsafe_mut() -> bb1;        // scope 0 at ui/closures/2229_closure_analysis/run_pass/unsafe_ptr.rs:45:5: 45:17
                                         // mir::Constant
                                         // + span: ui/closures/2229_closure_analysis/run_pass/unsafe_ptr.rs:45:5: 45:15
                                         // + literal: Const { ty: fn() {unsafe_mut}, val: Value(<ZST>) }
    }

    bb1: {
        _2 = unsafe_imm() -> bb2;        // scope 0 at ui/closures/2229_closure_analysis/run_pass/unsafe_ptr.rs:46:5: 46:17
                                         // mir::Constant
                                         // + span: ui/closures/2229_closure_analysis/run_pass/unsafe_ptr.rs:46:5: 46:15
                                         // + literal: Const { ty: fn() {unsafe_imm}, val: Value(<ZST>) }
    }

    bb2: {
        return;                          // scope 0 at ui/closures/2229_closure_analysis/run_pass/unsafe_ptr.rs:47:2: 47:2
    }
}

fn T(_1: *const S) -> T {
    let mut _0: T;                       // return place in scope 0 at ui/closures/2229_closure_analysis/run_pass/unsafe_ptr.rs:14:1: 14:9

    bb0: {
        _0 = T(move _1);                 // scope 0 at ui/closures/2229_closure_analysis/run_pass/unsafe_ptr.rs:14:1: 14:9
        return;                          // scope 0 at ui/closures/2229_closure_analysis/run_pass/unsafe_ptr.rs:14:1: 14:9
    }
}

// MIR FOR CTFE
fn T(_1: *const S) -> T {
    let mut _0: T;                       // return place in scope 0 at ui/closures/2229_closure_analysis/run_pass/unsafe_ptr.rs:14:1: 14:9

    bb0: {
        _0 = T(move _1);                 // scope 0 at ui/closures/2229_closure_analysis/run_pass/unsafe_ptr.rs:14:1: 14:9
        return;                          // scope 0 at ui/closures/2229_closure_analysis/run_pass/unsafe_ptr.rs:14:1: 14:9
    }
}
