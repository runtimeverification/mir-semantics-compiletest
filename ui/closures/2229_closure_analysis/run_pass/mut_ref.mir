// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
fn mut_ref_1() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/closures/2229_closure_analysis/run_pass/mut_ref.rs:8:16: 8:16
    let mut _1: std::string::String;     // in scope 0 at ui/closures/2229_closure_analysis/run_pass/mut_ref.rs:9:9: 9:14
    let mut _4: &mut std::string::String; // in scope 0 at ui/closures/2229_closure_analysis/run_pass/mut_ref.rs:12:17: 14:6
    let _5: ();                          // in scope 0 at ui/closures/2229_closure_analysis/run_pass/mut_ref.rs:16:5: 16:8
    let mut _6: &mut [closure@ui/closures/2229_closure_analysis/run_pass/mut_ref.rs:12:17: 12:19]; // in scope 0 at ui/closures/2229_closure_analysis/run_pass/mut_ref.rs:16:5: 16:6
    let mut _7: ();                      // in scope 0 at ui/closures/2229_closure_analysis/run_pass/mut_ref.rs:16:5: 16:8
    scope 1 {
        debug x => _1;                   // in scope 1 at ui/closures/2229_closure_analysis/run_pass/mut_ref.rs:9:9: 9:14
        let _2: &mut std::string::String; // in scope 1 at ui/closures/2229_closure_analysis/run_pass/mut_ref.rs:10:9: 10:11
        scope 2 {
            debug rx => _2;              // in scope 2 at ui/closures/2229_closure_analysis/run_pass/mut_ref.rs:10:9: 10:11
            let mut _3: [closure@ui/closures/2229_closure_analysis/run_pass/mut_ref.rs:12:17: 12:19]; // in scope 2 at ui/closures/2229_closure_analysis/run_pass/mut_ref.rs:12:9: 12:14
            scope 3 {
                debug c => _3;           // in scope 3 at ui/closures/2229_closure_analysis/run_pass/mut_ref.rs:12:9: 12:14
            }
        }
    }

    bb0: {
        _1 = String::new() -> bb1;       // scope 0 at ui/closures/2229_closure_analysis/run_pass/mut_ref.rs:9:17: 9:30
                                         // mir::Constant
                                         // + span: ui/closures/2229_closure_analysis/run_pass/mut_ref.rs:9:17: 9:28
                                         // + literal: Const { ty: fn() -> String {String::new}, val: Value(<ZST>) }
    }

    bb1: {
        _2 = &mut _1;                    // scope 1 at ui/closures/2229_closure_analysis/run_pass/mut_ref.rs:10:14: 10:20
        _4 = &mut (*_2);                 // scope 2 at ui/closures/2229_closure_analysis/run_pass/mut_ref.rs:12:17: 14:6
        _3 = [closure@ui/closures/2229_closure_analysis/run_pass/mut_ref.rs:12:17: 12:19] { rx: move _4 }; // scope 2 at ui/closures/2229_closure_analysis/run_pass/mut_ref.rs:12:17: 14:6
                                         // closure
                                         // + def_id: DefId(0:4 ~ mut_ref[c447]::mut_ref_1::{closure#0})
                                         // + substs: [
                                         //     i16,
                                         //     extern "rust-call" fn(()),
                                         //     (&mut std::string::String,),
                                         // ]
        _6 = &mut _3;                    // scope 3 at ui/closures/2229_closure_analysis/run_pass/mut_ref.rs:16:5: 16:6
        _5 = <[closure@ui/closures/2229_closure_analysis/run_pass/mut_ref.rs:12:17: 12:19] as FnMut<()>>::call_mut(move _6, move _7) -> [return: bb2, unwind: bb4]; // scope 3 at ui/closures/2229_closure_analysis/run_pass/mut_ref.rs:16:5: 16:8
                                         // mir::Constant
                                         // + span: ui/closures/2229_closure_analysis/run_pass/mut_ref.rs:16:5: 16:6
                                         // + literal: Const { ty: for<'a> extern "rust-call" fn(&'a mut [closure@ui/closures/2229_closure_analysis/run_pass/mut_ref.rs:12:17: 12:19], ()) -> <[closure@ui/closures/2229_closure_analysis/run_pass/mut_ref.rs:12:17: 12:19] as FnOnce<()>>::Output {<[closure@ui/closures/2229_closure_analysis/run_pass/mut_ref.rs:12:17: 12:19] as FnMut<()>>::call_mut}, val: Value(<ZST>) }
    }

    bb2: {
        drop(_1) -> bb3;                 // scope 0 at ui/closures/2229_closure_analysis/run_pass/mut_ref.rs:17:1: 17:2
    }

    bb3: {
        return;                          // scope 0 at ui/closures/2229_closure_analysis/run_pass/mut_ref.rs:17:2: 17:2
    }

    bb4 (cleanup): {
        drop(_1) -> bb5;                 // scope 0 at ui/closures/2229_closure_analysis/run_pass/mut_ref.rs:17:1: 17:2
    }

    bb5 (cleanup): {
        resume;                          // scope 0 at ui/closures/2229_closure_analysis/run_pass/mut_ref.rs:8:1: 17:2
    }
}

fn mut_ref_1::{closure#0}(_1: &mut [closure@ui/closures/2229_closure_analysis/run_pass/mut_ref.rs:12:17: 12:19]) -> () {
    debug rx => (*((*_1).0: &mut std::string::String)); // in scope 0 at ui/closures/2229_closure_analysis/run_pass/mut_ref.rs:10:9: 10:11
    let mut _0: ();                      // return place in scope 0 at ui/closures/2229_closure_analysis/run_pass/mut_ref.rs:12:20: 12:20
    let mut _2: std::string::String;     // in scope 0 at ui/closures/2229_closure_analysis/run_pass/mut_ref.rs:13:15: 13:28
    let mut _3: &mut std::string::String; // in scope 0 at ui/closures/2229_closure_analysis/run_pass/mut_ref.rs:12:17: 14:6
    let mut _4: &mut std::string::String; // in scope 0 at ui/closures/2229_closure_analysis/run_pass/mut_ref.rs:12:17: 14:6
    let mut _5: &mut std::string::String; // in scope 0 at ui/closures/2229_closure_analysis/run_pass/mut_ref.rs:12:17: 14:6

    bb0: {
        _2 = String::new() -> bb1;       // scope 0 at ui/closures/2229_closure_analysis/run_pass/mut_ref.rs:13:15: 13:28
                                         // mir::Constant
                                         // + span: ui/closures/2229_closure_analysis/run_pass/mut_ref.rs:13:15: 13:26
                                         // + literal: Const { ty: fn() -> String {String::new}, val: Value(<ZST>) }
    }

    bb1: {
        _3 = deref_copy ((*_1).0: &mut std::string::String); // scope 0 at ui/closures/2229_closure_analysis/run_pass/mut_ref.rs:13:9: 13:12
        drop((*_3)) -> [return: bb3, unwind: bb2]; // scope 0 at ui/closures/2229_closure_analysis/run_pass/mut_ref.rs:13:9: 13:12
    }

    bb2 (cleanup): {
        _4 = deref_copy ((*_1).0: &mut std::string::String); // scope 0 at ui/closures/2229_closure_analysis/run_pass/mut_ref.rs:13:9: 13:12
        (*_4) = move _2;                 // scope 0 at ui/closures/2229_closure_analysis/run_pass/mut_ref.rs:13:9: 13:12
        resume;                          // scope 0 at ui/closures/2229_closure_analysis/run_pass/mut_ref.rs:12:17: 14:6
    }

    bb3: {
        _5 = deref_copy ((*_1).0: &mut std::string::String); // scope 0 at ui/closures/2229_closure_analysis/run_pass/mut_ref.rs:13:9: 13:12
        (*_5) = move _2;                 // scope 0 at ui/closures/2229_closure_analysis/run_pass/mut_ref.rs:13:9: 13:12
        return;                          // scope 0 at ui/closures/2229_closure_analysis/run_pass/mut_ref.rs:14:6: 14:6
    }
}

fn mut_ref_2() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/closures/2229_closure_analysis/run_pass/mut_ref.rs:21:16: 21:16
    let _1: std::string::String;         // in scope 0 at ui/closures/2229_closure_analysis/run_pass/mut_ref.rs:22:9: 22:10
    let mut _6: &mut &std::string::String; // in scope 0 at ui/closures/2229_closure_analysis/run_pass/mut_ref.rs:27:17: 29:6
    let mut _7: &std::string::String;    // in scope 0 at ui/closures/2229_closure_analysis/run_pass/mut_ref.rs:27:17: 29:6
    let _8: ();                          // in scope 0 at ui/closures/2229_closure_analysis/run_pass/mut_ref.rs:31:5: 31:8
    let mut _9: &mut [closure@ui/closures/2229_closure_analysis/run_pass/mut_ref.rs:27:17: 27:19]; // in scope 0 at ui/closures/2229_closure_analysis/run_pass/mut_ref.rs:31:5: 31:6
    let mut _10: ();                     // in scope 0 at ui/closures/2229_closure_analysis/run_pass/mut_ref.rs:31:5: 31:8
    scope 1 {
        debug x => _1;                   // in scope 1 at ui/closures/2229_closure_analysis/run_pass/mut_ref.rs:22:9: 22:10
        let _2: std::string::String;     // in scope 1 at ui/closures/2229_closure_analysis/run_pass/mut_ref.rs:23:9: 23:10
        scope 2 {
            debug y => _2;               // in scope 2 at ui/closures/2229_closure_analysis/run_pass/mut_ref.rs:23:9: 23:10
            let mut _3: &std::string::String; // in scope 2 at ui/closures/2229_closure_analysis/run_pass/mut_ref.rs:24:9: 24:18
            scope 3 {
                debug ref_x => _3;       // in scope 3 at ui/closures/2229_closure_analysis/run_pass/mut_ref.rs:24:9: 24:18
                let _4: &mut &std::string::String; // in scope 3 at ui/closures/2229_closure_analysis/run_pass/mut_ref.rs:25:9: 25:16
                scope 4 {
                    debug m_ref_x => _4; // in scope 4 at ui/closures/2229_closure_analysis/run_pass/mut_ref.rs:25:9: 25:16
                    let mut _5: [closure@ui/closures/2229_closure_analysis/run_pass/mut_ref.rs:27:17: 27:19]; // in scope 4 at ui/closures/2229_closure_analysis/run_pass/mut_ref.rs:27:9: 27:14
                    scope 5 {
                        debug c => _5;   // in scope 5 at ui/closures/2229_closure_analysis/run_pass/mut_ref.rs:27:9: 27:14
                    }
                }
            }
        }
    }

    bb0: {
        _1 = String::new() -> bb1;       // scope 0 at ui/closures/2229_closure_analysis/run_pass/mut_ref.rs:22:13: 22:26
                                         // mir::Constant
                                         // + span: ui/closures/2229_closure_analysis/run_pass/mut_ref.rs:22:13: 22:24
                                         // + literal: Const { ty: fn() -> String {String::new}, val: Value(<ZST>) }
    }

    bb1: {
        _2 = String::new() -> [return: bb2, unwind: bb7]; // scope 1 at ui/closures/2229_closure_analysis/run_pass/mut_ref.rs:23:13: 23:26
                                         // mir::Constant
                                         // + span: ui/closures/2229_closure_analysis/run_pass/mut_ref.rs:23:13: 23:24
                                         // + literal: Const { ty: fn() -> String {String::new}, val: Value(<ZST>) }
    }

    bb2: {
        _3 = &_1;                        // scope 2 at ui/closures/2229_closure_analysis/run_pass/mut_ref.rs:24:21: 24:23
        _4 = &mut _3;                    // scope 3 at ui/closures/2229_closure_analysis/run_pass/mut_ref.rs:25:19: 25:29
        _6 = &mut (*_4);                 // scope 4 at ui/closures/2229_closure_analysis/run_pass/mut_ref.rs:27:17: 29:6
        _7 = &_2;                        // scope 4 at ui/closures/2229_closure_analysis/run_pass/mut_ref.rs:27:17: 29:6
        _5 = [closure@ui/closures/2229_closure_analysis/run_pass/mut_ref.rs:27:17: 27:19] { y: move _6, m_ref_x: move _7 }; // scope 4 at ui/closures/2229_closure_analysis/run_pass/mut_ref.rs:27:17: 29:6
                                         // closure
                                         // + def_id: DefId(0:6 ~ mut_ref[c447]::mut_ref_2::{closure#0})
                                         // + substs: [
                                         //     i16,
                                         //     extern "rust-call" fn(()),
                                         //     (&mut &std::string::String, &std::string::String),
                                         // ]
        _9 = &mut _5;                    // scope 5 at ui/closures/2229_closure_analysis/run_pass/mut_ref.rs:31:5: 31:6
        _8 = <[closure@ui/closures/2229_closure_analysis/run_pass/mut_ref.rs:27:17: 27:19] as FnMut<()>>::call_mut(move _9, move _10) -> [return: bb3, unwind: bb6]; // scope 5 at ui/closures/2229_closure_analysis/run_pass/mut_ref.rs:31:5: 31:8
                                         // mir::Constant
                                         // + span: ui/closures/2229_closure_analysis/run_pass/mut_ref.rs:31:5: 31:6
                                         // + literal: Const { ty: for<'a> extern "rust-call" fn(&'a mut [closure@ui/closures/2229_closure_analysis/run_pass/mut_ref.rs:27:17: 27:19], ()) -> <[closure@ui/closures/2229_closure_analysis/run_pass/mut_ref.rs:27:17: 27:19] as FnOnce<()>>::Output {<[closure@ui/closures/2229_closure_analysis/run_pass/mut_ref.rs:27:17: 27:19] as FnMut<()>>::call_mut}, val: Value(<ZST>) }
    }

    bb3: {
        drop(_2) -> [return: bb4, unwind: bb7]; // scope 1 at ui/closures/2229_closure_analysis/run_pass/mut_ref.rs:32:1: 32:2
    }

    bb4: {
        drop(_1) -> bb5;                 // scope 0 at ui/closures/2229_closure_analysis/run_pass/mut_ref.rs:32:1: 32:2
    }

    bb5: {
        return;                          // scope 0 at ui/closures/2229_closure_analysis/run_pass/mut_ref.rs:32:2: 32:2
    }

    bb6 (cleanup): {
        drop(_2) -> bb7;                 // scope 1 at ui/closures/2229_closure_analysis/run_pass/mut_ref.rs:32:1: 32:2
    }

    bb7 (cleanup): {
        drop(_1) -> bb8;                 // scope 0 at ui/closures/2229_closure_analysis/run_pass/mut_ref.rs:32:1: 32:2
    }

    bb8 (cleanup): {
        resume;                          // scope 0 at ui/closures/2229_closure_analysis/run_pass/mut_ref.rs:21:1: 32:2
    }
}

fn mut_ref_2::{closure#0}(_1: &mut [closure@ui/closures/2229_closure_analysis/run_pass/mut_ref.rs:27:17: 27:19]) -> () {
    debug m_ref_x => (*((*_1).0: &mut &std::string::String)); // in scope 0 at ui/closures/2229_closure_analysis/run_pass/mut_ref.rs:25:9: 25:16
    debug y => (*((*_1).1: &std::string::String)); // in scope 0 at ui/closures/2229_closure_analysis/run_pass/mut_ref.rs:23:9: 23:10
    let mut _0: ();                      // return place in scope 0 at ui/closures/2229_closure_analysis/run_pass/mut_ref.rs:27:20: 27:20
    let mut _2: &std::string::String;    // in scope 0 at ui/closures/2229_closure_analysis/run_pass/mut_ref.rs:28:20: 28:22
    let _3: &std::string::String;        // in scope 0 at ui/closures/2229_closure_analysis/run_pass/mut_ref.rs:28:20: 28:22
    let mut _4: &std::string::String;    // in scope 0 at ui/closures/2229_closure_analysis/run_pass/mut_ref.rs:27:17: 29:6
    let mut _5: &mut &std::string::String; // in scope 0 at ui/closures/2229_closure_analysis/run_pass/mut_ref.rs:27:17: 29:6

    bb0: {
        _4 = deref_copy ((*_1).1: &std::string::String); // scope 0 at ui/closures/2229_closure_analysis/run_pass/mut_ref.rs:28:20: 28:22
        _3 = _4;                         // scope 0 at ui/closures/2229_closure_analysis/run_pass/mut_ref.rs:28:20: 28:22
        _2 = _3;                         // scope 0 at ui/closures/2229_closure_analysis/run_pass/mut_ref.rs:28:20: 28:22
        _5 = deref_copy ((*_1).0: &mut &std::string::String); // scope 0 at ui/closures/2229_closure_analysis/run_pass/mut_ref.rs:28:9: 28:22
        (*_5) = move _2;                 // scope 0 at ui/closures/2229_closure_analysis/run_pass/mut_ref.rs:28:9: 28:22
        return;                          // scope 0 at ui/closures/2229_closure_analysis/run_pass/mut_ref.rs:29:6: 29:6
    }
}

fn mut_mut_ref() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/closures/2229_closure_analysis/run_pass/mut_ref.rs:38:18: 38:18
    let mut _1: std::string::String;     // in scope 0 at ui/closures/2229_closure_analysis/run_pass/mut_ref.rs:39:9: 39:14
    let mut _5: &mut std::string::String; // in scope 0 at ui/closures/2229_closure_analysis/run_pass/mut_ref.rs:43:17: 45:6
    let _6: ();                          // in scope 0 at ui/closures/2229_closure_analysis/run_pass/mut_ref.rs:47:5: 47:8
    let mut _7: &mut [closure@ui/closures/2229_closure_analysis/run_pass/mut_ref.rs:43:17: 43:19]; // in scope 0 at ui/closures/2229_closure_analysis/run_pass/mut_ref.rs:47:5: 47:6
    let mut _8: ();                      // in scope 0 at ui/closures/2229_closure_analysis/run_pass/mut_ref.rs:47:5: 47:8
    let mut _9: &mut std::string::String; // in scope 0 at ui/closures/2229_closure_analysis/run_pass/mut_ref.rs:41:9: 41:17
    scope 1 {
        debug x => _1;                   // in scope 1 at ui/closures/2229_closure_analysis/run_pass/mut_ref.rs:39:9: 39:14
        let mut _2: &mut std::string::String; // in scope 1 at ui/closures/2229_closure_analysis/run_pass/mut_ref.rs:40:9: 40:19
        scope 2 {
            debug mref_x => _2;          // in scope 2 at ui/closures/2229_closure_analysis/run_pass/mut_ref.rs:40:9: 40:19
            let _3: &mut &mut std::string::String; // in scope 2 at ui/closures/2229_closure_analysis/run_pass/mut_ref.rs:41:9: 41:17
            scope 3 {
                debug m_mref_x => _3;    // in scope 3 at ui/closures/2229_closure_analysis/run_pass/mut_ref.rs:41:9: 41:17
                let mut _4: [closure@ui/closures/2229_closure_analysis/run_pass/mut_ref.rs:43:17: 43:19]; // in scope 3 at ui/closures/2229_closure_analysis/run_pass/mut_ref.rs:43:9: 43:14
                scope 4 {
                    debug c => _4;       // in scope 4 at ui/closures/2229_closure_analysis/run_pass/mut_ref.rs:43:9: 43:14
                }
            }
        }
    }

    bb0: {
        _1 = String::new() -> bb1;       // scope 0 at ui/closures/2229_closure_analysis/run_pass/mut_ref.rs:39:17: 39:30
                                         // mir::Constant
                                         // + span: ui/closures/2229_closure_analysis/run_pass/mut_ref.rs:39:17: 39:28
                                         // + literal: Const { ty: fn() -> String {String::new}, val: Value(<ZST>) }
    }

    bb1: {
        _2 = &mut _1;                    // scope 1 at ui/closures/2229_closure_analysis/run_pass/mut_ref.rs:40:22: 40:28
        _3 = &mut _2;                    // scope 2 at ui/closures/2229_closure_analysis/run_pass/mut_ref.rs:41:20: 41:31
        _9 = deref_copy (*_3);           // scope 3 at ui/closures/2229_closure_analysis/run_pass/mut_ref.rs:43:17: 45:6
        _5 = &mut (*_9);                 // scope 3 at ui/closures/2229_closure_analysis/run_pass/mut_ref.rs:43:17: 45:6
        _4 = [closure@ui/closures/2229_closure_analysis/run_pass/mut_ref.rs:43:17: 43:19] { m_mref_x: move _5 }; // scope 3 at ui/closures/2229_closure_analysis/run_pass/mut_ref.rs:43:17: 45:6
                                         // closure
                                         // + def_id: DefId(0:8 ~ mut_ref[c447]::mut_mut_ref::{closure#0})
                                         // + substs: [
                                         //     i16,
                                         //     extern "rust-call" fn(()),
                                         //     (&mut std::string::String,),
                                         // ]
        _7 = &mut _4;                    // scope 4 at ui/closures/2229_closure_analysis/run_pass/mut_ref.rs:47:5: 47:6
        _6 = <[closure@ui/closures/2229_closure_analysis/run_pass/mut_ref.rs:43:17: 43:19] as FnMut<()>>::call_mut(move _7, move _8) -> [return: bb2, unwind: bb4]; // scope 4 at ui/closures/2229_closure_analysis/run_pass/mut_ref.rs:47:5: 47:8
                                         // mir::Constant
                                         // + span: ui/closures/2229_closure_analysis/run_pass/mut_ref.rs:47:5: 47:6
                                         // + literal: Const { ty: for<'a> extern "rust-call" fn(&'a mut [closure@ui/closures/2229_closure_analysis/run_pass/mut_ref.rs:43:17: 43:19], ()) -> <[closure@ui/closures/2229_closure_analysis/run_pass/mut_ref.rs:43:17: 43:19] as FnOnce<()>>::Output {<[closure@ui/closures/2229_closure_analysis/run_pass/mut_ref.rs:43:17: 43:19] as FnMut<()>>::call_mut}, val: Value(<ZST>) }
    }

    bb2: {
        drop(_1) -> bb3;                 // scope 0 at ui/closures/2229_closure_analysis/run_pass/mut_ref.rs:48:1: 48:2
    }

    bb3: {
        return;                          // scope 0 at ui/closures/2229_closure_analysis/run_pass/mut_ref.rs:48:2: 48:2
    }

    bb4 (cleanup): {
        drop(_1) -> bb5;                 // scope 0 at ui/closures/2229_closure_analysis/run_pass/mut_ref.rs:48:1: 48:2
    }

    bb5 (cleanup): {
        resume;                          // scope 0 at ui/closures/2229_closure_analysis/run_pass/mut_ref.rs:38:1: 48:2
    }
}

fn mut_mut_ref::{closure#0}(_1: &mut [closure@ui/closures/2229_closure_analysis/run_pass/mut_ref.rs:43:17: 43:19]) -> () {
    debug m_mref_x => (*((*_1).0: &mut std::string::String)); // in scope 0 at ui/closures/2229_closure_analysis/run_pass/mut_ref.rs:41:9: 41:17
    let mut _0: ();                      // return place in scope 0 at ui/closures/2229_closure_analysis/run_pass/mut_ref.rs:43:20: 43:20
    let mut _2: std::string::String;     // in scope 0 at ui/closures/2229_closure_analysis/run_pass/mut_ref.rs:44:22: 44:35
    let mut _3: &mut std::string::String; // in scope 0 at ui/closures/2229_closure_analysis/run_pass/mut_ref.rs:43:17: 45:6
    let mut _4: &mut std::string::String; // in scope 0 at ui/closures/2229_closure_analysis/run_pass/mut_ref.rs:43:17: 45:6
    let mut _5: &mut std::string::String; // in scope 0 at ui/closures/2229_closure_analysis/run_pass/mut_ref.rs:43:17: 45:6

    bb0: {
        _2 = String::new() -> bb1;       // scope 0 at ui/closures/2229_closure_analysis/run_pass/mut_ref.rs:44:22: 44:35
                                         // mir::Constant
                                         // + span: ui/closures/2229_closure_analysis/run_pass/mut_ref.rs:44:22: 44:33
                                         // + literal: Const { ty: fn() -> String {String::new}, val: Value(<ZST>) }
    }

    bb1: {
        _3 = deref_copy ((*_1).0: &mut std::string::String); // scope 0 at ui/closures/2229_closure_analysis/run_pass/mut_ref.rs:44:9: 44:19
        drop((*_3)) -> [return: bb3, unwind: bb2]; // scope 0 at ui/closures/2229_closure_analysis/run_pass/mut_ref.rs:44:9: 44:19
    }

    bb2 (cleanup): {
        _4 = deref_copy ((*_1).0: &mut std::string::String); // scope 0 at ui/closures/2229_closure_analysis/run_pass/mut_ref.rs:44:9: 44:19
        (*_4) = move _2;                 // scope 0 at ui/closures/2229_closure_analysis/run_pass/mut_ref.rs:44:9: 44:19
        resume;                          // scope 0 at ui/closures/2229_closure_analysis/run_pass/mut_ref.rs:43:17: 45:6
    }

    bb3: {
        _5 = deref_copy ((*_1).0: &mut std::string::String); // scope 0 at ui/closures/2229_closure_analysis/run_pass/mut_ref.rs:44:9: 44:19
        (*_5) = move _2;                 // scope 0 at ui/closures/2229_closure_analysis/run_pass/mut_ref.rs:44:9: 44:19
        return;                          // scope 0 at ui/closures/2229_closure_analysis/run_pass/mut_ref.rs:45:6: 45:6
    }
}

fn main() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/closures/2229_closure_analysis/run_pass/mut_ref.rs:50:11: 50:11
    let _1: ();                          // in scope 0 at ui/closures/2229_closure_analysis/run_pass/mut_ref.rs:51:5: 51:16
    let _2: ();                          // in scope 0 at ui/closures/2229_closure_analysis/run_pass/mut_ref.rs:52:5: 52:16
    let _3: ();                          // in scope 0 at ui/closures/2229_closure_analysis/run_pass/mut_ref.rs:53:5: 53:18

    bb0: {
        _1 = mut_ref_1() -> bb1;         // scope 0 at ui/closures/2229_closure_analysis/run_pass/mut_ref.rs:51:5: 51:16
                                         // mir::Constant
                                         // + span: ui/closures/2229_closure_analysis/run_pass/mut_ref.rs:51:5: 51:14
                                         // + literal: Const { ty: fn() {mut_ref_1}, val: Value(<ZST>) }
    }

    bb1: {
        _2 = mut_ref_2() -> bb2;         // scope 0 at ui/closures/2229_closure_analysis/run_pass/mut_ref.rs:52:5: 52:16
                                         // mir::Constant
                                         // + span: ui/closures/2229_closure_analysis/run_pass/mut_ref.rs:52:5: 52:14
                                         // + literal: Const { ty: fn() {mut_ref_2}, val: Value(<ZST>) }
    }

    bb2: {
        _3 = mut_mut_ref() -> bb3;       // scope 0 at ui/closures/2229_closure_analysis/run_pass/mut_ref.rs:53:5: 53:18
                                         // mir::Constant
                                         // + span: ui/closures/2229_closure_analysis/run_pass/mut_ref.rs:53:5: 53:16
                                         // + literal: Const { ty: fn() {mut_mut_ref}, val: Value(<ZST>) }
    }

    bb3: {
        return;                          // scope 0 at ui/closures/2229_closure_analysis/run_pass/mut_ref.rs:54:2: 54:2
    }
}
