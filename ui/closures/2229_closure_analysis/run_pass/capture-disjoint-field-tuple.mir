// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
fn main() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/closures/2229_closure_analysis/run_pass/capture-disjoint-field-tuple.rs:9:11: 9:11
    let mut _1: (i32, i32);              // in scope 0 at ui/closures/2229_closure_analysis/run_pass/capture-disjoint-field-tuple.rs:10:9: 10:14
    let mut _3: &i32;                    // in scope 0 at ui/closures/2229_closure_analysis/run_pass/capture-disjoint-field-tuple.rs:12:13: 14:6
    let _5: ();                          // in scope 0 at ui/closures/2229_closure_analysis/run_pass/capture-disjoint-field-tuple.rs:19:5: 19:8
    let mut _6: &[closure@ui/closures/2229_closure_analysis/run_pass/capture-disjoint-field-tuple.rs:12:13: 12:15]; // in scope 0 at ui/closures/2229_closure_analysis/run_pass/capture-disjoint-field-tuple.rs:19:5: 19:6
    let mut _7: ();                      // in scope 0 at ui/closures/2229_closure_analysis/run_pass/capture-disjoint-field-tuple.rs:19:5: 19:8
    scope 1 {
        debug t => _1;                   // in scope 1 at ui/closures/2229_closure_analysis/run_pass/capture-disjoint-field-tuple.rs:10:9: 10:14
        let _2: [closure@ui/closures/2229_closure_analysis/run_pass/capture-disjoint-field-tuple.rs:12:13: 12:15]; // in scope 1 at ui/closures/2229_closure_analysis/run_pass/capture-disjoint-field-tuple.rs:12:9: 12:10
        scope 2 {
            debug c => _2;               // in scope 2 at ui/closures/2229_closure_analysis/run_pass/capture-disjoint-field-tuple.rs:12:9: 12:10
            let _4: &mut i32;            // in scope 2 at ui/closures/2229_closure_analysis/run_pass/capture-disjoint-field-tuple.rs:17:9: 17:11
            scope 3 {
                debug t1 => _4;          // in scope 3 at ui/closures/2229_closure_analysis/run_pass/capture-disjoint-field-tuple.rs:17:9: 17:11
            }
        }
    }

    bb0: {
        _1 = const (10_i32, 10_i32);     // scope 0 at ui/closures/2229_closure_analysis/run_pass/capture-disjoint-field-tuple.rs:10:17: 10:25
        _3 = &(_1.0: i32);               // scope 1 at ui/closures/2229_closure_analysis/run_pass/capture-disjoint-field-tuple.rs:12:13: 14:6
        _2 = [closure@ui/closures/2229_closure_analysis/run_pass/capture-disjoint-field-tuple.rs:12:13: 12:15] { t: move _3 }; // scope 1 at ui/closures/2229_closure_analysis/run_pass/capture-disjoint-field-tuple.rs:12:13: 14:6
                                         // closure
                                         // + def_id: DefId(0:4 ~ capture_disjoint_field_tuple[08b3]::main::{closure#0})
                                         // + substs: [
                                         //     i8,
                                         //     extern "rust-call" fn(()),
                                         //     (&i32,),
                                         // ]
        _4 = &mut (_1.1: i32);           // scope 2 at ui/closures/2229_closure_analysis/run_pass/capture-disjoint-field-tuple.rs:17:14: 17:22
        _6 = &_2;                        // scope 3 at ui/closures/2229_closure_analysis/run_pass/capture-disjoint-field-tuple.rs:19:5: 19:6
        _5 = <[closure@ui/closures/2229_closure_analysis/run_pass/capture-disjoint-field-tuple.rs:12:13: 12:15] as Fn<()>>::call(move _6, move _7) -> bb1; // scope 3 at ui/closures/2229_closure_analysis/run_pass/capture-disjoint-field-tuple.rs:19:5: 19:8
                                         // mir::Constant
                                         // + span: ui/closures/2229_closure_analysis/run_pass/capture-disjoint-field-tuple.rs:19:5: 19:6
                                         // + literal: Const { ty: for<'a> extern "rust-call" fn(&'a [closure@ui/closures/2229_closure_analysis/run_pass/capture-disjoint-field-tuple.rs:12:13: 12:15], ()) -> <[closure@ui/closures/2229_closure_analysis/run_pass/capture-disjoint-field-tuple.rs:12:13: 12:15] as FnOnce<()>>::Output {<[closure@ui/closures/2229_closure_analysis/run_pass/capture-disjoint-field-tuple.rs:12:13: 12:15] as Fn<()>>::call}, val: Value(<ZST>) }
    }

    bb1: {
        (*_4) = const 20_i32;            // scope 3 at ui/closures/2229_closure_analysis/run_pass/capture-disjoint-field-tuple.rs:20:5: 20:13
        return;                          // scope 0 at ui/closures/2229_closure_analysis/run_pass/capture-disjoint-field-tuple.rs:21:2: 21:2
    }
}

fn main::{closure#0}(_1: &[closure@ui/closures/2229_closure_analysis/run_pass/capture-disjoint-field-tuple.rs:12:13: 12:15]) -> () {
    debug t__0 => (*((*_1).0: &i32));    // in scope 0 at ui/closures/2229_closure_analysis/run_pass/capture-disjoint-field-tuple.rs:10:9: 10:14
    let mut _0: ();                      // return place in scope 0 at ui/closures/2229_closure_analysis/run_pass/capture-disjoint-field-tuple.rs:12:16: 12:16
    let _2: ();                          // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:62
    let mut _3: std::fmt::Arguments<'_>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _4: &[&str];                 // in scope 0 at ui/closures/2229_closure_analysis/run_pass/capture-disjoint-field-tuple.rs:13:18: 13:22
    let mut _5: &[&str; 2];              // in scope 0 at ui/closures/2229_closure_analysis/run_pass/capture-disjoint-field-tuple.rs:13:18: 13:22
    let _6: &[&str; 2];                  // in scope 0 at ui/closures/2229_closure_analysis/run_pass/capture-disjoint-field-tuple.rs:13:18: 13:22
    let mut _7: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _8: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let _9: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let _10: [core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _11: core::fmt::ArgumentV1<'_>; // in scope 0 at ui/closures/2229_closure_analysis/run_pass/capture-disjoint-field-tuple.rs:13:24: 13:27
    let mut _12: &i32;                   // in scope 0 at ui/closures/2229_closure_analysis/run_pass/capture-disjoint-field-tuple.rs:13:24: 13:27
    let _13: &i32;                       // in scope 0 at ui/closures/2229_closure_analysis/run_pass/capture-disjoint-field-tuple.rs:13:24: 13:27
    let mut _14: &[&str; 2];             // in scope 0 at ui/closures/2229_closure_analysis/run_pass/capture-disjoint-field-tuple.rs:13:18: 13:22
    let mut _15: &i32;                   // in scope 0 at ui/closures/2229_closure_analysis/run_pass/capture-disjoint-field-tuple.rs:12:13: 14:6

    bb0: {
        _14 = const _;                   // scope 0 at ui/closures/2229_closure_analysis/run_pass/capture-disjoint-field-tuple.rs:13:18: 13:22
                                         // mir::Constant
                                         // + span: ui/closures/2229_closure_analysis/run_pass/capture-disjoint-field-tuple.rs:13:18: 13:22
                                         // + literal: Const { ty: &[&str; 2], val: Unevaluated(main::{closure#0}, [<closure_kind>, <closure_signature>, <upvars>], Some(promoted[0])) }
        _6 = _14;                        // scope 0 at ui/closures/2229_closure_analysis/run_pass/capture-disjoint-field-tuple.rs:13:18: 13:22
        _5 = _6;                         // scope 0 at ui/closures/2229_closure_analysis/run_pass/capture-disjoint-field-tuple.rs:13:18: 13:22
        _4 = move _5 as &[&str] (Pointer(Unsize)); // scope 0 at ui/closures/2229_closure_analysis/run_pass/capture-disjoint-field-tuple.rs:13:18: 13:22
        _15 = deref_copy ((*_1).0: &i32); // scope 0 at ui/closures/2229_closure_analysis/run_pass/capture-disjoint-field-tuple.rs:13:24: 13:27
        _13 = _15;                       // scope 0 at ui/closures/2229_closure_analysis/run_pass/capture-disjoint-field-tuple.rs:13:24: 13:27
        _12 = _13;                       // scope 0 at ui/closures/2229_closure_analysis/run_pass/capture-disjoint-field-tuple.rs:13:24: 13:27
        _11 = core::fmt::ArgumentV1::<'_>::new_display::<i32>(move _12) -> bb1; // scope 0 at ui/closures/2229_closure_analysis/run_pass/capture-disjoint-field-tuple.rs:13:24: 13:27
                                         // mir::Constant
                                         // + span: ui/closures/2229_closure_analysis/run_pass/capture-disjoint-field-tuple.rs:13:24: 13:27
                                         // + user_ty: UserType(1)
                                         // + literal: Const { ty: for<'b> fn(&'b i32) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_display::<i32>}, val: Value(<ZST>) }
    }

    bb1: {
        _10 = [move _11];                // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _9 = &_10;                       // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _8 = _9;                         // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _7 = move _8 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _3 = Arguments::<'_>::new_v1(move _4, move _7) -> bb2; // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb2: {
        _2 = _print(move _3) -> bb3;     // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:62
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:27
                                         // + literal: Const { ty: for<'a> fn(Arguments<'a>) {_print}, val: Value(<ZST>) }
    }

    bb3: {
        return;                          // scope 0 at ui/closures/2229_closure_analysis/run_pass/capture-disjoint-field-tuple.rs:14:6: 14:6
    }
}

promoted[0] in main::{closure#0}: &[&str; 2] = {
    let mut _0: &[&str; 2];              // return place in scope 0 at ui/closures/2229_closure_analysis/run_pass/capture-disjoint-field-tuple.rs:13:18: 13:22
    let mut _1: [&str; 2];               // in scope 0 at ui/closures/2229_closure_analysis/run_pass/capture-disjoint-field-tuple.rs:13:18: 13:22

    bb0: {
        _1 = [const "", const "\n"];     // scope 0 at ui/closures/2229_closure_analysis/run_pass/capture-disjoint-field-tuple.rs:13:18: 13:22
                                         // mir::Constant
                                         // + span: ui/closures/2229_closure_analysis/run_pass/capture-disjoint-field-tuple.rs:13:18: 13:22
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
                                         // mir::Constant
                                         // + span: ui/closures/2229_closure_analysis/run_pass/capture-disjoint-field-tuple.rs:13:18: 13:22
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at ui/closures/2229_closure_analysis/run_pass/capture-disjoint-field-tuple.rs:13:18: 13:22
        return;                          // scope 0 at ui/closures/2229_closure_analysis/run_pass/capture-disjoint-field-tuple.rs:13:18: 13:22
    }
}
