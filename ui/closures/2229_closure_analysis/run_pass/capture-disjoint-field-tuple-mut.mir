// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
fn main() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/closures/2229_closure_analysis/run_pass/capture-disjoint-field-tuple-mut.rs:9:11: 9:11
    let mut _1: (i32, i32);              // in scope 0 at ui/closures/2229_closure_analysis/run_pass/capture-disjoint-field-tuple-mut.rs:10:9: 10:14
    let mut _3: &mut i32;                // in scope 0 at ui/closures/2229_closure_analysis/run_pass/capture-disjoint-field-tuple-mut.rs:12:17: 15:6
    let _4: ();                          // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:62
    let mut _5: std::fmt::Arguments<'_>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _6: &[&str];                 // in scope 0 at ui/closures/2229_closure_analysis/run_pass/capture-disjoint-field-tuple-mut.rs:18:14: 18:18
    let mut _7: &[&str; 2];              // in scope 0 at ui/closures/2229_closure_analysis/run_pass/capture-disjoint-field-tuple-mut.rs:18:14: 18:18
    let _8: &[&str; 2];                  // in scope 0 at ui/closures/2229_closure_analysis/run_pass/capture-disjoint-field-tuple-mut.rs:18:14: 18:18
    let mut _9: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _10: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let _11: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let _12: [core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _13: core::fmt::ArgumentV1<'_>; // in scope 0 at ui/closures/2229_closure_analysis/run_pass/capture-disjoint-field-tuple-mut.rs:18:20: 18:23
    let mut _14: &i32;                   // in scope 0 at ui/closures/2229_closure_analysis/run_pass/capture-disjoint-field-tuple-mut.rs:18:20: 18:23
    let _15: &i32;                       // in scope 0 at ui/closures/2229_closure_analysis/run_pass/capture-disjoint-field-tuple-mut.rs:18:20: 18:23
    let _16: ();                         // in scope 0 at ui/closures/2229_closure_analysis/run_pass/capture-disjoint-field-tuple-mut.rs:19:5: 19:8
    let mut _17: &mut [closure@ui/closures/2229_closure_analysis/run_pass/capture-disjoint-field-tuple-mut.rs:12:17: 12:19]; // in scope 0 at ui/closures/2229_closure_analysis/run_pass/capture-disjoint-field-tuple-mut.rs:19:5: 19:6
    let mut _18: ();                     // in scope 0 at ui/closures/2229_closure_analysis/run_pass/capture-disjoint-field-tuple-mut.rs:19:5: 19:8
    scope 1 {
        debug t => _1;                   // in scope 1 at ui/closures/2229_closure_analysis/run_pass/capture-disjoint-field-tuple-mut.rs:10:9: 10:14
        let mut _2: [closure@ui/closures/2229_closure_analysis/run_pass/capture-disjoint-field-tuple-mut.rs:12:17: 12:19]; // in scope 1 at ui/closures/2229_closure_analysis/run_pass/capture-disjoint-field-tuple-mut.rs:12:9: 12:14
        scope 2 {
            debug c => _2;               // in scope 2 at ui/closures/2229_closure_analysis/run_pass/capture-disjoint-field-tuple-mut.rs:12:9: 12:14
            let mut _19: &[&str; 2];     // in scope 2 at ui/closures/2229_closure_analysis/run_pass/capture-disjoint-field-tuple-mut.rs:18:14: 18:18
        }
    }

    bb0: {
        _1 = const (10_i32, 10_i32);     // scope 0 at ui/closures/2229_closure_analysis/run_pass/capture-disjoint-field-tuple-mut.rs:10:17: 10:25
        _3 = &mut (_1.1: i32);           // scope 1 at ui/closures/2229_closure_analysis/run_pass/capture-disjoint-field-tuple-mut.rs:12:17: 15:6
        _2 = [closure@ui/closures/2229_closure_analysis/run_pass/capture-disjoint-field-tuple-mut.rs:12:17: 12:19] { t: move _3 }; // scope 1 at ui/closures/2229_closure_analysis/run_pass/capture-disjoint-field-tuple-mut.rs:12:17: 15:6
                                         // closure
                                         // + def_id: DefId(0:4 ~ capture_disjoint_field_tuple_mut[8710]::main::{closure#0})
                                         // + substs: [
                                         //     i16,
                                         //     extern "rust-call" fn(()),
                                         //     (&mut i32,),
                                         // ]
        _19 = const _;                   // scope 2 at ui/closures/2229_closure_analysis/run_pass/capture-disjoint-field-tuple-mut.rs:18:14: 18:18
                                         // mir::Constant
                                         // + span: ui/closures/2229_closure_analysis/run_pass/capture-disjoint-field-tuple-mut.rs:18:14: 18:18
                                         // + literal: Const { ty: &[&str; 2], val: Unevaluated(main, [], Some(promoted[0])) }
        _8 = _19;                        // scope 2 at ui/closures/2229_closure_analysis/run_pass/capture-disjoint-field-tuple-mut.rs:18:14: 18:18
        _7 = _8;                         // scope 2 at ui/closures/2229_closure_analysis/run_pass/capture-disjoint-field-tuple-mut.rs:18:14: 18:18
        _6 = move _7 as &[&str] (Pointer(Unsize)); // scope 2 at ui/closures/2229_closure_analysis/run_pass/capture-disjoint-field-tuple-mut.rs:18:14: 18:18
        _15 = &(_1.0: i32);              // scope 2 at ui/closures/2229_closure_analysis/run_pass/capture-disjoint-field-tuple-mut.rs:18:20: 18:23
        _14 = _15;                       // scope 2 at ui/closures/2229_closure_analysis/run_pass/capture-disjoint-field-tuple-mut.rs:18:20: 18:23
        _13 = core::fmt::ArgumentV1::<'_>::new_display::<i32>(move _14) -> bb1; // scope 2 at ui/closures/2229_closure_analysis/run_pass/capture-disjoint-field-tuple-mut.rs:18:20: 18:23
                                         // mir::Constant
                                         // + span: ui/closures/2229_closure_analysis/run_pass/capture-disjoint-field-tuple-mut.rs:18:20: 18:23
                                         // + user_ty: UserType(1)
                                         // + literal: Const { ty: for<'b> fn(&'b i32) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_display::<i32>}, val: Value(<ZST>) }
    }

    bb1: {
        _12 = [move _13];                // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _11 = &_12;                      // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _10 = _11;                       // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _9 = move _10 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _5 = Arguments::<'_>::new_v1(move _6, move _9) -> bb2; // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb2: {
        _4 = _print(move _5) -> bb3;     // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:62
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:27
                                         // + literal: Const { ty: for<'a> fn(Arguments<'a>) {_print}, val: Value(<ZST>) }
    }

    bb3: {
        _17 = &mut _2;                   // scope 2 at ui/closures/2229_closure_analysis/run_pass/capture-disjoint-field-tuple-mut.rs:19:5: 19:6
        _16 = <[closure@ui/closures/2229_closure_analysis/run_pass/capture-disjoint-field-tuple-mut.rs:12:17: 12:19] as FnMut<()>>::call_mut(move _17, move _18) -> bb4; // scope 2 at ui/closures/2229_closure_analysis/run_pass/capture-disjoint-field-tuple-mut.rs:19:5: 19:8
                                         // mir::Constant
                                         // + span: ui/closures/2229_closure_analysis/run_pass/capture-disjoint-field-tuple-mut.rs:19:5: 19:6
                                         // + literal: Const { ty: for<'a> extern "rust-call" fn(&'a mut [closure@ui/closures/2229_closure_analysis/run_pass/capture-disjoint-field-tuple-mut.rs:12:17: 12:19], ()) -> <[closure@ui/closures/2229_closure_analysis/run_pass/capture-disjoint-field-tuple-mut.rs:12:17: 12:19] as FnOnce<()>>::Output {<[closure@ui/closures/2229_closure_analysis/run_pass/capture-disjoint-field-tuple-mut.rs:12:17: 12:19] as FnMut<()>>::call_mut}, val: Value(<ZST>) }
    }

    bb4: {
        return;                          // scope 0 at ui/closures/2229_closure_analysis/run_pass/capture-disjoint-field-tuple-mut.rs:20:2: 20:2
    }
}

promoted[0] in main: &[&str; 2] = {
    let mut _0: &[&str; 2];              // return place in scope 0 at ui/closures/2229_closure_analysis/run_pass/capture-disjoint-field-tuple-mut.rs:18:14: 18:18
    let mut _1: [&str; 2];               // in scope 0 at ui/closures/2229_closure_analysis/run_pass/capture-disjoint-field-tuple-mut.rs:18:14: 18:18

    bb0: {
        _1 = [const "", const "\n"];     // scope 0 at ui/closures/2229_closure_analysis/run_pass/capture-disjoint-field-tuple-mut.rs:18:14: 18:18
                                         // mir::Constant
                                         // + span: ui/closures/2229_closure_analysis/run_pass/capture-disjoint-field-tuple-mut.rs:18:14: 18:18
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
                                         // mir::Constant
                                         // + span: ui/closures/2229_closure_analysis/run_pass/capture-disjoint-field-tuple-mut.rs:18:14: 18:18
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at ui/closures/2229_closure_analysis/run_pass/capture-disjoint-field-tuple-mut.rs:18:14: 18:18
        return;                          // scope 0 at ui/closures/2229_closure_analysis/run_pass/capture-disjoint-field-tuple-mut.rs:18:14: 18:18
    }
}

fn main::{closure#0}(_1: &mut [closure@ui/closures/2229_closure_analysis/run_pass/capture-disjoint-field-tuple-mut.rs:12:17: 12:19]) -> () {
    debug t__1 => (*((*_1).0: &mut i32)); // in scope 0 at ui/closures/2229_closure_analysis/run_pass/capture-disjoint-field-tuple-mut.rs:10:9: 10:14
    let mut _0: ();                      // return place in scope 0 at ui/closures/2229_closure_analysis/run_pass/capture-disjoint-field-tuple-mut.rs:12:20: 12:20
    let _2: &mut i32;                    // in scope 0 at ui/closures/2229_closure_analysis/run_pass/capture-disjoint-field-tuple-mut.rs:13:13: 13:15
    let mut _3: &mut i32;                // in scope 0 at ui/closures/2229_closure_analysis/run_pass/capture-disjoint-field-tuple-mut.rs:12:17: 15:6
    scope 1 {
        debug t1 => _2;                  // in scope 1 at ui/closures/2229_closure_analysis/run_pass/capture-disjoint-field-tuple-mut.rs:13:13: 13:15
    }

    bb0: {
        _3 = deref_copy ((*_1).0: &mut i32); // scope 0 at ui/closures/2229_closure_analysis/run_pass/capture-disjoint-field-tuple-mut.rs:13:18: 13:26
        _2 = &mut (*_3);                 // scope 0 at ui/closures/2229_closure_analysis/run_pass/capture-disjoint-field-tuple-mut.rs:13:18: 13:26
        (*_2) = const 20_i32;            // scope 1 at ui/closures/2229_closure_analysis/run_pass/capture-disjoint-field-tuple-mut.rs:14:9: 14:17
        return;                          // scope 0 at ui/closures/2229_closure_analysis/run_pass/capture-disjoint-field-tuple-mut.rs:15:6: 15:6
    }
}
