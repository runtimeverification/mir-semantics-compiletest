// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
fn graph() -> Graph<N, E, i32> {
    let mut _0: Graph<N, E, i32>;        // return place in scope 0 at ui/closures/2229_closure_analysis/migrations/issue-90024-adt-correct-subst.rs:14:21: 14:37
    let mut _1: !;                       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:773:9: 773:56

    bb0: {
        _1 = core::panicking::panic(const "not yet implemented"); // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:773:9: 773:56
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:773:9: 773:33
                                         // + literal: Const { ty: fn(&'static str) -> ! {core::panicking::panic}, val: Value(<ZST>) }
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:773:34: 773:55
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
    }
}

fn first_ice() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/closures/2229_closure_analysis/migrations/issue-90024-adt-correct-subst.rs:17:16: 17:16
    let _1: Graph<i32, i32, i32>;        // in scope 0 at ui/closures/2229_closure_analysis/migrations/issue-90024-adt-correct-subst.rs:18:9: 18:10
    let mut _2: [closure@ui/closures/2229_closure_analysis/migrations/issue-90024-adt-correct-subst.rs:19:13: 19:15]; // in scope 0 at ui/closures/2229_closure_analysis/migrations/issue-90024-adt-correct-subst.rs:19:13: 19:17
    scope 1 {
        debug g => _1;                   // in scope 1 at ui/closures/2229_closure_analysis/migrations/issue-90024-adt-correct-subst.rs:18:9: 18:10
        scope 2 {
        }
    }

    bb0: {
        _1 = graph::<i32, i32>() -> bb1; // scope 0 at ui/closures/2229_closure_analysis/migrations/issue-90024-adt-correct-subst.rs:18:13: 18:32
                                         // mir::Constant
                                         // + span: ui/closures/2229_closure_analysis/migrations/issue-90024-adt-correct-subst.rs:18:13: 18:30
                                         // + literal: Const { ty: fn() -> Graph<i32, i32, i32> {graph::<i32, i32>}, val: Value(<ZST>) }
    }

    bb1: {
        _2 = [closure@ui/closures/2229_closure_analysis/migrations/issue-90024-adt-correct-subst.rs:19:13: 19:15] { g: move _1 }; // scope 1 at ui/closures/2229_closure_analysis/migrations/issue-90024-adt-correct-subst.rs:19:13: 19:17
                                         // closure
                                         // + def_id: DefId(0:14 ~ issue_90024_adt_correct_subst[488f]::first_ice::{closure#0})
                                         // + substs: [
                                         //     i32,
                                         //     extern "rust-call" fn(()) -> Graph<i32, i32, i32>,
                                         //     (Graph<i32, i32, i32>,),
                                         // ]
        drop(_2) -> bb2;                 // scope 1 at ui/closures/2229_closure_analysis/migrations/issue-90024-adt-correct-subst.rs:19:17: 19:18
    }

    bb2: {
        return;                          // scope 0 at ui/closures/2229_closure_analysis/migrations/issue-90024-adt-correct-subst.rs:20:2: 20:2
    }
}

fn first_ice::{closure#0}(_1: [closure@ui/closures/2229_closure_analysis/migrations/issue-90024-adt-correct-subst.rs:19:13: 19:15]) -> Graph<i32, i32, i32> {
    debug g => (_1.0: Graph<i32, i32, i32>); // in scope 0 at ui/closures/2229_closure_analysis/migrations/issue-90024-adt-correct-subst.rs:18:9: 18:10
    let mut _0: Graph<i32, i32, i32>;    // return place in scope 0 at ui/closures/2229_closure_analysis/migrations/issue-90024-adt-correct-subst.rs:19:16: 19:16

    bb0: {
        _0 = move (_1.0: Graph<i32, i32, i32>); // scope 0 at ui/closures/2229_closure_analysis/migrations/issue-90024-adt-correct-subst.rs:19:16: 19:17
        return;                          // scope 0 at ui/closures/2229_closure_analysis/migrations/issue-90024-adt-correct-subst.rs:19:17: 19:17
    }
}

fn second_ice() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/closures/2229_closure_analysis/migrations/issue-90024-adt-correct-subst.rs:28:21: 28:21
    let _1: Foo<std::iter::Empty<()>>;   // in scope 0 at ui/closures/2229_closure_analysis/migrations/issue-90024-adt-correct-subst.rs:29:9: 29:10
    let mut _2: std::vec::Vec<()>;       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:44:36: 44:59
    let _3: ();                          // in scope 0 at ui/closures/2229_closure_analysis/migrations/issue-90024-adt-correct-subst.rs:31:5: 31:21
    let mut _4: &[closure@ui/closures/2229_closure_analysis/migrations/issue-90024-adt-correct-subst.rs:31:6: 31:8]; // in scope 0 at ui/closures/2229_closure_analysis/migrations/issue-90024-adt-correct-subst.rs:31:5: 31:19
    let _5: [closure@ui/closures/2229_closure_analysis/migrations/issue-90024-adt-correct-subst.rs:31:6: 31:8]; // in scope 0 at ui/closures/2229_closure_analysis/migrations/issue-90024-adt-correct-subst.rs:31:5: 31:19
    let mut _6: &Foo<std::iter::Empty<()>>; // in scope 0 at ui/closures/2229_closure_analysis/migrations/issue-90024-adt-correct-subst.rs:31:5: 31:19
    let mut _7: ();                      // in scope 0 at ui/closures/2229_closure_analysis/migrations/issue-90024-adt-correct-subst.rs:31:5: 31:21
    scope 1 {
        debug v => _1;                   // in scope 1 at ui/closures/2229_closure_analysis/migrations/issue-90024-adt-correct-subst.rs:29:9: 29:10
    }

    bb0: {
        _2 = Vec::<()>::new() -> bb1;    // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:44:36: 44:59
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:44:36: 44:57
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: fn() -> Vec<()> {Vec::<()>::new}, val: Value(<ZST>) }
    }

    bb1: {
        _1 = Foo::<std::iter::Empty<()>> { data: move _2 }; // scope 0 at ui/closures/2229_closure_analysis/migrations/issue-90024-adt-correct-subst.rs:29:13: 29:46
        _6 = &_1;                        // scope 1 at ui/closures/2229_closure_analysis/migrations/issue-90024-adt-correct-subst.rs:31:5: 31:19
        _5 = [closure@ui/closures/2229_closure_analysis/migrations/issue-90024-adt-correct-subst.rs:31:6: 31:8] { v: move _6 }; // scope 1 at ui/closures/2229_closure_analysis/migrations/issue-90024-adt-correct-subst.rs:31:5: 31:19
                                         // closure
                                         // + def_id: DefId(0:20 ~ issue_90024_adt_correct_subst[488f]::second_ice::{closure#0})
                                         // + substs: [
                                         //     i8,
                                         //     extern "rust-call" fn(()),
                                         //     (&Foo<std::iter::Empty<()>>,),
                                         // ]
        _4 = &_5;                        // scope 1 at ui/closures/2229_closure_analysis/migrations/issue-90024-adt-correct-subst.rs:31:5: 31:19
        _3 = <[closure@ui/closures/2229_closure_analysis/migrations/issue-90024-adt-correct-subst.rs:31:6: 31:8] as Fn<()>>::call(move _4, move _7) -> [return: bb2, unwind: bb4]; // scope 1 at ui/closures/2229_closure_analysis/migrations/issue-90024-adt-correct-subst.rs:31:5: 31:21
                                         // mir::Constant
                                         // + span: ui/closures/2229_closure_analysis/migrations/issue-90024-adt-correct-subst.rs:31:5: 31:19
                                         // + literal: Const { ty: for<'a> extern "rust-call" fn(&'a [closure@ui/closures/2229_closure_analysis/migrations/issue-90024-adt-correct-subst.rs:31:6: 31:8], ()) -> <[closure@ui/closures/2229_closure_analysis/migrations/issue-90024-adt-correct-subst.rs:31:6: 31:8] as FnOnce<()>>::Output {<[closure@ui/closures/2229_closure_analysis/migrations/issue-90024-adt-correct-subst.rs:31:6: 31:8] as Fn<()>>::call}, val: Value(<ZST>) }
    }

    bb2: {
        drop(_1) -> bb3;                 // scope 0 at ui/closures/2229_closure_analysis/migrations/issue-90024-adt-correct-subst.rs:32:1: 32:2
    }

    bb3: {
        return;                          // scope 0 at ui/closures/2229_closure_analysis/migrations/issue-90024-adt-correct-subst.rs:32:2: 32:2
    }

    bb4 (cleanup): {
        drop(_1) -> bb5;                 // scope 0 at ui/closures/2229_closure_analysis/migrations/issue-90024-adt-correct-subst.rs:32:1: 32:2
    }

    bb5 (cleanup): {
        resume;                          // scope 0 at ui/closures/2229_closure_analysis/migrations/issue-90024-adt-correct-subst.rs:28:1: 32:2
    }
}

fn second_ice::{closure#0}(_1: &[closure@ui/closures/2229_closure_analysis/migrations/issue-90024-adt-correct-subst.rs:31:6: 31:8]) -> () {
    debug v => (*((*_1).0: &Foo<std::iter::Empty<()>>)); // in scope 0 at ui/closures/2229_closure_analysis/migrations/issue-90024-adt-correct-subst.rs:29:9: 29:10
    let mut _0: ();                      // return place in scope 0 at ui/closures/2229_closure_analysis/migrations/issue-90024-adt-correct-subst.rs:31:9: 31:9
    let mut _2: &();                     // in scope 0 at ui/closures/2229_closure_analysis/migrations/issue-90024-adt-correct-subst.rs:31:9: 31:18
    let mut _3: &std::vec::Vec<()>;      // in scope 0 at ui/closures/2229_closure_analysis/migrations/issue-90024-adt-correct-subst.rs:31:9: 31:15
    let mut _4: &Foo<std::iter::Empty<()>>; // in scope 0 at ui/closures/2229_closure_analysis/migrations/issue-90024-adt-correct-subst.rs:31:5: 31:19

    bb0: {
        _4 = deref_copy ((*_1).0: &Foo<std::iter::Empty<()>>); // scope 0 at ui/closures/2229_closure_analysis/migrations/issue-90024-adt-correct-subst.rs:31:9: 31:15
        _3 = &((*_4).0: std::vec::Vec<()>); // scope 0 at ui/closures/2229_closure_analysis/migrations/issue-90024-adt-correct-subst.rs:31:9: 31:15
        _2 = <Vec<()> as Index<usize>>::index(move _3, const 0_usize) -> bb1; // scope 0 at ui/closures/2229_closure_analysis/migrations/issue-90024-adt-correct-subst.rs:31:9: 31:18
                                         // mir::Constant
                                         // + span: ui/closures/2229_closure_analysis/migrations/issue-90024-adt-correct-subst.rs:31:9: 31:18
                                         // + literal: Const { ty: for<'a> fn(&'a Vec<()>, usize) -> &'a <Vec<()> as Index<usize>>::Output {<Vec<()> as Index<usize>>::index}, val: Value(<ZST>) }
    }

    bb1: {
        return;                          // scope 0 at ui/closures/2229_closure_analysis/migrations/issue-90024-adt-correct-subst.rs:31:19: 31:19
    }
}

fn main() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/closures/2229_closure_analysis/migrations/issue-90024-adt-correct-subst.rs:34:15: 34:15
    let _1: ();                          // in scope 0 at ui/closures/2229_closure_analysis/migrations/issue-90024-adt-correct-subst.rs:35:5: 35:16
    let _2: ();                          // in scope 0 at ui/closures/2229_closure_analysis/migrations/issue-90024-adt-correct-subst.rs:36:5: 36:17

    bb0: {
        _1 = first_ice() -> bb1;         // scope 0 at ui/closures/2229_closure_analysis/migrations/issue-90024-adt-correct-subst.rs:35:5: 35:16
                                         // mir::Constant
                                         // + span: ui/closures/2229_closure_analysis/migrations/issue-90024-adt-correct-subst.rs:35:5: 35:14
                                         // + literal: Const { ty: fn() {first_ice}, val: Value(<ZST>) }
    }

    bb1: {
        _2 = second_ice() -> bb2;        // scope 0 at ui/closures/2229_closure_analysis/migrations/issue-90024-adt-correct-subst.rs:36:5: 36:17
                                         // mir::Constant
                                         // + span: ui/closures/2229_closure_analysis/migrations/issue-90024-adt-correct-subst.rs:36:5: 36:15
                                         // + literal: Const { ty: fn() {second_ice}, val: Value(<ZST>) }
    }

    bb2: {
        return;                          // scope 0 at ui/closures/2229_closure_analysis/migrations/issue-90024-adt-correct-subst.rs:37:2: 37:2
    }
}
