// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
fn main() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/closures/2229_closure_analysis/migrations/issue-78720.rs:5:11: 5:11
    let mut _1: &str;                    // in scope 0 at ui/closures/2229_closure_analysis/migrations/issue-78720.rs:6:16: 6:18
    let _3: ();                          // in scope 0 at ui/closures/2229_closure_analysis/migrations/issue-78720.rs:8:9: 8:30
    let mut _4: [closure@ui/closures/2229_closure_analysis/migrations/issue-78720.rs:8:14: 8:21]; // in scope 0 at ui/closures/2229_closure_analysis/migrations/issue-78720.rs:8:14: 8:29
    let mut _5: &&str;                   // in scope 0 at ui/closures/2229_closure_analysis/migrations/issue-78720.rs:8:14: 8:29
    scope 1 {
        debug a => _2;                   // in scope 1 at ui/closures/2229_closure_analysis/migrations/issue-78720.rs:6:12: 6:13
        let _2: &str;                    // in scope 1 at ui/closures/2229_closure_analysis/migrations/issue-78720.rs:6:12: 6:13
    }

    bb0: {
        _1 = const "";                   // scope 1 at ui/closures/2229_closure_analysis/migrations/issue-78720.rs:6:16: 6:18
                                         // mir::Constant
                                         // + span: ui/closures/2229_closure_analysis/migrations/issue-78720.rs:6:16: 6:18
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _2 = _1;                         // scope 1 at ui/closures/2229_closure_analysis/migrations/issue-78720.rs:6:12: 6:13
        _5 = &_2;                        // scope 1 at ui/closures/2229_closure_analysis/migrations/issue-78720.rs:8:14: 8:29
        _4 = [closure@ui/closures/2229_closure_analysis/migrations/issue-78720.rs:8:14: 8:21] { a: move _5 }; // scope 1 at ui/closures/2229_closure_analysis/migrations/issue-78720.rs:8:14: 8:29
                                         // closure
                                         // + def_id: DefId(0:4 ~ issue_78720[1736]::main::{closure#0})
                                         // + substs: [
                                         //     i8,
                                         //     extern "rust-call" fn(((),)),
                                         //     (&&str,),
                                         // ]
        _3 = std::mem::drop::<[closure@ui/closures/2229_closure_analysis/migrations/issue-78720.rs:8:14: 8:21]>(move _4) -> bb1; // scope 1 at ui/closures/2229_closure_analysis/migrations/issue-78720.rs:8:9: 8:30
                                         // mir::Constant
                                         // + span: ui/closures/2229_closure_analysis/migrations/issue-78720.rs:8:9: 8:13
                                         // + literal: Const { ty: fn([closure@ui/closures/2229_closure_analysis/migrations/issue-78720.rs:8:14: 8:21]) {std::mem::drop::<[closure@ui/closures/2229_closure_analysis/migrations/issue-78720.rs:8:14: 8:21]>}, val: Value(<ZST>) }
    }

    bb1: {
        return;                          // scope 0 at ui/closures/2229_closure_analysis/migrations/issue-78720.rs:10:2: 10:2
    }
}

fn main::{closure#0}(_1: &[closure@ui/closures/2229_closure_analysis/migrations/issue-78720.rs:8:14: 8:21], _2: ()) -> () {
    debug a => (*((*_1).0: &&str));      // in scope 0 at ui/closures/2229_closure_analysis/migrations/issue-78720.rs:6:12: 6:13
    let mut _0: ();                      // return place in scope 0 at ui/closures/2229_closure_analysis/migrations/issue-78720.rs:8:22: 8:22
    let mut _3: &str;                    // in scope 0 at ui/closures/2229_closure_analysis/migrations/issue-78720.rs:8:27: 8:28
    let mut _4: &&str;                   // in scope 0 at ui/closures/2229_closure_analysis/migrations/issue-78720.rs:8:14: 8:29

    bb0: {
        _4 = deref_copy ((*_1).0: &&str); // scope 0 at ui/closures/2229_closure_analysis/migrations/issue-78720.rs:8:27: 8:28
        _3 = (*_4);                      // scope 0 at ui/closures/2229_closure_analysis/migrations/issue-78720.rs:8:27: 8:28
        _0 = std::mem::drop::<&str>(move _3) -> bb1; // scope 0 at ui/closures/2229_closure_analysis/migrations/issue-78720.rs:8:22: 8:29
                                         // mir::Constant
                                         // + span: ui/closures/2229_closure_analysis/migrations/issue-78720.rs:8:22: 8:26
                                         // + literal: Const { ty: fn(&str) {std::mem::drop::<&str>}, val: Value(<ZST>) }
    }

    bb1: {
        return;                          // scope 0 at ui/closures/2229_closure_analysis/migrations/issue-78720.rs:8:29: 8:29
    }
}
