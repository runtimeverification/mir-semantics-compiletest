// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
fn <impl at ui/closures/2229_closure_analysis/migrations/precise_fixed.rs:6:10: 6:15>::fmt(_1: &Foo, _2: &mut Formatter<'_>) -> Result<(), std::fmt::Error> {
    debug self => _1;                    // in scope 0 at ui/closures/2229_closure_analysis/migrations/precise_fixed.rs:6:10: 6:15
    debug f => _2;                       // in scope 0 at ui/closures/2229_closure_analysis/migrations/precise_fixed.rs:6:10: 6:15
    let mut _0: std::result::Result<(), std::fmt::Error>; // return place in scope 0 at ui/closures/2229_closure_analysis/migrations/precise_fixed.rs:6:10: 6:15
    let mut _3: &mut std::fmt::Formatter<'_>; // in scope 0 at ui/closures/2229_closure_analysis/migrations/precise_fixed.rs:6:10: 6:15
    let mut _4: &str;                    // in scope 0 at ui/closures/2229_closure_analysis/migrations/precise_fixed.rs:6:10: 6:15
    let _5: &str;                        // in scope 0 at ui/closures/2229_closure_analysis/migrations/precise_fixed.rs:6:10: 6:15
    let mut _6: &dyn std::fmt::Debug;    // in scope 0 at ui/closures/2229_closure_analysis/migrations/precise_fixed.rs:7:12: 7:15
    let mut _7: &&i32;                   // in scope 0 at ui/closures/2229_closure_analysis/migrations/precise_fixed.rs:7:12: 7:15
    let _8: &&i32;                       // in scope 0 at ui/closures/2229_closure_analysis/migrations/precise_fixed.rs:7:12: 7:15
    let _9: &i32;                        // in scope 0 at ui/closures/2229_closure_analysis/migrations/precise_fixed.rs:7:12: 7:15

    bb0: {
        _3 = &mut (*_2);                 // scope 0 at ui/closures/2229_closure_analysis/migrations/precise_fixed.rs:6:10: 6:15
        _5 = const "Foo";                // scope 0 at ui/closures/2229_closure_analysis/migrations/precise_fixed.rs:6:10: 6:15
                                         // mir::Constant
                                         // + span: ui/closures/2229_closure_analysis/migrations/precise_fixed.rs:6:10: 6:15
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _4 = _5;                         // scope 0 at ui/closures/2229_closure_analysis/migrations/precise_fixed.rs:6:10: 6:15
        _9 = &((*_1).0: i32);            // scope 0 at ui/closures/2229_closure_analysis/migrations/precise_fixed.rs:7:12: 7:15
        _8 = &_9;                        // scope 0 at ui/closures/2229_closure_analysis/migrations/precise_fixed.rs:7:12: 7:15
        _7 = _8;                         // scope 0 at ui/closures/2229_closure_analysis/migrations/precise_fixed.rs:7:12: 7:15
        _6 = move _7 as &dyn std::fmt::Debug (Pointer(Unsize)); // scope 0 at ui/closures/2229_closure_analysis/migrations/precise_fixed.rs:7:12: 7:15
        _0 = Formatter::<'_>::debug_tuple_field1_finish(move _3, move _4, move _6) -> bb1; // scope 0 at ui/closures/2229_closure_analysis/migrations/precise_fixed.rs:6:10: 6:15
                                         // mir::Constant
                                         // + span: ui/closures/2229_closure_analysis/migrations/precise_fixed.rs:6:10: 6:15
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: for<'b, 'a, 'c> fn(&'b mut Formatter<'_>, &'a str, &'c (dyn Debug + 'c)) -> Result<(), std::fmt::Error> {Formatter::<'_>::debug_tuple_field1_finish}, val: Value(<ZST>) }
    }

    bb1: {
        return;                          // scope 0 at ui/closures/2229_closure_analysis/migrations/precise_fixed.rs:6:15: 6:15
    }
}

fn <impl at ui/closures/2229_closure_analysis/migrations/precise_fixed.rs:8:1: 8:18>::drop(_1: &mut Foo) -> () {
    debug self => _1;                    // in scope 0 at ui/closures/2229_closure_analysis/migrations/precise_fixed.rs:9:13: 9:22
    let mut _0: ();                      // return place in scope 0 at ui/closures/2229_closure_analysis/migrations/precise_fixed.rs:9:24: 9:24
    let _2: ();                          // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:62
    let mut _3: std::fmt::Arguments<'_>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _4: &[&str];                 // in scope 0 at ui/closures/2229_closure_analysis/migrations/precise_fixed.rs:10:18: 10:32
    let mut _5: &[&str; 2];              // in scope 0 at ui/closures/2229_closure_analysis/migrations/precise_fixed.rs:10:18: 10:32
    let _6: &[&str; 2];                  // in scope 0 at ui/closures/2229_closure_analysis/migrations/precise_fixed.rs:10:18: 10:32
    let mut _7: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _8: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let _9: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let _10: [core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _11: core::fmt::ArgumentV1<'_>; // in scope 0 at ui/closures/2229_closure_analysis/migrations/precise_fixed.rs:10:34: 10:40
    let mut _12: &i32;                   // in scope 0 at ui/closures/2229_closure_analysis/migrations/precise_fixed.rs:10:34: 10:40
    let _13: &i32;                       // in scope 0 at ui/closures/2229_closure_analysis/migrations/precise_fixed.rs:10:34: 10:40
    let mut _14: &[&str; 2];             // in scope 0 at ui/closures/2229_closure_analysis/migrations/precise_fixed.rs:10:18: 10:32

    bb0: {
        _14 = const _;                   // scope 0 at ui/closures/2229_closure_analysis/migrations/precise_fixed.rs:10:18: 10:32
                                         // mir::Constant
                                         // + span: ui/closures/2229_closure_analysis/migrations/precise_fixed.rs:10:18: 10:32
                                         // + literal: Const { ty: &[&str; 2], val: Unevaluated(<Foo as Drop>::drop, [], Some(promoted[0])) }
        _6 = _14;                        // scope 0 at ui/closures/2229_closure_analysis/migrations/precise_fixed.rs:10:18: 10:32
        _5 = _6;                         // scope 0 at ui/closures/2229_closure_analysis/migrations/precise_fixed.rs:10:18: 10:32
        _4 = move _5 as &[&str] (Pointer(Unsize)); // scope 0 at ui/closures/2229_closure_analysis/migrations/precise_fixed.rs:10:18: 10:32
        _13 = &((*_1).0: i32);           // scope 0 at ui/closures/2229_closure_analysis/migrations/precise_fixed.rs:10:34: 10:40
        _12 = _13;                       // scope 0 at ui/closures/2229_closure_analysis/migrations/precise_fixed.rs:10:34: 10:40
        _11 = core::fmt::ArgumentV1::<'_>::new_debug::<i32>(move _12) -> bb1; // scope 0 at ui/closures/2229_closure_analysis/migrations/precise_fixed.rs:10:34: 10:40
                                         // mir::Constant
                                         // + span: ui/closures/2229_closure_analysis/migrations/precise_fixed.rs:10:34: 10:40
                                         // + user_ty: UserType(1)
                                         // + literal: Const { ty: for<'b> fn(&'b i32) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_debug::<i32>}, val: Value(<ZST>) }
    }

    bb1: {
        _10 = [move _11];                // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _9 = &_10;                       // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _8 = _9;                         // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _7 = move _8 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _3 = Arguments::<'_>::new_v1(move _4, move _7) -> bb2; // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb2: {
        _2 = _print(move _3) -> bb3;     // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:62
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:27
                                         // + literal: Const { ty: for<'a> fn(Arguments<'a>) {_print}, val: Value(<ZST>) }
    }

    bb3: {
        return;                          // scope 0 at ui/closures/2229_closure_analysis/migrations/precise_fixed.rs:11:6: 11:6
    }
}

promoted[0] in <impl at ui/closures/2229_closure_analysis/migrations/precise_fixed.rs:8:1: 8:18>::drop: &[&str; 2] = {
    let mut _0: &[&str; 2];              // return place in scope 0 at ui/closures/2229_closure_analysis/migrations/precise_fixed.rs:10:18: 10:32
    let mut _1: [&str; 2];               // in scope 0 at ui/closures/2229_closure_analysis/migrations/precise_fixed.rs:10:18: 10:32

    bb0: {
        _1 = [const "", const " dropped\n"]; // scope 0 at ui/closures/2229_closure_analysis/migrations/precise_fixed.rs:10:18: 10:32
                                         // mir::Constant
                                         // + span: ui/closures/2229_closure_analysis/migrations/precise_fixed.rs:10:18: 10:32
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
                                         // mir::Constant
                                         // + span: ui/closures/2229_closure_analysis/migrations/precise_fixed.rs:10:18: 10:32
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at ui/closures/2229_closure_analysis/migrations/precise_fixed.rs:10:18: 10:32
        return;                          // scope 0 at ui/closures/2229_closure_analysis/migrations/precise_fixed.rs:10:18: 10:32
    }
}

fn test_precise_analysis_drop_paths_not_captured_by_move() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/closures/2229_closure_analysis/migrations/precise_fixed.rs:17:60: 17:60
    let _1: ConstainsDropField;          // in scope 0 at ui/closures/2229_closure_analysis/migrations/precise_fixed.rs:18:9: 18:10
    let mut _2: Foo;                     // in scope 0 at ui/closures/2229_closure_analysis/migrations/precise_fixed.rs:18:32: 18:39
    let mut _3: Foo;                     // in scope 0 at ui/closures/2229_closure_analysis/migrations/precise_fixed.rs:18:41: 18:48
    let _5: ();                          // in scope 0 at ui/closures/2229_closure_analysis/migrations/precise_fixed.rs:30:5: 30:8
    let mut _6: [closure@ui/closures/2229_closure_analysis/migrations/precise_fixed.rs:20:13: 20:15]; // in scope 0 at ui/closures/2229_closure_analysis/migrations/precise_fixed.rs:30:5: 30:6
    let mut _7: ();                      // in scope 0 at ui/closures/2229_closure_analysis/migrations/precise_fixed.rs:30:5: 30:8
    scope 1 {
        debug t => _1;                   // in scope 1 at ui/closures/2229_closure_analysis/migrations/precise_fixed.rs:18:9: 18:10
        let _4: [closure@ui/closures/2229_closure_analysis/migrations/precise_fixed.rs:20:13: 20:15]; // in scope 1 at ui/closures/2229_closure_analysis/migrations/precise_fixed.rs:20:9: 20:10
        scope 2 {
            debug c => _4;               // in scope 2 at ui/closures/2229_closure_analysis/migrations/precise_fixed.rs:20:9: 20:10
        }
    }

    bb0: {
        _2 = const Foo(10_i32);          // scope 0 at ui/closures/2229_closure_analysis/migrations/precise_fixed.rs:18:32: 18:39
                                         // mir::Constant
                                         // + span: ui/closures/2229_closure_analysis/migrations/precise_fixed.rs:18:32: 18:39
                                         // + literal: Const { ty: Foo, val: Value(Scalar(0x0000000a)) }
        _3 = const Foo(20_i32);          // scope 0 at ui/closures/2229_closure_analysis/migrations/precise_fixed.rs:18:41: 18:48
                                         // mir::Constant
                                         // + span: ui/closures/2229_closure_analysis/migrations/precise_fixed.rs:18:41: 18:48
                                         // + literal: Const { ty: Foo, val: Value(Scalar(0x00000014)) }
        _1 = ConstainsDropField(move _2, move _3); // scope 0 at ui/closures/2229_closure_analysis/migrations/precise_fixed.rs:18:13: 18:49
        _4 = [closure@ui/closures/2229_closure_analysis/migrations/precise_fixed.rs:20:13: 20:15] { t: move _1 }; // scope 1 at ui/closures/2229_closure_analysis/migrations/precise_fixed.rs:20:13: 28:6
                                         // closure
                                         // + def_id: DefId(0:10 ~ precise_fixed[7fad]::test_precise_analysis_drop_paths_not_captured_by_move::{closure#0})
                                         // + substs: [
                                         //     i32,
                                         //     extern "rust-call" fn(()),
                                         //     (ConstainsDropField,),
                                         // ]
        _6 = move _4;                    // scope 2 at ui/closures/2229_closure_analysis/migrations/precise_fixed.rs:30:5: 30:6
        _5 = <[closure@ui/closures/2229_closure_analysis/migrations/precise_fixed.rs:20:13: 20:15] as FnOnce<()>>::call_once(move _6, move _7) -> bb1; // scope 2 at ui/closures/2229_closure_analysis/migrations/precise_fixed.rs:30:5: 30:8
                                         // mir::Constant
                                         // + span: ui/closures/2229_closure_analysis/migrations/precise_fixed.rs:30:5: 30:6
                                         // + literal: Const { ty: extern "rust-call" fn([closure@ui/closures/2229_closure_analysis/migrations/precise_fixed.rs:20:13: 20:15], ()) -> <[closure@ui/closures/2229_closure_analysis/migrations/precise_fixed.rs:20:13: 20:15] as FnOnce<()>>::Output {<[closure@ui/closures/2229_closure_analysis/migrations/precise_fixed.rs:20:13: 20:15] as FnOnce<()>>::call_once}, val: Value(<ZST>) }
    }

    bb1: {
        return;                          // scope 0 at ui/closures/2229_closure_analysis/migrations/precise_fixed.rs:31:2: 31:2
    }
}

fn test_precise_analysis_drop_paths_not_captured_by_move::{closure#0}(_1: [closure@ui/closures/2229_closure_analysis/migrations/precise_fixed.rs:20:13: 20:15]) -> () {
    debug t => (_1.0: ConstainsDropField); // in scope 0 at ui/closures/2229_closure_analysis/migrations/precise_fixed.rs:18:9: 18:10
    let mut _0: ();                      // return place in scope 0 at ui/closures/2229_closure_analysis/migrations/precise_fixed.rs:20:16: 20:16
    scope 1 {
        let _2: Foo;                     // in scope 1 at ui/closures/2229_closure_analysis/migrations/precise_fixed.rs:25:13: 25:15
        scope 2 {
            debug _t => _2;              // in scope 2 at ui/closures/2229_closure_analysis/migrations/precise_fixed.rs:25:13: 25:15
            let _3: &Foo;                // in scope 2 at ui/closures/2229_closure_analysis/migrations/precise_fixed.rs:27:13: 27:15
            scope 3 {
                debug _t => _3;          // in scope 3 at ui/closures/2229_closure_analysis/migrations/precise_fixed.rs:27:13: 27:15
            }
        }
    }

    bb0: {
        _2 = move ((_1.0: ConstainsDropField).0: Foo); // scope 1 at ui/closures/2229_closure_analysis/migrations/precise_fixed.rs:25:18: 25:21
        _3 = &((_1.0: ConstainsDropField).1: Foo); // scope 2 at ui/closures/2229_closure_analysis/migrations/precise_fixed.rs:27:18: 27:22
        drop(_2) -> [return: bb1, unwind: bb4]; // scope 1 at ui/closures/2229_closure_analysis/migrations/precise_fixed.rs:28:5: 28:6
    }

    bb1: {
        drop(((_1.0: ConstainsDropField).1: Foo)) -> bb3; // scope 0 at ui/closures/2229_closure_analysis/migrations/precise_fixed.rs:28:5: 28:6
    }

    bb2 (cleanup): {
        resume;                          // scope 0 at ui/closures/2229_closure_analysis/migrations/precise_fixed.rs:20:13: 28:6
    }

    bb3: {
        return;                          // scope 0 at ui/closures/2229_closure_analysis/migrations/precise_fixed.rs:28:6: 28:6
    }

    bb4 (cleanup): {
        drop(((_1.0: ConstainsDropField).1: Foo)) -> bb2; // scope 0 at ui/closures/2229_closure_analysis/migrations/precise_fixed.rs:28:5: 28:6
    }
}

fn <impl at ui/closures/2229_closure_analysis/migrations/precise_fixed.rs:35:1: 35:16>::drop(_1: &mut S) -> () {
    debug self => _1;                    // in scope 0 at ui/closures/2229_closure_analysis/migrations/precise_fixed.rs:36:13: 36:22
    let mut _0: ();                      // return place in scope 0 at ui/closures/2229_closure_analysis/migrations/precise_fixed.rs:36:24: 36:24

    bb0: {
        return;                          // scope 0 at ui/closures/2229_closure_analysis/migrations/precise_fixed.rs:36:26: 36:26
    }
}

fn test_precise_analysis_long_path_missing() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/closures/2229_closure_analysis/migrations/precise_fixed.rs:43:46: 43:46
    let _1: U;                           // in scope 0 at ui/closures/2229_closure_analysis/migrations/precise_fixed.rs:44:9: 44:10
    let _3: ();                          // in scope 0 at ui/closures/2229_closure_analysis/migrations/precise_fixed.rs:59:5: 59:8
    let mut _4: [closure@ui/closures/2229_closure_analysis/migrations/precise_fixed.rs:46:13: 46:15]; // in scope 0 at ui/closures/2229_closure_analysis/migrations/precise_fixed.rs:59:5: 59:6
    let mut _5: ();                      // in scope 0 at ui/closures/2229_closure_analysis/migrations/precise_fixed.rs:59:5: 59:8
    scope 1 {
        debug u => _1;                   // in scope 1 at ui/closures/2229_closure_analysis/migrations/precise_fixed.rs:44:9: 44:10
        let _2: [closure@ui/closures/2229_closure_analysis/migrations/precise_fixed.rs:46:13: 46:15]; // in scope 1 at ui/closures/2229_closure_analysis/migrations/precise_fixed.rs:46:9: 46:10
        scope 2 {
            debug c => _2;               // in scope 2 at ui/closures/2229_closure_analysis/migrations/precise_fixed.rs:46:9: 46:10
        }
    }

    bb0: {
        _3 = <[closure@ui/closures/2229_closure_analysis/migrations/precise_fixed.rs:46:13: 46:15] as FnOnce<()>>::call_once(move _4, move _5) -> bb1; // scope 2 at ui/closures/2229_closure_analysis/migrations/precise_fixed.rs:59:5: 59:8
                                         // mir::Constant
                                         // + span: ui/closures/2229_closure_analysis/migrations/precise_fixed.rs:59:5: 59:6
                                         // + literal: Const { ty: extern "rust-call" fn([closure@ui/closures/2229_closure_analysis/migrations/precise_fixed.rs:46:13: 46:15], ()) -> <[closure@ui/closures/2229_closure_analysis/migrations/precise_fixed.rs:46:13: 46:15] as FnOnce<()>>::Output {<[closure@ui/closures/2229_closure_analysis/migrations/precise_fixed.rs:46:13: 46:15] as FnOnce<()>>::call_once}, val: Value(<ZST>) }
    }

    bb1: {
        return;                          // scope 0 at ui/closures/2229_closure_analysis/migrations/precise_fixed.rs:60:2: 60:2
    }
}

fn test_precise_analysis_long_path_missing::{closure#0}(_1: [closure@ui/closures/2229_closure_analysis/migrations/precise_fixed.rs:46:13: 46:15]) -> () {
    debug u => (_1.0: U);                // in scope 0 at ui/closures/2229_closure_analysis/migrations/precise_fixed.rs:44:9: 44:10
    let mut _0: ();                      // return place in scope 0 at ui/closures/2229_closure_analysis/migrations/precise_fixed.rs:46:16: 46:16
    scope 1 {
        let _2: S;                       // in scope 1 at ui/closures/2229_closure_analysis/migrations/precise_fixed.rs:51:13: 51:15
        scope 2 {
            debug _x => _2;              // in scope 2 at ui/closures/2229_closure_analysis/migrations/precise_fixed.rs:51:13: 51:15
            let _3: S;                   // in scope 2 at ui/closures/2229_closure_analysis/migrations/precise_fixed.rs:53:13: 53:15
            scope 3 {
                debug _x => _3;          // in scope 3 at ui/closures/2229_closure_analysis/migrations/precise_fixed.rs:53:13: 53:15
                let _4: S;               // in scope 3 at ui/closures/2229_closure_analysis/migrations/precise_fixed.rs:55:13: 55:15
                scope 4 {
                    debug _x => _4;      // in scope 4 at ui/closures/2229_closure_analysis/migrations/precise_fixed.rs:55:13: 55:15
                }
            }
        }
    }

    bb0: {
        drop(_4) -> [return: bb1, unwind: bb4]; // scope 3 at ui/closures/2229_closure_analysis/migrations/precise_fixed.rs:57:5: 57:6
    }

    bb1: {
        drop(_3) -> [return: bb2, unwind: bb5]; // scope 2 at ui/closures/2229_closure_analysis/migrations/precise_fixed.rs:57:5: 57:6
    }

    bb2: {
        drop(_2) -> [return: bb3, unwind: bb8]; // scope 1 at ui/closures/2229_closure_analysis/migrations/precise_fixed.rs:57:5: 57:6
    }

    bb3: {
        drop((((_1.0: U).1: T).1: S)) -> bb7; // scope 0 at ui/closures/2229_closure_analysis/migrations/precise_fixed.rs:57:5: 57:6
    }

    bb4 (cleanup): {
        drop(_3) -> bb5;                 // scope 2 at ui/closures/2229_closure_analysis/migrations/precise_fixed.rs:57:5: 57:6
    }

    bb5 (cleanup): {
        drop(_2) -> bb8;                 // scope 1 at ui/closures/2229_closure_analysis/migrations/precise_fixed.rs:57:5: 57:6
    }

    bb6 (cleanup): {
        resume;                          // scope 0 at ui/closures/2229_closure_analysis/migrations/precise_fixed.rs:46:13: 57:6
    }

    bb7: {
        return;                          // scope 0 at ui/closures/2229_closure_analysis/migrations/precise_fixed.rs:57:6: 57:6
    }

    bb8 (cleanup): {
        drop((((_1.0: U).1: T).1: S)) -> bb6; // scope 0 at ui/closures/2229_closure_analysis/migrations/precise_fixed.rs:57:5: 57:6
    }
}

fn main() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/closures/2229_closure_analysis/migrations/precise_fixed.rs:66:11: 66:11
    let _1: ();                          // in scope 0 at ui/closures/2229_closure_analysis/migrations/precise_fixed.rs:67:5: 67:60
    let _2: ();                          // in scope 0 at ui/closures/2229_closure_analysis/migrations/precise_fixed.rs:68:5: 68:46

    bb0: {
        _1 = test_precise_analysis_drop_paths_not_captured_by_move() -> bb1; // scope 0 at ui/closures/2229_closure_analysis/migrations/precise_fixed.rs:67:5: 67:60
                                         // mir::Constant
                                         // + span: ui/closures/2229_closure_analysis/migrations/precise_fixed.rs:67:5: 67:58
                                         // + literal: Const { ty: fn() {test_precise_analysis_drop_paths_not_captured_by_move}, val: Value(<ZST>) }
    }

    bb1: {
        _2 = test_precise_analysis_long_path_missing() -> bb2; // scope 0 at ui/closures/2229_closure_analysis/migrations/precise_fixed.rs:68:5: 68:46
                                         // mir::Constant
                                         // + span: ui/closures/2229_closure_analysis/migrations/precise_fixed.rs:68:5: 68:44
                                         // + literal: Const { ty: fn() {test_precise_analysis_long_path_missing}, val: Value(<ZST>) }
    }

    bb2: {
        return;                          // scope 0 at ui/closures/2229_closure_analysis/migrations/precise_fixed.rs:69:2: 69:2
    }
}

fn Foo(_1: i32) -> Foo {
    let mut _0: Foo;                     // return place in scope 0 at ui/closures/2229_closure_analysis/migrations/precise_fixed.rs:7:1: 7:11

    bb0: {
        _0 = Foo(move _1);               // scope 0 at ui/closures/2229_closure_analysis/migrations/precise_fixed.rs:7:1: 7:11
        return;                          // scope 0 at ui/closures/2229_closure_analysis/migrations/precise_fixed.rs:7:1: 7:11
    }
}

// MIR FOR CTFE
fn Foo(_1: i32) -> Foo {
    let mut _0: Foo;                     // return place in scope 0 at ui/closures/2229_closure_analysis/migrations/precise_fixed.rs:7:1: 7:11

    bb0: {
        _0 = Foo(move _1);               // scope 0 at ui/closures/2229_closure_analysis/migrations/precise_fixed.rs:7:1: 7:11
        return;                          // scope 0 at ui/closures/2229_closure_analysis/migrations/precise_fixed.rs:7:1: 7:11
    }
}

fn ConstainsDropField(_1: Foo, _2: Foo) -> ConstainsDropField {
    let mut _0: ConstainsDropField;      // return place in scope 0 at ui/closures/2229_closure_analysis/migrations/precise_fixed.rs:14:1: 14:26

    bb0: {
        _0 = ConstainsDropField(move _1, move _2); // scope 0 at ui/closures/2229_closure_analysis/migrations/precise_fixed.rs:14:1: 14:26
        return;                          // scope 0 at ui/closures/2229_closure_analysis/migrations/precise_fixed.rs:14:1: 14:26
    }
}

// MIR FOR CTFE
fn ConstainsDropField(_1: Foo, _2: Foo) -> ConstainsDropField {
    let mut _0: ConstainsDropField;      // return place in scope 0 at ui/closures/2229_closure_analysis/migrations/precise_fixed.rs:14:1: 14:26

    bb0: {
        _0 = ConstainsDropField(move _1, move _2); // scope 0 at ui/closures/2229_closure_analysis/migrations/precise_fixed.rs:14:1: 14:26
        return;                          // scope 0 at ui/closures/2229_closure_analysis/migrations/precise_fixed.rs:14:1: 14:26
    }
}

fn T(_1: S, _2: S) -> T {
    let mut _0: T;                       // return place in scope 0 at ui/closures/2229_closure_analysis/migrations/precise_fixed.rs:39:1: 39:9

    bb0: {
        _0 = T(move _1, move _2);        // scope 0 at ui/closures/2229_closure_analysis/migrations/precise_fixed.rs:39:1: 39:9
        return;                          // scope 0 at ui/closures/2229_closure_analysis/migrations/precise_fixed.rs:39:1: 39:9
    }
}

// MIR FOR CTFE
fn T(_1: S, _2: S) -> T {
    let mut _0: T;                       // return place in scope 0 at ui/closures/2229_closure_analysis/migrations/precise_fixed.rs:39:1: 39:9

    bb0: {
        _0 = T(move _1, move _2);        // scope 0 at ui/closures/2229_closure_analysis/migrations/precise_fixed.rs:39:1: 39:9
        return;                          // scope 0 at ui/closures/2229_closure_analysis/migrations/precise_fixed.rs:39:1: 39:9
    }
}

fn U(_1: T, _2: T) -> U {
    let mut _0: U;                       // return place in scope 0 at ui/closures/2229_closure_analysis/migrations/precise_fixed.rs:40:1: 40:9

    bb0: {
        _0 = U(move _1, move _2);        // scope 0 at ui/closures/2229_closure_analysis/migrations/precise_fixed.rs:40:1: 40:9
        return;                          // scope 0 at ui/closures/2229_closure_analysis/migrations/precise_fixed.rs:40:1: 40:9
    }
}

// MIR FOR CTFE
fn U(_1: T, _2: T) -> U {
    let mut _0: U;                       // return place in scope 0 at ui/closures/2229_closure_analysis/migrations/precise_fixed.rs:40:1: 40:9

    bb0: {
        _0 = U(move _1, move _2);        // scope 0 at ui/closures/2229_closure_analysis/migrations/precise_fixed.rs:40:1: 40:9
        return;                          // scope 0 at ui/closures/2229_closure_analysis/migrations/precise_fixed.rs:40:1: 40:9
    }
}
