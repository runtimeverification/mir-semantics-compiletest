// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
fn <impl at ui/closures/2229_closure_analysis/migrations/precise_no_migrations.rs:5:10: 5:15>::fmt(_1: &Foo, _2: &mut Formatter<'_>) -> Result<(), std::fmt::Error> {
    debug self => _1;                    // in scope 0 at ui/closures/2229_closure_analysis/migrations/precise_no_migrations.rs:5:10: 5:15
    debug f => _2;                       // in scope 0 at ui/closures/2229_closure_analysis/migrations/precise_no_migrations.rs:5:10: 5:15
    let mut _0: std::result::Result<(), std::fmt::Error>; // return place in scope 0 at ui/closures/2229_closure_analysis/migrations/precise_no_migrations.rs:5:10: 5:15
    let mut _3: &mut std::fmt::Formatter<'_>; // in scope 0 at ui/closures/2229_closure_analysis/migrations/precise_no_migrations.rs:5:10: 5:15
    let mut _4: &str;                    // in scope 0 at ui/closures/2229_closure_analysis/migrations/precise_no_migrations.rs:5:10: 5:15
    let _5: &str;                        // in scope 0 at ui/closures/2229_closure_analysis/migrations/precise_no_migrations.rs:5:10: 5:15
    let mut _6: &dyn std::fmt::Debug;    // in scope 0 at ui/closures/2229_closure_analysis/migrations/precise_no_migrations.rs:6:12: 6:15
    let mut _7: &&i32;                   // in scope 0 at ui/closures/2229_closure_analysis/migrations/precise_no_migrations.rs:6:12: 6:15
    let _8: &&i32;                       // in scope 0 at ui/closures/2229_closure_analysis/migrations/precise_no_migrations.rs:6:12: 6:15
    let _9: &i32;                        // in scope 0 at ui/closures/2229_closure_analysis/migrations/precise_no_migrations.rs:6:12: 6:15

    bb0: {
        _3 = &mut (*_2);                 // scope 0 at ui/closures/2229_closure_analysis/migrations/precise_no_migrations.rs:5:10: 5:15
        _5 = const "Foo";                // scope 0 at ui/closures/2229_closure_analysis/migrations/precise_no_migrations.rs:5:10: 5:15
                                         // mir::Constant
                                         // + span: ui/closures/2229_closure_analysis/migrations/precise_no_migrations.rs:5:10: 5:15
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _4 = _5;                         // scope 0 at ui/closures/2229_closure_analysis/migrations/precise_no_migrations.rs:5:10: 5:15
        _9 = &((*_1).0: i32);            // scope 0 at ui/closures/2229_closure_analysis/migrations/precise_no_migrations.rs:6:12: 6:15
        _8 = &_9;                        // scope 0 at ui/closures/2229_closure_analysis/migrations/precise_no_migrations.rs:6:12: 6:15
        _7 = _8;                         // scope 0 at ui/closures/2229_closure_analysis/migrations/precise_no_migrations.rs:6:12: 6:15
        _6 = move _7 as &dyn std::fmt::Debug (Pointer(Unsize)); // scope 0 at ui/closures/2229_closure_analysis/migrations/precise_no_migrations.rs:6:12: 6:15
        _0 = Formatter::<'_>::debug_tuple_field1_finish(move _3, move _4, move _6) -> bb1; // scope 0 at ui/closures/2229_closure_analysis/migrations/precise_no_migrations.rs:5:10: 5:15
                                         // mir::Constant
                                         // + span: ui/closures/2229_closure_analysis/migrations/precise_no_migrations.rs:5:10: 5:15
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: for<'b, 'a, 'c> fn(&'b mut Formatter<'_>, &'a str, &'c (dyn Debug + 'c)) -> Result<(), std::fmt::Error> {Formatter::<'_>::debug_tuple_field1_finish}, val: Value(<ZST>) }
    }

    bb1: {
        return;                          // scope 0 at ui/closures/2229_closure_analysis/migrations/precise_no_migrations.rs:5:15: 5:15
    }
}

fn <impl at ui/closures/2229_closure_analysis/migrations/precise_no_migrations.rs:7:1: 7:18>::drop(_1: &mut Foo) -> () {
    debug self => _1;                    // in scope 0 at ui/closures/2229_closure_analysis/migrations/precise_no_migrations.rs:8:13: 8:22
    let mut _0: ();                      // return place in scope 0 at ui/closures/2229_closure_analysis/migrations/precise_no_migrations.rs:8:24: 8:24
    let _2: ();                          // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:62
    let mut _3: std::fmt::Arguments<'_>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _4: &[&str];                 // in scope 0 at ui/closures/2229_closure_analysis/migrations/precise_no_migrations.rs:9:18: 9:32
    let mut _5: &[&str; 2];              // in scope 0 at ui/closures/2229_closure_analysis/migrations/precise_no_migrations.rs:9:18: 9:32
    let _6: &[&str; 2];                  // in scope 0 at ui/closures/2229_closure_analysis/migrations/precise_no_migrations.rs:9:18: 9:32
    let mut _7: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _8: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let _9: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let _10: [core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _11: core::fmt::ArgumentV1<'_>; // in scope 0 at ui/closures/2229_closure_analysis/migrations/precise_no_migrations.rs:9:34: 9:40
    let mut _12: &i32;                   // in scope 0 at ui/closures/2229_closure_analysis/migrations/precise_no_migrations.rs:9:34: 9:40
    let _13: &i32;                       // in scope 0 at ui/closures/2229_closure_analysis/migrations/precise_no_migrations.rs:9:34: 9:40
    let mut _14: &[&str; 2];             // in scope 0 at ui/closures/2229_closure_analysis/migrations/precise_no_migrations.rs:9:18: 9:32

    bb0: {
        _14 = const _;                   // scope 0 at ui/closures/2229_closure_analysis/migrations/precise_no_migrations.rs:9:18: 9:32
                                         // mir::Constant
                                         // + span: ui/closures/2229_closure_analysis/migrations/precise_no_migrations.rs:9:18: 9:32
                                         // + literal: Const { ty: &[&str; 2], val: Unevaluated(<Foo as Drop>::drop, [], Some(promoted[0])) }
        _6 = _14;                        // scope 0 at ui/closures/2229_closure_analysis/migrations/precise_no_migrations.rs:9:18: 9:32
        _5 = _6;                         // scope 0 at ui/closures/2229_closure_analysis/migrations/precise_no_migrations.rs:9:18: 9:32
        _4 = move _5 as &[&str] (Pointer(Unsize)); // scope 0 at ui/closures/2229_closure_analysis/migrations/precise_no_migrations.rs:9:18: 9:32
        _13 = &((*_1).0: i32);           // scope 0 at ui/closures/2229_closure_analysis/migrations/precise_no_migrations.rs:9:34: 9:40
        _12 = _13;                       // scope 0 at ui/closures/2229_closure_analysis/migrations/precise_no_migrations.rs:9:34: 9:40
        _11 = core::fmt::ArgumentV1::<'_>::new_debug::<i32>(move _12) -> bb1; // scope 0 at ui/closures/2229_closure_analysis/migrations/precise_no_migrations.rs:9:34: 9:40
                                         // mir::Constant
                                         // + span: ui/closures/2229_closure_analysis/migrations/precise_no_migrations.rs:9:34: 9:40
                                         // + user_ty: UserType(1)
                                         // + literal: Const { ty: for<'b> fn(&'b i32) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_debug::<i32>}, val: Value(<ZST>) }
    }

    bb1: {
        _10 = [move _11];                // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _9 = &_10;                       // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _8 = _9;                         // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _7 = move _8 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _3 = Arguments::<'_>::new_v1(move _4, move _7) -> bb2; // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb2: {
        _2 = _print(move _3) -> bb3;     // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:62
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:27
                                         // + literal: Const { ty: for<'a> fn(Arguments<'a>) {_print}, val: Value(<ZST>) }
    }

    bb3: {
        return;                          // scope 0 at ui/closures/2229_closure_analysis/migrations/precise_no_migrations.rs:10:6: 10:6
    }
}

promoted[0] in <impl at ui/closures/2229_closure_analysis/migrations/precise_no_migrations.rs:7:1: 7:18>::drop: &[&str; 2] = {
    let mut _0: &[&str; 2];              // return place in scope 0 at ui/closures/2229_closure_analysis/migrations/precise_no_migrations.rs:9:18: 9:32
    let mut _1: [&str; 2];               // in scope 0 at ui/closures/2229_closure_analysis/migrations/precise_no_migrations.rs:9:18: 9:32

    bb0: {
        _1 = [const "", const " dropped\n"]; // scope 0 at ui/closures/2229_closure_analysis/migrations/precise_no_migrations.rs:9:18: 9:32
                                         // mir::Constant
                                         // + span: ui/closures/2229_closure_analysis/migrations/precise_no_migrations.rs:9:18: 9:32
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
                                         // mir::Constant
                                         // + span: ui/closures/2229_closure_analysis/migrations/precise_no_migrations.rs:9:18: 9:32
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at ui/closures/2229_closure_analysis/migrations/precise_no_migrations.rs:9:18: 9:32
        return;                          // scope 0 at ui/closures/2229_closure_analysis/migrations/precise_no_migrations.rs:9:18: 9:32
    }
}

fn test_precise_analysis_simple_1() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/closures/2229_closure_analysis/migrations/precise_no_migrations.rs:17:37: 17:37
    let _1: (Foo, Foo, Foo);             // in scope 0 at ui/closures/2229_closure_analysis/migrations/precise_no_migrations.rs:18:9: 18:10
    let mut _2: Foo;                     // in scope 0 at ui/closures/2229_closure_analysis/migrations/precise_no_migrations.rs:18:14: 18:21
    let mut _3: Foo;                     // in scope 0 at ui/closures/2229_closure_analysis/migrations/precise_no_migrations.rs:18:23: 18:30
    let mut _4: Foo;                     // in scope 0 at ui/closures/2229_closure_analysis/migrations/precise_no_migrations.rs:18:32: 18:39
    let _6: ();                          // in scope 0 at ui/closures/2229_closure_analysis/migrations/precise_no_migrations.rs:26:5: 26:8
    let mut _7: [closure@ui/closures/2229_closure_analysis/migrations/precise_no_migrations.rs:20:13: 20:15]; // in scope 0 at ui/closures/2229_closure_analysis/migrations/precise_no_migrations.rs:26:5: 26:6
    let mut _8: ();                      // in scope 0 at ui/closures/2229_closure_analysis/migrations/precise_no_migrations.rs:26:5: 26:8
    scope 1 {
        debug t => _1;                   // in scope 1 at ui/closures/2229_closure_analysis/migrations/precise_no_migrations.rs:18:9: 18:10
        let _5: [closure@ui/closures/2229_closure_analysis/migrations/precise_no_migrations.rs:20:13: 20:15]; // in scope 1 at ui/closures/2229_closure_analysis/migrations/precise_no_migrations.rs:20:9: 20:10
        scope 2 {
            debug c => _5;               // in scope 2 at ui/closures/2229_closure_analysis/migrations/precise_no_migrations.rs:20:9: 20:10
        }
    }

    bb0: {
        _2 = const Foo(10_i32);          // scope 0 at ui/closures/2229_closure_analysis/migrations/precise_no_migrations.rs:18:14: 18:21
                                         // mir::Constant
                                         // + span: ui/closures/2229_closure_analysis/migrations/precise_no_migrations.rs:18:14: 18:21
                                         // + literal: Const { ty: Foo, val: Value(Scalar(0x0000000a)) }
        _3 = const Foo(20_i32);          // scope 0 at ui/closures/2229_closure_analysis/migrations/precise_no_migrations.rs:18:23: 18:30
                                         // mir::Constant
                                         // + span: ui/closures/2229_closure_analysis/migrations/precise_no_migrations.rs:18:23: 18:30
                                         // + literal: Const { ty: Foo, val: Value(Scalar(0x00000014)) }
        _4 = const Foo(30_i32);          // scope 0 at ui/closures/2229_closure_analysis/migrations/precise_no_migrations.rs:18:32: 18:39
                                         // mir::Constant
                                         // + span: ui/closures/2229_closure_analysis/migrations/precise_no_migrations.rs:18:32: 18:39
                                         // + literal: Const { ty: Foo, val: Value(Scalar(0x0000001e)) }
        _1 = (move _2, move _3, move _4); // scope 0 at ui/closures/2229_closure_analysis/migrations/precise_no_migrations.rs:18:13: 18:40
        _5 = [closure@ui/closures/2229_closure_analysis/migrations/precise_no_migrations.rs:20:13: 20:15] { t: move _1 }; // scope 1 at ui/closures/2229_closure_analysis/migrations/precise_no_migrations.rs:20:13: 24:6
                                         // closure
                                         // + def_id: DefId(0:10 ~ precise_no_migrations[7525]::test_precise_analysis_simple_1::{closure#0})
                                         // + substs: [
                                         //     i32,
                                         //     extern "rust-call" fn(()),
                                         //     ((Foo, Foo, Foo),),
                                         // ]
        _7 = move _5;                    // scope 2 at ui/closures/2229_closure_analysis/migrations/precise_no_migrations.rs:26:5: 26:6
        _6 = <[closure@ui/closures/2229_closure_analysis/migrations/precise_no_migrations.rs:20:13: 20:15] as FnOnce<()>>::call_once(move _7, move _8) -> bb1; // scope 2 at ui/closures/2229_closure_analysis/migrations/precise_no_migrations.rs:26:5: 26:8
                                         // mir::Constant
                                         // + span: ui/closures/2229_closure_analysis/migrations/precise_no_migrations.rs:26:5: 26:6
                                         // + literal: Const { ty: extern "rust-call" fn([closure@ui/closures/2229_closure_analysis/migrations/precise_no_migrations.rs:20:13: 20:15], ()) -> <[closure@ui/closures/2229_closure_analysis/migrations/precise_no_migrations.rs:20:13: 20:15] as FnOnce<()>>::Output {<[closure@ui/closures/2229_closure_analysis/migrations/precise_no_migrations.rs:20:13: 20:15] as FnOnce<()>>::call_once}, val: Value(<ZST>) }
    }

    bb1: {
        return;                          // scope 0 at ui/closures/2229_closure_analysis/migrations/precise_no_migrations.rs:27:2: 27:2
    }
}

fn test_precise_analysis_simple_1::{closure#0}(_1: [closure@ui/closures/2229_closure_analysis/migrations/precise_no_migrations.rs:20:13: 20:15]) -> () {
    debug t => (_1.0: (Foo, Foo, Foo));  // in scope 0 at ui/closures/2229_closure_analysis/migrations/precise_no_migrations.rs:18:9: 18:10
    let mut _0: ();                      // return place in scope 0 at ui/closures/2229_closure_analysis/migrations/precise_no_migrations.rs:20:16: 20:16
    let _2: Foo;                         // in scope 0 at ui/closures/2229_closure_analysis/migrations/precise_no_migrations.rs:21:13: 21:15
    scope 1 {
        debug _t => _2;                  // in scope 1 at ui/closures/2229_closure_analysis/migrations/precise_no_migrations.rs:21:13: 21:15
        let _3: Foo;                     // in scope 1 at ui/closures/2229_closure_analysis/migrations/precise_no_migrations.rs:22:13: 22:15
        scope 2 {
            debug _t => _3;              // in scope 2 at ui/closures/2229_closure_analysis/migrations/precise_no_migrations.rs:22:13: 22:15
            let _4: Foo;                 // in scope 2 at ui/closures/2229_closure_analysis/migrations/precise_no_migrations.rs:23:13: 23:15
            scope 3 {
                debug _t => _4;          // in scope 3 at ui/closures/2229_closure_analysis/migrations/precise_no_migrations.rs:23:13: 23:15
            }
        }
    }

    bb0: {
        _2 = move ((_1.0: (Foo, Foo, Foo)).0: Foo); // scope 0 at ui/closures/2229_closure_analysis/migrations/precise_no_migrations.rs:21:18: 21:21
        _3 = move ((_1.0: (Foo, Foo, Foo)).1: Foo); // scope 1 at ui/closures/2229_closure_analysis/migrations/precise_no_migrations.rs:22:18: 22:21
        _4 = move ((_1.0: (Foo, Foo, Foo)).2: Foo); // scope 2 at ui/closures/2229_closure_analysis/migrations/precise_no_migrations.rs:23:18: 23:21
        drop(_4) -> [return: bb1, unwind: bb4]; // scope 2 at ui/closures/2229_closure_analysis/migrations/precise_no_migrations.rs:24:5: 24:6
    }

    bb1: {
        drop(_3) -> [return: bb2, unwind: bb5]; // scope 1 at ui/closures/2229_closure_analysis/migrations/precise_no_migrations.rs:24:5: 24:6
    }

    bb2: {
        drop(_2) -> bb3;                 // scope 0 at ui/closures/2229_closure_analysis/migrations/precise_no_migrations.rs:24:5: 24:6
    }

    bb3: {
        return;                          // scope 0 at ui/closures/2229_closure_analysis/migrations/precise_no_migrations.rs:24:6: 24:6
    }

    bb4 (cleanup): {
        drop(_3) -> bb5;                 // scope 1 at ui/closures/2229_closure_analysis/migrations/precise_no_migrations.rs:24:5: 24:6
    }

    bb5 (cleanup): {
        drop(_2) -> bb6;                 // scope 0 at ui/closures/2229_closure_analysis/migrations/precise_no_migrations.rs:24:5: 24:6
    }

    bb6 (cleanup): {
        resume;                          // scope 0 at ui/closures/2229_closure_analysis/migrations/precise_no_migrations.rs:20:13: 24:6
    }
}

fn test_precise_analysis_simple_2() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/closures/2229_closure_analysis/migrations/precise_no_migrations.rs:31:37: 31:37
    let _1: ConstainsDropField;          // in scope 0 at ui/closures/2229_closure_analysis/migrations/precise_no_migrations.rs:32:9: 32:10
    let mut _2: Foo;                     // in scope 0 at ui/closures/2229_closure_analysis/migrations/precise_no_migrations.rs:32:32: 32:39
    let mut _3: Foo;                     // in scope 0 at ui/closures/2229_closure_analysis/migrations/precise_no_migrations.rs:32:41: 32:48
    let _5: ();                          // in scope 0 at ui/closures/2229_closure_analysis/migrations/precise_no_migrations.rs:39:5: 39:8
    let mut _6: [closure@ui/closures/2229_closure_analysis/migrations/precise_no_migrations.rs:34:13: 34:15]; // in scope 0 at ui/closures/2229_closure_analysis/migrations/precise_no_migrations.rs:39:5: 39:6
    let mut _7: ();                      // in scope 0 at ui/closures/2229_closure_analysis/migrations/precise_no_migrations.rs:39:5: 39:8
    scope 1 {
        debug t => _1;                   // in scope 1 at ui/closures/2229_closure_analysis/migrations/precise_no_migrations.rs:32:9: 32:10
        let _4: [closure@ui/closures/2229_closure_analysis/migrations/precise_no_migrations.rs:34:13: 34:15]; // in scope 1 at ui/closures/2229_closure_analysis/migrations/precise_no_migrations.rs:34:9: 34:10
        scope 2 {
            debug c => _4;               // in scope 2 at ui/closures/2229_closure_analysis/migrations/precise_no_migrations.rs:34:9: 34:10
        }
    }

    bb0: {
        _2 = const Foo(10_i32);          // scope 0 at ui/closures/2229_closure_analysis/migrations/precise_no_migrations.rs:32:32: 32:39
                                         // mir::Constant
                                         // + span: ui/closures/2229_closure_analysis/migrations/precise_no_migrations.rs:32:32: 32:39
                                         // + literal: Const { ty: Foo, val: Value(Scalar(0x0000000a)) }
        _3 = const Foo(20_i32);          // scope 0 at ui/closures/2229_closure_analysis/migrations/precise_no_migrations.rs:32:41: 32:48
                                         // mir::Constant
                                         // + span: ui/closures/2229_closure_analysis/migrations/precise_no_migrations.rs:32:41: 32:48
                                         // + literal: Const { ty: Foo, val: Value(Scalar(0x00000014)) }
        _1 = ConstainsDropField(move _2, move _3); // scope 0 at ui/closures/2229_closure_analysis/migrations/precise_no_migrations.rs:32:13: 32:49
        _4 = [closure@ui/closures/2229_closure_analysis/migrations/precise_no_migrations.rs:34:13: 34:15] { t: move _1 }; // scope 1 at ui/closures/2229_closure_analysis/migrations/precise_no_migrations.rs:34:13: 37:6
                                         // closure
                                         // + def_id: DefId(0:12 ~ precise_no_migrations[7525]::test_precise_analysis_simple_2::{closure#0})
                                         // + substs: [
                                         //     i32,
                                         //     extern "rust-call" fn(()),
                                         //     (ConstainsDropField,),
                                         // ]
        _6 = move _4;                    // scope 2 at ui/closures/2229_closure_analysis/migrations/precise_no_migrations.rs:39:5: 39:6
        _5 = <[closure@ui/closures/2229_closure_analysis/migrations/precise_no_migrations.rs:34:13: 34:15] as FnOnce<()>>::call_once(move _6, move _7) -> bb1; // scope 2 at ui/closures/2229_closure_analysis/migrations/precise_no_migrations.rs:39:5: 39:8
                                         // mir::Constant
                                         // + span: ui/closures/2229_closure_analysis/migrations/precise_no_migrations.rs:39:5: 39:6
                                         // + literal: Const { ty: extern "rust-call" fn([closure@ui/closures/2229_closure_analysis/migrations/precise_no_migrations.rs:34:13: 34:15], ()) -> <[closure@ui/closures/2229_closure_analysis/migrations/precise_no_migrations.rs:34:13: 34:15] as FnOnce<()>>::Output {<[closure@ui/closures/2229_closure_analysis/migrations/precise_no_migrations.rs:34:13: 34:15] as FnOnce<()>>::call_once}, val: Value(<ZST>) }
    }

    bb1: {
        return;                          // scope 0 at ui/closures/2229_closure_analysis/migrations/precise_no_migrations.rs:40:2: 40:2
    }
}

fn test_precise_analysis_simple_2::{closure#0}(_1: [closure@ui/closures/2229_closure_analysis/migrations/precise_no_migrations.rs:34:13: 34:15]) -> () {
    debug t => (_1.0: ConstainsDropField); // in scope 0 at ui/closures/2229_closure_analysis/migrations/precise_no_migrations.rs:32:9: 32:10
    let mut _0: ();                      // return place in scope 0 at ui/closures/2229_closure_analysis/migrations/precise_no_migrations.rs:34:16: 34:16
    let _2: Foo;                         // in scope 0 at ui/closures/2229_closure_analysis/migrations/precise_no_migrations.rs:35:13: 35:15
    scope 1 {
        debug _t => _2;                  // in scope 1 at ui/closures/2229_closure_analysis/migrations/precise_no_migrations.rs:35:13: 35:15
        let _3: Foo;                     // in scope 1 at ui/closures/2229_closure_analysis/migrations/precise_no_migrations.rs:36:13: 36:15
        scope 2 {
            debug _t => _3;              // in scope 2 at ui/closures/2229_closure_analysis/migrations/precise_no_migrations.rs:36:13: 36:15
        }
    }

    bb0: {
        _2 = move ((_1.0: ConstainsDropField).0: Foo); // scope 0 at ui/closures/2229_closure_analysis/migrations/precise_no_migrations.rs:35:18: 35:21
        _3 = move ((_1.0: ConstainsDropField).1: Foo); // scope 1 at ui/closures/2229_closure_analysis/migrations/precise_no_migrations.rs:36:18: 36:21
        drop(_3) -> [return: bb1, unwind: bb3]; // scope 1 at ui/closures/2229_closure_analysis/migrations/precise_no_migrations.rs:37:5: 37:6
    }

    bb1: {
        drop(_2) -> bb2;                 // scope 0 at ui/closures/2229_closure_analysis/migrations/precise_no_migrations.rs:37:5: 37:6
    }

    bb2: {
        return;                          // scope 0 at ui/closures/2229_closure_analysis/migrations/precise_no_migrations.rs:37:6: 37:6
    }

    bb3 (cleanup): {
        drop(_2) -> bb4;                 // scope 0 at ui/closures/2229_closure_analysis/migrations/precise_no_migrations.rs:37:5: 37:6
    }

    bb4 (cleanup): {
        resume;                          // scope 0 at ui/closures/2229_closure_analysis/migrations/precise_no_migrations.rs:34:13: 37:6
    }
}

fn <impl at ui/closures/2229_closure_analysis/migrations/precise_no_migrations.rs:42:10: 42:15>::fmt(_1: &ContainsAndImplsDrop, _2: &mut Formatter<'_>) -> Result<(), std::fmt::Error> {
    debug self => _1;                    // in scope 0 at ui/closures/2229_closure_analysis/migrations/precise_no_migrations.rs:42:10: 42:15
    debug f => _2;                       // in scope 0 at ui/closures/2229_closure_analysis/migrations/precise_no_migrations.rs:42:10: 42:15
    let mut _0: std::result::Result<(), std::fmt::Error>; // return place in scope 0 at ui/closures/2229_closure_analysis/migrations/precise_no_migrations.rs:42:10: 42:15
    let mut _3: &mut std::fmt::Formatter<'_>; // in scope 0 at ui/closures/2229_closure_analysis/migrations/precise_no_migrations.rs:42:10: 42:15
    let mut _4: &str;                    // in scope 0 at ui/closures/2229_closure_analysis/migrations/precise_no_migrations.rs:42:10: 42:15
    let _5: &str;                        // in scope 0 at ui/closures/2229_closure_analysis/migrations/precise_no_migrations.rs:42:10: 42:15
    let mut _6: &dyn std::fmt::Debug;    // in scope 0 at ui/closures/2229_closure_analysis/migrations/precise_no_migrations.rs:43:29: 43:32
    let mut _7: &&Foo;                   // in scope 0 at ui/closures/2229_closure_analysis/migrations/precise_no_migrations.rs:43:29: 43:32
    let _8: &&Foo;                       // in scope 0 at ui/closures/2229_closure_analysis/migrations/precise_no_migrations.rs:43:29: 43:32
    let _9: &Foo;                        // in scope 0 at ui/closures/2229_closure_analysis/migrations/precise_no_migrations.rs:43:29: 43:32

    bb0: {
        _3 = &mut (*_2);                 // scope 0 at ui/closures/2229_closure_analysis/migrations/precise_no_migrations.rs:42:10: 42:15
        _5 = const "ContainsAndImplsDrop"; // scope 0 at ui/closures/2229_closure_analysis/migrations/precise_no_migrations.rs:42:10: 42:15
                                         // mir::Constant
                                         // + span: ui/closures/2229_closure_analysis/migrations/precise_no_migrations.rs:42:10: 42:15
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _4 = _5;                         // scope 0 at ui/closures/2229_closure_analysis/migrations/precise_no_migrations.rs:42:10: 42:15
        _9 = &((*_1).0: Foo);            // scope 0 at ui/closures/2229_closure_analysis/migrations/precise_no_migrations.rs:43:29: 43:32
        _8 = &_9;                        // scope 0 at ui/closures/2229_closure_analysis/migrations/precise_no_migrations.rs:43:29: 43:32
        _7 = _8;                         // scope 0 at ui/closures/2229_closure_analysis/migrations/precise_no_migrations.rs:43:29: 43:32
        _6 = move _7 as &dyn std::fmt::Debug (Pointer(Unsize)); // scope 0 at ui/closures/2229_closure_analysis/migrations/precise_no_migrations.rs:43:29: 43:32
        _0 = Formatter::<'_>::debug_tuple_field1_finish(move _3, move _4, move _6) -> bb1; // scope 0 at ui/closures/2229_closure_analysis/migrations/precise_no_migrations.rs:42:10: 42:15
                                         // mir::Constant
                                         // + span: ui/closures/2229_closure_analysis/migrations/precise_no_migrations.rs:42:10: 42:15
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: for<'b, 'a, 'c> fn(&'b mut Formatter<'_>, &'a str, &'c (dyn Debug + 'c)) -> Result<(), std::fmt::Error> {Formatter::<'_>::debug_tuple_field1_finish}, val: Value(<ZST>) }
    }

    bb1: {
        return;                          // scope 0 at ui/closures/2229_closure_analysis/migrations/precise_no_migrations.rs:42:15: 42:15
    }
}

fn <impl at ui/closures/2229_closure_analysis/migrations/precise_no_migrations.rs:44:1: 44:35>::drop(_1: &mut ContainsAndImplsDrop) -> () {
    debug self => _1;                    // in scope 0 at ui/closures/2229_closure_analysis/migrations/precise_no_migrations.rs:45:13: 45:22
    let mut _0: ();                      // return place in scope 0 at ui/closures/2229_closure_analysis/migrations/precise_no_migrations.rs:45:24: 45:24
    let _2: ();                          // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:62
    let mut _3: std::fmt::Arguments<'_>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _4: &[&str];                 // in scope 0 at ui/closures/2229_closure_analysis/migrations/precise_no_migrations.rs:46:18: 46:32
    let mut _5: &[&str; 2];              // in scope 0 at ui/closures/2229_closure_analysis/migrations/precise_no_migrations.rs:46:18: 46:32
    let _6: &[&str; 2];                  // in scope 0 at ui/closures/2229_closure_analysis/migrations/precise_no_migrations.rs:46:18: 46:32
    let mut _7: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _8: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let _9: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let _10: [core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _11: core::fmt::ArgumentV1<'_>; // in scope 0 at ui/closures/2229_closure_analysis/migrations/precise_no_migrations.rs:46:34: 46:40
    let mut _12: &Foo;                   // in scope 0 at ui/closures/2229_closure_analysis/migrations/precise_no_migrations.rs:46:34: 46:40
    let _13: &Foo;                       // in scope 0 at ui/closures/2229_closure_analysis/migrations/precise_no_migrations.rs:46:34: 46:40
    let mut _14: &[&str; 2];             // in scope 0 at ui/closures/2229_closure_analysis/migrations/precise_no_migrations.rs:46:18: 46:32

    bb0: {
        _14 = const _;                   // scope 0 at ui/closures/2229_closure_analysis/migrations/precise_no_migrations.rs:46:18: 46:32
                                         // mir::Constant
                                         // + span: ui/closures/2229_closure_analysis/migrations/precise_no_migrations.rs:46:18: 46:32
                                         // + literal: Const { ty: &[&str; 2], val: Unevaluated(<ContainsAndImplsDrop as Drop>::drop, [], Some(promoted[0])) }
        _6 = _14;                        // scope 0 at ui/closures/2229_closure_analysis/migrations/precise_no_migrations.rs:46:18: 46:32
        _5 = _6;                         // scope 0 at ui/closures/2229_closure_analysis/migrations/precise_no_migrations.rs:46:18: 46:32
        _4 = move _5 as &[&str] (Pointer(Unsize)); // scope 0 at ui/closures/2229_closure_analysis/migrations/precise_no_migrations.rs:46:18: 46:32
        _13 = &((*_1).0: Foo);           // scope 0 at ui/closures/2229_closure_analysis/migrations/precise_no_migrations.rs:46:34: 46:40
        _12 = _13;                       // scope 0 at ui/closures/2229_closure_analysis/migrations/precise_no_migrations.rs:46:34: 46:40
        _11 = core::fmt::ArgumentV1::<'_>::new_debug::<Foo>(move _12) -> bb1; // scope 0 at ui/closures/2229_closure_analysis/migrations/precise_no_migrations.rs:46:34: 46:40
                                         // mir::Constant
                                         // + span: ui/closures/2229_closure_analysis/migrations/precise_no_migrations.rs:46:34: 46:40
                                         // + user_ty: UserType(1)
                                         // + literal: Const { ty: for<'b> fn(&'b Foo) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_debug::<Foo>}, val: Value(<ZST>) }
    }

    bb1: {
        _10 = [move _11];                // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _9 = &_10;                       // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _8 = _9;                         // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _7 = move _8 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _3 = Arguments::<'_>::new_v1(move _4, move _7) -> bb2; // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb2: {
        _2 = _print(move _3) -> bb3;     // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:62
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:27
                                         // + literal: Const { ty: for<'a> fn(Arguments<'a>) {_print}, val: Value(<ZST>) }
    }

    bb3: {
        return;                          // scope 0 at ui/closures/2229_closure_analysis/migrations/precise_no_migrations.rs:47:6: 47:6
    }
}

promoted[0] in <impl at ui/closures/2229_closure_analysis/migrations/precise_no_migrations.rs:44:1: 44:35>::drop: &[&str; 2] = {
    let mut _0: &[&str; 2];              // return place in scope 0 at ui/closures/2229_closure_analysis/migrations/precise_no_migrations.rs:46:18: 46:32
    let mut _1: [&str; 2];               // in scope 0 at ui/closures/2229_closure_analysis/migrations/precise_no_migrations.rs:46:18: 46:32

    bb0: {
        _1 = [const "", const " dropped\n"]; // scope 0 at ui/closures/2229_closure_analysis/migrations/precise_no_migrations.rs:46:18: 46:32
                                         // mir::Constant
                                         // + span: ui/closures/2229_closure_analysis/migrations/precise_no_migrations.rs:46:18: 46:32
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
                                         // mir::Constant
                                         // + span: ui/closures/2229_closure_analysis/migrations/precise_no_migrations.rs:46:18: 46:32
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at ui/closures/2229_closure_analysis/migrations/precise_no_migrations.rs:46:18: 46:32
        return;                          // scope 0 at ui/closures/2229_closure_analysis/migrations/precise_no_migrations.rs:46:18: 46:32
    }
}

fn test_precise_analysis_parent_captured_1() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/closures/2229_closure_analysis/migrations/precise_no_migrations.rs:52:46: 52:46
    let _1: ConstainsDropField;          // in scope 0 at ui/closures/2229_closure_analysis/migrations/precise_no_migrations.rs:53:9: 53:10
    let mut _2: Foo;                     // in scope 0 at ui/closures/2229_closure_analysis/migrations/precise_no_migrations.rs:53:32: 53:39
    let mut _3: Foo;                     // in scope 0 at ui/closures/2229_closure_analysis/migrations/precise_no_migrations.rs:53:41: 53:48
    let _5: ();                          // in scope 0 at ui/closures/2229_closure_analysis/migrations/precise_no_migrations.rs:59:5: 59:8
    let mut _6: [closure@ui/closures/2229_closure_analysis/migrations/precise_no_migrations.rs:55:13: 55:15]; // in scope 0 at ui/closures/2229_closure_analysis/migrations/precise_no_migrations.rs:59:5: 59:6
    let mut _7: ();                      // in scope 0 at ui/closures/2229_closure_analysis/migrations/precise_no_migrations.rs:59:5: 59:8
    scope 1 {
        debug t => _1;                   // in scope 1 at ui/closures/2229_closure_analysis/migrations/precise_no_migrations.rs:53:9: 53:10
        let _4: [closure@ui/closures/2229_closure_analysis/migrations/precise_no_migrations.rs:55:13: 55:15]; // in scope 1 at ui/closures/2229_closure_analysis/migrations/precise_no_migrations.rs:55:9: 55:10
        scope 2 {
            debug c => _4;               // in scope 2 at ui/closures/2229_closure_analysis/migrations/precise_no_migrations.rs:55:9: 55:10
        }
    }

    bb0: {
        _2 = const Foo(10_i32);          // scope 0 at ui/closures/2229_closure_analysis/migrations/precise_no_migrations.rs:53:32: 53:39
                                         // mir::Constant
                                         // + span: ui/closures/2229_closure_analysis/migrations/precise_no_migrations.rs:53:32: 53:39
                                         // + literal: Const { ty: Foo, val: Value(Scalar(0x0000000a)) }
        _3 = const Foo(20_i32);          // scope 0 at ui/closures/2229_closure_analysis/migrations/precise_no_migrations.rs:53:41: 53:48
                                         // mir::Constant
                                         // + span: ui/closures/2229_closure_analysis/migrations/precise_no_migrations.rs:53:41: 53:48
                                         // + literal: Const { ty: Foo, val: Value(Scalar(0x00000014)) }
        _1 = ConstainsDropField(move _2, move _3); // scope 0 at ui/closures/2229_closure_analysis/migrations/precise_no_migrations.rs:53:13: 53:49
        _4 = [closure@ui/closures/2229_closure_analysis/migrations/precise_no_migrations.rs:55:13: 55:15] { t: move _1 }; // scope 1 at ui/closures/2229_closure_analysis/migrations/precise_no_migrations.rs:55:13: 57:6
                                         // closure
                                         // + def_id: DefId(0:16 ~ precise_no_migrations[7525]::test_precise_analysis_parent_captured_1::{closure#0})
                                         // + substs: [
                                         //     i32,
                                         //     extern "rust-call" fn(()),
                                         //     (ConstainsDropField,),
                                         // ]
        _6 = move _4;                    // scope 2 at ui/closures/2229_closure_analysis/migrations/precise_no_migrations.rs:59:5: 59:6
        _5 = <[closure@ui/closures/2229_closure_analysis/migrations/precise_no_migrations.rs:55:13: 55:15] as FnOnce<()>>::call_once(move _6, move _7) -> bb1; // scope 2 at ui/closures/2229_closure_analysis/migrations/precise_no_migrations.rs:59:5: 59:8
                                         // mir::Constant
                                         // + span: ui/closures/2229_closure_analysis/migrations/precise_no_migrations.rs:59:5: 59:6
                                         // + literal: Const { ty: extern "rust-call" fn([closure@ui/closures/2229_closure_analysis/migrations/precise_no_migrations.rs:55:13: 55:15], ()) -> <[closure@ui/closures/2229_closure_analysis/migrations/precise_no_migrations.rs:55:13: 55:15] as FnOnce<()>>::Output {<[closure@ui/closures/2229_closure_analysis/migrations/precise_no_migrations.rs:55:13: 55:15] as FnOnce<()>>::call_once}, val: Value(<ZST>) }
    }

    bb1: {
        return;                          // scope 0 at ui/closures/2229_closure_analysis/migrations/precise_no_migrations.rs:60:2: 60:2
    }
}

fn test_precise_analysis_parent_captured_1::{closure#0}(_1: [closure@ui/closures/2229_closure_analysis/migrations/precise_no_migrations.rs:55:13: 55:15]) -> () {
    debug t => (_1.0: ConstainsDropField); // in scope 0 at ui/closures/2229_closure_analysis/migrations/precise_no_migrations.rs:53:9: 53:10
    let mut _0: ();                      // return place in scope 0 at ui/closures/2229_closure_analysis/migrations/precise_no_migrations.rs:55:16: 55:16
    let _2: ConstainsDropField;          // in scope 0 at ui/closures/2229_closure_analysis/migrations/precise_no_migrations.rs:56:13: 56:15
    scope 1 {
        debug _t => _2;                  // in scope 1 at ui/closures/2229_closure_analysis/migrations/precise_no_migrations.rs:56:13: 56:15
    }

    bb0: {
        _2 = move (_1.0: ConstainsDropField); // scope 0 at ui/closures/2229_closure_analysis/migrations/precise_no_migrations.rs:56:18: 56:19
        drop(_2) -> bb1;                 // scope 0 at ui/closures/2229_closure_analysis/migrations/precise_no_migrations.rs:57:5: 57:6
    }

    bb1: {
        return;                          // scope 0 at ui/closures/2229_closure_analysis/migrations/precise_no_migrations.rs:57:6: 57:6
    }
}

fn test_precise_analysis_parent_captured_2() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/closures/2229_closure_analysis/migrations/precise_no_migrations.rs:64:46: 64:46
    let _1: ContainsAndImplsDrop;        // in scope 0 at ui/closures/2229_closure_analysis/migrations/precise_no_migrations.rs:65:9: 65:10
    let _3: ();                          // in scope 0 at ui/closures/2229_closure_analysis/migrations/precise_no_migrations.rs:71:5: 71:8
    let mut _4: [closure@ui/closures/2229_closure_analysis/migrations/precise_no_migrations.rs:67:13: 67:15]; // in scope 0 at ui/closures/2229_closure_analysis/migrations/precise_no_migrations.rs:71:5: 71:6
    let mut _5: ();                      // in scope 0 at ui/closures/2229_closure_analysis/migrations/precise_no_migrations.rs:71:5: 71:8
    scope 1 {
        debug t => _1;                   // in scope 1 at ui/closures/2229_closure_analysis/migrations/precise_no_migrations.rs:65:9: 65:10
        let _2: [closure@ui/closures/2229_closure_analysis/migrations/precise_no_migrations.rs:67:13: 67:15]; // in scope 1 at ui/closures/2229_closure_analysis/migrations/precise_no_migrations.rs:67:9: 67:10
        scope 2 {
            debug c => _2;               // in scope 2 at ui/closures/2229_closure_analysis/migrations/precise_no_migrations.rs:67:9: 67:10
        }
    }

    bb0: {
        _1 = const ContainsAndImplsDrop(Foo(10_i32)); // scope 0 at ui/closures/2229_closure_analysis/migrations/precise_no_migrations.rs:65:13: 65:42
                                         // mir::Constant
                                         // + span: ui/closures/2229_closure_analysis/migrations/precise_no_migrations.rs:65:13: 65:42
                                         // + literal: Const { ty: ContainsAndImplsDrop, val: Value(Scalar(0x0000000a)) }
        _2 = const {transmute(0x0000000a): [closure@ui/closures/2229_closure_analysis/migrations/precise_no_migrations.rs:67:13: 67:15]}; // scope 1 at ui/closures/2229_closure_analysis/migrations/precise_no_migrations.rs:67:13: 69:6
                                         // mir::Constant
                                         // + span: ui/closures/2229_closure_analysis/migrations/precise_no_migrations.rs:67:13: 69:6
                                         // + literal: Const { ty: [closure@ui/closures/2229_closure_analysis/migrations/precise_no_migrations.rs:67:13: 67:15], val: Value(Scalar(0x0000000a)) }
        _4 = const {transmute(0x0000000a): [closure@ui/closures/2229_closure_analysis/migrations/precise_no_migrations.rs:67:13: 67:15]}; // scope 2 at ui/closures/2229_closure_analysis/migrations/precise_no_migrations.rs:71:5: 71:6
                                         // mir::Constant
                                         // + span: ui/closures/2229_closure_analysis/migrations/precise_no_migrations.rs:71:5: 71:6
                                         // + literal: Const { ty: [closure@ui/closures/2229_closure_analysis/migrations/precise_no_migrations.rs:67:13: 67:15], val: Value(Scalar(0x0000000a)) }
        _3 = <[closure@ui/closures/2229_closure_analysis/migrations/precise_no_migrations.rs:67:13: 67:15] as FnOnce<()>>::call_once(move _4, move _5) -> bb1; // scope 2 at ui/closures/2229_closure_analysis/migrations/precise_no_migrations.rs:71:5: 71:8
                                         // mir::Constant
                                         // + span: ui/closures/2229_closure_analysis/migrations/precise_no_migrations.rs:71:5: 71:6
                                         // + literal: Const { ty: extern "rust-call" fn([closure@ui/closures/2229_closure_analysis/migrations/precise_no_migrations.rs:67:13: 67:15], ()) -> <[closure@ui/closures/2229_closure_analysis/migrations/precise_no_migrations.rs:67:13: 67:15] as FnOnce<()>>::Output {<[closure@ui/closures/2229_closure_analysis/migrations/precise_no_migrations.rs:67:13: 67:15] as FnOnce<()>>::call_once}, val: Value(<ZST>) }
    }

    bb1: {
        return;                          // scope 0 at ui/closures/2229_closure_analysis/migrations/precise_no_migrations.rs:72:2: 72:2
    }
}

fn test_precise_analysis_parent_captured_2::{closure#0}(_1: [closure@ui/closures/2229_closure_analysis/migrations/precise_no_migrations.rs:67:13: 67:15]) -> () {
    debug t => (_1.0: ContainsAndImplsDrop); // in scope 0 at ui/closures/2229_closure_analysis/migrations/precise_no_migrations.rs:65:9: 65:10
    let mut _0: ();                      // return place in scope 0 at ui/closures/2229_closure_analysis/migrations/precise_no_migrations.rs:67:16: 67:16
    let _2: ContainsAndImplsDrop;        // in scope 0 at ui/closures/2229_closure_analysis/migrations/precise_no_migrations.rs:68:13: 68:15
    scope 1 {
        debug _t => _2;                  // in scope 1 at ui/closures/2229_closure_analysis/migrations/precise_no_migrations.rs:68:13: 68:15
    }

    bb0: {
        _2 = move (_1.0: ContainsAndImplsDrop); // scope 0 at ui/closures/2229_closure_analysis/migrations/precise_no_migrations.rs:68:18: 68:19
        drop(_2) -> bb1;                 // scope 0 at ui/closures/2229_closure_analysis/migrations/precise_no_migrations.rs:69:5: 69:6
    }

    bb1: {
        return;                          // scope 0 at ui/closures/2229_closure_analysis/migrations/precise_no_migrations.rs:69:6: 69:6
    }
}

fn <impl at ui/closures/2229_closure_analysis/migrations/precise_no_migrations.rs:75:1: 75:16>::drop(_1: &mut S) -> () {
    debug self => _1;                    // in scope 0 at ui/closures/2229_closure_analysis/migrations/precise_no_migrations.rs:76:13: 76:22
    let mut _0: ();                      // return place in scope 0 at ui/closures/2229_closure_analysis/migrations/precise_no_migrations.rs:76:24: 76:24

    bb0: {
        return;                          // scope 0 at ui/closures/2229_closure_analysis/migrations/precise_no_migrations.rs:76:26: 76:26
    }
}

fn test_precise_analysis_long_path() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/closures/2229_closure_analysis/migrations/precise_no_migrations.rs:83:38: 83:38
    let _1: U;                           // in scope 0 at ui/closures/2229_closure_analysis/migrations/precise_no_migrations.rs:84:9: 84:10
    let _3: ();                          // in scope 0 at ui/closures/2229_closure_analysis/migrations/precise_no_migrations.rs:93:5: 93:8
    let mut _4: [closure@ui/closures/2229_closure_analysis/migrations/precise_no_migrations.rs:86:13: 86:15]; // in scope 0 at ui/closures/2229_closure_analysis/migrations/precise_no_migrations.rs:93:5: 93:6
    let mut _5: ();                      // in scope 0 at ui/closures/2229_closure_analysis/migrations/precise_no_migrations.rs:93:5: 93:8
    scope 1 {
        debug u => _1;                   // in scope 1 at ui/closures/2229_closure_analysis/migrations/precise_no_migrations.rs:84:9: 84:10
        let _2: [closure@ui/closures/2229_closure_analysis/migrations/precise_no_migrations.rs:86:13: 86:15]; // in scope 1 at ui/closures/2229_closure_analysis/migrations/precise_no_migrations.rs:86:9: 86:10
        scope 2 {
            debug c => _2;               // in scope 2 at ui/closures/2229_closure_analysis/migrations/precise_no_migrations.rs:86:9: 86:10
        }
    }

    bb0: {
        _3 = <[closure@ui/closures/2229_closure_analysis/migrations/precise_no_migrations.rs:86:13: 86:15] as FnOnce<()>>::call_once(move _4, move _5) -> bb1; // scope 2 at ui/closures/2229_closure_analysis/migrations/precise_no_migrations.rs:93:5: 93:8
                                         // mir::Constant
                                         // + span: ui/closures/2229_closure_analysis/migrations/precise_no_migrations.rs:93:5: 93:6
                                         // + literal: Const { ty: extern "rust-call" fn([closure@ui/closures/2229_closure_analysis/migrations/precise_no_migrations.rs:86:13: 86:15], ()) -> <[closure@ui/closures/2229_closure_analysis/migrations/precise_no_migrations.rs:86:13: 86:15] as FnOnce<()>>::Output {<[closure@ui/closures/2229_closure_analysis/migrations/precise_no_migrations.rs:86:13: 86:15] as FnOnce<()>>::call_once}, val: Value(<ZST>) }
    }

    bb1: {
        return;                          // scope 0 at ui/closures/2229_closure_analysis/migrations/precise_no_migrations.rs:94:2: 94:2
    }
}

fn test_precise_analysis_long_path::{closure#0}(_1: [closure@ui/closures/2229_closure_analysis/migrations/precise_no_migrations.rs:86:13: 86:15]) -> () {
    debug u => (_1.0: U);                // in scope 0 at ui/closures/2229_closure_analysis/migrations/precise_no_migrations.rs:84:9: 84:10
    let mut _0: ();                      // return place in scope 0 at ui/closures/2229_closure_analysis/migrations/precise_no_migrations.rs:86:16: 86:16
    let _2: S;                           // in scope 0 at ui/closures/2229_closure_analysis/migrations/precise_no_migrations.rs:87:13: 87:15
    scope 1 {
        debug _x => _2;                  // in scope 1 at ui/closures/2229_closure_analysis/migrations/precise_no_migrations.rs:87:13: 87:15
        let _3: S;                       // in scope 1 at ui/closures/2229_closure_analysis/migrations/precise_no_migrations.rs:88:13: 88:15
        scope 2 {
            debug _x => _3;              // in scope 2 at ui/closures/2229_closure_analysis/migrations/precise_no_migrations.rs:88:13: 88:15
            let _4: S;                   // in scope 2 at ui/closures/2229_closure_analysis/migrations/precise_no_migrations.rs:89:13: 89:15
            scope 3 {
                debug _x => _4;          // in scope 3 at ui/closures/2229_closure_analysis/migrations/precise_no_migrations.rs:89:13: 89:15
                let _5: S;               // in scope 3 at ui/closures/2229_closure_analysis/migrations/precise_no_migrations.rs:90:13: 90:15
                scope 4 {
                    debug _x => _5;      // in scope 4 at ui/closures/2229_closure_analysis/migrations/precise_no_migrations.rs:90:13: 90:15
                }
            }
        }
    }

    bb0: {
        drop(_5) -> [return: bb1, unwind: bb5]; // scope 3 at ui/closures/2229_closure_analysis/migrations/precise_no_migrations.rs:91:5: 91:6
    }

    bb1: {
        drop(_4) -> [return: bb2, unwind: bb6]; // scope 2 at ui/closures/2229_closure_analysis/migrations/precise_no_migrations.rs:91:5: 91:6
    }

    bb2: {
        drop(_3) -> [return: bb3, unwind: bb7]; // scope 1 at ui/closures/2229_closure_analysis/migrations/precise_no_migrations.rs:91:5: 91:6
    }

    bb3: {
        drop(_2) -> bb4;                 // scope 0 at ui/closures/2229_closure_analysis/migrations/precise_no_migrations.rs:91:5: 91:6
    }

    bb4: {
        return;                          // scope 0 at ui/closures/2229_closure_analysis/migrations/precise_no_migrations.rs:91:6: 91:6
    }

    bb5 (cleanup): {
        drop(_4) -> bb6;                 // scope 2 at ui/closures/2229_closure_analysis/migrations/precise_no_migrations.rs:91:5: 91:6
    }

    bb6 (cleanup): {
        drop(_3) -> bb7;                 // scope 1 at ui/closures/2229_closure_analysis/migrations/precise_no_migrations.rs:91:5: 91:6
    }

    bb7 (cleanup): {
        drop(_2) -> bb8;                 // scope 0 at ui/closures/2229_closure_analysis/migrations/precise_no_migrations.rs:91:5: 91:6
    }

    bb8 (cleanup): {
        resume;                          // scope 0 at ui/closures/2229_closure_analysis/migrations/precise_no_migrations.rs:86:13: 91:6
    }
}

fn main() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/closures/2229_closure_analysis/migrations/precise_no_migrations.rs:96:11: 96:11
    let _1: ();                          // in scope 0 at ui/closures/2229_closure_analysis/migrations/precise_no_migrations.rs:97:5: 97:37
    let _2: ();                          // in scope 0 at ui/closures/2229_closure_analysis/migrations/precise_no_migrations.rs:98:5: 98:37
    let _3: ();                          // in scope 0 at ui/closures/2229_closure_analysis/migrations/precise_no_migrations.rs:100:5: 100:46
    let _4: ();                          // in scope 0 at ui/closures/2229_closure_analysis/migrations/precise_no_migrations.rs:101:5: 101:46
    let _5: ();                          // in scope 0 at ui/closures/2229_closure_analysis/migrations/precise_no_migrations.rs:103:5: 103:38

    bb0: {
        _1 = test_precise_analysis_simple_1() -> bb1; // scope 0 at ui/closures/2229_closure_analysis/migrations/precise_no_migrations.rs:97:5: 97:37
                                         // mir::Constant
                                         // + span: ui/closures/2229_closure_analysis/migrations/precise_no_migrations.rs:97:5: 97:35
                                         // + literal: Const { ty: fn() {test_precise_analysis_simple_1}, val: Value(<ZST>) }
    }

    bb1: {
        _2 = test_precise_analysis_simple_2() -> bb2; // scope 0 at ui/closures/2229_closure_analysis/migrations/precise_no_migrations.rs:98:5: 98:37
                                         // mir::Constant
                                         // + span: ui/closures/2229_closure_analysis/migrations/precise_no_migrations.rs:98:5: 98:35
                                         // + literal: Const { ty: fn() {test_precise_analysis_simple_2}, val: Value(<ZST>) }
    }

    bb2: {
        _3 = test_precise_analysis_parent_captured_1() -> bb3; // scope 0 at ui/closures/2229_closure_analysis/migrations/precise_no_migrations.rs:100:5: 100:46
                                         // mir::Constant
                                         // + span: ui/closures/2229_closure_analysis/migrations/precise_no_migrations.rs:100:5: 100:44
                                         // + literal: Const { ty: fn() {test_precise_analysis_parent_captured_1}, val: Value(<ZST>) }
    }

    bb3: {
        _4 = test_precise_analysis_parent_captured_2() -> bb4; // scope 0 at ui/closures/2229_closure_analysis/migrations/precise_no_migrations.rs:101:5: 101:46
                                         // mir::Constant
                                         // + span: ui/closures/2229_closure_analysis/migrations/precise_no_migrations.rs:101:5: 101:44
                                         // + literal: Const { ty: fn() {test_precise_analysis_parent_captured_2}, val: Value(<ZST>) }
    }

    bb4: {
        _5 = test_precise_analysis_long_path() -> bb5; // scope 0 at ui/closures/2229_closure_analysis/migrations/precise_no_migrations.rs:103:5: 103:38
                                         // mir::Constant
                                         // + span: ui/closures/2229_closure_analysis/migrations/precise_no_migrations.rs:103:5: 103:36
                                         // + literal: Const { ty: fn() {test_precise_analysis_long_path}, val: Value(<ZST>) }
    }

    bb5: {
        return;                          // scope 0 at ui/closures/2229_closure_analysis/migrations/precise_no_migrations.rs:104:2: 104:2
    }
}

fn Foo(_1: i32) -> Foo {
    let mut _0: Foo;                     // return place in scope 0 at ui/closures/2229_closure_analysis/migrations/precise_no_migrations.rs:6:1: 6:11

    bb0: {
        _0 = Foo(move _1);               // scope 0 at ui/closures/2229_closure_analysis/migrations/precise_no_migrations.rs:6:1: 6:11
        return;                          // scope 0 at ui/closures/2229_closure_analysis/migrations/precise_no_migrations.rs:6:1: 6:11
    }
}

// MIR FOR CTFE
fn Foo(_1: i32) -> Foo {
    let mut _0: Foo;                     // return place in scope 0 at ui/closures/2229_closure_analysis/migrations/precise_no_migrations.rs:6:1: 6:11

    bb0: {
        _0 = Foo(move _1);               // scope 0 at ui/closures/2229_closure_analysis/migrations/precise_no_migrations.rs:6:1: 6:11
        return;                          // scope 0 at ui/closures/2229_closure_analysis/migrations/precise_no_migrations.rs:6:1: 6:11
    }
}

fn ConstainsDropField(_1: Foo, _2: Foo) -> ConstainsDropField {
    let mut _0: ConstainsDropField;      // return place in scope 0 at ui/closures/2229_closure_analysis/migrations/precise_no_migrations.rs:13:1: 13:26

    bb0: {
        _0 = ConstainsDropField(move _1, move _2); // scope 0 at ui/closures/2229_closure_analysis/migrations/precise_no_migrations.rs:13:1: 13:26
        return;                          // scope 0 at ui/closures/2229_closure_analysis/migrations/precise_no_migrations.rs:13:1: 13:26
    }
}

// MIR FOR CTFE
fn ConstainsDropField(_1: Foo, _2: Foo) -> ConstainsDropField {
    let mut _0: ConstainsDropField;      // return place in scope 0 at ui/closures/2229_closure_analysis/migrations/precise_no_migrations.rs:13:1: 13:26

    bb0: {
        _0 = ConstainsDropField(move _1, move _2); // scope 0 at ui/closures/2229_closure_analysis/migrations/precise_no_migrations.rs:13:1: 13:26
        return;                          // scope 0 at ui/closures/2229_closure_analysis/migrations/precise_no_migrations.rs:13:1: 13:26
    }
}

fn ContainsAndImplsDrop(_1: Foo) -> ContainsAndImplsDrop {
    let mut _0: ContainsAndImplsDrop;    // return place in scope 0 at ui/closures/2229_closure_analysis/migrations/precise_no_migrations.rs:43:1: 43:28

    bb0: {
        _0 = ContainsAndImplsDrop(move _1); // scope 0 at ui/closures/2229_closure_analysis/migrations/precise_no_migrations.rs:43:1: 43:28
        return;                          // scope 0 at ui/closures/2229_closure_analysis/migrations/precise_no_migrations.rs:43:1: 43:28
    }
}

// MIR FOR CTFE
fn ContainsAndImplsDrop(_1: Foo) -> ContainsAndImplsDrop {
    let mut _0: ContainsAndImplsDrop;    // return place in scope 0 at ui/closures/2229_closure_analysis/migrations/precise_no_migrations.rs:43:1: 43:28

    bb0: {
        _0 = ContainsAndImplsDrop(move _1); // scope 0 at ui/closures/2229_closure_analysis/migrations/precise_no_migrations.rs:43:1: 43:28
        return;                          // scope 0 at ui/closures/2229_closure_analysis/migrations/precise_no_migrations.rs:43:1: 43:28
    }
}

fn T(_1: S, _2: S) -> T {
    let mut _0: T;                       // return place in scope 0 at ui/closures/2229_closure_analysis/migrations/precise_no_migrations.rs:79:1: 79:9

    bb0: {
        _0 = T(move _1, move _2);        // scope 0 at ui/closures/2229_closure_analysis/migrations/precise_no_migrations.rs:79:1: 79:9
        return;                          // scope 0 at ui/closures/2229_closure_analysis/migrations/precise_no_migrations.rs:79:1: 79:9
    }
}

// MIR FOR CTFE
fn T(_1: S, _2: S) -> T {
    let mut _0: T;                       // return place in scope 0 at ui/closures/2229_closure_analysis/migrations/precise_no_migrations.rs:79:1: 79:9

    bb0: {
        _0 = T(move _1, move _2);        // scope 0 at ui/closures/2229_closure_analysis/migrations/precise_no_migrations.rs:79:1: 79:9
        return;                          // scope 0 at ui/closures/2229_closure_analysis/migrations/precise_no_migrations.rs:79:1: 79:9
    }
}

fn U(_1: T, _2: T) -> U {
    let mut _0: U;                       // return place in scope 0 at ui/closures/2229_closure_analysis/migrations/precise_no_migrations.rs:80:1: 80:9

    bb0: {
        _0 = U(move _1, move _2);        // scope 0 at ui/closures/2229_closure_analysis/migrations/precise_no_migrations.rs:80:1: 80:9
        return;                          // scope 0 at ui/closures/2229_closure_analysis/migrations/precise_no_migrations.rs:80:1: 80:9
    }
}

// MIR FOR CTFE
fn U(_1: T, _2: T) -> U {
    let mut _0: U;                       // return place in scope 0 at ui/closures/2229_closure_analysis/migrations/precise_no_migrations.rs:80:1: 80:9

    bb0: {
        _0 = U(move _1, move _2);        // scope 0 at ui/closures/2229_closure_analysis/migrations/precise_no_migrations.rs:80:1: 80:9
        return;                          // scope 0 at ui/closures/2229_closure_analysis/migrations/precise_no_migrations.rs:80:1: 80:9
    }
}
