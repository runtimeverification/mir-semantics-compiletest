// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
fn <impl at ui/closures/2229_closure_analysis/migrations/migrations_rustfix_fixed.rs:9:10: 9:15>::fmt(_1: &Foo, _2: &mut Formatter<'_>) -> Result<(), std::fmt::Error> {
    debug self => _1;                    // in scope 0 at ui/closures/2229_closure_analysis/migrations/migrations_rustfix_fixed.rs:9:10: 9:15
    debug f => _2;                       // in scope 0 at ui/closures/2229_closure_analysis/migrations/migrations_rustfix_fixed.rs:9:10: 9:15
    let mut _0: std::result::Result<(), std::fmt::Error>; // return place in scope 0 at ui/closures/2229_closure_analysis/migrations/migrations_rustfix_fixed.rs:9:10: 9:15
    let mut _3: &mut std::fmt::Formatter<'_>; // in scope 0 at ui/closures/2229_closure_analysis/migrations/migrations_rustfix_fixed.rs:9:10: 9:15
    let mut _4: &str;                    // in scope 0 at ui/closures/2229_closure_analysis/migrations/migrations_rustfix_fixed.rs:9:10: 9:15
    let _5: &str;                        // in scope 0 at ui/closures/2229_closure_analysis/migrations/migrations_rustfix_fixed.rs:9:10: 9:15
    let mut _6: &dyn std::fmt::Debug;    // in scope 0 at ui/closures/2229_closure_analysis/migrations/migrations_rustfix_fixed.rs:10:12: 10:15
    let mut _7: &&i32;                   // in scope 0 at ui/closures/2229_closure_analysis/migrations/migrations_rustfix_fixed.rs:10:12: 10:15
    let _8: &&i32;                       // in scope 0 at ui/closures/2229_closure_analysis/migrations/migrations_rustfix_fixed.rs:10:12: 10:15
    let _9: &i32;                        // in scope 0 at ui/closures/2229_closure_analysis/migrations/migrations_rustfix_fixed.rs:10:12: 10:15

    bb0: {
        _3 = &mut (*_2);                 // scope 0 at ui/closures/2229_closure_analysis/migrations/migrations_rustfix_fixed.rs:9:10: 9:15
        _5 = const "Foo";                // scope 0 at ui/closures/2229_closure_analysis/migrations/migrations_rustfix_fixed.rs:9:10: 9:15
                                         // mir::Constant
                                         // + span: ui/closures/2229_closure_analysis/migrations/migrations_rustfix_fixed.rs:9:10: 9:15
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _4 = _5;                         // scope 0 at ui/closures/2229_closure_analysis/migrations/migrations_rustfix_fixed.rs:9:10: 9:15
        _9 = &((*_1).0: i32);            // scope 0 at ui/closures/2229_closure_analysis/migrations/migrations_rustfix_fixed.rs:10:12: 10:15
        _8 = &_9;                        // scope 0 at ui/closures/2229_closure_analysis/migrations/migrations_rustfix_fixed.rs:10:12: 10:15
        _7 = _8;                         // scope 0 at ui/closures/2229_closure_analysis/migrations/migrations_rustfix_fixed.rs:10:12: 10:15
        _6 = move _7 as &dyn std::fmt::Debug (Pointer(Unsize)); // scope 0 at ui/closures/2229_closure_analysis/migrations/migrations_rustfix_fixed.rs:10:12: 10:15
        _0 = Formatter::<'_>::debug_tuple_field1_finish(move _3, move _4, move _6) -> bb1; // scope 0 at ui/closures/2229_closure_analysis/migrations/migrations_rustfix_fixed.rs:9:10: 9:15
                                         // mir::Constant
                                         // + span: ui/closures/2229_closure_analysis/migrations/migrations_rustfix_fixed.rs:9:10: 9:15
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: for<'b, 'a, 'c> fn(&'b mut Formatter<'_>, &'a str, &'c (dyn Debug + 'c)) -> Result<(), std::fmt::Error> {Formatter::<'_>::debug_tuple_field1_finish}, val: Value(<ZST>) }
    }

    bb1: {
        return;                          // scope 0 at ui/closures/2229_closure_analysis/migrations/migrations_rustfix_fixed.rs:9:15: 9:15
    }
}

fn <impl at ui/closures/2229_closure_analysis/migrations/migrations_rustfix_fixed.rs:11:1: 11:18>::drop(_1: &mut Foo) -> () {
    debug self => _1;                    // in scope 0 at ui/closures/2229_closure_analysis/migrations/migrations_rustfix_fixed.rs:12:13: 12:22
    let mut _0: ();                      // return place in scope 0 at ui/closures/2229_closure_analysis/migrations/migrations_rustfix_fixed.rs:12:24: 12:24
    let _2: ();                          // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:62
    let mut _3: std::fmt::Arguments<'_>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _4: &[&str];                 // in scope 0 at ui/closures/2229_closure_analysis/migrations/migrations_rustfix_fixed.rs:13:18: 13:32
    let mut _5: &[&str; 2];              // in scope 0 at ui/closures/2229_closure_analysis/migrations/migrations_rustfix_fixed.rs:13:18: 13:32
    let _6: &[&str; 2];                  // in scope 0 at ui/closures/2229_closure_analysis/migrations/migrations_rustfix_fixed.rs:13:18: 13:32
    let mut _7: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _8: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let _9: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let _10: [core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _11: core::fmt::ArgumentV1<'_>; // in scope 0 at ui/closures/2229_closure_analysis/migrations/migrations_rustfix_fixed.rs:13:34: 13:40
    let mut _12: &i32;                   // in scope 0 at ui/closures/2229_closure_analysis/migrations/migrations_rustfix_fixed.rs:13:34: 13:40
    let _13: &i32;                       // in scope 0 at ui/closures/2229_closure_analysis/migrations/migrations_rustfix_fixed.rs:13:34: 13:40
    let mut _14: &[&str; 2];             // in scope 0 at ui/closures/2229_closure_analysis/migrations/migrations_rustfix_fixed.rs:13:18: 13:32

    bb0: {
        _14 = const _;                   // scope 0 at ui/closures/2229_closure_analysis/migrations/migrations_rustfix_fixed.rs:13:18: 13:32
                                         // mir::Constant
                                         // + span: ui/closures/2229_closure_analysis/migrations/migrations_rustfix_fixed.rs:13:18: 13:32
                                         // + literal: Const { ty: &[&str; 2], val: Unevaluated(<Foo as Drop>::drop, [], Some(promoted[0])) }
        _6 = _14;                        // scope 0 at ui/closures/2229_closure_analysis/migrations/migrations_rustfix_fixed.rs:13:18: 13:32
        _5 = _6;                         // scope 0 at ui/closures/2229_closure_analysis/migrations/migrations_rustfix_fixed.rs:13:18: 13:32
        _4 = move _5 as &[&str] (Pointer(Unsize)); // scope 0 at ui/closures/2229_closure_analysis/migrations/migrations_rustfix_fixed.rs:13:18: 13:32
        _13 = &((*_1).0: i32);           // scope 0 at ui/closures/2229_closure_analysis/migrations/migrations_rustfix_fixed.rs:13:34: 13:40
        _12 = _13;                       // scope 0 at ui/closures/2229_closure_analysis/migrations/migrations_rustfix_fixed.rs:13:34: 13:40
        _11 = core::fmt::ArgumentV1::<'_>::new_debug::<i32>(move _12) -> bb1; // scope 0 at ui/closures/2229_closure_analysis/migrations/migrations_rustfix_fixed.rs:13:34: 13:40
                                         // mir::Constant
                                         // + span: ui/closures/2229_closure_analysis/migrations/migrations_rustfix_fixed.rs:13:34: 13:40
                                         // + user_ty: UserType(1)
                                         // + literal: Const { ty: for<'b> fn(&'b i32) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_debug::<i32>}, val: Value(<ZST>) }
    }

    bb1: {
        _10 = [move _11];                // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _9 = &_10;                       // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _8 = _9;                         // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _7 = move _8 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _3 = Arguments::<'_>::new_v1(move _4, move _7) -> bb2; // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb2: {
        _2 = _print(move _3) -> bb3;     // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:62
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:27
                                         // + literal: Const { ty: for<'a> fn(Arguments<'a>) {_print}, val: Value(<ZST>) }
    }

    bb3: {
        return;                          // scope 0 at ui/closures/2229_closure_analysis/migrations/migrations_rustfix_fixed.rs:14:6: 14:6
    }
}

promoted[0] in <impl at ui/closures/2229_closure_analysis/migrations/migrations_rustfix_fixed.rs:11:1: 11:18>::drop: &[&str; 2] = {
    let mut _0: &[&str; 2];              // return place in scope 0 at ui/closures/2229_closure_analysis/migrations/migrations_rustfix_fixed.rs:13:18: 13:32
    let mut _1: [&str; 2];               // in scope 0 at ui/closures/2229_closure_analysis/migrations/migrations_rustfix_fixed.rs:13:18: 13:32

    bb0: {
        _1 = [const "", const " dropped\n"]; // scope 0 at ui/closures/2229_closure_analysis/migrations/migrations_rustfix_fixed.rs:13:18: 13:32
                                         // mir::Constant
                                         // + span: ui/closures/2229_closure_analysis/migrations/migrations_rustfix_fixed.rs:13:18: 13:32
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
                                         // mir::Constant
                                         // + span: ui/closures/2229_closure_analysis/migrations/migrations_rustfix_fixed.rs:13:18: 13:32
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at ui/closures/2229_closure_analysis/migrations/migrations_rustfix_fixed.rs:13:18: 13:32
        return;                          // scope 0 at ui/closures/2229_closure_analysis/migrations/migrations_rustfix_fixed.rs:13:18: 13:32
    }
}

fn closure_contains_block() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/closures/2229_closure_analysis/migrations/migrations_rustfix_fixed.rs:17:29: 17:29
    let _1: (Foo, Foo);                  // in scope 0 at ui/closures/2229_closure_analysis/migrations/migrations_rustfix_fixed.rs:18:9: 18:10
    let _3: ();                          // in scope 0 at ui/closures/2229_closure_analysis/migrations/migrations_rustfix_fixed.rs:28:5: 28:8
    let mut _4: [closure@ui/closures/2229_closure_analysis/migrations/migrations_rustfix_fixed.rs:19:13: 19:15]; // in scope 0 at ui/closures/2229_closure_analysis/migrations/migrations_rustfix_fixed.rs:28:5: 28:6
    let mut _5: ();                      // in scope 0 at ui/closures/2229_closure_analysis/migrations/migrations_rustfix_fixed.rs:28:5: 28:8
    scope 1 {
        debug t => _1;                   // in scope 1 at ui/closures/2229_closure_analysis/migrations/migrations_rustfix_fixed.rs:18:9: 18:10
        let _2: [closure@ui/closures/2229_closure_analysis/migrations/migrations_rustfix_fixed.rs:19:13: 19:15]; // in scope 1 at ui/closures/2229_closure_analysis/migrations/migrations_rustfix_fixed.rs:19:9: 19:10
        scope 2 {
            debug c => _2;               // in scope 2 at ui/closures/2229_closure_analysis/migrations/migrations_rustfix_fixed.rs:19:9: 19:10
        }
    }

    bb0: {
        _1 = const (Foo(0_i32), Foo(0_i32)); // scope 0 at ui/closures/2229_closure_analysis/migrations/migrations_rustfix_fixed.rs:18:13: 18:29
                                         // mir::Constant
                                         // + span: ui/closures/2229_closure_analysis/migrations/migrations_rustfix_fixed.rs:18:13: 18:29
                                         // + literal: Const { ty: (Foo, Foo), val: Value(ByRef(..)) }
        _2 = [closure@ui/closures/2229_closure_analysis/migrations/migrations_rustfix_fixed.rs:19:13: 19:15] { t: move _1 }; // scope 1 at ui/closures/2229_closure_analysis/migrations/migrations_rustfix_fixed.rs:19:13: 26:6
                                         // closure
                                         // + def_id: DefId(0:6 ~ migrations_rustfix_fixed[46bd]::closure_contains_block::{closure#0})
                                         // + substs: [
                                         //     i32,
                                         //     extern "rust-call" fn(()),
                                         //     ((Foo, Foo),),
                                         // ]
        _4 = move _2;                    // scope 2 at ui/closures/2229_closure_analysis/migrations/migrations_rustfix_fixed.rs:28:5: 28:6
        _3 = <[closure@ui/closures/2229_closure_analysis/migrations/migrations_rustfix_fixed.rs:19:13: 19:15] as FnOnce<()>>::call_once(move _4, move _5) -> bb1; // scope 2 at ui/closures/2229_closure_analysis/migrations/migrations_rustfix_fixed.rs:28:5: 28:8
                                         // mir::Constant
                                         // + span: ui/closures/2229_closure_analysis/migrations/migrations_rustfix_fixed.rs:28:5: 28:6
                                         // + literal: Const { ty: extern "rust-call" fn([closure@ui/closures/2229_closure_analysis/migrations/migrations_rustfix_fixed.rs:19:13: 19:15], ()) -> <[closure@ui/closures/2229_closure_analysis/migrations/migrations_rustfix_fixed.rs:19:13: 19:15] as FnOnce<()>>::Output {<[closure@ui/closures/2229_closure_analysis/migrations/migrations_rustfix_fixed.rs:19:13: 19:15] as FnOnce<()>>::call_once}, val: Value(<ZST>) }
    }

    bb1: {
        return;                          // scope 0 at ui/closures/2229_closure_analysis/migrations/migrations_rustfix_fixed.rs:29:2: 29:2
    }
}

fn closure_contains_block::{closure#0}(_1: [closure@ui/closures/2229_closure_analysis/migrations/migrations_rustfix_fixed.rs:19:13: 19:15]) -> () {
    debug t => (_1.0: (Foo, Foo));       // in scope 0 at ui/closures/2229_closure_analysis/migrations/migrations_rustfix_fixed.rs:18:9: 18:10
    let mut _0: ();                      // return place in scope 0 at ui/closures/2229_closure_analysis/migrations/migrations_rustfix_fixed.rs:19:16: 19:16
    scope 1 {
        let _2: Foo;                     // in scope 1 at ui/closures/2229_closure_analysis/migrations/migrations_rustfix_fixed.rs:24:13: 24:15
        scope 2 {
            debug _t => _2;              // in scope 2 at ui/closures/2229_closure_analysis/migrations/migrations_rustfix_fixed.rs:24:13: 24:15
        }
    }

    bb0: {
        _2 = move ((_1.0: (Foo, Foo)).0: Foo); // scope 1 at ui/closures/2229_closure_analysis/migrations/migrations_rustfix_fixed.rs:24:18: 24:21
        drop(_2) -> [return: bb1, unwind: bb4]; // scope 1 at ui/closures/2229_closure_analysis/migrations/migrations_rustfix_fixed.rs:26:5: 26:6
    }

    bb1: {
        drop(((_1.0: (Foo, Foo)).1: Foo)) -> bb3; // scope 0 at ui/closures/2229_closure_analysis/migrations/migrations_rustfix_fixed.rs:26:5: 26:6
    }

    bb2 (cleanup): {
        resume;                          // scope 0 at ui/closures/2229_closure_analysis/migrations/migrations_rustfix_fixed.rs:19:13: 26:6
    }

    bb3: {
        return;                          // scope 0 at ui/closures/2229_closure_analysis/migrations/migrations_rustfix_fixed.rs:26:6: 26:6
    }

    bb4 (cleanup): {
        drop(((_1.0: (Foo, Foo)).1: Foo)) -> bb2; // scope 0 at ui/closures/2229_closure_analysis/migrations/migrations_rustfix_fixed.rs:26:5: 26:6
    }
}

fn closure_doesnt_contain_block() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/closures/2229_closure_analysis/migrations/migrations_rustfix_fixed.rs:32:35: 32:35
    let _1: (Foo, Foo);                  // in scope 0 at ui/closures/2229_closure_analysis/migrations/migrations_rustfix_fixed.rs:33:9: 33:10
    let _3: Foo;                         // in scope 0 at ui/closures/2229_closure_analysis/migrations/migrations_rustfix_fixed.rs:40:5: 40:8
    let mut _4: [closure@ui/closures/2229_closure_analysis/migrations/migrations_rustfix_fixed.rs:34:13: 34:15]; // in scope 0 at ui/closures/2229_closure_analysis/migrations/migrations_rustfix_fixed.rs:40:5: 40:6
    let mut _5: ();                      // in scope 0 at ui/closures/2229_closure_analysis/migrations/migrations_rustfix_fixed.rs:40:5: 40:8
    scope 1 {
        debug t => _1;                   // in scope 1 at ui/closures/2229_closure_analysis/migrations/migrations_rustfix_fixed.rs:33:9: 33:10
        let _2: [closure@ui/closures/2229_closure_analysis/migrations/migrations_rustfix_fixed.rs:34:13: 34:15]; // in scope 1 at ui/closures/2229_closure_analysis/migrations/migrations_rustfix_fixed.rs:34:9: 34:10
        scope 2 {
            debug c => _2;               // in scope 2 at ui/closures/2229_closure_analysis/migrations/migrations_rustfix_fixed.rs:34:9: 34:10
        }
    }

    bb0: {
        _1 = const (Foo(0_i32), Foo(0_i32)); // scope 0 at ui/closures/2229_closure_analysis/migrations/migrations_rustfix_fixed.rs:33:13: 33:29
                                         // mir::Constant
                                         // + span: ui/closures/2229_closure_analysis/migrations/migrations_rustfix_fixed.rs:33:13: 33:29
                                         // + literal: Const { ty: (Foo, Foo), val: Value(ByRef(..)) }
        _2 = [closure@ui/closures/2229_closure_analysis/migrations/migrations_rustfix_fixed.rs:34:13: 34:15] { t: move _1 }; // scope 1 at ui/closures/2229_closure_analysis/migrations/migrations_rustfix_fixed.rs:34:13: 34:35
                                         // closure
                                         // + def_id: DefId(0:8 ~ migrations_rustfix_fixed[46bd]::closure_doesnt_contain_block::{closure#0})
                                         // + substs: [
                                         //     i32,
                                         //     extern "rust-call" fn(()) -> Foo,
                                         //     ((Foo, Foo),),
                                         // ]
        _4 = move _2;                    // scope 2 at ui/closures/2229_closure_analysis/migrations/migrations_rustfix_fixed.rs:40:5: 40:6
        _3 = <[closure@ui/closures/2229_closure_analysis/migrations/migrations_rustfix_fixed.rs:34:13: 34:15] as FnOnce<()>>::call_once(move _4, move _5) -> bb1; // scope 2 at ui/closures/2229_closure_analysis/migrations/migrations_rustfix_fixed.rs:40:5: 40:8
                                         // mir::Constant
                                         // + span: ui/closures/2229_closure_analysis/migrations/migrations_rustfix_fixed.rs:40:5: 40:6
                                         // + literal: Const { ty: extern "rust-call" fn([closure@ui/closures/2229_closure_analysis/migrations/migrations_rustfix_fixed.rs:34:13: 34:15], ()) -> <[closure@ui/closures/2229_closure_analysis/migrations/migrations_rustfix_fixed.rs:34:13: 34:15] as FnOnce<()>>::Output {<[closure@ui/closures/2229_closure_analysis/migrations/migrations_rustfix_fixed.rs:34:13: 34:15] as FnOnce<()>>::call_once}, val: Value(<ZST>) }
    }

    bb1: {
        drop(_3) -> bb2;                 // scope 2 at ui/closures/2229_closure_analysis/migrations/migrations_rustfix_fixed.rs:40:8: 40:9
    }

    bb2: {
        return;                          // scope 0 at ui/closures/2229_closure_analysis/migrations/migrations_rustfix_fixed.rs:41:2: 41:2
    }
}

fn closure_doesnt_contain_block::{closure#0}(_1: [closure@ui/closures/2229_closure_analysis/migrations/migrations_rustfix_fixed.rs:34:13: 34:15]) -> Foo {
    debug t => (_1.0: (Foo, Foo));       // in scope 0 at ui/closures/2229_closure_analysis/migrations/migrations_rustfix_fixed.rs:33:9: 33:10
    let mut _0: Foo;                     // return place in scope 0 at ui/closures/2229_closure_analysis/migrations/migrations_rustfix_fixed.rs:34:16: 34:16
    scope 1 {
    }

    bb0: {
        _0 = move ((_1.0: (Foo, Foo)).0: Foo); // scope 1 at ui/closures/2229_closure_analysis/migrations/migrations_rustfix_fixed.rs:34:30: 34:33
        drop(((_1.0: (Foo, Foo)).1: Foo)) -> bb1; // scope 0 at ui/closures/2229_closure_analysis/migrations/migrations_rustfix_fixed.rs:34:34: 34:35
    }

    bb1: {
        return;                          // scope 0 at ui/closures/2229_closure_analysis/migrations/migrations_rustfix_fixed.rs:34:35: 34:35
    }
}

fn main() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/closures/2229_closure_analysis/migrations/migrations_rustfix_fixed.rs:44:11: 44:11
    let _1: ();                          // in scope 0 at ui/closures/2229_closure_analysis/migrations/migrations_rustfix_fixed.rs:45:5: 45:29
    let _2: ();                          // in scope 0 at ui/closures/2229_closure_analysis/migrations/migrations_rustfix_fixed.rs:46:5: 46:35

    bb0: {
        _1 = closure_contains_block() -> bb1; // scope 0 at ui/closures/2229_closure_analysis/migrations/migrations_rustfix_fixed.rs:45:5: 45:29
                                         // mir::Constant
                                         // + span: ui/closures/2229_closure_analysis/migrations/migrations_rustfix_fixed.rs:45:5: 45:27
                                         // + literal: Const { ty: fn() {closure_contains_block}, val: Value(<ZST>) }
    }

    bb1: {
        _2 = closure_doesnt_contain_block() -> bb2; // scope 0 at ui/closures/2229_closure_analysis/migrations/migrations_rustfix_fixed.rs:46:5: 46:35
                                         // mir::Constant
                                         // + span: ui/closures/2229_closure_analysis/migrations/migrations_rustfix_fixed.rs:46:5: 46:33
                                         // + literal: Const { ty: fn() {closure_doesnt_contain_block}, val: Value(<ZST>) }
    }

    bb2: {
        return;                          // scope 0 at ui/closures/2229_closure_analysis/migrations/migrations_rustfix_fixed.rs:47:2: 47:2
    }
}

fn Foo(_1: i32) -> Foo {
    let mut _0: Foo;                     // return place in scope 0 at ui/closures/2229_closure_analysis/migrations/migrations_rustfix_fixed.rs:10:1: 10:11

    bb0: {
        _0 = Foo(move _1);               // scope 0 at ui/closures/2229_closure_analysis/migrations/migrations_rustfix_fixed.rs:10:1: 10:11
        return;                          // scope 0 at ui/closures/2229_closure_analysis/migrations/migrations_rustfix_fixed.rs:10:1: 10:11
    }
}

// MIR FOR CTFE
fn Foo(_1: i32) -> Foo {
    let mut _0: Foo;                     // return place in scope 0 at ui/closures/2229_closure_analysis/migrations/migrations_rustfix_fixed.rs:10:1: 10:11

    bb0: {
        _0 = Foo(move _1);               // scope 0 at ui/closures/2229_closure_analysis/migrations/migrations_rustfix_fixed.rs:10:1: 10:11
        return;                          // scope 0 at ui/closures/2229_closure_analysis/migrations/migrations_rustfix_fixed.rs:10:1: 10:11
    }
}
