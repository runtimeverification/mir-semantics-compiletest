// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
fn test1_only_copy_types() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/closures/2229_closure_analysis/migrations/no_migrations.rs:10:28: 10:28
    let _1: (i32, i32);                  // in scope 0 at ui/closures/2229_closure_analysis/migrations/no_migrations.rs:11:9: 11:10
    let mut _3: &(i32, i32);             // in scope 0 at ui/closures/2229_closure_analysis/migrations/no_migrations.rs:13:13: 15:6
    let _4: ();                          // in scope 0 at ui/closures/2229_closure_analysis/migrations/no_migrations.rs:17:5: 17:8
    let mut _5: &[closure@ui/closures/2229_closure_analysis/migrations/no_migrations.rs:13:13: 13:15]; // in scope 0 at ui/closures/2229_closure_analysis/migrations/no_migrations.rs:17:5: 17:6
    let mut _6: ();                      // in scope 0 at ui/closures/2229_closure_analysis/migrations/no_migrations.rs:17:5: 17:8
    scope 1 {
        debug t => _1;                   // in scope 1 at ui/closures/2229_closure_analysis/migrations/no_migrations.rs:11:9: 11:10
        let _2: [closure@ui/closures/2229_closure_analysis/migrations/no_migrations.rs:13:13: 13:15]; // in scope 1 at ui/closures/2229_closure_analysis/migrations/no_migrations.rs:13:9: 13:10
        scope 2 {
            debug c => _2;               // in scope 2 at ui/closures/2229_closure_analysis/migrations/no_migrations.rs:13:9: 13:10
        }
    }

    bb0: {
        _1 = (const 0_i32, const 0_i32); // scope 0 at ui/closures/2229_closure_analysis/migrations/no_migrations.rs:11:13: 11:25
        _3 = &_1;                        // scope 1 at ui/closures/2229_closure_analysis/migrations/no_migrations.rs:13:13: 15:6
        _2 = [closure@ui/closures/2229_closure_analysis/migrations/no_migrations.rs:13:13: 13:15] { t: move _3 }; // scope 1 at ui/closures/2229_closure_analysis/migrations/no_migrations.rs:13:13: 15:6
                                         // closure
                                         // + def_id: DefId(0:4 ~ no_migrations[d75b]::test1_only_copy_types::{closure#0})
                                         // + substs: [
                                         //     i8,
                                         //     extern "rust-call" fn(()),
                                         //     (&(i32, i32),),
                                         // ]
        _5 = &_2;                        // scope 2 at ui/closures/2229_closure_analysis/migrations/no_migrations.rs:17:5: 17:6
        _4 = <[closure@ui/closures/2229_closure_analysis/migrations/no_migrations.rs:13:13: 13:15] as Fn<()>>::call(move _5, move _6) -> bb1; // scope 2 at ui/closures/2229_closure_analysis/migrations/no_migrations.rs:17:5: 17:8
                                         // mir::Constant
                                         // + span: ui/closures/2229_closure_analysis/migrations/no_migrations.rs:17:5: 17:6
                                         // + literal: Const { ty: for<'a> extern "rust-call" fn(&'a [closure@ui/closures/2229_closure_analysis/migrations/no_migrations.rs:13:13: 13:15], ()) -> <[closure@ui/closures/2229_closure_analysis/migrations/no_migrations.rs:13:13: 13:15] as FnOnce<()>>::Output {<[closure@ui/closures/2229_closure_analysis/migrations/no_migrations.rs:13:13: 13:15] as Fn<()>>::call}, val: Value(<ZST>) }
    }

    bb1: {
        return;                          // scope 0 at ui/closures/2229_closure_analysis/migrations/no_migrations.rs:18:2: 18:2
    }
}

fn test1_only_copy_types::{closure#0}(_1: &[closure@ui/closures/2229_closure_analysis/migrations/no_migrations.rs:13:13: 13:15]) -> () {
    debug t => (*((*_1).0: &(i32, i32))); // in scope 0 at ui/closures/2229_closure_analysis/migrations/no_migrations.rs:11:9: 11:10
    let mut _0: ();                      // return place in scope 0 at ui/closures/2229_closure_analysis/migrations/no_migrations.rs:13:16: 13:16
    let _2: i32;                         // in scope 0 at ui/closures/2229_closure_analysis/migrations/no_migrations.rs:14:13: 14:15
    let mut _3: &(i32, i32);             // in scope 0 at ui/closures/2229_closure_analysis/migrations/no_migrations.rs:13:13: 15:6
    scope 1 {
        debug _t => _2;                  // in scope 1 at ui/closures/2229_closure_analysis/migrations/no_migrations.rs:14:13: 14:15
    }

    bb0: {
        _3 = deref_copy ((*_1).0: &(i32, i32)); // scope 0 at ui/closures/2229_closure_analysis/migrations/no_migrations.rs:14:18: 14:21
        _2 = ((*_3).0: i32);             // scope 0 at ui/closures/2229_closure_analysis/migrations/no_migrations.rs:14:18: 14:21
        return;                          // scope 0 at ui/closures/2229_closure_analysis/migrations/no_migrations.rs:15:6: 15:6
    }
}

fn test2_only_copy_types_move_closure() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/closures/2229_closure_analysis/migrations/no_migrations.rs:21:41: 21:41
    let _1: (i32, i32);                  // in scope 0 at ui/closures/2229_closure_analysis/migrations/no_migrations.rs:22:9: 22:10
    let _3: ();                          // in scope 0 at ui/closures/2229_closure_analysis/migrations/no_migrations.rs:28:5: 28:8
    let mut _4: &[closure@ui/closures/2229_closure_analysis/migrations/no_migrations.rs:24:13: 24:20]; // in scope 0 at ui/closures/2229_closure_analysis/migrations/no_migrations.rs:28:5: 28:6
    let mut _5: ();                      // in scope 0 at ui/closures/2229_closure_analysis/migrations/no_migrations.rs:28:5: 28:8
    scope 1 {
        debug t => _1;                   // in scope 1 at ui/closures/2229_closure_analysis/migrations/no_migrations.rs:22:9: 22:10
        let _2: [closure@ui/closures/2229_closure_analysis/migrations/no_migrations.rs:24:13: 24:20]; // in scope 1 at ui/closures/2229_closure_analysis/migrations/no_migrations.rs:24:9: 24:10
        scope 2 {
            debug c => _2;               // in scope 2 at ui/closures/2229_closure_analysis/migrations/no_migrations.rs:24:9: 24:10
        }
    }

    bb0: {
        _1 = const (0_i32, 0_i32);       // scope 0 at ui/closures/2229_closure_analysis/migrations/no_migrations.rs:22:13: 22:25
        _2 = [closure@ui/closures/2229_closure_analysis/migrations/no_migrations.rs:24:13: 24:20] { t: _1 }; // scope 1 at ui/closures/2229_closure_analysis/migrations/no_migrations.rs:24:13: 26:6
                                         // closure
                                         // + def_id: DefId(0:6 ~ no_migrations[d75b]::test2_only_copy_types_move_closure::{closure#0})
                                         // + substs: [
                                         //     i8,
                                         //     extern "rust-call" fn(()),
                                         //     ((i32, i32),),
                                         // ]
        _4 = &_2;                        // scope 2 at ui/closures/2229_closure_analysis/migrations/no_migrations.rs:28:5: 28:6
        _3 = <[closure@ui/closures/2229_closure_analysis/migrations/no_migrations.rs:24:13: 24:20] as Fn<()>>::call(move _4, move _5) -> bb1; // scope 2 at ui/closures/2229_closure_analysis/migrations/no_migrations.rs:28:5: 28:8
                                         // mir::Constant
                                         // + span: ui/closures/2229_closure_analysis/migrations/no_migrations.rs:28:5: 28:6
                                         // + literal: Const { ty: for<'a> extern "rust-call" fn(&'a [closure@ui/closures/2229_closure_analysis/migrations/no_migrations.rs:24:13: 24:20], ()) -> <[closure@ui/closures/2229_closure_analysis/migrations/no_migrations.rs:24:13: 24:20] as FnOnce<()>>::Output {<[closure@ui/closures/2229_closure_analysis/migrations/no_migrations.rs:24:13: 24:20] as Fn<()>>::call}, val: Value(<ZST>) }
    }

    bb1: {
        return;                          // scope 0 at ui/closures/2229_closure_analysis/migrations/no_migrations.rs:29:2: 29:2
    }
}

fn test2_only_copy_types_move_closure::{closure#0}(_1: &[closure@ui/closures/2229_closure_analysis/migrations/no_migrations.rs:24:13: 24:20]) -> () {
    debug t => ((*_1).0: (i32, i32));    // in scope 0 at ui/closures/2229_closure_analysis/migrations/no_migrations.rs:22:9: 22:10
    let mut _0: ();                      // return place in scope 0 at ui/closures/2229_closure_analysis/migrations/no_migrations.rs:24:21: 24:21
    let _2: ();                          // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:62
    let mut _3: std::fmt::Arguments<'_>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _4: &[&str];                 // in scope 0 at ui/closures/2229_closure_analysis/migrations/no_migrations.rs:25:18: 25:22
    let mut _5: &[&str; 2];              // in scope 0 at ui/closures/2229_closure_analysis/migrations/no_migrations.rs:25:18: 25:22
    let _6: &[&str; 2];                  // in scope 0 at ui/closures/2229_closure_analysis/migrations/no_migrations.rs:25:18: 25:22
    let mut _7: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _8: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let _9: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let _10: [core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _11: core::fmt::ArgumentV1<'_>; // in scope 0 at ui/closures/2229_closure_analysis/migrations/no_migrations.rs:25:24: 25:27
    let mut _12: &i32;                   // in scope 0 at ui/closures/2229_closure_analysis/migrations/no_migrations.rs:25:24: 25:27
    let _13: &i32;                       // in scope 0 at ui/closures/2229_closure_analysis/migrations/no_migrations.rs:25:24: 25:27
    let mut _14: &[&str; 2];             // in scope 0 at ui/closures/2229_closure_analysis/migrations/no_migrations.rs:25:18: 25:22

    bb0: {
        _14 = const _;                   // scope 0 at ui/closures/2229_closure_analysis/migrations/no_migrations.rs:25:18: 25:22
                                         // mir::Constant
                                         // + span: ui/closures/2229_closure_analysis/migrations/no_migrations.rs:25:18: 25:22
                                         // + literal: Const { ty: &[&str; 2], val: Unevaluated(test2_only_copy_types_move_closure::{closure#0}, [<closure_kind>, <closure_signature>, <upvars>], Some(promoted[0])) }
        _6 = _14;                        // scope 0 at ui/closures/2229_closure_analysis/migrations/no_migrations.rs:25:18: 25:22
        _5 = _6;                         // scope 0 at ui/closures/2229_closure_analysis/migrations/no_migrations.rs:25:18: 25:22
        _4 = move _5 as &[&str] (Pointer(Unsize)); // scope 0 at ui/closures/2229_closure_analysis/migrations/no_migrations.rs:25:18: 25:22
        _13 = &(((*_1).0: (i32, i32)).0: i32); // scope 0 at ui/closures/2229_closure_analysis/migrations/no_migrations.rs:25:24: 25:27
        _12 = _13;                       // scope 0 at ui/closures/2229_closure_analysis/migrations/no_migrations.rs:25:24: 25:27
        _11 = core::fmt::ArgumentV1::<'_>::new_display::<i32>(move _12) -> bb1; // scope 0 at ui/closures/2229_closure_analysis/migrations/no_migrations.rs:25:24: 25:27
                                         // mir::Constant
                                         // + span: ui/closures/2229_closure_analysis/migrations/no_migrations.rs:25:24: 25:27
                                         // + user_ty: UserType(1)
                                         // + literal: Const { ty: for<'b> fn(&'b i32) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_display::<i32>}, val: Value(<ZST>) }
    }

    bb1: {
        _10 = [move _11];                // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _9 = &_10;                       // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _8 = _9;                         // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _7 = move _8 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _3 = Arguments::<'_>::new_v1(move _4, move _7) -> bb2; // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb2: {
        _2 = _print(move _3) -> bb3;     // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:62
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:27
                                         // + literal: Const { ty: for<'a> fn(Arguments<'a>) {_print}, val: Value(<ZST>) }
    }

    bb3: {
        return;                          // scope 0 at ui/closures/2229_closure_analysis/migrations/no_migrations.rs:26:6: 26:6
    }
}

promoted[0] in test2_only_copy_types_move_closure::{closure#0}: &[&str; 2] = {
    let mut _0: &[&str; 2];              // return place in scope 0 at ui/closures/2229_closure_analysis/migrations/no_migrations.rs:25:18: 25:22
    let mut _1: [&str; 2];               // in scope 0 at ui/closures/2229_closure_analysis/migrations/no_migrations.rs:25:18: 25:22

    bb0: {
        _1 = [const "", const "\n"];     // scope 0 at ui/closures/2229_closure_analysis/migrations/no_migrations.rs:25:18: 25:22
                                         // mir::Constant
                                         // + span: ui/closures/2229_closure_analysis/migrations/no_migrations.rs:25:18: 25:22
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
                                         // mir::Constant
                                         // + span: ui/closures/2229_closure_analysis/migrations/no_migrations.rs:25:18: 25:22
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at ui/closures/2229_closure_analysis/migrations/no_migrations.rs:25:18: 25:22
        return;                          // scope 0 at ui/closures/2229_closure_analysis/migrations/no_migrations.rs:25:18: 25:22
    }
}

fn test3_only_copy_types_move_closure() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/closures/2229_closure_analysis/migrations/no_migrations.rs:32:41: 32:41
    let _1: (std::string::String, std::string::String); // in scope 0 at ui/closures/2229_closure_analysis/migrations/no_migrations.rs:33:9: 33:10
    let mut _2: std::string::String;     // in scope 0 at ui/closures/2229_closure_analysis/migrations/no_migrations.rs:33:14: 33:27
    let mut _3: std::string::String;     // in scope 0 at ui/closures/2229_closure_analysis/migrations/no_migrations.rs:33:29: 33:42
    let mut _5: &(std::string::String, std::string::String); // in scope 0 at ui/closures/2229_closure_analysis/migrations/no_migrations.rs:35:13: 37:6
    let _6: ();                          // in scope 0 at ui/closures/2229_closure_analysis/migrations/no_migrations.rs:39:5: 39:8
    let mut _7: &[closure@ui/closures/2229_closure_analysis/migrations/no_migrations.rs:35:13: 35:15]; // in scope 0 at ui/closures/2229_closure_analysis/migrations/no_migrations.rs:39:5: 39:6
    let mut _8: ();                      // in scope 0 at ui/closures/2229_closure_analysis/migrations/no_migrations.rs:39:5: 39:8
    scope 1 {
        debug t => _1;                   // in scope 1 at ui/closures/2229_closure_analysis/migrations/no_migrations.rs:33:9: 33:10
        let _4: [closure@ui/closures/2229_closure_analysis/migrations/no_migrations.rs:35:13: 35:15]; // in scope 1 at ui/closures/2229_closure_analysis/migrations/no_migrations.rs:35:9: 35:10
        scope 2 {
            debug c => _4;               // in scope 2 at ui/closures/2229_closure_analysis/migrations/no_migrations.rs:35:9: 35:10
        }
    }

    bb0: {
        _2 = String::new() -> bb1;       // scope 0 at ui/closures/2229_closure_analysis/migrations/no_migrations.rs:33:14: 33:27
                                         // mir::Constant
                                         // + span: ui/closures/2229_closure_analysis/migrations/no_migrations.rs:33:14: 33:25
                                         // + literal: Const { ty: fn() -> String {String::new}, val: Value(<ZST>) }
    }

    bb1: {
        _3 = String::new() -> [return: bb2, unwind: bb6]; // scope 0 at ui/closures/2229_closure_analysis/migrations/no_migrations.rs:33:29: 33:42
                                         // mir::Constant
                                         // + span: ui/closures/2229_closure_analysis/migrations/no_migrations.rs:33:29: 33:40
                                         // + literal: Const { ty: fn() -> String {String::new}, val: Value(<ZST>) }
    }

    bb2: {
        _1 = (move _2, move _3);         // scope 0 at ui/closures/2229_closure_analysis/migrations/no_migrations.rs:33:13: 33:43
        _5 = &_1;                        // scope 1 at ui/closures/2229_closure_analysis/migrations/no_migrations.rs:35:13: 37:6
        _4 = [closure@ui/closures/2229_closure_analysis/migrations/no_migrations.rs:35:13: 35:15] { t: move _5 }; // scope 1 at ui/closures/2229_closure_analysis/migrations/no_migrations.rs:35:13: 37:6
                                         // closure
                                         // + def_id: DefId(0:8 ~ no_migrations[d75b]::test3_only_copy_types_move_closure::{closure#0})
                                         // + substs: [
                                         //     i8,
                                         //     extern "rust-call" fn(()),
                                         //     (&(std::string::String, std::string::String),),
                                         // ]
        _7 = &_4;                        // scope 2 at ui/closures/2229_closure_analysis/migrations/no_migrations.rs:39:5: 39:6
        _6 = <[closure@ui/closures/2229_closure_analysis/migrations/no_migrations.rs:35:13: 35:15] as Fn<()>>::call(move _7, move _8) -> [return: bb3, unwind: bb5]; // scope 2 at ui/closures/2229_closure_analysis/migrations/no_migrations.rs:39:5: 39:8
                                         // mir::Constant
                                         // + span: ui/closures/2229_closure_analysis/migrations/no_migrations.rs:39:5: 39:6
                                         // + literal: Const { ty: for<'a> extern "rust-call" fn(&'a [closure@ui/closures/2229_closure_analysis/migrations/no_migrations.rs:35:13: 35:15], ()) -> <[closure@ui/closures/2229_closure_analysis/migrations/no_migrations.rs:35:13: 35:15] as FnOnce<()>>::Output {<[closure@ui/closures/2229_closure_analysis/migrations/no_migrations.rs:35:13: 35:15] as Fn<()>>::call}, val: Value(<ZST>) }
    }

    bb3: {
        drop(_1) -> bb4;                 // scope 0 at ui/closures/2229_closure_analysis/migrations/no_migrations.rs:40:1: 40:2
    }

    bb4: {
        return;                          // scope 0 at ui/closures/2229_closure_analysis/migrations/no_migrations.rs:40:2: 40:2
    }

    bb5 (cleanup): {
        drop(_1) -> bb7;                 // scope 0 at ui/closures/2229_closure_analysis/migrations/no_migrations.rs:40:1: 40:2
    }

    bb6 (cleanup): {
        drop(_2) -> bb7;                 // scope 0 at ui/closures/2229_closure_analysis/migrations/no_migrations.rs:33:42: 33:43
    }

    bb7 (cleanup): {
        resume;                          // scope 0 at ui/closures/2229_closure_analysis/migrations/no_migrations.rs:32:1: 40:2
    }
}

fn test3_only_copy_types_move_closure::{closure#0}(_1: &[closure@ui/closures/2229_closure_analysis/migrations/no_migrations.rs:35:13: 35:15]) -> () {
    debug t => (*((*_1).0: &(std::string::String, std::string::String))); // in scope 0 at ui/closures/2229_closure_analysis/migrations/no_migrations.rs:33:9: 33:10
    let mut _0: ();                      // return place in scope 0 at ui/closures/2229_closure_analysis/migrations/no_migrations.rs:35:16: 35:16
    let _2: ();                          // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:62
    let mut _3: std::fmt::Arguments<'_>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _4: &[&str];                 // in scope 0 at ui/closures/2229_closure_analysis/migrations/no_migrations.rs:36:18: 36:22
    let mut _5: &[&str; 2];              // in scope 0 at ui/closures/2229_closure_analysis/migrations/no_migrations.rs:36:18: 36:22
    let _6: &[&str; 2];                  // in scope 0 at ui/closures/2229_closure_analysis/migrations/no_migrations.rs:36:18: 36:22
    let mut _7: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _8: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let _9: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let _10: [core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _11: core::fmt::ArgumentV1<'_>; // in scope 0 at ui/closures/2229_closure_analysis/migrations/no_migrations.rs:36:24: 36:27
    let mut _12: &std::string::String;   // in scope 0 at ui/closures/2229_closure_analysis/migrations/no_migrations.rs:36:24: 36:27
    let _13: &std::string::String;       // in scope 0 at ui/closures/2229_closure_analysis/migrations/no_migrations.rs:36:24: 36:27
    let mut _14: &[&str; 2];             // in scope 0 at ui/closures/2229_closure_analysis/migrations/no_migrations.rs:36:18: 36:22
    let mut _15: &(std::string::String, std::string::String); // in scope 0 at ui/closures/2229_closure_analysis/migrations/no_migrations.rs:35:13: 37:6

    bb0: {
        _14 = const _;                   // scope 0 at ui/closures/2229_closure_analysis/migrations/no_migrations.rs:36:18: 36:22
                                         // mir::Constant
                                         // + span: ui/closures/2229_closure_analysis/migrations/no_migrations.rs:36:18: 36:22
                                         // + literal: Const { ty: &[&str; 2], val: Unevaluated(test3_only_copy_types_move_closure::{closure#0}, [<closure_kind>, <closure_signature>, <upvars>], Some(promoted[0])) }
        _6 = _14;                        // scope 0 at ui/closures/2229_closure_analysis/migrations/no_migrations.rs:36:18: 36:22
        _5 = _6;                         // scope 0 at ui/closures/2229_closure_analysis/migrations/no_migrations.rs:36:18: 36:22
        _4 = move _5 as &[&str] (Pointer(Unsize)); // scope 0 at ui/closures/2229_closure_analysis/migrations/no_migrations.rs:36:18: 36:22
        _15 = deref_copy ((*_1).0: &(std::string::String, std::string::String)); // scope 0 at ui/closures/2229_closure_analysis/migrations/no_migrations.rs:36:24: 36:27
        _13 = &((*_15).0: std::string::String); // scope 0 at ui/closures/2229_closure_analysis/migrations/no_migrations.rs:36:24: 36:27
        _12 = _13;                       // scope 0 at ui/closures/2229_closure_analysis/migrations/no_migrations.rs:36:24: 36:27
        _11 = core::fmt::ArgumentV1::<'_>::new_display::<String>(move _12) -> bb1; // scope 0 at ui/closures/2229_closure_analysis/migrations/no_migrations.rs:36:24: 36:27
                                         // mir::Constant
                                         // + span: ui/closures/2229_closure_analysis/migrations/no_migrations.rs:36:24: 36:27
                                         // + user_ty: UserType(1)
                                         // + literal: Const { ty: for<'b> fn(&'b String) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_display::<String>}, val: Value(<ZST>) }
    }

    bb1: {
        _10 = [move _11];                // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _9 = &_10;                       // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _8 = _9;                         // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _7 = move _8 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _3 = Arguments::<'_>::new_v1(move _4, move _7) -> bb2; // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb2: {
        _2 = _print(move _3) -> bb3;     // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:62
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:27
                                         // + literal: Const { ty: for<'a> fn(Arguments<'a>) {_print}, val: Value(<ZST>) }
    }

    bb3: {
        return;                          // scope 0 at ui/closures/2229_closure_analysis/migrations/no_migrations.rs:37:6: 37:6
    }
}

promoted[0] in test3_only_copy_types_move_closure::{closure#0}: &[&str; 2] = {
    let mut _0: &[&str; 2];              // return place in scope 0 at ui/closures/2229_closure_analysis/migrations/no_migrations.rs:36:18: 36:22
    let mut _1: [&str; 2];               // in scope 0 at ui/closures/2229_closure_analysis/migrations/no_migrations.rs:36:18: 36:22

    bb0: {
        _1 = [const "", const "\n"];     // scope 0 at ui/closures/2229_closure_analysis/migrations/no_migrations.rs:36:18: 36:22
                                         // mir::Constant
                                         // + span: ui/closures/2229_closure_analysis/migrations/no_migrations.rs:36:18: 36:22
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
                                         // mir::Constant
                                         // + span: ui/closures/2229_closure_analysis/migrations/no_migrations.rs:36:18: 36:22
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at ui/closures/2229_closure_analysis/migrations/no_migrations.rs:36:18: 36:22
        return;                          // scope 0 at ui/closures/2229_closure_analysis/migrations/no_migrations.rs:36:18: 36:22
    }
}

fn test4_insignificant_drop_non_drop_aggregate() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/closures/2229_closure_analysis/migrations/no_migrations.rs:45:50: 45:50
    let _1: (std::string::String, i32);  // in scope 0 at ui/closures/2229_closure_analysis/migrations/no_migrations.rs:46:9: 46:10
    let mut _2: std::string::String;     // in scope 0 at ui/closures/2229_closure_analysis/migrations/no_migrations.rs:46:14: 46:27
    let mut _4: &(std::string::String, i32); // in scope 0 at ui/closures/2229_closure_analysis/migrations/no_migrations.rs:48:13: 50:6
    let _5: ();                          // in scope 0 at ui/closures/2229_closure_analysis/migrations/no_migrations.rs:52:5: 52:8
    let mut _6: &[closure@ui/closures/2229_closure_analysis/migrations/no_migrations.rs:48:13: 48:15]; // in scope 0 at ui/closures/2229_closure_analysis/migrations/no_migrations.rs:52:5: 52:6
    let mut _7: ();                      // in scope 0 at ui/closures/2229_closure_analysis/migrations/no_migrations.rs:52:5: 52:8
    scope 1 {
        debug t => _1;                   // in scope 1 at ui/closures/2229_closure_analysis/migrations/no_migrations.rs:46:9: 46:10
        let _3: [closure@ui/closures/2229_closure_analysis/migrations/no_migrations.rs:48:13: 48:15]; // in scope 1 at ui/closures/2229_closure_analysis/migrations/no_migrations.rs:48:9: 48:10
        scope 2 {
            debug c => _3;               // in scope 2 at ui/closures/2229_closure_analysis/migrations/no_migrations.rs:48:9: 48:10
        }
    }

    bb0: {
        _2 = String::new() -> bb1;       // scope 0 at ui/closures/2229_closure_analysis/migrations/no_migrations.rs:46:14: 46:27
                                         // mir::Constant
                                         // + span: ui/closures/2229_closure_analysis/migrations/no_migrations.rs:46:14: 46:25
                                         // + literal: Const { ty: fn() -> String {String::new}, val: Value(<ZST>) }
    }

    bb1: {
        _1 = (move _2, const 0_i32);     // scope 0 at ui/closures/2229_closure_analysis/migrations/no_migrations.rs:46:13: 46:34
        _4 = &_1;                        // scope 1 at ui/closures/2229_closure_analysis/migrations/no_migrations.rs:48:13: 50:6
        _3 = [closure@ui/closures/2229_closure_analysis/migrations/no_migrations.rs:48:13: 48:15] { t: move _4 }; // scope 1 at ui/closures/2229_closure_analysis/migrations/no_migrations.rs:48:13: 50:6
                                         // closure
                                         // + def_id: DefId(0:10 ~ no_migrations[d75b]::test4_insignificant_drop_non_drop_aggregate::{closure#0})
                                         // + substs: [
                                         //     i8,
                                         //     extern "rust-call" fn(()),
                                         //     (&(std::string::String, i32),),
                                         // ]
        _6 = &_3;                        // scope 2 at ui/closures/2229_closure_analysis/migrations/no_migrations.rs:52:5: 52:6
        _5 = <[closure@ui/closures/2229_closure_analysis/migrations/no_migrations.rs:48:13: 48:15] as Fn<()>>::call(move _6, move _7) -> [return: bb2, unwind: bb4]; // scope 2 at ui/closures/2229_closure_analysis/migrations/no_migrations.rs:52:5: 52:8
                                         // mir::Constant
                                         // + span: ui/closures/2229_closure_analysis/migrations/no_migrations.rs:52:5: 52:6
                                         // + literal: Const { ty: for<'a> extern "rust-call" fn(&'a [closure@ui/closures/2229_closure_analysis/migrations/no_migrations.rs:48:13: 48:15], ()) -> <[closure@ui/closures/2229_closure_analysis/migrations/no_migrations.rs:48:13: 48:15] as FnOnce<()>>::Output {<[closure@ui/closures/2229_closure_analysis/migrations/no_migrations.rs:48:13: 48:15] as Fn<()>>::call}, val: Value(<ZST>) }
    }

    bb2: {
        drop(_1) -> bb3;                 // scope 0 at ui/closures/2229_closure_analysis/migrations/no_migrations.rs:53:1: 53:2
    }

    bb3: {
        return;                          // scope 0 at ui/closures/2229_closure_analysis/migrations/no_migrations.rs:53:2: 53:2
    }

    bb4 (cleanup): {
        drop(_1) -> bb5;                 // scope 0 at ui/closures/2229_closure_analysis/migrations/no_migrations.rs:53:1: 53:2
    }

    bb5 (cleanup): {
        resume;                          // scope 0 at ui/closures/2229_closure_analysis/migrations/no_migrations.rs:45:1: 53:2
    }
}

fn test4_insignificant_drop_non_drop_aggregate::{closure#0}(_1: &[closure@ui/closures/2229_closure_analysis/migrations/no_migrations.rs:48:13: 48:15]) -> () {
    debug t => (*((*_1).0: &(std::string::String, i32))); // in scope 0 at ui/closures/2229_closure_analysis/migrations/no_migrations.rs:46:9: 46:10
    let mut _0: ();                      // return place in scope 0 at ui/closures/2229_closure_analysis/migrations/no_migrations.rs:48:16: 48:16
    let _2: i32;                         // in scope 0 at ui/closures/2229_closure_analysis/migrations/no_migrations.rs:49:13: 49:15
    let mut _3: &(std::string::String, i32); // in scope 0 at ui/closures/2229_closure_analysis/migrations/no_migrations.rs:48:13: 50:6
    scope 1 {
        debug _t => _2;                  // in scope 1 at ui/closures/2229_closure_analysis/migrations/no_migrations.rs:49:13: 49:15
    }

    bb0: {
        _3 = deref_copy ((*_1).0: &(std::string::String, i32)); // scope 0 at ui/closures/2229_closure_analysis/migrations/no_migrations.rs:49:18: 49:21
        _2 = ((*_3).1: i32);             // scope 0 at ui/closures/2229_closure_analysis/migrations/no_migrations.rs:49:18: 49:21
        return;                          // scope 0 at ui/closures/2229_closure_analysis/migrations/no_migrations.rs:50:6: 50:6
    }
}

fn <impl at ui/closures/2229_closure_analysis/migrations/no_migrations.rs:56:1: 56:18>::drop(_1: &mut Foo) -> () {
    debug self => _1;                    // in scope 0 at ui/closures/2229_closure_analysis/migrations/no_migrations.rs:57:13: 57:22
    let mut _0: ();                      // return place in scope 0 at ui/closures/2229_closure_analysis/migrations/no_migrations.rs:57:24: 57:24
    let _2: ();                          // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:62
    let mut _3: std::fmt::Arguments<'_>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _4: &[&str];                 // in scope 0 at ui/closures/2229_closure_analysis/migrations/no_migrations.rs:58:18: 58:32
    let mut _5: &[&str; 2];              // in scope 0 at ui/closures/2229_closure_analysis/migrations/no_migrations.rs:58:18: 58:32
    let _6: &[&str; 2];                  // in scope 0 at ui/closures/2229_closure_analysis/migrations/no_migrations.rs:58:18: 58:32
    let mut _7: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _8: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let _9: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let _10: [core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _11: core::fmt::ArgumentV1<'_>; // in scope 0 at ui/closures/2229_closure_analysis/migrations/no_migrations.rs:58:34: 58:40
    let mut _12: &i32;                   // in scope 0 at ui/closures/2229_closure_analysis/migrations/no_migrations.rs:58:34: 58:40
    let _13: &i32;                       // in scope 0 at ui/closures/2229_closure_analysis/migrations/no_migrations.rs:58:34: 58:40
    let mut _14: &[&str; 2];             // in scope 0 at ui/closures/2229_closure_analysis/migrations/no_migrations.rs:58:18: 58:32

    bb0: {
        _14 = const _;                   // scope 0 at ui/closures/2229_closure_analysis/migrations/no_migrations.rs:58:18: 58:32
                                         // mir::Constant
                                         // + span: ui/closures/2229_closure_analysis/migrations/no_migrations.rs:58:18: 58:32
                                         // + literal: Const { ty: &[&str; 2], val: Unevaluated(<Foo as Drop>::drop, [], Some(promoted[0])) }
        _6 = _14;                        // scope 0 at ui/closures/2229_closure_analysis/migrations/no_migrations.rs:58:18: 58:32
        _5 = _6;                         // scope 0 at ui/closures/2229_closure_analysis/migrations/no_migrations.rs:58:18: 58:32
        _4 = move _5 as &[&str] (Pointer(Unsize)); // scope 0 at ui/closures/2229_closure_analysis/migrations/no_migrations.rs:58:18: 58:32
        _13 = &((*_1).0: i32);           // scope 0 at ui/closures/2229_closure_analysis/migrations/no_migrations.rs:58:34: 58:40
        _12 = _13;                       // scope 0 at ui/closures/2229_closure_analysis/migrations/no_migrations.rs:58:34: 58:40
        _11 = core::fmt::ArgumentV1::<'_>::new_debug::<i32>(move _12) -> bb1; // scope 0 at ui/closures/2229_closure_analysis/migrations/no_migrations.rs:58:34: 58:40
                                         // mir::Constant
                                         // + span: ui/closures/2229_closure_analysis/migrations/no_migrations.rs:58:34: 58:40
                                         // + user_ty: UserType(1)
                                         // + literal: Const { ty: for<'b> fn(&'b i32) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_debug::<i32>}, val: Value(<ZST>) }
    }

    bb1: {
        _10 = [move _11];                // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _9 = &_10;                       // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _8 = _9;                         // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _7 = move _8 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _3 = Arguments::<'_>::new_v1(move _4, move _7) -> bb2; // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb2: {
        _2 = _print(move _3) -> bb3;     // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:62
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:27
                                         // + literal: Const { ty: for<'a> fn(Arguments<'a>) {_print}, val: Value(<ZST>) }
    }

    bb3: {
        return;                          // scope 0 at ui/closures/2229_closure_analysis/migrations/no_migrations.rs:59:6: 59:6
    }
}

promoted[0] in <impl at ui/closures/2229_closure_analysis/migrations/no_migrations.rs:56:1: 56:18>::drop: &[&str; 2] = {
    let mut _0: &[&str; 2];              // return place in scope 0 at ui/closures/2229_closure_analysis/migrations/no_migrations.rs:58:18: 58:32
    let mut _1: [&str; 2];               // in scope 0 at ui/closures/2229_closure_analysis/migrations/no_migrations.rs:58:18: 58:32

    bb0: {
        _1 = [const "", const " dropped\n"]; // scope 0 at ui/closures/2229_closure_analysis/migrations/no_migrations.rs:58:18: 58:32
                                         // mir::Constant
                                         // + span: ui/closures/2229_closure_analysis/migrations/no_migrations.rs:58:18: 58:32
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
                                         // mir::Constant
                                         // + span: ui/closures/2229_closure_analysis/migrations/no_migrations.rs:58:18: 58:32
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at ui/closures/2229_closure_analysis/migrations/no_migrations.rs:58:18: 58:32
        return;                          // scope 0 at ui/closures/2229_closure_analysis/migrations/no_migrations.rs:58:18: 58:32
    }
}

fn test5_significant_drop_non_drop_aggregate() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/closures/2229_closure_analysis/migrations/no_migrations.rs:65:48: 65:48
    let _1: (Foo, i32);                  // in scope 0 at ui/closures/2229_closure_analysis/migrations/no_migrations.rs:66:9: 66:10
    let mut _2: Foo;                     // in scope 0 at ui/closures/2229_closure_analysis/migrations/no_migrations.rs:66:14: 66:20
    let mut _4: &(Foo, i32);             // in scope 0 at ui/closures/2229_closure_analysis/migrations/no_migrations.rs:68:13: 70:6
    let _5: ();                          // in scope 0 at ui/closures/2229_closure_analysis/migrations/no_migrations.rs:72:5: 72:8
    let mut _6: &[closure@ui/closures/2229_closure_analysis/migrations/no_migrations.rs:68:13: 68:15]; // in scope 0 at ui/closures/2229_closure_analysis/migrations/no_migrations.rs:72:5: 72:6
    let mut _7: ();                      // in scope 0 at ui/closures/2229_closure_analysis/migrations/no_migrations.rs:72:5: 72:8
    scope 1 {
        debug t => _1;                   // in scope 1 at ui/closures/2229_closure_analysis/migrations/no_migrations.rs:66:9: 66:10
        let _3: [closure@ui/closures/2229_closure_analysis/migrations/no_migrations.rs:68:13: 68:15]; // in scope 1 at ui/closures/2229_closure_analysis/migrations/no_migrations.rs:68:9: 68:10
        scope 2 {
            debug c => _3;               // in scope 2 at ui/closures/2229_closure_analysis/migrations/no_migrations.rs:68:9: 68:10
        }
    }

    bb0: {
        _2 = const Foo(0_i32);           // scope 0 at ui/closures/2229_closure_analysis/migrations/no_migrations.rs:66:14: 66:20
                                         // mir::Constant
                                         // + span: ui/closures/2229_closure_analysis/migrations/no_migrations.rs:66:14: 66:20
                                         // + literal: Const { ty: Foo, val: Value(Scalar(0x00000000)) }
        _1 = (move _2, const 0_i32);     // scope 0 at ui/closures/2229_closure_analysis/migrations/no_migrations.rs:66:13: 66:27
        _4 = &_1;                        // scope 1 at ui/closures/2229_closure_analysis/migrations/no_migrations.rs:68:13: 70:6
        _3 = [closure@ui/closures/2229_closure_analysis/migrations/no_migrations.rs:68:13: 68:15] { t: move _4 }; // scope 1 at ui/closures/2229_closure_analysis/migrations/no_migrations.rs:68:13: 70:6
                                         // closure
                                         // + def_id: DefId(0:17 ~ no_migrations[d75b]::test5_significant_drop_non_drop_aggregate::{closure#0})
                                         // + substs: [
                                         //     i8,
                                         //     extern "rust-call" fn(()),
                                         //     (&(Foo, i32),),
                                         // ]
        _6 = &_3;                        // scope 2 at ui/closures/2229_closure_analysis/migrations/no_migrations.rs:72:5: 72:6
        _5 = <[closure@ui/closures/2229_closure_analysis/migrations/no_migrations.rs:68:13: 68:15] as Fn<()>>::call(move _6, move _7) -> [return: bb1, unwind: bb3]; // scope 2 at ui/closures/2229_closure_analysis/migrations/no_migrations.rs:72:5: 72:8
                                         // mir::Constant
                                         // + span: ui/closures/2229_closure_analysis/migrations/no_migrations.rs:72:5: 72:6
                                         // + literal: Const { ty: for<'a> extern "rust-call" fn(&'a [closure@ui/closures/2229_closure_analysis/migrations/no_migrations.rs:68:13: 68:15], ()) -> <[closure@ui/closures/2229_closure_analysis/migrations/no_migrations.rs:68:13: 68:15] as FnOnce<()>>::Output {<[closure@ui/closures/2229_closure_analysis/migrations/no_migrations.rs:68:13: 68:15] as Fn<()>>::call}, val: Value(<ZST>) }
    }

    bb1: {
        drop(_1) -> bb2;                 // scope 0 at ui/closures/2229_closure_analysis/migrations/no_migrations.rs:73:1: 73:2
    }

    bb2: {
        return;                          // scope 0 at ui/closures/2229_closure_analysis/migrations/no_migrations.rs:73:2: 73:2
    }

    bb3 (cleanup): {
        drop(_1) -> bb4;                 // scope 0 at ui/closures/2229_closure_analysis/migrations/no_migrations.rs:73:1: 73:2
    }

    bb4 (cleanup): {
        resume;                          // scope 0 at ui/closures/2229_closure_analysis/migrations/no_migrations.rs:65:1: 73:2
    }
}

fn test5_significant_drop_non_drop_aggregate::{closure#0}(_1: &[closure@ui/closures/2229_closure_analysis/migrations/no_migrations.rs:68:13: 68:15]) -> () {
    debug t => (*((*_1).0: &(Foo, i32))); // in scope 0 at ui/closures/2229_closure_analysis/migrations/no_migrations.rs:66:9: 66:10
    let mut _0: ();                      // return place in scope 0 at ui/closures/2229_closure_analysis/migrations/no_migrations.rs:68:16: 68:16
    let _2: i32;                         // in scope 0 at ui/closures/2229_closure_analysis/migrations/no_migrations.rs:69:13: 69:15
    let mut _3: &(Foo, i32);             // in scope 0 at ui/closures/2229_closure_analysis/migrations/no_migrations.rs:68:13: 70:6
    scope 1 {
        debug _t => _2;                  // in scope 1 at ui/closures/2229_closure_analysis/migrations/no_migrations.rs:69:13: 69:15
    }

    bb0: {
        _3 = deref_copy ((*_1).0: &(Foo, i32)); // scope 0 at ui/closures/2229_closure_analysis/migrations/no_migrations.rs:69:18: 69:21
        _2 = ((*_3).1: i32);             // scope 0 at ui/closures/2229_closure_analysis/migrations/no_migrations.rs:69:18: 69:21
        return;                          // scope 0 at ui/closures/2229_closure_analysis/migrations/no_migrations.rs:70:6: 70:6
    }
}

fn main() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/closures/2229_closure_analysis/migrations/no_migrations.rs:75:11: 75:11
    let _1: ();                          // in scope 0 at ui/closures/2229_closure_analysis/migrations/no_migrations.rs:76:5: 76:28
    let _2: ();                          // in scope 0 at ui/closures/2229_closure_analysis/migrations/no_migrations.rs:77:5: 77:41
    let _3: ();                          // in scope 0 at ui/closures/2229_closure_analysis/migrations/no_migrations.rs:78:5: 78:41
    let _4: ();                          // in scope 0 at ui/closures/2229_closure_analysis/migrations/no_migrations.rs:79:5: 79:50
    let _5: ();                          // in scope 0 at ui/closures/2229_closure_analysis/migrations/no_migrations.rs:80:5: 80:48

    bb0: {
        _1 = test1_only_copy_types() -> bb1; // scope 0 at ui/closures/2229_closure_analysis/migrations/no_migrations.rs:76:5: 76:28
                                         // mir::Constant
                                         // + span: ui/closures/2229_closure_analysis/migrations/no_migrations.rs:76:5: 76:26
                                         // + literal: Const { ty: fn() {test1_only_copy_types}, val: Value(<ZST>) }
    }

    bb1: {
        _2 = test2_only_copy_types_move_closure() -> bb2; // scope 0 at ui/closures/2229_closure_analysis/migrations/no_migrations.rs:77:5: 77:41
                                         // mir::Constant
                                         // + span: ui/closures/2229_closure_analysis/migrations/no_migrations.rs:77:5: 77:39
                                         // + literal: Const { ty: fn() {test2_only_copy_types_move_closure}, val: Value(<ZST>) }
    }

    bb2: {
        _3 = test3_only_copy_types_move_closure() -> bb3; // scope 0 at ui/closures/2229_closure_analysis/migrations/no_migrations.rs:78:5: 78:41
                                         // mir::Constant
                                         // + span: ui/closures/2229_closure_analysis/migrations/no_migrations.rs:78:5: 78:39
                                         // + literal: Const { ty: fn() {test3_only_copy_types_move_closure}, val: Value(<ZST>) }
    }

    bb3: {
        _4 = test4_insignificant_drop_non_drop_aggregate() -> bb4; // scope 0 at ui/closures/2229_closure_analysis/migrations/no_migrations.rs:79:5: 79:50
                                         // mir::Constant
                                         // + span: ui/closures/2229_closure_analysis/migrations/no_migrations.rs:79:5: 79:48
                                         // + literal: Const { ty: fn() {test4_insignificant_drop_non_drop_aggregate}, val: Value(<ZST>) }
    }

    bb4: {
        _5 = test5_significant_drop_non_drop_aggregate() -> bb5; // scope 0 at ui/closures/2229_closure_analysis/migrations/no_migrations.rs:80:5: 80:48
                                         // mir::Constant
                                         // + span: ui/closures/2229_closure_analysis/migrations/no_migrations.rs:80:5: 80:46
                                         // + literal: Const { ty: fn() {test5_significant_drop_non_drop_aggregate}, val: Value(<ZST>) }
    }

    bb5: {
        return;                          // scope 0 at ui/closures/2229_closure_analysis/migrations/no_migrations.rs:81:2: 81:2
    }
}

fn Foo(_1: i32) -> Foo {
    let mut _0: Foo;                     // return place in scope 0 at ui/closures/2229_closure_analysis/migrations/no_migrations.rs:55:1: 55:11

    bb0: {
        _0 = Foo(move _1);               // scope 0 at ui/closures/2229_closure_analysis/migrations/no_migrations.rs:55:1: 55:11
        return;                          // scope 0 at ui/closures/2229_closure_analysis/migrations/no_migrations.rs:55:1: 55:11
    }
}

// MIR FOR CTFE
fn Foo(_1: i32) -> Foo {
    let mut _0: Foo;                     // return place in scope 0 at ui/closures/2229_closure_analysis/migrations/no_migrations.rs:55:1: 55:11

    bb0: {
        _0 = Foo(move _1);               // scope 0 at ui/closures/2229_closure_analysis/migrations/no_migrations.rs:55:1: 55:11
        return;                          // scope 0 at ui/closures/2229_closure_analysis/migrations/no_migrations.rs:55:1: 55:11
    }
}
