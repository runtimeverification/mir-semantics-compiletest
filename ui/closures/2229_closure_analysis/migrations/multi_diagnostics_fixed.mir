// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
fn <impl at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:7:10: 7:15>::fmt(_1: &Foo, _2: &mut Formatter<'_>) -> Result<(), std::fmt::Error> {
    debug self => _1;                    // in scope 0 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:7:10: 7:15
    debug f => _2;                       // in scope 0 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:7:10: 7:15
    let mut _0: std::result::Result<(), std::fmt::Error>; // return place in scope 0 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:7:10: 7:15
    let mut _3: &mut std::fmt::Formatter<'_>; // in scope 0 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:7:10: 7:15
    let mut _4: &str;                    // in scope 0 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:7:10: 7:15
    let _5: &str;                        // in scope 0 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:7:10: 7:15
    let mut _6: &dyn std::fmt::Debug;    // in scope 0 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:8:12: 8:18
    let mut _7: &&std::string::String;   // in scope 0 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:8:12: 8:18
    let _8: &&std::string::String;       // in scope 0 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:8:12: 8:18
    let _9: &std::string::String;        // in scope 0 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:8:12: 8:18

    bb0: {
        _3 = &mut (*_2);                 // scope 0 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:7:10: 7:15
        _5 = const "Foo";                // scope 0 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:7:10: 7:15
                                         // mir::Constant
                                         // + span: ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:7:10: 7:15
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _4 = _5;                         // scope 0 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:7:10: 7:15
        _9 = &((*_1).0: std::string::String); // scope 0 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:8:12: 8:18
        _8 = &_9;                        // scope 0 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:8:12: 8:18
        _7 = _8;                         // scope 0 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:8:12: 8:18
        _6 = move _7 as &dyn std::fmt::Debug (Pointer(Unsize)); // scope 0 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:8:12: 8:18
        _0 = Formatter::<'_>::debug_tuple_field1_finish(move _3, move _4, move _6) -> bb1; // scope 0 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:7:10: 7:15
                                         // mir::Constant
                                         // + span: ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:7:10: 7:15
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: for<'b, 'a, 'c> fn(&'b mut Formatter<'_>, &'a str, &'c (dyn Debug + 'c)) -> Result<(), std::fmt::Error> {Formatter::<'_>::debug_tuple_field1_finish}, val: Value(<ZST>) }
    }

    bb1: {
        return;                          // scope 0 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:7:15: 7:15
    }
}

fn <impl at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:9:1: 9:18>::drop(_1: &mut Foo) -> () {
    debug self => _1;                    // in scope 0 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:10:13: 10:22
    let mut _0: ();                      // return place in scope 0 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:10:24: 10:24
    let _2: ();                          // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:62
    let mut _3: std::fmt::Arguments<'_>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _4: &[&str];                 // in scope 0 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:11:18: 11:32
    let mut _5: &[&str; 2];              // in scope 0 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:11:18: 11:32
    let _6: &[&str; 2];                  // in scope 0 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:11:18: 11:32
    let mut _7: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _8: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let _9: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let _10: [core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _11: core::fmt::ArgumentV1<'_>; // in scope 0 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:11:34: 11:40
    let mut _12: &std::string::String;   // in scope 0 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:11:34: 11:40
    let _13: &std::string::String;       // in scope 0 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:11:34: 11:40
    let mut _14: &[&str; 2];             // in scope 0 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:11:18: 11:32

    bb0: {
        _14 = const _;                   // scope 0 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:11:18: 11:32
                                         // mir::Constant
                                         // + span: ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:11:18: 11:32
                                         // + literal: Const { ty: &[&str; 2], val: Unevaluated(<Foo as Drop>::drop, [], Some(promoted[0])) }
        _6 = _14;                        // scope 0 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:11:18: 11:32
        _5 = _6;                         // scope 0 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:11:18: 11:32
        _4 = move _5 as &[&str] (Pointer(Unsize)); // scope 0 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:11:18: 11:32
        _13 = &((*_1).0: std::string::String); // scope 0 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:11:34: 11:40
        _12 = _13;                       // scope 0 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:11:34: 11:40
        _11 = core::fmt::ArgumentV1::<'_>::new_debug::<String>(move _12) -> bb1; // scope 0 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:11:34: 11:40
                                         // mir::Constant
                                         // + span: ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:11:34: 11:40
                                         // + user_ty: UserType(1)
                                         // + literal: Const { ty: for<'b> fn(&'b String) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_debug::<String>}, val: Value(<ZST>) }
    }

    bb1: {
        _10 = [move _11];                // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _9 = &_10;                       // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _8 = _9;                         // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _7 = move _8 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _3 = Arguments::<'_>::new_v1(move _4, move _7) -> bb2; // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb2: {
        _2 = _print(move _3) -> bb3;     // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:62
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:27
                                         // + literal: Const { ty: for<'a> fn(Arguments<'a>) {_print}, val: Value(<ZST>) }
    }

    bb3: {
        return;                          // scope 0 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:12:6: 12:6
    }
}

promoted[0] in <impl at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:9:1: 9:18>::drop: &[&str; 2] = {
    let mut _0: &[&str; 2];              // return place in scope 0 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:11:18: 11:32
    let mut _1: [&str; 2];               // in scope 0 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:11:18: 11:32

    bb0: {
        _1 = [const "", const " dropped\n"]; // scope 0 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:11:18: 11:32
                                         // mir::Constant
                                         // + span: ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:11:18: 11:32
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
                                         // mir::Constant
                                         // + span: ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:11:18: 11:32
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:11:18: 11:32
        return;                          // scope 0 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:11:18: 11:32
    }
}

fn <impl at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:15:1: 15:9>::from(_1: &str) -> Foo {
    debug s => _1;                       // in scope 0 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:16:13: 16:14
    let mut _0: Foo;                     // return place in scope 0 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:16:25: 16:29
    let mut _2: std::string::String;     // in scope 0 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:17:14: 17:29
    let mut _3: &str;                    // in scope 0 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:17:27: 17:28

    bb0: {
        _3 = _1;                         // scope 0 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:17:27: 17:28
        _2 = <String as From<&str>>::from(move _3) -> bb1; // scope 0 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:17:14: 17:29
                                         // mir::Constant
                                         // + span: ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:17:14: 17:26
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: fn(&str) -> String {<String as From<&str>>::from}, val: Value(<ZST>) }
    }

    bb1: {
        _0 = Foo(move _2);               // scope 0 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:17:9: 17:30
        return;                          // scope 0 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:18:6: 18:6
    }
}

fn <impl at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:23:10: 23:15>::clone(_1: &T) -> T {
    debug self => _1;                    // in scope 0 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:23:10: 23:15
    let mut _0: T;                       // return place in scope 0 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:23:10: 23:15
    let mut _2: i32;                     // in scope 0 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:24:47: 24:50
    let mut _3: &i32;                    // in scope 0 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:24:47: 24:50
    let _4: &i32;                        // in scope 0 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:24:47: 24:50

    bb0: {
        _4 = &((*_1).0: i32);            // scope 0 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:24:47: 24:50
        _3 = _4;                         // scope 0 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:24:47: 24:50
        _2 = (*_3);                      // scope 0 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:24:47: 24:50
        _0 = T(move _2);                 // scope 0 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:23:10: 23:15
        return;                          // scope 0 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:23:15: 23:15
    }
}

fn <impl at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:28:1: 28:17>::clone(_1: &U) -> U {
    debug self => _1;                    // in scope 0 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:29:14: 29:19
    let mut _0: U;                       // return place in scope 0 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:29:24: 29:28
    let mut _2: S;                       // in scope 0 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:30:11: 30:38
    let mut _3: Foo;                     // in scope 0 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:30:13: 30:37
    let mut _4: &str;                    // in scope 0 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:30:23: 30:36
    let _5: &str;                        // in scope 0 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:30:23: 30:36
    let mut _6: T;                       // in scope 0 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:30:40: 30:44

    bb0: {
        _5 = const "Hello World";        // scope 0 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:30:23: 30:36
                                         // mir::Constant
                                         // + span: ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:30:23: 30:36
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _4 = _5;                         // scope 0 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:30:23: 30:36
        _3 = Foo::from(move _4) -> bb1;  // scope 0 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:30:13: 30:37
                                         // mir::Constant
                                         // + span: ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:30:13: 30:22
                                         // + literal: Const { ty: for<'a> fn(&'a str) -> Foo {Foo::from}, val: Value(<ZST>) }
    }

    bb1: {
        _2 = S(move _3);                 // scope 0 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:30:11: 30:38
        _6 = const T(0_i32);             // scope 0 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:30:40: 30:44
                                         // mir::Constant
                                         // + span: ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:30:40: 30:44
                                         // + literal: Const { ty: T, val: Value(Scalar(0x00000000)) }
        _0 = U(move _2, move _6);        // scope 0 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:30:9: 30:45
        return;                          // scope 0 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:31:6: 31:6
    }
}

fn test_multi_issues() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:34:24: 34:24
    let _1: U;                           // in scope 0 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:35:9: 35:11
    let mut _2: S;                       // in scope 0 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:35:16: 35:35
    let mut _3: Foo;                     // in scope 0 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:35:18: 35:34
    let mut _4: &str;                    // in scope 0 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:35:28: 35:33
    let _5: &str;                        // in scope 0 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:35:28: 35:33
    let mut _6: T;                       // in scope 0 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:35:37: 35:41
    let mut _8: S;                       // in scope 0 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:36:16: 36:35
    let mut _9: Foo;                     // in scope 0 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:36:18: 36:34
    let mut _10: &str;                   // in scope 0 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:36:28: 36:33
    let _11: &str;                       // in scope 0 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:36:28: 36:33
    let mut _12: T;                      // in scope 0 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:36:37: 36:41
    let mut _15: &[closure@ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:37:13: 37:15]; // in scope 0 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:49:19: 49:28
    let _16: ();                         // in scope 0 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:51:5: 51:14
    let mut _17: [closure@ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:37:13: 37:15]; // in scope 0 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:51:5: 51:12
    let mut _18: ();                     // in scope 0 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:51:5: 51:14
    let mut _19: bool;                   // in scope 0 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:52:1: 52:2
    scope 1 {
        debug f1 => _1;                  // in scope 1 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:35:9: 35:11
        let _7: U;                       // in scope 1 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:36:9: 36:11
        scope 2 {
            debug f2 => _7;              // in scope 2 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:36:9: 36:11
            let _13: [closure@ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:37:13: 37:15]; // in scope 2 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:37:9: 37:10
            scope 3 {
                debug c => _13;          // in scope 3 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:37:9: 37:10
                let _14: [closure@ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:37:13: 37:15]; // in scope 3 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:49:9: 49:16
                scope 4 {
                    debug c_clone => _14; // in scope 4 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:49:9: 49:16
                }
            }
        }
    }

    bb0: {
        _19 = const false;               // scope 0 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:35:9: 35:11
        _5 = const "foo";                // scope 0 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:35:28: 35:33
                                         // mir::Constant
                                         // + span: ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:35:28: 35:33
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _4 = _5;                         // scope 0 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:35:28: 35:33
        _3 = Foo::from(move _4) -> bb1;  // scope 0 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:35:18: 35:34
                                         // mir::Constant
                                         // + span: ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:35:18: 35:27
                                         // + literal: Const { ty: for<'a> fn(&'a str) -> Foo {Foo::from}, val: Value(<ZST>) }
    }

    bb1: {
        _2 = S(move _3);                 // scope 0 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:35:16: 35:35
        _6 = const T(0_i32);             // scope 0 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:35:37: 35:41
                                         // mir::Constant
                                         // + span: ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:35:37: 35:41
                                         // + literal: Const { ty: T, val: Value(Scalar(0x00000000)) }
        _19 = const true;                // scope 0 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:35:14: 35:42
        _1 = U(move _2, move _6);        // scope 0 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:35:14: 35:42
        _11 = const "bar";               // scope 1 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:36:28: 36:33
                                         // mir::Constant
                                         // + span: ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:36:28: 36:33
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _10 = _11;                       // scope 1 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:36:28: 36:33
        _9 = Foo::from(move _10) -> [return: bb2, unwind: bb9]; // scope 1 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:36:18: 36:34
                                         // mir::Constant
                                         // + span: ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:36:18: 36:27
                                         // + literal: Const { ty: for<'a> fn(&'a str) -> Foo {Foo::from}, val: Value(<ZST>) }
    }

    bb2: {
        _8 = S(move _9);                 // scope 1 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:36:16: 36:35
        _12 = const T(0_i32);            // scope 1 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:36:37: 36:41
                                         // mir::Constant
                                         // + span: ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:36:37: 36:41
                                         // + literal: Const { ty: T, val: Value(Scalar(0x00000000)) }
        _7 = U(move _8, move _12);       // scope 1 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:36:14: 36:42
        _19 = const false;               // scope 2 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:37:13: 47:6
        _13 = [closure@ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:37:13: 37:15] { f1: move _1, f2: move _7 }; // scope 2 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:37:13: 47:6
                                         // closure
                                         // + def_id: DefId(0:18 ~ multi_diagnostics_fixed[f49d]::test_multi_issues::{closure#0})
                                         // + substs: [
                                         //     i32,
                                         //     extern "rust-call" fn(()),
                                         //     (U, U),
                                         // ]
        _15 = &_13;                      // scope 3 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:49:19: 49:28
        _14 = <[closure@ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:37:13: 37:15] as Clone>::clone(move _15) -> [return: bb3, unwind: bb6]; // scope 3 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:49:19: 49:28
                                         // mir::Constant
                                         // + span: ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:49:21: 49:26
                                         // + literal: Const { ty: for<'a> fn(&'a [closure@ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:37:13: 37:15]) -> [closure@ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:37:13: 37:15] {<[closure@ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:37:13: 37:15] as Clone>::clone}, val: Value(<ZST>) }
    }

    bb3: {
        _17 = move _14;                  // scope 4 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:51:5: 51:12
        _16 = <[closure@ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:37:13: 37:15] as FnOnce<()>>::call_once(move _17, move _18) -> [return: bb4, unwind: bb6]; // scope 4 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:51:5: 51:14
                                         // mir::Constant
                                         // + span: ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:51:5: 51:12
                                         // + literal: Const { ty: extern "rust-call" fn([closure@ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:37:13: 37:15], ()) -> <[closure@ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:37:13: 37:15] as FnOnce<()>>::Output {<[closure@ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:37:13: 37:15] as FnOnce<()>>::call_once}, val: Value(<ZST>) }
    }

    bb4: {
        drop(_13) -> [return: bb5, unwind: bb9]; // scope 2 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:52:1: 52:2
    }

    bb5: {
        _19 = const false;               // scope 0 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:52:1: 52:2
        return;                          // scope 0 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:52:2: 52:2
    }

    bb6 (cleanup): {
        drop(_13) -> bb9;                // scope 2 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:52:1: 52:2
    }

    bb7 (cleanup): {
        resume;                          // scope 0 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:34:1: 52:2
    }

    bb8 (cleanup): {
        drop(_1) -> bb7;                 // scope 0 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:52:1: 52:2
    }

    bb9 (cleanup): {
        switchInt(_19) -> [0: bb7, otherwise: bb8]; // scope 0 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:52:1: 52:2
    }
}

fn test_multi_issues::{closure#0}(_1: [closure@ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:37:13: 37:15]) -> () {
    debug f1 => (_1.0: U);               // in scope 0 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:35:9: 35:11
    debug f2 => (_1.1: U);               // in scope 0 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:36:9: 36:11
    let mut _0: ();                      // return place in scope 0 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:37:16: 37:16
    scope 1 {
        let _2: S;                       // in scope 1 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:43:13: 43:17
        scope 2 {
            debug _f_1 => _2;            // in scope 2 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:43:13: 43:17
            let _3: T;                   // in scope 2 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:45:13: 45:17
            scope 3 {
                debug _f_2 => _3;        // in scope 3 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:45:13: 45:17
            }
        }
    }

    bb0: {
        _2 = move ((_1.0: U).0: S);      // scope 1 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:43:20: 43:24
        _3 = move ((_1.1: U).1: T);      // scope 2 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:45:20: 45:24
        drop(_2) -> [return: bb1, unwind: bb4]; // scope 1 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:47:5: 47:6
    }

    bb1: {
        drop(((_1.1: U).0: S)) -> bb3;   // scope 0 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:47:5: 47:6
    }

    bb2 (cleanup): {
        resume;                          // scope 0 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:37:13: 47:6
    }

    bb3: {
        return;                          // scope 0 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:47:6: 47:6
    }

    bb4 (cleanup): {
        drop(((_1.1: U).0: S)) -> bb2;   // scope 0 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:47:5: 47:6
    }
}

fn test_capturing_all_disjoint_fields_individually() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:55:54: 55:54
    let _1: U;                           // in scope 0 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:56:9: 56:11
    let mut _2: S;                       // in scope 0 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:56:16: 56:35
    let mut _3: Foo;                     // in scope 0 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:56:18: 56:34
    let mut _4: &str;                    // in scope 0 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:56:28: 56:33
    let _5: &str;                        // in scope 0 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:56:28: 56:33
    let mut _6: T;                       // in scope 0 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:56:37: 56:41
    let mut _9: &[closure@ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:57:13: 57:15]; // in scope 0 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:68:19: 68:28
    let _10: ();                         // in scope 0 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:70:5: 70:14
    let mut _11: [closure@ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:57:13: 57:15]; // in scope 0 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:70:5: 70:12
    let mut _12: ();                     // in scope 0 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:70:5: 70:14
    scope 1 {
        debug f1 => _1;                  // in scope 1 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:56:9: 56:11
        let _7: [closure@ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:57:13: 57:15]; // in scope 1 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:57:9: 57:10
        scope 2 {
            debug c => _7;               // in scope 2 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:57:9: 57:10
            let _8: [closure@ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:57:13: 57:15]; // in scope 2 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:68:9: 68:16
            scope 3 {
                debug c_clone => _8;     // in scope 3 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:68:9: 68:16
            }
        }
    }

    bb0: {
        _5 = const "foo";                // scope 0 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:56:28: 56:33
                                         // mir::Constant
                                         // + span: ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:56:28: 56:33
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _4 = _5;                         // scope 0 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:56:28: 56:33
        _3 = Foo::from(move _4) -> bb1;  // scope 0 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:56:18: 56:34
                                         // mir::Constant
                                         // + span: ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:56:18: 56:27
                                         // + literal: Const { ty: for<'a> fn(&'a str) -> Foo {Foo::from}, val: Value(<ZST>) }
    }

    bb1: {
        _2 = S(move _3);                 // scope 0 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:56:16: 56:35
        _6 = const T(0_i32);             // scope 0 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:56:37: 56:41
                                         // mir::Constant
                                         // + span: ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:56:37: 56:41
                                         // + literal: Const { ty: T, val: Value(Scalar(0x00000000)) }
        _1 = U(move _2, move _6);        // scope 0 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:56:14: 56:42
        _7 = [closure@ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:57:13: 57:15] { f1: move _1 }; // scope 1 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:57:13: 66:6
                                         // closure
                                         // + def_id: DefId(0:20 ~ multi_diagnostics_fixed[f49d]::test_capturing_all_disjoint_fields_individually::{closure#0})
                                         // + substs: [
                                         //     i32,
                                         //     extern "rust-call" fn(()),
                                         //     (U,),
                                         // ]
        _9 = &_7;                        // scope 2 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:68:19: 68:28
        _8 = <[closure@ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:57:13: 57:15] as Clone>::clone(move _9) -> [return: bb2, unwind: bb5]; // scope 2 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:68:19: 68:28
                                         // mir::Constant
                                         // + span: ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:68:21: 68:26
                                         // + literal: Const { ty: for<'a> fn(&'a [closure@ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:57:13: 57:15]) -> [closure@ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:57:13: 57:15] {<[closure@ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:57:13: 57:15] as Clone>::clone}, val: Value(<ZST>) }
    }

    bb2: {
        _11 = move _8;                   // scope 3 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:70:5: 70:12
        _10 = <[closure@ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:57:13: 57:15] as FnOnce<()>>::call_once(move _11, move _12) -> [return: bb3, unwind: bb5]; // scope 3 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:70:5: 70:14
                                         // mir::Constant
                                         // + span: ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:70:5: 70:12
                                         // + literal: Const { ty: extern "rust-call" fn([closure@ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:57:13: 57:15], ()) -> <[closure@ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:57:13: 57:15] as FnOnce<()>>::Output {<[closure@ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:57:13: 57:15] as FnOnce<()>>::call_once}, val: Value(<ZST>) }
    }

    bb3: {
        drop(_7) -> bb4;                 // scope 1 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:71:1: 71:2
    }

    bb4: {
        return;                          // scope 0 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:71:2: 71:2
    }

    bb5 (cleanup): {
        drop(_7) -> bb6;                 // scope 1 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:71:1: 71:2
    }

    bb6 (cleanup): {
        resume;                          // scope 0 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:55:1: 71:2
    }
}

fn test_capturing_all_disjoint_fields_individually::{closure#0}(_1: [closure@ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:57:13: 57:15]) -> () {
    debug f1 => (_1.0: U);               // in scope 0 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:56:9: 56:11
    let mut _0: ();                      // return place in scope 0 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:57:16: 57:16
    scope 1 {
        let _2: S;                       // in scope 1 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:63:13: 63:17
        scope 2 {
            debug _f_1 => _2;            // in scope 2 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:63:13: 63:17
            let _3: T;                   // in scope 2 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:65:13: 65:17
            scope 3 {
                debug _f_2 => _3;        // in scope 3 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:65:13: 65:17
            }
        }
    }

    bb0: {
        _2 = move ((_1.0: U).0: S);      // scope 1 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:63:20: 63:24
        _3 = move ((_1.0: U).1: T);      // scope 2 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:65:20: 65:24
        drop(_2) -> bb1;                 // scope 1 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:66:5: 66:6
    }

    bb1: {
        return;                          // scope 0 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:66:6: 66:6
    }
}

fn <impl at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:75:1: 75:18>::clone(_1: &U1) -> U1 {
    debug self => _1;                    // in scope 0 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:76:14: 76:19
    let mut _0: U1;                      // return place in scope 0 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:76:24: 76:28
    let mut _2: S;                       // in scope 0 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:77:12: 77:31
    let mut _3: Foo;                     // in scope 0 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:77:14: 77:30
    let mut _4: &str;                    // in scope 0 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:77:24: 77:29
    let _5: &str;                        // in scope 0 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:77:24: 77:29
    let mut _6: T;                       // in scope 0 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:77:33: 77:37
    let mut _7: S;                       // in scope 0 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:77:39: 77:58
    let mut _8: Foo;                     // in scope 0 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:77:41: 77:57
    let mut _9: &str;                    // in scope 0 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:77:51: 77:56
    let _10: &str;                       // in scope 0 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:77:51: 77:56

    bb0: {
        _5 = const "foo";                // scope 0 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:77:24: 77:29
                                         // mir::Constant
                                         // + span: ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:77:24: 77:29
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _4 = _5;                         // scope 0 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:77:24: 77:29
        _3 = Foo::from(move _4) -> bb1;  // scope 0 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:77:14: 77:30
                                         // mir::Constant
                                         // + span: ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:77:14: 77:23
                                         // + literal: Const { ty: for<'a> fn(&'a str) -> Foo {Foo::from}, val: Value(<ZST>) }
    }

    bb1: {
        _2 = S(move _3);                 // scope 0 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:77:12: 77:31
        _6 = const T(0_i32);             // scope 0 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:77:33: 77:37
                                         // mir::Constant
                                         // + span: ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:77:33: 77:37
                                         // + literal: Const { ty: T, val: Value(Scalar(0x00000000)) }
        _10 = const "bar";               // scope 0 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:77:51: 77:56
                                         // mir::Constant
                                         // + span: ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:77:51: 77:56
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _9 = _10;                        // scope 0 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:77:51: 77:56
        _8 = Foo::from(move _9) -> [return: bb2, unwind: bb3]; // scope 0 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:77:41: 77:57
                                         // mir::Constant
                                         // + span: ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:77:41: 77:50
                                         // + literal: Const { ty: for<'a> fn(&'a str) -> Foo {Foo::from}, val: Value(<ZST>) }
    }

    bb2: {
        _7 = S(move _8);                 // scope 0 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:77:39: 77:58
        _0 = U1(move _2, move _6, move _7); // scope 0 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:77:9: 77:59
        return;                          // scope 0 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:78:6: 78:6
    }

    bb3 (cleanup): {
        drop(_2) -> bb4;                 // scope 0 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:77:58: 77:59
    }

    bb4 (cleanup): {
        resume;                          // scope 0 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:76:5: 78:6
    }
}

fn test_capturing_several_disjoint_fields_individually_1() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:81:60: 81:60
    let _1: U1;                          // in scope 0 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:82:9: 82:11
    let mut _2: S;                       // in scope 0 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:82:17: 82:36
    let mut _3: Foo;                     // in scope 0 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:82:19: 82:35
    let mut _4: &str;                    // in scope 0 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:82:29: 82:34
    let _5: &str;                        // in scope 0 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:82:29: 82:34
    let mut _6: T;                       // in scope 0 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:82:38: 82:42
    let mut _7: S;                       // in scope 0 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:82:44: 82:63
    let mut _8: Foo;                     // in scope 0 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:82:46: 82:62
    let mut _9: &str;                    // in scope 0 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:82:56: 82:61
    let _10: &str;                       // in scope 0 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:82:56: 82:61
    let mut _13: &[closure@ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:83:13: 83:15]; // in scope 0 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:96:19: 96:28
    let _14: ();                         // in scope 0 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:98:5: 98:14
    let mut _15: [closure@ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:83:13: 83:15]; // in scope 0 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:98:5: 98:12
    let mut _16: ();                     // in scope 0 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:98:5: 98:14
    scope 1 {
        debug f1 => _1;                  // in scope 1 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:82:9: 82:11
        let _11: [closure@ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:83:13: 83:15]; // in scope 1 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:83:9: 83:10
        scope 2 {
            debug c => _11;              // in scope 2 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:83:9: 83:10
            let _12: [closure@ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:83:13: 83:15]; // in scope 2 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:96:9: 96:16
            scope 3 {
                debug c_clone => _12;    // in scope 3 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:96:9: 96:16
            }
        }
    }

    bb0: {
        _5 = const "foo";                // scope 0 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:82:29: 82:34
                                         // mir::Constant
                                         // + span: ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:82:29: 82:34
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _4 = _5;                         // scope 0 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:82:29: 82:34
        _3 = Foo::from(move _4) -> bb1;  // scope 0 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:82:19: 82:35
                                         // mir::Constant
                                         // + span: ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:82:19: 82:28
                                         // + literal: Const { ty: for<'a> fn(&'a str) -> Foo {Foo::from}, val: Value(<ZST>) }
    }

    bb1: {
        _2 = S(move _3);                 // scope 0 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:82:17: 82:36
        _6 = const T(0_i32);             // scope 0 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:82:38: 82:42
                                         // mir::Constant
                                         // + span: ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:82:38: 82:42
                                         // + literal: Const { ty: T, val: Value(Scalar(0x00000000)) }
        _10 = const "bar";               // scope 0 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:82:56: 82:61
                                         // mir::Constant
                                         // + span: ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:82:56: 82:61
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _9 = _10;                        // scope 0 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:82:56: 82:61
        _8 = Foo::from(move _9) -> [return: bb2, unwind: bb7]; // scope 0 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:82:46: 82:62
                                         // mir::Constant
                                         // + span: ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:82:46: 82:55
                                         // + literal: Const { ty: for<'a> fn(&'a str) -> Foo {Foo::from}, val: Value(<ZST>) }
    }

    bb2: {
        _7 = S(move _8);                 // scope 0 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:82:44: 82:63
        _1 = U1(move _2, move _6, move _7); // scope 0 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:82:14: 82:64
        _11 = [closure@ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:83:13: 83:15] { f1: move _1 }; // scope 1 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:83:13: 94:6
                                         // closure
                                         // + def_id: DefId(0:29 ~ multi_diagnostics_fixed[f49d]::test_capturing_several_disjoint_fields_individually_1::{closure#0})
                                         // + substs: [
                                         //     i32,
                                         //     extern "rust-call" fn(()),
                                         //     (U1,),
                                         // ]
        _13 = &_11;                      // scope 2 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:96:19: 96:28
        _12 = <[closure@ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:83:13: 83:15] as Clone>::clone(move _13) -> [return: bb3, unwind: bb6]; // scope 2 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:96:19: 96:28
                                         // mir::Constant
                                         // + span: ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:96:21: 96:26
                                         // + literal: Const { ty: for<'a> fn(&'a [closure@ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:83:13: 83:15]) -> [closure@ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:83:13: 83:15] {<[closure@ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:83:13: 83:15] as Clone>::clone}, val: Value(<ZST>) }
    }

    bb3: {
        _15 = move _12;                  // scope 3 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:98:5: 98:12
        _14 = <[closure@ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:83:13: 83:15] as FnOnce<()>>::call_once(move _15, move _16) -> [return: bb4, unwind: bb6]; // scope 3 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:98:5: 98:14
                                         // mir::Constant
                                         // + span: ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:98:5: 98:12
                                         // + literal: Const { ty: extern "rust-call" fn([closure@ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:83:13: 83:15], ()) -> <[closure@ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:83:13: 83:15] as FnOnce<()>>::Output {<[closure@ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:83:13: 83:15] as FnOnce<()>>::call_once}, val: Value(<ZST>) }
    }

    bb4: {
        drop(_11) -> bb5;                // scope 1 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:99:1: 99:2
    }

    bb5: {
        return;                          // scope 0 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:99:2: 99:2
    }

    bb6 (cleanup): {
        drop(_11) -> bb8;                // scope 1 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:99:1: 99:2
    }

    bb7 (cleanup): {
        drop(_2) -> bb8;                 // scope 0 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:82:63: 82:64
    }

    bb8 (cleanup): {
        resume;                          // scope 0 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:81:1: 99:2
    }
}

fn test_capturing_several_disjoint_fields_individually_1::{closure#0}(_1: [closure@ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:83:13: 83:15]) -> () {
    debug f1 => (_1.0: U1);              // in scope 0 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:82:9: 82:11
    let mut _0: ();                      // return place in scope 0 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:83:16: 83:16
    scope 1 {
        let _2: S;                       // in scope 1 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:90:13: 90:17
        scope 2 {
            debug _f_0 => _2;            // in scope 2 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:90:13: 90:17
            let _3: S;                   // in scope 2 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:92:13: 92:17
            scope 3 {
                debug _f_2 => _3;        // in scope 3 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:92:13: 92:17
            }
        }
    }

    bb0: {
        _2 = move ((_1.0: U1).0: S);     // scope 1 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:90:20: 90:24
        _3 = move ((_1.0: U1).2: S);     // scope 2 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:92:20: 92:24
        drop(_3) -> [return: bb1, unwind: bb3]; // scope 2 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:94:5: 94:6
    }

    bb1: {
        drop(_2) -> bb2;                 // scope 1 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:94:5: 94:6
    }

    bb2: {
        return;                          // scope 0 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:94:6: 94:6
    }

    bb3 (cleanup): {
        drop(_2) -> bb4;                 // scope 1 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:94:5: 94:6
    }

    bb4 (cleanup): {
        resume;                          // scope 0 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:83:13: 94:6
    }
}

fn test_capturing_several_disjoint_fields_individually_2() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:101:60: 101:60
    let _1: U1;                          // in scope 0 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:102:9: 102:11
    let mut _2: S;                       // in scope 0 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:102:17: 102:36
    let mut _3: Foo;                     // in scope 0 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:102:19: 102:35
    let mut _4: &str;                    // in scope 0 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:102:29: 102:34
    let _5: &str;                        // in scope 0 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:102:29: 102:34
    let mut _6: T;                       // in scope 0 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:102:38: 102:42
    let mut _7: S;                       // in scope 0 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:102:44: 102:63
    let mut _8: Foo;                     // in scope 0 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:102:46: 102:62
    let mut _9: &str;                    // in scope 0 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:102:56: 102:61
    let _10: &str;                       // in scope 0 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:102:56: 102:61
    let mut _13: &[closure@ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:103:13: 103:15]; // in scope 0 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:115:19: 115:28
    let _14: ();                         // in scope 0 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:117:5: 117:14
    let mut _15: [closure@ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:103:13: 103:15]; // in scope 0 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:117:5: 117:12
    let mut _16: ();                     // in scope 0 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:117:5: 117:14
    scope 1 {
        debug f1 => _1;                  // in scope 1 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:102:9: 102:11
        let _11: [closure@ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:103:13: 103:15]; // in scope 1 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:103:9: 103:10
        scope 2 {
            debug c => _11;              // in scope 2 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:103:9: 103:10
            let _12: [closure@ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:103:13: 103:15]; // in scope 2 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:115:9: 115:16
            scope 3 {
                debug c_clone => _12;    // in scope 3 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:115:9: 115:16
            }
        }
    }

    bb0: {
        _5 = const "foo";                // scope 0 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:102:29: 102:34
                                         // mir::Constant
                                         // + span: ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:102:29: 102:34
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _4 = _5;                         // scope 0 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:102:29: 102:34
        _3 = Foo::from(move _4) -> bb1;  // scope 0 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:102:19: 102:35
                                         // mir::Constant
                                         // + span: ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:102:19: 102:28
                                         // + literal: Const { ty: for<'a> fn(&'a str) -> Foo {Foo::from}, val: Value(<ZST>) }
    }

    bb1: {
        _2 = S(move _3);                 // scope 0 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:102:17: 102:36
        _6 = const T(0_i32);             // scope 0 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:102:38: 102:42
                                         // mir::Constant
                                         // + span: ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:102:38: 102:42
                                         // + literal: Const { ty: T, val: Value(Scalar(0x00000000)) }
        _10 = const "bar";               // scope 0 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:102:56: 102:61
                                         // mir::Constant
                                         // + span: ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:102:56: 102:61
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _9 = _10;                        // scope 0 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:102:56: 102:61
        _8 = Foo::from(move _9) -> [return: bb2, unwind: bb7]; // scope 0 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:102:46: 102:62
                                         // mir::Constant
                                         // + span: ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:102:46: 102:55
                                         // + literal: Const { ty: for<'a> fn(&'a str) -> Foo {Foo::from}, val: Value(<ZST>) }
    }

    bb2: {
        _7 = S(move _8);                 // scope 0 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:102:44: 102:63
        _1 = U1(move _2, move _6, move _7); // scope 0 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:102:14: 102:64
        _11 = [closure@ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:103:13: 103:15] { f1: move _1 }; // scope 1 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:103:13: 113:6
                                         // closure
                                         // + def_id: DefId(0:31 ~ multi_diagnostics_fixed[f49d]::test_capturing_several_disjoint_fields_individually_2::{closure#0})
                                         // + substs: [
                                         //     i32,
                                         //     extern "rust-call" fn(()),
                                         //     (U1,),
                                         // ]
        _13 = &_11;                      // scope 2 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:115:19: 115:28
        _12 = <[closure@ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:103:13: 103:15] as Clone>::clone(move _13) -> [return: bb3, unwind: bb6]; // scope 2 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:115:19: 115:28
                                         // mir::Constant
                                         // + span: ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:115:21: 115:26
                                         // + literal: Const { ty: for<'a> fn(&'a [closure@ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:103:13: 103:15]) -> [closure@ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:103:13: 103:15] {<[closure@ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:103:13: 103:15] as Clone>::clone}, val: Value(<ZST>) }
    }

    bb3: {
        _15 = move _12;                  // scope 3 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:117:5: 117:12
        _14 = <[closure@ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:103:13: 103:15] as FnOnce<()>>::call_once(move _15, move _16) -> [return: bb4, unwind: bb6]; // scope 3 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:117:5: 117:14
                                         // mir::Constant
                                         // + span: ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:117:5: 117:12
                                         // + literal: Const { ty: extern "rust-call" fn([closure@ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:103:13: 103:15], ()) -> <[closure@ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:103:13: 103:15] as FnOnce<()>>::Output {<[closure@ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:103:13: 103:15] as FnOnce<()>>::call_once}, val: Value(<ZST>) }
    }

    bb4: {
        drop(_11) -> bb5;                // scope 1 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:118:1: 118:2
    }

    bb5: {
        return;                          // scope 0 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:118:2: 118:2
    }

    bb6 (cleanup): {
        drop(_11) -> bb8;                // scope 1 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:118:1: 118:2
    }

    bb7 (cleanup): {
        drop(_2) -> bb8;                 // scope 0 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:102:63: 102:64
    }

    bb8 (cleanup): {
        resume;                          // scope 0 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:101:1: 118:2
    }
}

fn test_capturing_several_disjoint_fields_individually_2::{closure#0}(_1: [closure@ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:103:13: 103:15]) -> () {
    debug f1 => (_1.0: U1);              // in scope 0 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:102:9: 102:11
    let mut _0: ();                      // return place in scope 0 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:103:16: 103:16
    scope 1 {
        let _2: S;                       // in scope 1 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:109:13: 109:17
        scope 2 {
            debug _f_0 => _2;            // in scope 2 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:109:13: 109:17
            let _3: T;                   // in scope 2 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:111:13: 111:17
            scope 3 {
                debug _f_1 => _3;        // in scope 3 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:111:13: 111:17
            }
        }
    }

    bb0: {
        _2 = move ((_1.0: U1).0: S);     // scope 1 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:109:20: 109:24
        _3 = move ((_1.0: U1).1: T);     // scope 2 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:111:20: 111:24
        drop(_2) -> [return: bb1, unwind: bb4]; // scope 1 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:113:5: 113:6
    }

    bb1: {
        drop(((_1.0: U1).2: S)) -> bb3;  // scope 0 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:113:5: 113:6
    }

    bb2 (cleanup): {
        resume;                          // scope 0 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:103:13: 113:6
    }

    bb3: {
        return;                          // scope 0 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:113:6: 113:6
    }

    bb4 (cleanup): {
        drop(((_1.0: U1).2: S)) -> bb2;  // scope 0 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:113:5: 113:6
    }
}

fn test_multi_traits_issues() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:130:31: 130:31
    let mut _1: i32;                     // in scope 0 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:131:9: 131:15
    let mut _3: *mut i32;                // in scope 0 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:132:24: 132:43
    let mut _4: &mut i32;                // in scope 0 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:132:24: 132:31
    let mut _6: CustomInt;               // in scope 0 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:133:29: 133:31
    let mut _9: *mut i32;                // in scope 0 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:136:29: 136:48
    let mut _10: &mut i32;               // in scope 0 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:136:29: 136:36
    let _11: std::thread::JoinHandle<()>; // in scope 0 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:137:5: 148:9
    let mut _12: [closure@ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:137:19: 137:26]; // in scope 0 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:137:19: 148:8
    scope 1 {
        debug f1 => _1;                  // in scope 1 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:131:9: 131:15
        let _2: CustomInt;               // in scope 1 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:132:9: 132:11
        scope 2 {
            debug f1 => _2;              // in scope 2 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:132:9: 132:11
            let _5: SyncPointer;         // in scope 2 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:133:9: 133:14
            scope 3 {
                debug fptr1 => _5;       // in scope 3 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:133:9: 133:14
                let mut _7: i32;         // in scope 3 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:135:9: 135:15
                scope 4 {
                    debug f2 => _7;      // in scope 4 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:135:9: 135:15
                    let _8: SendPointer; // in scope 4 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:136:9: 136:14
                    scope 5 {
                        debug fptr2 => _8; // in scope 5 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:136:9: 136:14
                    }
                }
            }
        }
    }

    bb0: {
        _1 = const 10_i32;               // scope 0 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:131:18: 131:20
        _4 = &mut _1;                    // scope 1 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:132:24: 132:31
        _3 = &raw mut (*_4);             // scope 1 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:132:24: 132:31
        _2 = CustomInt(move _3);         // scope 1 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:132:14: 132:44
        _6 = move _2;                    // scope 2 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:133:29: 133:31
        _5 = SyncPointer(move _6);       // scope 2 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:133:17: 133:32
        _7 = const 10_i32;               // scope 3 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:135:18: 135:20
        _10 = &mut _7;                   // scope 4 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:136:29: 136:36
        _9 = &raw mut (*_10);            // scope 4 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:136:29: 136:36
        _8 = SendPointer(move _9);       // scope 4 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:136:17: 136:49
        _12 = [closure@ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:137:19: 137:26] { fptr1: move _5, fptr2: move _8 }; // scope 5 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:137:19: 148:8
                                         // closure
                                         // + def_id: DefId(0:45 ~ multi_diagnostics_fixed[f49d]::test_multi_traits_issues::{closure#0})
                                         // + substs: [
                                         //     i32,
                                         //     extern "rust-call" fn(()),
                                         //     (SyncPointer, SendPointer),
                                         // ]
        _11 = spawn::<[closure@ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:137:19: 137:26], ()>(move _12) -> bb1; // scope 5 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:137:5: 148:9
                                         // mir::Constant
                                         // + span: ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:137:5: 137:18
                                         // + literal: Const { ty: fn([closure@ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:137:19: 137:26]) -> JoinHandle<()> {spawn::<[closure@ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:137:19: 137:26], ()>}, val: Value(<ZST>) }
    }

    bb1: {
        drop(_11) -> bb2;                // scope 5 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:148:9: 148:10
    }

    bb2: {
        return;                          // scope 0 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:149:2: 149:2
    }
}

fn test_multi_traits_issues::{closure#0}(_1: [closure@ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:137:19: 137:26]) -> () {
    debug fptr1 => (_1.0: SyncPointer);  // in scope 0 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:133:9: 133:14
    debug fptr2 => (_1.1: SendPointer);  // in scope 0 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:136:9: 136:14
    let mut _0: ();                      // return place in scope 0 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:137:27: 137:27
    let mut _2: *mut i32;                // in scope 0 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:137:19: 148:8
    let mut _3: *mut i32;                // in scope 0 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:137:19: 148:8
    scope 1 {
        scope 2 {
        }
    }

    bb0: {
        _2 = deref_copy (((_1.0: SyncPointer).0: CustomInt).0: *mut i32); // scope 2 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:144:9: 144:24
        (*_2) = const 20_i32;            // scope 2 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:144:9: 144:24
        _3 = deref_copy ((_1.1: SendPointer).0: *mut i32); // scope 2 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:146:9: 146:22
        (*_3) = const 20_i32;            // scope 2 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:146:9: 146:22
        return;                          // scope 0 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:148:8: 148:8
    }
}

fn main() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:151:11: 151:11
    let _1: ();                          // in scope 0 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:152:5: 152:24
    let _2: ();                          // in scope 0 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:153:5: 153:54
    let _3: ();                          // in scope 0 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:154:5: 154:60
    let _4: ();                          // in scope 0 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:155:5: 155:60
    let _5: ();                          // in scope 0 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:156:5: 156:31

    bb0: {
        _1 = test_multi_issues() -> bb1; // scope 0 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:152:5: 152:24
                                         // mir::Constant
                                         // + span: ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:152:5: 152:22
                                         // + literal: Const { ty: fn() {test_multi_issues}, val: Value(<ZST>) }
    }

    bb1: {
        _2 = test_capturing_all_disjoint_fields_individually() -> bb2; // scope 0 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:153:5: 153:54
                                         // mir::Constant
                                         // + span: ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:153:5: 153:52
                                         // + literal: Const { ty: fn() {test_capturing_all_disjoint_fields_individually}, val: Value(<ZST>) }
    }

    bb2: {
        _3 = test_capturing_several_disjoint_fields_individually_1() -> bb3; // scope 0 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:154:5: 154:60
                                         // mir::Constant
                                         // + span: ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:154:5: 154:58
                                         // + literal: Const { ty: fn() {test_capturing_several_disjoint_fields_individually_1}, val: Value(<ZST>) }
    }

    bb3: {
        _4 = test_capturing_several_disjoint_fields_individually_2() -> bb4; // scope 0 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:155:5: 155:60
                                         // mir::Constant
                                         // + span: ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:155:5: 155:58
                                         // + literal: Const { ty: fn() {test_capturing_several_disjoint_fields_individually_2}, val: Value(<ZST>) }
    }

    bb4: {
        _5 = test_multi_traits_issues() -> bb5; // scope 0 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:156:5: 156:31
                                         // mir::Constant
                                         // + span: ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:156:5: 156:29
                                         // + literal: Const { ty: fn() {test_multi_traits_issues}, val: Value(<ZST>) }
    }

    bb5: {
        return;                          // scope 0 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:157:2: 157:2
    }
}

fn Foo(_1: String) -> Foo {
    let mut _0: Foo;                     // return place in scope 0 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:8:1: 8:11

    bb0: {
        _0 = Foo(move _1);               // scope 0 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:8:1: 8:11
        return;                          // scope 0 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:8:1: 8:11
    }
}

// MIR FOR CTFE
fn Foo(_1: String) -> Foo {
    let mut _0: Foo;                     // return place in scope 0 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:8:1: 8:11

    bb0: {
        _0 = Foo(move _1);               // scope 0 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:8:1: 8:11
        return;                          // scope 0 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:8:1: 8:11
    }
}

fn S(_1: Foo) -> S {
    let mut _0: S;                       // return place in scope 0 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:21:1: 21:9

    bb0: {
        _0 = S(move _1);                 // scope 0 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:21:1: 21:9
        return;                          // scope 0 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:21:1: 21:9
    }
}

// MIR FOR CTFE
fn S(_1: Foo) -> S {
    let mut _0: S;                       // return place in scope 0 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:21:1: 21:9

    bb0: {
        _0 = S(move _1);                 // scope 0 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:21:1: 21:9
        return;                          // scope 0 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:21:1: 21:9
    }
}

fn T(_1: i32) -> T {
    let mut _0: T;                       // return place in scope 0 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:24:1: 24:9

    bb0: {
        _0 = T(move _1);                 // scope 0 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:24:1: 24:9
        return;                          // scope 0 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:24:1: 24:9
    }
}

// MIR FOR CTFE
fn T(_1: i32) -> T {
    let mut _0: T;                       // return place in scope 0 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:24:1: 24:9

    bb0: {
        _0 = T(move _1);                 // scope 0 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:24:1: 24:9
        return;                          // scope 0 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:24:1: 24:9
    }
}

fn U(_1: S, _2: T) -> U {
    let mut _0: U;                       // return place in scope 0 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:26:1: 26:9

    bb0: {
        _0 = U(move _1, move _2);        // scope 0 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:26:1: 26:9
        return;                          // scope 0 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:26:1: 26:9
    }
}

// MIR FOR CTFE
fn U(_1: S, _2: T) -> U {
    let mut _0: U;                       // return place in scope 0 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:26:1: 26:9

    bb0: {
        _0 = U(move _1, move _2);        // scope 0 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:26:1: 26:9
        return;                          // scope 0 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:26:1: 26:9
    }
}

fn U1(_1: S, _2: T, _3: S) -> U1 {
    let mut _0: U1;                      // return place in scope 0 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:73:1: 73:10

    bb0: {
        _0 = U1(move _1, move _2, move _3); // scope 0 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:73:1: 73:10
        return;                          // scope 0 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:73:1: 73:10
    }
}

// MIR FOR CTFE
fn U1(_1: S, _2: T, _3: S) -> U1 {
    let mut _0: U1;                      // return place in scope 0 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:73:1: 73:10

    bb0: {
        _0 = U1(move _1, move _2, move _3); // scope 0 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:73:1: 73:10
        return;                          // scope 0 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:73:1: 73:10
    }
}

fn SendPointer(_1: *mut i32) -> SendPointer {
    let mut _0: SendPointer;             // return place in scope 0 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:122:1: 122:19

    bb0: {
        _0 = SendPointer(move _1);       // scope 0 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:122:1: 122:19
        return;                          // scope 0 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:122:1: 122:19
    }
}

// MIR FOR CTFE
fn SendPointer(_1: *mut i32) -> SendPointer {
    let mut _0: SendPointer;             // return place in scope 0 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:122:1: 122:19

    bb0: {
        _0 = SendPointer(move _1);       // scope 0 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:122:1: 122:19
        return;                          // scope 0 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:122:1: 122:19
    }
}

fn CustomInt(_1: *mut i32) -> CustomInt {
    let mut _0: CustomInt;               // return place in scope 0 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:125:1: 125:17

    bb0: {
        _0 = CustomInt(move _1);         // scope 0 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:125:1: 125:17
        return;                          // scope 0 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:125:1: 125:17
    }
}

// MIR FOR CTFE
fn CustomInt(_1: *mut i32) -> CustomInt {
    let mut _0: CustomInt;               // return place in scope 0 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:125:1: 125:17

    bb0: {
        _0 = CustomInt(move _1);         // scope 0 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:125:1: 125:17
        return;                          // scope 0 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:125:1: 125:17
    }
}

fn SyncPointer(_1: CustomInt) -> SyncPointer {
    let mut _0: SyncPointer;             // return place in scope 0 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:126:1: 126:19

    bb0: {
        _0 = SyncPointer(move _1);       // scope 0 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:126:1: 126:19
        return;                          // scope 0 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:126:1: 126:19
    }
}

// MIR FOR CTFE
fn SyncPointer(_1: CustomInt) -> SyncPointer {
    let mut _0: SyncPointer;             // return place in scope 0 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:126:1: 126:19

    bb0: {
        _0 = SyncPointer(move _1);       // scope 0 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:126:1: 126:19
        return;                          // scope 0 at ui/closures/2229_closure_analysis/migrations/multi_diagnostics_fixed.rs:126:1: 126:19
    }
}
