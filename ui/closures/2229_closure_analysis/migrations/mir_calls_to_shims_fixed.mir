// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
fn foo_diverges() -> ! {
    let mut _0: !;                       // return place in scope 0 at ui/closures/2229_closure_analysis/migrations/mir_calls_to_shims_fixed.rs:11:22: 11:23
    let mut _1: !;                       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/panic.rs:19:9: 19:50

    bb0: {
        _1 = begin_panic::<&str>(const "explicit panic"); // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/panic.rs:19:9: 19:50
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/panic.rs:19:9: 19:32
                                         // + literal: Const { ty: fn(&str) -> ! {begin_panic::<&str>}, val: Value(<ZST>) }
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/panic.rs:19:33: 19:49
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
    }
}

fn assert_panics(_1: F) -> () {
    debug f => _1;                       // in scope 0 at ui/closures/2229_closure_analysis/migrations/mir_calls_to_shims_fixed.rs:15:21: 15:22
    let mut _0: ();                      // return place in scope 0 at ui/closures/2229_closure_analysis/migrations/mir_calls_to_shims_fixed.rs:16:1: 16:1
    let _2: std::panic::AssertUnwindSafe<F>; // in scope 0 at ui/closures/2229_closure_analysis/migrations/mir_calls_to_shims_fixed.rs:19:9: 19:10
    let mut _3: F;                       // in scope 0 at ui/closures/2229_closure_analysis/migrations/mir_calls_to_shims_fixed.rs:19:37: 19:38
    let mut _5: [closure@ui/closures/2229_closure_analysis/migrations/mir_calls_to_shims_fixed.rs:20:38: 20:45]; // in scope 0 at ui/closures/2229_closure_analysis/migrations/mir_calls_to_shims_fixed.rs:20:38: 29:6
    let mut _6: isize;                   // in scope 0 at ui/closures/2229_closure_analysis/migrations/mir_calls_to_shims_fixed.rs:30:12: 30:18
    let mut _7: !;                       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/panic.rs:22:9: 22:38
    scope 1 {
        debug f => _2;                   // in scope 1 at ui/closures/2229_closure_analysis/migrations/mir_calls_to_shims_fixed.rs:19:9: 19:10
        let _4: std::result::Result<(), std::boxed::Box<dyn std::any::Any + std::marker::Send>>; // in scope 1 at ui/closures/2229_closure_analysis/migrations/mir_calls_to_shims_fixed.rs:20:9: 20:15
        scope 2 {
            debug result => _4;          // in scope 2 at ui/closures/2229_closure_analysis/migrations/mir_calls_to_shims_fixed.rs:20:9: 20:15
            scope 3 {
            }
        }
    }

    bb0: {
        _3 = move _1;                    // scope 0 at ui/closures/2229_closure_analysis/migrations/mir_calls_to_shims_fixed.rs:19:37: 19:38
        _2 = AssertUnwindSafe::<F>(move _3); // scope 0 at ui/closures/2229_closure_analysis/migrations/mir_calls_to_shims_fixed.rs:19:13: 19:39
        _5 = [closure@ui/closures/2229_closure_analysis/migrations/mir_calls_to_shims_fixed.rs:20:38: 20:45] { f: move _2 }; // scope 1 at ui/closures/2229_closure_analysis/migrations/mir_calls_to_shims_fixed.rs:20:38: 29:6
                                         // closure
                                         // + def_id: DefId(0:7 ~ mir_calls_to_shims_fixed[eca0]::assert_panics::{closure#0})
                                         // + substs: [
                                         //     F,
                                         //     i32,
                                         //     extern "rust-call" fn(()),
                                         //     (std::panic::AssertUnwindSafe<F>,),
                                         // ]
        _4 = catch_unwind::<[closure@ui/closures/2229_closure_analysis/migrations/mir_calls_to_shims_fixed.rs:20:38: 20:45], ()>(move _5) -> bb1; // scope 1 at ui/closures/2229_closure_analysis/migrations/mir_calls_to_shims_fixed.rs:20:18: 29:7
                                         // mir::Constant
                                         // + span: ui/closures/2229_closure_analysis/migrations/mir_calls_to_shims_fixed.rs:20:18: 20:37
                                         // + literal: Const { ty: fn([closure@ui/closures/2229_closure_analysis/migrations/mir_calls_to_shims_fixed.rs:20:38: 20:45]) -> Result<(), Box<(dyn Any + Send + 'static)>> {catch_unwind::<[closure@ui/closures/2229_closure_analysis/migrations/mir_calls_to_shims_fixed.rs:20:38: 20:45], ()>}, val: Value(<ZST>) }
    }

    bb1: {
        _6 = discriminant(_4);           // scope 3 at ui/closures/2229_closure_analysis/migrations/mir_calls_to_shims_fixed.rs:30:12: 30:18
        switchInt(move _6) -> [0: bb2, otherwise: bb3]; // scope 3 at ui/closures/2229_closure_analysis/migrations/mir_calls_to_shims_fixed.rs:30:12: 30:18
    }

    bb2: {
        _7 = begin_panic::<&str>(const "diverging function returned") -> bb5; // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/panic.rs:22:9: 22:38
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/panic.rs:22:9: 22:32
                                         // + literal: Const { ty: fn(&str) -> ! {begin_panic::<&str>}, val: Value(<ZST>) }
                                         // mir::Constant
                                         // + span: ui/closures/2229_closure_analysis/migrations/mir_calls_to_shims_fixed.rs:31:16: 31:45
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
    }

    bb3: {
        drop(_4) -> bb4;                 // scope 1 at ui/closures/2229_closure_analysis/migrations/mir_calls_to_shims_fixed.rs:33:1: 33:2
    }

    bb4: {
        return;                          // scope 0 at ui/closures/2229_closure_analysis/migrations/mir_calls_to_shims_fixed.rs:33:2: 33:2
    }

    bb5 (cleanup): {
        drop(_4) -> bb6;                 // scope 1 at ui/closures/2229_closure_analysis/migrations/mir_calls_to_shims_fixed.rs:33:1: 33:2
    }

    bb6 (cleanup): {
        resume;                          // scope 0 at ui/closures/2229_closure_analysis/migrations/mir_calls_to_shims_fixed.rs:15:1: 33:2
    }
}

fn assert_panics::{closure#0}(_1: [closure@ui/closures/2229_closure_analysis/migrations/mir_calls_to_shims_fixed.rs:20:38: 20:45]) -> () {
    debug f => (_1.0: std::panic::AssertUnwindSafe<F>); // in scope 0 at ui/closures/2229_closure_analysis/migrations/mir_calls_to_shims_fixed.rs:19:9: 19:10
    let mut _0: ();                      // return place in scope 0 at ui/closures/2229_closure_analysis/migrations/mir_calls_to_shims_fixed.rs:20:46: 20:46
    let mut _2: F;                       // in scope 0 at ui/closures/2229_closure_analysis/migrations/mir_calls_to_shims_fixed.rs:27:9: 27:12
    let mut _3: ();                      // in scope 0 at ui/closures/2229_closure_analysis/migrations/mir_calls_to_shims_fixed.rs:27:9: 27:14
    scope 1 {
    }

    bb0: {
        _2 = move ((_1.0: std::panic::AssertUnwindSafe<F>).0: F); // scope 1 at ui/closures/2229_closure_analysis/migrations/mir_calls_to_shims_fixed.rs:27:9: 27:12
        _0 = <F as FnOnce<()>>::call_once(move _2, move _3) -> bb1; // scope 1 at ui/closures/2229_closure_analysis/migrations/mir_calls_to_shims_fixed.rs:27:9: 27:14
                                         // mir::Constant
                                         // + span: ui/closures/2229_closure_analysis/migrations/mir_calls_to_shims_fixed.rs:27:9: 27:12
                                         // + literal: Const { ty: extern "rust-call" fn(F, ()) -> <F as FnOnce<()>>::Output {<F as FnOnce<()>>::call_once}, val: Value(<ZST>) }
    }

    bb1: {
        return;                          // scope 0 at ui/closures/2229_closure_analysis/migrations/mir_calls_to_shims_fixed.rs:29:6: 29:6
    }
}

fn test_fn_ptr_panic(_1: T) -> () {
    debug t => _1;                       // in scope 0 at ui/closures/2229_closure_analysis/migrations/mir_calls_to_shims_fixed.rs:35:25: 35:30
    let mut _0: ();                      // return place in scope 0 at ui/closures/2229_closure_analysis/migrations/mir_calls_to_shims_fixed.rs:36:1: 36:1
    let _2: for<'a> extern "rust-call" fn(&'a T, ()) -> <T as std::ops::FnOnce<()>>::Output {<T as std::ops::Fn<()>>::call}; // in scope 0 at ui/closures/2229_closure_analysis/migrations/mir_calls_to_shims_fixed.rs:39:9: 39:14
    let _3: ();                          // in scope 0 at ui/closures/2229_closure_analysis/migrations/mir_calls_to_shims_fixed.rs:40:5: 40:36
    let mut _4: [closure@ui/closures/2229_closure_analysis/migrations/mir_calls_to_shims_fixed.rs:40:19: 40:21]; // in scope 0 at ui/closures/2229_closure_analysis/migrations/mir_calls_to_shims_fixed.rs:40:19: 40:35
    let mut _5: &for<'a> extern "rust-call" fn(&'a T, ()) -> <T as std::ops::FnOnce<()>>::Output {<T as std::ops::Fn<()>>::call}; // in scope 0 at ui/closures/2229_closure_analysis/migrations/mir_calls_to_shims_fixed.rs:40:19: 40:35
    let mut _6: &T;                      // in scope 0 at ui/closures/2229_closure_analysis/migrations/mir_calls_to_shims_fixed.rs:40:19: 40:35
    let _8: ();                          // in scope 0 at ui/closures/2229_closure_analysis/migrations/mir_calls_to_shims_fixed.rs:42:5: 42:44
    let mut _9: [closure@ui/closures/2229_closure_analysis/migrations/mir_calls_to_shims_fixed.rs:42:19: 42:21]; // in scope 0 at ui/closures/2229_closure_analysis/migrations/mir_calls_to_shims_fixed.rs:42:19: 42:43
    let mut _10: &for<'a> extern "rust-call" fn(&'a mut T, ()) -> <T as std::ops::FnOnce<()>>::Output {<T as std::ops::FnMut<()>>::call_mut}; // in scope 0 at ui/closures/2229_closure_analysis/migrations/mir_calls_to_shims_fixed.rs:42:19: 42:43
    let mut _11: &mut T;                 // in scope 0 at ui/closures/2229_closure_analysis/migrations/mir_calls_to_shims_fixed.rs:42:19: 42:43
    let _13: ();                         // in scope 0 at ui/closures/2229_closure_analysis/migrations/mir_calls_to_shims_fixed.rs:44:5: 44:40
    let mut _14: [closure@ui/closures/2229_closure_analysis/migrations/mir_calls_to_shims_fixed.rs:44:19: 44:21]; // in scope 0 at ui/closures/2229_closure_analysis/migrations/mir_calls_to_shims_fixed.rs:44:19: 44:39
    let mut _15: &extern "rust-call" fn(T, ()) -> <T as std::ops::FnOnce<()>>::Output {<T as std::ops::FnOnce<()>>::call_once}; // in scope 0 at ui/closures/2229_closure_analysis/migrations/mir_calls_to_shims_fixed.rs:44:19: 44:39
    let mut _16: bool;                   // in scope 0 at ui/closures/2229_closure_analysis/migrations/mir_calls_to_shims_fixed.rs:45:1: 45:2
    scope 1 {
        debug as_fn => _2;               // in scope 1 at ui/closures/2229_closure_analysis/migrations/mir_calls_to_shims_fixed.rs:39:9: 39:14
        let _7: for<'a> extern "rust-call" fn(&'a mut T, ()) -> <T as std::ops::FnOnce<()>>::Output {<T as std::ops::FnMut<()>>::call_mut}; // in scope 1 at ui/closures/2229_closure_analysis/migrations/mir_calls_to_shims_fixed.rs:41:9: 41:18
        scope 2 {
            debug as_fn_mut => _7;       // in scope 2 at ui/closures/2229_closure_analysis/migrations/mir_calls_to_shims_fixed.rs:41:9: 41:18
            let _12: extern "rust-call" fn(T, ()) -> <T as std::ops::FnOnce<()>>::Output {<T as std::ops::FnOnce<()>>::call_once}; // in scope 2 at ui/closures/2229_closure_analysis/migrations/mir_calls_to_shims_fixed.rs:43:9: 43:19
            scope 3 {
                debug as_fn_once => _12; // in scope 3 at ui/closures/2229_closure_analysis/migrations/mir_calls_to_shims_fixed.rs:43:9: 43:19
            }
        }
    }

    bb0: {
        _16 = const false;               // scope 0 at ui/closures/2229_closure_analysis/migrations/mir_calls_to_shims_fixed.rs:39:9: 39:14
        _16 = const true;                // scope 0 at ui/closures/2229_closure_analysis/migrations/mir_calls_to_shims_fixed.rs:39:9: 39:14
        _5 = &_2;                        // scope 1 at ui/closures/2229_closure_analysis/migrations/mir_calls_to_shims_fixed.rs:40:19: 40:35
        _6 = &_1;                        // scope 1 at ui/closures/2229_closure_analysis/migrations/mir_calls_to_shims_fixed.rs:40:19: 40:35
        _4 = [closure@ui/closures/2229_closure_analysis/migrations/mir_calls_to_shims_fixed.rs:40:19: 40:21] { as_fn: move _5, t: move _6 }; // scope 1 at ui/closures/2229_closure_analysis/migrations/mir_calls_to_shims_fixed.rs:40:19: 40:35
                                         // closure
                                         // + def_id: DefId(0:10 ~ mir_calls_to_shims_fixed[eca0]::test_fn_ptr_panic::{closure#0})
                                         // + substs: [
                                         //     T,
                                         //     i32,
                                         //     extern "rust-call" fn(()),
                                         //     (&for<'a> extern "rust-call" fn(&'a T, ()) -> <T as std::ops::FnOnce<()>>::Output {<T as std::ops::Fn<()>>::call}, &T),
                                         // ]
        _3 = assert_panics::<[closure@ui/closures/2229_closure_analysis/migrations/mir_calls_to_shims_fixed.rs:40:19: 40:21]>(move _4) -> [return: bb1, unwind: bb6]; // scope 1 at ui/closures/2229_closure_analysis/migrations/mir_calls_to_shims_fixed.rs:40:5: 40:36
                                         // mir::Constant
                                         // + span: ui/closures/2229_closure_analysis/migrations/mir_calls_to_shims_fixed.rs:40:5: 40:18
                                         // + literal: Const { ty: fn([closure@ui/closures/2229_closure_analysis/migrations/mir_calls_to_shims_fixed.rs:40:19: 40:21]) {assert_panics::<[closure@ui/closures/2229_closure_analysis/migrations/mir_calls_to_shims_fixed.rs:40:19: 40:21]>}, val: Value(<ZST>) }
    }

    bb1: {
        _10 = &_7;                       // scope 2 at ui/closures/2229_closure_analysis/migrations/mir_calls_to_shims_fixed.rs:42:19: 42:43
        _11 = &mut _1;                   // scope 2 at ui/closures/2229_closure_analysis/migrations/mir_calls_to_shims_fixed.rs:42:19: 42:43
        _9 = [closure@ui/closures/2229_closure_analysis/migrations/mir_calls_to_shims_fixed.rs:42:19: 42:21] { as_fn_mut: move _10, t: move _11 }; // scope 2 at ui/closures/2229_closure_analysis/migrations/mir_calls_to_shims_fixed.rs:42:19: 42:43
                                         // closure
                                         // + def_id: DefId(0:11 ~ mir_calls_to_shims_fixed[eca0]::test_fn_ptr_panic::{closure#1})
                                         // + substs: [
                                         //     T,
                                         //     i32,
                                         //     extern "rust-call" fn(()),
                                         //     (&for<'a> extern "rust-call" fn(&'a mut T, ()) -> <T as std::ops::FnOnce<()>>::Output {<T as std::ops::FnMut<()>>::call_mut}, &mut T),
                                         // ]
        _8 = assert_panics::<[closure@ui/closures/2229_closure_analysis/migrations/mir_calls_to_shims_fixed.rs:42:19: 42:21]>(move _9) -> [return: bb2, unwind: bb6]; // scope 2 at ui/closures/2229_closure_analysis/migrations/mir_calls_to_shims_fixed.rs:42:5: 42:44
                                         // mir::Constant
                                         // + span: ui/closures/2229_closure_analysis/migrations/mir_calls_to_shims_fixed.rs:42:5: 42:18
                                         // + literal: Const { ty: fn([closure@ui/closures/2229_closure_analysis/migrations/mir_calls_to_shims_fixed.rs:42:19: 42:21]) {assert_panics::<[closure@ui/closures/2229_closure_analysis/migrations/mir_calls_to_shims_fixed.rs:42:19: 42:21]>}, val: Value(<ZST>) }
    }

    bb2: {
        _15 = &_12;                      // scope 3 at ui/closures/2229_closure_analysis/migrations/mir_calls_to_shims_fixed.rs:44:19: 44:39
        _16 = const false;               // scope 3 at ui/closures/2229_closure_analysis/migrations/mir_calls_to_shims_fixed.rs:44:19: 44:39
        _14 = [closure@ui/closures/2229_closure_analysis/migrations/mir_calls_to_shims_fixed.rs:44:19: 44:21] { as_fn_once: move _15, t: move _1 }; // scope 3 at ui/closures/2229_closure_analysis/migrations/mir_calls_to_shims_fixed.rs:44:19: 44:39
                                         // closure
                                         // + def_id: DefId(0:12 ~ mir_calls_to_shims_fixed[eca0]::test_fn_ptr_panic::{closure#2})
                                         // + substs: [
                                         //     T,
                                         //     i32,
                                         //     extern "rust-call" fn(()),
                                         //     (&extern "rust-call" fn(T, ()) -> <T as std::ops::FnOnce<()>>::Output {<T as std::ops::FnOnce<()>>::call_once}, T),
                                         // ]
        _13 = assert_panics::<[closure@ui/closures/2229_closure_analysis/migrations/mir_calls_to_shims_fixed.rs:44:19: 44:21]>(move _14) -> [return: bb3, unwind: bb6]; // scope 3 at ui/closures/2229_closure_analysis/migrations/mir_calls_to_shims_fixed.rs:44:5: 44:40
                                         // mir::Constant
                                         // + span: ui/closures/2229_closure_analysis/migrations/mir_calls_to_shims_fixed.rs:44:5: 44:18
                                         // + literal: Const { ty: fn([closure@ui/closures/2229_closure_analysis/migrations/mir_calls_to_shims_fixed.rs:44:19: 44:21]) {assert_panics::<[closure@ui/closures/2229_closure_analysis/migrations/mir_calls_to_shims_fixed.rs:44:19: 44:21]>}, val: Value(<ZST>) }
    }

    bb3: {
        return;                          // scope 0 at ui/closures/2229_closure_analysis/migrations/mir_calls_to_shims_fixed.rs:45:2: 45:2
    }

    bb4 (cleanup): {
        resume;                          // scope 0 at ui/closures/2229_closure_analysis/migrations/mir_calls_to_shims_fixed.rs:35:1: 45:2
    }

    bb5 (cleanup): {
        drop(_1) -> bb4;                 // scope 0 at ui/closures/2229_closure_analysis/migrations/mir_calls_to_shims_fixed.rs:45:1: 45:2
    }

    bb6 (cleanup): {
        switchInt(_16) -> [0: bb4, otherwise: bb5]; // scope 0 at ui/closures/2229_closure_analysis/migrations/mir_calls_to_shims_fixed.rs:45:1: 45:2
    }
}

fn test_fn_ptr_panic::{closure#0}(_1: [closure@ui/closures/2229_closure_analysis/migrations/mir_calls_to_shims_fixed.rs:40:19: 40:21]) -> () {
    debug as_fn => (*(_1.0: &for<'a> extern "rust-call" fn(&'a T, ()) -> <T as std::ops::FnOnce<()>>::Output {<T as std::ops::Fn<()>>::call})); // in scope 0 at ui/closures/2229_closure_analysis/migrations/mir_calls_to_shims_fixed.rs:39:9: 39:14
    debug t => (*(_1.1: &T));            // in scope 0 at ui/closures/2229_closure_analysis/migrations/mir_calls_to_shims_fixed.rs:35:25: 35:30
    let mut _0: ();                      // return place in scope 0 at ui/closures/2229_closure_analysis/migrations/mir_calls_to_shims_fixed.rs:40:22: 40:22
    let mut _2: !;                       // in scope 0 at ui/closures/2229_closure_analysis/migrations/mir_calls_to_shims_fixed.rs:40:22: 40:35
    let mut _3: for<'a> extern "rust-call" fn(&'a T, ()) -> <T as std::ops::FnOnce<()>>::Output {<T as std::ops::Fn<()>>::call}; // in scope 0 at ui/closures/2229_closure_analysis/migrations/mir_calls_to_shims_fixed.rs:40:22: 40:27
    let mut _4: &T;                      // in scope 0 at ui/closures/2229_closure_analysis/migrations/mir_calls_to_shims_fixed.rs:40:28: 40:30
    let _5: &T;                          // in scope 0 at ui/closures/2229_closure_analysis/migrations/mir_calls_to_shims_fixed.rs:40:28: 40:30
    let mut _6: ();                      // in scope 0 at ui/closures/2229_closure_analysis/migrations/mir_calls_to_shims_fixed.rs:40:32: 40:34
    let mut _7: &T;                      // in scope 0 at ui/closures/2229_closure_analysis/migrations/mir_calls_to_shims_fixed.rs:40:19: 40:35

    bb0: {
        _7 = deref_copy (_1.1: &T);      // scope 0 at ui/closures/2229_closure_analysis/migrations/mir_calls_to_shims_fixed.rs:40:28: 40:30
        _5 = _7;                         // scope 0 at ui/closures/2229_closure_analysis/migrations/mir_calls_to_shims_fixed.rs:40:28: 40:30
        _4 = _5;                         // scope 0 at ui/closures/2229_closure_analysis/migrations/mir_calls_to_shims_fixed.rs:40:28: 40:30
        _2 = move _3(move _4, move _6);  // scope 0 at ui/closures/2229_closure_analysis/migrations/mir_calls_to_shims_fixed.rs:40:22: 40:35
    }
}

fn test_fn_ptr_panic::{closure#1}(_1: [closure@ui/closures/2229_closure_analysis/migrations/mir_calls_to_shims_fixed.rs:42:19: 42:21]) -> () {
    debug as_fn_mut => (*(_1.0: &for<'a> extern "rust-call" fn(&'a mut T, ()) -> <T as std::ops::FnOnce<()>>::Output {<T as std::ops::FnMut<()>>::call_mut})); // in scope 0 at ui/closures/2229_closure_analysis/migrations/mir_calls_to_shims_fixed.rs:41:9: 41:18
    debug t => (*(_1.1: &mut T));        // in scope 0 at ui/closures/2229_closure_analysis/migrations/mir_calls_to_shims_fixed.rs:35:25: 35:30
    let mut _0: ();                      // return place in scope 0 at ui/closures/2229_closure_analysis/migrations/mir_calls_to_shims_fixed.rs:42:22: 42:22
    let mut _2: !;                       // in scope 0 at ui/closures/2229_closure_analysis/migrations/mir_calls_to_shims_fixed.rs:42:22: 42:43
    let mut _3: for<'a> extern "rust-call" fn(&'a mut T, ()) -> <T as std::ops::FnOnce<()>>::Output {<T as std::ops::FnMut<()>>::call_mut}; // in scope 0 at ui/closures/2229_closure_analysis/migrations/mir_calls_to_shims_fixed.rs:42:22: 42:31
    let mut _4: &mut T;                  // in scope 0 at ui/closures/2229_closure_analysis/migrations/mir_calls_to_shims_fixed.rs:42:32: 42:38
    let mut _5: &mut T;                  // in scope 0 at ui/closures/2229_closure_analysis/migrations/mir_calls_to_shims_fixed.rs:42:32: 42:38
    let mut _6: ();                      // in scope 0 at ui/closures/2229_closure_analysis/migrations/mir_calls_to_shims_fixed.rs:42:40: 42:42
    let mut _7: &mut T;                  // in scope 0 at ui/closures/2229_closure_analysis/migrations/mir_calls_to_shims_fixed.rs:42:19: 42:43

    bb0: {
        _7 = deref_copy (_1.1: &mut T);  // scope 0 at ui/closures/2229_closure_analysis/migrations/mir_calls_to_shims_fixed.rs:42:32: 42:38
        _5 = &mut (*_7);                 // scope 0 at ui/closures/2229_closure_analysis/migrations/mir_calls_to_shims_fixed.rs:42:32: 42:38
        _4 = &mut (*_5);                 // scope 0 at ui/closures/2229_closure_analysis/migrations/mir_calls_to_shims_fixed.rs:42:32: 42:38
        _2 = move _3(move _4, move _6);  // scope 0 at ui/closures/2229_closure_analysis/migrations/mir_calls_to_shims_fixed.rs:42:22: 42:43
    }
}

fn test_fn_ptr_panic::{closure#2}(_1: [closure@ui/closures/2229_closure_analysis/migrations/mir_calls_to_shims_fixed.rs:44:19: 44:21]) -> () {
    debug as_fn_once => (*(_1.0: &extern "rust-call" fn(T, ()) -> <T as std::ops::FnOnce<()>>::Output {<T as std::ops::FnOnce<()>>::call_once})); // in scope 0 at ui/closures/2229_closure_analysis/migrations/mir_calls_to_shims_fixed.rs:43:9: 43:19
    debug t => (_1.1: T);                // in scope 0 at ui/closures/2229_closure_analysis/migrations/mir_calls_to_shims_fixed.rs:35:25: 35:30
    let mut _0: ();                      // return place in scope 0 at ui/closures/2229_closure_analysis/migrations/mir_calls_to_shims_fixed.rs:44:22: 44:22
    let mut _2: !;                       // in scope 0 at ui/closures/2229_closure_analysis/migrations/mir_calls_to_shims_fixed.rs:44:22: 44:39
    let mut _3: extern "rust-call" fn(T, ()) -> <T as std::ops::FnOnce<()>>::Output {<T as std::ops::FnOnce<()>>::call_once}; // in scope 0 at ui/closures/2229_closure_analysis/migrations/mir_calls_to_shims_fixed.rs:44:22: 44:32
    let mut _4: T;                       // in scope 0 at ui/closures/2229_closure_analysis/migrations/mir_calls_to_shims_fixed.rs:44:33: 44:34
    let mut _5: ();                      // in scope 0 at ui/closures/2229_closure_analysis/migrations/mir_calls_to_shims_fixed.rs:44:36: 44:38

    bb0: {
        _4 = move (_1.1: T);             // scope 0 at ui/closures/2229_closure_analysis/migrations/mir_calls_to_shims_fixed.rs:44:33: 44:34
        _2 = move _3(move _4, move _5);  // scope 0 at ui/closures/2229_closure_analysis/migrations/mir_calls_to_shims_fixed.rs:44:22: 44:39
    }
}

fn main() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/closures/2229_closure_analysis/migrations/mir_calls_to_shims_fixed.rs:47:11: 47:11
    let _1: ();                          // in scope 0 at ui/closures/2229_closure_analysis/migrations/mir_calls_to_shims_fixed.rs:48:5: 48:36
    let _2: ();                          // in scope 0 at ui/closures/2229_closure_analysis/migrations/mir_calls_to_shims_fixed.rs:49:5: 49:49
    let mut _3: fn() -> !;               // in scope 0 at ui/closures/2229_closure_analysis/migrations/mir_calls_to_shims_fixed.rs:49:23: 49:48

    bb0: {
        _1 = test_fn_ptr_panic::<fn() -> ! {foo_diverges}>(foo_diverges) -> bb1; // scope 0 at ui/closures/2229_closure_analysis/migrations/mir_calls_to_shims_fixed.rs:48:5: 48:36
                                         // mir::Constant
                                         // + span: ui/closures/2229_closure_analysis/migrations/mir_calls_to_shims_fixed.rs:48:5: 48:22
                                         // + literal: Const { ty: fn(fn() -> ! {foo_diverges}) {test_fn_ptr_panic::<fn() -> ! {foo_diverges}>}, val: Value(<ZST>) }
                                         // mir::Constant
                                         // + span: ui/closures/2229_closure_analysis/migrations/mir_calls_to_shims_fixed.rs:48:23: 48:35
                                         // + literal: Const { ty: fn() -> ! {foo_diverges}, val: Value(<ZST>) }
    }

    bb1: {
        _3 = foo_diverges as fn() -> ! (Pointer(ReifyFnPointer)); // scope 0 at ui/closures/2229_closure_analysis/migrations/mir_calls_to_shims_fixed.rs:49:23: 49:35
                                         // mir::Constant
                                         // + span: ui/closures/2229_closure_analysis/migrations/mir_calls_to_shims_fixed.rs:49:23: 49:35
                                         // + literal: Const { ty: fn() -> ! {foo_diverges}, val: Value(<ZST>) }
        _2 = test_fn_ptr_panic::<fn() -> !>(move _3) -> bb2; // scope 0 at ui/closures/2229_closure_analysis/migrations/mir_calls_to_shims_fixed.rs:49:5: 49:49
                                         // mir::Constant
                                         // + span: ui/closures/2229_closure_analysis/migrations/mir_calls_to_shims_fixed.rs:49:5: 49:22
                                         // + literal: Const { ty: fn(fn() -> !) {test_fn_ptr_panic::<fn() -> !>}, val: Value(<ZST>) }
    }

    bb2: {
        return;                          // scope 0 at ui/closures/2229_closure_analysis/migrations/mir_calls_to_shims_fixed.rs:50:2: 50:2
    }
}
