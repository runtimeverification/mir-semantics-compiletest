// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
fn main() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/closures/old-closure-arg.rs:3:15: 3:15
    let _1: std::vec::Vec<f64>;          // in scope 0 at ui/closures/old-closure-arg.rs:4:9: 4:10
    let mut _2: std::boxed::Box<[f64]>;  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
    let mut _3: std::boxed::Box<[f64; 5]>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
    let mut _4: usize;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
    let mut _5: usize;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
    let mut _6: *mut u8;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
    let mut _7: std::boxed::Box<[f64; 5]>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
    let mut _8: std::slice::Iter<'_, f64>; // in scope 0 at ui/closures/old-closure-arg.rs:7:14: 7:16
    let mut _9: &std::vec::Vec<f64>;     // in scope 0 at ui/closures/old-closure-arg.rs:7:14: 7:16
    let mut _11: std::option::Option<&f64>; // in scope 0 at ui/closures/old-closure-arg.rs:7:14: 7:16
    let mut _12: &mut std::slice::Iter<'_, f64>; // in scope 0 at ui/closures/old-closure-arg.rs:7:14: 7:16
    let mut _13: &mut std::slice::Iter<'_, f64>; // in scope 0 at ui/closures/old-closure-arg.rs:7:14: 7:16
    let mut _14: isize;                  // in scope 0 at ui/closures/old-closure-arg.rs:7:5: 9:6
    let _16: ();                         // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:62
    let mut _17: std::fmt::Arguments<'_>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _18: &[&str];                // in scope 0 at ui/closures/old-closure-arg.rs:8:18: 8:22
    let mut _19: &[&str; 2];             // in scope 0 at ui/closures/old-closure-arg.rs:8:18: 8:22
    let _20: &[&str; 2];                 // in scope 0 at ui/closures/old-closure-arg.rs:8:18: 8:22
    let mut _21: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _22: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let _23: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let _24: [core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _25: core::fmt::ArgumentV1<'_>; // in scope 0 at ui/closures/old-closure-arg.rs:8:24: 8:26
    let mut _26: &f64;                   // in scope 0 at ui/closures/old-closure-arg.rs:8:24: 8:26
    let _27: &f64;                       // in scope 0 at ui/closures/old-closure-arg.rs:8:24: 8:26
    let mut _29: *const [f64; 5];        // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
    scope 1 {
        debug v => _1;                   // in scope 1 at ui/closures/old-closure-arg.rs:4:9: 4:10
        let mut _10: std::slice::Iter<'_, f64>; // in scope 1 at ui/closures/old-closure-arg.rs:7:14: 7:16
        scope 3 {
            debug iter => _10;           // in scope 3 at ui/closures/old-closure-arg.rs:7:14: 7:16
            let _15: &f64;               // in scope 3 at ui/closures/old-closure-arg.rs:7:9: 7:10
            scope 4 {
                debug i => _15;          // in scope 4 at ui/closures/old-closure-arg.rs:7:9: 7:10
                let mut _28: &[&str; 2]; // in scope 4 at ui/closures/old-closure-arg.rs:8:18: 8:22
            }
        }
    }
    scope 2 {
    }

    bb0: {
        _4 = const 40_usize;             // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
        _5 = const 8_usize;              // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
        _6 = alloc::alloc::exchange_malloc(move _4, move _5) -> bb1; // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
                                         // + literal: Const { ty: unsafe fn(usize, usize) -> *mut u8 {alloc::alloc::exchange_malloc}, val: Value(<ZST>) }
    }

    bb1: {
        _7 = ShallowInitBox(move _6, [f64; 5]); // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
        _29 = (((_7.0: std::ptr::Unique<[f64; 5]>).0: std::ptr::NonNull<[f64; 5]>).0: *const [f64; 5]); // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:37: 52:46
        (*_29) = [const -1f64, const 0f64, const 1f64, const 2f64, const 3f64]; // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:37: 52:46
        _3 = move _7;                    // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
        _2 = move _3 as std::boxed::Box<[f64]> (Pointer(Unsize)); // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
        _1 = slice::<impl [f64]>::into_vec::<std::alloc::Global>(move _2) -> bb2; // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:50:36: 53:10
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:50:36: 50:51
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: fn(Box<[f64]>) -> Vec<f64> {slice::<impl [f64]>::into_vec::<std::alloc::Global>}, val: Value(<ZST>) }
    }

    bb2: {
        _9 = &_1;                        // scope 1 at ui/closures/old-closure-arg.rs:7:14: 7:16
        _8 = <&Vec<f64> as IntoIterator>::into_iter(move _9) -> [return: bb3, unwind: bb12]; // scope 1 at ui/closures/old-closure-arg.rs:7:14: 7:16
                                         // mir::Constant
                                         // + span: ui/closures/old-closure-arg.rs:7:14: 7:16
                                         // + literal: Const { ty: fn(&Vec<f64>) -> <&Vec<f64> as IntoIterator>::IntoIter {<&Vec<f64> as IntoIterator>::into_iter}, val: Value(<ZST>) }
    }

    bb3: {
        _10 = move _8;                   // scope 1 at ui/closures/old-closure-arg.rs:7:14: 7:16
        goto -> bb4;                     // scope 3 at ui/closures/old-closure-arg.rs:7:5: 9:6
    }

    bb4: {
        _13 = &mut _10;                  // scope 3 at ui/closures/old-closure-arg.rs:7:14: 7:16
        _12 = &mut (*_13);               // scope 3 at ui/closures/old-closure-arg.rs:7:14: 7:16
        _11 = <std::slice::Iter<'_, f64> as Iterator>::next(move _12) -> [return: bb5, unwind: bb12]; // scope 3 at ui/closures/old-closure-arg.rs:7:14: 7:16
                                         // mir::Constant
                                         // + span: ui/closures/old-closure-arg.rs:7:14: 7:16
                                         // + literal: Const { ty: for<'a> fn(&'a mut std::slice::Iter<'_, f64>) -> Option<<std::slice::Iter<'_, f64> as Iterator>::Item> {<std::slice::Iter<'_, f64> as Iterator>::next}, val: Value(<ZST>) }
    }

    bb5: {
        _14 = discriminant(_11);         // scope 3 at ui/closures/old-closure-arg.rs:7:14: 7:16
        switchInt(move _14) -> [0: bb8, 1: bb6, otherwise: bb7]; // scope 3 at ui/closures/old-closure-arg.rs:7:14: 7:16
    }

    bb6: {
        _15 = ((_11 as Some).0: &f64);   // scope 3 at ui/closures/old-closure-arg.rs:7:9: 7:10
        _28 = const _;                   // scope 4 at ui/closures/old-closure-arg.rs:8:18: 8:22
                                         // mir::Constant
                                         // + span: ui/closures/old-closure-arg.rs:8:18: 8:22
                                         // + literal: Const { ty: &[&str; 2], val: Unevaluated(main, [], Some(promoted[0])) }
        _20 = _28;                       // scope 4 at ui/closures/old-closure-arg.rs:8:18: 8:22
        _19 = _20;                       // scope 4 at ui/closures/old-closure-arg.rs:8:18: 8:22
        _18 = move _19 as &[&str] (Pointer(Unsize)); // scope 4 at ui/closures/old-closure-arg.rs:8:18: 8:22
        _27 = _15;                       // scope 4 at ui/closures/old-closure-arg.rs:8:24: 8:26
        _26 = _27;                       // scope 4 at ui/closures/old-closure-arg.rs:8:24: 8:26
        _25 = core::fmt::ArgumentV1::<'_>::new_display::<f64>(move _26) -> [return: bb9, unwind: bb12]; // scope 4 at ui/closures/old-closure-arg.rs:8:24: 8:26
                                         // mir::Constant
                                         // + span: ui/closures/old-closure-arg.rs:8:24: 8:26
                                         // + user_ty: UserType(2)
                                         // + literal: Const { ty: for<'b> fn(&'b f64) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_display::<f64>}, val: Value(<ZST>) }
    }

    bb7: {
        unreachable;                     // scope 3 at ui/closures/old-closure-arg.rs:7:14: 7:16
    }

    bb8: {
        drop(_1) -> bb11;                // scope 0 at ui/closures/old-closure-arg.rs:11:1: 11:2
    }

    bb9: {
        _24 = [move _25];                // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _23 = &_24;                      // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _22 = _23;                       // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _21 = move _22 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _17 = Arguments::<'_>::new_v1(move _18, move _21) -> [return: bb10, unwind: bb12]; // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // + user_ty: UserType(1)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb10: {
        _16 = _print(move _17) -> [return: bb14, unwind: bb12]; // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:62
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:27
                                         // + literal: Const { ty: for<'a> fn(Arguments<'a>) {_print}, val: Value(<ZST>) }
    }

    bb11: {
        return;                          // scope 0 at ui/closures/old-closure-arg.rs:11:2: 11:2
    }

    bb12 (cleanup): {
        drop(_1) -> bb13;                // scope 0 at ui/closures/old-closure-arg.rs:11:1: 11:2
    }

    bb13 (cleanup): {
        resume;                          // scope 0 at ui/closures/old-closure-arg.rs:3:1: 11:2
    }

    bb14: {
        goto -> bb4;                     // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:62
    }
}

promoted[0] in main: &[&str; 2] = {
    let mut _0: &[&str; 2];              // return place in scope 0 at ui/closures/old-closure-arg.rs:8:18: 8:22
    let mut _1: [&str; 2];               // in scope 0 at ui/closures/old-closure-arg.rs:8:18: 8:22

    bb0: {
        _1 = [const "", const "\n"];     // scope 0 at ui/closures/old-closure-arg.rs:8:18: 8:22
                                         // mir::Constant
                                         // + span: ui/closures/old-closure-arg.rs:8:18: 8:22
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
                                         // mir::Constant
                                         // + span: ui/closures/old-closure-arg.rs:8:18: 8:22
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at ui/closures/old-closure-arg.rs:8:18: 8:22
        return;                          // scope 0 at ui/closures/old-closure-arg.rs:8:18: 8:22
    }
}
