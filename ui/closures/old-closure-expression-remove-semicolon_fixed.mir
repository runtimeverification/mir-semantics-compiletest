// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
fn foo() -> i32 {
    let mut _0: i32;                     // return place in scope 0 at ui/closures/old-closure-expression-remove-semicolon_fixed.rs:3:13: 3:16

    bb0: {
        _0 = const 0_i32;                // scope 0 at ui/closures/old-closure-expression-remove-semicolon_fixed.rs:4:5: 4:6
        return;                          // scope 0 at ui/closures/old-closure-expression-remove-semicolon_fixed.rs:5:2: 5:2
    }
}

fn main() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/closures/old-closure-expression-remove-semicolon_fixed.rs:7:11: 7:11
    let _1: i32;                         // in scope 0 at ui/closures/old-closure-expression-remove-semicolon_fixed.rs:8:9: 8:11
    scope 1 {
        debug _x => _1;                  // in scope 1 at ui/closures/old-closure-expression-remove-semicolon_fixed.rs:8:9: 8:11
    }

    bb0: {
        _1 = foo() -> bb1;               // scope 0 at ui/closures/old-closure-expression-remove-semicolon_fixed.rs:10:9: 10:14
                                         // mir::Constant
                                         // + span: ui/closures/old-closure-expression-remove-semicolon_fixed.rs:10:9: 10:12
                                         // + literal: Const { ty: fn() -> i32 {foo}, val: Value(<ZST>) }
    }

    bb1: {
        return;                          // scope 0 at ui/closures/old-closure-expression-remove-semicolon_fixed.rs:12:2: 12:2
    }
}
