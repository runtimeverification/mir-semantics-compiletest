// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
fn main() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/closures/issue-41366.rs:11:11: 11:11

    bb0: {
        return;                          // scope 0 at ui/closures/issue-41366.rs:13:2: 13:2
    }
}

promoted[0] in main: &[closure@ui/closures/issue-41366.rs:12:7: 12:10] = {
    let mut _0: &[closure@ui/closures/issue-41366.rs:12:7: 12:10]; // return place in scope 0 at ui/closures/issue-41366.rs:12:5: 12:14
    let mut _1: [closure@ui/closures/issue-41366.rs:12:7: 12:10]; // in scope 0 at ui/closures/issue-41366.rs:12:7: 12:13

    bb0: {
        _1 = [closure@ui/closures/issue-41366.rs:12:7: 12:10]; // scope 0 at ui/closures/issue-41366.rs:12:7: 12:13
                                         // closure
                                         // + def_id: DefId(0:10 ~ issue_41366[c9b7]::main::{closure#0})
                                         // + substs: [
                                         //     i8,
                                         //     extern "rust-call" fn((u16,)),
                                         //     (),
                                         // ]
        _0 = &_1;                        // scope 0 at ui/closures/issue-41366.rs:12:5: 12:14
        return;                          // scope 0 at ui/closures/issue-41366.rs:12:5: 12:14
    }
}

fn main::{closure#0}(_1: &[closure@ui/closures/issue-41366.rs:12:7: 12:10], _2: u16) -> () {
    let mut _0: ();                      // return place in scope 0 at ui/closures/issue-41366.rs:12:11: 12:11

    bb0: {
        return;                          // scope 0 at ui/closures/issue-41366.rs:12:13: 12:13
    }
}
