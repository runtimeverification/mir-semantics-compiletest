// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
fn dup(_1: impl Fn(i32) -> i32) -> impl Fn(i32) -> i32 {
    debug f => _1;                       // in scope 0 at ui/closures/issue-72408-nested-closures-exponential.rs:12:8: 12:9
    let mut _0: impl Fn(i32) -> i32;     // return place in scope 0 at ui/closures/issue-72408-nested-closures-exponential.rs:12:35: 12:54

    bb0: {
        _0 = [closure@ui/closures/issue-72408-nested-closures-exponential.rs:13:5: 13:13] { f: move _1 }; // scope 0 at ui/closures/issue-72408-nested-closures-exponential.rs:13:5: 13:22
                                         // closure
                                         // + def_id: DefId(0:4 ~ issue_72408_nested_closures_exponential[5175]::dup::{closure#0})
                                         // + substs: [
                                         //     impl Fn(i32) -> i32,
                                         //     i8,
                                         //     extern "rust-call" fn((i32,)) -> i32,
                                         //     (impl Fn(i32) -> i32,),
                                         // ]
        return;                          // scope 0 at ui/closures/issue-72408-nested-closures-exponential.rs:14:2: 14:2
    }
}

fn dup::{closure#0}(_1: &[closure@ui/closures/issue-72408-nested-closures-exponential.rs:13:5: 13:13], _2: i32) -> i32 {
    debug a => _2;                       // in scope 0 at ui/closures/issue-72408-nested-closures-exponential.rs:13:11: 13:12
    debug f => ((*_1).0: impl Fn(i32) -> i32); // in scope 0 at ui/closures/issue-72408-nested-closures-exponential.rs:12:8: 12:9
    let mut _0: i32;                     // return place in scope 0 at ui/closures/issue-72408-nested-closures-exponential.rs:13:14: 13:14
    let mut _3: &impl Fn(i32) -> i32;    // in scope 0 at ui/closures/issue-72408-nested-closures-exponential.rs:13:14: 13:15
    let mut _4: (i32,);                  // in scope 0 at ui/closures/issue-72408-nested-closures-exponential.rs:13:14: 13:22
    let mut _5: i32;                     // in scope 0 at ui/closures/issue-72408-nested-closures-exponential.rs:13:16: 13:21
    let mut _6: i32;                     // in scope 0 at ui/closures/issue-72408-nested-closures-exponential.rs:13:16: 13:17
    let mut _7: (i32, bool);             // in scope 0 at ui/closures/issue-72408-nested-closures-exponential.rs:13:16: 13:21

    bb0: {
        _3 = &((*_1).0: impl Fn(i32) -> i32); // scope 0 at ui/closures/issue-72408-nested-closures-exponential.rs:13:14: 13:15
        _6 = _2;                         // scope 0 at ui/closures/issue-72408-nested-closures-exponential.rs:13:16: 13:17
        _7 = CheckedMul(_6, const 2_i32); // scope 0 at ui/closures/issue-72408-nested-closures-exponential.rs:13:16: 13:21
        assert(!move (_7.1: bool), "attempt to compute `{} * {}`, which would overflow", move _6, const 2_i32) -> bb1; // scope 0 at ui/closures/issue-72408-nested-closures-exponential.rs:13:16: 13:21
    }

    bb1: {
        _5 = move (_7.0: i32);           // scope 0 at ui/closures/issue-72408-nested-closures-exponential.rs:13:16: 13:21
        _4 = (move _5,);                 // scope 0 at ui/closures/issue-72408-nested-closures-exponential.rs:13:14: 13:22
        _0 = <impl Fn(i32) -> i32 as Fn<(i32,)>>::call(move _3, move _4) -> bb2; // scope 0 at ui/closures/issue-72408-nested-closures-exponential.rs:13:14: 13:22
                                         // mir::Constant
                                         // + span: ui/closures/issue-72408-nested-closures-exponential.rs:13:14: 13:15
                                         // + literal: Const { ty: for<'a> extern "rust-call" fn(&'a impl Fn(i32) -> i32, (i32,)) -> <impl Fn(i32) -> i32 as FnOnce<(i32,)>>::Output {<impl Fn(i32) -> i32 as Fn<(i32,)>>::call}, val: Value(<ZST>) }
    }

    bb2: {
        return;                          // scope 0 at ui/closures/issue-72408-nested-closures-exponential.rs:13:22: 13:22
    }
}

fn main() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/closures/issue-72408-nested-closures-exponential.rs:16:11: 16:11
    let _1: [closure@ui/closures/issue-72408-nested-closures-exponential.rs:17:13: 17:16]; // in scope 0 at ui/closures/issue-72408-nested-closures-exponential.rs:17:9: 17:10
    let mut _3: [closure@ui/closures/issue-72408-nested-closures-exponential.rs:17:13: 17:16]; // in scope 0 at ui/closures/issue-72408-nested-closures-exponential.rs:19:17: 19:18
    let mut _5: impl Fn(i32) -> i32;     // in scope 0 at ui/closures/issue-72408-nested-closures-exponential.rs:20:17: 20:18
    let mut _7: impl Fn(i32) -> i32;     // in scope 0 at ui/closures/issue-72408-nested-closures-exponential.rs:21:17: 21:18
    let mut _9: impl Fn(i32) -> i32;     // in scope 0 at ui/closures/issue-72408-nested-closures-exponential.rs:22:17: 22:18
    let mut _11: impl Fn(i32) -> i32;    // in scope 0 at ui/closures/issue-72408-nested-closures-exponential.rs:23:17: 23:18
    let mut _13: impl Fn(i32) -> i32;    // in scope 0 at ui/closures/issue-72408-nested-closures-exponential.rs:25:17: 25:18
    let mut _15: impl Fn(i32) -> i32;    // in scope 0 at ui/closures/issue-72408-nested-closures-exponential.rs:26:17: 26:18
    let mut _17: impl Fn(i32) -> i32;    // in scope 0 at ui/closures/issue-72408-nested-closures-exponential.rs:27:17: 27:18
    let mut _19: impl Fn(i32) -> i32;    // in scope 0 at ui/closures/issue-72408-nested-closures-exponential.rs:28:17: 28:18
    let mut _21: impl Fn(i32) -> i32;    // in scope 0 at ui/closures/issue-72408-nested-closures-exponential.rs:29:17: 29:18
    let mut _23: impl Fn(i32) -> i32;    // in scope 0 at ui/closures/issue-72408-nested-closures-exponential.rs:31:17: 31:18
    let mut _25: impl Fn(i32) -> i32;    // in scope 0 at ui/closures/issue-72408-nested-closures-exponential.rs:32:17: 32:18
    let mut _27: impl Fn(i32) -> i32;    // in scope 0 at ui/closures/issue-72408-nested-closures-exponential.rs:33:17: 33:18
    let mut _29: impl Fn(i32) -> i32;    // in scope 0 at ui/closures/issue-72408-nested-closures-exponential.rs:34:17: 34:18
    let mut _31: impl Fn(i32) -> i32;    // in scope 0 at ui/closures/issue-72408-nested-closures-exponential.rs:35:17: 35:18
    let mut _33: impl Fn(i32) -> i32;    // in scope 0 at ui/closures/issue-72408-nested-closures-exponential.rs:37:17: 37:18
    let mut _35: impl Fn(i32) -> i32;    // in scope 0 at ui/closures/issue-72408-nested-closures-exponential.rs:38:17: 38:18
    let mut _37: impl Fn(i32) -> i32;    // in scope 0 at ui/closures/issue-72408-nested-closures-exponential.rs:39:17: 39:18
    let mut _39: impl Fn(i32) -> i32;    // in scope 0 at ui/closures/issue-72408-nested-closures-exponential.rs:40:17: 40:18
    let mut _41: impl Fn(i32) -> i32;    // in scope 0 at ui/closures/issue-72408-nested-closures-exponential.rs:41:17: 41:18
    let mut _43: impl Fn(i32) -> i32;    // in scope 0 at ui/closures/issue-72408-nested-closures-exponential.rs:46:17: 46:18
    let mut _45: impl Fn(i32) -> i32;    // in scope 0 at ui/closures/issue-72408-nested-closures-exponential.rs:47:17: 47:18
    let mut _47: impl Fn(i32) -> i32;    // in scope 0 at ui/closures/issue-72408-nested-closures-exponential.rs:48:17: 48:18
    let mut _49: impl Fn(i32) -> i32;    // in scope 0 at ui/closures/issue-72408-nested-closures-exponential.rs:49:17: 49:18
    let mut _51: impl Fn(i32) -> i32;    // in scope 0 at ui/closures/issue-72408-nested-closures-exponential.rs:50:17: 50:18
    let mut _53: impl Fn(i32) -> i32;    // in scope 0 at ui/closures/issue-72408-nested-closures-exponential.rs:52:17: 52:18
    let mut _55: impl Fn(i32) -> i32;    // in scope 0 at ui/closures/issue-72408-nested-closures-exponential.rs:53:17: 53:18
    let mut _57: impl Fn(i32) -> i32;    // in scope 0 at ui/closures/issue-72408-nested-closures-exponential.rs:54:17: 54:18
    let mut _59: impl Fn(i32) -> i32;    // in scope 0 at ui/closures/issue-72408-nested-closures-exponential.rs:55:17: 55:18
    let mut _61: impl Fn(i32) -> i32;    // in scope 0 at ui/closures/issue-72408-nested-closures-exponential.rs:56:17: 56:18
    let _62: ();                         // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:62
    let mut _63: std::fmt::Arguments<'_>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _64: &[&str];                // in scope 0 at ui/closures/issue-72408-nested-closures-exponential.rs:58:14: 58:41
    let mut _65: &[&str; 2];             // in scope 0 at ui/closures/issue-72408-nested-closures-exponential.rs:58:14: 58:41
    let _66: &[&str; 2];                 // in scope 0 at ui/closures/issue-72408-nested-closures-exponential.rs:58:14: 58:41
    let mut _67: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _68: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let _69: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let _70: [core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _71: core::fmt::ArgumentV1<'_>; // in scope 0 at ui/closures/issue-72408-nested-closures-exponential.rs:58:43: 58:47
    let mut _72: &i32;                   // in scope 0 at ui/closures/issue-72408-nested-closures-exponential.rs:58:43: 58:47
    let _73: &i32;                       // in scope 0 at ui/closures/issue-72408-nested-closures-exponential.rs:58:43: 58:47
    let _74: i32;                        // in scope 0 at ui/closures/issue-72408-nested-closures-exponential.rs:58:43: 58:47
    let mut _75: &impl Fn(i32) -> i32;   // in scope 0 at ui/closures/issue-72408-nested-closures-exponential.rs:58:43: 58:44
    let mut _76: (i32,);                 // in scope 0 at ui/closures/issue-72408-nested-closures-exponential.rs:58:43: 58:47
    scope 1 {
        debug f => _1;                   // in scope 1 at ui/closures/issue-72408-nested-closures-exponential.rs:17:9: 17:10
        let _2: impl Fn(i32) -> i32;     // in scope 1 at ui/closures/issue-72408-nested-closures-exponential.rs:19:9: 19:10
        scope 2 {
            debug f => _2;               // in scope 2 at ui/closures/issue-72408-nested-closures-exponential.rs:19:9: 19:10
            let _4: impl Fn(i32) -> i32; // in scope 2 at ui/closures/issue-72408-nested-closures-exponential.rs:20:9: 20:10
            scope 3 {
                debug f => _4;           // in scope 3 at ui/closures/issue-72408-nested-closures-exponential.rs:20:9: 20:10
                let _6: impl Fn(i32) -> i32; // in scope 3 at ui/closures/issue-72408-nested-closures-exponential.rs:21:9: 21:10
                scope 4 {
                    debug f => _6;       // in scope 4 at ui/closures/issue-72408-nested-closures-exponential.rs:21:9: 21:10
                    let _8: impl Fn(i32) -> i32; // in scope 4 at ui/closures/issue-72408-nested-closures-exponential.rs:22:9: 22:10
                    scope 5 {
                        debug f => _8;   // in scope 5 at ui/closures/issue-72408-nested-closures-exponential.rs:22:9: 22:10
                        let _10: impl Fn(i32) -> i32; // in scope 5 at ui/closures/issue-72408-nested-closures-exponential.rs:23:9: 23:10
                        scope 6 {
                            debug f => _10; // in scope 6 at ui/closures/issue-72408-nested-closures-exponential.rs:23:9: 23:10
                            let _12: impl Fn(i32) -> i32; // in scope 6 at ui/closures/issue-72408-nested-closures-exponential.rs:25:9: 25:10
                            scope 7 {
                                debug f => _12; // in scope 7 at ui/closures/issue-72408-nested-closures-exponential.rs:25:9: 25:10
                                let _14: impl Fn(i32) -> i32; // in scope 7 at ui/closures/issue-72408-nested-closures-exponential.rs:26:9: 26:10
                                scope 8 {
                                    debug f => _14; // in scope 8 at ui/closures/issue-72408-nested-closures-exponential.rs:26:9: 26:10
                                    let _16: impl Fn(i32) -> i32; // in scope 8 at ui/closures/issue-72408-nested-closures-exponential.rs:27:9: 27:10
                                    scope 9 {
                                        debug f => _16; // in scope 9 at ui/closures/issue-72408-nested-closures-exponential.rs:27:9: 27:10
                                        let _18: impl Fn(i32) -> i32; // in scope 9 at ui/closures/issue-72408-nested-closures-exponential.rs:28:9: 28:10
                                        scope 10 {
                                            debug f => _18; // in scope 10 at ui/closures/issue-72408-nested-closures-exponential.rs:28:9: 28:10
                                            let _20: impl Fn(i32) -> i32; // in scope 10 at ui/closures/issue-72408-nested-closures-exponential.rs:29:9: 29:10
                                            scope 11 {
                                                debug f => _20; // in scope 11 at ui/closures/issue-72408-nested-closures-exponential.rs:29:9: 29:10
                                                let _22: impl Fn(i32) -> i32; // in scope 11 at ui/closures/issue-72408-nested-closures-exponential.rs:31:9: 31:10
                                                scope 12 {
                                                    debug f => _22; // in scope 12 at ui/closures/issue-72408-nested-closures-exponential.rs:31:9: 31:10
                                                    let _24: impl Fn(i32) -> i32; // in scope 12 at ui/closures/issue-72408-nested-closures-exponential.rs:32:9: 32:10
                                                    scope 13 {
                                                        debug f => _24; // in scope 13 at ui/closures/issue-72408-nested-closures-exponential.rs:32:9: 32:10
                                                        let _26: impl Fn(i32) -> i32; // in scope 13 at ui/closures/issue-72408-nested-closures-exponential.rs:33:9: 33:10
                                                        scope 14 {
                                                            debug f => _26; // in scope 14 at ui/closures/issue-72408-nested-closures-exponential.rs:33:9: 33:10
                                                            let _28: impl Fn(i32) -> i32; // in scope 14 at ui/closures/issue-72408-nested-closures-exponential.rs:34:9: 34:10
                                                            scope 15 {
                                                                debug f => _28; // in scope 15 at ui/closures/issue-72408-nested-closures-exponential.rs:34:9: 34:10
                                                                let _30: impl Fn(i32) -> i32; // in scope 15 at ui/closures/issue-72408-nested-closures-exponential.rs:35:9: 35:10
                                                                scope 16 {
                                                                    debug f => _30; // in scope 16 at ui/closures/issue-72408-nested-closures-exponential.rs:35:9: 35:10
                                                                    let _32: impl Fn(i32) -> i32; // in scope 16 at ui/closures/issue-72408-nested-closures-exponential.rs:37:9: 37:10
                                                                    scope 17 {
                                                                        debug f => _32; // in scope 17 at ui/closures/issue-72408-nested-closures-exponential.rs:37:9: 37:10
                                                                        let _34: impl Fn(i32) -> i32; // in scope 17 at ui/closures/issue-72408-nested-closures-exponential.rs:38:9: 38:10
                                                                        scope 18 {
                                                                            debug f => _34; // in scope 18 at ui/closures/issue-72408-nested-closures-exponential.rs:38:9: 38:10
                                                                            let _36: impl Fn(i32) -> i32; // in scope 18 at ui/closures/issue-72408-nested-closures-exponential.rs:39:9: 39:10
                                                                            scope 19 {
                                                                                debug f => _36; // in scope 19 at ui/closures/issue-72408-nested-closures-exponential.rs:39:9: 39:10
                                                                                let _38: impl Fn(i32) -> i32; // in scope 19 at ui/closures/issue-72408-nested-closures-exponential.rs:40:9: 40:10
                                                                                scope 20 {
                                                                                    debug f => _38; // in scope 20 at ui/closures/issue-72408-nested-closures-exponential.rs:40:9: 40:10
                                                                                    let _40: impl Fn(i32) -> i32; // in scope 20 at ui/closures/issue-72408-nested-closures-exponential.rs:41:9: 41:10
                                                                                    scope 21 {
                                                                                        debug f => _40; // in scope 21 at ui/closures/issue-72408-nested-closures-exponential.rs:41:9: 41:10
                                                                                        let _42: impl Fn(i32) -> i32; // in scope 21 at ui/closures/issue-72408-nested-closures-exponential.rs:46:9: 46:10
                                                                                        scope 22 {
                                                                                            debug f => _42; // in scope 22 at ui/closures/issue-72408-nested-closures-exponential.rs:46:9: 46:10
                                                                                            let _44: impl Fn(i32) -> i32; // in scope 22 at ui/closures/issue-72408-nested-closures-exponential.rs:47:9: 47:10
                                                                                            scope 23 {
                                                                                                debug f => _44; // in scope 23 at ui/closures/issue-72408-nested-closures-exponential.rs:47:9: 47:10
                                                                                                let _46: impl Fn(i32) -> i32; // in scope 23 at ui/closures/issue-72408-nested-closures-exponential.rs:48:9: 48:10
                                                                                                scope 24 {
                                                                                                    debug f => _46; // in scope 24 at ui/closures/issue-72408-nested-closures-exponential.rs:48:9: 48:10
                                                                                                    let _48: impl Fn(i32) -> i32; // in scope 24 at ui/closures/issue-72408-nested-closures-exponential.rs:49:9: 49:10
                                                                                                    scope 25 {
                                                                                                        debug f => _48; // in scope 25 at ui/closures/issue-72408-nested-closures-exponential.rs:49:9: 49:10
                                                                                                        let _50: impl Fn(i32) -> i32; // in scope 25 at ui/closures/issue-72408-nested-closures-exponential.rs:50:9: 50:10
                                                                                                        scope 26 {
                                                                                                            debug f => _50; // in scope 26 at ui/closures/issue-72408-nested-closures-exponential.rs:50:9: 50:10
                                                                                                            let _52: impl Fn(i32) -> i32; // in scope 26 at ui/closures/issue-72408-nested-closures-exponential.rs:52:9: 52:10
                                                                                                            scope 27 {
                                                                                                                debug f => _52; // in scope 27 at ui/closures/issue-72408-nested-closures-exponential.rs:52:9: 52:10
                                                                                                                let _54: impl Fn(i32) -> i32; // in scope 27 at ui/closures/issue-72408-nested-closures-exponential.rs:53:9: 53:10
                                                                                                                scope 28 {
                                                                                                                    debug f => _54; // in scope 28 at ui/closures/issue-72408-nested-closures-exponential.rs:53:9: 53:10
                                                                                                                    let _56: impl Fn(i32) -> i32; // in scope 28 at ui/closures/issue-72408-nested-closures-exponential.rs:54:9: 54:10
                                                                                                                    scope 29 {
                                                                                                                        debug f => _56; // in scope 29 at ui/closures/issue-72408-nested-closures-exponential.rs:54:9: 54:10
                                                                                                                        let _58: impl Fn(i32) -> i32; // in scope 29 at ui/closures/issue-72408-nested-closures-exponential.rs:55:9: 55:10
                                                                                                                        scope 30 {
                                                                                                                            debug f => _58; // in scope 30 at ui/closures/issue-72408-nested-closures-exponential.rs:55:9: 55:10
                                                                                                                            let _60: impl Fn(i32) -> i32; // in scope 30 at ui/closures/issue-72408-nested-closures-exponential.rs:56:9: 56:10
                                                                                                                            scope 31 {
                                                                                                                                debug f => _60; // in scope 31 at ui/closures/issue-72408-nested-closures-exponential.rs:56:9: 56:10
                                                                                                                                let mut _77: &[&str; 2]; // in scope 31 at ui/closures/issue-72408-nested-closures-exponential.rs:58:14: 58:41
                                                                                                                            }
                                                                                                                        }
                                                                                                                    }
                                                                                                                }
                                                                                                            }
                                                                                                        }
                                                                                                    }
                                                                                                }
                                                                                            }
                                                                                        }
                                                                                    }
                                                                                }
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    }

    bb0: {
        _2 = dup::<[closure@ui/closures/issue-72408-nested-closures-exponential.rs:17:13: 17:16]>(move _3) -> bb1; // scope 1 at ui/closures/issue-72408-nested-closures-exponential.rs:19:13: 19:19
                                         // mir::Constant
                                         // + span: ui/closures/issue-72408-nested-closures-exponential.rs:19:13: 19:16
                                         // + literal: Const { ty: fn([closure@ui/closures/issue-72408-nested-closures-exponential.rs:17:13: 17:16]) -> impl Fn(i32) -> i32 {dup::<[closure@ui/closures/issue-72408-nested-closures-exponential.rs:17:13: 17:16]>}, val: Value(<ZST>) }
    }

    bb1: {
        _4 = dup::<impl Fn(i32) -> i32>(move _5) -> bb2; // scope 2 at ui/closures/issue-72408-nested-closures-exponential.rs:20:13: 20:19
                                         // mir::Constant
                                         // + span: ui/closures/issue-72408-nested-closures-exponential.rs:20:13: 20:16
                                         // + literal: Const { ty: fn(impl Fn(i32) -> i32) -> impl Fn(i32) -> i32 {dup::<impl Fn(i32) -> i32>}, val: Value(<ZST>) }
    }

    bb2: {
        _6 = dup::<impl Fn(i32) -> i32>(move _7) -> bb3; // scope 3 at ui/closures/issue-72408-nested-closures-exponential.rs:21:13: 21:19
                                         // mir::Constant
                                         // + span: ui/closures/issue-72408-nested-closures-exponential.rs:21:13: 21:16
                                         // + literal: Const { ty: fn(impl Fn(i32) -> i32) -> impl Fn(i32) -> i32 {dup::<impl Fn(i32) -> i32>}, val: Value(<ZST>) }
    }

    bb3: {
        _8 = dup::<impl Fn(i32) -> i32>(move _9) -> bb4; // scope 4 at ui/closures/issue-72408-nested-closures-exponential.rs:22:13: 22:19
                                         // mir::Constant
                                         // + span: ui/closures/issue-72408-nested-closures-exponential.rs:22:13: 22:16
                                         // + literal: Const { ty: fn(impl Fn(i32) -> i32) -> impl Fn(i32) -> i32 {dup::<impl Fn(i32) -> i32>}, val: Value(<ZST>) }
    }

    bb4: {
        _10 = dup::<impl Fn(i32) -> i32>(move _11) -> bb5; // scope 5 at ui/closures/issue-72408-nested-closures-exponential.rs:23:13: 23:19
                                         // mir::Constant
                                         // + span: ui/closures/issue-72408-nested-closures-exponential.rs:23:13: 23:16
                                         // + literal: Const { ty: fn(impl Fn(i32) -> i32) -> impl Fn(i32) -> i32 {dup::<impl Fn(i32) -> i32>}, val: Value(<ZST>) }
    }

    bb5: {
        _12 = dup::<impl Fn(i32) -> i32>(move _13) -> bb6; // scope 6 at ui/closures/issue-72408-nested-closures-exponential.rs:25:13: 25:19
                                         // mir::Constant
                                         // + span: ui/closures/issue-72408-nested-closures-exponential.rs:25:13: 25:16
                                         // + literal: Const { ty: fn(impl Fn(i32) -> i32) -> impl Fn(i32) -> i32 {dup::<impl Fn(i32) -> i32>}, val: Value(<ZST>) }
    }

    bb6: {
        _14 = dup::<impl Fn(i32) -> i32>(move _15) -> bb7; // scope 7 at ui/closures/issue-72408-nested-closures-exponential.rs:26:13: 26:19
                                         // mir::Constant
                                         // + span: ui/closures/issue-72408-nested-closures-exponential.rs:26:13: 26:16
                                         // + literal: Const { ty: fn(impl Fn(i32) -> i32) -> impl Fn(i32) -> i32 {dup::<impl Fn(i32) -> i32>}, val: Value(<ZST>) }
    }

    bb7: {
        _16 = dup::<impl Fn(i32) -> i32>(move _17) -> bb8; // scope 8 at ui/closures/issue-72408-nested-closures-exponential.rs:27:13: 27:19
                                         // mir::Constant
                                         // + span: ui/closures/issue-72408-nested-closures-exponential.rs:27:13: 27:16
                                         // + literal: Const { ty: fn(impl Fn(i32) -> i32) -> impl Fn(i32) -> i32 {dup::<impl Fn(i32) -> i32>}, val: Value(<ZST>) }
    }

    bb8: {
        _18 = dup::<impl Fn(i32) -> i32>(move _19) -> bb9; // scope 9 at ui/closures/issue-72408-nested-closures-exponential.rs:28:13: 28:19
                                         // mir::Constant
                                         // + span: ui/closures/issue-72408-nested-closures-exponential.rs:28:13: 28:16
                                         // + literal: Const { ty: fn(impl Fn(i32) -> i32) -> impl Fn(i32) -> i32 {dup::<impl Fn(i32) -> i32>}, val: Value(<ZST>) }
    }

    bb9: {
        _20 = dup::<impl Fn(i32) -> i32>(move _21) -> bb10; // scope 10 at ui/closures/issue-72408-nested-closures-exponential.rs:29:13: 29:19
                                         // mir::Constant
                                         // + span: ui/closures/issue-72408-nested-closures-exponential.rs:29:13: 29:16
                                         // + literal: Const { ty: fn(impl Fn(i32) -> i32) -> impl Fn(i32) -> i32 {dup::<impl Fn(i32) -> i32>}, val: Value(<ZST>) }
    }

    bb10: {
        _22 = dup::<impl Fn(i32) -> i32>(move _23) -> bb11; // scope 11 at ui/closures/issue-72408-nested-closures-exponential.rs:31:13: 31:19
                                         // mir::Constant
                                         // + span: ui/closures/issue-72408-nested-closures-exponential.rs:31:13: 31:16
                                         // + literal: Const { ty: fn(impl Fn(i32) -> i32) -> impl Fn(i32) -> i32 {dup::<impl Fn(i32) -> i32>}, val: Value(<ZST>) }
    }

    bb11: {
        _24 = dup::<impl Fn(i32) -> i32>(move _25) -> bb12; // scope 12 at ui/closures/issue-72408-nested-closures-exponential.rs:32:13: 32:19
                                         // mir::Constant
                                         // + span: ui/closures/issue-72408-nested-closures-exponential.rs:32:13: 32:16
                                         // + literal: Const { ty: fn(impl Fn(i32) -> i32) -> impl Fn(i32) -> i32 {dup::<impl Fn(i32) -> i32>}, val: Value(<ZST>) }
    }

    bb12: {
        _26 = dup::<impl Fn(i32) -> i32>(move _27) -> bb13; // scope 13 at ui/closures/issue-72408-nested-closures-exponential.rs:33:13: 33:19
                                         // mir::Constant
                                         // + span: ui/closures/issue-72408-nested-closures-exponential.rs:33:13: 33:16
                                         // + literal: Const { ty: fn(impl Fn(i32) -> i32) -> impl Fn(i32) -> i32 {dup::<impl Fn(i32) -> i32>}, val: Value(<ZST>) }
    }

    bb13: {
        _28 = dup::<impl Fn(i32) -> i32>(move _29) -> bb14; // scope 14 at ui/closures/issue-72408-nested-closures-exponential.rs:34:13: 34:19
                                         // mir::Constant
                                         // + span: ui/closures/issue-72408-nested-closures-exponential.rs:34:13: 34:16
                                         // + literal: Const { ty: fn(impl Fn(i32) -> i32) -> impl Fn(i32) -> i32 {dup::<impl Fn(i32) -> i32>}, val: Value(<ZST>) }
    }

    bb14: {
        _30 = dup::<impl Fn(i32) -> i32>(move _31) -> bb15; // scope 15 at ui/closures/issue-72408-nested-closures-exponential.rs:35:13: 35:19
                                         // mir::Constant
                                         // + span: ui/closures/issue-72408-nested-closures-exponential.rs:35:13: 35:16
                                         // + literal: Const { ty: fn(impl Fn(i32) -> i32) -> impl Fn(i32) -> i32 {dup::<impl Fn(i32) -> i32>}, val: Value(<ZST>) }
    }

    bb15: {
        _32 = dup::<impl Fn(i32) -> i32>(move _33) -> bb16; // scope 16 at ui/closures/issue-72408-nested-closures-exponential.rs:37:13: 37:19
                                         // mir::Constant
                                         // + span: ui/closures/issue-72408-nested-closures-exponential.rs:37:13: 37:16
                                         // + literal: Const { ty: fn(impl Fn(i32) -> i32) -> impl Fn(i32) -> i32 {dup::<impl Fn(i32) -> i32>}, val: Value(<ZST>) }
    }

    bb16: {
        _34 = dup::<impl Fn(i32) -> i32>(move _35) -> bb17; // scope 17 at ui/closures/issue-72408-nested-closures-exponential.rs:38:13: 38:19
                                         // mir::Constant
                                         // + span: ui/closures/issue-72408-nested-closures-exponential.rs:38:13: 38:16
                                         // + literal: Const { ty: fn(impl Fn(i32) -> i32) -> impl Fn(i32) -> i32 {dup::<impl Fn(i32) -> i32>}, val: Value(<ZST>) }
    }

    bb17: {
        _36 = dup::<impl Fn(i32) -> i32>(move _37) -> bb18; // scope 18 at ui/closures/issue-72408-nested-closures-exponential.rs:39:13: 39:19
                                         // mir::Constant
                                         // + span: ui/closures/issue-72408-nested-closures-exponential.rs:39:13: 39:16
                                         // + literal: Const { ty: fn(impl Fn(i32) -> i32) -> impl Fn(i32) -> i32 {dup::<impl Fn(i32) -> i32>}, val: Value(<ZST>) }
    }

    bb18: {
        _38 = dup::<impl Fn(i32) -> i32>(move _39) -> bb19; // scope 19 at ui/closures/issue-72408-nested-closures-exponential.rs:40:13: 40:19
                                         // mir::Constant
                                         // + span: ui/closures/issue-72408-nested-closures-exponential.rs:40:13: 40:16
                                         // + literal: Const { ty: fn(impl Fn(i32) -> i32) -> impl Fn(i32) -> i32 {dup::<impl Fn(i32) -> i32>}, val: Value(<ZST>) }
    }

    bb19: {
        _40 = dup::<impl Fn(i32) -> i32>(move _41) -> bb20; // scope 20 at ui/closures/issue-72408-nested-closures-exponential.rs:41:13: 41:19
                                         // mir::Constant
                                         // + span: ui/closures/issue-72408-nested-closures-exponential.rs:41:13: 41:16
                                         // + literal: Const { ty: fn(impl Fn(i32) -> i32) -> impl Fn(i32) -> i32 {dup::<impl Fn(i32) -> i32>}, val: Value(<ZST>) }
    }

    bb20: {
        _42 = dup::<impl Fn(i32) -> i32>(move _43) -> bb21; // scope 21 at ui/closures/issue-72408-nested-closures-exponential.rs:46:13: 46:19
                                         // mir::Constant
                                         // + span: ui/closures/issue-72408-nested-closures-exponential.rs:46:13: 46:16
                                         // + literal: Const { ty: fn(impl Fn(i32) -> i32) -> impl Fn(i32) -> i32 {dup::<impl Fn(i32) -> i32>}, val: Value(<ZST>) }
    }

    bb21: {
        _44 = dup::<impl Fn(i32) -> i32>(move _45) -> bb22; // scope 22 at ui/closures/issue-72408-nested-closures-exponential.rs:47:13: 47:19
                                         // mir::Constant
                                         // + span: ui/closures/issue-72408-nested-closures-exponential.rs:47:13: 47:16
                                         // + literal: Const { ty: fn(impl Fn(i32) -> i32) -> impl Fn(i32) -> i32 {dup::<impl Fn(i32) -> i32>}, val: Value(<ZST>) }
    }

    bb22: {
        _46 = dup::<impl Fn(i32) -> i32>(move _47) -> bb23; // scope 23 at ui/closures/issue-72408-nested-closures-exponential.rs:48:13: 48:19
                                         // mir::Constant
                                         // + span: ui/closures/issue-72408-nested-closures-exponential.rs:48:13: 48:16
                                         // + literal: Const { ty: fn(impl Fn(i32) -> i32) -> impl Fn(i32) -> i32 {dup::<impl Fn(i32) -> i32>}, val: Value(<ZST>) }
    }

    bb23: {
        _48 = dup::<impl Fn(i32) -> i32>(move _49) -> bb24; // scope 24 at ui/closures/issue-72408-nested-closures-exponential.rs:49:13: 49:19
                                         // mir::Constant
                                         // + span: ui/closures/issue-72408-nested-closures-exponential.rs:49:13: 49:16
                                         // + literal: Const { ty: fn(impl Fn(i32) -> i32) -> impl Fn(i32) -> i32 {dup::<impl Fn(i32) -> i32>}, val: Value(<ZST>) }
    }

    bb24: {
        _50 = dup::<impl Fn(i32) -> i32>(move _51) -> bb25; // scope 25 at ui/closures/issue-72408-nested-closures-exponential.rs:50:13: 50:19
                                         // mir::Constant
                                         // + span: ui/closures/issue-72408-nested-closures-exponential.rs:50:13: 50:16
                                         // + literal: Const { ty: fn(impl Fn(i32) -> i32) -> impl Fn(i32) -> i32 {dup::<impl Fn(i32) -> i32>}, val: Value(<ZST>) }
    }

    bb25: {
        _52 = dup::<impl Fn(i32) -> i32>(move _53) -> bb26; // scope 26 at ui/closures/issue-72408-nested-closures-exponential.rs:52:13: 52:19
                                         // mir::Constant
                                         // + span: ui/closures/issue-72408-nested-closures-exponential.rs:52:13: 52:16
                                         // + literal: Const { ty: fn(impl Fn(i32) -> i32) -> impl Fn(i32) -> i32 {dup::<impl Fn(i32) -> i32>}, val: Value(<ZST>) }
    }

    bb26: {
        _54 = dup::<impl Fn(i32) -> i32>(move _55) -> bb27; // scope 27 at ui/closures/issue-72408-nested-closures-exponential.rs:53:13: 53:19
                                         // mir::Constant
                                         // + span: ui/closures/issue-72408-nested-closures-exponential.rs:53:13: 53:16
                                         // + literal: Const { ty: fn(impl Fn(i32) -> i32) -> impl Fn(i32) -> i32 {dup::<impl Fn(i32) -> i32>}, val: Value(<ZST>) }
    }

    bb27: {
        _56 = dup::<impl Fn(i32) -> i32>(move _57) -> bb28; // scope 28 at ui/closures/issue-72408-nested-closures-exponential.rs:54:13: 54:19
                                         // mir::Constant
                                         // + span: ui/closures/issue-72408-nested-closures-exponential.rs:54:13: 54:16
                                         // + literal: Const { ty: fn(impl Fn(i32) -> i32) -> impl Fn(i32) -> i32 {dup::<impl Fn(i32) -> i32>}, val: Value(<ZST>) }
    }

    bb28: {
        _58 = dup::<impl Fn(i32) -> i32>(move _59) -> bb29; // scope 29 at ui/closures/issue-72408-nested-closures-exponential.rs:55:13: 55:19
                                         // mir::Constant
                                         // + span: ui/closures/issue-72408-nested-closures-exponential.rs:55:13: 55:16
                                         // + literal: Const { ty: fn(impl Fn(i32) -> i32) -> impl Fn(i32) -> i32 {dup::<impl Fn(i32) -> i32>}, val: Value(<ZST>) }
    }

    bb29: {
        _60 = dup::<impl Fn(i32) -> i32>(move _61) -> bb30; // scope 30 at ui/closures/issue-72408-nested-closures-exponential.rs:56:13: 56:19
                                         // mir::Constant
                                         // + span: ui/closures/issue-72408-nested-closures-exponential.rs:56:13: 56:16
                                         // + literal: Const { ty: fn(impl Fn(i32) -> i32) -> impl Fn(i32) -> i32 {dup::<impl Fn(i32) -> i32>}, val: Value(<ZST>) }
    }

    bb30: {
        _77 = const _;                   // scope 31 at ui/closures/issue-72408-nested-closures-exponential.rs:58:14: 58:41
                                         // mir::Constant
                                         // + span: ui/closures/issue-72408-nested-closures-exponential.rs:58:14: 58:41
                                         // + literal: Const { ty: &[&str; 2], val: Unevaluated(main, [], Some(promoted[0])) }
        _66 = _77;                       // scope 31 at ui/closures/issue-72408-nested-closures-exponential.rs:58:14: 58:41
        _65 = _66;                       // scope 31 at ui/closures/issue-72408-nested-closures-exponential.rs:58:14: 58:41
        _64 = move _65 as &[&str] (Pointer(Unsize)); // scope 31 at ui/closures/issue-72408-nested-closures-exponential.rs:58:14: 58:41
        _75 = &_60;                      // scope 31 at ui/closures/issue-72408-nested-closures-exponential.rs:58:43: 58:44
        _76 = const (1_i32,);            // scope 31 at ui/closures/issue-72408-nested-closures-exponential.rs:58:43: 58:47
        _74 = <impl Fn(i32) -> i32 as Fn<(i32,)>>::call(move _75, move _76) -> bb31; // scope 31 at ui/closures/issue-72408-nested-closures-exponential.rs:58:43: 58:47
                                         // mir::Constant
                                         // + span: ui/closures/issue-72408-nested-closures-exponential.rs:58:43: 58:44
                                         // + literal: Const { ty: for<'a> extern "rust-call" fn(&'a impl Fn(i32) -> i32, (i32,)) -> <impl Fn(i32) -> i32 as FnOnce<(i32,)>>::Output {<impl Fn(i32) -> i32 as Fn<(i32,)>>::call}, val: Value(<ZST>) }
    }

    bb31: {
        _73 = &_74;                      // scope 31 at ui/closures/issue-72408-nested-closures-exponential.rs:58:43: 58:47
        _72 = _73;                       // scope 31 at ui/closures/issue-72408-nested-closures-exponential.rs:58:43: 58:47
        _71 = core::fmt::ArgumentV1::<'_>::new_display::<i32>(move _72) -> bb32; // scope 31 at ui/closures/issue-72408-nested-closures-exponential.rs:58:43: 58:47
                                         // mir::Constant
                                         // + span: ui/closures/issue-72408-nested-closures-exponential.rs:58:43: 58:47
                                         // + user_ty: UserType(1)
                                         // + literal: Const { ty: for<'b> fn(&'b i32) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_display::<i32>}, val: Value(<ZST>) }
    }

    bb32: {
        _70 = [move _71];                // scope 31 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _69 = &_70;                      // scope 31 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _68 = _69;                       // scope 31 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _67 = move _68 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 31 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _63 = Arguments::<'_>::new_v1(move _64, move _67) -> bb33; // scope 31 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb33: {
        _62 = _print(move _63) -> bb34;  // scope 31 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:62
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:27
                                         // + literal: Const { ty: for<'a> fn(Arguments<'a>) {_print}, val: Value(<ZST>) }
    }

    bb34: {
        return;                          // scope 0 at ui/closures/issue-72408-nested-closures-exponential.rs:59:2: 59:2
    }
}

promoted[0] in main: &[&str; 2] = {
    let mut _0: &[&str; 2];              // return place in scope 0 at ui/closures/issue-72408-nested-closures-exponential.rs:58:14: 58:41
    let mut _1: [&str; 2];               // in scope 0 at ui/closures/issue-72408-nested-closures-exponential.rs:58:14: 58:41

    bb0: {
        _1 = [const "Type size was at least ", const "\n"]; // scope 0 at ui/closures/issue-72408-nested-closures-exponential.rs:58:14: 58:41
                                         // mir::Constant
                                         // + span: ui/closures/issue-72408-nested-closures-exponential.rs:58:14: 58:41
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
                                         // mir::Constant
                                         // + span: ui/closures/issue-72408-nested-closures-exponential.rs:58:14: 58:41
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at ui/closures/issue-72408-nested-closures-exponential.rs:58:14: 58:41
        return;                          // scope 0 at ui/closures/issue-72408-nested-closures-exponential.rs:58:14: 58:41
    }
}

fn main::{closure#0}(_1: &[closure@ui/closures/issue-72408-nested-closures-exponential.rs:17:13: 17:16], _2: i32) -> i32 {
    debug a => _2;                       // in scope 0 at ui/closures/issue-72408-nested-closures-exponential.rs:17:14: 17:15
    let mut _0: i32;                     // return place in scope 0 at ui/closures/issue-72408-nested-closures-exponential.rs:17:17: 17:17

    bb0: {
        _0 = _2;                         // scope 0 at ui/closures/issue-72408-nested-closures-exponential.rs:17:17: 17:18
        return;                          // scope 0 at ui/closures/issue-72408-nested-closures-exponential.rs:17:18: 17:18
    }
}
