// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
fn main() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/borrowck/borrowck-issue-2657-2_fixed.rs:2:11: 2:11
    let _1: std::option::Option<std::boxed::Box<i32>>; // in scope 0 at ui/borrowck/borrowck-issue-2657-2_fixed.rs:4:9: 4:10
    let mut _2: std::boxed::Box<i32>;    // in scope 0 at ui/borrowck/borrowck-issue-2657-2_fixed.rs:4:34: 4:45
    let mut _3: isize;                   // in scope 0 at ui/borrowck/borrowck-issue-2657-2_fixed.rs:7:7: 7:18
    scope 1 {
        debug x => _1;                   // in scope 1 at ui/borrowck/borrowck-issue-2657-2_fixed.rs:4:9: 4:10
        let _4: &std::boxed::Box<i32>;   // in scope 1 at ui/borrowck/borrowck-issue-2657-2_fixed.rs:7:12: 7:17
        scope 2 {
            debug y => _4;               // in scope 2 at ui/borrowck/borrowck-issue-2657-2_fixed.rs:7:12: 7:17
            let _5: &std::boxed::Box<i32>; // in scope 2 at ui/borrowck/borrowck-issue-2657-2_fixed.rs:8:13: 8:15
            scope 3 {
                debug _b => _5;          // in scope 3 at ui/borrowck/borrowck-issue-2657-2_fixed.rs:8:13: 8:15
            }
        }
    }

    bb0: {
        _2 = Box::<i32>::new(const 1_i32) -> bb1; // scope 0 at ui/borrowck/borrowck-issue-2657-2_fixed.rs:4:34: 4:45
                                         // mir::Constant
                                         // + span: ui/borrowck/borrowck-issue-2657-2_fixed.rs:4:34: 4:42
                                         // + user_ty: UserType(1)
                                         // + literal: Const { ty: fn(i32) -> Box<i32> {Box::<i32>::new}, val: Value(<ZST>) }
    }

    bb1: {
        _1 = Option::<Box<i32>>::Some(move _2); // scope 0 at ui/borrowck/borrowck-issue-2657-2_fixed.rs:4:29: 4:46
        _3 = discriminant(_1);           // scope 1 at ui/borrowck/borrowck-issue-2657-2_fixed.rs:6:11: 6:12
        switchInt(move _3) -> [1: bb2, otherwise: bb3]; // scope 1 at ui/borrowck/borrowck-issue-2657-2_fixed.rs:6:5: 6:12
    }

    bb2: {
        _4 = &((_1 as Some).0: std::boxed::Box<i32>); // scope 1 at ui/borrowck/borrowck-issue-2657-2_fixed.rs:7:12: 7:17
        _5 = _4;                         // scope 2 at ui/borrowck/borrowck-issue-2657-2_fixed.rs:8:18: 8:19
        goto -> bb3;                     // scope 1 at ui/borrowck/borrowck-issue-2657-2_fixed.rs:9:7: 9:8
    }

    bb3: {
        drop(_1) -> bb4;                 // scope 0 at ui/borrowck/borrowck-issue-2657-2_fixed.rs:12:1: 12:2
    }

    bb4: {
        return;                          // scope 0 at ui/borrowck/borrowck-issue-2657-2_fixed.rs:12:2: 12:2
    }
}
