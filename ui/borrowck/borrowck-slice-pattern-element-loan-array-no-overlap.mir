// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
fn nop(_1: &[&i32]) -> () {
    debug _s => _1;                      // in scope 0 at ui/borrowck/borrowck-slice-pattern-element-loan-array-no-overlap.rs:3:8: 3:10
    let mut _0: ();                      // return place in scope 0 at ui/borrowck/borrowck-slice-pattern-element-loan-array-no-overlap.rs:3:22: 3:22

    bb0: {
        return;                          // scope 0 at ui/borrowck/borrowck-slice-pattern-element-loan-array-no-overlap.rs:3:24: 3:24
    }
}

fn nop_subslice(_1: &[i32]) -> () {
    debug _s => _1;                      // in scope 0 at ui/borrowck/borrowck-slice-pattern-element-loan-array-no-overlap.rs:4:17: 4:19
    let mut _0: ();                      // return place in scope 0 at ui/borrowck/borrowck-slice-pattern-element-loan-array-no-overlap.rs:4:29: 4:29

    bb0: {
        return;                          // scope 0 at ui/borrowck/borrowck-slice-pattern-element-loan-array-no-overlap.rs:4:31: 4:31
    }
}

fn const_index_ok(_1: &mut [i32; 4]) -> () {
    debug s => _1;                       // in scope 0 at ui/borrowck/borrowck-slice-pattern-element-loan-array-no-overlap.rs:6:19: 6:20
    let mut _0: ();                      // return place in scope 0 at ui/borrowck/borrowck-slice-pattern-element-loan-array-no-overlap.rs:6:37: 6:37
    let _2: &i32;                        // in scope 0 at ui/borrowck/borrowck-slice-pattern-element-loan-array-no-overlap.rs:7:10: 7:19
    let _3: &i32;                        // in scope 0 at ui/borrowck/borrowck-slice-pattern-element-loan-array-no-overlap.rs:7:21: 7:31
    let _4: &i32;                        // in scope 0 at ui/borrowck/borrowck-slice-pattern-element-loan-array-no-overlap.rs:7:36: 7:46
    let _6: ();                          // in scope 0 at ui/borrowck/borrowck-slice-pattern-element-loan-array-no-overlap.rs:9:5: 9:41
    let mut _7: &[&i32];                 // in scope 0 at ui/borrowck/borrowck-slice-pattern-element-loan-array-no-overlap.rs:9:9: 9:40
    let mut _8: &[&i32; 4];              // in scope 0 at ui/borrowck/borrowck-slice-pattern-element-loan-array-no-overlap.rs:9:9: 9:40
    let _9: &[&i32; 4];                  // in scope 0 at ui/borrowck/borrowck-slice-pattern-element-loan-array-no-overlap.rs:9:9: 9:40
    let _10: [&i32; 4];                  // in scope 0 at ui/borrowck/borrowck-slice-pattern-element-loan-array-no-overlap.rs:9:10: 9:40
    let mut _11: &i32;                   // in scope 0 at ui/borrowck/borrowck-slice-pattern-element-loan-array-no-overlap.rs:9:11: 9:16
    let mut _12: &i32;                   // in scope 0 at ui/borrowck/borrowck-slice-pattern-element-loan-array-no-overlap.rs:9:18: 9:24
    let mut _13: &i32;                   // in scope 0 at ui/borrowck/borrowck-slice-pattern-element-loan-array-no-overlap.rs:9:26: 9:31
    let mut _14: &i32;                   // in scope 0 at ui/borrowck/borrowck-slice-pattern-element-loan-array-no-overlap.rs:9:33: 9:39
    scope 1 {
        debug first => _2;               // in scope 1 at ui/borrowck/borrowck-slice-pattern-element-loan-array-no-overlap.rs:7:10: 7:19
        debug second => _3;              // in scope 1 at ui/borrowck/borrowck-slice-pattern-element-loan-array-no-overlap.rs:7:21: 7:31
        debug fourth => _4;              // in scope 1 at ui/borrowck/borrowck-slice-pattern-element-loan-array-no-overlap.rs:7:36: 7:46
        let _5: &mut i32;                // in scope 1 at ui/borrowck/borrowck-slice-pattern-element-loan-array-no-overlap.rs:8:16: 8:29
        scope 2 {
            debug third => _5;           // in scope 2 at ui/borrowck/borrowck-slice-pattern-element-loan-array-no-overlap.rs:8:16: 8:29
        }
    }

    bb0: {
        _2 = &(*_1)[0 of 4];             // scope 0 at ui/borrowck/borrowck-slice-pattern-element-loan-array-no-overlap.rs:7:10: 7:19
        _3 = &(*_1)[1 of 4];             // scope 0 at ui/borrowck/borrowck-slice-pattern-element-loan-array-no-overlap.rs:7:21: 7:31
        _4 = &(*_1)[3 of 4];             // scope 0 at ui/borrowck/borrowck-slice-pattern-element-loan-array-no-overlap.rs:7:36: 7:46
        _5 = &mut (*_1)[2 of 4];         // scope 1 at ui/borrowck/borrowck-slice-pattern-element-loan-array-no-overlap.rs:8:16: 8:29
        _11 = _2;                        // scope 2 at ui/borrowck/borrowck-slice-pattern-element-loan-array-no-overlap.rs:9:11: 9:16
        _12 = _3;                        // scope 2 at ui/borrowck/borrowck-slice-pattern-element-loan-array-no-overlap.rs:9:18: 9:24
        _13 = &(*_5);                    // scope 2 at ui/borrowck/borrowck-slice-pattern-element-loan-array-no-overlap.rs:9:26: 9:31
        _14 = _4;                        // scope 2 at ui/borrowck/borrowck-slice-pattern-element-loan-array-no-overlap.rs:9:33: 9:39
        _10 = [move _11, move _12, move _13, move _14]; // scope 2 at ui/borrowck/borrowck-slice-pattern-element-loan-array-no-overlap.rs:9:10: 9:40
        _9 = &_10;                       // scope 2 at ui/borrowck/borrowck-slice-pattern-element-loan-array-no-overlap.rs:9:9: 9:40
        _8 = _9;                         // scope 2 at ui/borrowck/borrowck-slice-pattern-element-loan-array-no-overlap.rs:9:9: 9:40
        _7 = move _8 as &[&i32] (Pointer(Unsize)); // scope 2 at ui/borrowck/borrowck-slice-pattern-element-loan-array-no-overlap.rs:9:9: 9:40
        _6 = nop(move _7) -> bb1;        // scope 2 at ui/borrowck/borrowck-slice-pattern-element-loan-array-no-overlap.rs:9:5: 9:41
                                         // mir::Constant
                                         // + span: ui/borrowck/borrowck-slice-pattern-element-loan-array-no-overlap.rs:9:5: 9:8
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a [&'b i32]) {nop}, val: Value(<ZST>) }
    }

    bb1: {
        return;                          // scope 0 at ui/borrowck/borrowck-slice-pattern-element-loan-array-no-overlap.rs:10:2: 10:2
    }
}

const_index_ok::{constant#0}: usize = {
    let mut _0: usize;                   // return place in scope 0 at ui/borrowck/borrowck-slice-pattern-element-loan-array-no-overlap.rs:6:33: 6:34

    bb0: {
        _0 = const 4_usize;              // scope 0 at ui/borrowck/borrowck-slice-pattern-element-loan-array-no-overlap.rs:6:33: 6:34
        return;                          // scope 0 at ui/borrowck/borrowck-slice-pattern-element-loan-array-no-overlap.rs:6:33: 6:34
    }
}

fn const_index_from_end_ok(_1: &mut [i32; 4]) -> () {
    debug s => _1;                       // in scope 0 at ui/borrowck/borrowck-slice-pattern-element-loan-array-no-overlap.rs:12:28: 12:29
    let mut _0: ();                      // return place in scope 0 at ui/borrowck/borrowck-slice-pattern-element-loan-array-no-overlap.rs:12:46: 12:46
    let _2: &i32;                        // in scope 0 at ui/borrowck/borrowck-slice-pattern-element-loan-array-no-overlap.rs:13:14: 13:24
    let _3: &i32;                        // in scope 0 at ui/borrowck/borrowck-slice-pattern-element-loan-array-no-overlap.rs:13:26: 13:35
    let _4: &i32;                        // in scope 0 at ui/borrowck/borrowck-slice-pattern-element-loan-array-no-overlap.rs:13:40: 13:49
    let _6: ();                          // in scope 0 at ui/borrowck/borrowck-slice-pattern-element-loan-array-no-overlap.rs:15:5: 15:41
    let mut _7: &[&i32];                 // in scope 0 at ui/borrowck/borrowck-slice-pattern-element-loan-array-no-overlap.rs:15:9: 15:40
    let mut _8: &[&i32; 4];              // in scope 0 at ui/borrowck/borrowck-slice-pattern-element-loan-array-no-overlap.rs:15:9: 15:40
    let _9: &[&i32; 4];                  // in scope 0 at ui/borrowck/borrowck-slice-pattern-element-loan-array-no-overlap.rs:15:9: 15:40
    let _10: [&i32; 4];                  // in scope 0 at ui/borrowck/borrowck-slice-pattern-element-loan-array-no-overlap.rs:15:10: 15:40
    let mut _11: &i32;                   // in scope 0 at ui/borrowck/borrowck-slice-pattern-element-loan-array-no-overlap.rs:15:11: 15:16
    let mut _12: &i32;                   // in scope 0 at ui/borrowck/borrowck-slice-pattern-element-loan-array-no-overlap.rs:15:18: 15:24
    let mut _13: &i32;                   // in scope 0 at ui/borrowck/borrowck-slice-pattern-element-loan-array-no-overlap.rs:15:26: 15:31
    let mut _14: &i32;                   // in scope 0 at ui/borrowck/borrowck-slice-pattern-element-loan-array-no-overlap.rs:15:33: 15:39
    scope 1 {
        debug fourth => _2;              // in scope 1 at ui/borrowck/borrowck-slice-pattern-element-loan-array-no-overlap.rs:13:14: 13:24
        debug third => _3;               // in scope 1 at ui/borrowck/borrowck-slice-pattern-element-loan-array-no-overlap.rs:13:26: 13:35
        debug first => _4;               // in scope 1 at ui/borrowck/borrowck-slice-pattern-element-loan-array-no-overlap.rs:13:40: 13:49
        let _5: &mut i32;                // in scope 1 at ui/borrowck/borrowck-slice-pattern-element-loan-array-no-overlap.rs:14:14: 14:28
        scope 2 {
            debug second => _5;          // in scope 2 at ui/borrowck/borrowck-slice-pattern-element-loan-array-no-overlap.rs:14:14: 14:28
        }
    }

    bb0: {
        _4 = &(*_1)[3 of 4];             // scope 0 at ui/borrowck/borrowck-slice-pattern-element-loan-array-no-overlap.rs:13:40: 13:49
        _3 = &(*_1)[1 of 4];             // scope 0 at ui/borrowck/borrowck-slice-pattern-element-loan-array-no-overlap.rs:13:26: 13:35
        _2 = &(*_1)[0 of 4];             // scope 0 at ui/borrowck/borrowck-slice-pattern-element-loan-array-no-overlap.rs:13:14: 13:24
        _5 = &mut (*_1)[2 of 4];         // scope 1 at ui/borrowck/borrowck-slice-pattern-element-loan-array-no-overlap.rs:14:14: 14:28
        _11 = _4;                        // scope 2 at ui/borrowck/borrowck-slice-pattern-element-loan-array-no-overlap.rs:15:11: 15:16
        _12 = &(*_5);                    // scope 2 at ui/borrowck/borrowck-slice-pattern-element-loan-array-no-overlap.rs:15:18: 15:24
        _13 = _3;                        // scope 2 at ui/borrowck/borrowck-slice-pattern-element-loan-array-no-overlap.rs:15:26: 15:31
        _14 = _2;                        // scope 2 at ui/borrowck/borrowck-slice-pattern-element-loan-array-no-overlap.rs:15:33: 15:39
        _10 = [move _11, move _12, move _13, move _14]; // scope 2 at ui/borrowck/borrowck-slice-pattern-element-loan-array-no-overlap.rs:15:10: 15:40
        _9 = &_10;                       // scope 2 at ui/borrowck/borrowck-slice-pattern-element-loan-array-no-overlap.rs:15:9: 15:40
        _8 = _9;                         // scope 2 at ui/borrowck/borrowck-slice-pattern-element-loan-array-no-overlap.rs:15:9: 15:40
        _7 = move _8 as &[&i32] (Pointer(Unsize)); // scope 2 at ui/borrowck/borrowck-slice-pattern-element-loan-array-no-overlap.rs:15:9: 15:40
        _6 = nop(move _7) -> bb1;        // scope 2 at ui/borrowck/borrowck-slice-pattern-element-loan-array-no-overlap.rs:15:5: 15:41
                                         // mir::Constant
                                         // + span: ui/borrowck/borrowck-slice-pattern-element-loan-array-no-overlap.rs:15:5: 15:8
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a [&'b i32]) {nop}, val: Value(<ZST>) }
    }

    bb1: {
        return;                          // scope 0 at ui/borrowck/borrowck-slice-pattern-element-loan-array-no-overlap.rs:16:2: 16:2
    }
}

const_index_from_end_ok::{constant#0}: usize = {
    let mut _0: usize;                   // return place in scope 0 at ui/borrowck/borrowck-slice-pattern-element-loan-array-no-overlap.rs:12:42: 12:43

    bb0: {
        _0 = const 4_usize;              // scope 0 at ui/borrowck/borrowck-slice-pattern-element-loan-array-no-overlap.rs:12:42: 12:43
        return;                          // scope 0 at ui/borrowck/borrowck-slice-pattern-element-loan-array-no-overlap.rs:12:42: 12:43
    }
}

fn const_index_mixed(_1: &mut [i32; 6]) -> () {
    debug s => _1;                       // in scope 0 at ui/borrowck/borrowck-slice-pattern-element-loan-array-no-overlap.rs:18:22: 18:23
    let mut _0: ();                      // return place in scope 0 at ui/borrowck/borrowck-slice-pattern-element-loan-array-no-overlap.rs:18:40: 18:40
    let _2: &i32;                        // in scope 0 at ui/borrowck/borrowck-slice-pattern-element-loan-array-no-overlap.rs:19:17: 19:30
    let _3: &i32;                        // in scope 0 at ui/borrowck/borrowck-slice-pattern-element-loan-array-no-overlap.rs:19:32: 19:45
    let _4: &i32;                        // in scope 0 at ui/borrowck/borrowck-slice-pattern-element-loan-array-no-overlap.rs:19:50: 19:63
    let _6: ();                          // in scope 0 at ui/borrowck/borrowck-slice-pattern-element-loan-array-no-overlap.rs:22:5: 22:57
    let mut _7: &[&i32];                 // in scope 0 at ui/borrowck/borrowck-slice-pattern-element-loan-array-no-overlap.rs:22:9: 22:56
    let mut _8: &[&i32; 4];              // in scope 0 at ui/borrowck/borrowck-slice-pattern-element-loan-array-no-overlap.rs:22:9: 22:56
    let _9: &[&i32; 4];                  // in scope 0 at ui/borrowck/borrowck-slice-pattern-element-loan-array-no-overlap.rs:22:9: 22:56
    let _10: [&i32; 4];                  // in scope 0 at ui/borrowck/borrowck-slice-pattern-element-loan-array-no-overlap.rs:22:10: 22:56
    let mut _11: &i32;                   // in scope 0 at ui/borrowck/borrowck-slice-pattern-element-loan-array-no-overlap.rs:22:11: 22:22
    let mut _12: &i32;                   // in scope 0 at ui/borrowck/borrowck-slice-pattern-element-loan-array-no-overlap.rs:22:24: 22:33
    let mut _13: &i32;                   // in scope 0 at ui/borrowck/borrowck-slice-pattern-element-loan-array-no-overlap.rs:22:35: 22:44
    let mut _14: &i32;                   // in scope 0 at ui/borrowck/borrowck-slice-pattern-element-loan-array-no-overlap.rs:22:46: 22:55
    let _16: ();                         // in scope 0 at ui/borrowck/borrowck-slice-pattern-element-loan-array-no-overlap.rs:24:5: 24:57
    let mut _17: &[&i32];                // in scope 0 at ui/borrowck/borrowck-slice-pattern-element-loan-array-no-overlap.rs:24:9: 24:56
    let mut _18: &[&i32; 4];             // in scope 0 at ui/borrowck/borrowck-slice-pattern-element-loan-array-no-overlap.rs:24:9: 24:56
    let _19: &[&i32; 4];                 // in scope 0 at ui/borrowck/borrowck-slice-pattern-element-loan-array-no-overlap.rs:24:9: 24:56
    let _20: [&i32; 4];                  // in scope 0 at ui/borrowck/borrowck-slice-pattern-element-loan-array-no-overlap.rs:24:10: 24:56
    let mut _21: &i32;                   // in scope 0 at ui/borrowck/borrowck-slice-pattern-element-loan-array-no-overlap.rs:24:11: 24:22
    let mut _22: &i32;                   // in scope 0 at ui/borrowck/borrowck-slice-pattern-element-loan-array-no-overlap.rs:24:24: 24:33
    let mut _23: &i32;                   // in scope 0 at ui/borrowck/borrowck-slice-pattern-element-loan-array-no-overlap.rs:24:35: 24:44
    let mut _24: &i32;                   // in scope 0 at ui/borrowck/borrowck-slice-pattern-element-loan-array-no-overlap.rs:24:46: 24:55
    let _29: ();                         // in scope 0 at ui/borrowck/borrowck-slice-pattern-element-loan-array-no-overlap.rs:29:5: 29:61
    let mut _30: &[&i32];                // in scope 0 at ui/borrowck/borrowck-slice-pattern-element-loan-array-no-overlap.rs:29:9: 29:60
    let mut _31: &[&i32; 4];             // in scope 0 at ui/borrowck/borrowck-slice-pattern-element-loan-array-no-overlap.rs:29:9: 29:60
    let _32: &[&i32; 4];                 // in scope 0 at ui/borrowck/borrowck-slice-pattern-element-loan-array-no-overlap.rs:29:9: 29:60
    let _33: [&i32; 4];                  // in scope 0 at ui/borrowck/borrowck-slice-pattern-element-loan-array-no-overlap.rs:29:10: 29:60
    let mut _34: &i32;                   // in scope 0 at ui/borrowck/borrowck-slice-pattern-element-loan-array-no-overlap.rs:29:11: 29:22
    let mut _35: &i32;                   // in scope 0 at ui/borrowck/borrowck-slice-pattern-element-loan-array-no-overlap.rs:29:24: 29:35
    let mut _36: &i32;                   // in scope 0 at ui/borrowck/borrowck-slice-pattern-element-loan-array-no-overlap.rs:29:37: 29:48
    let mut _37: &i32;                   // in scope 0 at ui/borrowck/borrowck-slice-pattern-element-loan-array-no-overlap.rs:29:50: 29:59
    let _39: ();                         // in scope 0 at ui/borrowck/borrowck-slice-pattern-element-loan-array-no-overlap.rs:31:5: 31:61
    let mut _40: &[&i32];                // in scope 0 at ui/borrowck/borrowck-slice-pattern-element-loan-array-no-overlap.rs:31:9: 31:60
    let mut _41: &[&i32; 4];             // in scope 0 at ui/borrowck/borrowck-slice-pattern-element-loan-array-no-overlap.rs:31:9: 31:60
    let _42: &[&i32; 4];                 // in scope 0 at ui/borrowck/borrowck-slice-pattern-element-loan-array-no-overlap.rs:31:9: 31:60
    let _43: [&i32; 4];                  // in scope 0 at ui/borrowck/borrowck-slice-pattern-element-loan-array-no-overlap.rs:31:10: 31:60
    let mut _44: &i32;                   // in scope 0 at ui/borrowck/borrowck-slice-pattern-element-loan-array-no-overlap.rs:31:11: 31:22
    let mut _45: &i32;                   // in scope 0 at ui/borrowck/borrowck-slice-pattern-element-loan-array-no-overlap.rs:31:24: 31:35
    let mut _46: &i32;                   // in scope 0 at ui/borrowck/borrowck-slice-pattern-element-loan-array-no-overlap.rs:31:37: 31:48
    let mut _47: &i32;                   // in scope 0 at ui/borrowck/borrowck-slice-pattern-element-loan-array-no-overlap.rs:31:50: 31:59
    let _49: ();                         // in scope 0 at ui/borrowck/borrowck-slice-pattern-element-loan-array-no-overlap.rs:33:5: 33:61
    let mut _50: &[&i32];                // in scope 0 at ui/borrowck/borrowck-slice-pattern-element-loan-array-no-overlap.rs:33:9: 33:60
    let mut _51: &[&i32; 4];             // in scope 0 at ui/borrowck/borrowck-slice-pattern-element-loan-array-no-overlap.rs:33:9: 33:60
    let _52: &[&i32; 4];                 // in scope 0 at ui/borrowck/borrowck-slice-pattern-element-loan-array-no-overlap.rs:33:9: 33:60
    let _53: [&i32; 4];                  // in scope 0 at ui/borrowck/borrowck-slice-pattern-element-loan-array-no-overlap.rs:33:10: 33:60
    let mut _54: &i32;                   // in scope 0 at ui/borrowck/borrowck-slice-pattern-element-loan-array-no-overlap.rs:33:11: 33:22
    let mut _55: &i32;                   // in scope 0 at ui/borrowck/borrowck-slice-pattern-element-loan-array-no-overlap.rs:33:24: 33:35
    let mut _56: &i32;                   // in scope 0 at ui/borrowck/borrowck-slice-pattern-element-loan-array-no-overlap.rs:33:37: 33:48
    let mut _57: &i32;                   // in scope 0 at ui/borrowck/borrowck-slice-pattern-element-loan-array-no-overlap.rs:33:50: 33:59
    scope 1 {
        debug from_end4 => _2;           // in scope 1 at ui/borrowck/borrowck-slice-pattern-element-loan-array-no-overlap.rs:19:17: 19:30
        debug from_end3 => _3;           // in scope 1 at ui/borrowck/borrowck-slice-pattern-element-loan-array-no-overlap.rs:19:32: 19:45
        debug from_end1 => _4;           // in scope 1 at ui/borrowck/borrowck-slice-pattern-element-loan-array-no-overlap.rs:19:50: 19:63
        let _5: &mut i32;                // in scope 1 at ui/borrowck/borrowck-slice-pattern-element-loan-array-no-overlap.rs:21:10: 21:29
        scope 2 {
            debug from_begin0 => _5;     // in scope 2 at ui/borrowck/borrowck-slice-pattern-element-loan-array-no-overlap.rs:21:10: 21:29
            let _15: &mut i32;           // in scope 2 at ui/borrowck/borrowck-slice-pattern-element-loan-array-no-overlap.rs:23:13: 23:32
            scope 3 {
                debug from_begin1 => _15; // in scope 3 at ui/borrowck/borrowck-slice-pattern-element-loan-array-no-overlap.rs:23:13: 23:32
                let _25: &i32;           // in scope 3 at ui/borrowck/borrowck-slice-pattern-element-loan-array-no-overlap.rs:26:10: 26:25
                let _26: &i32;           // in scope 3 at ui/borrowck/borrowck-slice-pattern-element-loan-array-no-overlap.rs:26:27: 26:42
                let _27: &i32;           // in scope 3 at ui/borrowck/borrowck-slice-pattern-element-loan-array-no-overlap.rs:26:47: 26:62
                scope 4 {
                    debug from_begin0 => _25; // in scope 4 at ui/borrowck/borrowck-slice-pattern-element-loan-array-no-overlap.rs:26:10: 26:25
                    debug from_begin1 => _26; // in scope 4 at ui/borrowck/borrowck-slice-pattern-element-loan-array-no-overlap.rs:26:27: 26:42
                    debug from_begin3 => _27; // in scope 4 at ui/borrowck/borrowck-slice-pattern-element-loan-array-no-overlap.rs:26:47: 26:62
                    let _28: &mut i32;   // in scope 4 at ui/borrowck/borrowck-slice-pattern-element-loan-array-no-overlap.rs:28:14: 28:31
                    scope 5 {
                        debug from_end1 => _28; // in scope 5 at ui/borrowck/borrowck-slice-pattern-element-loan-array-no-overlap.rs:28:14: 28:31
                        let _38: &mut i32; // in scope 5 at ui/borrowck/borrowck-slice-pattern-element-loan-array-no-overlap.rs:30:14: 30:31
                        scope 6 {
                            debug from_end2 => _38; // in scope 6 at ui/borrowck/borrowck-slice-pattern-element-loan-array-no-overlap.rs:30:14: 30:31
                            let _48: &mut i32; // in scope 6 at ui/borrowck/borrowck-slice-pattern-element-loan-array-no-overlap.rs:32:14: 32:31
                            scope 7 {
                                debug from_end4 => _48; // in scope 7 at ui/borrowck/borrowck-slice-pattern-element-loan-array-no-overlap.rs:32:14: 32:31
                            }
                        }
                    }
                }
            }
        }
    }

    bb0: {
        _4 = &(*_1)[5 of 6];             // scope 0 at ui/borrowck/borrowck-slice-pattern-element-loan-array-no-overlap.rs:19:50: 19:63
        _3 = &(*_1)[3 of 6];             // scope 0 at ui/borrowck/borrowck-slice-pattern-element-loan-array-no-overlap.rs:19:32: 19:45
        _2 = &(*_1)[2 of 6];             // scope 0 at ui/borrowck/borrowck-slice-pattern-element-loan-array-no-overlap.rs:19:17: 19:30
        _5 = &mut (*_1)[0 of 6];         // scope 1 at ui/borrowck/borrowck-slice-pattern-element-loan-array-no-overlap.rs:21:10: 21:29
        _11 = &(*_5);                    // scope 2 at ui/borrowck/borrowck-slice-pattern-element-loan-array-no-overlap.rs:22:11: 22:22
        _12 = _4;                        // scope 2 at ui/borrowck/borrowck-slice-pattern-element-loan-array-no-overlap.rs:22:24: 22:33
        _13 = _3;                        // scope 2 at ui/borrowck/borrowck-slice-pattern-element-loan-array-no-overlap.rs:22:35: 22:44
        _14 = _2;                        // scope 2 at ui/borrowck/borrowck-slice-pattern-element-loan-array-no-overlap.rs:22:46: 22:55
        _10 = [move _11, move _12, move _13, move _14]; // scope 2 at ui/borrowck/borrowck-slice-pattern-element-loan-array-no-overlap.rs:22:10: 22:56
        _9 = &_10;                       // scope 2 at ui/borrowck/borrowck-slice-pattern-element-loan-array-no-overlap.rs:22:9: 22:56
        _8 = _9;                         // scope 2 at ui/borrowck/borrowck-slice-pattern-element-loan-array-no-overlap.rs:22:9: 22:56
        _7 = move _8 as &[&i32] (Pointer(Unsize)); // scope 2 at ui/borrowck/borrowck-slice-pattern-element-loan-array-no-overlap.rs:22:9: 22:56
        _6 = nop(move _7) -> bb1;        // scope 2 at ui/borrowck/borrowck-slice-pattern-element-loan-array-no-overlap.rs:22:5: 22:57
                                         // mir::Constant
                                         // + span: ui/borrowck/borrowck-slice-pattern-element-loan-array-no-overlap.rs:22:5: 22:8
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a [&'b i32]) {nop}, val: Value(<ZST>) }
    }

    bb1: {
        _15 = &mut (*_1)[1 of 6];        // scope 2 at ui/borrowck/borrowck-slice-pattern-element-loan-array-no-overlap.rs:23:13: 23:32
        _21 = &(*_15);                   // scope 3 at ui/borrowck/borrowck-slice-pattern-element-loan-array-no-overlap.rs:24:11: 24:22
        _22 = _4;                        // scope 3 at ui/borrowck/borrowck-slice-pattern-element-loan-array-no-overlap.rs:24:24: 24:33
        _23 = _3;                        // scope 3 at ui/borrowck/borrowck-slice-pattern-element-loan-array-no-overlap.rs:24:35: 24:44
        _24 = _2;                        // scope 3 at ui/borrowck/borrowck-slice-pattern-element-loan-array-no-overlap.rs:24:46: 24:55
        _20 = [move _21, move _22, move _23, move _24]; // scope 3 at ui/borrowck/borrowck-slice-pattern-element-loan-array-no-overlap.rs:24:10: 24:56
        _19 = &_20;                      // scope 3 at ui/borrowck/borrowck-slice-pattern-element-loan-array-no-overlap.rs:24:9: 24:56
        _18 = _19;                       // scope 3 at ui/borrowck/borrowck-slice-pattern-element-loan-array-no-overlap.rs:24:9: 24:56
        _17 = move _18 as &[&i32] (Pointer(Unsize)); // scope 3 at ui/borrowck/borrowck-slice-pattern-element-loan-array-no-overlap.rs:24:9: 24:56
        _16 = nop(move _17) -> bb2;      // scope 3 at ui/borrowck/borrowck-slice-pattern-element-loan-array-no-overlap.rs:24:5: 24:57
                                         // mir::Constant
                                         // + span: ui/borrowck/borrowck-slice-pattern-element-loan-array-no-overlap.rs:24:5: 24:8
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a [&'b i32]) {nop}, val: Value(<ZST>) }
    }

    bb2: {
        _25 = &(*_1)[0 of 6];            // scope 3 at ui/borrowck/borrowck-slice-pattern-element-loan-array-no-overlap.rs:26:10: 26:25
        _26 = &(*_1)[1 of 6];            // scope 3 at ui/borrowck/borrowck-slice-pattern-element-loan-array-no-overlap.rs:26:27: 26:42
        _27 = &(*_1)[3 of 6];            // scope 3 at ui/borrowck/borrowck-slice-pattern-element-loan-array-no-overlap.rs:26:47: 26:62
        _28 = &mut (*_1)[5 of 6];        // scope 4 at ui/borrowck/borrowck-slice-pattern-element-loan-array-no-overlap.rs:28:14: 28:31
        _34 = _25;                       // scope 5 at ui/borrowck/borrowck-slice-pattern-element-loan-array-no-overlap.rs:29:11: 29:22
        _35 = _26;                       // scope 5 at ui/borrowck/borrowck-slice-pattern-element-loan-array-no-overlap.rs:29:24: 29:35
        _36 = _27;                       // scope 5 at ui/borrowck/borrowck-slice-pattern-element-loan-array-no-overlap.rs:29:37: 29:48
        _37 = &(*_28);                   // scope 5 at ui/borrowck/borrowck-slice-pattern-element-loan-array-no-overlap.rs:29:50: 29:59
        _33 = [move _34, move _35, move _36, move _37]; // scope 5 at ui/borrowck/borrowck-slice-pattern-element-loan-array-no-overlap.rs:29:10: 29:60
        _32 = &_33;                      // scope 5 at ui/borrowck/borrowck-slice-pattern-element-loan-array-no-overlap.rs:29:9: 29:60
        _31 = _32;                       // scope 5 at ui/borrowck/borrowck-slice-pattern-element-loan-array-no-overlap.rs:29:9: 29:60
        _30 = move _31 as &[&i32] (Pointer(Unsize)); // scope 5 at ui/borrowck/borrowck-slice-pattern-element-loan-array-no-overlap.rs:29:9: 29:60
        _29 = nop(move _30) -> bb3;      // scope 5 at ui/borrowck/borrowck-slice-pattern-element-loan-array-no-overlap.rs:29:5: 29:61
                                         // mir::Constant
                                         // + span: ui/borrowck/borrowck-slice-pattern-element-loan-array-no-overlap.rs:29:5: 29:8
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a [&'b i32]) {nop}, val: Value(<ZST>) }
    }

    bb3: {
        _38 = &mut (*_1)[4 of 6];        // scope 5 at ui/borrowck/borrowck-slice-pattern-element-loan-array-no-overlap.rs:30:14: 30:31
        _44 = _25;                       // scope 6 at ui/borrowck/borrowck-slice-pattern-element-loan-array-no-overlap.rs:31:11: 31:22
        _45 = _26;                       // scope 6 at ui/borrowck/borrowck-slice-pattern-element-loan-array-no-overlap.rs:31:24: 31:35
        _46 = _27;                       // scope 6 at ui/borrowck/borrowck-slice-pattern-element-loan-array-no-overlap.rs:31:37: 31:48
        _47 = &(*_38);                   // scope 6 at ui/borrowck/borrowck-slice-pattern-element-loan-array-no-overlap.rs:31:50: 31:59
        _43 = [move _44, move _45, move _46, move _47]; // scope 6 at ui/borrowck/borrowck-slice-pattern-element-loan-array-no-overlap.rs:31:10: 31:60
        _42 = &_43;                      // scope 6 at ui/borrowck/borrowck-slice-pattern-element-loan-array-no-overlap.rs:31:9: 31:60
        _41 = _42;                       // scope 6 at ui/borrowck/borrowck-slice-pattern-element-loan-array-no-overlap.rs:31:9: 31:60
        _40 = move _41 as &[&i32] (Pointer(Unsize)); // scope 6 at ui/borrowck/borrowck-slice-pattern-element-loan-array-no-overlap.rs:31:9: 31:60
        _39 = nop(move _40) -> bb4;      // scope 6 at ui/borrowck/borrowck-slice-pattern-element-loan-array-no-overlap.rs:31:5: 31:61
                                         // mir::Constant
                                         // + span: ui/borrowck/borrowck-slice-pattern-element-loan-array-no-overlap.rs:31:5: 31:8
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a [&'b i32]) {nop}, val: Value(<ZST>) }
    }

    bb4: {
        _48 = &mut (*_1)[2 of 6];        // scope 6 at ui/borrowck/borrowck-slice-pattern-element-loan-array-no-overlap.rs:32:14: 32:31
        _54 = _25;                       // scope 7 at ui/borrowck/borrowck-slice-pattern-element-loan-array-no-overlap.rs:33:11: 33:22
        _55 = _26;                       // scope 7 at ui/borrowck/borrowck-slice-pattern-element-loan-array-no-overlap.rs:33:24: 33:35
        _56 = _27;                       // scope 7 at ui/borrowck/borrowck-slice-pattern-element-loan-array-no-overlap.rs:33:37: 33:48
        _57 = &(*_48);                   // scope 7 at ui/borrowck/borrowck-slice-pattern-element-loan-array-no-overlap.rs:33:50: 33:59
        _53 = [move _54, move _55, move _56, move _57]; // scope 7 at ui/borrowck/borrowck-slice-pattern-element-loan-array-no-overlap.rs:33:10: 33:60
        _52 = &_53;                      // scope 7 at ui/borrowck/borrowck-slice-pattern-element-loan-array-no-overlap.rs:33:9: 33:60
        _51 = _52;                       // scope 7 at ui/borrowck/borrowck-slice-pattern-element-loan-array-no-overlap.rs:33:9: 33:60
        _50 = move _51 as &[&i32] (Pointer(Unsize)); // scope 7 at ui/borrowck/borrowck-slice-pattern-element-loan-array-no-overlap.rs:33:9: 33:60
        _49 = nop(move _50) -> bb5;      // scope 7 at ui/borrowck/borrowck-slice-pattern-element-loan-array-no-overlap.rs:33:5: 33:61
                                         // mir::Constant
                                         // + span: ui/borrowck/borrowck-slice-pattern-element-loan-array-no-overlap.rs:33:5: 33:8
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a [&'b i32]) {nop}, val: Value(<ZST>) }
    }

    bb5: {
        return;                          // scope 0 at ui/borrowck/borrowck-slice-pattern-element-loan-array-no-overlap.rs:34:2: 34:2
    }
}

const_index_mixed::{constant#0}: usize = {
    let mut _0: usize;                   // return place in scope 0 at ui/borrowck/borrowck-slice-pattern-element-loan-array-no-overlap.rs:18:36: 18:37

    bb0: {
        _0 = const 6_usize;              // scope 0 at ui/borrowck/borrowck-slice-pattern-element-loan-array-no-overlap.rs:18:36: 18:37
        return;                          // scope 0 at ui/borrowck/borrowck-slice-pattern-element-loan-array-no-overlap.rs:18:36: 18:37
    }
}

fn const_index_and_subslice_ok(_1: &mut [i32; 4]) -> () {
    debug s => _1;                       // in scope 0 at ui/borrowck/borrowck-slice-pattern-element-loan-array-no-overlap.rs:36:32: 36:33
    let mut _0: ();                      // return place in scope 0 at ui/borrowck/borrowck-slice-pattern-element-loan-array-no-overlap.rs:36:50: 36:50
    let _2: &i32;                        // in scope 0 at ui/borrowck/borrowck-slice-pattern-element-loan-array-no-overlap.rs:37:10: 37:19
    let _3: &i32;                        // in scope 0 at ui/borrowck/borrowck-slice-pattern-element-loan-array-no-overlap.rs:37:21: 37:31
    let _5: ();                          // in scope 0 at ui/borrowck/borrowck-slice-pattern-element-loan-array-no-overlap.rs:39:5: 39:26
    let mut _6: &[&i32];                 // in scope 0 at ui/borrowck/borrowck-slice-pattern-element-loan-array-no-overlap.rs:39:9: 39:25
    let mut _7: &[&i32; 2];              // in scope 0 at ui/borrowck/borrowck-slice-pattern-element-loan-array-no-overlap.rs:39:9: 39:25
    let _8: &[&i32; 2];                  // in scope 0 at ui/borrowck/borrowck-slice-pattern-element-loan-array-no-overlap.rs:39:9: 39:25
    let _9: [&i32; 2];                   // in scope 0 at ui/borrowck/borrowck-slice-pattern-element-loan-array-no-overlap.rs:39:10: 39:25
    let mut _10: &i32;                   // in scope 0 at ui/borrowck/borrowck-slice-pattern-element-loan-array-no-overlap.rs:39:11: 39:16
    let mut _11: &i32;                   // in scope 0 at ui/borrowck/borrowck-slice-pattern-element-loan-array-no-overlap.rs:39:18: 39:24
    let _12: ();                         // in scope 0 at ui/borrowck/borrowck-slice-pattern-element-loan-array-no-overlap.rs:40:5: 40:23
    let mut _13: &[i32];                 // in scope 0 at ui/borrowck/borrowck-slice-pattern-element-loan-array-no-overlap.rs:40:18: 40:22
    let mut _14: &[i32; 2];              // in scope 0 at ui/borrowck/borrowck-slice-pattern-element-loan-array-no-overlap.rs:40:18: 40:22
    scope 1 {
        debug first => _2;               // in scope 1 at ui/borrowck/borrowck-slice-pattern-element-loan-array-no-overlap.rs:37:10: 37:19
        debug second => _3;              // in scope 1 at ui/borrowck/borrowck-slice-pattern-element-loan-array-no-overlap.rs:37:21: 37:31
        let _4: &mut [i32; 2];           // in scope 1 at ui/borrowck/borrowck-slice-pattern-element-loan-array-no-overlap.rs:38:16: 38:28
        scope 2 {
            debug tail => _4;            // in scope 2 at ui/borrowck/borrowck-slice-pattern-element-loan-array-no-overlap.rs:38:16: 38:28
        }
    }

    bb0: {
        _2 = &(*_1)[0 of 4];             // scope 0 at ui/borrowck/borrowck-slice-pattern-element-loan-array-no-overlap.rs:37:10: 37:19
        _3 = &(*_1)[1 of 4];             // scope 0 at ui/borrowck/borrowck-slice-pattern-element-loan-array-no-overlap.rs:37:21: 37:31
        _4 = &mut (*_1)[2..4];           // scope 1 at ui/borrowck/borrowck-slice-pattern-element-loan-array-no-overlap.rs:38:16: 38:28
        _10 = _2;                        // scope 2 at ui/borrowck/borrowck-slice-pattern-element-loan-array-no-overlap.rs:39:11: 39:16
        _11 = _3;                        // scope 2 at ui/borrowck/borrowck-slice-pattern-element-loan-array-no-overlap.rs:39:18: 39:24
        _9 = [move _10, move _11];       // scope 2 at ui/borrowck/borrowck-slice-pattern-element-loan-array-no-overlap.rs:39:10: 39:25
        _8 = &_9;                        // scope 2 at ui/borrowck/borrowck-slice-pattern-element-loan-array-no-overlap.rs:39:9: 39:25
        _7 = _8;                         // scope 2 at ui/borrowck/borrowck-slice-pattern-element-loan-array-no-overlap.rs:39:9: 39:25
        _6 = move _7 as &[&i32] (Pointer(Unsize)); // scope 2 at ui/borrowck/borrowck-slice-pattern-element-loan-array-no-overlap.rs:39:9: 39:25
        _5 = nop(move _6) -> bb1;        // scope 2 at ui/borrowck/borrowck-slice-pattern-element-loan-array-no-overlap.rs:39:5: 39:26
                                         // mir::Constant
                                         // + span: ui/borrowck/borrowck-slice-pattern-element-loan-array-no-overlap.rs:39:5: 39:8
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a [&'b i32]) {nop}, val: Value(<ZST>) }
    }

    bb1: {
        _14 = &(*_4);                    // scope 2 at ui/borrowck/borrowck-slice-pattern-element-loan-array-no-overlap.rs:40:18: 40:22
        _13 = move _14 as &[i32] (Pointer(Unsize)); // scope 2 at ui/borrowck/borrowck-slice-pattern-element-loan-array-no-overlap.rs:40:18: 40:22
        _12 = nop_subslice(move _13) -> bb2; // scope 2 at ui/borrowck/borrowck-slice-pattern-element-loan-array-no-overlap.rs:40:5: 40:23
                                         // mir::Constant
                                         // + span: ui/borrowck/borrowck-slice-pattern-element-loan-array-no-overlap.rs:40:5: 40:17
                                         // + literal: Const { ty: for<'a> fn(&'a [i32]) {nop_subslice}, val: Value(<ZST>) }
    }

    bb2: {
        return;                          // scope 0 at ui/borrowck/borrowck-slice-pattern-element-loan-array-no-overlap.rs:41:2: 41:2
    }
}

const_index_and_subslice_ok::{constant#0}: usize = {
    let mut _0: usize;                   // return place in scope 0 at ui/borrowck/borrowck-slice-pattern-element-loan-array-no-overlap.rs:36:46: 36:47

    bb0: {
        _0 = const 4_usize;              // scope 0 at ui/borrowck/borrowck-slice-pattern-element-loan-array-no-overlap.rs:36:46: 36:47
        return;                          // scope 0 at ui/borrowck/borrowck-slice-pattern-element-loan-array-no-overlap.rs:36:46: 36:47
    }
}

fn const_index_and_subslice_from_end_ok(_1: &mut [i32; 4]) -> () {
    debug s => _1;                       // in scope 0 at ui/borrowck/borrowck-slice-pattern-element-loan-array-no-overlap.rs:43:41: 43:42
    let mut _0: ();                      // return place in scope 0 at ui/borrowck/borrowck-slice-pattern-element-loan-array-no-overlap.rs:43:59: 43:59
    let _2: &i32;                        // in scope 0 at ui/borrowck/borrowck-slice-pattern-element-loan-array-no-overlap.rs:44:14: 44:24
    let _3: &i32;                        // in scope 0 at ui/borrowck/borrowck-slice-pattern-element-loan-array-no-overlap.rs:44:26: 44:35
    let _5: ();                          // in scope 0 at ui/borrowck/borrowck-slice-pattern-element-loan-array-no-overlap.rs:46:5: 46:26
    let mut _6: &[&i32];                 // in scope 0 at ui/borrowck/borrowck-slice-pattern-element-loan-array-no-overlap.rs:46:9: 46:25
    let mut _7: &[&i32; 2];              // in scope 0 at ui/borrowck/borrowck-slice-pattern-element-loan-array-no-overlap.rs:46:9: 46:25
    let _8: &[&i32; 2];                  // in scope 0 at ui/borrowck/borrowck-slice-pattern-element-loan-array-no-overlap.rs:46:9: 46:25
    let _9: [&i32; 2];                   // in scope 0 at ui/borrowck/borrowck-slice-pattern-element-loan-array-no-overlap.rs:46:10: 46:25
    let mut _10: &i32;                   // in scope 0 at ui/borrowck/borrowck-slice-pattern-element-loan-array-no-overlap.rs:46:11: 46:16
    let mut _11: &i32;                   // in scope 0 at ui/borrowck/borrowck-slice-pattern-element-loan-array-no-overlap.rs:46:18: 46:24
    let _12: ();                         // in scope 0 at ui/borrowck/borrowck-slice-pattern-element-loan-array-no-overlap.rs:47:5: 47:23
    let mut _13: &[i32];                 // in scope 0 at ui/borrowck/borrowck-slice-pattern-element-loan-array-no-overlap.rs:47:18: 47:22
    let mut _14: &[i32; 2];              // in scope 0 at ui/borrowck/borrowck-slice-pattern-element-loan-array-no-overlap.rs:47:18: 47:22
    scope 1 {
        debug second => _2;              // in scope 1 at ui/borrowck/borrowck-slice-pattern-element-loan-array-no-overlap.rs:44:14: 44:24
        debug first => _3;               // in scope 1 at ui/borrowck/borrowck-slice-pattern-element-loan-array-no-overlap.rs:44:26: 44:35
        let _4: &mut [i32; 2];           // in scope 1 at ui/borrowck/borrowck-slice-pattern-element-loan-array-no-overlap.rs:45:10: 45:22
        scope 2 {
            debug tail => _4;            // in scope 2 at ui/borrowck/borrowck-slice-pattern-element-loan-array-no-overlap.rs:45:10: 45:22
        }
    }

    bb0: {
        _3 = &(*_1)[3 of 4];             // scope 0 at ui/borrowck/borrowck-slice-pattern-element-loan-array-no-overlap.rs:44:26: 44:35
        _2 = &(*_1)[2 of 4];             // scope 0 at ui/borrowck/borrowck-slice-pattern-element-loan-array-no-overlap.rs:44:14: 44:24
        _4 = &mut (*_1)[0..2];           // scope 1 at ui/borrowck/borrowck-slice-pattern-element-loan-array-no-overlap.rs:45:10: 45:22
        _10 = _3;                        // scope 2 at ui/borrowck/borrowck-slice-pattern-element-loan-array-no-overlap.rs:46:11: 46:16
        _11 = _2;                        // scope 2 at ui/borrowck/borrowck-slice-pattern-element-loan-array-no-overlap.rs:46:18: 46:24
        _9 = [move _10, move _11];       // scope 2 at ui/borrowck/borrowck-slice-pattern-element-loan-array-no-overlap.rs:46:10: 46:25
        _8 = &_9;                        // scope 2 at ui/borrowck/borrowck-slice-pattern-element-loan-array-no-overlap.rs:46:9: 46:25
        _7 = _8;                         // scope 2 at ui/borrowck/borrowck-slice-pattern-element-loan-array-no-overlap.rs:46:9: 46:25
        _6 = move _7 as &[&i32] (Pointer(Unsize)); // scope 2 at ui/borrowck/borrowck-slice-pattern-element-loan-array-no-overlap.rs:46:9: 46:25
        _5 = nop(move _6) -> bb1;        // scope 2 at ui/borrowck/borrowck-slice-pattern-element-loan-array-no-overlap.rs:46:5: 46:26
                                         // mir::Constant
                                         // + span: ui/borrowck/borrowck-slice-pattern-element-loan-array-no-overlap.rs:46:5: 46:8
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a [&'b i32]) {nop}, val: Value(<ZST>) }
    }

    bb1: {
        _14 = &(*_4);                    // scope 2 at ui/borrowck/borrowck-slice-pattern-element-loan-array-no-overlap.rs:47:18: 47:22
        _13 = move _14 as &[i32] (Pointer(Unsize)); // scope 2 at ui/borrowck/borrowck-slice-pattern-element-loan-array-no-overlap.rs:47:18: 47:22
        _12 = nop_subslice(move _13) -> bb2; // scope 2 at ui/borrowck/borrowck-slice-pattern-element-loan-array-no-overlap.rs:47:5: 47:23
                                         // mir::Constant
                                         // + span: ui/borrowck/borrowck-slice-pattern-element-loan-array-no-overlap.rs:47:5: 47:17
                                         // + literal: Const { ty: for<'a> fn(&'a [i32]) {nop_subslice}, val: Value(<ZST>) }
    }

    bb2: {
        return;                          // scope 0 at ui/borrowck/borrowck-slice-pattern-element-loan-array-no-overlap.rs:48:2: 48:2
    }
}

const_index_and_subslice_from_end_ok::{constant#0}: usize = {
    let mut _0: usize;                   // return place in scope 0 at ui/borrowck/borrowck-slice-pattern-element-loan-array-no-overlap.rs:43:55: 43:56

    bb0: {
        _0 = const 4_usize;              // scope 0 at ui/borrowck/borrowck-slice-pattern-element-loan-array-no-overlap.rs:43:55: 43:56
        return;                          // scope 0 at ui/borrowck/borrowck-slice-pattern-element-loan-array-no-overlap.rs:43:55: 43:56
    }
}

fn subslices(_1: &mut [i32; 4]) -> () {
    debug s => _1;                       // in scope 0 at ui/borrowck/borrowck-slice-pattern-element-loan-array-no-overlap.rs:50:14: 50:15
    let mut _0: ();                      // return place in scope 0 at ui/borrowck/borrowck-slice-pattern-element-loan-array-no-overlap.rs:50:32: 50:32
    let _2: &[i32; 2];                   // in scope 0 at ui/borrowck/borrowck-slice-pattern-element-loan-array-no-overlap.rs:51:16: 51:22
    let _4: ();                          // in scope 0 at ui/borrowck/borrowck-slice-pattern-element-loan-array-no-overlap.rs:53:5: 53:21
    let mut _5: &[i32];                  // in scope 0 at ui/borrowck/borrowck-slice-pattern-element-loan-array-no-overlap.rs:53:18: 53:20
    let mut _6: &[i32; 2];               // in scope 0 at ui/borrowck/borrowck-slice-pattern-element-loan-array-no-overlap.rs:53:18: 53:20
    let _7: ();                          // in scope 0 at ui/borrowck/borrowck-slice-pattern-element-loan-array-no-overlap.rs:54:5: 54:21
    let mut _8: &[i32];                  // in scope 0 at ui/borrowck/borrowck-slice-pattern-element-loan-array-no-overlap.rs:54:18: 54:20
    let mut _9: &[i32; 2];               // in scope 0 at ui/borrowck/borrowck-slice-pattern-element-loan-array-no-overlap.rs:54:18: 54:20
    scope 1 {
        debug s1 => _2;                  // in scope 1 at ui/borrowck/borrowck-slice-pattern-element-loan-array-no-overlap.rs:51:16: 51:22
        let _3: &mut [i32; 2];           // in scope 1 at ui/borrowck/borrowck-slice-pattern-element-loan-array-no-overlap.rs:52:10: 52:20
        scope 2 {
            debug s2 => _3;              // in scope 2 at ui/borrowck/borrowck-slice-pattern-element-loan-array-no-overlap.rs:52:10: 52:20
        }
    }

    bb0: {
        _2 = &(*_1)[2..4];               // scope 0 at ui/borrowck/borrowck-slice-pattern-element-loan-array-no-overlap.rs:51:16: 51:22
        _3 = &mut (*_1)[0..2];           // scope 1 at ui/borrowck/borrowck-slice-pattern-element-loan-array-no-overlap.rs:52:10: 52:20
        _6 = _2;                         // scope 2 at ui/borrowck/borrowck-slice-pattern-element-loan-array-no-overlap.rs:53:18: 53:20
        _5 = move _6 as &[i32] (Pointer(Unsize)); // scope 2 at ui/borrowck/borrowck-slice-pattern-element-loan-array-no-overlap.rs:53:18: 53:20
        _4 = nop_subslice(move _5) -> bb1; // scope 2 at ui/borrowck/borrowck-slice-pattern-element-loan-array-no-overlap.rs:53:5: 53:21
                                         // mir::Constant
                                         // + span: ui/borrowck/borrowck-slice-pattern-element-loan-array-no-overlap.rs:53:5: 53:17
                                         // + literal: Const { ty: for<'a> fn(&'a [i32]) {nop_subslice}, val: Value(<ZST>) }
    }

    bb1: {
        _9 = &(*_3);                     // scope 2 at ui/borrowck/borrowck-slice-pattern-element-loan-array-no-overlap.rs:54:18: 54:20
        _8 = move _9 as &[i32] (Pointer(Unsize)); // scope 2 at ui/borrowck/borrowck-slice-pattern-element-loan-array-no-overlap.rs:54:18: 54:20
        _7 = nop_subslice(move _8) -> bb2; // scope 2 at ui/borrowck/borrowck-slice-pattern-element-loan-array-no-overlap.rs:54:5: 54:21
                                         // mir::Constant
                                         // + span: ui/borrowck/borrowck-slice-pattern-element-loan-array-no-overlap.rs:54:5: 54:17
                                         // + literal: Const { ty: for<'a> fn(&'a [i32]) {nop_subslice}, val: Value(<ZST>) }
    }

    bb2: {
        return;                          // scope 0 at ui/borrowck/borrowck-slice-pattern-element-loan-array-no-overlap.rs:55:2: 55:2
    }
}

subslices::{constant#0}: usize = {
    let mut _0: usize;                   // return place in scope 0 at ui/borrowck/borrowck-slice-pattern-element-loan-array-no-overlap.rs:50:28: 50:29

    bb0: {
        _0 = const 4_usize;              // scope 0 at ui/borrowck/borrowck-slice-pattern-element-loan-array-no-overlap.rs:50:28: 50:29
        return;                          // scope 0 at ui/borrowck/borrowck-slice-pattern-element-loan-array-no-overlap.rs:50:28: 50:29
    }
}

fn main() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/borrowck/borrowck-slice-pattern-element-loan-array-no-overlap.rs:57:11: 57:11
    let mut _1: [i32; 4];                // in scope 0 at ui/borrowck/borrowck-slice-pattern-element-loan-array-no-overlap.rs:58:9: 58:14
    let _2: ();                          // in scope 0 at ui/borrowck/borrowck-slice-pattern-element-loan-array-no-overlap.rs:59:5: 59:27
    let mut _3: &mut [i32; 4];           // in scope 0 at ui/borrowck/borrowck-slice-pattern-element-loan-array-no-overlap.rs:59:20: 59:26
    let mut _4: &mut [i32; 4];           // in scope 0 at ui/borrowck/borrowck-slice-pattern-element-loan-array-no-overlap.rs:59:20: 59:26
    let _5: ();                          // in scope 0 at ui/borrowck/borrowck-slice-pattern-element-loan-array-no-overlap.rs:60:5: 60:36
    let mut _6: &mut [i32; 4];           // in scope 0 at ui/borrowck/borrowck-slice-pattern-element-loan-array-no-overlap.rs:60:29: 60:35
    let mut _7: &mut [i32; 4];           // in scope 0 at ui/borrowck/borrowck-slice-pattern-element-loan-array-no-overlap.rs:60:29: 60:35
    let _8: ();                          // in scope 0 at ui/borrowck/borrowck-slice-pattern-element-loan-array-no-overlap.rs:61:5: 61:40
    let mut _9: &mut [i32; 4];           // in scope 0 at ui/borrowck/borrowck-slice-pattern-element-loan-array-no-overlap.rs:61:33: 61:39
    let mut _10: &mut [i32; 4];          // in scope 0 at ui/borrowck/borrowck-slice-pattern-element-loan-array-no-overlap.rs:61:33: 61:39
    let _11: ();                         // in scope 0 at ui/borrowck/borrowck-slice-pattern-element-loan-array-no-overlap.rs:62:5: 62:49
    let mut _12: &mut [i32; 4];          // in scope 0 at ui/borrowck/borrowck-slice-pattern-element-loan-array-no-overlap.rs:62:42: 62:48
    let mut _13: &mut [i32; 4];          // in scope 0 at ui/borrowck/borrowck-slice-pattern-element-loan-array-no-overlap.rs:62:42: 62:48
    let _14: ();                         // in scope 0 at ui/borrowck/borrowck-slice-pattern-element-loan-array-no-overlap.rs:63:5: 63:22
    let mut _15: &mut [i32; 4];          // in scope 0 at ui/borrowck/borrowck-slice-pattern-element-loan-array-no-overlap.rs:63:15: 63:21
    let mut _16: &mut [i32; 4];          // in scope 0 at ui/borrowck/borrowck-slice-pattern-element-loan-array-no-overlap.rs:63:15: 63:21
    scope 1 {
        debug v => _1;                   // in scope 1 at ui/borrowck/borrowck-slice-pattern-element-loan-array-no-overlap.rs:58:9: 58:14
    }

    bb0: {
        _1 = [const 1_i32, const 2_i32, const 3_i32, const 4_i32]; // scope 0 at ui/borrowck/borrowck-slice-pattern-element-loan-array-no-overlap.rs:58:17: 58:26
        _4 = &mut _1;                    // scope 1 at ui/borrowck/borrowck-slice-pattern-element-loan-array-no-overlap.rs:59:20: 59:26
        _3 = &mut (*_4);                 // scope 1 at ui/borrowck/borrowck-slice-pattern-element-loan-array-no-overlap.rs:59:20: 59:26
        _2 = const_index_ok(move _3) -> bb1; // scope 1 at ui/borrowck/borrowck-slice-pattern-element-loan-array-no-overlap.rs:59:5: 59:27
                                         // mir::Constant
                                         // + span: ui/borrowck/borrowck-slice-pattern-element-loan-array-no-overlap.rs:59:5: 59:19
                                         // + literal: Const { ty: for<'a> fn(&'a mut [i32; 4]) {const_index_ok}, val: Value(<ZST>) }
    }

    bb1: {
        _7 = &mut _1;                    // scope 1 at ui/borrowck/borrowck-slice-pattern-element-loan-array-no-overlap.rs:60:29: 60:35
        _6 = &mut (*_7);                 // scope 1 at ui/borrowck/borrowck-slice-pattern-element-loan-array-no-overlap.rs:60:29: 60:35
        _5 = const_index_from_end_ok(move _6) -> bb2; // scope 1 at ui/borrowck/borrowck-slice-pattern-element-loan-array-no-overlap.rs:60:5: 60:36
                                         // mir::Constant
                                         // + span: ui/borrowck/borrowck-slice-pattern-element-loan-array-no-overlap.rs:60:5: 60:28
                                         // + literal: Const { ty: for<'a> fn(&'a mut [i32; 4]) {const_index_from_end_ok}, val: Value(<ZST>) }
    }

    bb2: {
        _10 = &mut _1;                   // scope 1 at ui/borrowck/borrowck-slice-pattern-element-loan-array-no-overlap.rs:61:33: 61:39
        _9 = &mut (*_10);                // scope 1 at ui/borrowck/borrowck-slice-pattern-element-loan-array-no-overlap.rs:61:33: 61:39
        _8 = const_index_and_subslice_ok(move _9) -> bb3; // scope 1 at ui/borrowck/borrowck-slice-pattern-element-loan-array-no-overlap.rs:61:5: 61:40
                                         // mir::Constant
                                         // + span: ui/borrowck/borrowck-slice-pattern-element-loan-array-no-overlap.rs:61:5: 61:32
                                         // + literal: Const { ty: for<'a> fn(&'a mut [i32; 4]) {const_index_and_subslice_ok}, val: Value(<ZST>) }
    }

    bb3: {
        _13 = &mut _1;                   // scope 1 at ui/borrowck/borrowck-slice-pattern-element-loan-array-no-overlap.rs:62:42: 62:48
        _12 = &mut (*_13);               // scope 1 at ui/borrowck/borrowck-slice-pattern-element-loan-array-no-overlap.rs:62:42: 62:48
        _11 = const_index_and_subslice_from_end_ok(move _12) -> bb4; // scope 1 at ui/borrowck/borrowck-slice-pattern-element-loan-array-no-overlap.rs:62:5: 62:49
                                         // mir::Constant
                                         // + span: ui/borrowck/borrowck-slice-pattern-element-loan-array-no-overlap.rs:62:5: 62:41
                                         // + literal: Const { ty: for<'a> fn(&'a mut [i32; 4]) {const_index_and_subslice_from_end_ok}, val: Value(<ZST>) }
    }

    bb4: {
        _16 = &mut _1;                   // scope 1 at ui/borrowck/borrowck-slice-pattern-element-loan-array-no-overlap.rs:63:15: 63:21
        _15 = &mut (*_16);               // scope 1 at ui/borrowck/borrowck-slice-pattern-element-loan-array-no-overlap.rs:63:15: 63:21
        _14 = subslices(move _15) -> bb5; // scope 1 at ui/borrowck/borrowck-slice-pattern-element-loan-array-no-overlap.rs:63:5: 63:22
                                         // mir::Constant
                                         // + span: ui/borrowck/borrowck-slice-pattern-element-loan-array-no-overlap.rs:63:5: 63:14
                                         // + literal: Const { ty: for<'a> fn(&'a mut [i32; 4]) {subslices}, val: Value(<ZST>) }
    }

    bb5: {
        return;                          // scope 0 at ui/borrowck/borrowck-slice-pattern-element-loan-array-no-overlap.rs:64:2: 64:2
    }
}
