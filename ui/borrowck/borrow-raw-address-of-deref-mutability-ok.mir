// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
fn raw_reborrow() -> () {
    let mut _0: ();
    let mut _2: i32;
    let mut _6: &i32;
    scope 1 {
        debug x => const _;
        let _1: &mut i32;
        scope 2 {
            debug y => _1;
            let _3: *const i32;
            scope 3 {
                debug p => _3;
                let _4: *const i32;
                scope 4 {
                    debug r => _4;
                    let _5: *mut i32;
                    scope 5 {
                        debug s => _5;
                    }
                }
            }
        }
    }

    bb0: {
        _6 = const _;
        _2 = const 0_i32;
        _1 = &mut _2;
        _3 = &raw const (*_6);
        _4 = &raw const (*_1);
        _5 = &raw mut (*_1);
        return;
    }
}

promoted[0] in raw_reborrow: &i32 = {
    let mut _0: &i32;
    let mut _1: i32;

    bb0: {
        _1 = const 0_i32;
        _0 = &_1;
        return;
    }
}

fn raw_reborrow_of_raw() -> () {
    let mut _0: ();
    let _1: *const i32;
    let mut _3: &mut i32;
    let mut _4: i32;
    let mut _8: &i32;
    scope 1 {
        debug x => _1;
        let _2: *mut i32;
        scope 2 {
            debug y => _2;
            let _5: *const i32;
            scope 3 {
                debug p => _5;
                let _6: *const i32;
                scope 4 {
                    debug r => _6;
                    let _7: *mut i32;
                    scope 5 {
                        debug s => _7;
                    }
                }
            }
        }
    }

    bb0: {
        _8 = const _;
        _1 = &raw const (*_8);
        _4 = const 0_i32;
        _3 = &mut _4;
        _2 = &raw mut (*_3);
        _5 = &raw const (*_1);
        _6 = &raw const (*_2);
        _7 = &raw mut (*_2);
        return;
    }
}

promoted[0] in raw_reborrow_of_raw: &i32 = {
    let mut _0: &i32;
    let mut _1: i32;

    bb0: {
        _1 = const 0_i32;
        _0 = &_1;
        return;
    }
}

fn main() -> () {
    let mut _0: ();

    bb0: {
        return;
    }
}
