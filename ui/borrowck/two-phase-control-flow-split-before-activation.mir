// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
fn main() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/borrowck/two-phase-control-flow-split-before-activation.rs:3:11: 3:11
    let mut _1: i32;                     // in scope 0 at ui/borrowck/two-phase-control-flow-split-before-activation.rs:4:9: 4:14
    let mut _4: bool;                    // in scope 0 at ui/borrowck/two-phase-control-flow-split-before-activation.rs:6:16: 6:23
    let mut _5: &mut i32;                // in scope 0 at ui/borrowck/two-phase-control-flow-split-before-activation.rs:9:9: 9:15
    let _6: ();                          // in scope 0 at ui/borrowck/two-phase-control-flow-split-before-activation.rs:11:5: 11:12
    let mut _7: &mut i32;                // in scope 0 at ui/borrowck/two-phase-control-flow-split-before-activation.rs:11:10: 11:11
    scope 1 {
        debug a => _1;                   // in scope 1 at ui/borrowck/two-phase-control-flow-split-before-activation.rs:4:9: 4:14
        let mut _2: i32;                 // in scope 1 at ui/borrowck/two-phase-control-flow-split-before-activation.rs:5:9: 5:14
        scope 2 {
            debug b => _2;               // in scope 2 at ui/borrowck/two-phase-control-flow-split-before-activation.rs:5:9: 5:14
            let _3: &mut i32;            // in scope 2 at ui/borrowck/two-phase-control-flow-split-before-activation.rs:6:9: 6:10
            scope 3 {
                debug p => _3;           // in scope 3 at ui/borrowck/two-phase-control-flow-split-before-activation.rs:6:9: 6:10
            }
        }
    }

    bb0: {
        _1 = const 0_i32;                // scope 0 at ui/borrowck/two-phase-control-flow-split-before-activation.rs:4:17: 4:18
        _2 = const 0_i32;                // scope 1 at ui/borrowck/two-phase-control-flow-split-before-activation.rs:5:17: 5:18
        _4 = maybe() -> bb1;             // scope 2 at ui/borrowck/two-phase-control-flow-split-before-activation.rs:6:16: 6:23
                                         // mir::Constant
                                         // + span: ui/borrowck/two-phase-control-flow-split-before-activation.rs:6:16: 6:21
                                         // + literal: Const { ty: fn() -> bool {maybe}, val: Value(<ZST>) }
    }

    bb1: {
        switchInt(move _4) -> [0: bb3, otherwise: bb2]; // scope 2 at ui/borrowck/two-phase-control-flow-split-before-activation.rs:6:16: 6:23
    }

    bb2: {
        _3 = &mut _1;                    // scope 2 at ui/borrowck/two-phase-control-flow-split-before-activation.rs:7:9: 7:15
        goto -> bb4;                     // scope 2 at ui/borrowck/two-phase-control-flow-split-before-activation.rs:6:13: 10:6
    }

    bb3: {
        _5 = &mut _2;                    // scope 2 at ui/borrowck/two-phase-control-flow-split-before-activation.rs:9:9: 9:15
        _3 = &mut (*_5);                 // scope 2 at ui/borrowck/two-phase-control-flow-split-before-activation.rs:9:9: 9:15
        goto -> bb4;                     // scope 2 at ui/borrowck/two-phase-control-flow-split-before-activation.rs:6:13: 10:6
    }

    bb4: {
        _7 = move _3;                    // scope 3 at ui/borrowck/two-phase-control-flow-split-before-activation.rs:11:10: 11:11
        _6 = use_::<&mut i32>(move _7) -> bb5; // scope 3 at ui/borrowck/two-phase-control-flow-split-before-activation.rs:11:5: 11:12
                                         // mir::Constant
                                         // + span: ui/borrowck/two-phase-control-flow-split-before-activation.rs:11:5: 11:9
                                         // + literal: Const { ty: fn(&mut i32) {use_::<&mut i32>}, val: Value(<ZST>) }
    }

    bb5: {
        return;                          // scope 0 at ui/borrowck/two-phase-control-flow-split-before-activation.rs:12:2: 12:2
    }
}

fn maybe() -> bool {
    let mut _0: bool;                    // return place in scope 0 at ui/borrowck/two-phase-control-flow-split-before-activation.rs:14:15: 14:19

    bb0: {
        _0 = const false;                // scope 0 at ui/borrowck/two-phase-control-flow-split-before-activation.rs:14:22: 14:27
        return;                          // scope 0 at ui/borrowck/two-phase-control-flow-split-before-activation.rs:14:29: 14:29
    }
}

fn use_(_1: T) -> () {
    let mut _0: ();                      // return place in scope 0 at ui/borrowck/two-phase-control-flow-split-before-activation.rs:15:18: 15:18

    bb0: {
        drop(_1) -> bb1;                 // scope 0 at ui/borrowck/two-phase-control-flow-split-before-activation.rs:15:20: 15:21
    }

    bb1: {
        return;                          // scope 0 at ui/borrowck/two-phase-control-flow-split-before-activation.rs:15:21: 15:21
    }
}
