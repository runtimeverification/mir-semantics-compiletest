// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
fn <impl at ui/borrowck/two-phase-method-receivers.rs:7:1: 7:17>::method(_1: &mut Foo<'_>, _2: &i32) -> () {
    debug self => _1;                    // in scope 0 at ui/borrowck/two-phase-method-receivers.rs:8:15: 8:24
    let mut _0: ();                      // return place in scope 0 at ui/borrowck/two-phase-method-receivers.rs:8:35: 8:35

    bb0: {
        return;                          // scope 0 at ui/borrowck/two-phase-method-receivers.rs:9:6: 9:6
    }
}

fn main() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/borrowck/two-phase-method-receivers.rs:12:11: 12:11
    let _1: &mut Foo<'_>;                // in scope 0 at ui/borrowck/two-phase-method-receivers.rs:13:9: 13:10
    let mut _2: Foo<'_>;                 // in scope 0 at ui/borrowck/two-phase-method-receivers.rs:13:18: 13:32
    let mut _3: &i32;                    // in scope 0 at ui/borrowck/two-phase-method-receivers.rs:13:27: 13:30
    let _4: &i32;                        // in scope 0 at ui/borrowck/two-phase-method-receivers.rs:13:27: 13:30
    let _5: ();                          // in scope 0 at ui/borrowck/two-phase-method-receivers.rs:14:5: 14:24
    let mut _6: &mut Foo<'_>;            // in scope 0 at ui/borrowck/two-phase-method-receivers.rs:14:17: 14:18
    let mut _7: &i32;                    // in scope 0 at ui/borrowck/two-phase-method-receivers.rs:14:20: 14:23
    let mut _8: &i32;                    // in scope 0 at ui/borrowck/two-phase-method-receivers.rs:13:27: 13:30
    let mut _9: &i32;                    // in scope 0 at ui/borrowck/two-phase-method-receivers.rs:13:9: 13:10
    scope 1 {
        debug a => _1;                   // in scope 1 at ui/borrowck/two-phase-method-receivers.rs:13:9: 13:10
    }

    bb0: {
        _8 = const _;                    // scope 0 at ui/borrowck/two-phase-method-receivers.rs:13:27: 13:30
                                         // mir::Constant
                                         // + span: ui/borrowck/two-phase-method-receivers.rs:13:27: 13:30
                                         // + literal: Const { ty: &i32, val: Unevaluated(main, [], Some(promoted[0])) }
        _4 = _8;                         // scope 0 at ui/borrowck/two-phase-method-receivers.rs:13:27: 13:30
        _3 = _4;                         // scope 0 at ui/borrowck/two-phase-method-receivers.rs:13:27: 13:30
        _2 = Foo::<'_> { x: move _3 };   // scope 0 at ui/borrowck/two-phase-method-receivers.rs:13:18: 13:32
        _1 = &mut _2;                    // scope 0 at ui/borrowck/two-phase-method-receivers.rs:13:13: 13:32
        _6 = &mut (*_1);                 // scope 1 at ui/borrowck/two-phase-method-receivers.rs:14:17: 14:18
        _9 = deref_copy ((*_1).0: &i32); // scope 1 at ui/borrowck/two-phase-method-receivers.rs:14:20: 14:23
        _7 = _9;                         // scope 1 at ui/borrowck/two-phase-method-receivers.rs:14:20: 14:23
        _5 = Foo::<'_>::method(move _6, move _7) -> bb1; // scope 1 at ui/borrowck/two-phase-method-receivers.rs:14:5: 14:24
                                         // mir::Constant
                                         // + span: ui/borrowck/two-phase-method-receivers.rs:14:5: 14:16
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a mut Foo<'_>, &'b i32) {Foo::<'_>::method}, val: Value(<ZST>) }
    }

    bb1: {
        return;                          // scope 0 at ui/borrowck/two-phase-method-receivers.rs:15:2: 15:2
    }
}

promoted[0] in main: &i32 = {
    let mut _0: &i32;                    // return place in scope 0 at ui/borrowck/two-phase-method-receivers.rs:13:27: 13:30
    let mut _1: i32;                     // in scope 0 at ui/borrowck/two-phase-method-receivers.rs:13:28: 13:30

    bb0: {
        _1 = const 22_i32;               // scope 0 at ui/borrowck/two-phase-method-receivers.rs:13:28: 13:30
        _0 = &_1;                        // scope 0 at ui/borrowck/two-phase-method-receivers.rs:13:27: 13:30
        return;                          // scope 0 at ui/borrowck/two-phase-method-receivers.rs:13:27: 13:30
    }
}
