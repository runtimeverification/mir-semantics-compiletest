// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
fn main() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/borrowck/borrowck-assign-to-subfield.rs:4:15: 4:15
    let mut _1: main::A;                 // in scope 0 at ui/borrowck/borrowck-assign-to-subfield.rs:12:9: 12:14
    let mut _2: main::B;                 // in scope 0 at ui/borrowck/borrowck-assign-to-subfield.rs:14:12: 14:20
    scope 1 {
        debug p => _1;                   // in scope 1 at ui/borrowck/borrowck-assign-to-subfield.rs:12:9: 12:14
    }

    bb0: {
        _2 = const B {{ a: 1_isize }};   // scope 0 at ui/borrowck/borrowck-assign-to-subfield.rs:14:12: 14:20
                                         // mir::Constant
                                         // + span: ui/borrowck/borrowck-assign-to-subfield.rs:14:12: 14:20
                                         // + literal: Const { ty: B, val: Value(Scalar(0x0000000000000001)) }
        _1 = A { a: const 1_isize, w: move _2 }; // scope 0 at ui/borrowck/borrowck-assign-to-subfield.rs:12:17: 15:6
        (_1.0: isize) = const 2_isize;   // scope 1 at ui/borrowck/borrowck-assign-to-subfield.rs:19:5: 19:12
        ((_1.1: main::B).0: isize) = const 2_isize; // scope 1 at ui/borrowck/borrowck-assign-to-subfield.rs:22:5: 22:14
        return;                          // scope 0 at ui/borrowck/borrowck-assign-to-subfield.rs:23:2: 23:2
    }
}
