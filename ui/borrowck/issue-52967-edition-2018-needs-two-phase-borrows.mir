// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
fn the_bug() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/borrowck/issue-52967-edition-2018-needs-two-phase-borrows.rs:10:14: 10:14
    let mut _1: (&str, &str);            // in scope 0 at ui/borrowck/issue-52967-edition-2018-needs-two-phase-borrows.rs:11:9: 11:18
    let mut _4: bool;                    // in scope 0 at ui/borrowck/issue-52967-edition-2018-needs-two-phase-borrows.rs:13:30: 13:45
    let mut _5: &&str;                   // in scope 0 at ui/borrowck/issue-52967-edition-2018-needs-two-phase-borrows.rs:13:30: 13:35
    let mut _6: &&str;                   // in scope 0 at ui/borrowck/issue-52967-edition-2018-needs-two-phase-borrows.rs:13:39: 13:45
    let mut _7: &str;                    // in scope 0 at ui/borrowck/issue-52967-edition-2018-needs-two-phase-borrows.rs:13:59: 13:69
    let _8: &str;                        // in scope 0 at ui/borrowck/issue-52967-edition-2018-needs-two-phase-borrows.rs:13:59: 13:69
    let mut _9: (&(&str, &str), &(&str, &str)); // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _10: &(&str, &str);          // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let mut _11: &(&str, &str);          // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _14: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    let mut _15: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
    let mut _16: &(&str, &str);          // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
    let mut _17: &(&str, &str);          // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
    let _19: !;                          // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
    let mut _20: core::panicking::AssertKind; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
    let mut _21: &(&str, &str);          // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let _22: &(&str, &str);              // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let mut _23: &(&str, &str);          // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let _24: &(&str, &str);              // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let mut _25: std::option::Option<std::fmt::Arguments<'_>>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
    let mut _28: &mut &str;              // in scope 0 at ui/borrowck/issue-52967-edition-2018-needs-two-phase-borrows.rs:13:10: 13:22
    scope 1 {
        debug stuff => _1;               // in scope 1 at ui/borrowck/issue-52967-edition-2018-needs-two-phase-borrows.rs:11:9: 11:18
        let _2: &mut &str;               // in scope 1 at ui/borrowck/issue-52967-edition-2018-needs-two-phase-borrows.rs:13:10: 13:22
        let _3: &&mut &str;              // in scope 1 at ui/borrowck/issue-52967-edition-2018-needs-two-phase-borrows.rs:13:10: 13:22
        let _12: &(&str, &str);          // in scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        let _13: &(&str, &str);          // in scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        let mut _26: &(&str, &str);      // in scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        let mut _27: &&str;              // in scope 1 at ui/borrowck/issue-52967-edition-2018-needs-two-phase-borrows.rs:13:39: 13:45
        scope 2 {
            debug left => _2;            // in scope 2 at ui/borrowck/issue-52967-edition-2018-needs-two-phase-borrows.rs:13:10: 13:22
            debug left => _3;            // in scope 2 at ui/borrowck/issue-52967-edition-2018-needs-two-phase-borrows.rs:13:10: 13:22
        }
        scope 3 {
            debug left_val => _12;       // in scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
            debug right_val => _13;      // in scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
            let _18: core::panicking::AssertKind; // in scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
            scope 4 {
                debug kind => _18;       // in scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
            }
        }
    }

    bb0: {
        _1 = (const "left", const "right"); // scope 0 at ui/borrowck/issue-52967-edition-2018-needs-two-phase-borrows.rs:11:21: 11:38
                                         // mir::Constant
                                         // + span: ui/borrowck/issue-52967-edition-2018-needs-two-phase-borrows.rs:11:22: 11:28
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
                                         // mir::Constant
                                         // + span: ui/borrowck/issue-52967-edition-2018-needs-two-phase-borrows.rs:11:30: 11:37
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _2 = &mut (_1.0: &str);          // scope 1 at ui/borrowck/issue-52967-edition-2018-needs-two-phase-borrows.rs:13:10: 13:22
        _3 = &_2;                        // scope 1 at ui/borrowck/issue-52967-edition-2018-needs-two-phase-borrows.rs:13:10: 13:22
        _28 = deref_copy (*_3);          // scope 1 at ui/borrowck/issue-52967-edition-2018-needs-two-phase-borrows.rs:13:30: 13:35
        _5 = &(*_28);                    // scope 1 at ui/borrowck/issue-52967-edition-2018-needs-two-phase-borrows.rs:13:30: 13:35
        _27 = const _;                   // scope 1 at ui/borrowck/issue-52967-edition-2018-needs-two-phase-borrows.rs:13:39: 13:45
                                         // mir::Constant
                                         // + span: ui/borrowck/issue-52967-edition-2018-needs-two-phase-borrows.rs:13:39: 13:45
                                         // + literal: Const { ty: &&str, val: Unevaluated(the_bug, [], Some(promoted[1])) }
        _6 = _27;                        // scope 1 at ui/borrowck/issue-52967-edition-2018-needs-two-phase-borrows.rs:13:39: 13:45
        _4 = <&str as PartialEq>::eq(move _5, move _6) -> bb1; // scope 1 at ui/borrowck/issue-52967-edition-2018-needs-two-phase-borrows.rs:13:30: 13:45
                                         // mir::Constant
                                         // + span: ui/borrowck/issue-52967-edition-2018-needs-two-phase-borrows.rs:13:30: 13:45
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a &str, &'b &str) -> bool {<&str as PartialEq>::eq}, val: Value(<ZST>) }
    }

    bb1: {
        switchInt(move _4) -> [0: bb3, otherwise: bb2]; // scope 1 at ui/borrowck/issue-52967-edition-2018-needs-two-phase-borrows.rs:13:30: 13:45
    }

    bb2: {
        _8 = const "new left";           // scope 2 at ui/borrowck/issue-52967-edition-2018-needs-two-phase-borrows.rs:13:59: 13:69
                                         // mir::Constant
                                         // + span: ui/borrowck/issue-52967-edition-2018-needs-two-phase-borrows.rs:13:59: 13:69
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _7 = _8;                         // scope 2 at ui/borrowck/issue-52967-edition-2018-needs-two-phase-borrows.rs:13:59: 13:69
        (*_2) = move _7;                 // scope 2 at ui/borrowck/issue-52967-edition-2018-needs-two-phase-borrows.rs:13:51: 13:69
        goto -> bb3;                     // scope 1 at ui/borrowck/issue-52967-edition-2018-needs-two-phase-borrows.rs:13:71: 13:72
    }

    bb3: {
        _10 = &_1;                       // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _26 = const _;                   // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // + literal: Const { ty: &(&str, &str), val: Unevaluated(the_bug, [], Some(promoted[0])) }
        _11 = _26;                       // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _9 = (move _10, move _11);       // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _12 = (_9.0: &(&str, &str));     // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _13 = (_9.1: &(&str, &str));     // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _16 = _12;                       // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
        _17 = _13;                       // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
        _15 = <(&str, &str) as PartialEq>::eq(move _16, move _17) -> bb4; // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a (&str, &str), &'b (&str, &str)) -> bool {<(&str, &str) as PartialEq>::eq}, val: Value(<ZST>) }
    }

    bb4: {
        _14 = Not(move _15);             // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
        switchInt(move _14) -> [0: bb6, otherwise: bb5]; // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    }

    bb5: {
        _18 = const core::panicking::AssertKind::Eq; // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _20 = const core::panicking::AssertKind::Eq; // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _22 = _12;                       // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _21 = _22;                       // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _24 = _13;                       // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _23 = _24;                       // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _25 = Option::<Arguments<'_>>::None; // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
        _19 = core::panicking::assert_failed::<(&str, &str), (&str, &str)>(move _20, move _21, move _23, move _25); // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:53
                                         // + literal: Const { ty: for<'a, 'b, 'c> fn(core::panicking::AssertKind, &'a (&str, &str), &'b (&str, &str), Option<Arguments<'c>>) -> ! {core::panicking::assert_failed::<(&str, &str), (&str, &str)>}, val: Value(<ZST>) }
    }

    bb6: {
        return;                          // scope 0 at ui/borrowck/issue-52967-edition-2018-needs-two-phase-borrows.rs:17:2: 17:2
    }
}

promoted[0] in the_bug: &(&str, &str) = {
    let mut _0: &(&str, &str);           // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _1: (&str, &str);            // in scope 0 at ui/borrowck/issue-52967-edition-2018-needs-two-phase-borrows.rs:16:23: 16:44

    bb0: {
        _1 = (const "new left", const "right"); // scope 0 at ui/borrowck/issue-52967-edition-2018-needs-two-phase-borrows.rs:16:23: 16:44
                                         // mir::Constant
                                         // + span: ui/borrowck/issue-52967-edition-2018-needs-two-phase-borrows.rs:16:24: 16:34
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
                                         // mir::Constant
                                         // + span: ui/borrowck/issue-52967-edition-2018-needs-two-phase-borrows.rs:16:36: 16:43
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    }
}

promoted[1] in the_bug: &&str = {
    let mut _0: &&str;                   // return place in scope 0 at ui/borrowck/issue-52967-edition-2018-needs-two-phase-borrows.rs:13:39: 13:45
    let mut _1: &str;                    // in scope 0 at ui/borrowck/issue-52967-edition-2018-needs-two-phase-borrows.rs:13:39: 13:45

    bb0: {
        _1 = const "left";               // scope 0 at ui/borrowck/issue-52967-edition-2018-needs-two-phase-borrows.rs:13:39: 13:45
                                         // mir::Constant
                                         // + span: ui/borrowck/issue-52967-edition-2018-needs-two-phase-borrows.rs:13:39: 13:45
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at ui/borrowck/issue-52967-edition-2018-needs-two-phase-borrows.rs:13:39: 13:45
        return;                          // scope 0 at ui/borrowck/issue-52967-edition-2018-needs-two-phase-borrows.rs:13:39: 13:45
    }
}

fn main() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/borrowck/issue-52967-edition-2018-needs-two-phase-borrows.rs:19:11: 19:11
    let _1: ();                          // in scope 0 at ui/borrowck/issue-52967-edition-2018-needs-two-phase-borrows.rs:20:5: 20:14

    bb0: {
        _1 = the_bug() -> bb1;           // scope 0 at ui/borrowck/issue-52967-edition-2018-needs-two-phase-borrows.rs:20:5: 20:14
                                         // mir::Constant
                                         // + span: ui/borrowck/issue-52967-edition-2018-needs-two-phase-borrows.rs:20:5: 20:12
                                         // + literal: Const { ty: fn() {the_bug}, val: Value(<ZST>) }
    }

    bb1: {
        return;                          // scope 0 at ui/borrowck/issue-52967-edition-2018-needs-two-phase-borrows.rs:21:2: 21:2
    }
}
