// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
fn nop(_1: &[&i32]) -> () {
    debug _s => _1;                      // in scope 0 at ui/borrowck/borrowck-slice-pattern-element-loan-slice-no-overlap.rs:3:8: 3:10
    let mut _0: ();                      // return place in scope 0 at ui/borrowck/borrowck-slice-pattern-element-loan-slice-no-overlap.rs:3:22: 3:22

    bb0: {
        return;                          // scope 0 at ui/borrowck/borrowck-slice-pattern-element-loan-slice-no-overlap.rs:3:24: 3:24
    }
}

fn nop_subslice(_1: &[i32]) -> () {
    debug _s => _1;                      // in scope 0 at ui/borrowck/borrowck-slice-pattern-element-loan-slice-no-overlap.rs:4:17: 4:19
    let mut _0: ();                      // return place in scope 0 at ui/borrowck/borrowck-slice-pattern-element-loan-slice-no-overlap.rs:4:29: 4:29

    bb0: {
        return;                          // scope 0 at ui/borrowck/borrowck-slice-pattern-element-loan-slice-no-overlap.rs:4:31: 4:31
    }
}

fn const_index_ok(_1: &mut [i32]) -> () {
    debug s => _1;                       // in scope 0 at ui/borrowck/borrowck-slice-pattern-element-loan-slice-no-overlap.rs:6:19: 6:20
    let mut _0: ();                      // return place in scope 0 at ui/borrowck/borrowck-slice-pattern-element-loan-slice-no-overlap.rs:6:34: 6:34
    let mut _2: usize;                   // in scope 0 at ui/borrowck/borrowck-slice-pattern-element-loan-slice-no-overlap.rs:7:12: 7:54
    let mut _3: usize;                   // in scope 0 at ui/borrowck/borrowck-slice-pattern-element-loan-slice-no-overlap.rs:7:12: 7:54
    let mut _4: bool;                    // in scope 0 at ui/borrowck/borrowck-slice-pattern-element-loan-slice-no-overlap.rs:7:12: 7:54
    let mut _8: usize;                   // in scope 0 at ui/borrowck/borrowck-slice-pattern-element-loan-slice-no-overlap.rs:8:16: 8:41
    let mut _9: usize;                   // in scope 0 at ui/borrowck/borrowck-slice-pattern-element-loan-slice-no-overlap.rs:8:16: 8:41
    let mut _10: bool;                   // in scope 0 at ui/borrowck/borrowck-slice-pattern-element-loan-slice-no-overlap.rs:8:16: 8:41
    let _12: ();                         // in scope 0 at ui/borrowck/borrowck-slice-pattern-element-loan-slice-no-overlap.rs:9:13: 9:49
    let mut _13: &[&i32];                // in scope 0 at ui/borrowck/borrowck-slice-pattern-element-loan-slice-no-overlap.rs:9:17: 9:48
    let mut _14: &[&i32; 4];             // in scope 0 at ui/borrowck/borrowck-slice-pattern-element-loan-slice-no-overlap.rs:9:17: 9:48
    let _15: &[&i32; 4];                 // in scope 0 at ui/borrowck/borrowck-slice-pattern-element-loan-slice-no-overlap.rs:9:17: 9:48
    let _16: [&i32; 4];                  // in scope 0 at ui/borrowck/borrowck-slice-pattern-element-loan-slice-no-overlap.rs:9:18: 9:48
    let mut _17: &i32;                   // in scope 0 at ui/borrowck/borrowck-slice-pattern-element-loan-slice-no-overlap.rs:9:19: 9:24
    let mut _18: &i32;                   // in scope 0 at ui/borrowck/borrowck-slice-pattern-element-loan-slice-no-overlap.rs:9:26: 9:32
    let mut _19: &i32;                   // in scope 0 at ui/borrowck/borrowck-slice-pattern-element-loan-slice-no-overlap.rs:9:34: 9:39
    let mut _20: &i32;                   // in scope 0 at ui/borrowck/borrowck-slice-pattern-element-loan-slice-no-overlap.rs:9:41: 9:47
    scope 1 {
        debug first => _5;               // in scope 1 at ui/borrowck/borrowck-slice-pattern-element-loan-slice-no-overlap.rs:7:13: 7:22
        debug second => _6;              // in scope 1 at ui/borrowck/borrowck-slice-pattern-element-loan-slice-no-overlap.rs:7:24: 7:34
        debug fourth => _7;              // in scope 1 at ui/borrowck/borrowck-slice-pattern-element-loan-slice-no-overlap.rs:7:39: 7:49
        let _5: &i32;                    // in scope 1 at ui/borrowck/borrowck-slice-pattern-element-loan-slice-no-overlap.rs:7:13: 7:22
        let _6: &i32;                    // in scope 1 at ui/borrowck/borrowck-slice-pattern-element-loan-slice-no-overlap.rs:7:24: 7:34
        let _7: &i32;                    // in scope 1 at ui/borrowck/borrowck-slice-pattern-element-loan-slice-no-overlap.rs:7:39: 7:49
        scope 2 {
            debug third => _11;          // in scope 2 at ui/borrowck/borrowck-slice-pattern-element-loan-slice-no-overlap.rs:8:23: 8:36
            let _11: &mut i32;           // in scope 2 at ui/borrowck/borrowck-slice-pattern-element-loan-slice-no-overlap.rs:8:23: 8:36
        }
    }

    bb0: {
        _2 = Len((*_1));                 // scope 1 at ui/borrowck/borrowck-slice-pattern-element-loan-slice-no-overlap.rs:7:12: 7:54
        _3 = const 4_usize;              // scope 1 at ui/borrowck/borrowck-slice-pattern-element-loan-slice-no-overlap.rs:7:12: 7:54
        _4 = Ge(move _2, move _3);       // scope 1 at ui/borrowck/borrowck-slice-pattern-element-loan-slice-no-overlap.rs:7:12: 7:54
        switchInt(move _4) -> [0: bb3, otherwise: bb1]; // scope 1 at ui/borrowck/borrowck-slice-pattern-element-loan-slice-no-overlap.rs:7:12: 7:54
    }

    bb1: {
        _5 = &(*_1)[0 of 4];             // scope 1 at ui/borrowck/borrowck-slice-pattern-element-loan-slice-no-overlap.rs:7:13: 7:22
        _6 = &(*_1)[1 of 4];             // scope 1 at ui/borrowck/borrowck-slice-pattern-element-loan-slice-no-overlap.rs:7:24: 7:34
        _7 = &(*_1)[3 of 4];             // scope 1 at ui/borrowck/borrowck-slice-pattern-element-loan-slice-no-overlap.rs:7:39: 7:49
        _8 = Len((*_1));                 // scope 2 at ui/borrowck/borrowck-slice-pattern-element-loan-slice-no-overlap.rs:8:16: 8:41
        _9 = const 3_usize;              // scope 2 at ui/borrowck/borrowck-slice-pattern-element-loan-slice-no-overlap.rs:8:16: 8:41
        _10 = Ge(move _8, move _9);      // scope 2 at ui/borrowck/borrowck-slice-pattern-element-loan-slice-no-overlap.rs:8:16: 8:41
        switchInt(move _10) -> [0: bb3, otherwise: bb2]; // scope 2 at ui/borrowck/borrowck-slice-pattern-element-loan-slice-no-overlap.rs:8:16: 8:41
    }

    bb2: {
        _11 = &mut (*_1)[2 of 3];        // scope 2 at ui/borrowck/borrowck-slice-pattern-element-loan-slice-no-overlap.rs:8:23: 8:36
        _17 = _5;                        // scope 2 at ui/borrowck/borrowck-slice-pattern-element-loan-slice-no-overlap.rs:9:19: 9:24
        _18 = _6;                        // scope 2 at ui/borrowck/borrowck-slice-pattern-element-loan-slice-no-overlap.rs:9:26: 9:32
        _19 = &(*_11);                   // scope 2 at ui/borrowck/borrowck-slice-pattern-element-loan-slice-no-overlap.rs:9:34: 9:39
        _20 = _7;                        // scope 2 at ui/borrowck/borrowck-slice-pattern-element-loan-slice-no-overlap.rs:9:41: 9:47
        _16 = [move _17, move _18, move _19, move _20]; // scope 2 at ui/borrowck/borrowck-slice-pattern-element-loan-slice-no-overlap.rs:9:18: 9:48
        _15 = &_16;                      // scope 2 at ui/borrowck/borrowck-slice-pattern-element-loan-slice-no-overlap.rs:9:17: 9:48
        _14 = _15;                       // scope 2 at ui/borrowck/borrowck-slice-pattern-element-loan-slice-no-overlap.rs:9:17: 9:48
        _13 = move _14 as &[&i32] (Pointer(Unsize)); // scope 2 at ui/borrowck/borrowck-slice-pattern-element-loan-slice-no-overlap.rs:9:17: 9:48
        _12 = nop(move _13) -> bb3;      // scope 2 at ui/borrowck/borrowck-slice-pattern-element-loan-slice-no-overlap.rs:9:13: 9:49
                                         // mir::Constant
                                         // + span: ui/borrowck/borrowck-slice-pattern-element-loan-slice-no-overlap.rs:9:13: 9:16
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a [&'b i32]) {nop}, val: Value(<ZST>) }
    }

    bb3: {
        return;                          // scope 0 at ui/borrowck/borrowck-slice-pattern-element-loan-slice-no-overlap.rs:12:2: 12:2
    }
}

fn const_index_from_end_ok(_1: &mut [i32]) -> () {
    debug s => _1;                       // in scope 0 at ui/borrowck/borrowck-slice-pattern-element-loan-slice-no-overlap.rs:14:28: 14:29
    let mut _0: ();                      // return place in scope 0 at ui/borrowck/borrowck-slice-pattern-element-loan-slice-no-overlap.rs:14:43: 14:43
    let mut _2: usize;                   // in scope 0 at ui/borrowck/borrowck-slice-pattern-element-loan-slice-no-overlap.rs:15:12: 15:53
    let mut _3: usize;                   // in scope 0 at ui/borrowck/borrowck-slice-pattern-element-loan-slice-no-overlap.rs:15:12: 15:53
    let mut _4: bool;                    // in scope 0 at ui/borrowck/borrowck-slice-pattern-element-loan-slice-no-overlap.rs:15:12: 15:53
    let mut _8: usize;                   // in scope 0 at ui/borrowck/borrowck-slice-pattern-element-loan-slice-no-overlap.rs:16:16: 16:39
    let mut _9: usize;                   // in scope 0 at ui/borrowck/borrowck-slice-pattern-element-loan-slice-no-overlap.rs:16:16: 16:39
    let mut _10: bool;                   // in scope 0 at ui/borrowck/borrowck-slice-pattern-element-loan-slice-no-overlap.rs:16:16: 16:39
    let _12: ();                         // in scope 0 at ui/borrowck/borrowck-slice-pattern-element-loan-slice-no-overlap.rs:17:13: 17:49
    let mut _13: &[&i32];                // in scope 0 at ui/borrowck/borrowck-slice-pattern-element-loan-slice-no-overlap.rs:17:17: 17:48
    let mut _14: &[&i32; 4];             // in scope 0 at ui/borrowck/borrowck-slice-pattern-element-loan-slice-no-overlap.rs:17:17: 17:48
    let _15: &[&i32; 4];                 // in scope 0 at ui/borrowck/borrowck-slice-pattern-element-loan-slice-no-overlap.rs:17:17: 17:48
    let _16: [&i32; 4];                  // in scope 0 at ui/borrowck/borrowck-slice-pattern-element-loan-slice-no-overlap.rs:17:18: 17:48
    let mut _17: &i32;                   // in scope 0 at ui/borrowck/borrowck-slice-pattern-element-loan-slice-no-overlap.rs:17:19: 17:24
    let mut _18: &i32;                   // in scope 0 at ui/borrowck/borrowck-slice-pattern-element-loan-slice-no-overlap.rs:17:26: 17:32
    let mut _19: &i32;                   // in scope 0 at ui/borrowck/borrowck-slice-pattern-element-loan-slice-no-overlap.rs:17:34: 17:39
    let mut _20: &i32;                   // in scope 0 at ui/borrowck/borrowck-slice-pattern-element-loan-slice-no-overlap.rs:17:41: 17:47
    scope 1 {
        debug fourth => _5;              // in scope 1 at ui/borrowck/borrowck-slice-pattern-element-loan-slice-no-overlap.rs:15:17: 15:27
        debug third => _6;               // in scope 1 at ui/borrowck/borrowck-slice-pattern-element-loan-slice-no-overlap.rs:15:29: 15:38
        debug first => _7;               // in scope 1 at ui/borrowck/borrowck-slice-pattern-element-loan-slice-no-overlap.rs:15:43: 15:52
        let _5: &i32;                    // in scope 1 at ui/borrowck/borrowck-slice-pattern-element-loan-slice-no-overlap.rs:15:17: 15:27
        let _6: &i32;                    // in scope 1 at ui/borrowck/borrowck-slice-pattern-element-loan-slice-no-overlap.rs:15:29: 15:38
        let _7: &i32;                    // in scope 1 at ui/borrowck/borrowck-slice-pattern-element-loan-slice-no-overlap.rs:15:43: 15:52
        scope 2 {
            debug second => _11;         // in scope 2 at ui/borrowck/borrowck-slice-pattern-element-loan-slice-no-overlap.rs:16:21: 16:35
            let _11: &mut i32;           // in scope 2 at ui/borrowck/borrowck-slice-pattern-element-loan-slice-no-overlap.rs:16:21: 16:35
        }
    }

    bb0: {
        _2 = Len((*_1));                 // scope 1 at ui/borrowck/borrowck-slice-pattern-element-loan-slice-no-overlap.rs:15:12: 15:53
        _3 = const 4_usize;              // scope 1 at ui/borrowck/borrowck-slice-pattern-element-loan-slice-no-overlap.rs:15:12: 15:53
        _4 = Ge(move _2, move _3);       // scope 1 at ui/borrowck/borrowck-slice-pattern-element-loan-slice-no-overlap.rs:15:12: 15:53
        switchInt(move _4) -> [0: bb3, otherwise: bb1]; // scope 1 at ui/borrowck/borrowck-slice-pattern-element-loan-slice-no-overlap.rs:15:12: 15:53
    }

    bb1: {
        _7 = &(*_1)[-1 of 4];            // scope 1 at ui/borrowck/borrowck-slice-pattern-element-loan-slice-no-overlap.rs:15:43: 15:52
        _6 = &(*_1)[-3 of 4];            // scope 1 at ui/borrowck/borrowck-slice-pattern-element-loan-slice-no-overlap.rs:15:29: 15:38
        _5 = &(*_1)[-4 of 4];            // scope 1 at ui/borrowck/borrowck-slice-pattern-element-loan-slice-no-overlap.rs:15:17: 15:27
        _8 = Len((*_1));                 // scope 2 at ui/borrowck/borrowck-slice-pattern-element-loan-slice-no-overlap.rs:16:16: 16:39
        _9 = const 2_usize;              // scope 2 at ui/borrowck/borrowck-slice-pattern-element-loan-slice-no-overlap.rs:16:16: 16:39
        _10 = Ge(move _8, move _9);      // scope 2 at ui/borrowck/borrowck-slice-pattern-element-loan-slice-no-overlap.rs:16:16: 16:39
        switchInt(move _10) -> [0: bb3, otherwise: bb2]; // scope 2 at ui/borrowck/borrowck-slice-pattern-element-loan-slice-no-overlap.rs:16:16: 16:39
    }

    bb2: {
        _11 = &mut (*_1)[-2 of 2];       // scope 2 at ui/borrowck/borrowck-slice-pattern-element-loan-slice-no-overlap.rs:16:21: 16:35
        _17 = _7;                        // scope 2 at ui/borrowck/borrowck-slice-pattern-element-loan-slice-no-overlap.rs:17:19: 17:24
        _18 = &(*_11);                   // scope 2 at ui/borrowck/borrowck-slice-pattern-element-loan-slice-no-overlap.rs:17:26: 17:32
        _19 = _6;                        // scope 2 at ui/borrowck/borrowck-slice-pattern-element-loan-slice-no-overlap.rs:17:34: 17:39
        _20 = _5;                        // scope 2 at ui/borrowck/borrowck-slice-pattern-element-loan-slice-no-overlap.rs:17:41: 17:47
        _16 = [move _17, move _18, move _19, move _20]; // scope 2 at ui/borrowck/borrowck-slice-pattern-element-loan-slice-no-overlap.rs:17:18: 17:48
        _15 = &_16;                      // scope 2 at ui/borrowck/borrowck-slice-pattern-element-loan-slice-no-overlap.rs:17:17: 17:48
        _14 = _15;                       // scope 2 at ui/borrowck/borrowck-slice-pattern-element-loan-slice-no-overlap.rs:17:17: 17:48
        _13 = move _14 as &[&i32] (Pointer(Unsize)); // scope 2 at ui/borrowck/borrowck-slice-pattern-element-loan-slice-no-overlap.rs:17:17: 17:48
        _12 = nop(move _13) -> bb3;      // scope 2 at ui/borrowck/borrowck-slice-pattern-element-loan-slice-no-overlap.rs:17:13: 17:49
                                         // mir::Constant
                                         // + span: ui/borrowck/borrowck-slice-pattern-element-loan-slice-no-overlap.rs:17:13: 17:16
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a [&'b i32]) {nop}, val: Value(<ZST>) }
    }

    bb3: {
        return;                          // scope 0 at ui/borrowck/borrowck-slice-pattern-element-loan-slice-no-overlap.rs:20:2: 20:2
    }
}

fn const_index_mixed(_1: &mut [i32]) -> () {
    debug s => _1;                       // in scope 0 at ui/borrowck/borrowck-slice-pattern-element-loan-slice-no-overlap.rs:22:22: 22:23
    let mut _0: ();                      // return place in scope 0 at ui/borrowck/borrowck-slice-pattern-element-loan-slice-no-overlap.rs:22:37: 22:37
    let mut _2: usize;                   // in scope 0 at ui/borrowck/borrowck-slice-pattern-element-loan-slice-no-overlap.rs:23:12: 23:67
    let mut _3: usize;                   // in scope 0 at ui/borrowck/borrowck-slice-pattern-element-loan-slice-no-overlap.rs:23:12: 23:67
    let mut _4: bool;                    // in scope 0 at ui/borrowck/borrowck-slice-pattern-element-loan-slice-no-overlap.rs:23:12: 23:67
    let mut _8: usize;                   // in scope 0 at ui/borrowck/borrowck-slice-pattern-element-loan-slice-no-overlap.rs:24:16: 24:41
    let mut _9: usize;                   // in scope 0 at ui/borrowck/borrowck-slice-pattern-element-loan-slice-no-overlap.rs:24:16: 24:41
    let mut _10: bool;                   // in scope 0 at ui/borrowck/borrowck-slice-pattern-element-loan-slice-no-overlap.rs:24:16: 24:41
    let _12: ();                         // in scope 0 at ui/borrowck/borrowck-slice-pattern-element-loan-slice-no-overlap.rs:25:13: 25:65
    let mut _13: &[&i32];                // in scope 0 at ui/borrowck/borrowck-slice-pattern-element-loan-slice-no-overlap.rs:25:17: 25:64
    let mut _14: &[&i32; 4];             // in scope 0 at ui/borrowck/borrowck-slice-pattern-element-loan-slice-no-overlap.rs:25:17: 25:64
    let _15: &[&i32; 4];                 // in scope 0 at ui/borrowck/borrowck-slice-pattern-element-loan-slice-no-overlap.rs:25:17: 25:64
    let _16: [&i32; 4];                  // in scope 0 at ui/borrowck/borrowck-slice-pattern-element-loan-slice-no-overlap.rs:25:18: 25:64
    let mut _17: &i32;                   // in scope 0 at ui/borrowck/borrowck-slice-pattern-element-loan-slice-no-overlap.rs:25:19: 25:30
    let mut _18: &i32;                   // in scope 0 at ui/borrowck/borrowck-slice-pattern-element-loan-slice-no-overlap.rs:25:32: 25:41
    let mut _19: &i32;                   // in scope 0 at ui/borrowck/borrowck-slice-pattern-element-loan-slice-no-overlap.rs:25:43: 25:52
    let mut _20: &i32;                   // in scope 0 at ui/borrowck/borrowck-slice-pattern-element-loan-slice-no-overlap.rs:25:54: 25:63
    let mut _21: usize;                  // in scope 0 at ui/borrowck/borrowck-slice-pattern-element-loan-slice-no-overlap.rs:28:12: 28:73
    let mut _22: usize;                  // in scope 0 at ui/borrowck/borrowck-slice-pattern-element-loan-slice-no-overlap.rs:28:12: 28:73
    let mut _23: bool;                   // in scope 0 at ui/borrowck/borrowck-slice-pattern-element-loan-slice-no-overlap.rs:28:12: 28:73
    let mut _27: usize;                  // in scope 0 at ui/borrowck/borrowck-slice-pattern-element-loan-slice-no-overlap.rs:29:16: 29:39
    let mut _28: usize;                  // in scope 0 at ui/borrowck/borrowck-slice-pattern-element-loan-slice-no-overlap.rs:29:16: 29:39
    let mut _29: bool;                   // in scope 0 at ui/borrowck/borrowck-slice-pattern-element-loan-slice-no-overlap.rs:29:16: 29:39
    let _31: ();                         // in scope 0 at ui/borrowck/borrowck-slice-pattern-element-loan-slice-no-overlap.rs:30:13: 30:69
    let mut _32: &[&i32];                // in scope 0 at ui/borrowck/borrowck-slice-pattern-element-loan-slice-no-overlap.rs:30:17: 30:68
    let mut _33: &[&i32; 4];             // in scope 0 at ui/borrowck/borrowck-slice-pattern-element-loan-slice-no-overlap.rs:30:17: 30:68
    let _34: &[&i32; 4];                 // in scope 0 at ui/borrowck/borrowck-slice-pattern-element-loan-slice-no-overlap.rs:30:17: 30:68
    let _35: [&i32; 4];                  // in scope 0 at ui/borrowck/borrowck-slice-pattern-element-loan-slice-no-overlap.rs:30:18: 30:68
    let mut _36: &i32;                   // in scope 0 at ui/borrowck/borrowck-slice-pattern-element-loan-slice-no-overlap.rs:30:19: 30:30
    let mut _37: &i32;                   // in scope 0 at ui/borrowck/borrowck-slice-pattern-element-loan-slice-no-overlap.rs:30:32: 30:43
    let mut _38: &i32;                   // in scope 0 at ui/borrowck/borrowck-slice-pattern-element-loan-slice-no-overlap.rs:30:45: 30:56
    let mut _39: &i32;                   // in scope 0 at ui/borrowck/borrowck-slice-pattern-element-loan-slice-no-overlap.rs:30:58: 30:67
    scope 1 {
        debug from_end4 => _5;           // in scope 1 at ui/borrowck/borrowck-slice-pattern-element-loan-slice-no-overlap.rs:23:20: 23:33
        debug from_end3 => _6;           // in scope 1 at ui/borrowck/borrowck-slice-pattern-element-loan-slice-no-overlap.rs:23:35: 23:48
        debug from_end1 => _7;           // in scope 1 at ui/borrowck/borrowck-slice-pattern-element-loan-slice-no-overlap.rs:23:53: 23:66
        let _5: &i32;                    // in scope 1 at ui/borrowck/borrowck-slice-pattern-element-loan-slice-no-overlap.rs:23:20: 23:33
        let _6: &i32;                    // in scope 1 at ui/borrowck/borrowck-slice-pattern-element-loan-slice-no-overlap.rs:23:35: 23:48
        let _7: &i32;                    // in scope 1 at ui/borrowck/borrowck-slice-pattern-element-loan-slice-no-overlap.rs:23:53: 23:66
        scope 2 {
            debug from_begin0 => _11;    // in scope 2 at ui/borrowck/borrowck-slice-pattern-element-loan-slice-no-overlap.rs:24:17: 24:36
            let _11: &mut i32;           // in scope 2 at ui/borrowck/borrowck-slice-pattern-element-loan-slice-no-overlap.rs:24:17: 24:36
        }
    }
    scope 3 {
        debug from_begin0 => _24;        // in scope 3 at ui/borrowck/borrowck-slice-pattern-element-loan-slice-no-overlap.rs:28:13: 28:28
        debug from_begin1 => _25;        // in scope 3 at ui/borrowck/borrowck-slice-pattern-element-loan-slice-no-overlap.rs:28:30: 28:45
        debug from_begin3 => _26;        // in scope 3 at ui/borrowck/borrowck-slice-pattern-element-loan-slice-no-overlap.rs:28:50: 28:65
        let _24: &i32;                   // in scope 3 at ui/borrowck/borrowck-slice-pattern-element-loan-slice-no-overlap.rs:28:13: 28:28
        let _25: &i32;                   // in scope 3 at ui/borrowck/borrowck-slice-pattern-element-loan-slice-no-overlap.rs:28:30: 28:45
        let _26: &i32;                   // in scope 3 at ui/borrowck/borrowck-slice-pattern-element-loan-slice-no-overlap.rs:28:50: 28:65
        scope 4 {
            debug from_end1 => _30;      // in scope 4 at ui/borrowck/borrowck-slice-pattern-element-loan-slice-no-overlap.rs:29:21: 29:38
            let _30: &mut i32;           // in scope 4 at ui/borrowck/borrowck-slice-pattern-element-loan-slice-no-overlap.rs:29:21: 29:38
        }
    }

    bb0: {
        _2 = Len((*_1));                 // scope 1 at ui/borrowck/borrowck-slice-pattern-element-loan-slice-no-overlap.rs:23:12: 23:67
        _3 = const 5_usize;              // scope 1 at ui/borrowck/borrowck-slice-pattern-element-loan-slice-no-overlap.rs:23:12: 23:67
        _4 = Ge(move _2, move _3);       // scope 1 at ui/borrowck/borrowck-slice-pattern-element-loan-slice-no-overlap.rs:23:12: 23:67
        switchInt(move _4) -> [0: bb3, otherwise: bb1]; // scope 1 at ui/borrowck/borrowck-slice-pattern-element-loan-slice-no-overlap.rs:23:12: 23:67
    }

    bb1: {
        _7 = &(*_1)[-1 of 5];            // scope 1 at ui/borrowck/borrowck-slice-pattern-element-loan-slice-no-overlap.rs:23:53: 23:66
        _6 = &(*_1)[-3 of 5];            // scope 1 at ui/borrowck/borrowck-slice-pattern-element-loan-slice-no-overlap.rs:23:35: 23:48
        _5 = &(*_1)[-4 of 5];            // scope 1 at ui/borrowck/borrowck-slice-pattern-element-loan-slice-no-overlap.rs:23:20: 23:33
        _8 = Len((*_1));                 // scope 2 at ui/borrowck/borrowck-slice-pattern-element-loan-slice-no-overlap.rs:24:16: 24:41
        _9 = const 1_usize;              // scope 2 at ui/borrowck/borrowck-slice-pattern-element-loan-slice-no-overlap.rs:24:16: 24:41
        _10 = Ge(move _8, move _9);      // scope 2 at ui/borrowck/borrowck-slice-pattern-element-loan-slice-no-overlap.rs:24:16: 24:41
        switchInt(move _10) -> [0: bb3, otherwise: bb2]; // scope 2 at ui/borrowck/borrowck-slice-pattern-element-loan-slice-no-overlap.rs:24:16: 24:41
    }

    bb2: {
        _11 = &mut (*_1)[0 of 1];        // scope 2 at ui/borrowck/borrowck-slice-pattern-element-loan-slice-no-overlap.rs:24:17: 24:36
        _17 = &(*_11);                   // scope 2 at ui/borrowck/borrowck-slice-pattern-element-loan-slice-no-overlap.rs:25:19: 25:30
        _18 = _7;                        // scope 2 at ui/borrowck/borrowck-slice-pattern-element-loan-slice-no-overlap.rs:25:32: 25:41
        _19 = _6;                        // scope 2 at ui/borrowck/borrowck-slice-pattern-element-loan-slice-no-overlap.rs:25:43: 25:52
        _20 = _5;                        // scope 2 at ui/borrowck/borrowck-slice-pattern-element-loan-slice-no-overlap.rs:25:54: 25:63
        _16 = [move _17, move _18, move _19, move _20]; // scope 2 at ui/borrowck/borrowck-slice-pattern-element-loan-slice-no-overlap.rs:25:18: 25:64
        _15 = &_16;                      // scope 2 at ui/borrowck/borrowck-slice-pattern-element-loan-slice-no-overlap.rs:25:17: 25:64
        _14 = _15;                       // scope 2 at ui/borrowck/borrowck-slice-pattern-element-loan-slice-no-overlap.rs:25:17: 25:64
        _13 = move _14 as &[&i32] (Pointer(Unsize)); // scope 2 at ui/borrowck/borrowck-slice-pattern-element-loan-slice-no-overlap.rs:25:17: 25:64
        _12 = nop(move _13) -> bb3;      // scope 2 at ui/borrowck/borrowck-slice-pattern-element-loan-slice-no-overlap.rs:25:13: 25:65
                                         // mir::Constant
                                         // + span: ui/borrowck/borrowck-slice-pattern-element-loan-slice-no-overlap.rs:25:13: 25:16
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a [&'b i32]) {nop}, val: Value(<ZST>) }
    }

    bb3: {
        _21 = Len((*_1));                // scope 3 at ui/borrowck/borrowck-slice-pattern-element-loan-slice-no-overlap.rs:28:12: 28:73
        _22 = const 5_usize;             // scope 3 at ui/borrowck/borrowck-slice-pattern-element-loan-slice-no-overlap.rs:28:12: 28:73
        _23 = Ge(move _21, move _22);    // scope 3 at ui/borrowck/borrowck-slice-pattern-element-loan-slice-no-overlap.rs:28:12: 28:73
        switchInt(move _23) -> [0: bb6, otherwise: bb4]; // scope 3 at ui/borrowck/borrowck-slice-pattern-element-loan-slice-no-overlap.rs:28:12: 28:73
    }

    bb4: {
        _24 = &(*_1)[0 of 5];            // scope 3 at ui/borrowck/borrowck-slice-pattern-element-loan-slice-no-overlap.rs:28:13: 28:28
        _25 = &(*_1)[1 of 5];            // scope 3 at ui/borrowck/borrowck-slice-pattern-element-loan-slice-no-overlap.rs:28:30: 28:45
        _26 = &(*_1)[3 of 5];            // scope 3 at ui/borrowck/borrowck-slice-pattern-element-loan-slice-no-overlap.rs:28:50: 28:65
        _27 = Len((*_1));                // scope 4 at ui/borrowck/borrowck-slice-pattern-element-loan-slice-no-overlap.rs:29:16: 29:39
        _28 = const 1_usize;             // scope 4 at ui/borrowck/borrowck-slice-pattern-element-loan-slice-no-overlap.rs:29:16: 29:39
        _29 = Ge(move _27, move _28);    // scope 4 at ui/borrowck/borrowck-slice-pattern-element-loan-slice-no-overlap.rs:29:16: 29:39
        switchInt(move _29) -> [0: bb6, otherwise: bb5]; // scope 4 at ui/borrowck/borrowck-slice-pattern-element-loan-slice-no-overlap.rs:29:16: 29:39
    }

    bb5: {
        _30 = &mut (*_1)[-1 of 1];       // scope 4 at ui/borrowck/borrowck-slice-pattern-element-loan-slice-no-overlap.rs:29:21: 29:38
        _36 = _24;                       // scope 4 at ui/borrowck/borrowck-slice-pattern-element-loan-slice-no-overlap.rs:30:19: 30:30
        _37 = _25;                       // scope 4 at ui/borrowck/borrowck-slice-pattern-element-loan-slice-no-overlap.rs:30:32: 30:43
        _38 = _26;                       // scope 4 at ui/borrowck/borrowck-slice-pattern-element-loan-slice-no-overlap.rs:30:45: 30:56
        _39 = &(*_30);                   // scope 4 at ui/borrowck/borrowck-slice-pattern-element-loan-slice-no-overlap.rs:30:58: 30:67
        _35 = [move _36, move _37, move _38, move _39]; // scope 4 at ui/borrowck/borrowck-slice-pattern-element-loan-slice-no-overlap.rs:30:18: 30:68
        _34 = &_35;                      // scope 4 at ui/borrowck/borrowck-slice-pattern-element-loan-slice-no-overlap.rs:30:17: 30:68
        _33 = _34;                       // scope 4 at ui/borrowck/borrowck-slice-pattern-element-loan-slice-no-overlap.rs:30:17: 30:68
        _32 = move _33 as &[&i32] (Pointer(Unsize)); // scope 4 at ui/borrowck/borrowck-slice-pattern-element-loan-slice-no-overlap.rs:30:17: 30:68
        _31 = nop(move _32) -> bb6;      // scope 4 at ui/borrowck/borrowck-slice-pattern-element-loan-slice-no-overlap.rs:30:13: 30:69
                                         // mir::Constant
                                         // + span: ui/borrowck/borrowck-slice-pattern-element-loan-slice-no-overlap.rs:30:13: 30:16
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a [&'b i32]) {nop}, val: Value(<ZST>) }
    }

    bb6: {
        return;                          // scope 0 at ui/borrowck/borrowck-slice-pattern-element-loan-slice-no-overlap.rs:33:2: 33:2
    }
}

fn const_index_and_subslice_ok(_1: &mut [i32]) -> () {
    debug s => _1;                       // in scope 0 at ui/borrowck/borrowck-slice-pattern-element-loan-slice-no-overlap.rs:35:32: 35:33
    let mut _0: ();                      // return place in scope 0 at ui/borrowck/borrowck-slice-pattern-element-loan-slice-no-overlap.rs:35:47: 35:47
    let mut _2: usize;                   // in scope 0 at ui/borrowck/borrowck-slice-pattern-element-loan-slice-no-overlap.rs:36:12: 36:39
    let mut _3: usize;                   // in scope 0 at ui/borrowck/borrowck-slice-pattern-element-loan-slice-no-overlap.rs:36:12: 36:39
    let mut _4: bool;                    // in scope 0 at ui/borrowck/borrowck-slice-pattern-element-loan-slice-no-overlap.rs:36:12: 36:39
    let mut _7: usize;                   // in scope 0 at ui/borrowck/borrowck-slice-pattern-element-loan-slice-no-overlap.rs:37:16: 37:41
    let mut _8: usize;                   // in scope 0 at ui/borrowck/borrowck-slice-pattern-element-loan-slice-no-overlap.rs:37:16: 37:41
    let mut _9: bool;                    // in scope 0 at ui/borrowck/borrowck-slice-pattern-element-loan-slice-no-overlap.rs:37:16: 37:41
    let _11: ();                         // in scope 0 at ui/borrowck/borrowck-slice-pattern-element-loan-slice-no-overlap.rs:38:13: 38:34
    let mut _12: &[&i32];                // in scope 0 at ui/borrowck/borrowck-slice-pattern-element-loan-slice-no-overlap.rs:38:17: 38:33
    let mut _13: &[&i32; 2];             // in scope 0 at ui/borrowck/borrowck-slice-pattern-element-loan-slice-no-overlap.rs:38:17: 38:33
    let _14: &[&i32; 2];                 // in scope 0 at ui/borrowck/borrowck-slice-pattern-element-loan-slice-no-overlap.rs:38:17: 38:33
    let _15: [&i32; 2];                  // in scope 0 at ui/borrowck/borrowck-slice-pattern-element-loan-slice-no-overlap.rs:38:18: 38:33
    let mut _16: &i32;                   // in scope 0 at ui/borrowck/borrowck-slice-pattern-element-loan-slice-no-overlap.rs:38:19: 38:24
    let mut _17: &i32;                   // in scope 0 at ui/borrowck/borrowck-slice-pattern-element-loan-slice-no-overlap.rs:38:26: 38:32
    let _18: ();                         // in scope 0 at ui/borrowck/borrowck-slice-pattern-element-loan-slice-no-overlap.rs:39:13: 39:31
    let mut _19: &[i32];                 // in scope 0 at ui/borrowck/borrowck-slice-pattern-element-loan-slice-no-overlap.rs:39:26: 39:30
    scope 1 {
        debug first => _5;               // in scope 1 at ui/borrowck/borrowck-slice-pattern-element-loan-slice-no-overlap.rs:36:13: 36:22
        debug second => _6;              // in scope 1 at ui/borrowck/borrowck-slice-pattern-element-loan-slice-no-overlap.rs:36:24: 36:34
        let _5: &i32;                    // in scope 1 at ui/borrowck/borrowck-slice-pattern-element-loan-slice-no-overlap.rs:36:13: 36:22
        let _6: &i32;                    // in scope 1 at ui/borrowck/borrowck-slice-pattern-element-loan-slice-no-overlap.rs:36:24: 36:34
        scope 2 {
            debug tail => _10;           // in scope 2 at ui/borrowck/borrowck-slice-pattern-element-loan-slice-no-overlap.rs:37:23: 37:35
            let _10: &mut [i32];         // in scope 2 at ui/borrowck/borrowck-slice-pattern-element-loan-slice-no-overlap.rs:37:23: 37:35
        }
    }

    bb0: {
        _2 = Len((*_1));                 // scope 1 at ui/borrowck/borrowck-slice-pattern-element-loan-slice-no-overlap.rs:36:12: 36:39
        _3 = const 2_usize;              // scope 1 at ui/borrowck/borrowck-slice-pattern-element-loan-slice-no-overlap.rs:36:12: 36:39
        _4 = Ge(move _2, move _3);       // scope 1 at ui/borrowck/borrowck-slice-pattern-element-loan-slice-no-overlap.rs:36:12: 36:39
        switchInt(move _4) -> [0: bb4, otherwise: bb1]; // scope 1 at ui/borrowck/borrowck-slice-pattern-element-loan-slice-no-overlap.rs:36:12: 36:39
    }

    bb1: {
        _5 = &(*_1)[0 of 2];             // scope 1 at ui/borrowck/borrowck-slice-pattern-element-loan-slice-no-overlap.rs:36:13: 36:22
        _6 = &(*_1)[1 of 2];             // scope 1 at ui/borrowck/borrowck-slice-pattern-element-loan-slice-no-overlap.rs:36:24: 36:34
        _7 = Len((*_1));                 // scope 2 at ui/borrowck/borrowck-slice-pattern-element-loan-slice-no-overlap.rs:37:16: 37:41
        _8 = const 2_usize;              // scope 2 at ui/borrowck/borrowck-slice-pattern-element-loan-slice-no-overlap.rs:37:16: 37:41
        _9 = Ge(move _7, move _8);       // scope 2 at ui/borrowck/borrowck-slice-pattern-element-loan-slice-no-overlap.rs:37:16: 37:41
        switchInt(move _9) -> [0: bb4, otherwise: bb2]; // scope 2 at ui/borrowck/borrowck-slice-pattern-element-loan-slice-no-overlap.rs:37:16: 37:41
    }

    bb2: {
        _10 = &mut (*_1)[2:];            // scope 2 at ui/borrowck/borrowck-slice-pattern-element-loan-slice-no-overlap.rs:37:23: 37:35
        _16 = _5;                        // scope 2 at ui/borrowck/borrowck-slice-pattern-element-loan-slice-no-overlap.rs:38:19: 38:24
        _17 = _6;                        // scope 2 at ui/borrowck/borrowck-slice-pattern-element-loan-slice-no-overlap.rs:38:26: 38:32
        _15 = [move _16, move _17];      // scope 2 at ui/borrowck/borrowck-slice-pattern-element-loan-slice-no-overlap.rs:38:18: 38:33
        _14 = &_15;                      // scope 2 at ui/borrowck/borrowck-slice-pattern-element-loan-slice-no-overlap.rs:38:17: 38:33
        _13 = _14;                       // scope 2 at ui/borrowck/borrowck-slice-pattern-element-loan-slice-no-overlap.rs:38:17: 38:33
        _12 = move _13 as &[&i32] (Pointer(Unsize)); // scope 2 at ui/borrowck/borrowck-slice-pattern-element-loan-slice-no-overlap.rs:38:17: 38:33
        _11 = nop(move _12) -> bb3;      // scope 2 at ui/borrowck/borrowck-slice-pattern-element-loan-slice-no-overlap.rs:38:13: 38:34
                                         // mir::Constant
                                         // + span: ui/borrowck/borrowck-slice-pattern-element-loan-slice-no-overlap.rs:38:13: 38:16
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a [&'b i32]) {nop}, val: Value(<ZST>) }
    }

    bb3: {
        _19 = &(*_10);                   // scope 2 at ui/borrowck/borrowck-slice-pattern-element-loan-slice-no-overlap.rs:39:26: 39:30
        _18 = nop_subslice(move _19) -> bb4; // scope 2 at ui/borrowck/borrowck-slice-pattern-element-loan-slice-no-overlap.rs:39:13: 39:31
                                         // mir::Constant
                                         // + span: ui/borrowck/borrowck-slice-pattern-element-loan-slice-no-overlap.rs:39:13: 39:25
                                         // + literal: Const { ty: for<'a> fn(&'a [i32]) {nop_subslice}, val: Value(<ZST>) }
    }

    bb4: {
        return;                          // scope 0 at ui/borrowck/borrowck-slice-pattern-element-loan-slice-no-overlap.rs:42:2: 42:2
    }
}

fn const_index_and_subslice_from_end_ok(_1: &mut [i32]) -> () {
    debug s => _1;                       // in scope 0 at ui/borrowck/borrowck-slice-pattern-element-loan-slice-no-overlap.rs:44:41: 44:42
    let mut _0: ();                      // return place in scope 0 at ui/borrowck/borrowck-slice-pattern-element-loan-slice-no-overlap.rs:44:56: 44:56
    let mut _2: usize;                   // in scope 0 at ui/borrowck/borrowck-slice-pattern-element-loan-slice-no-overlap.rs:45:12: 45:39
    let mut _3: usize;                   // in scope 0 at ui/borrowck/borrowck-slice-pattern-element-loan-slice-no-overlap.rs:45:12: 45:39
    let mut _4: bool;                    // in scope 0 at ui/borrowck/borrowck-slice-pattern-element-loan-slice-no-overlap.rs:45:12: 45:39
    let mut _7: usize;                   // in scope 0 at ui/borrowck/borrowck-slice-pattern-element-loan-slice-no-overlap.rs:46:16: 46:41
    let mut _8: usize;                   // in scope 0 at ui/borrowck/borrowck-slice-pattern-element-loan-slice-no-overlap.rs:46:16: 46:41
    let mut _9: bool;                    // in scope 0 at ui/borrowck/borrowck-slice-pattern-element-loan-slice-no-overlap.rs:46:16: 46:41
    let _11: ();                         // in scope 0 at ui/borrowck/borrowck-slice-pattern-element-loan-slice-no-overlap.rs:47:13: 47:34
    let mut _12: &[&i32];                // in scope 0 at ui/borrowck/borrowck-slice-pattern-element-loan-slice-no-overlap.rs:47:17: 47:33
    let mut _13: &[&i32; 2];             // in scope 0 at ui/borrowck/borrowck-slice-pattern-element-loan-slice-no-overlap.rs:47:17: 47:33
    let _14: &[&i32; 2];                 // in scope 0 at ui/borrowck/borrowck-slice-pattern-element-loan-slice-no-overlap.rs:47:17: 47:33
    let _15: [&i32; 2];                  // in scope 0 at ui/borrowck/borrowck-slice-pattern-element-loan-slice-no-overlap.rs:47:18: 47:33
    let mut _16: &i32;                   // in scope 0 at ui/borrowck/borrowck-slice-pattern-element-loan-slice-no-overlap.rs:47:19: 47:24
    let mut _17: &i32;                   // in scope 0 at ui/borrowck/borrowck-slice-pattern-element-loan-slice-no-overlap.rs:47:26: 47:32
    let _18: ();                         // in scope 0 at ui/borrowck/borrowck-slice-pattern-element-loan-slice-no-overlap.rs:48:13: 48:31
    let mut _19: &[i32];                 // in scope 0 at ui/borrowck/borrowck-slice-pattern-element-loan-slice-no-overlap.rs:48:26: 48:30
    scope 1 {
        debug second => _5;              // in scope 1 at ui/borrowck/borrowck-slice-pattern-element-loan-slice-no-overlap.rs:45:17: 45:27
        debug first => _6;               // in scope 1 at ui/borrowck/borrowck-slice-pattern-element-loan-slice-no-overlap.rs:45:29: 45:38
        let _5: &i32;                    // in scope 1 at ui/borrowck/borrowck-slice-pattern-element-loan-slice-no-overlap.rs:45:17: 45:27
        let _6: &i32;                    // in scope 1 at ui/borrowck/borrowck-slice-pattern-element-loan-slice-no-overlap.rs:45:29: 45:38
        scope 2 {
            debug tail => _10;           // in scope 2 at ui/borrowck/borrowck-slice-pattern-element-loan-slice-no-overlap.rs:46:17: 46:29
            let _10: &mut [i32];         // in scope 2 at ui/borrowck/borrowck-slice-pattern-element-loan-slice-no-overlap.rs:46:17: 46:29
        }
    }

    bb0: {
        _2 = Len((*_1));                 // scope 1 at ui/borrowck/borrowck-slice-pattern-element-loan-slice-no-overlap.rs:45:12: 45:39
        _3 = const 2_usize;              // scope 1 at ui/borrowck/borrowck-slice-pattern-element-loan-slice-no-overlap.rs:45:12: 45:39
        _4 = Ge(move _2, move _3);       // scope 1 at ui/borrowck/borrowck-slice-pattern-element-loan-slice-no-overlap.rs:45:12: 45:39
        switchInt(move _4) -> [0: bb4, otherwise: bb1]; // scope 1 at ui/borrowck/borrowck-slice-pattern-element-loan-slice-no-overlap.rs:45:12: 45:39
    }

    bb1: {
        _6 = &(*_1)[-1 of 2];            // scope 1 at ui/borrowck/borrowck-slice-pattern-element-loan-slice-no-overlap.rs:45:29: 45:38
        _5 = &(*_1)[-2 of 2];            // scope 1 at ui/borrowck/borrowck-slice-pattern-element-loan-slice-no-overlap.rs:45:17: 45:27
        _7 = Len((*_1));                 // scope 2 at ui/borrowck/borrowck-slice-pattern-element-loan-slice-no-overlap.rs:46:16: 46:41
        _8 = const 2_usize;              // scope 2 at ui/borrowck/borrowck-slice-pattern-element-loan-slice-no-overlap.rs:46:16: 46:41
        _9 = Ge(move _7, move _8);       // scope 2 at ui/borrowck/borrowck-slice-pattern-element-loan-slice-no-overlap.rs:46:16: 46:41
        switchInt(move _9) -> [0: bb4, otherwise: bb2]; // scope 2 at ui/borrowck/borrowck-slice-pattern-element-loan-slice-no-overlap.rs:46:16: 46:41
    }

    bb2: {
        _10 = &mut (*_1)[:-2];           // scope 2 at ui/borrowck/borrowck-slice-pattern-element-loan-slice-no-overlap.rs:46:17: 46:29
        _16 = _6;                        // scope 2 at ui/borrowck/borrowck-slice-pattern-element-loan-slice-no-overlap.rs:47:19: 47:24
        _17 = _5;                        // scope 2 at ui/borrowck/borrowck-slice-pattern-element-loan-slice-no-overlap.rs:47:26: 47:32
        _15 = [move _16, move _17];      // scope 2 at ui/borrowck/borrowck-slice-pattern-element-loan-slice-no-overlap.rs:47:18: 47:33
        _14 = &_15;                      // scope 2 at ui/borrowck/borrowck-slice-pattern-element-loan-slice-no-overlap.rs:47:17: 47:33
        _13 = _14;                       // scope 2 at ui/borrowck/borrowck-slice-pattern-element-loan-slice-no-overlap.rs:47:17: 47:33
        _12 = move _13 as &[&i32] (Pointer(Unsize)); // scope 2 at ui/borrowck/borrowck-slice-pattern-element-loan-slice-no-overlap.rs:47:17: 47:33
        _11 = nop(move _12) -> bb3;      // scope 2 at ui/borrowck/borrowck-slice-pattern-element-loan-slice-no-overlap.rs:47:13: 47:34
                                         // mir::Constant
                                         // + span: ui/borrowck/borrowck-slice-pattern-element-loan-slice-no-overlap.rs:47:13: 47:16
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a [&'b i32]) {nop}, val: Value(<ZST>) }
    }

    bb3: {
        _19 = &(*_10);                   // scope 2 at ui/borrowck/borrowck-slice-pattern-element-loan-slice-no-overlap.rs:48:26: 48:30
        _18 = nop_subslice(move _19) -> bb4; // scope 2 at ui/borrowck/borrowck-slice-pattern-element-loan-slice-no-overlap.rs:48:13: 48:31
                                         // mir::Constant
                                         // + span: ui/borrowck/borrowck-slice-pattern-element-loan-slice-no-overlap.rs:48:13: 48:25
                                         // + literal: Const { ty: for<'a> fn(&'a [i32]) {nop_subslice}, val: Value(<ZST>) }
    }

    bb4: {
        return;                          // scope 0 at ui/borrowck/borrowck-slice-pattern-element-loan-slice-no-overlap.rs:51:2: 51:2
    }
}

fn main() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/borrowck/borrowck-slice-pattern-element-loan-slice-no-overlap.rs:53:11: 53:11
    let mut _1: [i32; 4];                // in scope 0 at ui/borrowck/borrowck-slice-pattern-element-loan-slice-no-overlap.rs:54:9: 54:14
    let _2: ();                          // in scope 0 at ui/borrowck/borrowck-slice-pattern-element-loan-slice-no-overlap.rs:55:5: 55:27
    let mut _3: &mut [i32];              // in scope 0 at ui/borrowck/borrowck-slice-pattern-element-loan-slice-no-overlap.rs:55:20: 55:26
    let mut _4: &mut [i32; 4];           // in scope 0 at ui/borrowck/borrowck-slice-pattern-element-loan-slice-no-overlap.rs:55:20: 55:26
    let mut _5: &mut [i32; 4];           // in scope 0 at ui/borrowck/borrowck-slice-pattern-element-loan-slice-no-overlap.rs:55:20: 55:26
    let _6: ();                          // in scope 0 at ui/borrowck/borrowck-slice-pattern-element-loan-slice-no-overlap.rs:56:5: 56:36
    let mut _7: &mut [i32];              // in scope 0 at ui/borrowck/borrowck-slice-pattern-element-loan-slice-no-overlap.rs:56:29: 56:35
    let mut _8: &mut [i32; 4];           // in scope 0 at ui/borrowck/borrowck-slice-pattern-element-loan-slice-no-overlap.rs:56:29: 56:35
    let mut _9: &mut [i32; 4];           // in scope 0 at ui/borrowck/borrowck-slice-pattern-element-loan-slice-no-overlap.rs:56:29: 56:35
    let _10: ();                         // in scope 0 at ui/borrowck/borrowck-slice-pattern-element-loan-slice-no-overlap.rs:57:5: 57:40
    let mut _11: &mut [i32];             // in scope 0 at ui/borrowck/borrowck-slice-pattern-element-loan-slice-no-overlap.rs:57:33: 57:39
    let mut _12: &mut [i32; 4];          // in scope 0 at ui/borrowck/borrowck-slice-pattern-element-loan-slice-no-overlap.rs:57:33: 57:39
    let mut _13: &mut [i32; 4];          // in scope 0 at ui/borrowck/borrowck-slice-pattern-element-loan-slice-no-overlap.rs:57:33: 57:39
    let _14: ();                         // in scope 0 at ui/borrowck/borrowck-slice-pattern-element-loan-slice-no-overlap.rs:58:5: 58:49
    let mut _15: &mut [i32];             // in scope 0 at ui/borrowck/borrowck-slice-pattern-element-loan-slice-no-overlap.rs:58:42: 58:48
    let mut _16: &mut [i32; 4];          // in scope 0 at ui/borrowck/borrowck-slice-pattern-element-loan-slice-no-overlap.rs:58:42: 58:48
    let mut _17: &mut [i32; 4];          // in scope 0 at ui/borrowck/borrowck-slice-pattern-element-loan-slice-no-overlap.rs:58:42: 58:48
    scope 1 {
        debug v => _1;                   // in scope 1 at ui/borrowck/borrowck-slice-pattern-element-loan-slice-no-overlap.rs:54:9: 54:14
    }

    bb0: {
        _1 = [const 1_i32, const 2_i32, const 3_i32, const 4_i32]; // scope 0 at ui/borrowck/borrowck-slice-pattern-element-loan-slice-no-overlap.rs:54:17: 54:26
        _5 = &mut _1;                    // scope 1 at ui/borrowck/borrowck-slice-pattern-element-loan-slice-no-overlap.rs:55:20: 55:26
        _4 = &mut (*_5);                 // scope 1 at ui/borrowck/borrowck-slice-pattern-element-loan-slice-no-overlap.rs:55:20: 55:26
        _3 = move _4 as &mut [i32] (Pointer(Unsize)); // scope 1 at ui/borrowck/borrowck-slice-pattern-element-loan-slice-no-overlap.rs:55:20: 55:26
        _2 = const_index_ok(move _3) -> bb1; // scope 1 at ui/borrowck/borrowck-slice-pattern-element-loan-slice-no-overlap.rs:55:5: 55:27
                                         // mir::Constant
                                         // + span: ui/borrowck/borrowck-slice-pattern-element-loan-slice-no-overlap.rs:55:5: 55:19
                                         // + literal: Const { ty: for<'a> fn(&'a mut [i32]) {const_index_ok}, val: Value(<ZST>) }
    }

    bb1: {
        _9 = &mut _1;                    // scope 1 at ui/borrowck/borrowck-slice-pattern-element-loan-slice-no-overlap.rs:56:29: 56:35
        _8 = &mut (*_9);                 // scope 1 at ui/borrowck/borrowck-slice-pattern-element-loan-slice-no-overlap.rs:56:29: 56:35
        _7 = move _8 as &mut [i32] (Pointer(Unsize)); // scope 1 at ui/borrowck/borrowck-slice-pattern-element-loan-slice-no-overlap.rs:56:29: 56:35
        _6 = const_index_from_end_ok(move _7) -> bb2; // scope 1 at ui/borrowck/borrowck-slice-pattern-element-loan-slice-no-overlap.rs:56:5: 56:36
                                         // mir::Constant
                                         // + span: ui/borrowck/borrowck-slice-pattern-element-loan-slice-no-overlap.rs:56:5: 56:28
                                         // + literal: Const { ty: for<'a> fn(&'a mut [i32]) {const_index_from_end_ok}, val: Value(<ZST>) }
    }

    bb2: {
        _13 = &mut _1;                   // scope 1 at ui/borrowck/borrowck-slice-pattern-element-loan-slice-no-overlap.rs:57:33: 57:39
        _12 = &mut (*_13);               // scope 1 at ui/borrowck/borrowck-slice-pattern-element-loan-slice-no-overlap.rs:57:33: 57:39
        _11 = move _12 as &mut [i32] (Pointer(Unsize)); // scope 1 at ui/borrowck/borrowck-slice-pattern-element-loan-slice-no-overlap.rs:57:33: 57:39
        _10 = const_index_and_subslice_ok(move _11) -> bb3; // scope 1 at ui/borrowck/borrowck-slice-pattern-element-loan-slice-no-overlap.rs:57:5: 57:40
                                         // mir::Constant
                                         // + span: ui/borrowck/borrowck-slice-pattern-element-loan-slice-no-overlap.rs:57:5: 57:32
                                         // + literal: Const { ty: for<'a> fn(&'a mut [i32]) {const_index_and_subslice_ok}, val: Value(<ZST>) }
    }

    bb3: {
        _17 = &mut _1;                   // scope 1 at ui/borrowck/borrowck-slice-pattern-element-loan-slice-no-overlap.rs:58:42: 58:48
        _16 = &mut (*_17);               // scope 1 at ui/borrowck/borrowck-slice-pattern-element-loan-slice-no-overlap.rs:58:42: 58:48
        _15 = move _16 as &mut [i32] (Pointer(Unsize)); // scope 1 at ui/borrowck/borrowck-slice-pattern-element-loan-slice-no-overlap.rs:58:42: 58:48
        _14 = const_index_and_subslice_from_end_ok(move _15) -> bb4; // scope 1 at ui/borrowck/borrowck-slice-pattern-element-loan-slice-no-overlap.rs:58:5: 58:49
                                         // mir::Constant
                                         // + span: ui/borrowck/borrowck-slice-pattern-element-loan-slice-no-overlap.rs:58:5: 58:41
                                         // + literal: Const { ty: for<'a> fn(&'a mut [i32]) {const_index_and_subslice_from_end_ok}, val: Value(<ZST>) }
    }

    bb4: {
        return;                          // scope 0 at ui/borrowck/borrowck-slice-pattern-element-loan-slice-no-overlap.rs:59:2: 59:2
    }
}
