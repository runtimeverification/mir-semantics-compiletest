// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
fn <impl at ui/borrowck/borrowck-scope-of-deref-issue-4666.rs:11:1: 11:9>::get(_1: &Box) -> &usize {
    debug self => _1;                    // in scope 0 at ui/borrowck/borrowck-scope-of-deref-issue-4666.rs:12:12: 12:17
    let mut _0: &usize;                  // return place in scope 0 at ui/borrowck/borrowck-scope-of-deref-issue-4666.rs:13:9: 13:16

    bb0: {
        _0 = &((*_1).0: usize);          // scope 0 at ui/borrowck/borrowck-scope-of-deref-issue-4666.rs:13:9: 13:16
        return;                          // scope 0 at ui/borrowck/borrowck-scope-of-deref-issue-4666.rs:14:6: 14:6
    }
}

fn <impl at ui/borrowck/borrowck-scope-of-deref-issue-4666.rs:11:1: 11:9>::set(_1: &mut Box, _2: usize) -> () {
    debug self => _1;                    // in scope 0 at ui/borrowck/borrowck-scope-of-deref-issue-4666.rs:15:12: 15:21
    debug x => _2;                       // in scope 0 at ui/borrowck/borrowck-scope-of-deref-issue-4666.rs:15:23: 15:24
    let mut _0: ();                      // return place in scope 0 at ui/borrowck/borrowck-scope-of-deref-issue-4666.rs:15:33: 15:33
    let mut _3: usize;                   // in scope 0 at ui/borrowck/borrowck-scope-of-deref-issue-4666.rs:16:18: 16:19

    bb0: {
        _3 = _2;                         // scope 0 at ui/borrowck/borrowck-scope-of-deref-issue-4666.rs:16:18: 16:19
        ((*_1).0: usize) = move _3;      // scope 0 at ui/borrowck/borrowck-scope-of-deref-issue-4666.rs:16:9: 16:19
        return;                          // scope 0 at ui/borrowck/borrowck-scope-of-deref-issue-4666.rs:17:6: 17:6
    }
}

fn fun1() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/borrowck/borrowck-scope-of-deref-issue-4666.rs:20:11: 20:11
    let _1: usize;                       // in scope 0 at ui/borrowck/borrowck-scope-of-deref-issue-4666.rs:23:9: 23:10
    let _3: ();                          // in scope 0 at ui/borrowck/borrowck-scope-of-deref-issue-4666.rs:25:5: 25:18
    let mut _4: &mut Box;                // in scope 0 at ui/borrowck/borrowck-scope-of-deref-issue-4666.rs:25:5: 25:18
    let mut _5: usize;                   // in scope 0 at ui/borrowck/borrowck-scope-of-deref-issue-4666.rs:26:9: 26:21
    let mut _6: &usize;                  // in scope 0 at ui/borrowck/borrowck-scope-of-deref-issue-4666.rs:26:10: 26:21
    let mut _7: &Box;                    // in scope 0 at ui/borrowck/borrowck-scope-of-deref-issue-4666.rs:26:10: 26:21
    let _8: ();                          // in scope 0 at ui/borrowck/borrowck-scope-of-deref-issue-4666.rs:27:5: 27:19
    let mut _9: &mut Box;                // in scope 0 at ui/borrowck/borrowck-scope-of-deref-issue-4666.rs:27:5: 27:19
    let mut _10: usize;                  // in scope 0 at ui/borrowck/borrowck-scope-of-deref-issue-4666.rs:27:15: 27:18
    let mut _11: usize;                  // in scope 0 at ui/borrowck/borrowck-scope-of-deref-issue-4666.rs:27:15: 27:16
    let mut _12: (usize, bool);          // in scope 0 at ui/borrowck/borrowck-scope-of-deref-issue-4666.rs:27:15: 27:18
    let mut _13: (&usize, &usize);       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _14: &usize;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let mut _15: &usize;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let _16: &usize;                     // in scope 0 at ui/borrowck/borrowck-scope-of-deref-issue-4666.rs:28:21: 28:32
    let mut _17: &Box;                   // in scope 0 at ui/borrowck/borrowck-scope-of-deref-issue-4666.rs:28:21: 28:32
    let mut _20: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    let mut _21: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
    let mut _22: usize;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
    let mut _23: usize;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
    let _25: !;                          // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
    let mut _26: core::panicking::AssertKind; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
    let mut _27: &usize;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let _28: &usize;                     // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let mut _29: &usize;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let _30: &usize;                     // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let mut _31: std::option::Option<std::fmt::Arguments<'_>>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
    scope 1 {
        debug v => _1;                   // in scope 1 at ui/borrowck/borrowck-scope-of-deref-issue-4666.rs:23:9: 23:10
        let mut _2: Box;                 // in scope 1 at ui/borrowck/borrowck-scope-of-deref-issue-4666.rs:24:9: 24:18
        scope 2 {
            debug a_box => _2;           // in scope 2 at ui/borrowck/borrowck-scope-of-deref-issue-4666.rs:24:9: 24:18
            let _18: &usize;             // in scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
            let _19: &usize;             // in scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
            let mut _32: &usize;         // in scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
            scope 3 {
                debug left_val => _18;   // in scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
                debug right_val => _19;  // in scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
                let _24: core::panicking::AssertKind; // in scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                scope 4 {
                    debug kind => _24;   // in scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                }
            }
        }
    }

    bb0: {
        _2 = Box { x: const 0_usize };   // scope 1 at ui/borrowck/borrowck-scope-of-deref-issue-4666.rs:24:21: 24:31
        _4 = &mut _2;                    // scope 2 at ui/borrowck/borrowck-scope-of-deref-issue-4666.rs:25:5: 25:18
        _3 = Box::set(move _4, const 22_usize) -> bb1; // scope 2 at ui/borrowck/borrowck-scope-of-deref-issue-4666.rs:25:5: 25:18
                                         // mir::Constant
                                         // + span: ui/borrowck/borrowck-scope-of-deref-issue-4666.rs:25:11: 25:14
                                         // + literal: Const { ty: for<'a> fn(&'a mut Box, usize) {Box::set}, val: Value(<ZST>) }
    }

    bb1: {
        _7 = &_2;                        // scope 2 at ui/borrowck/borrowck-scope-of-deref-issue-4666.rs:26:10: 26:21
        _6 = Box::get(move _7) -> bb2;   // scope 2 at ui/borrowck/borrowck-scope-of-deref-issue-4666.rs:26:10: 26:21
                                         // mir::Constant
                                         // + span: ui/borrowck/borrowck-scope-of-deref-issue-4666.rs:26:16: 26:19
                                         // + literal: Const { ty: for<'a> fn(&'a Box) -> &'a usize {Box::get}, val: Value(<ZST>) }
    }

    bb2: {
        _5 = (*_6);                      // scope 2 at ui/borrowck/borrowck-scope-of-deref-issue-4666.rs:26:9: 26:21
        _1 = move _5;                    // scope 2 at ui/borrowck/borrowck-scope-of-deref-issue-4666.rs:26:5: 26:21
        _9 = &mut _2;                    // scope 2 at ui/borrowck/borrowck-scope-of-deref-issue-4666.rs:27:5: 27:19
        _11 = _1;                        // scope 2 at ui/borrowck/borrowck-scope-of-deref-issue-4666.rs:27:15: 27:16
        _12 = CheckedAdd(_11, const 1_usize); // scope 2 at ui/borrowck/borrowck-scope-of-deref-issue-4666.rs:27:15: 27:18
        assert(!move (_12.1: bool), "attempt to compute `{} + {}`, which would overflow", move _11, const 1_usize) -> bb3; // scope 2 at ui/borrowck/borrowck-scope-of-deref-issue-4666.rs:27:15: 27:18
    }

    bb3: {
        _10 = move (_12.0: usize);       // scope 2 at ui/borrowck/borrowck-scope-of-deref-issue-4666.rs:27:15: 27:18
        _8 = Box::set(move _9, move _10) -> bb4; // scope 2 at ui/borrowck/borrowck-scope-of-deref-issue-4666.rs:27:5: 27:19
                                         // mir::Constant
                                         // + span: ui/borrowck/borrowck-scope-of-deref-issue-4666.rs:27:11: 27:14
                                         // + literal: Const { ty: for<'a> fn(&'a mut Box, usize) {Box::set}, val: Value(<ZST>) }
    }

    bb4: {
        _32 = const _;                   // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
                                         // + literal: Const { ty: &usize, val: Unevaluated(fun1, [], Some(promoted[0])) }
        _14 = _32;                       // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _17 = &_2;                       // scope 2 at ui/borrowck/borrowck-scope-of-deref-issue-4666.rs:28:21: 28:32
        _16 = Box::get(move _17) -> bb5; // scope 2 at ui/borrowck/borrowck-scope-of-deref-issue-4666.rs:28:21: 28:32
                                         // mir::Constant
                                         // + span: ui/borrowck/borrowck-scope-of-deref-issue-4666.rs:28:27: 28:30
                                         // + literal: Const { ty: for<'a> fn(&'a Box) -> &'a usize {Box::get}, val: Value(<ZST>) }
    }

    bb5: {
        _15 = _16;                       // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _13 = (move _14, move _15);      // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _18 = (_13.0: &usize);           // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _19 = (_13.1: &usize);           // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _22 = const 23_usize;            // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
        _23 = (*_19);                    // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
        _21 = Eq(move _22, move _23);    // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
        _20 = Not(move _21);             // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
        switchInt(move _20) -> [0: bb7, otherwise: bb6]; // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    }

    bb6: {
        _24 = const core::panicking::AssertKind::Eq; // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _26 = const core::panicking::AssertKind::Eq; // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _28 = _18;                       // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _27 = _28;                       // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _30 = _19;                       // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _29 = _30;                       // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _31 = Option::<Arguments<'_>>::None; // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
        _25 = core::panicking::assert_failed::<usize, usize>(move _26, move _27, move _29, move _31); // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:53
                                         // + literal: Const { ty: for<'a, 'b, 'c> fn(core::panicking::AssertKind, &'a usize, &'b usize, Option<Arguments<'c>>) -> ! {core::panicking::assert_failed::<usize, usize>}, val: Value(<ZST>) }
    }

    bb7: {
        return;                          // scope 0 at ui/borrowck/borrowck-scope-of-deref-issue-4666.rs:29:2: 29:2
    }
}

promoted[0] in fun1: &usize = {
    let mut _0: &usize;                  // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let mut _1: usize;                   // in scope 0 at ui/borrowck/borrowck-scope-of-deref-issue-4666.rs:28:16: 28:18

    bb0: {
        _1 = const 23_usize;             // scope 0 at ui/borrowck/borrowck-scope-of-deref-issue-4666.rs:28:16: 28:18
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    }
}

fn fun2() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/borrowck/borrowck-scope-of-deref-issue-4666.rs:31:11: 31:11
    let mut _1: Box;                     // in scope 0 at ui/borrowck/borrowck-scope-of-deref-issue-4666.rs:32:9: 32:18
    let _2: ();                          // in scope 0 at ui/borrowck/borrowck-scope-of-deref-issue-4666.rs:33:5: 33:18
    let mut _3: &mut Box;                // in scope 0 at ui/borrowck/borrowck-scope-of-deref-issue-4666.rs:33:5: 33:18
    let mut _5: &usize;                  // in scope 0 at ui/borrowck/borrowck-scope-of-deref-issue-4666.rs:34:14: 34:25
    let mut _6: &Box;                    // in scope 0 at ui/borrowck/borrowck-scope-of-deref-issue-4666.rs:34:14: 34:25
    let _7: ();                          // in scope 0 at ui/borrowck/borrowck-scope-of-deref-issue-4666.rs:35:5: 35:19
    let mut _8: &mut Box;                // in scope 0 at ui/borrowck/borrowck-scope-of-deref-issue-4666.rs:35:5: 35:19
    let mut _9: usize;                   // in scope 0 at ui/borrowck/borrowck-scope-of-deref-issue-4666.rs:35:15: 35:18
    let mut _10: usize;                  // in scope 0 at ui/borrowck/borrowck-scope-of-deref-issue-4666.rs:35:15: 35:16
    let mut _11: (usize, bool);          // in scope 0 at ui/borrowck/borrowck-scope-of-deref-issue-4666.rs:35:15: 35:18
    let mut _12: (&usize, &usize);       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _13: &usize;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let mut _14: &usize;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let _15: &usize;                     // in scope 0 at ui/borrowck/borrowck-scope-of-deref-issue-4666.rs:36:21: 36:32
    let mut _16: &Box;                   // in scope 0 at ui/borrowck/borrowck-scope-of-deref-issue-4666.rs:36:21: 36:32
    let mut _19: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    let mut _20: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
    let mut _21: usize;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
    let mut _22: usize;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
    let _24: !;                          // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
    let mut _25: core::panicking::AssertKind; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
    let mut _26: &usize;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let _27: &usize;                     // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let mut _28: &usize;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let _29: &usize;                     // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let mut _30: std::option::Option<std::fmt::Arguments<'_>>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
    scope 1 {
        debug a_box => _1;               // in scope 1 at ui/borrowck/borrowck-scope-of-deref-issue-4666.rs:32:9: 32:18
        let _4: usize;                   // in scope 1 at ui/borrowck/borrowck-scope-of-deref-issue-4666.rs:34:9: 34:10
        scope 2 {
            debug v => _4;               // in scope 2 at ui/borrowck/borrowck-scope-of-deref-issue-4666.rs:34:9: 34:10
            let _17: &usize;             // in scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
            let _18: &usize;             // in scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
            let mut _31: &usize;         // in scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
            scope 3 {
                debug left_val => _17;   // in scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
                debug right_val => _18;  // in scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
                let _23: core::panicking::AssertKind; // in scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                scope 4 {
                    debug kind => _23;   // in scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                }
            }
        }
    }

    bb0: {
        _1 = Box { x: const 0_usize };   // scope 0 at ui/borrowck/borrowck-scope-of-deref-issue-4666.rs:32:21: 32:31
        _3 = &mut _1;                    // scope 1 at ui/borrowck/borrowck-scope-of-deref-issue-4666.rs:33:5: 33:18
        _2 = Box::set(move _3, const 22_usize) -> bb1; // scope 1 at ui/borrowck/borrowck-scope-of-deref-issue-4666.rs:33:5: 33:18
                                         // mir::Constant
                                         // + span: ui/borrowck/borrowck-scope-of-deref-issue-4666.rs:33:11: 33:14
                                         // + literal: Const { ty: for<'a> fn(&'a mut Box, usize) {Box::set}, val: Value(<ZST>) }
    }

    bb1: {
        _6 = &_1;                        // scope 1 at ui/borrowck/borrowck-scope-of-deref-issue-4666.rs:34:14: 34:25
        _5 = Box::get(move _6) -> bb2;   // scope 1 at ui/borrowck/borrowck-scope-of-deref-issue-4666.rs:34:14: 34:25
                                         // mir::Constant
                                         // + span: ui/borrowck/borrowck-scope-of-deref-issue-4666.rs:34:20: 34:23
                                         // + literal: Const { ty: for<'a> fn(&'a Box) -> &'a usize {Box::get}, val: Value(<ZST>) }
    }

    bb2: {
        _4 = (*_5);                      // scope 1 at ui/borrowck/borrowck-scope-of-deref-issue-4666.rs:34:13: 34:25
        _8 = &mut _1;                    // scope 2 at ui/borrowck/borrowck-scope-of-deref-issue-4666.rs:35:5: 35:19
        _10 = _4;                        // scope 2 at ui/borrowck/borrowck-scope-of-deref-issue-4666.rs:35:15: 35:16
        _11 = CheckedAdd(_10, const 1_usize); // scope 2 at ui/borrowck/borrowck-scope-of-deref-issue-4666.rs:35:15: 35:18
        assert(!move (_11.1: bool), "attempt to compute `{} + {}`, which would overflow", move _10, const 1_usize) -> bb3; // scope 2 at ui/borrowck/borrowck-scope-of-deref-issue-4666.rs:35:15: 35:18
    }

    bb3: {
        _9 = move (_11.0: usize);        // scope 2 at ui/borrowck/borrowck-scope-of-deref-issue-4666.rs:35:15: 35:18
        _7 = Box::set(move _8, move _9) -> bb4; // scope 2 at ui/borrowck/borrowck-scope-of-deref-issue-4666.rs:35:5: 35:19
                                         // mir::Constant
                                         // + span: ui/borrowck/borrowck-scope-of-deref-issue-4666.rs:35:11: 35:14
                                         // + literal: Const { ty: for<'a> fn(&'a mut Box, usize) {Box::set}, val: Value(<ZST>) }
    }

    bb4: {
        _31 = const _;                   // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
                                         // + literal: Const { ty: &usize, val: Unevaluated(fun2, [], Some(promoted[0])) }
        _13 = _31;                       // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _16 = &_1;                       // scope 2 at ui/borrowck/borrowck-scope-of-deref-issue-4666.rs:36:21: 36:32
        _15 = Box::get(move _16) -> bb5; // scope 2 at ui/borrowck/borrowck-scope-of-deref-issue-4666.rs:36:21: 36:32
                                         // mir::Constant
                                         // + span: ui/borrowck/borrowck-scope-of-deref-issue-4666.rs:36:27: 36:30
                                         // + literal: Const { ty: for<'a> fn(&'a Box) -> &'a usize {Box::get}, val: Value(<ZST>) }
    }

    bb5: {
        _14 = _15;                       // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _12 = (move _13, move _14);      // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _17 = (_12.0: &usize);           // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _18 = (_12.1: &usize);           // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _21 = const 23_usize;            // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
        _22 = (*_18);                    // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
        _20 = Eq(move _21, move _22);    // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
        _19 = Not(move _20);             // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
        switchInt(move _19) -> [0: bb7, otherwise: bb6]; // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    }

    bb6: {
        _23 = const core::panicking::AssertKind::Eq; // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _25 = const core::panicking::AssertKind::Eq; // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _27 = _17;                       // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _26 = _27;                       // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _29 = _18;                       // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _28 = _29;                       // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _30 = Option::<Arguments<'_>>::None; // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
        _24 = core::panicking::assert_failed::<usize, usize>(move _25, move _26, move _28, move _30); // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:53
                                         // + literal: Const { ty: for<'a, 'b, 'c> fn(core::panicking::AssertKind, &'a usize, &'b usize, Option<Arguments<'c>>) -> ! {core::panicking::assert_failed::<usize, usize>}, val: Value(<ZST>) }
    }

    bb7: {
        return;                          // scope 0 at ui/borrowck/borrowck-scope-of-deref-issue-4666.rs:37:2: 37:2
    }
}

promoted[0] in fun2: &usize = {
    let mut _0: &usize;                  // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let mut _1: usize;                   // in scope 0 at ui/borrowck/borrowck-scope-of-deref-issue-4666.rs:36:16: 36:18

    bb0: {
        _1 = const 23_usize;             // scope 0 at ui/borrowck/borrowck-scope-of-deref-issue-4666.rs:36:16: 36:18
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    }
}

fn main() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/borrowck/borrowck-scope-of-deref-issue-4666.rs:39:15: 39:15
    let _1: ();                          // in scope 0 at ui/borrowck/borrowck-scope-of-deref-issue-4666.rs:40:5: 40:11
    let _2: ();                          // in scope 0 at ui/borrowck/borrowck-scope-of-deref-issue-4666.rs:41:5: 41:11

    bb0: {
        _1 = fun1() -> bb1;              // scope 0 at ui/borrowck/borrowck-scope-of-deref-issue-4666.rs:40:5: 40:11
                                         // mir::Constant
                                         // + span: ui/borrowck/borrowck-scope-of-deref-issue-4666.rs:40:5: 40:9
                                         // + literal: Const { ty: fn() {fun1}, val: Value(<ZST>) }
    }

    bb1: {
        _2 = fun2() -> bb2;              // scope 0 at ui/borrowck/borrowck-scope-of-deref-issue-4666.rs:41:5: 41:11
                                         // mir::Constant
                                         // + span: ui/borrowck/borrowck-scope-of-deref-issue-4666.rs:41:5: 41:9
                                         // + literal: Const { ty: fn() {fun2}, val: Value(<ZST>) }
    }

    bb2: {
        return;                          // scope 0 at ui/borrowck/borrowck-scope-of-deref-issue-4666.rs:42:2: 42:2
    }
}
