// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
fn foo(_1: &mut Result<(u32, u32), (u32, u32)>) -> u32 {
    debug x => _1;                       // in scope 0 at ui/borrowck/issue-51348-multi-ref-mut-in-guard.rs:11:8: 11:9
    let mut _0: u32;                     // return place in scope 0 at ui/borrowck/issue-51348-multi-ref-mut-in-guard.rs:11:51: 11:54
    let mut _2: isize;                   // in scope 0 at ui/borrowck/issue-51348-multi-ref-mut-in-guard.rs:13:9: 13:27
    let _3: &mut u32;                    // in scope 0 at ui/borrowck/issue-51348-multi-ref-mut-in-guard.rs:13:13: 13:22
    let _4: &&mut u32;                   // in scope 0 at ui/borrowck/issue-51348-multi-ref-mut-in-guard.rs:13:13: 13:22
    let mut _5: bool;                    // in scope 0 at ui/borrowck/issue-51348-multi-ref-mut-in-guard.rs:13:53: 13:59
    let mut _6: u32;                     // in scope 0 at ui/borrowck/issue-51348-multi-ref-mut-in-guard.rs:13:53: 13:55
    let mut _7: bool;                    // in scope 0 at ui/borrowck/issue-51348-multi-ref-mut-in-guard.rs:13:53: 13:59
    let mut _8: u32;                     // in scope 0 at ui/borrowck/issue-51348-multi-ref-mut-in-guard.rs:13:53: 13:55
    let mut _9: &mut u32;                // in scope 0 at ui/borrowck/issue-51348-multi-ref-mut-in-guard.rs:13:13: 13:22
    let mut _10: &mut u32;               // in scope 0 at ui/borrowck/issue-51348-multi-ref-mut-in-guard.rs:13:13: 13:22
    scope 1 {
        debug v => _3;                   // in scope 1 at ui/borrowck/issue-51348-multi-ref-mut-in-guard.rs:13:13: 13:22
        debug v => _4;                   // in scope 1 at ui/borrowck/issue-51348-multi-ref-mut-in-guard.rs:13:13: 13:22
    }

    bb0: {
        _2 = discriminant((*_1));        // scope 0 at ui/borrowck/issue-51348-multi-ref-mut-in-guard.rs:12:11: 12:13
        switchInt(move _2) -> [0: bb3, 1: bb4, otherwise: bb6]; // scope 0 at ui/borrowck/issue-51348-multi-ref-mut-in-guard.rs:12:5: 12:13
    }

    bb1: {
        _0 = const 0_u32;                // scope 0 at ui/borrowck/issue-51348-multi-ref-mut-in-guard.rs:14:16: 14:17
        goto -> bb5;                     // scope 0 at ui/borrowck/issue-51348-multi-ref-mut-in-guard.rs:14:16: 14:17
    }

    bb2: {
        _0 = (*_3);                      // scope 1 at ui/borrowck/issue-51348-multi-ref-mut-in-guard.rs:13:65: 13:67
        goto -> bb5;                     // scope 0 at ui/borrowck/issue-51348-multi-ref-mut-in-guard.rs:13:68: 13:69
    }

    bb3: {
        _3 = &mut ((((*_1) as Ok).0: (u32, u32)).0: u32); // scope 0 at ui/borrowck/issue-51348-multi-ref-mut-in-guard.rs:13:13: 13:22
        _4 = &_3;                        // scope 0 at ui/borrowck/issue-51348-multi-ref-mut-in-guard.rs:13:13: 13:22
        _9 = deref_copy (*_4);           // scope 0 at ui/borrowck/issue-51348-multi-ref-mut-in-guard.rs:13:53: 13:55
        _6 = (*_9);                      // scope 0 at ui/borrowck/issue-51348-multi-ref-mut-in-guard.rs:13:53: 13:55
        _5 = Gt(move _6, const 0_u32);   // scope 0 at ui/borrowck/issue-51348-multi-ref-mut-in-guard.rs:13:53: 13:59
        switchInt(move _5) -> [0: bb1, otherwise: bb2]; // scope 0 at ui/borrowck/issue-51348-multi-ref-mut-in-guard.rs:13:53: 13:59
    }

    bb4: {
        _3 = &mut ((((*_1) as Err).0: (u32, u32)).1: u32); // scope 0 at ui/borrowck/issue-51348-multi-ref-mut-in-guard.rs:13:38: 13:47
        _4 = &_3;                        // scope 0 at ui/borrowck/issue-51348-multi-ref-mut-in-guard.rs:13:38: 13:47
        _10 = deref_copy (*_4);          // scope 0 at ui/borrowck/issue-51348-multi-ref-mut-in-guard.rs:13:53: 13:55
        _8 = (*_10);                     // scope 0 at ui/borrowck/issue-51348-multi-ref-mut-in-guard.rs:13:53: 13:55
        _7 = Gt(move _8, const 0_u32);   // scope 0 at ui/borrowck/issue-51348-multi-ref-mut-in-guard.rs:13:53: 13:59
        switchInt(move _7) -> [0: bb1, otherwise: bb2]; // scope 0 at ui/borrowck/issue-51348-multi-ref-mut-in-guard.rs:13:53: 13:59
    }

    bb5: {
        return;                          // scope 0 at ui/borrowck/issue-51348-multi-ref-mut-in-guard.rs:16:2: 16:2
    }

    bb6: {
        unreachable;                     // scope 0 at ui/borrowck/issue-51348-multi-ref-mut-in-guard.rs:14:16: 14:17
    }
}

fn main() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/borrowck/issue-51348-multi-ref-mut-in-guard.rs:18:11: 18:11
    let mut _1: (&u32, &u32);            // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _2: &u32;                    // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let _3: u32;                         // in scope 0 at ui/borrowck/issue-51348-multi-ref-mut-in-guard.rs:19:16: 19:36
    let mut _4: &mut std::result::Result<(u32, u32), (u32, u32)>; // in scope 0 at ui/borrowck/issue-51348-multi-ref-mut-in-guard.rs:19:20: 19:35
    let mut _5: &mut std::result::Result<(u32, u32), (u32, u32)>; // in scope 0 at ui/borrowck/issue-51348-multi-ref-mut-in-guard.rs:19:20: 19:35
    let mut _6: std::result::Result<(u32, u32), (u32, u32)>; // in scope 0 at ui/borrowck/issue-51348-multi-ref-mut-in-guard.rs:19:25: 19:35
    let mut _7: (u32, u32);              // in scope 0 at ui/borrowck/issue-51348-multi-ref-mut-in-guard.rs:19:28: 19:34
    let mut _8: &u32;                    // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let _9: &u32;                        // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
    let _10: &u32;                       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
    let mut _11: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    let mut _12: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
    let mut _13: u32;                    // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
    let mut _14: u32;                    // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
    let _16: !;                          // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
    let mut _17: core::panicking::AssertKind; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
    let mut _18: &u32;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let _19: &u32;                       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let mut _20: &u32;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let _21: &u32;                       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let mut _22: std::option::Option<std::fmt::Arguments<'_>>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
    let mut _23: (&u32, &u32);           // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _24: &u32;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let _25: u32;                        // in scope 0 at ui/borrowck/issue-51348-multi-ref-mut-in-guard.rs:20:16: 20:37
    let mut _26: &mut std::result::Result<(u32, u32), (u32, u32)>; // in scope 0 at ui/borrowck/issue-51348-multi-ref-mut-in-guard.rs:20:20: 20:36
    let mut _27: &mut std::result::Result<(u32, u32), (u32, u32)>; // in scope 0 at ui/borrowck/issue-51348-multi-ref-mut-in-guard.rs:20:20: 20:36
    let mut _28: std::result::Result<(u32, u32), (u32, u32)>; // in scope 0 at ui/borrowck/issue-51348-multi-ref-mut-in-guard.rs:20:25: 20:36
    let mut _29: (u32, u32);             // in scope 0 at ui/borrowck/issue-51348-multi-ref-mut-in-guard.rs:20:29: 20:35
    let mut _30: &u32;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let _31: &u32;                       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
    let _32: &u32;                       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
    let mut _33: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    let mut _34: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
    let mut _35: u32;                    // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
    let mut _36: u32;                    // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
    let _38: !;                          // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
    let mut _39: core::panicking::AssertKind; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
    let mut _40: &u32;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let _41: &u32;                       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let mut _42: &u32;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let _43: &u32;                       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let mut _44: std::option::Option<std::fmt::Arguments<'_>>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
    let mut _45: &u32;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _46: &u32;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    scope 1 {
        debug left_val => _9;            // in scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        debug right_val => _10;          // in scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        let _15: core::panicking::AssertKind; // in scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
        scope 2 {
            debug kind => _15;           // in scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
        }
    }
    scope 3 {
        debug left_val => _31;           // in scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        debug right_val => _32;          // in scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        let _37: core::panicking::AssertKind; // in scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
        scope 4 {
            debug kind => _37;           // in scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
        }
    }

    bb0: {
        _7 = const (3_u32, 4_u32);       // scope 0 at ui/borrowck/issue-51348-multi-ref-mut-in-guard.rs:19:28: 19:34
        _6 = Result::<(u32, u32), (u32, u32)>::Ok(move _7); // scope 0 at ui/borrowck/issue-51348-multi-ref-mut-in-guard.rs:19:25: 19:35
        _5 = &mut _6;                    // scope 0 at ui/borrowck/issue-51348-multi-ref-mut-in-guard.rs:19:20: 19:35
        _4 = &mut (*_5);                 // scope 0 at ui/borrowck/issue-51348-multi-ref-mut-in-guard.rs:19:20: 19:35
        _3 = foo(move _4) -> bb1;        // scope 0 at ui/borrowck/issue-51348-multi-ref-mut-in-guard.rs:19:16: 19:36
                                         // mir::Constant
                                         // + span: ui/borrowck/issue-51348-multi-ref-mut-in-guard.rs:19:16: 19:19
                                         // + literal: Const { ty: for<'a> fn(&'a mut Result<(u32, u32), (u32, u32)>) -> u32 {foo}, val: Value(<ZST>) }
    }

    bb1: {
        _2 = &_3;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _46 = const _;                   // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // + literal: Const { ty: &u32, val: Unevaluated(main, [], Some(promoted[1])) }
        _8 = _46;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _1 = (move _2, move _8);         // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _9 = (_1.0: &u32);               // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _10 = (_1.1: &u32);              // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _13 = (*_9);                     // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
        _14 = const 3_u32;               // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
        _12 = Eq(move _13, move _14);    // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
        _11 = Not(move _12);             // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
        switchInt(move _11) -> [0: bb3, otherwise: bb2]; // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    }

    bb2: {
        _15 = const core::panicking::AssertKind::Eq; // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _17 = const core::panicking::AssertKind::Eq; // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _19 = _9;                        // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _18 = _19;                       // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _21 = _10;                       // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _20 = _21;                       // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _22 = Option::<Arguments<'_>>::None; // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
        _16 = core::panicking::assert_failed::<u32, u32>(move _17, move _18, move _20, move _22); // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:53
                                         // + literal: Const { ty: for<'a, 'b, 'c> fn(core::panicking::AssertKind, &'a u32, &'b u32, Option<Arguments<'c>>) -> ! {core::panicking::assert_failed::<u32, u32>}, val: Value(<ZST>) }
    }

    bb3: {
        _29 = const (3_u32, 4_u32);      // scope 0 at ui/borrowck/issue-51348-multi-ref-mut-in-guard.rs:20:29: 20:35
        _28 = Result::<(u32, u32), (u32, u32)>::Err(move _29); // scope 0 at ui/borrowck/issue-51348-multi-ref-mut-in-guard.rs:20:25: 20:36
        _27 = &mut _28;                  // scope 0 at ui/borrowck/issue-51348-multi-ref-mut-in-guard.rs:20:20: 20:36
        _26 = &mut (*_27);               // scope 0 at ui/borrowck/issue-51348-multi-ref-mut-in-guard.rs:20:20: 20:36
        _25 = foo(move _26) -> bb4;      // scope 0 at ui/borrowck/issue-51348-multi-ref-mut-in-guard.rs:20:16: 20:37
                                         // mir::Constant
                                         // + span: ui/borrowck/issue-51348-multi-ref-mut-in-guard.rs:20:16: 20:19
                                         // + literal: Const { ty: for<'a> fn(&'a mut Result<(u32, u32), (u32, u32)>) -> u32 {foo}, val: Value(<ZST>) }
    }

    bb4: {
        _24 = &_25;                      // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _45 = const _;                   // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // + literal: Const { ty: &u32, val: Unevaluated(main, [], Some(promoted[0])) }
        _30 = _45;                       // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _23 = (move _24, move _30);      // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _31 = (_23.0: &u32);             // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _32 = (_23.1: &u32);             // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _35 = (*_31);                    // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
        _36 = const 4_u32;               // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
        _34 = Eq(move _35, move _36);    // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
        _33 = Not(move _34);             // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
        switchInt(move _33) -> [0: bb6, otherwise: bb5]; // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    }

    bb5: {
        _37 = const core::panicking::AssertKind::Eq; // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _39 = const core::panicking::AssertKind::Eq; // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _41 = _31;                       // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _40 = _41;                       // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _43 = _32;                       // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _42 = _43;                       // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _44 = Option::<Arguments<'_>>::None; // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
        _38 = core::panicking::assert_failed::<u32, u32>(move _39, move _40, move _42, move _44); // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:53
                                         // + literal: Const { ty: for<'a, 'b, 'c> fn(core::panicking::AssertKind, &'a u32, &'b u32, Option<Arguments<'c>>) -> ! {core::panicking::assert_failed::<u32, u32>}, val: Value(<ZST>) }
    }

    bb6: {
        return;                          // scope 0 at ui/borrowck/issue-51348-multi-ref-mut-in-guard.rs:21:2: 21:2
    }
}

promoted[0] in main: &u32 = {
    let mut _0: &u32;                    // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _1: u32;                     // in scope 0 at ui/borrowck/issue-51348-multi-ref-mut-in-guard.rs:20:39: 20:40

    bb0: {
        _1 = const 4_u32;                // scope 0 at ui/borrowck/issue-51348-multi-ref-mut-in-guard.rs:20:39: 20:40
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    }
}

promoted[1] in main: &u32 = {
    let mut _0: &u32;                    // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _1: u32;                     // in scope 0 at ui/borrowck/issue-51348-multi-ref-mut-in-guard.rs:19:38: 19:39

    bb0: {
        _1 = const 3_u32;                // scope 0 at ui/borrowck/issue-51348-multi-ref-mut-in-guard.rs:19:38: 19:39
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    }
}
