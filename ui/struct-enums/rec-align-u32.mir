// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
fn <impl at ui/struct-enums/rec-align-u32.rs:19:10: 19:15>::fmt(_1: &Inner, _2: &mut Formatter<'_>) -> Result<(), std::fmt::Error> {
    debug self => _1;                    // in scope 0 at ui/struct-enums/rec-align-u32.rs:19:10: 19:15
    debug f => _2;                       // in scope 0 at ui/struct-enums/rec-align-u32.rs:19:10: 19:15
    let mut _0: std::result::Result<(), std::fmt::Error>; // return place in scope 0 at ui/struct-enums/rec-align-u32.rs:19:10: 19:15
    let mut _3: &mut std::fmt::Formatter<'_>; // in scope 0 at ui/struct-enums/rec-align-u32.rs:19:10: 19:15
    let mut _4: &str;                    // in scope 0 at ui/struct-enums/rec-align-u32.rs:19:10: 19:15
    let _5: &str;                        // in scope 0 at ui/struct-enums/rec-align-u32.rs:19:10: 19:15
    let mut _6: &str;                    // in scope 0 at ui/struct-enums/rec-align-u32.rs:21:5: 21:13
    let _7: &str;                        // in scope 0 at ui/struct-enums/rec-align-u32.rs:21:5: 21:13
    let mut _8: &dyn std::fmt::Debug;    // in scope 0 at ui/struct-enums/rec-align-u32.rs:21:5: 21:13
    let mut _9: &&u32;                   // in scope 0 at ui/struct-enums/rec-align-u32.rs:21:5: 21:13
    let _10: &&u32;                      // in scope 0 at ui/struct-enums/rec-align-u32.rs:21:5: 21:13
    let _11: &u32;                       // in scope 0 at ui/struct-enums/rec-align-u32.rs:21:5: 21:13

    bb0: {
        _3 = &mut (*_2);                 // scope 0 at ui/struct-enums/rec-align-u32.rs:19:10: 19:15
        _5 = const "Inner";              // scope 0 at ui/struct-enums/rec-align-u32.rs:19:10: 19:15
                                         // mir::Constant
                                         // + span: ui/struct-enums/rec-align-u32.rs:19:10: 19:15
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _4 = _5;                         // scope 0 at ui/struct-enums/rec-align-u32.rs:19:10: 19:15
        _7 = const "c64";                // scope 0 at ui/struct-enums/rec-align-u32.rs:21:5: 21:13
                                         // mir::Constant
                                         // + span: ui/struct-enums/rec-align-u32.rs:21:5: 21:13
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _6 = _7;                         // scope 0 at ui/struct-enums/rec-align-u32.rs:21:5: 21:13
        _11 = &((*_1).0: u32);           // scope 0 at ui/struct-enums/rec-align-u32.rs:21:5: 21:13
        _10 = &_11;                      // scope 0 at ui/struct-enums/rec-align-u32.rs:21:5: 21:13
        _9 = _10;                        // scope 0 at ui/struct-enums/rec-align-u32.rs:21:5: 21:13
        _8 = move _9 as &dyn std::fmt::Debug (Pointer(Unsize)); // scope 0 at ui/struct-enums/rec-align-u32.rs:21:5: 21:13
        _0 = Formatter::<'_>::debug_struct_field1_finish(move _3, move _4, move _6, move _8) -> bb1; // scope 0 at ui/struct-enums/rec-align-u32.rs:19:10: 19:15
                                         // mir::Constant
                                         // + span: ui/struct-enums/rec-align-u32.rs:19:10: 19:15
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: for<'b, 'a, 'c, 'd> fn(&'b mut Formatter<'_>, &'a str, &'c str, &'d (dyn Debug + 'd)) -> Result<(), std::fmt::Error> {Formatter::<'_>::debug_struct_field1_finish}, val: Value(<ZST>) }
    }

    bb1: {
        return;                          // scope 0 at ui/struct-enums/rec-align-u32.rs:19:15: 19:15
    }
}

fn <impl at ui/struct-enums/rec-align-u32.rs:26:10: 26:15>::fmt(_1: &Outer, _2: &mut Formatter<'_>) -> Result<(), std::fmt::Error> {
    debug self => _1;                    // in scope 0 at ui/struct-enums/rec-align-u32.rs:26:10: 26:15
    debug f => _2;                       // in scope 0 at ui/struct-enums/rec-align-u32.rs:26:10: 26:15
    let mut _0: std::result::Result<(), std::fmt::Error>; // return place in scope 0 at ui/struct-enums/rec-align-u32.rs:26:10: 26:15
    let mut _3: &mut std::fmt::Formatter<'_>; // in scope 0 at ui/struct-enums/rec-align-u32.rs:26:10: 26:15
    let mut _4: &str;                    // in scope 0 at ui/struct-enums/rec-align-u32.rs:26:10: 26:15
    let _5: &str;                        // in scope 0 at ui/struct-enums/rec-align-u32.rs:26:10: 26:15
    let mut _6: &str;                    // in scope 0 at ui/struct-enums/rec-align-u32.rs:28:5: 28:11
    let _7: &str;                        // in scope 0 at ui/struct-enums/rec-align-u32.rs:28:5: 28:11
    let mut _8: &dyn std::fmt::Debug;    // in scope 0 at ui/struct-enums/rec-align-u32.rs:28:5: 28:11
    let mut _9: &u8;                     // in scope 0 at ui/struct-enums/rec-align-u32.rs:28:5: 28:11
    let _10: &u8;                        // in scope 0 at ui/struct-enums/rec-align-u32.rs:28:5: 28:11
    let mut _11: &str;                   // in scope 0 at ui/struct-enums/rec-align-u32.rs:29:5: 29:13
    let _12: &str;                       // in scope 0 at ui/struct-enums/rec-align-u32.rs:29:5: 29:13
    let mut _13: &dyn std::fmt::Debug;   // in scope 0 at ui/struct-enums/rec-align-u32.rs:29:5: 29:13
    let mut _14: &&Inner;                // in scope 0 at ui/struct-enums/rec-align-u32.rs:29:5: 29:13
    let _15: &&Inner;                    // in scope 0 at ui/struct-enums/rec-align-u32.rs:29:5: 29:13
    let _16: &Inner;                     // in scope 0 at ui/struct-enums/rec-align-u32.rs:29:5: 29:13

    bb0: {
        _3 = &mut (*_2);                 // scope 0 at ui/struct-enums/rec-align-u32.rs:26:10: 26:15
        _5 = const "Outer";              // scope 0 at ui/struct-enums/rec-align-u32.rs:26:10: 26:15
                                         // mir::Constant
                                         // + span: ui/struct-enums/rec-align-u32.rs:26:10: 26:15
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _4 = _5;                         // scope 0 at ui/struct-enums/rec-align-u32.rs:26:10: 26:15
        _7 = const "c8";                 // scope 0 at ui/struct-enums/rec-align-u32.rs:28:5: 28:11
                                         // mir::Constant
                                         // + span: ui/struct-enums/rec-align-u32.rs:28:5: 28:11
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _6 = _7;                         // scope 0 at ui/struct-enums/rec-align-u32.rs:28:5: 28:11
        _10 = &((*_1).0: u8);            // scope 0 at ui/struct-enums/rec-align-u32.rs:28:5: 28:11
        _9 = _10;                        // scope 0 at ui/struct-enums/rec-align-u32.rs:28:5: 28:11
        _8 = move _9 as &dyn std::fmt::Debug (Pointer(Unsize)); // scope 0 at ui/struct-enums/rec-align-u32.rs:28:5: 28:11
        _12 = const "t";                 // scope 0 at ui/struct-enums/rec-align-u32.rs:29:5: 29:13
                                         // mir::Constant
                                         // + span: ui/struct-enums/rec-align-u32.rs:29:5: 29:13
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _11 = _12;                       // scope 0 at ui/struct-enums/rec-align-u32.rs:29:5: 29:13
        _16 = &((*_1).1: Inner);         // scope 0 at ui/struct-enums/rec-align-u32.rs:29:5: 29:13
        _15 = &_16;                      // scope 0 at ui/struct-enums/rec-align-u32.rs:29:5: 29:13
        _14 = _15;                       // scope 0 at ui/struct-enums/rec-align-u32.rs:29:5: 29:13
        _13 = move _14 as &dyn std::fmt::Debug (Pointer(Unsize)); // scope 0 at ui/struct-enums/rec-align-u32.rs:29:5: 29:13
        _0 = Formatter::<'_>::debug_struct_field2_finish(move _3, move _4, move _6, move _8, move _11, move _13) -> bb1; // scope 0 at ui/struct-enums/rec-align-u32.rs:26:10: 26:15
                                         // mir::Constant
                                         // + span: ui/struct-enums/rec-align-u32.rs:26:10: 26:15
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: for<'b, 'a, 'c, 'd, 'e, 'f> fn(&'b mut Formatter<'_>, &'a str, &'c str, &'d (dyn Debug + 'd), &'e str, &'f (dyn Debug + 'f)) -> Result<(), std::fmt::Error> {Formatter::<'_>::debug_struct_field2_finish}, val: Value(<ZST>) }
    }

    bb1: {
        return;                          // scope 0 at ui/struct-enums/rec-align-u32.rs:26:15: 26:15
    }
}

fn align() -> usize {
    let mut _0: usize;                   // return place in scope 0 at ui/struct-enums/rec-align-u32.rs:33:23: 33:28

    bb0: {
        _0 = const 4_usize;              // scope 0 at ui/struct-enums/rec-align-u32.rs:33:31: 33:32
        return;                          // scope 0 at ui/struct-enums/rec-align-u32.rs:33:34: 33:34
    }
}

fn m::size() -> usize {
    let mut _0: usize;                   // return place in scope 0 at ui/struct-enums/rec-align-u32.rs:34:22: 34:27

    bb0: {
        _0 = const 8_usize;              // scope 0 at ui/struct-enums/rec-align-u32.rs:34:30: 34:31
        return;                          // scope 0 at ui/struct-enums/rec-align-u32.rs:34:33: 34:33
    }
}

fn main() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/struct-enums/rec-align-u32.rs:37:15: 37:15
    let mut _2: Inner;                   // in scope 0 at ui/struct-enums/rec-align-u32.rs:39:35: 39:50
    let mut _5: std::fmt::Arguments<'_>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
    let mut _6: &[&str];                 // in scope 0 at ui/struct-enums/rec-align-u32.rs:42:25: 42:31
    let mut _7: &[&str; 1];              // in scope 0 at ui/struct-enums/rec-align-u32.rs:42:25: 42:31
    let _8: &[&str; 1];                  // in scope 0 at ui/struct-enums/rec-align-u32.rs:42:25: 42:31
    let mut _9: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
    let mut _10: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
    let _11: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
    let _12: [core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
    let mut _13: core::fmt::ArgumentV1<'_>; // in scope 0 at ui/struct-enums/rec-align-u32.rs:42:33: 42:34
    let mut _14: &Outer;                 // in scope 0 at ui/struct-enums/rec-align-u32.rs:42:33: 42:34
    let _15: &Outer;                     // in scope 0 at ui/struct-enums/rec-align-u32.rs:42:33: 42:34
    let _16: ();                         // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:62
    let mut _17: std::fmt::Arguments<'_>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _18: &[&str];                // in scope 0 at ui/struct-enums/rec-align-u32.rs:44:18: 44:38
    let mut _19: &[&str; 2];             // in scope 0 at ui/struct-enums/rec-align-u32.rs:44:18: 44:38
    let _20: &[&str; 2];                 // in scope 0 at ui/struct-enums/rec-align-u32.rs:44:18: 44:38
    let mut _21: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _22: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let _23: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let _24: [core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _25: core::fmt::ArgumentV1<'_>; // in scope 0 at ui/struct-enums/rec-align-u32.rs:44:40: 44:70
    let mut _26: &usize;                 // in scope 0 at ui/struct-enums/rec-align-u32.rs:44:40: 44:70
    let _27: &usize;                     // in scope 0 at ui/struct-enums/rec-align-u32.rs:44:40: 44:70
    let _28: usize;                      // in scope 0 at ui/struct-enums/rec-align-u32.rs:44:40: 44:70
    let _29: ();                         // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:62
    let mut _30: std::fmt::Arguments<'_>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _31: &[&str];                // in scope 0 at ui/struct-enums/rec-align-u32.rs:45:18: 45:37
    let mut _32: &[&str; 2];             // in scope 0 at ui/struct-enums/rec-align-u32.rs:45:18: 45:37
    let _33: &[&str; 2];                 // in scope 0 at ui/struct-enums/rec-align-u32.rs:45:18: 45:37
    let mut _34: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _35: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let _36: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let _37: [core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _38: core::fmt::ArgumentV1<'_>; // in scope 0 at ui/struct-enums/rec-align-u32.rs:45:39: 45:62
    let mut _39: &usize;                 // in scope 0 at ui/struct-enums/rec-align-u32.rs:45:39: 45:62
    let _40: &usize;                     // in scope 0 at ui/struct-enums/rec-align-u32.rs:45:39: 45:62
    let _41: ();                         // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:62
    let mut _42: std::fmt::Arguments<'_>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _43: &[&str];                // in scope 0 at ui/struct-enums/rec-align-u32.rs:46:18: 46:28
    let mut _44: &[&str; 2];             // in scope 0 at ui/struct-enums/rec-align-u32.rs:46:18: 46:28
    let _45: &[&str; 2];                 // in scope 0 at ui/struct-enums/rec-align-u32.rs:46:18: 46:28
    let mut _46: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _47: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let _48: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let _49: [core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _50: core::fmt::ArgumentV1<'_>; // in scope 0 at ui/struct-enums/rec-align-u32.rs:46:30: 46:31
    let mut _51: &std::string::String;   // in scope 0 at ui/struct-enums/rec-align-u32.rs:46:30: 46:31
    let _52: &std::string::String;       // in scope 0 at ui/struct-enums/rec-align-u32.rs:46:30: 46:31
    let mut _53: (&usize, &usize);       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _54: &usize;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let _55: usize;                      // in scope 0 at ui/struct-enums/rec-align-u32.rs:49:20: 49:50
    let mut _56: &usize;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let _57: usize;                      // in scope 0 at ui/struct-enums/rec-align-u32.rs:49:52: 49:62
    let mut _60: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    let mut _61: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
    let mut _62: usize;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
    let mut _63: usize;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
    let _65: !;                          // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
    let mut _66: core::panicking::AssertKind; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
    let mut _67: &usize;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let _68: &usize;                     // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let mut _69: &usize;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let _70: &usize;                     // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let mut _71: std::option::Option<std::fmt::Arguments<'_>>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
    let mut _72: (&usize, &usize);       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _73: &usize;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let mut _74: &usize;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let _75: usize;                      // in scope 0 at ui/struct-enums/rec-align-u32.rs:53:45: 53:54
    let mut _78: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    let mut _79: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
    let mut _80: usize;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
    let mut _81: usize;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
    let _83: !;                          // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
    let mut _84: core::panicking::AssertKind; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
    let mut _85: &usize;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let _86: &usize;                     // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let mut _87: &usize;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let _88: &usize;                     // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let mut _89: std::option::Option<std::fmt::Arguments<'_>>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
    let mut _90: (&std::string::String, &std::string::String); // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _91: &std::string::String;   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let mut _92: &std::string::String;   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let _93: std::string::String;        // in scope 0 at ui/struct-enums/rec-align-u32.rs:55:23: 55:75
    let mut _94: &str;                   // in scope 0 at ui/struct-enums/rec-align-u32.rs:55:23: 55:75
    let _95: &str;                       // in scope 0 at ui/struct-enums/rec-align-u32.rs:55:23: 55:63
    let mut _98: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    let mut _99: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
    let mut _100: &std::string::String;  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
    let mut _101: &std::string::String;  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
    let _103: !;                         // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
    let mut _104: core::panicking::AssertKind; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
    let mut _105: &std::string::String;  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let _106: &std::string::String;      // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let mut _107: &std::string::String;  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let _108: &std::string::String;      // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let mut _109: std::option::Option<std::fmt::Arguments<'_>>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
    scope 1 {
        let _1: Outer;                   // in scope 1 at ui/struct-enums/rec-align-u32.rs:39:13: 39:14
        scope 2 {
            debug x => _1;               // in scope 2 at ui/struct-enums/rec-align-u32.rs:39:13: 39:14
            let _3: std::string::String; // in scope 2 at ui/struct-enums/rec-align-u32.rs:42:13: 42:14
            let _4: std::string::String; // in scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:13: 118:16
            let mut _115: &[&str; 1];    // in scope 2 at ui/struct-enums/rec-align-u32.rs:42:25: 42:31
            scope 3 {
                debug y => _3;           // in scope 3 at ui/struct-enums/rec-align-u32.rs:42:13: 42:14
                let _58: &usize;         // in scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
                let _59: &usize;         // in scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
                let _76: &usize;         // in scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
                let _77: &usize;         // in scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
                let _96: &std::string::String; // in scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
                let _97: &std::string::String; // in scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
                let mut _110: &usize;    // in scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
                let mut _111: &[&str; 2]; // in scope 3 at ui/struct-enums/rec-align-u32.rs:46:18: 46:28
                let mut _112: &usize;    // in scope 3 at ui/struct-enums/rec-align-u32.rs:45:39: 45:62
                let mut _113: &[&str; 2]; // in scope 3 at ui/struct-enums/rec-align-u32.rs:45:18: 45:37
                let mut _114: &[&str; 2]; // in scope 3 at ui/struct-enums/rec-align-u32.rs:44:18: 44:38
                scope 5 {
                    debug left_val => _58; // in scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
                    debug right_val => _59; // in scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
                    let _64: core::panicking::AssertKind; // in scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                    scope 6 {
                        debug kind => _64; // in scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                    }
                }
                scope 7 {
                    debug left_val => _76; // in scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
                    debug right_val => _77; // in scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
                    let _82: core::panicking::AssertKind; // in scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                    scope 8 {
                        debug kind => _82; // in scope 8 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                    }
                }
                scope 9 {
                    debug left_val => _96; // in scope 9 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
                    debug right_val => _97; // in scope 9 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
                    let _102: core::panicking::AssertKind; // in scope 9 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                    scope 10 {
                        debug kind => _102; // in scope 10 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                    }
                }
            }
            scope 4 {
                debug res => _4;         // in scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:13: 118:16
            }
        }
    }

    bb0: {
        _2 = const Inner {{ c64: 44_u32 }}; // scope 1 at ui/struct-enums/rec-align-u32.rs:39:35: 39:50
                                         // mir::Constant
                                         // + span: ui/struct-enums/rec-align-u32.rs:39:35: 39:50
                                         // + literal: Const { ty: Inner, val: Value(Scalar(0x0000002c)) }
        _1 = Outer { c8: const 22_u8, t: move _2 }; // scope 1 at ui/struct-enums/rec-align-u32.rs:39:17: 39:51
        _115 = const _;                  // scope 2 at ui/struct-enums/rec-align-u32.rs:42:25: 42:31
                                         // mir::Constant
                                         // + span: ui/struct-enums/rec-align-u32.rs:42:25: 42:31
                                         // + literal: Const { ty: &[&str; 1], val: Unevaluated(main, [], Some(promoted[5])) }
        _8 = _115;                       // scope 2 at ui/struct-enums/rec-align-u32.rs:42:25: 42:31
        _7 = _8;                         // scope 2 at ui/struct-enums/rec-align-u32.rs:42:25: 42:31
        _6 = move _7 as &[&str] (Pointer(Unsize)); // scope 2 at ui/struct-enums/rec-align-u32.rs:42:25: 42:31
        _15 = &_1;                       // scope 2 at ui/struct-enums/rec-align-u32.rs:42:33: 42:34
        _14 = _15;                       // scope 2 at ui/struct-enums/rec-align-u32.rs:42:33: 42:34
        _13 = core::fmt::ArgumentV1::<'_>::new_debug::<Outer>(move _14) -> bb1; // scope 2 at ui/struct-enums/rec-align-u32.rs:42:33: 42:34
                                         // mir::Constant
                                         // + span: ui/struct-enums/rec-align-u32.rs:42:33: 42:34
                                         // + user_ty: UserType(1)
                                         // + literal: Const { ty: for<'b> fn(&'b Outer) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_debug::<Outer>}, val: Value(<ZST>) }
    }

    bb1: {
        _12 = [move _13];                // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
        _11 = &_12;                      // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
        _10 = _11;                       // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
        _9 = move _10 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
        _5 = Arguments::<'_>::new_v1(move _6, move _9) -> bb2; // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb2: {
        _4 = format(move _5) -> bb3;     // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:19: 118:80
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:19: 118:38
                                         // + literal: Const { ty: for<'a> fn(Arguments<'a>) -> String {format}, val: Value(<ZST>) }
    }

    bb3: {
        _3 = move _4;                    // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:119:9: 119:12
        _114 = const _;                  // scope 3 at ui/struct-enums/rec-align-u32.rs:44:18: 44:38
                                         // mir::Constant
                                         // + span: ui/struct-enums/rec-align-u32.rs:44:18: 44:38
                                         // + literal: Const { ty: &[&str; 2], val: Unevaluated(main, [], Some(promoted[4])) }
        _20 = _114;                      // scope 3 at ui/struct-enums/rec-align-u32.rs:44:18: 44:38
        _19 = _20;                       // scope 3 at ui/struct-enums/rec-align-u32.rs:44:18: 44:38
        _18 = move _19 as &[&str] (Pointer(Unsize)); // scope 3 at ui/struct-enums/rec-align-u32.rs:44:18: 44:38
        _28 = AlignOf(Inner);            // scope 3 at ui/struct-enums/rec-align-u32.rs:44:40: 44:70
        _27 = &_28;                      // scope 3 at ui/struct-enums/rec-align-u32.rs:44:40: 44:70
        _26 = _27;                       // scope 3 at ui/struct-enums/rec-align-u32.rs:44:40: 44:70
        _25 = core::fmt::ArgumentV1::<'_>::new_debug::<usize>(move _26) -> [return: bb4, unwind: bb26]; // scope 3 at ui/struct-enums/rec-align-u32.rs:44:40: 44:70
                                         // mir::Constant
                                         // + span: ui/struct-enums/rec-align-u32.rs:44:40: 44:70
                                         // + user_ty: UserType(3)
                                         // + literal: Const { ty: for<'b> fn(&'b usize) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_debug::<usize>}, val: Value(<ZST>) }
    }

    bb4: {
        _24 = [move _25];                // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _23 = &_24;                      // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _22 = _23;                       // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _21 = move _22 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _17 = Arguments::<'_>::new_v1(move _18, move _21) -> [return: bb5, unwind: bb26]; // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // + user_ty: UserType(2)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb5: {
        _16 = _print(move _17) -> [return: bb6, unwind: bb26]; // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:62
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:27
                                         // + literal: Const { ty: for<'a> fn(Arguments<'a>) {_print}, val: Value(<ZST>) }
    }

    bb6: {
        _113 = const _;                  // scope 3 at ui/struct-enums/rec-align-u32.rs:45:18: 45:37
                                         // mir::Constant
                                         // + span: ui/struct-enums/rec-align-u32.rs:45:18: 45:37
                                         // + literal: Const { ty: &[&str; 2], val: Unevaluated(main, [], Some(promoted[3])) }
        _33 = _113;                      // scope 3 at ui/struct-enums/rec-align-u32.rs:45:18: 45:37
        _32 = _33;                       // scope 3 at ui/struct-enums/rec-align-u32.rs:45:18: 45:37
        _31 = move _32 as &[&str] (Pointer(Unsize)); // scope 3 at ui/struct-enums/rec-align-u32.rs:45:18: 45:37
        _112 = const _;                  // scope 3 at ui/struct-enums/rec-align-u32.rs:45:39: 45:62
                                         // mir::Constant
                                         // + span: ui/struct-enums/rec-align-u32.rs:45:39: 45:62
                                         // + literal: Const { ty: &usize, val: Unevaluated(main, [], Some(promoted[2])) }
        _40 = _112;                      // scope 3 at ui/struct-enums/rec-align-u32.rs:45:39: 45:62
        _39 = _40;                       // scope 3 at ui/struct-enums/rec-align-u32.rs:45:39: 45:62
        _38 = core::fmt::ArgumentV1::<'_>::new_debug::<usize>(move _39) -> [return: bb7, unwind: bb26]; // scope 3 at ui/struct-enums/rec-align-u32.rs:45:39: 45:62
                                         // mir::Constant
                                         // + span: ui/struct-enums/rec-align-u32.rs:45:39: 45:62
                                         // + user_ty: UserType(5)
                                         // + literal: Const { ty: for<'b> fn(&'b usize) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_debug::<usize>}, val: Value(<ZST>) }
    }

    bb7: {
        _37 = [move _38];                // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _36 = &_37;                      // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _35 = _36;                       // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _34 = move _35 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _30 = Arguments::<'_>::new_v1(move _31, move _34) -> [return: bb8, unwind: bb26]; // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // + user_ty: UserType(4)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb8: {
        _29 = _print(move _30) -> [return: bb9, unwind: bb26]; // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:62
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:27
                                         // + literal: Const { ty: for<'a> fn(Arguments<'a>) {_print}, val: Value(<ZST>) }
    }

    bb9: {
        _111 = const _;                  // scope 3 at ui/struct-enums/rec-align-u32.rs:46:18: 46:28
                                         // mir::Constant
                                         // + span: ui/struct-enums/rec-align-u32.rs:46:18: 46:28
                                         // + literal: Const { ty: &[&str; 2], val: Unevaluated(main, [], Some(promoted[1])) }
        _45 = _111;                      // scope 3 at ui/struct-enums/rec-align-u32.rs:46:18: 46:28
        _44 = _45;                       // scope 3 at ui/struct-enums/rec-align-u32.rs:46:18: 46:28
        _43 = move _44 as &[&str] (Pointer(Unsize)); // scope 3 at ui/struct-enums/rec-align-u32.rs:46:18: 46:28
        _52 = &_3;                       // scope 3 at ui/struct-enums/rec-align-u32.rs:46:30: 46:31
        _51 = _52;                       // scope 3 at ui/struct-enums/rec-align-u32.rs:46:30: 46:31
        _50 = core::fmt::ArgumentV1::<'_>::new_debug::<String>(move _51) -> [return: bb10, unwind: bb26]; // scope 3 at ui/struct-enums/rec-align-u32.rs:46:30: 46:31
                                         // mir::Constant
                                         // + span: ui/struct-enums/rec-align-u32.rs:46:30: 46:31
                                         // + user_ty: UserType(7)
                                         // + literal: Const { ty: for<'b> fn(&'b String) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_debug::<String>}, val: Value(<ZST>) }
    }

    bb10: {
        _49 = [move _50];                // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _48 = &_49;                      // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _47 = _48;                       // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _46 = move _47 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _42 = Arguments::<'_>::new_v1(move _43, move _46) -> [return: bb11, unwind: bb26]; // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // + user_ty: UserType(6)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb11: {
        _41 = _print(move _42) -> [return: bb12, unwind: bb26]; // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:62
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:27
                                         // + literal: Const { ty: for<'a> fn(Arguments<'a>) {_print}, val: Value(<ZST>) }
    }

    bb12: {
        _55 = AlignOf(Inner);            // scope 3 at ui/struct-enums/rec-align-u32.rs:49:20: 49:50
        _54 = &_55;                      // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _57 = align() -> [return: bb13, unwind: bb26]; // scope 3 at ui/struct-enums/rec-align-u32.rs:49:52: 49:62
                                         // mir::Constant
                                         // + span: ui/struct-enums/rec-align-u32.rs:49:52: 49:60
                                         // + literal: Const { ty: fn() -> usize {align}, val: Value(<ZST>) }
    }

    bb13: {
        _56 = &_57;                      // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _53 = (move _54, move _56);      // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _58 = (_53.0: &usize);           // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _59 = (_53.1: &usize);           // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _62 = (*_58);                    // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
        _63 = (*_59);                    // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
        _61 = Eq(move _62, move _63);    // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
        _60 = Not(move _61);             // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
        switchInt(move _60) -> [0: bb15, otherwise: bb14]; // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    }

    bb14: {
        _64 = const core::panicking::AssertKind::Eq; // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _66 = const core::panicking::AssertKind::Eq; // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _68 = _58;                       // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _67 = _68;                       // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _70 = _59;                       // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _69 = _70;                       // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _71 = Option::<Arguments<'_>>::None; // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
        _65 = core::panicking::assert_failed::<usize, usize>(move _66, move _67, move _69, move _71) -> bb26; // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:53
                                         // + literal: Const { ty: for<'a, 'b, 'c> fn(core::panicking::AssertKind, &'a usize, &'b usize, Option<Arguments<'c>>) -> ! {core::panicking::assert_failed::<usize, usize>}, val: Value(<ZST>) }
    }

    bb15: {
        _110 = const _;                  // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
                                         // + literal: Const { ty: &usize, val: Unevaluated(main, [], Some(promoted[0])) }
        _73 = _110;                      // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _75 = m::size() -> [return: bb16, unwind: bb26]; // scope 3 at ui/struct-enums/rec-align-u32.rs:53:45: 53:54
                                         // mir::Constant
                                         // + span: ui/struct-enums/rec-align-u32.rs:53:45: 53:52
                                         // + literal: Const { ty: fn() -> usize {m::size}, val: Value(<ZST>) }
    }

    bb16: {
        _74 = &_75;                      // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _72 = (move _73, move _74);      // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _76 = (_72.0: &usize);           // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _77 = (_72.1: &usize);           // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _80 = const 8_usize;             // scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
        _81 = (*_77);                    // scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
        _79 = Eq(move _80, move _81);    // scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
        _78 = Not(move _79);             // scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
        switchInt(move _78) -> [0: bb18, otherwise: bb17]; // scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    }

    bb17: {
        _82 = const core::panicking::AssertKind::Eq; // scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _84 = const core::panicking::AssertKind::Eq; // scope 8 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _86 = _76;                       // scope 8 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _85 = _86;                       // scope 8 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _88 = _77;                       // scope 8 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _87 = _88;                       // scope 8 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _89 = Option::<Arguments<'_>>::None; // scope 8 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
        _83 = core::panicking::assert_failed::<usize, usize>(move _84, move _85, move _87, move _89) -> bb26; // scope 8 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:53
                                         // + literal: Const { ty: for<'a, 'b, 'c> fn(core::panicking::AssertKind, &'a usize, &'b usize, Option<Arguments<'c>>) -> ! {core::panicking::assert_failed::<usize, usize>}, val: Value(<ZST>) }
    }

    bb18: {
        _91 = &_3;                       // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _95 = const "Outer { c8: 22, t: Inner { c64: 44 } }"; // scope 3 at ui/struct-enums/rec-align-u32.rs:55:23: 55:63
                                         // mir::Constant
                                         // + span: ui/struct-enums/rec-align-u32.rs:55:23: 55:63
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _94 = _95;                       // scope 3 at ui/struct-enums/rec-align-u32.rs:55:23: 55:75
        _93 = <str as ToString>::to_string(move _94) -> [return: bb19, unwind: bb26]; // scope 3 at ui/struct-enums/rec-align-u32.rs:55:23: 55:75
                                         // mir::Constant
                                         // + span: ui/struct-enums/rec-align-u32.rs:55:64: 55:73
                                         // + literal: Const { ty: for<'a> fn(&'a str) -> String {<str as ToString>::to_string}, val: Value(<ZST>) }
    }

    bb19: {
        _92 = &_93;                      // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _90 = (move _91, move _92);      // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _96 = (_90.0: &std::string::String); // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _97 = (_90.1: &std::string::String); // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _100 = _96;                      // scope 9 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
        _101 = _97;                      // scope 9 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
        _99 = <String as PartialEq>::eq(move _100, move _101) -> [return: bb20, unwind: bb25]; // scope 9 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a String, &'b String) -> bool {<String as PartialEq>::eq}, val: Value(<ZST>) }
    }

    bb20: {
        _98 = Not(move _99);             // scope 9 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
        switchInt(move _98) -> [0: bb22, otherwise: bb21]; // scope 9 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    }

    bb21: {
        _102 = const core::panicking::AssertKind::Eq; // scope 9 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _104 = const core::panicking::AssertKind::Eq; // scope 10 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _106 = _96;                      // scope 10 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _105 = _106;                     // scope 10 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _108 = _97;                      // scope 10 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _107 = _108;                     // scope 10 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _109 = Option::<Arguments<'_>>::None; // scope 10 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
        _103 = core::panicking::assert_failed::<String, String>(move _104, move _105, move _107, move _109) -> bb25; // scope 10 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:53
                                         // + literal: Const { ty: for<'a, 'b, 'c> fn(core::panicking::AssertKind, &'a String, &'b String, Option<Arguments<'c>>) -> ! {core::panicking::assert_failed::<String, String>}, val: Value(<ZST>) }
    }

    bb22: {
        drop(_93) -> [return: bb23, unwind: bb26]; // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:48:9: 48:10
    }

    bb23: {
        drop(_3) -> bb24;                // scope 2 at ui/struct-enums/rec-align-u32.rs:56:5: 56:6
    }

    bb24: {
        return;                          // scope 0 at ui/struct-enums/rec-align-u32.rs:57:2: 57:2
    }

    bb25 (cleanup): {
        drop(_93) -> bb26;               // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:48:9: 48:10
    }

    bb26 (cleanup): {
        drop(_3) -> bb27;                // scope 2 at ui/struct-enums/rec-align-u32.rs:56:5: 56:6
    }

    bb27 (cleanup): {
        resume;                          // scope 0 at ui/struct-enums/rec-align-u32.rs:37:1: 57:2
    }
}

promoted[0] in main: &usize = {
    let mut _0: &usize;                  // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let mut _1: usize;                   // in scope 0 at ui/struct-enums/rec-align-u32.rs:53:20: 53:43

    bb0: {
        _1 = std::mem::size_of::<Outer>() -> bb1; // scope 0 at ui/struct-enums/rec-align-u32.rs:53:20: 53:43
                                         // mir::Constant
                                         // + span: ui/struct-enums/rec-align-u32.rs:53:20: 53:41
                                         // + literal: Const { ty: fn() -> usize {std::mem::size_of::<Outer>}, val: Value(<ZST>) }
    }

    bb1: {
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    }
}

promoted[1] in main: &[&str; 2] = {
    let mut _0: &[&str; 2];              // return place in scope 0 at ui/struct-enums/rec-align-u32.rs:46:18: 46:28
    let mut _1: [&str; 2];               // in scope 0 at ui/struct-enums/rec-align-u32.rs:46:18: 46:28

    bb0: {
        _1 = [const "y = ", const "\n"]; // scope 0 at ui/struct-enums/rec-align-u32.rs:46:18: 46:28
                                         // mir::Constant
                                         // + span: ui/struct-enums/rec-align-u32.rs:46:18: 46:28
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
                                         // mir::Constant
                                         // + span: ui/struct-enums/rec-align-u32.rs:46:18: 46:28
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at ui/struct-enums/rec-align-u32.rs:46:18: 46:28
        return;                          // scope 0 at ui/struct-enums/rec-align-u32.rs:46:18: 46:28
    }
}

promoted[2] in main: &usize = {
    let mut _0: &usize;                  // return place in scope 0 at ui/struct-enums/rec-align-u32.rs:45:39: 45:62
    let mut _1: usize;                   // in scope 0 at ui/struct-enums/rec-align-u32.rs:45:39: 45:62

    bb0: {
        _1 = std::mem::size_of::<Outer>() -> bb1; // scope 0 at ui/struct-enums/rec-align-u32.rs:45:39: 45:62
                                         // mir::Constant
                                         // + span: ui/struct-enums/rec-align-u32.rs:45:39: 45:60
                                         // + literal: Const { ty: fn() -> usize {std::mem::size_of::<Outer>}, val: Value(<ZST>) }
    }

    bb1: {
        _0 = &_1;                        // scope 0 at ui/struct-enums/rec-align-u32.rs:45:39: 45:62
        return;                          // scope 0 at ui/struct-enums/rec-align-u32.rs:45:39: 45:62
    }
}

promoted[3] in main: &[&str; 2] = {
    let mut _0: &[&str; 2];              // return place in scope 0 at ui/struct-enums/rec-align-u32.rs:45:18: 45:37
    let mut _1: [&str; 2];               // in scope 0 at ui/struct-enums/rec-align-u32.rs:45:18: 45:37

    bb0: {
        _1 = [const "size outer = ", const "\n"]; // scope 0 at ui/struct-enums/rec-align-u32.rs:45:18: 45:37
                                         // mir::Constant
                                         // + span: ui/struct-enums/rec-align-u32.rs:45:18: 45:37
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
                                         // mir::Constant
                                         // + span: ui/struct-enums/rec-align-u32.rs:45:18: 45:37
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at ui/struct-enums/rec-align-u32.rs:45:18: 45:37
        return;                          // scope 0 at ui/struct-enums/rec-align-u32.rs:45:18: 45:37
    }
}

promoted[4] in main: &[&str; 2] = {
    let mut _0: &[&str; 2];              // return place in scope 0 at ui/struct-enums/rec-align-u32.rs:44:18: 44:38
    let mut _1: [&str; 2];               // in scope 0 at ui/struct-enums/rec-align-u32.rs:44:18: 44:38

    bb0: {
        _1 = [const "align inner = ", const "\n"]; // scope 0 at ui/struct-enums/rec-align-u32.rs:44:18: 44:38
                                         // mir::Constant
                                         // + span: ui/struct-enums/rec-align-u32.rs:44:18: 44:38
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
                                         // mir::Constant
                                         // + span: ui/struct-enums/rec-align-u32.rs:44:18: 44:38
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at ui/struct-enums/rec-align-u32.rs:44:18: 44:38
        return;                          // scope 0 at ui/struct-enums/rec-align-u32.rs:44:18: 44:38
    }
}

promoted[5] in main: &[&str; 1] = {
    let mut _0: &[&str; 1];              // return place in scope 0 at ui/struct-enums/rec-align-u32.rs:42:25: 42:31
    let mut _1: [&str; 1];               // in scope 0 at ui/struct-enums/rec-align-u32.rs:42:25: 42:31

    bb0: {
        _1 = [const ""];                 // scope 0 at ui/struct-enums/rec-align-u32.rs:42:25: 42:31
                                         // mir::Constant
                                         // + span: ui/struct-enums/rec-align-u32.rs:42:25: 42:31
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at ui/struct-enums/rec-align-u32.rs:42:25: 42:31
        return;                          // scope 0 at ui/struct-enums/rec-align-u32.rs:42:25: 42:31
    }
}
