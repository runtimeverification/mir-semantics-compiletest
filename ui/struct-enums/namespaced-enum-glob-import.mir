// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
fn m2::<impl at ui/struct-enums/namespaced-enum-glob-import.rs:12:5: 12:13>::foo() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/struct-enums/namespaced-enum-glob-import.rs:13:22: 13:22

    bb0: {
        return;                          // scope 0 at ui/struct-enums/namespaced-enum-glob-import.rs:13:24: 13:24
    }
}

fn _f(_1: Foo) -> () {
    debug f => _1;                       // in scope 0 at ui/struct-enums/namespaced-enum-glob-import.rs:21:7: 21:8
    let mut _0: ();                      // return place in scope 0 at ui/struct-enums/namespaced-enum-glob-import.rs:21:19: 21:19
    let mut _2: isize;                   // in scope 0 at ui/struct-enums/namespaced-enum-glob-import.rs:25:9: 25:10

    bb0: {
        _2 = discriminant(_1);           // scope 0 at ui/struct-enums/namespaced-enum-glob-import.rs:24:11: 24:12
        switchInt(move _2) -> [0: bb2, 1: bb2, 2: bb2, otherwise: bb1]; // scope 0 at ui/struct-enums/namespaced-enum-glob-import.rs:24:5: 24:12
    }

    bb1: {
        unreachable;                     // scope 0 at ui/struct-enums/namespaced-enum-glob-import.rs:24:11: 24:12
    }

    bb2: {
        return;                          // scope 0 at ui/struct-enums/namespaced-enum-glob-import.rs:27:2: 27:2
    }
}

fn _f2(_1: Foo) -> () {
    debug f => _1;                       // in scope 0 at ui/struct-enums/namespaced-enum-glob-import.rs:29:8: 29:9
    let mut _0: ();                      // return place in scope 0 at ui/struct-enums/namespaced-enum-glob-import.rs:29:20: 29:20
    let mut _2: isize;                   // in scope 0 at ui/struct-enums/namespaced-enum-glob-import.rs:31:9: 31:13

    bb0: {
        _2 = discriminant(_1);           // scope 0 at ui/struct-enums/namespaced-enum-glob-import.rs:30:11: 30:12
        switchInt(move _2) -> [0: bb2, 1: bb2, 2: bb2, otherwise: bb1]; // scope 0 at ui/struct-enums/namespaced-enum-glob-import.rs:30:5: 30:12
    }

    bb1: {
        unreachable;                     // scope 0 at ui/struct-enums/namespaced-enum-glob-import.rs:30:11: 30:12
    }

    bb2: {
        return;                          // scope 0 at ui/struct-enums/namespaced-enum-glob-import.rs:33:2: 33:2
    }
}

fn main() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/struct-enums/namespaced-enum-glob-import.rs:35:15: 35:15

    bb0: {
        return;                          // scope 0 at ui/struct-enums/namespaced-enum-glob-import.rs:35:17: 35:17
    }
}

fn Foo::B(_1: isize) -> Foo {
    let mut _0: m2::Foo;                 // return place in scope 0 at ui/struct-enums/namespaced-enum-glob-import.rs:8:9: 8:10

    bb0: {
        _0 = Foo::B(move _1);            // scope 0 at ui/struct-enums/namespaced-enum-glob-import.rs:8:9: 8:10
        return;                          // scope 0 at ui/struct-enums/namespaced-enum-glob-import.rs:8:9: 8:10
    }
}

// MIR FOR CTFE
fn Foo::B(_1: isize) -> Foo {
    let mut _0: m2::Foo;                 // return place in scope 0 at ui/struct-enums/namespaced-enum-glob-import.rs:8:9: 8:10

    bb0: {
        _0 = Foo::B(move _1);            // scope 0 at ui/struct-enums/namespaced-enum-glob-import.rs:8:9: 8:10
        return;                          // scope 0 at ui/struct-enums/namespaced-enum-glob-import.rs:8:9: 8:10
    }
}
