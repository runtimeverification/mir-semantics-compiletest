// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
fn <impl at ui/struct-enums/class-cast-to-trait.rs:19:1: 19:19>::speak(_1: &mut cat) -> () {
    debug self => _1;                    // in scope 0 at ui/struct-enums/class-cast-to-trait.rs:20:12: 20:21
    let mut _0: ();                      // return place in scope 0 at ui/struct-enums/class-cast-to-trait.rs:20:23: 20:23
    let _2: ();                          // in scope 0 at ui/struct-enums/class-cast-to-trait.rs:20:25: 20:36
    let mut _3: &mut cat;                // in scope 0 at ui/struct-enums/class-cast-to-trait.rs:20:25: 20:36

    bb0: {
        _3 = &mut (*_1);                 // scope 0 at ui/struct-enums/class-cast-to-trait.rs:20:25: 20:36
        _2 = cat::meow(move _3) -> bb1;  // scope 0 at ui/struct-enums/class-cast-to-trait.rs:20:25: 20:36
                                         // mir::Constant
                                         // + span: ui/struct-enums/class-cast-to-trait.rs:20:30: 20:34
                                         // + literal: Const { ty: for<'a> fn(&'a mut cat) {cat::meow}, val: Value(<ZST>) }
    }

    bb1: {
        return;                          // scope 0 at ui/struct-enums/class-cast-to-trait.rs:20:39: 20:39
    }
}

fn <impl at ui/struct-enums/class-cast-to-trait.rs:23:1: 23:9>::eat(_1: &mut cat) -> bool {
    debug self => _1;                    // in scope 0 at ui/struct-enums/class-cast-to-trait.rs:24:14: 24:23
    let mut _0: bool;                    // return place in scope 0 at ui/struct-enums/class-cast-to-trait.rs:24:28: 24:32
    let mut _2: bool;                    // in scope 0 at ui/struct-enums/class-cast-to-trait.rs:25:8: 25:27
    let mut _3: isize;                   // in scope 0 at ui/struct-enums/class-cast-to-trait.rs:25:8: 25:23
    let _4: ();                          // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:62
    let mut _5: std::fmt::Arguments<'_>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _6: &[&str];                 // in scope 0 at ui/struct-enums/class-cast-to-trait.rs:26:18: 26:30
    let mut _7: &[&str; 1];              // in scope 0 at ui/struct-enums/class-cast-to-trait.rs:26:18: 26:30
    let _8: &[&str; 1];                  // in scope 0 at ui/struct-enums/class-cast-to-trait.rs:26:18: 26:30
    let mut _9: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _10: &[core::fmt::ArgumentV1<'_>; 0]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let _11: &[core::fmt::ArgumentV1<'_>; 0]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _12: (isize, bool);          // in scope 0 at ui/struct-enums/class-cast-to-trait.rs:27:9: 27:29
    let _13: ();                         // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:62
    let mut _14: std::fmt::Arguments<'_>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _15: &[&str];                // in scope 0 at ui/struct-enums/class-cast-to-trait.rs:31:18: 31:31
    let mut _16: &[&str; 1];             // in scope 0 at ui/struct-enums/class-cast-to-trait.rs:31:18: 31:31
    let _17: &[&str; 1];                 // in scope 0 at ui/struct-enums/class-cast-to-trait.rs:31:18: 31:31
    let mut _18: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _19: &[core::fmt::ArgumentV1<'_>; 0]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let _20: &[core::fmt::ArgumentV1<'_>; 0]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _21: &[core::fmt::ArgumentV1<'_>; 0]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _22: &[&str; 1];             // in scope 0 at ui/struct-enums/class-cast-to-trait.rs:31:18: 31:31
    let mut _23: &[core::fmt::ArgumentV1<'_>; 0]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _24: &[&str; 1];             // in scope 0 at ui/struct-enums/class-cast-to-trait.rs:26:18: 26:30

    bb0: {
        _3 = ((*_1).1: isize);           // scope 0 at ui/struct-enums/class-cast-to-trait.rs:25:8: 25:23
        _2 = Gt(move _3, const 0_isize); // scope 0 at ui/struct-enums/class-cast-to-trait.rs:25:8: 25:27
        switchInt(move _2) -> [0: bb5, otherwise: bb1]; // scope 0 at ui/struct-enums/class-cast-to-trait.rs:25:8: 25:27
    }

    bb1: {
        _24 = const _;                   // scope 0 at ui/struct-enums/class-cast-to-trait.rs:26:18: 26:30
                                         // mir::Constant
                                         // + span: ui/struct-enums/class-cast-to-trait.rs:26:18: 26:30
                                         // + literal: Const { ty: &[&str; 1], val: Unevaluated(cat::eat, [], Some(promoted[3])) }
        _8 = _24;                        // scope 0 at ui/struct-enums/class-cast-to-trait.rs:26:18: 26:30
        _7 = _8;                         // scope 0 at ui/struct-enums/class-cast-to-trait.rs:26:18: 26:30
        _6 = move _7 as &[&str] (Pointer(Unsize)); // scope 0 at ui/struct-enums/class-cast-to-trait.rs:26:18: 26:30
        _23 = const _;                   // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // + literal: Const { ty: &[core::fmt::ArgumentV1<'_>; 0], val: Unevaluated(cat::eat, [], Some(promoted[2])) }
        _11 = _23;                       // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _10 = _11;                       // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _9 = move _10 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _5 = Arguments::<'_>::new_v1(move _6, move _9) -> bb2; // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb2: {
        _4 = _print(move _5) -> bb3;     // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:62
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:27
                                         // + literal: Const { ty: for<'a> fn(Arguments<'a>) {_print}, val: Value(<ZST>) }
    }

    bb3: {
        _12 = CheckedSub(((*_1).1: isize), const 2_isize); // scope 0 at ui/struct-enums/class-cast-to-trait.rs:27:9: 27:29
        assert(!move (_12.1: bool), "attempt to compute `{} - {}`, which would overflow", ((*_1).1: isize), const 2_isize) -> bb4; // scope 0 at ui/struct-enums/class-cast-to-trait.rs:27:9: 27:29
    }

    bb4: {
        ((*_1).1: isize) = move (_12.0: isize); // scope 0 at ui/struct-enums/class-cast-to-trait.rs:27:9: 27:29
        _0 = const true;                 // scope 0 at ui/struct-enums/class-cast-to-trait.rs:28:16: 28:20
        goto -> bb8;                     // scope 0 at ui/struct-enums/class-cast-to-trait.rs:28:9: 28:20
    }

    bb5: {
        _22 = const _;                   // scope 0 at ui/struct-enums/class-cast-to-trait.rs:31:18: 31:31
                                         // mir::Constant
                                         // + span: ui/struct-enums/class-cast-to-trait.rs:31:18: 31:31
                                         // + literal: Const { ty: &[&str; 1], val: Unevaluated(cat::eat, [], Some(promoted[1])) }
        _17 = _22;                       // scope 0 at ui/struct-enums/class-cast-to-trait.rs:31:18: 31:31
        _16 = _17;                       // scope 0 at ui/struct-enums/class-cast-to-trait.rs:31:18: 31:31
        _15 = move _16 as &[&str] (Pointer(Unsize)); // scope 0 at ui/struct-enums/class-cast-to-trait.rs:31:18: 31:31
        _21 = const _;                   // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // + literal: Const { ty: &[core::fmt::ArgumentV1<'_>; 0], val: Unevaluated(cat::eat, [], Some(promoted[0])) }
        _20 = _21;                       // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _19 = _20;                       // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _18 = move _19 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _14 = Arguments::<'_>::new_v1(move _15, move _18) -> bb6; // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // + user_ty: UserType(1)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb6: {
        _13 = _print(move _14) -> bb7;   // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:62
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:27
                                         // + literal: Const { ty: for<'a> fn(Arguments<'a>) {_print}, val: Value(<ZST>) }
    }

    bb7: {
        _0 = const false;                // scope 0 at ui/struct-enums/class-cast-to-trait.rs:32:16: 32:21
        goto -> bb8;                     // scope 0 at ui/struct-enums/class-cast-to-trait.rs:32:9: 32:21
    }

    bb8: {
        return;                          // scope 0 at ui/struct-enums/class-cast-to-trait.rs:34:4: 34:4
    }
}

promoted[0] in <impl at ui/struct-enums/class-cast-to-trait.rs:23:1: 23:9>::eat: &[core::fmt::ArgumentV1<'_>; 0] = {
    let mut _0: &[core::fmt::ArgumentV1<'_>; 0]; // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _1: [core::fmt::ArgumentV1<'_>; 0]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61

    bb0: {
        _1 = [];                         // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    }
}

promoted[1] in <impl at ui/struct-enums/class-cast-to-trait.rs:23:1: 23:9>::eat: &[&str; 1] = {
    let mut _0: &[&str; 1];              // return place in scope 0 at ui/struct-enums/class-cast-to-trait.rs:31:18: 31:31
    let mut _1: [&str; 1];               // in scope 0 at ui/struct-enums/class-cast-to-trait.rs:31:18: 31:31

    bb0: {
        _1 = [const "Not hungry!\n"];    // scope 0 at ui/struct-enums/class-cast-to-trait.rs:31:18: 31:31
                                         // mir::Constant
                                         // + span: ui/struct-enums/class-cast-to-trait.rs:31:18: 31:31
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at ui/struct-enums/class-cast-to-trait.rs:31:18: 31:31
        return;                          // scope 0 at ui/struct-enums/class-cast-to-trait.rs:31:18: 31:31
    }
}

promoted[2] in <impl at ui/struct-enums/class-cast-to-trait.rs:23:1: 23:9>::eat: &[core::fmt::ArgumentV1<'_>; 0] = {
    let mut _0: &[core::fmt::ArgumentV1<'_>; 0]; // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _1: [core::fmt::ArgumentV1<'_>; 0]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61

    bb0: {
        _1 = [];                         // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    }
}

promoted[3] in <impl at ui/struct-enums/class-cast-to-trait.rs:23:1: 23:9>::eat: &[&str; 1] = {
    let mut _0: &[&str; 1];              // return place in scope 0 at ui/struct-enums/class-cast-to-trait.rs:26:18: 26:30
    let mut _1: [&str; 1];               // in scope 0 at ui/struct-enums/class-cast-to-trait.rs:26:18: 26:30

    bb0: {
        _1 = [const "OM NOM NOM\n"];     // scope 0 at ui/struct-enums/class-cast-to-trait.rs:26:18: 26:30
                                         // mir::Constant
                                         // + span: ui/struct-enums/class-cast-to-trait.rs:26:18: 26:30
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at ui/struct-enums/class-cast-to-trait.rs:26:18: 26:30
        return;                          // scope 0 at ui/struct-enums/class-cast-to-trait.rs:26:18: 26:30
    }
}

fn <impl at ui/struct-enums/class-cast-to-trait.rs:37:1: 37:9>::meow(_1: &mut cat) -> () {
    debug self => _1;                    // in scope 0 at ui/struct-enums/class-cast-to-trait.rs:38:13: 38:22
    let mut _0: ();                      // return place in scope 0 at ui/struct-enums/class-cast-to-trait.rs:38:24: 38:24
    let _2: ();                          // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:62
    let mut _3: std::fmt::Arguments<'_>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _4: &[&str];                 // in scope 0 at ui/struct-enums/class-cast-to-trait.rs:39:16: 39:22
    let mut _5: &[&str; 1];              // in scope 0 at ui/struct-enums/class-cast-to-trait.rs:39:16: 39:22
    let _6: &[&str; 1];                  // in scope 0 at ui/struct-enums/class-cast-to-trait.rs:39:16: 39:22
    let mut _7: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _8: &[core::fmt::ArgumentV1<'_>; 0]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let _9: &[core::fmt::ArgumentV1<'_>; 0]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _10: (usize, bool);          // in scope 0 at ui/struct-enums/class-cast-to-trait.rs:40:7: 40:22
    let mut _11: usize;                  // in scope 0 at ui/struct-enums/class-cast-to-trait.rs:41:10: 41:24
    let mut _12: usize;                  // in scope 0 at ui/struct-enums/class-cast-to-trait.rs:41:10: 41:20
    let mut _13: (isize, bool);          // in scope 0 at ui/struct-enums/class-cast-to-trait.rs:42:11: 42:31
    let mut _14: &[core::fmt::ArgumentV1<'_>; 0]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _15: &[&str; 1];             // in scope 0 at ui/struct-enums/class-cast-to-trait.rs:39:16: 39:22

    bb0: {
        _15 = const _;                   // scope 0 at ui/struct-enums/class-cast-to-trait.rs:39:16: 39:22
                                         // mir::Constant
                                         // + span: ui/struct-enums/class-cast-to-trait.rs:39:16: 39:22
                                         // + literal: Const { ty: &[&str; 1], val: Unevaluated(cat::meow, [], Some(promoted[1])) }
        _6 = _15;                        // scope 0 at ui/struct-enums/class-cast-to-trait.rs:39:16: 39:22
        _5 = _6;                         // scope 0 at ui/struct-enums/class-cast-to-trait.rs:39:16: 39:22
        _4 = move _5 as &[&str] (Pointer(Unsize)); // scope 0 at ui/struct-enums/class-cast-to-trait.rs:39:16: 39:22
        _14 = const _;                   // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // + literal: Const { ty: &[core::fmt::ArgumentV1<'_>; 0], val: Unevaluated(cat::meow, [], Some(promoted[0])) }
        _9 = _14;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _8 = _9;                         // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _7 = move _8 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _3 = Arguments::<'_>::new_v1(move _4, move _7) -> bb1; // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb1: {
        _2 = _print(move _3) -> bb2;     // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:62
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:27
                                         // + literal: Const { ty: for<'a> fn(Arguments<'a>) {_print}, val: Value(<ZST>) }
    }

    bb2: {
        _10 = CheckedAdd(((*_1).0: usize), const 1_usize); // scope 0 at ui/struct-enums/class-cast-to-trait.rs:40:7: 40:22
        assert(!move (_10.1: bool), "attempt to compute `{} + {}`, which would overflow", ((*_1).0: usize), const 1_usize) -> bb3; // scope 0 at ui/struct-enums/class-cast-to-trait.rs:40:7: 40:22
    }

    bb3: {
        ((*_1).0: usize) = move (_10.0: usize); // scope 0 at ui/struct-enums/class-cast-to-trait.rs:40:7: 40:22
        _12 = ((*_1).0: usize);          // scope 0 at ui/struct-enums/class-cast-to-trait.rs:41:10: 41:20
        _11 = Rem(move _12, const 5_usize); // scope 0 at ui/struct-enums/class-cast-to-trait.rs:41:10: 41:24
        switchInt(move _11) -> [0: bb4, otherwise: bb6]; // scope 0 at ui/struct-enums/class-cast-to-trait.rs:41:10: 41:29
    }

    bb4: {
        _13 = CheckedAdd(((*_1).1: isize), const 1_isize); // scope 0 at ui/struct-enums/class-cast-to-trait.rs:42:11: 42:31
        assert(!move (_13.1: bool), "attempt to compute `{} + {}`, which would overflow", ((*_1).1: isize), const 1_isize) -> bb5; // scope 0 at ui/struct-enums/class-cast-to-trait.rs:42:11: 42:31
    }

    bb5: {
        ((*_1).1: isize) = move (_13.0: isize); // scope 0 at ui/struct-enums/class-cast-to-trait.rs:42:11: 42:31
        goto -> bb6;                     // scope 0 at ui/struct-enums/class-cast-to-trait.rs:41:7: 43:8
    }

    bb6: {
        return;                          // scope 0 at ui/struct-enums/class-cast-to-trait.rs:44:6: 44:6
    }
}

promoted[0] in <impl at ui/struct-enums/class-cast-to-trait.rs:37:1: 37:9>::meow: &[core::fmt::ArgumentV1<'_>; 0] = {
    let mut _0: &[core::fmt::ArgumentV1<'_>; 0]; // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _1: [core::fmt::ArgumentV1<'_>; 0]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61

    bb0: {
        _1 = [];                         // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    }
}

promoted[1] in <impl at ui/struct-enums/class-cast-to-trait.rs:37:1: 37:9>::meow: &[&str; 1] = {
    let mut _0: &[&str; 1];              // return place in scope 0 at ui/struct-enums/class-cast-to-trait.rs:39:16: 39:22
    let mut _1: [&str; 1];               // in scope 0 at ui/struct-enums/class-cast-to-trait.rs:39:16: 39:22

    bb0: {
        _1 = [const "Meow\n"];           // scope 0 at ui/struct-enums/class-cast-to-trait.rs:39:16: 39:22
                                         // mir::Constant
                                         // + span: ui/struct-enums/class-cast-to-trait.rs:39:16: 39:22
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at ui/struct-enums/class-cast-to-trait.rs:39:16: 39:22
        return;                          // scope 0 at ui/struct-enums/class-cast-to-trait.rs:39:16: 39:22
    }
}

fn cat(_1: usize, _2: isize, _3: String) -> cat {
    debug in_x => _1;                    // in scope 0 at ui/struct-enums/class-cast-to-trait.rs:47:8: 47:12
    debug in_y => _2;                    // in scope 0 at ui/struct-enums/class-cast-to-trait.rs:47:22: 47:26
    debug in_name => _3;                 // in scope 0 at ui/struct-enums/class-cast-to-trait.rs:47:36: 47:43
    let mut _0: cat;                     // return place in scope 0 at ui/struct-enums/class-cast-to-trait.rs:47:56: 47:59
    let mut _4: usize;                   // in scope 0 at ui/struct-enums/class-cast-to-trait.rs:49:16: 49:20
    let mut _5: isize;                   // in scope 0 at ui/struct-enums/class-cast-to-trait.rs:50:21: 50:25
    let mut _6: std::string::String;     // in scope 0 at ui/struct-enums/class-cast-to-trait.rs:51:15: 51:22

    bb0: {
        _4 = _1;                         // scope 0 at ui/struct-enums/class-cast-to-trait.rs:49:16: 49:20
        _5 = _2;                         // scope 0 at ui/struct-enums/class-cast-to-trait.rs:50:21: 50:25
        _6 = move _3;                    // scope 0 at ui/struct-enums/class-cast-to-trait.rs:51:15: 51:22
        _0 = cat { meows: move _4, how_hungry: move _5, name: move _6 }; // scope 0 at ui/struct-enums/class-cast-to-trait.rs:48:5: 52:6
        return;                          // scope 0 at ui/struct-enums/class-cast-to-trait.rs:53:2: 53:2
    }
}

fn main() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/struct-enums/class-cast-to-trait.rs:56:15: 56:15
    let mut _1: cat;                     // in scope 0 at ui/struct-enums/class-cast-to-trait.rs:57:9: 57:17
    let mut _2: std::string::String;     // in scope 0 at ui/struct-enums/class-cast-to-trait.rs:57:30: 57:48
    let mut _3: &str;                    // in scope 0 at ui/struct-enums/class-cast-to-trait.rs:57:30: 57:48
    let _4: &str;                        // in scope 0 at ui/struct-enums/class-cast-to-trait.rs:57:30: 57:36
    let mut _6: &mut cat;                // in scope 0 at ui/struct-enums/class-cast-to-trait.rs:58:36: 58:45
    let mut _7: &mut cat;                // in scope 0 at ui/struct-enums/class-cast-to-trait.rs:58:36: 58:45
    let _8: ();                          // in scope 0 at ui/struct-enums/class-cast-to-trait.rs:59:5: 59:17
    let mut _9: &mut dyn noisy;          // in scope 0 at ui/struct-enums/class-cast-to-trait.rs:59:5: 59:17
    scope 1 {
        debug nyan => _1;                // in scope 1 at ui/struct-enums/class-cast-to-trait.rs:57:9: 57:17
        let mut _5: &mut dyn noisy;      // in scope 1 at ui/struct-enums/class-cast-to-trait.rs:58:9: 58:17
        scope 2 {
            debug nyan => _5;            // in scope 2 at ui/struct-enums/class-cast-to-trait.rs:58:9: 58:17
        }
    }

    bb0: {
        _4 = const "nyan";               // scope 0 at ui/struct-enums/class-cast-to-trait.rs:57:30: 57:36
                                         // mir::Constant
                                         // + span: ui/struct-enums/class-cast-to-trait.rs:57:30: 57:36
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _3 = _4;                         // scope 0 at ui/struct-enums/class-cast-to-trait.rs:57:30: 57:48
        _2 = <str as ToString>::to_string(move _3) -> bb1; // scope 0 at ui/struct-enums/class-cast-to-trait.rs:57:30: 57:48
                                         // mir::Constant
                                         // + span: ui/struct-enums/class-cast-to-trait.rs:57:37: 57:46
                                         // + literal: Const { ty: for<'a> fn(&'a str) -> String {<str as ToString>::to_string}, val: Value(<ZST>) }
    }

    bb1: {
        _1 = cat(const 0_usize, const 2_isize, move _2) -> bb2; // scope 0 at ui/struct-enums/class-cast-to-trait.rs:57:20: 57:49
                                         // mir::Constant
                                         // + span: ui/struct-enums/class-cast-to-trait.rs:57:20: 57:23
                                         // + literal: Const { ty: fn(usize, isize, String) -> cat {cat}, val: Value(<ZST>) }
    }

    bb2: {
        _7 = &mut _1;                    // scope 1 at ui/struct-enums/class-cast-to-trait.rs:58:36: 58:45
        _6 = &mut (*_7);                 // scope 1 at ui/struct-enums/class-cast-to-trait.rs:58:36: 58:45
        _5 = move _6 as &mut dyn noisy (Pointer(Unsize)); // scope 1 at ui/struct-enums/class-cast-to-trait.rs:58:36: 58:45
        _9 = &mut (*_5);                 // scope 2 at ui/struct-enums/class-cast-to-trait.rs:59:5: 59:17
        _8 = <dyn noisy as noisy>::speak(move _9) -> [return: bb3, unwind: bb5]; // scope 2 at ui/struct-enums/class-cast-to-trait.rs:59:5: 59:17
                                         // mir::Constant
                                         // + span: ui/struct-enums/class-cast-to-trait.rs:59:10: 59:15
                                         // + literal: Const { ty: for<'a> fn(&'a mut dyn noisy) {<dyn noisy as noisy>::speak}, val: Value(<ZST>) }
    }

    bb3: {
        drop(_1) -> bb4;                 // scope 0 at ui/struct-enums/class-cast-to-trait.rs:60:1: 60:2
    }

    bb4: {
        return;                          // scope 0 at ui/struct-enums/class-cast-to-trait.rs:60:2: 60:2
    }

    bb5 (cleanup): {
        drop(_1) -> bb6;                 // scope 0 at ui/struct-enums/class-cast-to-trait.rs:60:1: 60:2
    }

    bb6 (cleanup): {
        resume;                          // scope 0 at ui/struct-enums/class-cast-to-trait.rs:56:1: 60:2
    }
}
