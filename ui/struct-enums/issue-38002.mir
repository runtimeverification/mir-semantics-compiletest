// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
const LIST: [(usize, Foo); 2] = {
    let mut _0: [(usize, Foo); 2];       // return place in scope 0 at ui/struct-enums/issue-38002.rs:17:13: 17:30
    let mut _1: (usize, Foo);            // in scope 0 at ui/struct-enums/issue-38002.rs:18:5: 18:38
    let mut _2: Foo;                     // in scope 0 at ui/struct-enums/issue-38002.rs:18:10: 18:37
    let mut _3: Bar;                     // in scope 0 at ui/struct-enums/issue-38002.rs:18:29: 18:35
    let mut _4: (usize, Foo);            // in scope 0 at ui/struct-enums/issue-38002.rs:19:5: 19:38
    let mut _5: Foo;                     // in scope 0 at ui/struct-enums/issue-38002.rs:19:10: 19:37
    let mut _6: Bar;                     // in scope 0 at ui/struct-enums/issue-38002.rs:19:29: 19:35

    bb0: {
        StorageLive(_1);                 // scope 0 at ui/struct-enums/issue-38002.rs:18:5: 18:38
        StorageLive(_2);                 // scope 0 at ui/struct-enums/issue-38002.rs:18:10: 18:37
        StorageLive(_3);                 // scope 0 at ui/struct-enums/issue-38002.rs:18:29: 18:35
        _3 = Bar::C;                     // scope 0 at ui/struct-enums/issue-38002.rs:18:29: 18:35
        _2 = Foo::B { y: const 42_usize, z: move _3 }; // scope 0 at ui/struct-enums/issue-38002.rs:18:10: 18:37
        StorageDead(_3);                 // scope 0 at ui/struct-enums/issue-38002.rs:18:36: 18:37
        _1 = (const 51_usize, move _2);  // scope 0 at ui/struct-enums/issue-38002.rs:18:5: 18:38
        StorageDead(_2);                 // scope 0 at ui/struct-enums/issue-38002.rs:18:37: 18:38
        StorageLive(_4);                 // scope 0 at ui/struct-enums/issue-38002.rs:19:5: 19:38
        StorageLive(_5);                 // scope 0 at ui/struct-enums/issue-38002.rs:19:10: 19:37
        StorageLive(_6);                 // scope 0 at ui/struct-enums/issue-38002.rs:19:29: 19:35
        _6 = Bar::C;                     // scope 0 at ui/struct-enums/issue-38002.rs:19:29: 19:35
        _5 = Foo::B { y: const 45_usize, z: move _6 }; // scope 0 at ui/struct-enums/issue-38002.rs:19:10: 19:37
        StorageDead(_6);                 // scope 0 at ui/struct-enums/issue-38002.rs:19:36: 19:37
        _4 = (const 52_usize, move _5);  // scope 0 at ui/struct-enums/issue-38002.rs:19:5: 19:38
        StorageDead(_5);                 // scope 0 at ui/struct-enums/issue-38002.rs:19:37: 19:38
        _0 = [move _1, move _4];         // scope 0 at ui/struct-enums/issue-38002.rs:17:33: 20:2
        StorageDead(_4);                 // scope 0 at ui/struct-enums/issue-38002.rs:20:1: 20:2
        StorageDead(_1);                 // scope 0 at ui/struct-enums/issue-38002.rs:20:1: 20:2
        return;                          // scope 0 at ui/struct-enums/issue-38002.rs:17:1: 20:3
    }
}

LIST::{constant#0}: usize = {
    let mut _0: usize;                   // return place in scope 0 at ui/struct-enums/issue-38002.rs:17:28: 17:29

    bb0: {
        _0 = const 2_usize;              // scope 0 at ui/struct-enums/issue-38002.rs:17:28: 17:29
        return;                          // scope 0 at ui/struct-enums/issue-38002.rs:17:28: 17:29
    }
}

fn main() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/struct-enums/issue-38002.rs:22:15: 22:15

    bb0: {
        return;                          // scope 0 at ui/struct-enums/issue-38002.rs:35:2: 35:2
    }
}
