// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
fn main() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:27:15: 27:15
    let _1: ();                          // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:23:9: 23:20
    let _2: ();                          // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:23:9: 23:20
    let _3: ();                          // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:23:9: 23:20
    let _4: ();                          // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:23:9: 23:20
    let _5: ();                          // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:23:9: 23:20
    let _6: ();                          // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:23:9: 23:20
    let _7: ();                          // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:23:9: 23:20
    let _8: ();                          // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:23:9: 23:20
    let _9: ();                          // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:23:9: 23:20
    let _10: ();                         // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:23:9: 23:20
    let _11: ();                         // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:23:9: 23:20
    let _12: ();                         // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:23:9: 23:20
    let mut _13: (&usize, &usize);       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _14: &usize;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let mut _15: &usize;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let _16: &usize;                     // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
    let _17: &usize;                     // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
    let mut _19: &usize;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _20: &usize;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    scope 1 {
        debug left_val => _16;           // in scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        debug right_val => _17;          // in scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        let _18: core::panicking::AssertKind; // in scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
        scope 2 {
            debug kind => _18;           // in scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
        }
    }

    bb0: {
        _1 = a::check() -> bb1;          // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:23:9: 23:20
                                         // mir::Constant
                                         // + span: ui/struct-enums/enum-discrim-width-stuff.rs:23:9: 23:18
                                         // + literal: Const { ty: fn() {a::check}, val: Value(<ZST>) }
    }

    bb1: {
        _2 = b::check() -> bb2;          // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:23:9: 23:20
                                         // mir::Constant
                                         // + span: ui/struct-enums/enum-discrim-width-stuff.rs:23:9: 23:18
                                         // + literal: Const { ty: fn() {b::check}, val: Value(<ZST>) }
    }

    bb2: {
        _3 = c::check() -> bb3;          // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:23:9: 23:20
                                         // mir::Constant
                                         // + span: ui/struct-enums/enum-discrim-width-stuff.rs:23:9: 23:18
                                         // + literal: Const { ty: fn() {c::check}, val: Value(<ZST>) }
    }

    bb3: {
        _4 = d::check() -> bb4;          // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:23:9: 23:20
                                         // mir::Constant
                                         // + span: ui/struct-enums/enum-discrim-width-stuff.rs:23:9: 23:18
                                         // + literal: Const { ty: fn() {d::check}, val: Value(<ZST>) }
    }

    bb4: {
        _5 = e::check() -> bb5;          // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:23:9: 23:20
                                         // mir::Constant
                                         // + span: ui/struct-enums/enum-discrim-width-stuff.rs:23:9: 23:18
                                         // + literal: Const { ty: fn() {e::check}, val: Value(<ZST>) }
    }

    bb5: {
        _6 = f::check() -> bb6;          // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:23:9: 23:20
                                         // mir::Constant
                                         // + span: ui/struct-enums/enum-discrim-width-stuff.rs:23:9: 23:18
                                         // + literal: Const { ty: fn() {f::check}, val: Value(<ZST>) }
    }

    bb6: {
        _7 = z::check() -> bb7;          // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:23:9: 23:20
                                         // mir::Constant
                                         // + span: ui/struct-enums/enum-discrim-width-stuff.rs:23:9: 23:18
                                         // + literal: Const { ty: fn() {z::check}, val: Value(<ZST>) }
    }

    bb7: {
        _8 = y::check() -> bb8;          // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:23:9: 23:20
                                         // mir::Constant
                                         // + span: ui/struct-enums/enum-discrim-width-stuff.rs:23:9: 23:18
                                         // + literal: Const { ty: fn() {y::check}, val: Value(<ZST>) }
    }

    bb8: {
        _9 = x::check() -> bb9;          // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:23:9: 23:20
                                         // mir::Constant
                                         // + span: ui/struct-enums/enum-discrim-width-stuff.rs:23:9: 23:18
                                         // + literal: Const { ty: fn() {x::check}, val: Value(<ZST>) }
    }

    bb9: {
        _10 = w::check() -> bb10;        // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:23:9: 23:20
                                         // mir::Constant
                                         // + span: ui/struct-enums/enum-discrim-width-stuff.rs:23:9: 23:18
                                         // + literal: Const { ty: fn() {w::check}, val: Value(<ZST>) }
    }

    bb10: {
        _11 = v::check() -> bb11;        // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:23:9: 23:20
                                         // mir::Constant
                                         // + span: ui/struct-enums/enum-discrim-width-stuff.rs:23:9: 23:18
                                         // + literal: Const { ty: fn() {v::check}, val: Value(<ZST>) }
    }

    bb11: {
        _12 = u::check() -> bb12;        // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:23:9: 23:20
                                         // mir::Constant
                                         // + span: ui/struct-enums/enum-discrim-width-stuff.rs:23:9: 23:18
                                         // + literal: Const { ty: fn() {u::check}, val: Value(<ZST>) }
    }

    bb12: {
        _20 = const _;                   // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
                                         // + literal: Const { ty: &usize, val: Unevaluated(main, [], Some(promoted[1])) }
        _14 = _20;                       // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _19 = const _;                   // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // + literal: Const { ty: &usize, val: Unevaluated(main, [], Some(promoted[0])) }
        _15 = _19;                       // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _13 = (move _14, move _15);      // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _16 = (_13.0: &usize);           // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _17 = (_13.1: &usize);           // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        return;                          // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:44:2: 44:2
    }
}

promoted[0] in main: &usize = {
    let mut _0: &usize;                  // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _1: usize;                   // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:43:49: 43:50

    bb0: {
        _1 = const 1_usize;              // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:43:49: 43:50
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    }
}

promoted[1] in main: &usize = {
    let mut _0: &usize;                  // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let mut _1: usize;                   // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:43:16: 43:47

    bb0: {
        _1 = std::mem::size_of::<Simple>() -> bb1; // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:43:16: 43:47
                                         // mir::Constant
                                         // + span: ui/struct-enums/enum-discrim-width-stuff.rs:43:16: 43:45
                                         // + literal: Const { ty: fn() -> usize {std::mem::size_of::<Simple>}, val: Value(<ZST>) }
    }

    bb1: {
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    }
}

a::E::V::{constant#0}: isize = {
    let mut _0: isize;                   // return place in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:28:19: 28:23

    bb0: {
        _0 = const 23_isize;             // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:28:19: 28:23
        return;                          // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:28:19: 28:23
    }
}

a::E::A::{constant#0}: isize = {
    let mut _0: isize;                   // return place in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:12:21: 12:22

    bb0: {
        _0 = const 0_isize;              // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:12:21: 12:22
        return;                          // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:12:21: 12:22
    }
}

fn a::<impl at ui/struct-enums/enum-discrim-width-stuff.rs:9:28: 9:33>::clone(_1: &a::E) -> a::E {
    debug self => _1;                    // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:9:28: 9:33
    let mut _0: main::a::E;              // return place in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:9:28: 9:33

    bb0: {
        _0 = (*_1);                      // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:9:28: 9:33
        return;                          // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:9:33: 9:33
    }
}

fn a::<impl at ui/struct-enums/enum-discrim-width-stuff.rs:9:35: 9:40>::fmt(_1: &a::E, _2: &mut Formatter<'_>) -> Result<(), std::fmt::Error> {
    debug self => _1;                    // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:9:35: 9:40
    debug f => _2;                       // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:9:35: 9:40
    let mut _0: std::result::Result<(), std::fmt::Error>; // return place in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:9:35: 9:40
    let mut _3: &mut std::fmt::Formatter<'_>; // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:9:35: 9:40
    let mut _4: &str;                    // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:9:35: 9:40
    let mut _5: isize;                   // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:9:35: 9:40
    let _6: &str;                        // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:9:35: 9:40
    let _7: &str;                        // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:9:35: 9:40

    bb0: {
        _3 = &mut (*_2);                 // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:9:35: 9:40
        _5 = discriminant((*_1));        // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:9:35: 9:40
        switchInt(move _5) -> [23: bb3, 0: bb1, otherwise: bb2]; // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:9:35: 9:40
    }

    bb1: {
        _7 = const "A";                  // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:9:35: 9:40
                                         // mir::Constant
                                         // + span: ui/struct-enums/enum-discrim-width-stuff.rs:9:35: 9:40
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _4 = _7;                         // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:9:35: 9:40
        goto -> bb4;                     // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:9:39: 9:40
    }

    bb2: {
        unreachable;                     // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:9:35: 9:40
    }

    bb3: {
        _6 = const "V";                  // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:9:35: 9:40
                                         // mir::Constant
                                         // + span: ui/struct-enums/enum-discrim-width-stuff.rs:9:35: 9:40
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _4 = _6;                         // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:9:35: 9:40
        goto -> bb4;                     // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:9:39: 9:40
    }

    bb4: {
        _0 = Formatter::<'_>::write_str(move _3, move _4) -> bb5; // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:9:35: 9:40
                                         // mir::Constant
                                         // + span: ui/struct-enums/enum-discrim-width-stuff.rs:9:35: 9:40
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a mut Formatter<'_>, &'b str) -> Result<(), std::fmt::Error> {Formatter::<'_>::write_str}, val: Value(<ZST>) }
    }

    bb5: {
        return;                          // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:9:40: 9:40
    }
}

static a::C: a::E = {
    let mut _0: main::a::E;              // return place in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:14:23: 14:24

    bb0: {
        _0 = a::E::V;                    // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:14:27: 14:31
        return;                          // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:14:13: 14:32
    }
}

fn a::check() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:15:28: 15:28
    let mut _1: (&usize, &usize);        // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _2: &usize;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let mut _3: &usize;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let _4: &usize;                      // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
    let _5: &usize;                      // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
    let mut _7: (&u8, &u8);              // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _8: &u8;                     // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let mut _9: &u8;                     // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let _10: &u8;                        // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
    let _11: &u8;                        // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
    let mut _13: (&u8, &u8);             // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _14: &u8;                    // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let _15: u8;                         // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:18:28: 18:29
    let mut _16: isize;                  // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:18:28: 18:29
    let mut _17: bool;                   // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:18:28: 18:29
    let mut _18: bool;                   // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:18:28: 18:29
    let mut _19: &u8;                    // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let _20: &u8;                        // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
    let _21: &u8;                        // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
    let mut _22: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    let mut _23: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
    let mut _24: u8;                     // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
    let mut _25: u8;                     // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
    let _27: !;                          // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
    let mut _28: core::panicking::AssertKind; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
    let mut _29: &u8;                    // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let _30: &u8;                        // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let mut _31: &u8;                    // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let _32: &u8;                        // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let mut _33: std::option::Option<std::fmt::Arguments<'_>>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
    let mut _34: (&std::string::String, &std::string::String); // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _35: &std::string::String;   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let _36: std::string::String;        // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:117:23: 120:6
    let _37: std::string::String;        // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:13: 118:16
    let mut _38: std::fmt::Arguments<'_>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
    let mut _39: &[&str];                // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:19:36: 19:42
    let mut _40: &[&str; 1];             // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:19:36: 19:42
    let _41: &[&str; 1];                 // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:19:36: 19:42
    let mut _42: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
    let mut _43: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
    let _44: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
    let _45: [core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
    let mut _46: core::fmt::ArgumentV1<'_>; // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:19:44: 19:48
    let mut _47: &main::a::E;            // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:19:44: 19:48
    let _48: &main::a::E;                // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:19:44: 19:48
    let mut _49: &std::string::String;   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let _50: std::string::String;        // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:19:51: 19:66
    let mut _51: &str;                   // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:19:51: 19:66
    let _52: &str;                       // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:19:51: 19:54
    let _53: &std::string::String;       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
    let _54: &std::string::String;       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
    let mut _55: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    let mut _56: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
    let mut _57: &std::string::String;   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
    let mut _58: &std::string::String;   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
    let _60: !;                          // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
    let mut _61: core::panicking::AssertKind; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
    let mut _62: &std::string::String;   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let _63: &std::string::String;       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let mut _64: &std::string::String;   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let _65: &std::string::String;       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let mut _66: std::option::Option<std::fmt::Arguments<'_>>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
    let mut _67: (&std::string::String, &std::string::String); // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _68: &std::string::String;   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let _69: std::string::String;        // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:117:23: 120:6
    let _70: std::string::String;        // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:13: 118:16
    let mut _71: std::fmt::Arguments<'_>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
    let mut _72: &[&str];                // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:20:36: 20:42
    let mut _73: &[&str; 1];             // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:20:36: 20:42
    let _74: &[&str; 1];                 // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:20:36: 20:42
    let mut _75: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
    let mut _76: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
    let _77: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
    let _78: [core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
    let mut _79: core::fmt::ArgumentV1<'_>; // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:20:44: 20:45
    let mut _80: &main::a::E;            // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:20:44: 20:45
    let _81: &main::a::E;                // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:20:44: 20:45
    let _82: &main::a::E;                // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:20:44: 20:45
    let mut _83: &std::string::String;   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let _84: std::string::String;        // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:20:48: 20:63
    let mut _85: &str;                   // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:20:48: 20:63
    let _86: &str;                       // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:20:48: 20:51
    let _87: &std::string::String;       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
    let _88: &std::string::String;       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
    let mut _89: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    let mut _90: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
    let mut _91: &std::string::String;   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
    let mut _92: &std::string::String;   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
    let _94: !;                          // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
    let mut _95: core::panicking::AssertKind; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
    let mut _96: &std::string::String;   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let _97: &std::string::String;       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let mut _98: &std::string::String;   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let _99: &std::string::String;       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let mut _100: std::option::Option<std::fmt::Arguments<'_>>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
    let mut _101: &[&str; 1];            // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:20:36: 20:42
    let mut _102: &main::a::E;           // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:19:44: 19:48
    let mut _103: &[&str; 1];            // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:19:36: 19:42
    let mut _104: &u8;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _105: &u8;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _106: &u8;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let mut _107: &usize;                // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _108: &usize;                // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    scope 1 {
        debug left_val => _4;            // in scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        debug right_val => _5;           // in scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        let _6: core::panicking::AssertKind; // in scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
        scope 2 {
            debug kind => _6;            // in scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
        }
    }
    scope 3 {
        debug left_val => _10;           // in scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        debug right_val => _11;          // in scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        let _12: core::panicking::AssertKind; // in scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
        scope 4 {
            debug kind => _12;           // in scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
        }
    }
    scope 5 {
        debug left_val => _20;           // in scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        debug right_val => _21;          // in scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        let _26: core::panicking::AssertKind; // in scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
        scope 6 {
            debug kind => _26;           // in scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
        }
    }
    scope 7 {
        debug res => _37;                // in scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:13: 118:16
    }
    scope 8 {
        debug left_val => _53;           // in scope 8 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        debug right_val => _54;          // in scope 8 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        let _59: core::panicking::AssertKind; // in scope 8 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
        scope 9 {
            debug kind => _59;           // in scope 9 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
        }
    }
    scope 10 {
        debug res => _70;                // in scope 10 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:13: 118:16
    }
    scope 11 {
        debug left_val => _87;           // in scope 11 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        debug right_val => _88;          // in scope 11 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        let _93: core::panicking::AssertKind; // in scope 11 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
        scope 12 {
            debug kind => _93;           // in scope 12 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
        }
    }

    bb0: {
        _108 = const _;                  // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
                                         // + literal: Const { ty: &usize, val: Unevaluated(a::check, [], Some(promoted[7])) }
        _2 = _108;                       // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _107 = const _;                  // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // + literal: Const { ty: &usize, val: Unevaluated(a::check, [], Some(promoted[6])) }
        _3 = _107;                       // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _1 = (move _2, move _3);         // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _4 = (_1.0: &usize);             // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _5 = (_1.1: &usize);             // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _106 = const _;                  // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
                                         // + literal: Const { ty: &u8, val: Unevaluated(a::check, [], Some(promoted[5])) }
        _8 = _106;                       // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _105 = const _;                  // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // + literal: Const { ty: &u8, val: Unevaluated(a::check, [], Some(promoted[4])) }
        _9 = _105;                       // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _7 = (move _8, move _9);         // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _10 = (_7.0: &u8);               // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _11 = (_7.1: &u8);               // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _16 = const 23_isize;            // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:18:28: 18:29
        _17 = const true;                // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:18:28: 18:29
        assume(_17);                     // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:18:28: 18:29
        _18 = const true;                // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:18:28: 18:29
        assume(_18);                     // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:18:28: 18:29
        _15 = move _16 as u8 (IntToInt); // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:18:28: 18:29
        _14 = &_15;                      // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _104 = const _;                  // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // + literal: Const { ty: &u8, val: Unevaluated(a::check, [], Some(promoted[3])) }
        _19 = _104;                      // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _13 = (move _14, move _19);      // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _20 = (_13.0: &u8);              // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _21 = (_13.1: &u8);              // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _24 = (*_20);                    // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
        _25 = const 23_u8;               // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
        _23 = Eq(move _24, move _25);    // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
        _22 = Not(move _23);             // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
        switchInt(move _22) -> [0: bb2, otherwise: bb1]; // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    }

    bb1: {
        _26 = const core::panicking::AssertKind::Eq; // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _28 = const core::panicking::AssertKind::Eq; // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _30 = _20;                       // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _29 = _30;                       // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _32 = _21;                       // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _31 = _32;                       // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _33 = Option::<Arguments<'_>>::None; // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
        _27 = core::panicking::assert_failed::<u8, u8>(move _28, move _29, move _31, move _33); // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:53
                                         // + literal: Const { ty: for<'a, 'b, 'c> fn(core::panicking::AssertKind, &'a u8, &'b u8, Option<Arguments<'c>>) -> ! {core::panicking::assert_failed::<u8, u8>}, val: Value(<ZST>) }
    }

    bb2: {
        _103 = const _;                  // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:19:36: 19:42
                                         // mir::Constant
                                         // + span: ui/struct-enums/enum-discrim-width-stuff.rs:19:36: 19:42
                                         // + literal: Const { ty: &[&str; 1], val: Unevaluated(a::check, [], Some(promoted[2])) }
        _41 = _103;                      // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:19:36: 19:42
        _40 = _41;                       // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:19:36: 19:42
        _39 = move _40 as &[&str] (Pointer(Unsize)); // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:19:36: 19:42
        _102 = const _;                  // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:19:44: 19:48
                                         // mir::Constant
                                         // + span: ui/struct-enums/enum-discrim-width-stuff.rs:19:44: 19:48
                                         // + literal: Const { ty: &a::E, val: Unevaluated(a::check, [], Some(promoted[1])) }
        _48 = _102;                      // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:19:44: 19:48
        _47 = _48;                       // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:19:44: 19:48
        _46 = core::fmt::ArgumentV1::<'_>::new_debug::<a::E>(move _47) -> bb3; // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:19:44: 19:48
                                         // mir::Constant
                                         // + span: ui/struct-enums/enum-discrim-width-stuff.rs:19:44: 19:48
                                         // + user_ty: UserType(1)
                                         // + literal: Const { ty: for<'b> fn(&'b a::E) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_debug::<a::E>}, val: Value(<ZST>) }
    }

    bb3: {
        _45 = [move _46];                // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
        _44 = &_45;                      // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
        _43 = _44;                       // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
        _42 = move _43 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
        _38 = Arguments::<'_>::new_v1(move _39, move _42) -> bb4; // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb4: {
        _37 = format(move _38) -> bb5;   // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:19: 118:80
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:19: 118:38
                                         // + literal: Const { ty: for<'a> fn(Arguments<'a>) -> String {format}, val: Value(<ZST>) }
    }

    bb5: {
        _36 = move _37;                  // scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:119:9: 119:12
        _35 = &_36;                      // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _52 = const "V";                 // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:19:51: 19:54
                                         // mir::Constant
                                         // + span: ui/struct-enums/enum-discrim-width-stuff.rs:19:51: 19:54
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _51 = _52;                       // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:19:51: 19:66
        _50 = <str as ToString>::to_string(move _51) -> [return: bb6, unwind: bb24]; // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:19:51: 19:66
                                         // mir::Constant
                                         // + span: ui/struct-enums/enum-discrim-width-stuff.rs:19:55: 19:64
                                         // + literal: Const { ty: for<'a> fn(&'a str) -> String {<str as ToString>::to_string}, val: Value(<ZST>) }
    }

    bb6: {
        _49 = &_50;                      // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _34 = (move _35, move _49);      // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _53 = (_34.0: &std::string::String); // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _54 = (_34.1: &std::string::String); // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _57 = _53;                       // scope 8 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
        _58 = _54;                       // scope 8 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
        _56 = <String as PartialEq>::eq(move _57, move _58) -> [return: bb7, unwind: bb23]; // scope 8 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a String, &'b String) -> bool {<String as PartialEq>::eq}, val: Value(<ZST>) }
    }

    bb7: {
        _55 = Not(move _56);             // scope 8 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
        switchInt(move _55) -> [0: bb9, otherwise: bb8]; // scope 8 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    }

    bb8: {
        _59 = const core::panicking::AssertKind::Eq; // scope 8 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _61 = const core::panicking::AssertKind::Eq; // scope 9 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _63 = _53;                       // scope 9 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _62 = _63;                       // scope 9 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _65 = _54;                       // scope 9 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _64 = _65;                       // scope 9 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _66 = Option::<Arguments<'_>>::None; // scope 9 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
        _60 = core::panicking::assert_failed::<String, String>(move _61, move _62, move _64, move _66) -> bb23; // scope 9 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:53
                                         // + literal: Const { ty: for<'a, 'b, 'c> fn(core::panicking::AssertKind, &'a String, &'b String, Option<Arguments<'c>>) -> ! {core::panicking::assert_failed::<String, String>}, val: Value(<ZST>) }
    }

    bb9: {
        drop(_50) -> [return: bb10, unwind: bb24]; // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:48:9: 48:10
    }

    bb10: {
        drop(_36) -> bb11;               // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:48:9: 48:10
    }

    bb11: {
        _101 = const _;                  // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:20:36: 20:42
                                         // mir::Constant
                                         // + span: ui/struct-enums/enum-discrim-width-stuff.rs:20:36: 20:42
                                         // + literal: Const { ty: &[&str; 1], val: Unevaluated(a::check, [], Some(promoted[0])) }
        _74 = _101;                      // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:20:36: 20:42
        _73 = _74;                       // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:20:36: 20:42
        _72 = move _73 as &[&str] (Pointer(Unsize)); // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:20:36: 20:42
        _82 = const {alloc25: &a::E};    // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:20:44: 20:45
                                         // mir::Constant
                                         // + span: ui/struct-enums/enum-discrim-width-stuff.rs:20:44: 20:45
                                         // + literal: Const { ty: &a::E, val: Value(Scalar(alloc25)) }
        _81 = _82;                       // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:20:44: 20:45
        _80 = _81;                       // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:20:44: 20:45
        _79 = core::fmt::ArgumentV1::<'_>::new_debug::<a::E>(move _80) -> bb12; // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:20:44: 20:45
                                         // mir::Constant
                                         // + span: ui/struct-enums/enum-discrim-width-stuff.rs:20:44: 20:45
                                         // + user_ty: UserType(3)
                                         // + literal: Const { ty: for<'b> fn(&'b a::E) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_debug::<a::E>}, val: Value(<ZST>) }
    }

    bb12: {
        _78 = [move _79];                // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
        _77 = &_78;                      // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
        _76 = _77;                       // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
        _75 = move _76 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
        _71 = Arguments::<'_>::new_v1(move _72, move _75) -> bb13; // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
                                         // + user_ty: UserType(2)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb13: {
        _70 = format(move _71) -> bb14;  // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:19: 118:80
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:19: 118:38
                                         // + literal: Const { ty: for<'a> fn(Arguments<'a>) -> String {format}, val: Value(<ZST>) }
    }

    bb14: {
        _69 = move _70;                  // scope 10 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:119:9: 119:12
        _68 = &_69;                      // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _86 = const "V";                 // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:20:48: 20:51
                                         // mir::Constant
                                         // + span: ui/struct-enums/enum-discrim-width-stuff.rs:20:48: 20:51
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _85 = _86;                       // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:20:48: 20:63
        _84 = <str as ToString>::to_string(move _85) -> [return: bb15, unwind: bb22]; // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:20:48: 20:63
                                         // mir::Constant
                                         // + span: ui/struct-enums/enum-discrim-width-stuff.rs:20:52: 20:61
                                         // + literal: Const { ty: for<'a> fn(&'a str) -> String {<str as ToString>::to_string}, val: Value(<ZST>) }
    }

    bb15: {
        _83 = &_84;                      // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _67 = (move _68, move _83);      // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _87 = (_67.0: &std::string::String); // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _88 = (_67.1: &std::string::String); // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _91 = _87;                       // scope 11 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
        _92 = _88;                       // scope 11 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
        _90 = <String as PartialEq>::eq(move _91, move _92) -> [return: bb16, unwind: bb21]; // scope 11 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a String, &'b String) -> bool {<String as PartialEq>::eq}, val: Value(<ZST>) }
    }

    bb16: {
        _89 = Not(move _90);             // scope 11 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
        switchInt(move _89) -> [0: bb18, otherwise: bb17]; // scope 11 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    }

    bb17: {
        _93 = const core::panicking::AssertKind::Eq; // scope 11 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _95 = const core::panicking::AssertKind::Eq; // scope 12 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _97 = _87;                       // scope 12 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _96 = _97;                       // scope 12 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _99 = _88;                       // scope 12 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _98 = _99;                       // scope 12 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _100 = Option::<Arguments<'_>>::None; // scope 12 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
        _94 = core::panicking::assert_failed::<String, String>(move _95, move _96, move _98, move _100) -> bb21; // scope 12 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:53
                                         // + literal: Const { ty: for<'a, 'b, 'c> fn(core::panicking::AssertKind, &'a String, &'b String, Option<Arguments<'c>>) -> ! {core::panicking::assert_failed::<String, String>}, val: Value(<ZST>) }
    }

    bb18: {
        drop(_84) -> [return: bb19, unwind: bb22]; // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:48:9: 48:10
    }

    bb19: {
        drop(_69) -> bb20;               // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:48:9: 48:10
    }

    bb20: {
        return;                          // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:21:14: 21:14
    }

    bb21 (cleanup): {
        drop(_84) -> bb22;               // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:48:9: 48:10
    }

    bb22 (cleanup): {
        drop(_69) -> bb25;               // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:48:9: 48:10
    }

    bb23 (cleanup): {
        drop(_50) -> bb24;               // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:48:9: 48:10
    }

    bb24 (cleanup): {
        drop(_36) -> bb25;               // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:48:9: 48:10
    }

    bb25 (cleanup): {
        resume;                          // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:15:13: 21:14
    }
}

alloc25 (static: a::C, size: 1, align: 1) {
    17                                              │ .
}

promoted[0] in a::check: &[&str; 1] = {
    let mut _0: &[&str; 1];              // return place in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:20:36: 20:42
    let mut _1: [&str; 1];               // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:20:36: 20:42

    bb0: {
        _1 = [const ""];                 // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:20:36: 20:42
                                         // mir::Constant
                                         // + span: ui/struct-enums/enum-discrim-width-stuff.rs:20:36: 20:42
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:20:36: 20:42
        return;                          // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:20:36: 20:42
    }
}

promoted[1] in a::check: &a::E = {
    let mut _0: &main::a::E;             // return place in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:19:44: 19:48
    let mut _1: main::a::E;              // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:19:44: 19:48

    bb0: {
        _1 = a::E::V;                    // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:19:44: 19:48
        _0 = &_1;                        // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:19:44: 19:48
        return;                          // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:19:44: 19:48
    }
}

promoted[2] in a::check: &[&str; 1] = {
    let mut _0: &[&str; 1];              // return place in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:19:36: 19:42
    let mut _1: [&str; 1];               // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:19:36: 19:42

    bb0: {
        _1 = [const ""];                 // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:19:36: 19:42
                                         // mir::Constant
                                         // + span: ui/struct-enums/enum-discrim-width-stuff.rs:19:36: 19:42
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:19:36: 19:42
        return;                          // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:19:36: 19:42
    }
}

promoted[3] in a::check: &u8 = {
    let mut _0: &u8;                     // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _1: u8;                      // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:18:37: 18:39

    bb0: {
        _1 = const 23_u8;                // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:28:19: 28:23
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    }
}

promoted[4] in a::check: &u8 = {
    let mut _0: &u8;                     // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _1: u8;                      // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:17:40: 17:42

    bb0: {
        _1 = const 23_u8;                // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:28:19: 28:23
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    }
}

promoted[5] in a::check: &u8 = {
    let mut _0: &u8;                     // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let mut _1: u8;                      // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:17:28: 17:32
    let mut _2: isize;                   // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:17:28: 17:32
    let mut _3: (isize, bool);           // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:17:28: 17:32

    bb0: {
        _3 = CheckedAdd(const _, const 0_isize); // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:17:28: 17:32
        _2 = move (_3.0: isize);         // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:17:28: 17:32
        _1 = move _2 as u8 (IntToInt);   // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:17:28: 17:32
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    }
}

promoted[6] in a::check: &usize = {
    let mut _0: &usize;                  // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _1: usize;                   // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:16:44: 16:59

    bb0: {
        _1 = std::mem::size_of::<u8>() -> bb1; // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:16:44: 16:59
                                         // mir::Constant
                                         // + span: ui/struct-enums/enum-discrim-width-stuff.rs:16:44: 16:57
                                         // + literal: Const { ty: fn() -> usize {std::mem::size_of::<u8>}, val: Value(<ZST>) }
    }

    bb1: {
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    }
}

promoted[7] in a::check: &usize = {
    let mut _0: &usize;                  // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let mut _1: usize;                   // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:16:28: 16:42

    bb0: {
        _1 = std::mem::size_of::<a::E>() -> bb1; // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:16:28: 16:42
                                         // mir::Constant
                                         // + span: ui/struct-enums/enum-discrim-width-stuff.rs:16:28: 16:40
                                         // + literal: Const { ty: fn() -> usize {std::mem::size_of::<a::E>}, val: Value(<ZST>) }
    }

    bb1: {
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    }
}

b::E::V::{constant#0}: isize = {
    let mut _0: isize;                   // return place in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:29:19: 29:23

    bb0: {
        _0 = const 232_isize;            // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:29:19: 29:23
        return;                          // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:29:19: 29:23
    }
}

b::E::A::{constant#0}: isize = {
    let mut _0: isize;                   // return place in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:12:21: 12:22

    bb0: {
        _0 = const 0_isize;              // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:12:21: 12:22
        return;                          // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:12:21: 12:22
    }
}

fn b::<impl at ui/struct-enums/enum-discrim-width-stuff.rs:9:28: 9:33>::clone(_1: &b::E) -> b::E {
    debug self => _1;                    // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:9:28: 9:33
    let mut _0: main::b::E;              // return place in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:9:28: 9:33

    bb0: {
        _0 = (*_1);                      // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:9:28: 9:33
        return;                          // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:9:33: 9:33
    }
}

fn b::<impl at ui/struct-enums/enum-discrim-width-stuff.rs:9:35: 9:40>::fmt(_1: &b::E, _2: &mut Formatter<'_>) -> Result<(), std::fmt::Error> {
    debug self => _1;                    // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:9:35: 9:40
    debug f => _2;                       // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:9:35: 9:40
    let mut _0: std::result::Result<(), std::fmt::Error>; // return place in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:9:35: 9:40
    let mut _3: &mut std::fmt::Formatter<'_>; // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:9:35: 9:40
    let mut _4: &str;                    // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:9:35: 9:40
    let mut _5: isize;                   // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:9:35: 9:40
    let _6: &str;                        // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:9:35: 9:40
    let _7: &str;                        // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:9:35: 9:40

    bb0: {
        _3 = &mut (*_2);                 // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:9:35: 9:40
        _5 = discriminant((*_1));        // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:9:35: 9:40
        switchInt(move _5) -> [232: bb3, 0: bb1, otherwise: bb2]; // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:9:35: 9:40
    }

    bb1: {
        _7 = const "A";                  // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:9:35: 9:40
                                         // mir::Constant
                                         // + span: ui/struct-enums/enum-discrim-width-stuff.rs:9:35: 9:40
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _4 = _7;                         // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:9:35: 9:40
        goto -> bb4;                     // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:9:39: 9:40
    }

    bb2: {
        unreachable;                     // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:9:35: 9:40
    }

    bb3: {
        _6 = const "V";                  // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:9:35: 9:40
                                         // mir::Constant
                                         // + span: ui/struct-enums/enum-discrim-width-stuff.rs:9:35: 9:40
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _4 = _6;                         // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:9:35: 9:40
        goto -> bb4;                     // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:9:39: 9:40
    }

    bb4: {
        _0 = Formatter::<'_>::write_str(move _3, move _4) -> bb5; // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:9:35: 9:40
                                         // mir::Constant
                                         // + span: ui/struct-enums/enum-discrim-width-stuff.rs:9:35: 9:40
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a mut Formatter<'_>, &'b str) -> Result<(), std::fmt::Error> {Formatter::<'_>::write_str}, val: Value(<ZST>) }
    }

    bb5: {
        return;                          // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:9:40: 9:40
    }
}

static b::C: b::E = {
    let mut _0: main::b::E;              // return place in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:14:23: 14:24

    bb0: {
        _0 = b::E::V;                    // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:14:27: 14:31
        return;                          // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:14:13: 14:32
    }
}

fn b::check() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:15:28: 15:28
    let mut _1: (&usize, &usize);        // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _2: &usize;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let mut _3: &usize;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let _4: &usize;                      // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
    let _5: &usize;                      // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
    let mut _7: (&u8, &u8);              // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _8: &u8;                     // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let mut _9: &u8;                     // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let _10: &u8;                        // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
    let _11: &u8;                        // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
    let mut _13: (&u8, &u8);             // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _14: &u8;                    // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let _15: u8;                         // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:18:28: 18:29
    let mut _16: isize;                  // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:18:28: 18:29
    let mut _17: bool;                   // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:18:28: 18:29
    let mut _18: bool;                   // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:18:28: 18:29
    let mut _19: &u8;                    // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let _20: &u8;                        // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
    let _21: &u8;                        // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
    let mut _22: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    let mut _23: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
    let mut _24: u8;                     // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
    let mut _25: u8;                     // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
    let _27: !;                          // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
    let mut _28: core::panicking::AssertKind; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
    let mut _29: &u8;                    // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let _30: &u8;                        // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let mut _31: &u8;                    // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let _32: &u8;                        // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let mut _33: std::option::Option<std::fmt::Arguments<'_>>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
    let mut _34: (&std::string::String, &std::string::String); // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _35: &std::string::String;   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let _36: std::string::String;        // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:117:23: 120:6
    let _37: std::string::String;        // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:13: 118:16
    let mut _38: std::fmt::Arguments<'_>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
    let mut _39: &[&str];                // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:19:36: 19:42
    let mut _40: &[&str; 1];             // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:19:36: 19:42
    let _41: &[&str; 1];                 // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:19:36: 19:42
    let mut _42: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
    let mut _43: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
    let _44: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
    let _45: [core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
    let mut _46: core::fmt::ArgumentV1<'_>; // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:19:44: 19:48
    let mut _47: &main::b::E;            // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:19:44: 19:48
    let _48: &main::b::E;                // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:19:44: 19:48
    let mut _49: &std::string::String;   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let _50: std::string::String;        // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:19:51: 19:66
    let mut _51: &str;                   // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:19:51: 19:66
    let _52: &str;                       // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:19:51: 19:54
    let _53: &std::string::String;       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
    let _54: &std::string::String;       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
    let mut _55: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    let mut _56: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
    let mut _57: &std::string::String;   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
    let mut _58: &std::string::String;   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
    let _60: !;                          // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
    let mut _61: core::panicking::AssertKind; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
    let mut _62: &std::string::String;   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let _63: &std::string::String;       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let mut _64: &std::string::String;   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let _65: &std::string::String;       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let mut _66: std::option::Option<std::fmt::Arguments<'_>>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
    let mut _67: (&std::string::String, &std::string::String); // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _68: &std::string::String;   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let _69: std::string::String;        // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:117:23: 120:6
    let _70: std::string::String;        // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:13: 118:16
    let mut _71: std::fmt::Arguments<'_>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
    let mut _72: &[&str];                // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:20:36: 20:42
    let mut _73: &[&str; 1];             // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:20:36: 20:42
    let _74: &[&str; 1];                 // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:20:36: 20:42
    let mut _75: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
    let mut _76: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
    let _77: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
    let _78: [core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
    let mut _79: core::fmt::ArgumentV1<'_>; // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:20:44: 20:45
    let mut _80: &main::b::E;            // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:20:44: 20:45
    let _81: &main::b::E;                // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:20:44: 20:45
    let _82: &main::b::E;                // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:20:44: 20:45
    let mut _83: &std::string::String;   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let _84: std::string::String;        // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:20:48: 20:63
    let mut _85: &str;                   // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:20:48: 20:63
    let _86: &str;                       // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:20:48: 20:51
    let _87: &std::string::String;       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
    let _88: &std::string::String;       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
    let mut _89: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    let mut _90: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
    let mut _91: &std::string::String;   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
    let mut _92: &std::string::String;   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
    let _94: !;                          // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
    let mut _95: core::panicking::AssertKind; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
    let mut _96: &std::string::String;   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let _97: &std::string::String;       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let mut _98: &std::string::String;   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let _99: &std::string::String;       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let mut _100: std::option::Option<std::fmt::Arguments<'_>>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
    let mut _101: &[&str; 1];            // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:20:36: 20:42
    let mut _102: &main::b::E;           // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:19:44: 19:48
    let mut _103: &[&str; 1];            // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:19:36: 19:42
    let mut _104: &u8;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _105: &u8;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _106: &u8;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let mut _107: &usize;                // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _108: &usize;                // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    scope 1 {
        debug left_val => _4;            // in scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        debug right_val => _5;           // in scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        let _6: core::panicking::AssertKind; // in scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
        scope 2 {
            debug kind => _6;            // in scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
        }
    }
    scope 3 {
        debug left_val => _10;           // in scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        debug right_val => _11;          // in scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        let _12: core::panicking::AssertKind; // in scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
        scope 4 {
            debug kind => _12;           // in scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
        }
    }
    scope 5 {
        debug left_val => _20;           // in scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        debug right_val => _21;          // in scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        let _26: core::panicking::AssertKind; // in scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
        scope 6 {
            debug kind => _26;           // in scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
        }
    }
    scope 7 {
        debug res => _37;                // in scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:13: 118:16
    }
    scope 8 {
        debug left_val => _53;           // in scope 8 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        debug right_val => _54;          // in scope 8 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        let _59: core::panicking::AssertKind; // in scope 8 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
        scope 9 {
            debug kind => _59;           // in scope 9 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
        }
    }
    scope 10 {
        debug res => _70;                // in scope 10 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:13: 118:16
    }
    scope 11 {
        debug left_val => _87;           // in scope 11 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        debug right_val => _88;          // in scope 11 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        let _93: core::panicking::AssertKind; // in scope 11 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
        scope 12 {
            debug kind => _93;           // in scope 12 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
        }
    }

    bb0: {
        _108 = const _;                  // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
                                         // + literal: Const { ty: &usize, val: Unevaluated(b::check, [], Some(promoted[7])) }
        _2 = _108;                       // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _107 = const _;                  // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // + literal: Const { ty: &usize, val: Unevaluated(b::check, [], Some(promoted[6])) }
        _3 = _107;                       // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _1 = (move _2, move _3);         // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _4 = (_1.0: &usize);             // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _5 = (_1.1: &usize);             // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _106 = const _;                  // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
                                         // + literal: Const { ty: &u8, val: Unevaluated(b::check, [], Some(promoted[5])) }
        _8 = _106;                       // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _105 = const _;                  // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // + literal: Const { ty: &u8, val: Unevaluated(b::check, [], Some(promoted[4])) }
        _9 = _105;                       // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _7 = (move _8, move _9);         // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _10 = (_7.0: &u8);               // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _11 = (_7.1: &u8);               // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _16 = const 232_isize;           // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:18:28: 18:29
        _17 = const true;                // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:18:28: 18:29
        assume(_17);                     // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:18:28: 18:29
        _18 = const true;                // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:18:28: 18:29
        assume(_18);                     // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:18:28: 18:29
        _15 = move _16 as u8 (IntToInt); // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:18:28: 18:29
        _14 = &_15;                      // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _104 = const _;                  // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // + literal: Const { ty: &u8, val: Unevaluated(b::check, [], Some(promoted[3])) }
        _19 = _104;                      // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _13 = (move _14, move _19);      // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _20 = (_13.0: &u8);              // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _21 = (_13.1: &u8);              // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _24 = (*_20);                    // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
        _25 = const 232_u8;              // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
        _23 = Eq(move _24, move _25);    // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
        _22 = Not(move _23);             // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
        switchInt(move _22) -> [0: bb2, otherwise: bb1]; // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    }

    bb1: {
        _26 = const core::panicking::AssertKind::Eq; // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _28 = const core::panicking::AssertKind::Eq; // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _30 = _20;                       // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _29 = _30;                       // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _32 = _21;                       // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _31 = _32;                       // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _33 = Option::<Arguments<'_>>::None; // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
        _27 = core::panicking::assert_failed::<u8, u8>(move _28, move _29, move _31, move _33); // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:53
                                         // + literal: Const { ty: for<'a, 'b, 'c> fn(core::panicking::AssertKind, &'a u8, &'b u8, Option<Arguments<'c>>) -> ! {core::panicking::assert_failed::<u8, u8>}, val: Value(<ZST>) }
    }

    bb2: {
        _103 = const _;                  // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:19:36: 19:42
                                         // mir::Constant
                                         // + span: ui/struct-enums/enum-discrim-width-stuff.rs:19:36: 19:42
                                         // + literal: Const { ty: &[&str; 1], val: Unevaluated(b::check, [], Some(promoted[2])) }
        _41 = _103;                      // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:19:36: 19:42
        _40 = _41;                       // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:19:36: 19:42
        _39 = move _40 as &[&str] (Pointer(Unsize)); // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:19:36: 19:42
        _102 = const _;                  // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:19:44: 19:48
                                         // mir::Constant
                                         // + span: ui/struct-enums/enum-discrim-width-stuff.rs:19:44: 19:48
                                         // + literal: Const { ty: &b::E, val: Unevaluated(b::check, [], Some(promoted[1])) }
        _48 = _102;                      // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:19:44: 19:48
        _47 = _48;                       // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:19:44: 19:48
        _46 = core::fmt::ArgumentV1::<'_>::new_debug::<b::E>(move _47) -> bb3; // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:19:44: 19:48
                                         // mir::Constant
                                         // + span: ui/struct-enums/enum-discrim-width-stuff.rs:19:44: 19:48
                                         // + user_ty: UserType(1)
                                         // + literal: Const { ty: for<'b> fn(&'b b::E) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_debug::<b::E>}, val: Value(<ZST>) }
    }

    bb3: {
        _45 = [move _46];                // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
        _44 = &_45;                      // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
        _43 = _44;                       // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
        _42 = move _43 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
        _38 = Arguments::<'_>::new_v1(move _39, move _42) -> bb4; // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb4: {
        _37 = format(move _38) -> bb5;   // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:19: 118:80
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:19: 118:38
                                         // + literal: Const { ty: for<'a> fn(Arguments<'a>) -> String {format}, val: Value(<ZST>) }
    }

    bb5: {
        _36 = move _37;                  // scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:119:9: 119:12
        _35 = &_36;                      // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _52 = const "V";                 // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:19:51: 19:54
                                         // mir::Constant
                                         // + span: ui/struct-enums/enum-discrim-width-stuff.rs:19:51: 19:54
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _51 = _52;                       // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:19:51: 19:66
        _50 = <str as ToString>::to_string(move _51) -> [return: bb6, unwind: bb24]; // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:19:51: 19:66
                                         // mir::Constant
                                         // + span: ui/struct-enums/enum-discrim-width-stuff.rs:19:55: 19:64
                                         // + literal: Const { ty: for<'a> fn(&'a str) -> String {<str as ToString>::to_string}, val: Value(<ZST>) }
    }

    bb6: {
        _49 = &_50;                      // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _34 = (move _35, move _49);      // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _53 = (_34.0: &std::string::String); // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _54 = (_34.1: &std::string::String); // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _57 = _53;                       // scope 8 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
        _58 = _54;                       // scope 8 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
        _56 = <String as PartialEq>::eq(move _57, move _58) -> [return: bb7, unwind: bb23]; // scope 8 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a String, &'b String) -> bool {<String as PartialEq>::eq}, val: Value(<ZST>) }
    }

    bb7: {
        _55 = Not(move _56);             // scope 8 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
        switchInt(move _55) -> [0: bb9, otherwise: bb8]; // scope 8 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    }

    bb8: {
        _59 = const core::panicking::AssertKind::Eq; // scope 8 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _61 = const core::panicking::AssertKind::Eq; // scope 9 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _63 = _53;                       // scope 9 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _62 = _63;                       // scope 9 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _65 = _54;                       // scope 9 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _64 = _65;                       // scope 9 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _66 = Option::<Arguments<'_>>::None; // scope 9 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
        _60 = core::panicking::assert_failed::<String, String>(move _61, move _62, move _64, move _66) -> bb23; // scope 9 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:53
                                         // + literal: Const { ty: for<'a, 'b, 'c> fn(core::panicking::AssertKind, &'a String, &'b String, Option<Arguments<'c>>) -> ! {core::panicking::assert_failed::<String, String>}, val: Value(<ZST>) }
    }

    bb9: {
        drop(_50) -> [return: bb10, unwind: bb24]; // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:48:9: 48:10
    }

    bb10: {
        drop(_36) -> bb11;               // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:48:9: 48:10
    }

    bb11: {
        _101 = const _;                  // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:20:36: 20:42
                                         // mir::Constant
                                         // + span: ui/struct-enums/enum-discrim-width-stuff.rs:20:36: 20:42
                                         // + literal: Const { ty: &[&str; 1], val: Unevaluated(b::check, [], Some(promoted[0])) }
        _74 = _101;                      // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:20:36: 20:42
        _73 = _74;                       // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:20:36: 20:42
        _72 = move _73 as &[&str] (Pointer(Unsize)); // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:20:36: 20:42
        _82 = const {alloc26: &b::E};    // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:20:44: 20:45
                                         // mir::Constant
                                         // + span: ui/struct-enums/enum-discrim-width-stuff.rs:20:44: 20:45
                                         // + literal: Const { ty: &b::E, val: Value(Scalar(alloc26)) }
        _81 = _82;                       // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:20:44: 20:45
        _80 = _81;                       // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:20:44: 20:45
        _79 = core::fmt::ArgumentV1::<'_>::new_debug::<b::E>(move _80) -> bb12; // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:20:44: 20:45
                                         // mir::Constant
                                         // + span: ui/struct-enums/enum-discrim-width-stuff.rs:20:44: 20:45
                                         // + user_ty: UserType(3)
                                         // + literal: Const { ty: for<'b> fn(&'b b::E) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_debug::<b::E>}, val: Value(<ZST>) }
    }

    bb12: {
        _78 = [move _79];                // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
        _77 = &_78;                      // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
        _76 = _77;                       // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
        _75 = move _76 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
        _71 = Arguments::<'_>::new_v1(move _72, move _75) -> bb13; // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
                                         // + user_ty: UserType(2)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb13: {
        _70 = format(move _71) -> bb14;  // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:19: 118:80
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:19: 118:38
                                         // + literal: Const { ty: for<'a> fn(Arguments<'a>) -> String {format}, val: Value(<ZST>) }
    }

    bb14: {
        _69 = move _70;                  // scope 10 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:119:9: 119:12
        _68 = &_69;                      // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _86 = const "V";                 // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:20:48: 20:51
                                         // mir::Constant
                                         // + span: ui/struct-enums/enum-discrim-width-stuff.rs:20:48: 20:51
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _85 = _86;                       // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:20:48: 20:63
        _84 = <str as ToString>::to_string(move _85) -> [return: bb15, unwind: bb22]; // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:20:48: 20:63
                                         // mir::Constant
                                         // + span: ui/struct-enums/enum-discrim-width-stuff.rs:20:52: 20:61
                                         // + literal: Const { ty: for<'a> fn(&'a str) -> String {<str as ToString>::to_string}, val: Value(<ZST>) }
    }

    bb15: {
        _83 = &_84;                      // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _67 = (move _68, move _83);      // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _87 = (_67.0: &std::string::String); // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _88 = (_67.1: &std::string::String); // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _91 = _87;                       // scope 11 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
        _92 = _88;                       // scope 11 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
        _90 = <String as PartialEq>::eq(move _91, move _92) -> [return: bb16, unwind: bb21]; // scope 11 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a String, &'b String) -> bool {<String as PartialEq>::eq}, val: Value(<ZST>) }
    }

    bb16: {
        _89 = Not(move _90);             // scope 11 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
        switchInt(move _89) -> [0: bb18, otherwise: bb17]; // scope 11 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    }

    bb17: {
        _93 = const core::panicking::AssertKind::Eq; // scope 11 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _95 = const core::panicking::AssertKind::Eq; // scope 12 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _97 = _87;                       // scope 12 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _96 = _97;                       // scope 12 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _99 = _88;                       // scope 12 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _98 = _99;                       // scope 12 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _100 = Option::<Arguments<'_>>::None; // scope 12 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
        _94 = core::panicking::assert_failed::<String, String>(move _95, move _96, move _98, move _100) -> bb21; // scope 12 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:53
                                         // + literal: Const { ty: for<'a, 'b, 'c> fn(core::panicking::AssertKind, &'a String, &'b String, Option<Arguments<'c>>) -> ! {core::panicking::assert_failed::<String, String>}, val: Value(<ZST>) }
    }

    bb18: {
        drop(_84) -> [return: bb19, unwind: bb22]; // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:48:9: 48:10
    }

    bb19: {
        drop(_69) -> bb20;               // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:48:9: 48:10
    }

    bb20: {
        return;                          // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:21:14: 21:14
    }

    bb21 (cleanup): {
        drop(_84) -> bb22;               // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:48:9: 48:10
    }

    bb22 (cleanup): {
        drop(_69) -> bb25;               // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:48:9: 48:10
    }

    bb23 (cleanup): {
        drop(_50) -> bb24;               // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:48:9: 48:10
    }

    bb24 (cleanup): {
        drop(_36) -> bb25;               // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:48:9: 48:10
    }

    bb25 (cleanup): {
        resume;                          // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:15:13: 21:14
    }
}

alloc26 (static: b::C, size: 1, align: 1) {
    e8                                              │ .
}

promoted[0] in b::check: &[&str; 1] = {
    let mut _0: &[&str; 1];              // return place in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:20:36: 20:42
    let mut _1: [&str; 1];               // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:20:36: 20:42

    bb0: {
        _1 = [const ""];                 // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:20:36: 20:42
                                         // mir::Constant
                                         // + span: ui/struct-enums/enum-discrim-width-stuff.rs:20:36: 20:42
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:20:36: 20:42
        return;                          // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:20:36: 20:42
    }
}

promoted[1] in b::check: &b::E = {
    let mut _0: &main::b::E;             // return place in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:19:44: 19:48
    let mut _1: main::b::E;              // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:19:44: 19:48

    bb0: {
        _1 = b::E::V;                    // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:19:44: 19:48
        _0 = &_1;                        // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:19:44: 19:48
        return;                          // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:19:44: 19:48
    }
}

promoted[2] in b::check: &[&str; 1] = {
    let mut _0: &[&str; 1];              // return place in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:19:36: 19:42
    let mut _1: [&str; 1];               // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:19:36: 19:42

    bb0: {
        _1 = [const ""];                 // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:19:36: 19:42
                                         // mir::Constant
                                         // + span: ui/struct-enums/enum-discrim-width-stuff.rs:19:36: 19:42
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:19:36: 19:42
        return;                          // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:19:36: 19:42
    }
}

promoted[3] in b::check: &u8 = {
    let mut _0: &u8;                     // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _1: u8;                      // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:18:37: 18:39

    bb0: {
        _1 = const 232_u8;               // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:29:19: 29:23
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    }
}

promoted[4] in b::check: &u8 = {
    let mut _0: &u8;                     // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _1: u8;                      // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:17:40: 17:42

    bb0: {
        _1 = const 232_u8;               // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:29:19: 29:23
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    }
}

promoted[5] in b::check: &u8 = {
    let mut _0: &u8;                     // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let mut _1: u8;                      // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:17:28: 17:32
    let mut _2: isize;                   // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:17:28: 17:32
    let mut _3: (isize, bool);           // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:17:28: 17:32

    bb0: {
        _3 = CheckedAdd(const _, const 0_isize); // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:17:28: 17:32
        _2 = move (_3.0: isize);         // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:17:28: 17:32
        _1 = move _2 as u8 (IntToInt);   // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:17:28: 17:32
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    }
}

promoted[6] in b::check: &usize = {
    let mut _0: &usize;                  // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _1: usize;                   // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:16:44: 16:59

    bb0: {
        _1 = std::mem::size_of::<u8>() -> bb1; // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:16:44: 16:59
                                         // mir::Constant
                                         // + span: ui/struct-enums/enum-discrim-width-stuff.rs:16:44: 16:57
                                         // + literal: Const { ty: fn() -> usize {std::mem::size_of::<u8>}, val: Value(<ZST>) }
    }

    bb1: {
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    }
}

promoted[7] in b::check: &usize = {
    let mut _0: &usize;                  // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let mut _1: usize;                   // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:16:28: 16:42

    bb0: {
        _1 = std::mem::size_of::<b::E>() -> bb1; // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:16:28: 16:42
                                         // mir::Constant
                                         // + span: ui/struct-enums/enum-discrim-width-stuff.rs:16:28: 16:40
                                         // + literal: Const { ty: fn() -> usize {std::mem::size_of::<b::E>}, val: Value(<ZST>) }
    }

    bb1: {
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    }
}

c::E::V::{constant#0}: isize = {
    let mut _0: isize;                   // return place in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:30:20: 30:26

    bb0: {
        _0 = const 5927_isize;           // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:30:20: 30:26
        return;                          // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:30:20: 30:26
    }
}

c::E::A::{constant#0}: isize = {
    let mut _0: isize;                   // return place in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:12:21: 12:22

    bb0: {
        _0 = const 0_isize;              // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:12:21: 12:22
        return;                          // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:12:21: 12:22
    }
}

fn c::<impl at ui/struct-enums/enum-discrim-width-stuff.rs:9:28: 9:33>::clone(_1: &c::E) -> c::E {
    debug self => _1;                    // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:9:28: 9:33
    let mut _0: main::c::E;              // return place in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:9:28: 9:33

    bb0: {
        _0 = (*_1);                      // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:9:28: 9:33
        return;                          // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:9:33: 9:33
    }
}

fn c::<impl at ui/struct-enums/enum-discrim-width-stuff.rs:9:35: 9:40>::fmt(_1: &c::E, _2: &mut Formatter<'_>) -> Result<(), std::fmt::Error> {
    debug self => _1;                    // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:9:35: 9:40
    debug f => _2;                       // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:9:35: 9:40
    let mut _0: std::result::Result<(), std::fmt::Error>; // return place in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:9:35: 9:40
    let mut _3: &mut std::fmt::Formatter<'_>; // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:9:35: 9:40
    let mut _4: &str;                    // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:9:35: 9:40
    let mut _5: isize;                   // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:9:35: 9:40
    let _6: &str;                        // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:9:35: 9:40
    let _7: &str;                        // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:9:35: 9:40

    bb0: {
        _3 = &mut (*_2);                 // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:9:35: 9:40
        _5 = discriminant((*_1));        // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:9:35: 9:40
        switchInt(move _5) -> [5927: bb3, 0: bb1, otherwise: bb2]; // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:9:35: 9:40
    }

    bb1: {
        _7 = const "A";                  // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:9:35: 9:40
                                         // mir::Constant
                                         // + span: ui/struct-enums/enum-discrim-width-stuff.rs:9:35: 9:40
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _4 = _7;                         // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:9:35: 9:40
        goto -> bb4;                     // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:9:39: 9:40
    }

    bb2: {
        unreachable;                     // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:9:35: 9:40
    }

    bb3: {
        _6 = const "V";                  // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:9:35: 9:40
                                         // mir::Constant
                                         // + span: ui/struct-enums/enum-discrim-width-stuff.rs:9:35: 9:40
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _4 = _6;                         // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:9:35: 9:40
        goto -> bb4;                     // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:9:39: 9:40
    }

    bb4: {
        _0 = Formatter::<'_>::write_str(move _3, move _4) -> bb5; // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:9:35: 9:40
                                         // mir::Constant
                                         // + span: ui/struct-enums/enum-discrim-width-stuff.rs:9:35: 9:40
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a mut Formatter<'_>, &'b str) -> Result<(), std::fmt::Error> {Formatter::<'_>::write_str}, val: Value(<ZST>) }
    }

    bb5: {
        return;                          // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:9:40: 9:40
    }
}

static c::C: c::E = {
    let mut _0: main::c::E;              // return place in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:14:23: 14:24

    bb0: {
        _0 = c::E::V;                    // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:14:27: 14:31
        return;                          // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:14:13: 14:32
    }
}

fn c::check() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:15:28: 15:28
    let mut _1: (&usize, &usize);        // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _2: &usize;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let mut _3: &usize;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let _4: &usize;                      // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
    let _5: &usize;                      // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
    let mut _7: (&u16, &u16);            // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _8: &u16;                    // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let mut _9: &u16;                    // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let _10: &u16;                       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
    let _11: &u16;                       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
    let mut _13: (&u16, &u16);           // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _14: &u16;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let _15: u16;                        // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:18:28: 18:29
    let mut _16: isize;                  // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:18:28: 18:29
    let mut _17: bool;                   // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:18:28: 18:29
    let mut _18: bool;                   // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:18:28: 18:29
    let mut _19: &u16;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let _20: &u16;                       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
    let _21: &u16;                       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
    let mut _22: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    let mut _23: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
    let mut _24: u16;                    // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
    let mut _25: u16;                    // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
    let _27: !;                          // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
    let mut _28: core::panicking::AssertKind; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
    let mut _29: &u16;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let _30: &u16;                       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let mut _31: &u16;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let _32: &u16;                       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let mut _33: std::option::Option<std::fmt::Arguments<'_>>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
    let mut _34: (&std::string::String, &std::string::String); // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _35: &std::string::String;   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let _36: std::string::String;        // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:117:23: 120:6
    let _37: std::string::String;        // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:13: 118:16
    let mut _38: std::fmt::Arguments<'_>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
    let mut _39: &[&str];                // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:19:36: 19:42
    let mut _40: &[&str; 1];             // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:19:36: 19:42
    let _41: &[&str; 1];                 // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:19:36: 19:42
    let mut _42: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
    let mut _43: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
    let _44: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
    let _45: [core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
    let mut _46: core::fmt::ArgumentV1<'_>; // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:19:44: 19:48
    let mut _47: &main::c::E;            // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:19:44: 19:48
    let _48: &main::c::E;                // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:19:44: 19:48
    let mut _49: &std::string::String;   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let _50: std::string::String;        // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:19:51: 19:66
    let mut _51: &str;                   // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:19:51: 19:66
    let _52: &str;                       // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:19:51: 19:54
    let _53: &std::string::String;       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
    let _54: &std::string::String;       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
    let mut _55: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    let mut _56: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
    let mut _57: &std::string::String;   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
    let mut _58: &std::string::String;   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
    let _60: !;                          // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
    let mut _61: core::panicking::AssertKind; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
    let mut _62: &std::string::String;   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let _63: &std::string::String;       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let mut _64: &std::string::String;   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let _65: &std::string::String;       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let mut _66: std::option::Option<std::fmt::Arguments<'_>>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
    let mut _67: (&std::string::String, &std::string::String); // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _68: &std::string::String;   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let _69: std::string::String;        // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:117:23: 120:6
    let _70: std::string::String;        // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:13: 118:16
    let mut _71: std::fmt::Arguments<'_>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
    let mut _72: &[&str];                // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:20:36: 20:42
    let mut _73: &[&str; 1];             // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:20:36: 20:42
    let _74: &[&str; 1];                 // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:20:36: 20:42
    let mut _75: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
    let mut _76: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
    let _77: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
    let _78: [core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
    let mut _79: core::fmt::ArgumentV1<'_>; // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:20:44: 20:45
    let mut _80: &main::c::E;            // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:20:44: 20:45
    let _81: &main::c::E;                // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:20:44: 20:45
    let _82: &main::c::E;                // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:20:44: 20:45
    let mut _83: &std::string::String;   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let _84: std::string::String;        // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:20:48: 20:63
    let mut _85: &str;                   // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:20:48: 20:63
    let _86: &str;                       // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:20:48: 20:51
    let _87: &std::string::String;       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
    let _88: &std::string::String;       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
    let mut _89: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    let mut _90: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
    let mut _91: &std::string::String;   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
    let mut _92: &std::string::String;   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
    let _94: !;                          // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
    let mut _95: core::panicking::AssertKind; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
    let mut _96: &std::string::String;   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let _97: &std::string::String;       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let mut _98: &std::string::String;   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let _99: &std::string::String;       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let mut _100: std::option::Option<std::fmt::Arguments<'_>>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
    let mut _101: &[&str; 1];            // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:20:36: 20:42
    let mut _102: &main::c::E;           // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:19:44: 19:48
    let mut _103: &[&str; 1];            // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:19:36: 19:42
    let mut _104: &u16;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _105: &u16;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _106: &u16;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let mut _107: &usize;                // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _108: &usize;                // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    scope 1 {
        debug left_val => _4;            // in scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        debug right_val => _5;           // in scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        let _6: core::panicking::AssertKind; // in scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
        scope 2 {
            debug kind => _6;            // in scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
        }
    }
    scope 3 {
        debug left_val => _10;           // in scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        debug right_val => _11;          // in scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        let _12: core::panicking::AssertKind; // in scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
        scope 4 {
            debug kind => _12;           // in scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
        }
    }
    scope 5 {
        debug left_val => _20;           // in scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        debug right_val => _21;          // in scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        let _26: core::panicking::AssertKind; // in scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
        scope 6 {
            debug kind => _26;           // in scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
        }
    }
    scope 7 {
        debug res => _37;                // in scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:13: 118:16
    }
    scope 8 {
        debug left_val => _53;           // in scope 8 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        debug right_val => _54;          // in scope 8 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        let _59: core::panicking::AssertKind; // in scope 8 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
        scope 9 {
            debug kind => _59;           // in scope 9 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
        }
    }
    scope 10 {
        debug res => _70;                // in scope 10 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:13: 118:16
    }
    scope 11 {
        debug left_val => _87;           // in scope 11 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        debug right_val => _88;          // in scope 11 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        let _93: core::panicking::AssertKind; // in scope 11 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
        scope 12 {
            debug kind => _93;           // in scope 12 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
        }
    }

    bb0: {
        _108 = const _;                  // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
                                         // + literal: Const { ty: &usize, val: Unevaluated(c::check, [], Some(promoted[7])) }
        _2 = _108;                       // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _107 = const _;                  // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // + literal: Const { ty: &usize, val: Unevaluated(c::check, [], Some(promoted[6])) }
        _3 = _107;                       // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _1 = (move _2, move _3);         // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _4 = (_1.0: &usize);             // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _5 = (_1.1: &usize);             // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _106 = const _;                  // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
                                         // + literal: Const { ty: &u16, val: Unevaluated(c::check, [], Some(promoted[5])) }
        _8 = _106;                       // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _105 = const _;                  // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // + literal: Const { ty: &u16, val: Unevaluated(c::check, [], Some(promoted[4])) }
        _9 = _105;                       // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _7 = (move _8, move _9);         // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _10 = (_7.0: &u16);              // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _11 = (_7.1: &u16);              // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _16 = const 5927_isize;          // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:18:28: 18:29
        _17 = const true;                // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:18:28: 18:29
        assume(_17);                     // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:18:28: 18:29
        _18 = const true;                // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:18:28: 18:29
        assume(_18);                     // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:18:28: 18:29
        _15 = move _16 as u16 (IntToInt); // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:18:28: 18:29
        _14 = &_15;                      // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _104 = const _;                  // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // + literal: Const { ty: &u16, val: Unevaluated(c::check, [], Some(promoted[3])) }
        _19 = _104;                      // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _13 = (move _14, move _19);      // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _20 = (_13.0: &u16);             // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _21 = (_13.1: &u16);             // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _24 = (*_20);                    // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
        _25 = const 5927_u16;            // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
        _23 = Eq(move _24, move _25);    // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
        _22 = Not(move _23);             // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
        switchInt(move _22) -> [0: bb2, otherwise: bb1]; // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    }

    bb1: {
        _26 = const core::panicking::AssertKind::Eq; // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _28 = const core::panicking::AssertKind::Eq; // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _30 = _20;                       // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _29 = _30;                       // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _32 = _21;                       // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _31 = _32;                       // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _33 = Option::<Arguments<'_>>::None; // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
        _27 = core::panicking::assert_failed::<u16, u16>(move _28, move _29, move _31, move _33); // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:53
                                         // + literal: Const { ty: for<'a, 'b, 'c> fn(core::panicking::AssertKind, &'a u16, &'b u16, Option<Arguments<'c>>) -> ! {core::panicking::assert_failed::<u16, u16>}, val: Value(<ZST>) }
    }

    bb2: {
        _103 = const _;                  // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:19:36: 19:42
                                         // mir::Constant
                                         // + span: ui/struct-enums/enum-discrim-width-stuff.rs:19:36: 19:42
                                         // + literal: Const { ty: &[&str; 1], val: Unevaluated(c::check, [], Some(promoted[2])) }
        _41 = _103;                      // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:19:36: 19:42
        _40 = _41;                       // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:19:36: 19:42
        _39 = move _40 as &[&str] (Pointer(Unsize)); // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:19:36: 19:42
        _102 = const _;                  // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:19:44: 19:48
                                         // mir::Constant
                                         // + span: ui/struct-enums/enum-discrim-width-stuff.rs:19:44: 19:48
                                         // + literal: Const { ty: &c::E, val: Unevaluated(c::check, [], Some(promoted[1])) }
        _48 = _102;                      // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:19:44: 19:48
        _47 = _48;                       // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:19:44: 19:48
        _46 = core::fmt::ArgumentV1::<'_>::new_debug::<c::E>(move _47) -> bb3; // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:19:44: 19:48
                                         // mir::Constant
                                         // + span: ui/struct-enums/enum-discrim-width-stuff.rs:19:44: 19:48
                                         // + user_ty: UserType(1)
                                         // + literal: Const { ty: for<'b> fn(&'b c::E) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_debug::<c::E>}, val: Value(<ZST>) }
    }

    bb3: {
        _45 = [move _46];                // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
        _44 = &_45;                      // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
        _43 = _44;                       // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
        _42 = move _43 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
        _38 = Arguments::<'_>::new_v1(move _39, move _42) -> bb4; // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb4: {
        _37 = format(move _38) -> bb5;   // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:19: 118:80
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:19: 118:38
                                         // + literal: Const { ty: for<'a> fn(Arguments<'a>) -> String {format}, val: Value(<ZST>) }
    }

    bb5: {
        _36 = move _37;                  // scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:119:9: 119:12
        _35 = &_36;                      // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _52 = const "V";                 // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:19:51: 19:54
                                         // mir::Constant
                                         // + span: ui/struct-enums/enum-discrim-width-stuff.rs:19:51: 19:54
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _51 = _52;                       // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:19:51: 19:66
        _50 = <str as ToString>::to_string(move _51) -> [return: bb6, unwind: bb24]; // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:19:51: 19:66
                                         // mir::Constant
                                         // + span: ui/struct-enums/enum-discrim-width-stuff.rs:19:55: 19:64
                                         // + literal: Const { ty: for<'a> fn(&'a str) -> String {<str as ToString>::to_string}, val: Value(<ZST>) }
    }

    bb6: {
        _49 = &_50;                      // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _34 = (move _35, move _49);      // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _53 = (_34.0: &std::string::String); // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _54 = (_34.1: &std::string::String); // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _57 = _53;                       // scope 8 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
        _58 = _54;                       // scope 8 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
        _56 = <String as PartialEq>::eq(move _57, move _58) -> [return: bb7, unwind: bb23]; // scope 8 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a String, &'b String) -> bool {<String as PartialEq>::eq}, val: Value(<ZST>) }
    }

    bb7: {
        _55 = Not(move _56);             // scope 8 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
        switchInt(move _55) -> [0: bb9, otherwise: bb8]; // scope 8 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    }

    bb8: {
        _59 = const core::panicking::AssertKind::Eq; // scope 8 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _61 = const core::panicking::AssertKind::Eq; // scope 9 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _63 = _53;                       // scope 9 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _62 = _63;                       // scope 9 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _65 = _54;                       // scope 9 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _64 = _65;                       // scope 9 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _66 = Option::<Arguments<'_>>::None; // scope 9 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
        _60 = core::panicking::assert_failed::<String, String>(move _61, move _62, move _64, move _66) -> bb23; // scope 9 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:53
                                         // + literal: Const { ty: for<'a, 'b, 'c> fn(core::panicking::AssertKind, &'a String, &'b String, Option<Arguments<'c>>) -> ! {core::panicking::assert_failed::<String, String>}, val: Value(<ZST>) }
    }

    bb9: {
        drop(_50) -> [return: bb10, unwind: bb24]; // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:48:9: 48:10
    }

    bb10: {
        drop(_36) -> bb11;               // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:48:9: 48:10
    }

    bb11: {
        _101 = const _;                  // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:20:36: 20:42
                                         // mir::Constant
                                         // + span: ui/struct-enums/enum-discrim-width-stuff.rs:20:36: 20:42
                                         // + literal: Const { ty: &[&str; 1], val: Unevaluated(c::check, [], Some(promoted[0])) }
        _74 = _101;                      // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:20:36: 20:42
        _73 = _74;                       // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:20:36: 20:42
        _72 = move _73 as &[&str] (Pointer(Unsize)); // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:20:36: 20:42
        _82 = const {alloc27: &c::E};    // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:20:44: 20:45
                                         // mir::Constant
                                         // + span: ui/struct-enums/enum-discrim-width-stuff.rs:20:44: 20:45
                                         // + literal: Const { ty: &c::E, val: Value(Scalar(alloc27)) }
        _81 = _82;                       // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:20:44: 20:45
        _80 = _81;                       // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:20:44: 20:45
        _79 = core::fmt::ArgumentV1::<'_>::new_debug::<c::E>(move _80) -> bb12; // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:20:44: 20:45
                                         // mir::Constant
                                         // + span: ui/struct-enums/enum-discrim-width-stuff.rs:20:44: 20:45
                                         // + user_ty: UserType(3)
                                         // + literal: Const { ty: for<'b> fn(&'b c::E) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_debug::<c::E>}, val: Value(<ZST>) }
    }

    bb12: {
        _78 = [move _79];                // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
        _77 = &_78;                      // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
        _76 = _77;                       // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
        _75 = move _76 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
        _71 = Arguments::<'_>::new_v1(move _72, move _75) -> bb13; // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
                                         // + user_ty: UserType(2)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb13: {
        _70 = format(move _71) -> bb14;  // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:19: 118:80
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:19: 118:38
                                         // + literal: Const { ty: for<'a> fn(Arguments<'a>) -> String {format}, val: Value(<ZST>) }
    }

    bb14: {
        _69 = move _70;                  // scope 10 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:119:9: 119:12
        _68 = &_69;                      // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _86 = const "V";                 // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:20:48: 20:51
                                         // mir::Constant
                                         // + span: ui/struct-enums/enum-discrim-width-stuff.rs:20:48: 20:51
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _85 = _86;                       // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:20:48: 20:63
        _84 = <str as ToString>::to_string(move _85) -> [return: bb15, unwind: bb22]; // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:20:48: 20:63
                                         // mir::Constant
                                         // + span: ui/struct-enums/enum-discrim-width-stuff.rs:20:52: 20:61
                                         // + literal: Const { ty: for<'a> fn(&'a str) -> String {<str as ToString>::to_string}, val: Value(<ZST>) }
    }

    bb15: {
        _83 = &_84;                      // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _67 = (move _68, move _83);      // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _87 = (_67.0: &std::string::String); // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _88 = (_67.1: &std::string::String); // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _91 = _87;                       // scope 11 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
        _92 = _88;                       // scope 11 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
        _90 = <String as PartialEq>::eq(move _91, move _92) -> [return: bb16, unwind: bb21]; // scope 11 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a String, &'b String) -> bool {<String as PartialEq>::eq}, val: Value(<ZST>) }
    }

    bb16: {
        _89 = Not(move _90);             // scope 11 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
        switchInt(move _89) -> [0: bb18, otherwise: bb17]; // scope 11 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    }

    bb17: {
        _93 = const core::panicking::AssertKind::Eq; // scope 11 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _95 = const core::panicking::AssertKind::Eq; // scope 12 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _97 = _87;                       // scope 12 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _96 = _97;                       // scope 12 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _99 = _88;                       // scope 12 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _98 = _99;                       // scope 12 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _100 = Option::<Arguments<'_>>::None; // scope 12 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
        _94 = core::panicking::assert_failed::<String, String>(move _95, move _96, move _98, move _100) -> bb21; // scope 12 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:53
                                         // + literal: Const { ty: for<'a, 'b, 'c> fn(core::panicking::AssertKind, &'a String, &'b String, Option<Arguments<'c>>) -> ! {core::panicking::assert_failed::<String, String>}, val: Value(<ZST>) }
    }

    bb18: {
        drop(_84) -> [return: bb19, unwind: bb22]; // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:48:9: 48:10
    }

    bb19: {
        drop(_69) -> bb20;               // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:48:9: 48:10
    }

    bb20: {
        return;                          // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:21:14: 21:14
    }

    bb21 (cleanup): {
        drop(_84) -> bb22;               // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:48:9: 48:10
    }

    bb22 (cleanup): {
        drop(_69) -> bb25;               // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:48:9: 48:10
    }

    bb23 (cleanup): {
        drop(_50) -> bb24;               // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:48:9: 48:10
    }

    bb24 (cleanup): {
        drop(_36) -> bb25;               // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:48:9: 48:10
    }

    bb25 (cleanup): {
        resume;                          // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:15:13: 21:14
    }
}

alloc27 (static: c::C, size: 2, align: 2) {
    27 17                                           │ '.
}

promoted[0] in c::check: &[&str; 1] = {
    let mut _0: &[&str; 1];              // return place in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:20:36: 20:42
    let mut _1: [&str; 1];               // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:20:36: 20:42

    bb0: {
        _1 = [const ""];                 // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:20:36: 20:42
                                         // mir::Constant
                                         // + span: ui/struct-enums/enum-discrim-width-stuff.rs:20:36: 20:42
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:20:36: 20:42
        return;                          // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:20:36: 20:42
    }
}

promoted[1] in c::check: &c::E = {
    let mut _0: &main::c::E;             // return place in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:19:44: 19:48
    let mut _1: main::c::E;              // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:19:44: 19:48

    bb0: {
        _1 = c::E::V;                    // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:19:44: 19:48
        _0 = &_1;                        // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:19:44: 19:48
        return;                          // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:19:44: 19:48
    }
}

promoted[2] in c::check: &[&str; 1] = {
    let mut _0: &[&str; 1];              // return place in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:19:36: 19:42
    let mut _1: [&str; 1];               // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:19:36: 19:42

    bb0: {
        _1 = [const ""];                 // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:19:36: 19:42
                                         // mir::Constant
                                         // + span: ui/struct-enums/enum-discrim-width-stuff.rs:19:36: 19:42
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:19:36: 19:42
        return;                          // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:19:36: 19:42
    }
}

promoted[3] in c::check: &u16 = {
    let mut _0: &u16;                    // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _1: u16;                     // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:18:37: 18:39

    bb0: {
        _1 = const 5927_u16;             // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:30:20: 30:26
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    }
}

promoted[4] in c::check: &u16 = {
    let mut _0: &u16;                    // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _1: u16;                     // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:17:40: 17:42

    bb0: {
        _1 = const 5927_u16;             // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:30:20: 30:26
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    }
}

promoted[5] in c::check: &u16 = {
    let mut _0: &u16;                    // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let mut _1: u16;                     // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:17:28: 17:32
    let mut _2: isize;                   // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:17:28: 17:32
    let mut _3: (isize, bool);           // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:17:28: 17:32

    bb0: {
        _3 = CheckedAdd(const _, const 0_isize); // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:17:28: 17:32
        _2 = move (_3.0: isize);         // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:17:28: 17:32
        _1 = move _2 as u16 (IntToInt);  // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:17:28: 17:32
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    }
}

promoted[6] in c::check: &usize = {
    let mut _0: &usize;                  // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _1: usize;                   // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:16:44: 16:59

    bb0: {
        _1 = std::mem::size_of::<u16>() -> bb1; // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:16:44: 16:59
                                         // mir::Constant
                                         // + span: ui/struct-enums/enum-discrim-width-stuff.rs:16:44: 16:57
                                         // + literal: Const { ty: fn() -> usize {std::mem::size_of::<u16>}, val: Value(<ZST>) }
    }

    bb1: {
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    }
}

promoted[7] in c::check: &usize = {
    let mut _0: &usize;                  // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let mut _1: usize;                   // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:16:28: 16:42

    bb0: {
        _1 = std::mem::size_of::<c::E>() -> bb1; // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:16:28: 16:42
                                         // mir::Constant
                                         // + span: ui/struct-enums/enum-discrim-width-stuff.rs:16:28: 16:40
                                         // + literal: Const { ty: fn() -> usize {std::mem::size_of::<c::E>}, val: Value(<ZST>) }
    }

    bb1: {
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    }
}

d::E::V::{constant#0}: isize = {
    let mut _0: isize;                   // return place in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:31:20: 31:26

    bb0: {
        _0 = const 59608_isize;          // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:31:20: 31:26
        return;                          // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:31:20: 31:26
    }
}

d::E::A::{constant#0}: isize = {
    let mut _0: isize;                   // return place in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:12:21: 12:22

    bb0: {
        _0 = const 0_isize;              // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:12:21: 12:22
        return;                          // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:12:21: 12:22
    }
}

fn d::<impl at ui/struct-enums/enum-discrim-width-stuff.rs:9:28: 9:33>::clone(_1: &d::E) -> d::E {
    debug self => _1;                    // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:9:28: 9:33
    let mut _0: main::d::E;              // return place in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:9:28: 9:33

    bb0: {
        _0 = (*_1);                      // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:9:28: 9:33
        return;                          // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:9:33: 9:33
    }
}

fn d::<impl at ui/struct-enums/enum-discrim-width-stuff.rs:9:35: 9:40>::fmt(_1: &d::E, _2: &mut Formatter<'_>) -> Result<(), std::fmt::Error> {
    debug self => _1;                    // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:9:35: 9:40
    debug f => _2;                       // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:9:35: 9:40
    let mut _0: std::result::Result<(), std::fmt::Error>; // return place in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:9:35: 9:40
    let mut _3: &mut std::fmt::Formatter<'_>; // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:9:35: 9:40
    let mut _4: &str;                    // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:9:35: 9:40
    let mut _5: isize;                   // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:9:35: 9:40
    let _6: &str;                        // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:9:35: 9:40
    let _7: &str;                        // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:9:35: 9:40

    bb0: {
        _3 = &mut (*_2);                 // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:9:35: 9:40
        _5 = discriminant((*_1));        // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:9:35: 9:40
        switchInt(move _5) -> [59608: bb3, 0: bb1, otherwise: bb2]; // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:9:35: 9:40
    }

    bb1: {
        _7 = const "A";                  // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:9:35: 9:40
                                         // mir::Constant
                                         // + span: ui/struct-enums/enum-discrim-width-stuff.rs:9:35: 9:40
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _4 = _7;                         // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:9:35: 9:40
        goto -> bb4;                     // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:9:39: 9:40
    }

    bb2: {
        unreachable;                     // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:9:35: 9:40
    }

    bb3: {
        _6 = const "V";                  // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:9:35: 9:40
                                         // mir::Constant
                                         // + span: ui/struct-enums/enum-discrim-width-stuff.rs:9:35: 9:40
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _4 = _6;                         // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:9:35: 9:40
        goto -> bb4;                     // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:9:39: 9:40
    }

    bb4: {
        _0 = Formatter::<'_>::write_str(move _3, move _4) -> bb5; // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:9:35: 9:40
                                         // mir::Constant
                                         // + span: ui/struct-enums/enum-discrim-width-stuff.rs:9:35: 9:40
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a mut Formatter<'_>, &'b str) -> Result<(), std::fmt::Error> {Formatter::<'_>::write_str}, val: Value(<ZST>) }
    }

    bb5: {
        return;                          // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:9:40: 9:40
    }
}

static d::C: d::E = {
    let mut _0: main::d::E;              // return place in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:14:23: 14:24

    bb0: {
        _0 = d::E::V;                    // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:14:27: 14:31
        return;                          // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:14:13: 14:32
    }
}

fn d::check() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:15:28: 15:28
    let mut _1: (&usize, &usize);        // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _2: &usize;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let mut _3: &usize;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let _4: &usize;                      // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
    let _5: &usize;                      // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
    let mut _7: (&u16, &u16);            // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _8: &u16;                    // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let mut _9: &u16;                    // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let _10: &u16;                       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
    let _11: &u16;                       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
    let mut _13: (&u16, &u16);           // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _14: &u16;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let _15: u16;                        // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:18:28: 18:29
    let mut _16: isize;                  // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:18:28: 18:29
    let mut _17: bool;                   // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:18:28: 18:29
    let mut _18: bool;                   // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:18:28: 18:29
    let mut _19: &u16;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let _20: &u16;                       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
    let _21: &u16;                       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
    let mut _22: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    let mut _23: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
    let mut _24: u16;                    // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
    let mut _25: u16;                    // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
    let _27: !;                          // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
    let mut _28: core::panicking::AssertKind; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
    let mut _29: &u16;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let _30: &u16;                       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let mut _31: &u16;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let _32: &u16;                       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let mut _33: std::option::Option<std::fmt::Arguments<'_>>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
    let mut _34: (&std::string::String, &std::string::String); // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _35: &std::string::String;   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let _36: std::string::String;        // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:117:23: 120:6
    let _37: std::string::String;        // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:13: 118:16
    let mut _38: std::fmt::Arguments<'_>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
    let mut _39: &[&str];                // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:19:36: 19:42
    let mut _40: &[&str; 1];             // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:19:36: 19:42
    let _41: &[&str; 1];                 // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:19:36: 19:42
    let mut _42: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
    let mut _43: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
    let _44: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
    let _45: [core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
    let mut _46: core::fmt::ArgumentV1<'_>; // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:19:44: 19:48
    let mut _47: &main::d::E;            // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:19:44: 19:48
    let _48: &main::d::E;                // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:19:44: 19:48
    let mut _49: &std::string::String;   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let _50: std::string::String;        // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:19:51: 19:66
    let mut _51: &str;                   // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:19:51: 19:66
    let _52: &str;                       // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:19:51: 19:54
    let _53: &std::string::String;       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
    let _54: &std::string::String;       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
    let mut _55: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    let mut _56: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
    let mut _57: &std::string::String;   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
    let mut _58: &std::string::String;   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
    let _60: !;                          // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
    let mut _61: core::panicking::AssertKind; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
    let mut _62: &std::string::String;   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let _63: &std::string::String;       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let mut _64: &std::string::String;   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let _65: &std::string::String;       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let mut _66: std::option::Option<std::fmt::Arguments<'_>>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
    let mut _67: (&std::string::String, &std::string::String); // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _68: &std::string::String;   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let _69: std::string::String;        // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:117:23: 120:6
    let _70: std::string::String;        // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:13: 118:16
    let mut _71: std::fmt::Arguments<'_>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
    let mut _72: &[&str];                // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:20:36: 20:42
    let mut _73: &[&str; 1];             // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:20:36: 20:42
    let _74: &[&str; 1];                 // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:20:36: 20:42
    let mut _75: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
    let mut _76: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
    let _77: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
    let _78: [core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
    let mut _79: core::fmt::ArgumentV1<'_>; // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:20:44: 20:45
    let mut _80: &main::d::E;            // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:20:44: 20:45
    let _81: &main::d::E;                // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:20:44: 20:45
    let _82: &main::d::E;                // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:20:44: 20:45
    let mut _83: &std::string::String;   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let _84: std::string::String;        // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:20:48: 20:63
    let mut _85: &str;                   // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:20:48: 20:63
    let _86: &str;                       // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:20:48: 20:51
    let _87: &std::string::String;       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
    let _88: &std::string::String;       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
    let mut _89: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    let mut _90: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
    let mut _91: &std::string::String;   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
    let mut _92: &std::string::String;   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
    let _94: !;                          // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
    let mut _95: core::panicking::AssertKind; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
    let mut _96: &std::string::String;   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let _97: &std::string::String;       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let mut _98: &std::string::String;   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let _99: &std::string::String;       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let mut _100: std::option::Option<std::fmt::Arguments<'_>>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
    let mut _101: &[&str; 1];            // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:20:36: 20:42
    let mut _102: &main::d::E;           // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:19:44: 19:48
    let mut _103: &[&str; 1];            // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:19:36: 19:42
    let mut _104: &u16;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _105: &u16;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _106: &u16;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let mut _107: &usize;                // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _108: &usize;                // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    scope 1 {
        debug left_val => _4;            // in scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        debug right_val => _5;           // in scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        let _6: core::panicking::AssertKind; // in scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
        scope 2 {
            debug kind => _6;            // in scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
        }
    }
    scope 3 {
        debug left_val => _10;           // in scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        debug right_val => _11;          // in scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        let _12: core::panicking::AssertKind; // in scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
        scope 4 {
            debug kind => _12;           // in scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
        }
    }
    scope 5 {
        debug left_val => _20;           // in scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        debug right_val => _21;          // in scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        let _26: core::panicking::AssertKind; // in scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
        scope 6 {
            debug kind => _26;           // in scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
        }
    }
    scope 7 {
        debug res => _37;                // in scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:13: 118:16
    }
    scope 8 {
        debug left_val => _53;           // in scope 8 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        debug right_val => _54;          // in scope 8 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        let _59: core::panicking::AssertKind; // in scope 8 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
        scope 9 {
            debug kind => _59;           // in scope 9 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
        }
    }
    scope 10 {
        debug res => _70;                // in scope 10 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:13: 118:16
    }
    scope 11 {
        debug left_val => _87;           // in scope 11 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        debug right_val => _88;          // in scope 11 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        let _93: core::panicking::AssertKind; // in scope 11 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
        scope 12 {
            debug kind => _93;           // in scope 12 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
        }
    }

    bb0: {
        _108 = const _;                  // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
                                         // + literal: Const { ty: &usize, val: Unevaluated(d::check, [], Some(promoted[7])) }
        _2 = _108;                       // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _107 = const _;                  // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // + literal: Const { ty: &usize, val: Unevaluated(d::check, [], Some(promoted[6])) }
        _3 = _107;                       // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _1 = (move _2, move _3);         // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _4 = (_1.0: &usize);             // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _5 = (_1.1: &usize);             // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _106 = const _;                  // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
                                         // + literal: Const { ty: &u16, val: Unevaluated(d::check, [], Some(promoted[5])) }
        _8 = _106;                       // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _105 = const _;                  // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // + literal: Const { ty: &u16, val: Unevaluated(d::check, [], Some(promoted[4])) }
        _9 = _105;                       // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _7 = (move _8, move _9);         // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _10 = (_7.0: &u16);              // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _11 = (_7.1: &u16);              // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _16 = const 59608_isize;         // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:18:28: 18:29
        _17 = const true;                // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:18:28: 18:29
        assume(_17);                     // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:18:28: 18:29
        _18 = const true;                // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:18:28: 18:29
        assume(_18);                     // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:18:28: 18:29
        _15 = move _16 as u16 (IntToInt); // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:18:28: 18:29
        _14 = &_15;                      // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _104 = const _;                  // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // + literal: Const { ty: &u16, val: Unevaluated(d::check, [], Some(promoted[3])) }
        _19 = _104;                      // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _13 = (move _14, move _19);      // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _20 = (_13.0: &u16);             // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _21 = (_13.1: &u16);             // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _24 = (*_20);                    // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
        _25 = const 59608_u16;           // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
        _23 = Eq(move _24, move _25);    // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
        _22 = Not(move _23);             // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
        switchInt(move _22) -> [0: bb2, otherwise: bb1]; // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    }

    bb1: {
        _26 = const core::panicking::AssertKind::Eq; // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _28 = const core::panicking::AssertKind::Eq; // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _30 = _20;                       // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _29 = _30;                       // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _32 = _21;                       // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _31 = _32;                       // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _33 = Option::<Arguments<'_>>::None; // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
        _27 = core::panicking::assert_failed::<u16, u16>(move _28, move _29, move _31, move _33); // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:53
                                         // + literal: Const { ty: for<'a, 'b, 'c> fn(core::panicking::AssertKind, &'a u16, &'b u16, Option<Arguments<'c>>) -> ! {core::panicking::assert_failed::<u16, u16>}, val: Value(<ZST>) }
    }

    bb2: {
        _103 = const _;                  // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:19:36: 19:42
                                         // mir::Constant
                                         // + span: ui/struct-enums/enum-discrim-width-stuff.rs:19:36: 19:42
                                         // + literal: Const { ty: &[&str; 1], val: Unevaluated(d::check, [], Some(promoted[2])) }
        _41 = _103;                      // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:19:36: 19:42
        _40 = _41;                       // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:19:36: 19:42
        _39 = move _40 as &[&str] (Pointer(Unsize)); // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:19:36: 19:42
        _102 = const _;                  // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:19:44: 19:48
                                         // mir::Constant
                                         // + span: ui/struct-enums/enum-discrim-width-stuff.rs:19:44: 19:48
                                         // + literal: Const { ty: &d::E, val: Unevaluated(d::check, [], Some(promoted[1])) }
        _48 = _102;                      // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:19:44: 19:48
        _47 = _48;                       // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:19:44: 19:48
        _46 = core::fmt::ArgumentV1::<'_>::new_debug::<d::E>(move _47) -> bb3; // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:19:44: 19:48
                                         // mir::Constant
                                         // + span: ui/struct-enums/enum-discrim-width-stuff.rs:19:44: 19:48
                                         // + user_ty: UserType(1)
                                         // + literal: Const { ty: for<'b> fn(&'b d::E) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_debug::<d::E>}, val: Value(<ZST>) }
    }

    bb3: {
        _45 = [move _46];                // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
        _44 = &_45;                      // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
        _43 = _44;                       // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
        _42 = move _43 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
        _38 = Arguments::<'_>::new_v1(move _39, move _42) -> bb4; // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb4: {
        _37 = format(move _38) -> bb5;   // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:19: 118:80
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:19: 118:38
                                         // + literal: Const { ty: for<'a> fn(Arguments<'a>) -> String {format}, val: Value(<ZST>) }
    }

    bb5: {
        _36 = move _37;                  // scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:119:9: 119:12
        _35 = &_36;                      // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _52 = const "V";                 // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:19:51: 19:54
                                         // mir::Constant
                                         // + span: ui/struct-enums/enum-discrim-width-stuff.rs:19:51: 19:54
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _51 = _52;                       // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:19:51: 19:66
        _50 = <str as ToString>::to_string(move _51) -> [return: bb6, unwind: bb24]; // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:19:51: 19:66
                                         // mir::Constant
                                         // + span: ui/struct-enums/enum-discrim-width-stuff.rs:19:55: 19:64
                                         // + literal: Const { ty: for<'a> fn(&'a str) -> String {<str as ToString>::to_string}, val: Value(<ZST>) }
    }

    bb6: {
        _49 = &_50;                      // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _34 = (move _35, move _49);      // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _53 = (_34.0: &std::string::String); // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _54 = (_34.1: &std::string::String); // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _57 = _53;                       // scope 8 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
        _58 = _54;                       // scope 8 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
        _56 = <String as PartialEq>::eq(move _57, move _58) -> [return: bb7, unwind: bb23]; // scope 8 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a String, &'b String) -> bool {<String as PartialEq>::eq}, val: Value(<ZST>) }
    }

    bb7: {
        _55 = Not(move _56);             // scope 8 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
        switchInt(move _55) -> [0: bb9, otherwise: bb8]; // scope 8 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    }

    bb8: {
        _59 = const core::panicking::AssertKind::Eq; // scope 8 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _61 = const core::panicking::AssertKind::Eq; // scope 9 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _63 = _53;                       // scope 9 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _62 = _63;                       // scope 9 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _65 = _54;                       // scope 9 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _64 = _65;                       // scope 9 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _66 = Option::<Arguments<'_>>::None; // scope 9 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
        _60 = core::panicking::assert_failed::<String, String>(move _61, move _62, move _64, move _66) -> bb23; // scope 9 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:53
                                         // + literal: Const { ty: for<'a, 'b, 'c> fn(core::panicking::AssertKind, &'a String, &'b String, Option<Arguments<'c>>) -> ! {core::panicking::assert_failed::<String, String>}, val: Value(<ZST>) }
    }

    bb9: {
        drop(_50) -> [return: bb10, unwind: bb24]; // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:48:9: 48:10
    }

    bb10: {
        drop(_36) -> bb11;               // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:48:9: 48:10
    }

    bb11: {
        _101 = const _;                  // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:20:36: 20:42
                                         // mir::Constant
                                         // + span: ui/struct-enums/enum-discrim-width-stuff.rs:20:36: 20:42
                                         // + literal: Const { ty: &[&str; 1], val: Unevaluated(d::check, [], Some(promoted[0])) }
        _74 = _101;                      // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:20:36: 20:42
        _73 = _74;                       // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:20:36: 20:42
        _72 = move _73 as &[&str] (Pointer(Unsize)); // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:20:36: 20:42
        _82 = const {alloc28: &d::E};    // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:20:44: 20:45
                                         // mir::Constant
                                         // + span: ui/struct-enums/enum-discrim-width-stuff.rs:20:44: 20:45
                                         // + literal: Const { ty: &d::E, val: Value(Scalar(alloc28)) }
        _81 = _82;                       // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:20:44: 20:45
        _80 = _81;                       // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:20:44: 20:45
        _79 = core::fmt::ArgumentV1::<'_>::new_debug::<d::E>(move _80) -> bb12; // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:20:44: 20:45
                                         // mir::Constant
                                         // + span: ui/struct-enums/enum-discrim-width-stuff.rs:20:44: 20:45
                                         // + user_ty: UserType(3)
                                         // + literal: Const { ty: for<'b> fn(&'b d::E) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_debug::<d::E>}, val: Value(<ZST>) }
    }

    bb12: {
        _78 = [move _79];                // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
        _77 = &_78;                      // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
        _76 = _77;                       // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
        _75 = move _76 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
        _71 = Arguments::<'_>::new_v1(move _72, move _75) -> bb13; // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
                                         // + user_ty: UserType(2)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb13: {
        _70 = format(move _71) -> bb14;  // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:19: 118:80
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:19: 118:38
                                         // + literal: Const { ty: for<'a> fn(Arguments<'a>) -> String {format}, val: Value(<ZST>) }
    }

    bb14: {
        _69 = move _70;                  // scope 10 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:119:9: 119:12
        _68 = &_69;                      // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _86 = const "V";                 // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:20:48: 20:51
                                         // mir::Constant
                                         // + span: ui/struct-enums/enum-discrim-width-stuff.rs:20:48: 20:51
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _85 = _86;                       // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:20:48: 20:63
        _84 = <str as ToString>::to_string(move _85) -> [return: bb15, unwind: bb22]; // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:20:48: 20:63
                                         // mir::Constant
                                         // + span: ui/struct-enums/enum-discrim-width-stuff.rs:20:52: 20:61
                                         // + literal: Const { ty: for<'a> fn(&'a str) -> String {<str as ToString>::to_string}, val: Value(<ZST>) }
    }

    bb15: {
        _83 = &_84;                      // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _67 = (move _68, move _83);      // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _87 = (_67.0: &std::string::String); // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _88 = (_67.1: &std::string::String); // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _91 = _87;                       // scope 11 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
        _92 = _88;                       // scope 11 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
        _90 = <String as PartialEq>::eq(move _91, move _92) -> [return: bb16, unwind: bb21]; // scope 11 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a String, &'b String) -> bool {<String as PartialEq>::eq}, val: Value(<ZST>) }
    }

    bb16: {
        _89 = Not(move _90);             // scope 11 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
        switchInt(move _89) -> [0: bb18, otherwise: bb17]; // scope 11 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    }

    bb17: {
        _93 = const core::panicking::AssertKind::Eq; // scope 11 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _95 = const core::panicking::AssertKind::Eq; // scope 12 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _97 = _87;                       // scope 12 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _96 = _97;                       // scope 12 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _99 = _88;                       // scope 12 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _98 = _99;                       // scope 12 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _100 = Option::<Arguments<'_>>::None; // scope 12 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
        _94 = core::panicking::assert_failed::<String, String>(move _95, move _96, move _98, move _100) -> bb21; // scope 12 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:53
                                         // + literal: Const { ty: for<'a, 'b, 'c> fn(core::panicking::AssertKind, &'a String, &'b String, Option<Arguments<'c>>) -> ! {core::panicking::assert_failed::<String, String>}, val: Value(<ZST>) }
    }

    bb18: {
        drop(_84) -> [return: bb19, unwind: bb22]; // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:48:9: 48:10
    }

    bb19: {
        drop(_69) -> bb20;               // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:48:9: 48:10
    }

    bb20: {
        return;                          // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:21:14: 21:14
    }

    bb21 (cleanup): {
        drop(_84) -> bb22;               // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:48:9: 48:10
    }

    bb22 (cleanup): {
        drop(_69) -> bb25;               // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:48:9: 48:10
    }

    bb23 (cleanup): {
        drop(_50) -> bb24;               // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:48:9: 48:10
    }

    bb24 (cleanup): {
        drop(_36) -> bb25;               // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:48:9: 48:10
    }

    bb25 (cleanup): {
        resume;                          // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:15:13: 21:14
    }
}

alloc28 (static: d::C, size: 2, align: 2) {
    d8 e8                                           │ ..
}

promoted[0] in d::check: &[&str; 1] = {
    let mut _0: &[&str; 1];              // return place in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:20:36: 20:42
    let mut _1: [&str; 1];               // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:20:36: 20:42

    bb0: {
        _1 = [const ""];                 // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:20:36: 20:42
                                         // mir::Constant
                                         // + span: ui/struct-enums/enum-discrim-width-stuff.rs:20:36: 20:42
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:20:36: 20:42
        return;                          // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:20:36: 20:42
    }
}

promoted[1] in d::check: &d::E = {
    let mut _0: &main::d::E;             // return place in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:19:44: 19:48
    let mut _1: main::d::E;              // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:19:44: 19:48

    bb0: {
        _1 = d::E::V;                    // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:19:44: 19:48
        _0 = &_1;                        // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:19:44: 19:48
        return;                          // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:19:44: 19:48
    }
}

promoted[2] in d::check: &[&str; 1] = {
    let mut _0: &[&str; 1];              // return place in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:19:36: 19:42
    let mut _1: [&str; 1];               // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:19:36: 19:42

    bb0: {
        _1 = [const ""];                 // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:19:36: 19:42
                                         // mir::Constant
                                         // + span: ui/struct-enums/enum-discrim-width-stuff.rs:19:36: 19:42
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:19:36: 19:42
        return;                          // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:19:36: 19:42
    }
}

promoted[3] in d::check: &u16 = {
    let mut _0: &u16;                    // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _1: u16;                     // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:18:37: 18:39

    bb0: {
        _1 = const 59608_u16;            // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:31:20: 31:26
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    }
}

promoted[4] in d::check: &u16 = {
    let mut _0: &u16;                    // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _1: u16;                     // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:17:40: 17:42

    bb0: {
        _1 = const 59608_u16;            // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:31:20: 31:26
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    }
}

promoted[5] in d::check: &u16 = {
    let mut _0: &u16;                    // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let mut _1: u16;                     // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:17:28: 17:32
    let mut _2: isize;                   // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:17:28: 17:32
    let mut _3: (isize, bool);           // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:17:28: 17:32

    bb0: {
        _3 = CheckedAdd(const _, const 0_isize); // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:17:28: 17:32
        _2 = move (_3.0: isize);         // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:17:28: 17:32
        _1 = move _2 as u16 (IntToInt);  // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:17:28: 17:32
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    }
}

promoted[6] in d::check: &usize = {
    let mut _0: &usize;                  // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _1: usize;                   // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:16:44: 16:59

    bb0: {
        _1 = std::mem::size_of::<u16>() -> bb1; // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:16:44: 16:59
                                         // mir::Constant
                                         // + span: ui/struct-enums/enum-discrim-width-stuff.rs:16:44: 16:57
                                         // + literal: Const { ty: fn() -> usize {std::mem::size_of::<u16>}, val: Value(<ZST>) }
    }

    bb1: {
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    }
}

promoted[7] in d::check: &usize = {
    let mut _0: &usize;                  // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let mut _1: usize;                   // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:16:28: 16:42

    bb0: {
        _1 = std::mem::size_of::<d::E>() -> bb1; // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:16:28: 16:42
                                         // mir::Constant
                                         // + span: ui/struct-enums/enum-discrim-width-stuff.rs:16:28: 16:40
                                         // + literal: Const { ty: fn() -> usize {std::mem::size_of::<d::E>}, val: Value(<ZST>) }
    }

    bb1: {
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    }
}

e::E::V::{constant#0}: isize = {
    let mut _0: isize;                   // return place in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:32:20: 32:30

    bb0: {
        _0 = const 388446023_isize;      // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:32:20: 32:30
        return;                          // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:32:20: 32:30
    }
}

e::E::A::{constant#0}: isize = {
    let mut _0: isize;                   // return place in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:12:21: 12:22

    bb0: {
        _0 = const 0_isize;              // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:12:21: 12:22
        return;                          // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:12:21: 12:22
    }
}

fn e::<impl at ui/struct-enums/enum-discrim-width-stuff.rs:9:28: 9:33>::clone(_1: &e::E) -> e::E {
    debug self => _1;                    // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:9:28: 9:33
    let mut _0: main::e::E;              // return place in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:9:28: 9:33

    bb0: {
        _0 = (*_1);                      // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:9:28: 9:33
        return;                          // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:9:33: 9:33
    }
}

fn e::<impl at ui/struct-enums/enum-discrim-width-stuff.rs:9:35: 9:40>::fmt(_1: &e::E, _2: &mut Formatter<'_>) -> Result<(), std::fmt::Error> {
    debug self => _1;                    // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:9:35: 9:40
    debug f => _2;                       // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:9:35: 9:40
    let mut _0: std::result::Result<(), std::fmt::Error>; // return place in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:9:35: 9:40
    let mut _3: &mut std::fmt::Formatter<'_>; // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:9:35: 9:40
    let mut _4: &str;                    // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:9:35: 9:40
    let mut _5: isize;                   // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:9:35: 9:40
    let _6: &str;                        // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:9:35: 9:40
    let _7: &str;                        // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:9:35: 9:40

    bb0: {
        _3 = &mut (*_2);                 // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:9:35: 9:40
        _5 = discriminant((*_1));        // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:9:35: 9:40
        switchInt(move _5) -> [388446023: bb3, 0: bb1, otherwise: bb2]; // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:9:35: 9:40
    }

    bb1: {
        _7 = const "A";                  // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:9:35: 9:40
                                         // mir::Constant
                                         // + span: ui/struct-enums/enum-discrim-width-stuff.rs:9:35: 9:40
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _4 = _7;                         // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:9:35: 9:40
        goto -> bb4;                     // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:9:39: 9:40
    }

    bb2: {
        unreachable;                     // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:9:35: 9:40
    }

    bb3: {
        _6 = const "V";                  // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:9:35: 9:40
                                         // mir::Constant
                                         // + span: ui/struct-enums/enum-discrim-width-stuff.rs:9:35: 9:40
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _4 = _6;                         // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:9:35: 9:40
        goto -> bb4;                     // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:9:39: 9:40
    }

    bb4: {
        _0 = Formatter::<'_>::write_str(move _3, move _4) -> bb5; // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:9:35: 9:40
                                         // mir::Constant
                                         // + span: ui/struct-enums/enum-discrim-width-stuff.rs:9:35: 9:40
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a mut Formatter<'_>, &'b str) -> Result<(), std::fmt::Error> {Formatter::<'_>::write_str}, val: Value(<ZST>) }
    }

    bb5: {
        return;                          // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:9:40: 9:40
    }
}

static e::C: e::E = {
    let mut _0: main::e::E;              // return place in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:14:23: 14:24

    bb0: {
        _0 = e::E::V;                    // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:14:27: 14:31
        return;                          // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:14:13: 14:32
    }
}

fn e::check() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:15:28: 15:28
    let mut _1: (&usize, &usize);        // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _2: &usize;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let mut _3: &usize;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let _4: &usize;                      // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
    let _5: &usize;                      // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
    let mut _7: (&u32, &u32);            // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _8: &u32;                    // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let mut _9: &u32;                    // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let _10: &u32;                       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
    let _11: &u32;                       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
    let mut _13: (&u32, &u32);           // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _14: &u32;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let _15: u32;                        // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:18:28: 18:29
    let mut _16: isize;                  // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:18:28: 18:29
    let mut _17: bool;                   // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:18:28: 18:29
    let mut _18: bool;                   // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:18:28: 18:29
    let mut _19: &u32;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let _20: &u32;                       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
    let _21: &u32;                       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
    let mut _22: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    let mut _23: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
    let mut _24: u32;                    // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
    let mut _25: u32;                    // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
    let _27: !;                          // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
    let mut _28: core::panicking::AssertKind; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
    let mut _29: &u32;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let _30: &u32;                       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let mut _31: &u32;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let _32: &u32;                       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let mut _33: std::option::Option<std::fmt::Arguments<'_>>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
    let mut _34: (&std::string::String, &std::string::String); // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _35: &std::string::String;   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let _36: std::string::String;        // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:117:23: 120:6
    let _37: std::string::String;        // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:13: 118:16
    let mut _38: std::fmt::Arguments<'_>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
    let mut _39: &[&str];                // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:19:36: 19:42
    let mut _40: &[&str; 1];             // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:19:36: 19:42
    let _41: &[&str; 1];                 // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:19:36: 19:42
    let mut _42: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
    let mut _43: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
    let _44: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
    let _45: [core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
    let mut _46: core::fmt::ArgumentV1<'_>; // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:19:44: 19:48
    let mut _47: &main::e::E;            // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:19:44: 19:48
    let _48: &main::e::E;                // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:19:44: 19:48
    let mut _49: &std::string::String;   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let _50: std::string::String;        // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:19:51: 19:66
    let mut _51: &str;                   // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:19:51: 19:66
    let _52: &str;                       // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:19:51: 19:54
    let _53: &std::string::String;       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
    let _54: &std::string::String;       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
    let mut _55: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    let mut _56: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
    let mut _57: &std::string::String;   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
    let mut _58: &std::string::String;   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
    let _60: !;                          // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
    let mut _61: core::panicking::AssertKind; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
    let mut _62: &std::string::String;   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let _63: &std::string::String;       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let mut _64: &std::string::String;   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let _65: &std::string::String;       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let mut _66: std::option::Option<std::fmt::Arguments<'_>>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
    let mut _67: (&std::string::String, &std::string::String); // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _68: &std::string::String;   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let _69: std::string::String;        // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:117:23: 120:6
    let _70: std::string::String;        // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:13: 118:16
    let mut _71: std::fmt::Arguments<'_>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
    let mut _72: &[&str];                // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:20:36: 20:42
    let mut _73: &[&str; 1];             // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:20:36: 20:42
    let _74: &[&str; 1];                 // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:20:36: 20:42
    let mut _75: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
    let mut _76: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
    let _77: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
    let _78: [core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
    let mut _79: core::fmt::ArgumentV1<'_>; // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:20:44: 20:45
    let mut _80: &main::e::E;            // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:20:44: 20:45
    let _81: &main::e::E;                // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:20:44: 20:45
    let _82: &main::e::E;                // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:20:44: 20:45
    let mut _83: &std::string::String;   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let _84: std::string::String;        // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:20:48: 20:63
    let mut _85: &str;                   // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:20:48: 20:63
    let _86: &str;                       // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:20:48: 20:51
    let _87: &std::string::String;       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
    let _88: &std::string::String;       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
    let mut _89: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    let mut _90: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
    let mut _91: &std::string::String;   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
    let mut _92: &std::string::String;   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
    let _94: !;                          // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
    let mut _95: core::panicking::AssertKind; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
    let mut _96: &std::string::String;   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let _97: &std::string::String;       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let mut _98: &std::string::String;   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let _99: &std::string::String;       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let mut _100: std::option::Option<std::fmt::Arguments<'_>>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
    let mut _101: &[&str; 1];            // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:20:36: 20:42
    let mut _102: &main::e::E;           // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:19:44: 19:48
    let mut _103: &[&str; 1];            // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:19:36: 19:42
    let mut _104: &u32;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _105: &u32;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _106: &u32;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let mut _107: &usize;                // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _108: &usize;                // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    scope 1 {
        debug left_val => _4;            // in scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        debug right_val => _5;           // in scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        let _6: core::panicking::AssertKind; // in scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
        scope 2 {
            debug kind => _6;            // in scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
        }
    }
    scope 3 {
        debug left_val => _10;           // in scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        debug right_val => _11;          // in scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        let _12: core::panicking::AssertKind; // in scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
        scope 4 {
            debug kind => _12;           // in scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
        }
    }
    scope 5 {
        debug left_val => _20;           // in scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        debug right_val => _21;          // in scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        let _26: core::panicking::AssertKind; // in scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
        scope 6 {
            debug kind => _26;           // in scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
        }
    }
    scope 7 {
        debug res => _37;                // in scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:13: 118:16
    }
    scope 8 {
        debug left_val => _53;           // in scope 8 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        debug right_val => _54;          // in scope 8 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        let _59: core::panicking::AssertKind; // in scope 8 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
        scope 9 {
            debug kind => _59;           // in scope 9 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
        }
    }
    scope 10 {
        debug res => _70;                // in scope 10 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:13: 118:16
    }
    scope 11 {
        debug left_val => _87;           // in scope 11 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        debug right_val => _88;          // in scope 11 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        let _93: core::panicking::AssertKind; // in scope 11 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
        scope 12 {
            debug kind => _93;           // in scope 12 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
        }
    }

    bb0: {
        _108 = const _;                  // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
                                         // + literal: Const { ty: &usize, val: Unevaluated(e::check, [], Some(promoted[7])) }
        _2 = _108;                       // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _107 = const _;                  // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // + literal: Const { ty: &usize, val: Unevaluated(e::check, [], Some(promoted[6])) }
        _3 = _107;                       // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _1 = (move _2, move _3);         // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _4 = (_1.0: &usize);             // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _5 = (_1.1: &usize);             // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _106 = const _;                  // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
                                         // + literal: Const { ty: &u32, val: Unevaluated(e::check, [], Some(promoted[5])) }
        _8 = _106;                       // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _105 = const _;                  // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // + literal: Const { ty: &u32, val: Unevaluated(e::check, [], Some(promoted[4])) }
        _9 = _105;                       // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _7 = (move _8, move _9);         // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _10 = (_7.0: &u32);              // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _11 = (_7.1: &u32);              // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _16 = const 388446023_isize;     // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:18:28: 18:29
        _17 = const true;                // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:18:28: 18:29
        assume(_17);                     // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:18:28: 18:29
        _18 = const true;                // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:18:28: 18:29
        assume(_18);                     // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:18:28: 18:29
        _15 = move _16 as u32 (IntToInt); // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:18:28: 18:29
        _14 = &_15;                      // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _104 = const _;                  // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // + literal: Const { ty: &u32, val: Unevaluated(e::check, [], Some(promoted[3])) }
        _19 = _104;                      // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _13 = (move _14, move _19);      // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _20 = (_13.0: &u32);             // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _21 = (_13.1: &u32);             // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _24 = (*_20);                    // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
        _25 = const 388446023_u32;       // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
        _23 = Eq(move _24, move _25);    // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
        _22 = Not(move _23);             // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
        switchInt(move _22) -> [0: bb2, otherwise: bb1]; // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    }

    bb1: {
        _26 = const core::panicking::AssertKind::Eq; // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _28 = const core::panicking::AssertKind::Eq; // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _30 = _20;                       // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _29 = _30;                       // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _32 = _21;                       // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _31 = _32;                       // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _33 = Option::<Arguments<'_>>::None; // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
        _27 = core::panicking::assert_failed::<u32, u32>(move _28, move _29, move _31, move _33); // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:53
                                         // + literal: Const { ty: for<'a, 'b, 'c> fn(core::panicking::AssertKind, &'a u32, &'b u32, Option<Arguments<'c>>) -> ! {core::panicking::assert_failed::<u32, u32>}, val: Value(<ZST>) }
    }

    bb2: {
        _103 = const _;                  // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:19:36: 19:42
                                         // mir::Constant
                                         // + span: ui/struct-enums/enum-discrim-width-stuff.rs:19:36: 19:42
                                         // + literal: Const { ty: &[&str; 1], val: Unevaluated(e::check, [], Some(promoted[2])) }
        _41 = _103;                      // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:19:36: 19:42
        _40 = _41;                       // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:19:36: 19:42
        _39 = move _40 as &[&str] (Pointer(Unsize)); // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:19:36: 19:42
        _102 = const _;                  // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:19:44: 19:48
                                         // mir::Constant
                                         // + span: ui/struct-enums/enum-discrim-width-stuff.rs:19:44: 19:48
                                         // + literal: Const { ty: &e::E, val: Unevaluated(e::check, [], Some(promoted[1])) }
        _48 = _102;                      // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:19:44: 19:48
        _47 = _48;                       // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:19:44: 19:48
        _46 = core::fmt::ArgumentV1::<'_>::new_debug::<e::E>(move _47) -> bb3; // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:19:44: 19:48
                                         // mir::Constant
                                         // + span: ui/struct-enums/enum-discrim-width-stuff.rs:19:44: 19:48
                                         // + user_ty: UserType(1)
                                         // + literal: Const { ty: for<'b> fn(&'b e::E) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_debug::<e::E>}, val: Value(<ZST>) }
    }

    bb3: {
        _45 = [move _46];                // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
        _44 = &_45;                      // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
        _43 = _44;                       // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
        _42 = move _43 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
        _38 = Arguments::<'_>::new_v1(move _39, move _42) -> bb4; // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb4: {
        _37 = format(move _38) -> bb5;   // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:19: 118:80
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:19: 118:38
                                         // + literal: Const { ty: for<'a> fn(Arguments<'a>) -> String {format}, val: Value(<ZST>) }
    }

    bb5: {
        _36 = move _37;                  // scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:119:9: 119:12
        _35 = &_36;                      // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _52 = const "V";                 // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:19:51: 19:54
                                         // mir::Constant
                                         // + span: ui/struct-enums/enum-discrim-width-stuff.rs:19:51: 19:54
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _51 = _52;                       // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:19:51: 19:66
        _50 = <str as ToString>::to_string(move _51) -> [return: bb6, unwind: bb24]; // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:19:51: 19:66
                                         // mir::Constant
                                         // + span: ui/struct-enums/enum-discrim-width-stuff.rs:19:55: 19:64
                                         // + literal: Const { ty: for<'a> fn(&'a str) -> String {<str as ToString>::to_string}, val: Value(<ZST>) }
    }

    bb6: {
        _49 = &_50;                      // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _34 = (move _35, move _49);      // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _53 = (_34.0: &std::string::String); // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _54 = (_34.1: &std::string::String); // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _57 = _53;                       // scope 8 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
        _58 = _54;                       // scope 8 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
        _56 = <String as PartialEq>::eq(move _57, move _58) -> [return: bb7, unwind: bb23]; // scope 8 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a String, &'b String) -> bool {<String as PartialEq>::eq}, val: Value(<ZST>) }
    }

    bb7: {
        _55 = Not(move _56);             // scope 8 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
        switchInt(move _55) -> [0: bb9, otherwise: bb8]; // scope 8 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    }

    bb8: {
        _59 = const core::panicking::AssertKind::Eq; // scope 8 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _61 = const core::panicking::AssertKind::Eq; // scope 9 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _63 = _53;                       // scope 9 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _62 = _63;                       // scope 9 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _65 = _54;                       // scope 9 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _64 = _65;                       // scope 9 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _66 = Option::<Arguments<'_>>::None; // scope 9 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
        _60 = core::panicking::assert_failed::<String, String>(move _61, move _62, move _64, move _66) -> bb23; // scope 9 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:53
                                         // + literal: Const { ty: for<'a, 'b, 'c> fn(core::panicking::AssertKind, &'a String, &'b String, Option<Arguments<'c>>) -> ! {core::panicking::assert_failed::<String, String>}, val: Value(<ZST>) }
    }

    bb9: {
        drop(_50) -> [return: bb10, unwind: bb24]; // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:48:9: 48:10
    }

    bb10: {
        drop(_36) -> bb11;               // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:48:9: 48:10
    }

    bb11: {
        _101 = const _;                  // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:20:36: 20:42
                                         // mir::Constant
                                         // + span: ui/struct-enums/enum-discrim-width-stuff.rs:20:36: 20:42
                                         // + literal: Const { ty: &[&str; 1], val: Unevaluated(e::check, [], Some(promoted[0])) }
        _74 = _101;                      // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:20:36: 20:42
        _73 = _74;                       // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:20:36: 20:42
        _72 = move _73 as &[&str] (Pointer(Unsize)); // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:20:36: 20:42
        _82 = const {alloc29: &e::E};    // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:20:44: 20:45
                                         // mir::Constant
                                         // + span: ui/struct-enums/enum-discrim-width-stuff.rs:20:44: 20:45
                                         // + literal: Const { ty: &e::E, val: Value(Scalar(alloc29)) }
        _81 = _82;                       // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:20:44: 20:45
        _80 = _81;                       // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:20:44: 20:45
        _79 = core::fmt::ArgumentV1::<'_>::new_debug::<e::E>(move _80) -> bb12; // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:20:44: 20:45
                                         // mir::Constant
                                         // + span: ui/struct-enums/enum-discrim-width-stuff.rs:20:44: 20:45
                                         // + user_ty: UserType(3)
                                         // + literal: Const { ty: for<'b> fn(&'b e::E) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_debug::<e::E>}, val: Value(<ZST>) }
    }

    bb12: {
        _78 = [move _79];                // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
        _77 = &_78;                      // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
        _76 = _77;                       // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
        _75 = move _76 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
        _71 = Arguments::<'_>::new_v1(move _72, move _75) -> bb13; // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
                                         // + user_ty: UserType(2)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb13: {
        _70 = format(move _71) -> bb14;  // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:19: 118:80
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:19: 118:38
                                         // + literal: Const { ty: for<'a> fn(Arguments<'a>) -> String {format}, val: Value(<ZST>) }
    }

    bb14: {
        _69 = move _70;                  // scope 10 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:119:9: 119:12
        _68 = &_69;                      // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _86 = const "V";                 // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:20:48: 20:51
                                         // mir::Constant
                                         // + span: ui/struct-enums/enum-discrim-width-stuff.rs:20:48: 20:51
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _85 = _86;                       // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:20:48: 20:63
        _84 = <str as ToString>::to_string(move _85) -> [return: bb15, unwind: bb22]; // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:20:48: 20:63
                                         // mir::Constant
                                         // + span: ui/struct-enums/enum-discrim-width-stuff.rs:20:52: 20:61
                                         // + literal: Const { ty: for<'a> fn(&'a str) -> String {<str as ToString>::to_string}, val: Value(<ZST>) }
    }

    bb15: {
        _83 = &_84;                      // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _67 = (move _68, move _83);      // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _87 = (_67.0: &std::string::String); // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _88 = (_67.1: &std::string::String); // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _91 = _87;                       // scope 11 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
        _92 = _88;                       // scope 11 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
        _90 = <String as PartialEq>::eq(move _91, move _92) -> [return: bb16, unwind: bb21]; // scope 11 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a String, &'b String) -> bool {<String as PartialEq>::eq}, val: Value(<ZST>) }
    }

    bb16: {
        _89 = Not(move _90);             // scope 11 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
        switchInt(move _89) -> [0: bb18, otherwise: bb17]; // scope 11 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    }

    bb17: {
        _93 = const core::panicking::AssertKind::Eq; // scope 11 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _95 = const core::panicking::AssertKind::Eq; // scope 12 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _97 = _87;                       // scope 12 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _96 = _97;                       // scope 12 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _99 = _88;                       // scope 12 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _98 = _99;                       // scope 12 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _100 = Option::<Arguments<'_>>::None; // scope 12 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
        _94 = core::panicking::assert_failed::<String, String>(move _95, move _96, move _98, move _100) -> bb21; // scope 12 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:53
                                         // + literal: Const { ty: for<'a, 'b, 'c> fn(core::panicking::AssertKind, &'a String, &'b String, Option<Arguments<'c>>) -> ! {core::panicking::assert_failed::<String, String>}, val: Value(<ZST>) }
    }

    bb18: {
        drop(_84) -> [return: bb19, unwind: bb22]; // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:48:9: 48:10
    }

    bb19: {
        drop(_69) -> bb20;               // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:48:9: 48:10
    }

    bb20: {
        return;                          // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:21:14: 21:14
    }

    bb21 (cleanup): {
        drop(_84) -> bb22;               // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:48:9: 48:10
    }

    bb22 (cleanup): {
        drop(_69) -> bb25;               // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:48:9: 48:10
    }

    bb23 (cleanup): {
        drop(_50) -> bb24;               // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:48:9: 48:10
    }

    bb24 (cleanup): {
        drop(_36) -> bb25;               // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:48:9: 48:10
    }

    bb25 (cleanup): {
        resume;                          // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:15:13: 21:14
    }
}

alloc29 (static: e::C, size: 4, align: 4) {
    47 37 27 17                                     │ G7'.
}

promoted[0] in e::check: &[&str; 1] = {
    let mut _0: &[&str; 1];              // return place in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:20:36: 20:42
    let mut _1: [&str; 1];               // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:20:36: 20:42

    bb0: {
        _1 = [const ""];                 // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:20:36: 20:42
                                         // mir::Constant
                                         // + span: ui/struct-enums/enum-discrim-width-stuff.rs:20:36: 20:42
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:20:36: 20:42
        return;                          // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:20:36: 20:42
    }
}

promoted[1] in e::check: &e::E = {
    let mut _0: &main::e::E;             // return place in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:19:44: 19:48
    let mut _1: main::e::E;              // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:19:44: 19:48

    bb0: {
        _1 = e::E::V;                    // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:19:44: 19:48
        _0 = &_1;                        // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:19:44: 19:48
        return;                          // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:19:44: 19:48
    }
}

promoted[2] in e::check: &[&str; 1] = {
    let mut _0: &[&str; 1];              // return place in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:19:36: 19:42
    let mut _1: [&str; 1];               // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:19:36: 19:42

    bb0: {
        _1 = [const ""];                 // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:19:36: 19:42
                                         // mir::Constant
                                         // + span: ui/struct-enums/enum-discrim-width-stuff.rs:19:36: 19:42
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:19:36: 19:42
        return;                          // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:19:36: 19:42
    }
}

promoted[3] in e::check: &u32 = {
    let mut _0: &u32;                    // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _1: u32;                     // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:18:37: 18:39

    bb0: {
        _1 = const 388446023_u32;        // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:32:20: 32:30
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    }
}

promoted[4] in e::check: &u32 = {
    let mut _0: &u32;                    // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _1: u32;                     // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:17:40: 17:42

    bb0: {
        _1 = const 388446023_u32;        // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:32:20: 32:30
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    }
}

promoted[5] in e::check: &u32 = {
    let mut _0: &u32;                    // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let mut _1: u32;                     // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:17:28: 17:32
    let mut _2: isize;                   // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:17:28: 17:32
    let mut _3: (isize, bool);           // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:17:28: 17:32

    bb0: {
        _3 = CheckedAdd(const _, const 0_isize); // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:17:28: 17:32
        _2 = move (_3.0: isize);         // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:17:28: 17:32
        _1 = move _2 as u32 (IntToInt);  // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:17:28: 17:32
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    }
}

promoted[6] in e::check: &usize = {
    let mut _0: &usize;                  // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _1: usize;                   // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:16:44: 16:59

    bb0: {
        _1 = std::mem::size_of::<u32>() -> bb1; // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:16:44: 16:59
                                         // mir::Constant
                                         // + span: ui/struct-enums/enum-discrim-width-stuff.rs:16:44: 16:57
                                         // + literal: Const { ty: fn() -> usize {std::mem::size_of::<u32>}, val: Value(<ZST>) }
    }

    bb1: {
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    }
}

promoted[7] in e::check: &usize = {
    let mut _0: &usize;                  // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let mut _1: usize;                   // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:16:28: 16:42

    bb0: {
        _1 = std::mem::size_of::<e::E>() -> bb1; // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:16:28: 16:42
                                         // mir::Constant
                                         // + span: ui/struct-enums/enum-discrim-width-stuff.rs:16:28: 16:40
                                         // + literal: Const { ty: fn() -> usize {std::mem::size_of::<e::E>}, val: Value(<ZST>) }
    }

    bb1: {
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    }
}

f::E::V::{constant#0}: isize = {
    let mut _0: isize;                   // return place in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:33:20: 33:30

    bb0: {
        _0 = const 3906521272_isize;     // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:33:20: 33:30
        return;                          // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:33:20: 33:30
    }
}

f::E::A::{constant#0}: isize = {
    let mut _0: isize;                   // return place in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:12:21: 12:22

    bb0: {
        _0 = const 0_isize;              // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:12:21: 12:22
        return;                          // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:12:21: 12:22
    }
}

fn f::<impl at ui/struct-enums/enum-discrim-width-stuff.rs:9:28: 9:33>::clone(_1: &f::E) -> f::E {
    debug self => _1;                    // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:9:28: 9:33
    let mut _0: main::f::E;              // return place in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:9:28: 9:33

    bb0: {
        _0 = (*_1);                      // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:9:28: 9:33
        return;                          // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:9:33: 9:33
    }
}

fn f::<impl at ui/struct-enums/enum-discrim-width-stuff.rs:9:35: 9:40>::fmt(_1: &f::E, _2: &mut Formatter<'_>) -> Result<(), std::fmt::Error> {
    debug self => _1;                    // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:9:35: 9:40
    debug f => _2;                       // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:9:35: 9:40
    let mut _0: std::result::Result<(), std::fmt::Error>; // return place in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:9:35: 9:40
    let mut _3: &mut std::fmt::Formatter<'_>; // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:9:35: 9:40
    let mut _4: &str;                    // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:9:35: 9:40
    let mut _5: isize;                   // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:9:35: 9:40
    let _6: &str;                        // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:9:35: 9:40
    let _7: &str;                        // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:9:35: 9:40

    bb0: {
        _3 = &mut (*_2);                 // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:9:35: 9:40
        _5 = discriminant((*_1));        // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:9:35: 9:40
        switchInt(move _5) -> [3906521272: bb3, 0: bb1, otherwise: bb2]; // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:9:35: 9:40
    }

    bb1: {
        _7 = const "A";                  // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:9:35: 9:40
                                         // mir::Constant
                                         // + span: ui/struct-enums/enum-discrim-width-stuff.rs:9:35: 9:40
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _4 = _7;                         // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:9:35: 9:40
        goto -> bb4;                     // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:9:39: 9:40
    }

    bb2: {
        unreachable;                     // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:9:35: 9:40
    }

    bb3: {
        _6 = const "V";                  // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:9:35: 9:40
                                         // mir::Constant
                                         // + span: ui/struct-enums/enum-discrim-width-stuff.rs:9:35: 9:40
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _4 = _6;                         // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:9:35: 9:40
        goto -> bb4;                     // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:9:39: 9:40
    }

    bb4: {
        _0 = Formatter::<'_>::write_str(move _3, move _4) -> bb5; // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:9:35: 9:40
                                         // mir::Constant
                                         // + span: ui/struct-enums/enum-discrim-width-stuff.rs:9:35: 9:40
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a mut Formatter<'_>, &'b str) -> Result<(), std::fmt::Error> {Formatter::<'_>::write_str}, val: Value(<ZST>) }
    }

    bb5: {
        return;                          // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:9:40: 9:40
    }
}

static f::C: f::E = {
    let mut _0: main::f::E;              // return place in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:14:23: 14:24

    bb0: {
        _0 = f::E::V;                    // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:14:27: 14:31
        return;                          // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:14:13: 14:32
    }
}

fn f::check() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:15:28: 15:28
    let mut _1: (&usize, &usize);        // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _2: &usize;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let mut _3: &usize;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let _4: &usize;                      // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
    let _5: &usize;                      // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
    let mut _7: (&u32, &u32);            // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _8: &u32;                    // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let mut _9: &u32;                    // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let _10: &u32;                       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
    let _11: &u32;                       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
    let mut _13: (&u32, &u32);           // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _14: &u32;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let _15: u32;                        // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:18:28: 18:29
    let mut _16: isize;                  // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:18:28: 18:29
    let mut _17: bool;                   // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:18:28: 18:29
    let mut _18: bool;                   // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:18:28: 18:29
    let mut _19: &u32;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let _20: &u32;                       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
    let _21: &u32;                       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
    let mut _22: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    let mut _23: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
    let mut _24: u32;                    // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
    let mut _25: u32;                    // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
    let _27: !;                          // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
    let mut _28: core::panicking::AssertKind; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
    let mut _29: &u32;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let _30: &u32;                       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let mut _31: &u32;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let _32: &u32;                       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let mut _33: std::option::Option<std::fmt::Arguments<'_>>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
    let mut _34: (&std::string::String, &std::string::String); // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _35: &std::string::String;   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let _36: std::string::String;        // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:117:23: 120:6
    let _37: std::string::String;        // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:13: 118:16
    let mut _38: std::fmt::Arguments<'_>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
    let mut _39: &[&str];                // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:19:36: 19:42
    let mut _40: &[&str; 1];             // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:19:36: 19:42
    let _41: &[&str; 1];                 // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:19:36: 19:42
    let mut _42: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
    let mut _43: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
    let _44: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
    let _45: [core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
    let mut _46: core::fmt::ArgumentV1<'_>; // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:19:44: 19:48
    let mut _47: &main::f::E;            // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:19:44: 19:48
    let _48: &main::f::E;                // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:19:44: 19:48
    let mut _49: &std::string::String;   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let _50: std::string::String;        // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:19:51: 19:66
    let mut _51: &str;                   // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:19:51: 19:66
    let _52: &str;                       // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:19:51: 19:54
    let _53: &std::string::String;       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
    let _54: &std::string::String;       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
    let mut _55: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    let mut _56: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
    let mut _57: &std::string::String;   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
    let mut _58: &std::string::String;   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
    let _60: !;                          // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
    let mut _61: core::panicking::AssertKind; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
    let mut _62: &std::string::String;   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let _63: &std::string::String;       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let mut _64: &std::string::String;   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let _65: &std::string::String;       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let mut _66: std::option::Option<std::fmt::Arguments<'_>>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
    let mut _67: (&std::string::String, &std::string::String); // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _68: &std::string::String;   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let _69: std::string::String;        // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:117:23: 120:6
    let _70: std::string::String;        // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:13: 118:16
    let mut _71: std::fmt::Arguments<'_>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
    let mut _72: &[&str];                // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:20:36: 20:42
    let mut _73: &[&str; 1];             // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:20:36: 20:42
    let _74: &[&str; 1];                 // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:20:36: 20:42
    let mut _75: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
    let mut _76: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
    let _77: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
    let _78: [core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
    let mut _79: core::fmt::ArgumentV1<'_>; // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:20:44: 20:45
    let mut _80: &main::f::E;            // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:20:44: 20:45
    let _81: &main::f::E;                // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:20:44: 20:45
    let _82: &main::f::E;                // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:20:44: 20:45
    let mut _83: &std::string::String;   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let _84: std::string::String;        // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:20:48: 20:63
    let mut _85: &str;                   // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:20:48: 20:63
    let _86: &str;                       // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:20:48: 20:51
    let _87: &std::string::String;       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
    let _88: &std::string::String;       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
    let mut _89: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    let mut _90: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
    let mut _91: &std::string::String;   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
    let mut _92: &std::string::String;   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
    let _94: !;                          // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
    let mut _95: core::panicking::AssertKind; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
    let mut _96: &std::string::String;   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let _97: &std::string::String;       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let mut _98: &std::string::String;   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let _99: &std::string::String;       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let mut _100: std::option::Option<std::fmt::Arguments<'_>>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
    let mut _101: &[&str; 1];            // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:20:36: 20:42
    let mut _102: &main::f::E;           // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:19:44: 19:48
    let mut _103: &[&str; 1];            // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:19:36: 19:42
    let mut _104: &u32;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _105: &u32;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _106: &u32;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let mut _107: &usize;                // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _108: &usize;                // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    scope 1 {
        debug left_val => _4;            // in scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        debug right_val => _5;           // in scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        let _6: core::panicking::AssertKind; // in scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
        scope 2 {
            debug kind => _6;            // in scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
        }
    }
    scope 3 {
        debug left_val => _10;           // in scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        debug right_val => _11;          // in scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        let _12: core::panicking::AssertKind; // in scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
        scope 4 {
            debug kind => _12;           // in scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
        }
    }
    scope 5 {
        debug left_val => _20;           // in scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        debug right_val => _21;          // in scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        let _26: core::panicking::AssertKind; // in scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
        scope 6 {
            debug kind => _26;           // in scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
        }
    }
    scope 7 {
        debug res => _37;                // in scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:13: 118:16
    }
    scope 8 {
        debug left_val => _53;           // in scope 8 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        debug right_val => _54;          // in scope 8 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        let _59: core::panicking::AssertKind; // in scope 8 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
        scope 9 {
            debug kind => _59;           // in scope 9 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
        }
    }
    scope 10 {
        debug res => _70;                // in scope 10 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:13: 118:16
    }
    scope 11 {
        debug left_val => _87;           // in scope 11 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        debug right_val => _88;          // in scope 11 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        let _93: core::panicking::AssertKind; // in scope 11 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
        scope 12 {
            debug kind => _93;           // in scope 12 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
        }
    }

    bb0: {
        _108 = const _;                  // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
                                         // + literal: Const { ty: &usize, val: Unevaluated(f::check, [], Some(promoted[7])) }
        _2 = _108;                       // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _107 = const _;                  // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // + literal: Const { ty: &usize, val: Unevaluated(f::check, [], Some(promoted[6])) }
        _3 = _107;                       // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _1 = (move _2, move _3);         // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _4 = (_1.0: &usize);             // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _5 = (_1.1: &usize);             // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _106 = const _;                  // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
                                         // + literal: Const { ty: &u32, val: Unevaluated(f::check, [], Some(promoted[5])) }
        _8 = _106;                       // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _105 = const _;                  // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // + literal: Const { ty: &u32, val: Unevaluated(f::check, [], Some(promoted[4])) }
        _9 = _105;                       // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _7 = (move _8, move _9);         // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _10 = (_7.0: &u32);              // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _11 = (_7.1: &u32);              // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _16 = const 3906521272_isize;    // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:18:28: 18:29
        _17 = const true;                // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:18:28: 18:29
        assume(_17);                     // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:18:28: 18:29
        _18 = const true;                // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:18:28: 18:29
        assume(_18);                     // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:18:28: 18:29
        _15 = move _16 as u32 (IntToInt); // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:18:28: 18:29
        _14 = &_15;                      // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _104 = const _;                  // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // + literal: Const { ty: &u32, val: Unevaluated(f::check, [], Some(promoted[3])) }
        _19 = _104;                      // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _13 = (move _14, move _19);      // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _20 = (_13.0: &u32);             // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _21 = (_13.1: &u32);             // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _24 = (*_20);                    // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
        _25 = const 3906521272_u32;      // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
        _23 = Eq(move _24, move _25);    // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
        _22 = Not(move _23);             // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
        switchInt(move _22) -> [0: bb2, otherwise: bb1]; // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    }

    bb1: {
        _26 = const core::panicking::AssertKind::Eq; // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _28 = const core::panicking::AssertKind::Eq; // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _30 = _20;                       // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _29 = _30;                       // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _32 = _21;                       // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _31 = _32;                       // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _33 = Option::<Arguments<'_>>::None; // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
        _27 = core::panicking::assert_failed::<u32, u32>(move _28, move _29, move _31, move _33); // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:53
                                         // + literal: Const { ty: for<'a, 'b, 'c> fn(core::panicking::AssertKind, &'a u32, &'b u32, Option<Arguments<'c>>) -> ! {core::panicking::assert_failed::<u32, u32>}, val: Value(<ZST>) }
    }

    bb2: {
        _103 = const _;                  // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:19:36: 19:42
                                         // mir::Constant
                                         // + span: ui/struct-enums/enum-discrim-width-stuff.rs:19:36: 19:42
                                         // + literal: Const { ty: &[&str; 1], val: Unevaluated(f::check, [], Some(promoted[2])) }
        _41 = _103;                      // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:19:36: 19:42
        _40 = _41;                       // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:19:36: 19:42
        _39 = move _40 as &[&str] (Pointer(Unsize)); // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:19:36: 19:42
        _102 = const _;                  // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:19:44: 19:48
                                         // mir::Constant
                                         // + span: ui/struct-enums/enum-discrim-width-stuff.rs:19:44: 19:48
                                         // + literal: Const { ty: &f::E, val: Unevaluated(f::check, [], Some(promoted[1])) }
        _48 = _102;                      // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:19:44: 19:48
        _47 = _48;                       // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:19:44: 19:48
        _46 = core::fmt::ArgumentV1::<'_>::new_debug::<f::E>(move _47) -> bb3; // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:19:44: 19:48
                                         // mir::Constant
                                         // + span: ui/struct-enums/enum-discrim-width-stuff.rs:19:44: 19:48
                                         // + user_ty: UserType(1)
                                         // + literal: Const { ty: for<'b> fn(&'b f::E) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_debug::<f::E>}, val: Value(<ZST>) }
    }

    bb3: {
        _45 = [move _46];                // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
        _44 = &_45;                      // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
        _43 = _44;                       // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
        _42 = move _43 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
        _38 = Arguments::<'_>::new_v1(move _39, move _42) -> bb4; // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb4: {
        _37 = format(move _38) -> bb5;   // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:19: 118:80
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:19: 118:38
                                         // + literal: Const { ty: for<'a> fn(Arguments<'a>) -> String {format}, val: Value(<ZST>) }
    }

    bb5: {
        _36 = move _37;                  // scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:119:9: 119:12
        _35 = &_36;                      // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _52 = const "V";                 // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:19:51: 19:54
                                         // mir::Constant
                                         // + span: ui/struct-enums/enum-discrim-width-stuff.rs:19:51: 19:54
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _51 = _52;                       // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:19:51: 19:66
        _50 = <str as ToString>::to_string(move _51) -> [return: bb6, unwind: bb24]; // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:19:51: 19:66
                                         // mir::Constant
                                         // + span: ui/struct-enums/enum-discrim-width-stuff.rs:19:55: 19:64
                                         // + literal: Const { ty: for<'a> fn(&'a str) -> String {<str as ToString>::to_string}, val: Value(<ZST>) }
    }

    bb6: {
        _49 = &_50;                      // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _34 = (move _35, move _49);      // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _53 = (_34.0: &std::string::String); // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _54 = (_34.1: &std::string::String); // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _57 = _53;                       // scope 8 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
        _58 = _54;                       // scope 8 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
        _56 = <String as PartialEq>::eq(move _57, move _58) -> [return: bb7, unwind: bb23]; // scope 8 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a String, &'b String) -> bool {<String as PartialEq>::eq}, val: Value(<ZST>) }
    }

    bb7: {
        _55 = Not(move _56);             // scope 8 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
        switchInt(move _55) -> [0: bb9, otherwise: bb8]; // scope 8 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    }

    bb8: {
        _59 = const core::panicking::AssertKind::Eq; // scope 8 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _61 = const core::panicking::AssertKind::Eq; // scope 9 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _63 = _53;                       // scope 9 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _62 = _63;                       // scope 9 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _65 = _54;                       // scope 9 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _64 = _65;                       // scope 9 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _66 = Option::<Arguments<'_>>::None; // scope 9 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
        _60 = core::panicking::assert_failed::<String, String>(move _61, move _62, move _64, move _66) -> bb23; // scope 9 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:53
                                         // + literal: Const { ty: for<'a, 'b, 'c> fn(core::panicking::AssertKind, &'a String, &'b String, Option<Arguments<'c>>) -> ! {core::panicking::assert_failed::<String, String>}, val: Value(<ZST>) }
    }

    bb9: {
        drop(_50) -> [return: bb10, unwind: bb24]; // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:48:9: 48:10
    }

    bb10: {
        drop(_36) -> bb11;               // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:48:9: 48:10
    }

    bb11: {
        _101 = const _;                  // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:20:36: 20:42
                                         // mir::Constant
                                         // + span: ui/struct-enums/enum-discrim-width-stuff.rs:20:36: 20:42
                                         // + literal: Const { ty: &[&str; 1], val: Unevaluated(f::check, [], Some(promoted[0])) }
        _74 = _101;                      // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:20:36: 20:42
        _73 = _74;                       // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:20:36: 20:42
        _72 = move _73 as &[&str] (Pointer(Unsize)); // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:20:36: 20:42
        _82 = const {alloc30: &f::E};    // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:20:44: 20:45
                                         // mir::Constant
                                         // + span: ui/struct-enums/enum-discrim-width-stuff.rs:20:44: 20:45
                                         // + literal: Const { ty: &f::E, val: Value(Scalar(alloc30)) }
        _81 = _82;                       // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:20:44: 20:45
        _80 = _81;                       // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:20:44: 20:45
        _79 = core::fmt::ArgumentV1::<'_>::new_debug::<f::E>(move _80) -> bb12; // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:20:44: 20:45
                                         // mir::Constant
                                         // + span: ui/struct-enums/enum-discrim-width-stuff.rs:20:44: 20:45
                                         // + user_ty: UserType(3)
                                         // + literal: Const { ty: for<'b> fn(&'b f::E) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_debug::<f::E>}, val: Value(<ZST>) }
    }

    bb12: {
        _78 = [move _79];                // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
        _77 = &_78;                      // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
        _76 = _77;                       // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
        _75 = move _76 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
        _71 = Arguments::<'_>::new_v1(move _72, move _75) -> bb13; // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
                                         // + user_ty: UserType(2)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb13: {
        _70 = format(move _71) -> bb14;  // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:19: 118:80
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:19: 118:38
                                         // + literal: Const { ty: for<'a> fn(Arguments<'a>) -> String {format}, val: Value(<ZST>) }
    }

    bb14: {
        _69 = move _70;                  // scope 10 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:119:9: 119:12
        _68 = &_69;                      // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _86 = const "V";                 // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:20:48: 20:51
                                         // mir::Constant
                                         // + span: ui/struct-enums/enum-discrim-width-stuff.rs:20:48: 20:51
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _85 = _86;                       // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:20:48: 20:63
        _84 = <str as ToString>::to_string(move _85) -> [return: bb15, unwind: bb22]; // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:20:48: 20:63
                                         // mir::Constant
                                         // + span: ui/struct-enums/enum-discrim-width-stuff.rs:20:52: 20:61
                                         // + literal: Const { ty: for<'a> fn(&'a str) -> String {<str as ToString>::to_string}, val: Value(<ZST>) }
    }

    bb15: {
        _83 = &_84;                      // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _67 = (move _68, move _83);      // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _87 = (_67.0: &std::string::String); // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _88 = (_67.1: &std::string::String); // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _91 = _87;                       // scope 11 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
        _92 = _88;                       // scope 11 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
        _90 = <String as PartialEq>::eq(move _91, move _92) -> [return: bb16, unwind: bb21]; // scope 11 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a String, &'b String) -> bool {<String as PartialEq>::eq}, val: Value(<ZST>) }
    }

    bb16: {
        _89 = Not(move _90);             // scope 11 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
        switchInt(move _89) -> [0: bb18, otherwise: bb17]; // scope 11 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    }

    bb17: {
        _93 = const core::panicking::AssertKind::Eq; // scope 11 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _95 = const core::panicking::AssertKind::Eq; // scope 12 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _97 = _87;                       // scope 12 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _96 = _97;                       // scope 12 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _99 = _88;                       // scope 12 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _98 = _99;                       // scope 12 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _100 = Option::<Arguments<'_>>::None; // scope 12 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
        _94 = core::panicking::assert_failed::<String, String>(move _95, move _96, move _98, move _100) -> bb21; // scope 12 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:53
                                         // + literal: Const { ty: for<'a, 'b, 'c> fn(core::panicking::AssertKind, &'a String, &'b String, Option<Arguments<'c>>) -> ! {core::panicking::assert_failed::<String, String>}, val: Value(<ZST>) }
    }

    bb18: {
        drop(_84) -> [return: bb19, unwind: bb22]; // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:48:9: 48:10
    }

    bb19: {
        drop(_69) -> bb20;               // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:48:9: 48:10
    }

    bb20: {
        return;                          // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:21:14: 21:14
    }

    bb21 (cleanup): {
        drop(_84) -> bb22;               // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:48:9: 48:10
    }

    bb22 (cleanup): {
        drop(_69) -> bb25;               // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:48:9: 48:10
    }

    bb23 (cleanup): {
        drop(_50) -> bb24;               // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:48:9: 48:10
    }

    bb24 (cleanup): {
        drop(_36) -> bb25;               // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:48:9: 48:10
    }

    bb25 (cleanup): {
        resume;                          // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:15:13: 21:14
    }
}

alloc30 (static: f::C, size: 4, align: 4) {
    b8 c8 d8 e8                                     │ ....
}

promoted[0] in f::check: &[&str; 1] = {
    let mut _0: &[&str; 1];              // return place in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:20:36: 20:42
    let mut _1: [&str; 1];               // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:20:36: 20:42

    bb0: {
        _1 = [const ""];                 // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:20:36: 20:42
                                         // mir::Constant
                                         // + span: ui/struct-enums/enum-discrim-width-stuff.rs:20:36: 20:42
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:20:36: 20:42
        return;                          // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:20:36: 20:42
    }
}

promoted[1] in f::check: &f::E = {
    let mut _0: &main::f::E;             // return place in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:19:44: 19:48
    let mut _1: main::f::E;              // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:19:44: 19:48

    bb0: {
        _1 = f::E::V;                    // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:19:44: 19:48
        _0 = &_1;                        // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:19:44: 19:48
        return;                          // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:19:44: 19:48
    }
}

promoted[2] in f::check: &[&str; 1] = {
    let mut _0: &[&str; 1];              // return place in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:19:36: 19:42
    let mut _1: [&str; 1];               // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:19:36: 19:42

    bb0: {
        _1 = [const ""];                 // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:19:36: 19:42
                                         // mir::Constant
                                         // + span: ui/struct-enums/enum-discrim-width-stuff.rs:19:36: 19:42
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:19:36: 19:42
        return;                          // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:19:36: 19:42
    }
}

promoted[3] in f::check: &u32 = {
    let mut _0: &u32;                    // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _1: u32;                     // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:18:37: 18:39

    bb0: {
        _1 = const 3906521272_u32;       // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:33:20: 33:30
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    }
}

promoted[4] in f::check: &u32 = {
    let mut _0: &u32;                    // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _1: u32;                     // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:17:40: 17:42

    bb0: {
        _1 = const 3906521272_u32;       // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:33:20: 33:30
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    }
}

promoted[5] in f::check: &u32 = {
    let mut _0: &u32;                    // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let mut _1: u32;                     // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:17:28: 17:32
    let mut _2: isize;                   // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:17:28: 17:32
    let mut _3: (isize, bool);           // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:17:28: 17:32

    bb0: {
        _3 = CheckedAdd(const _, const 0_isize); // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:17:28: 17:32
        _2 = move (_3.0: isize);         // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:17:28: 17:32
        _1 = move _2 as u32 (IntToInt);  // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:17:28: 17:32
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    }
}

promoted[6] in f::check: &usize = {
    let mut _0: &usize;                  // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _1: usize;                   // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:16:44: 16:59

    bb0: {
        _1 = std::mem::size_of::<u32>() -> bb1; // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:16:44: 16:59
                                         // mir::Constant
                                         // + span: ui/struct-enums/enum-discrim-width-stuff.rs:16:44: 16:57
                                         // + literal: Const { ty: fn() -> usize {std::mem::size_of::<u32>}, val: Value(<ZST>) }
    }

    bb1: {
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    }
}

promoted[7] in f::check: &usize = {
    let mut _0: &usize;                  // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let mut _1: usize;                   // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:16:28: 16:42

    bb0: {
        _1 = std::mem::size_of::<f::E>() -> bb1; // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:16:28: 16:42
                                         // mir::Constant
                                         // + span: ui/struct-enums/enum-discrim-width-stuff.rs:16:28: 16:40
                                         // + literal: Const { ty: fn() -> usize {std::mem::size_of::<f::E>}, val: Value(<ZST>) }
    }

    bb1: {
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    }
}

z::E::V::{constant#0}: isize = {
    let mut _0: isize;                   // return place in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:35:19: 35:23

    bb0: {
        _0 = const 23_isize;             // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:35:19: 35:23
        return;                          // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:35:19: 35:23
    }
}

z::E::A::{constant#0}: isize = {
    let mut _0: isize;                   // return place in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:12:21: 12:22

    bb0: {
        _0 = const 0_isize;              // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:12:21: 12:22
        return;                          // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:12:21: 12:22
    }
}

fn z::<impl at ui/struct-enums/enum-discrim-width-stuff.rs:9:28: 9:33>::clone(_1: &z::E) -> z::E {
    debug self => _1;                    // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:9:28: 9:33
    let mut _0: main::z::E;              // return place in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:9:28: 9:33

    bb0: {
        _0 = (*_1);                      // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:9:28: 9:33
        return;                          // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:9:33: 9:33
    }
}

fn z::<impl at ui/struct-enums/enum-discrim-width-stuff.rs:9:35: 9:40>::fmt(_1: &z::E, _2: &mut Formatter<'_>) -> Result<(), std::fmt::Error> {
    debug self => _1;                    // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:9:35: 9:40
    debug f => _2;                       // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:9:35: 9:40
    let mut _0: std::result::Result<(), std::fmt::Error>; // return place in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:9:35: 9:40
    let mut _3: &mut std::fmt::Formatter<'_>; // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:9:35: 9:40
    let mut _4: &str;                    // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:9:35: 9:40
    let mut _5: isize;                   // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:9:35: 9:40
    let _6: &str;                        // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:9:35: 9:40
    let _7: &str;                        // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:9:35: 9:40

    bb0: {
        _3 = &mut (*_2);                 // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:9:35: 9:40
        _5 = discriminant((*_1));        // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:9:35: 9:40
        switchInt(move _5) -> [23: bb3, 0: bb1, otherwise: bb2]; // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:9:35: 9:40
    }

    bb1: {
        _7 = const "A";                  // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:9:35: 9:40
                                         // mir::Constant
                                         // + span: ui/struct-enums/enum-discrim-width-stuff.rs:9:35: 9:40
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _4 = _7;                         // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:9:35: 9:40
        goto -> bb4;                     // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:9:39: 9:40
    }

    bb2: {
        unreachable;                     // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:9:35: 9:40
    }

    bb3: {
        _6 = const "V";                  // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:9:35: 9:40
                                         // mir::Constant
                                         // + span: ui/struct-enums/enum-discrim-width-stuff.rs:9:35: 9:40
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _4 = _6;                         // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:9:35: 9:40
        goto -> bb4;                     // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:9:39: 9:40
    }

    bb4: {
        _0 = Formatter::<'_>::write_str(move _3, move _4) -> bb5; // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:9:35: 9:40
                                         // mir::Constant
                                         // + span: ui/struct-enums/enum-discrim-width-stuff.rs:9:35: 9:40
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a mut Formatter<'_>, &'b str) -> Result<(), std::fmt::Error> {Formatter::<'_>::write_str}, val: Value(<ZST>) }
    }

    bb5: {
        return;                          // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:9:40: 9:40
    }
}

static z::C: z::E = {
    let mut _0: main::z::E;              // return place in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:14:23: 14:24

    bb0: {
        _0 = z::E::V;                    // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:14:27: 14:31
        return;                          // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:14:13: 14:32
    }
}

fn z::check() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:15:28: 15:28
    let mut _1: (&usize, &usize);        // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _2: &usize;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let mut _3: &usize;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let _4: &usize;                      // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
    let _5: &usize;                      // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
    let mut _7: (&i8, &i8);              // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _8: &i8;                     // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let mut _9: &i8;                     // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let _10: &i8;                        // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
    let _11: &i8;                        // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
    let mut _13: (&i8, &i8);             // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _14: &i8;                    // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let _15: i8;                         // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:18:28: 18:29
    let mut _16: isize;                  // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:18:28: 18:29
    let mut _17: bool;                   // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:18:28: 18:29
    let mut _18: bool;                   // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:18:28: 18:29
    let mut _19: &i8;                    // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let _20: &i8;                        // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
    let _21: &i8;                        // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
    let mut _22: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    let mut _23: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
    let mut _24: i8;                     // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
    let mut _25: i8;                     // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
    let _27: !;                          // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
    let mut _28: core::panicking::AssertKind; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
    let mut _29: &i8;                    // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let _30: &i8;                        // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let mut _31: &i8;                    // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let _32: &i8;                        // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let mut _33: std::option::Option<std::fmt::Arguments<'_>>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
    let mut _34: (&std::string::String, &std::string::String); // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _35: &std::string::String;   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let _36: std::string::String;        // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:117:23: 120:6
    let _37: std::string::String;        // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:13: 118:16
    let mut _38: std::fmt::Arguments<'_>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
    let mut _39: &[&str];                // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:19:36: 19:42
    let mut _40: &[&str; 1];             // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:19:36: 19:42
    let _41: &[&str; 1];                 // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:19:36: 19:42
    let mut _42: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
    let mut _43: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
    let _44: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
    let _45: [core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
    let mut _46: core::fmt::ArgumentV1<'_>; // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:19:44: 19:48
    let mut _47: &main::z::E;            // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:19:44: 19:48
    let _48: &main::z::E;                // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:19:44: 19:48
    let mut _49: &std::string::String;   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let _50: std::string::String;        // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:19:51: 19:66
    let mut _51: &str;                   // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:19:51: 19:66
    let _52: &str;                       // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:19:51: 19:54
    let _53: &std::string::String;       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
    let _54: &std::string::String;       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
    let mut _55: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    let mut _56: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
    let mut _57: &std::string::String;   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
    let mut _58: &std::string::String;   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
    let _60: !;                          // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
    let mut _61: core::panicking::AssertKind; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
    let mut _62: &std::string::String;   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let _63: &std::string::String;       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let mut _64: &std::string::String;   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let _65: &std::string::String;       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let mut _66: std::option::Option<std::fmt::Arguments<'_>>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
    let mut _67: (&std::string::String, &std::string::String); // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _68: &std::string::String;   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let _69: std::string::String;        // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:117:23: 120:6
    let _70: std::string::String;        // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:13: 118:16
    let mut _71: std::fmt::Arguments<'_>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
    let mut _72: &[&str];                // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:20:36: 20:42
    let mut _73: &[&str; 1];             // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:20:36: 20:42
    let _74: &[&str; 1];                 // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:20:36: 20:42
    let mut _75: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
    let mut _76: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
    let _77: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
    let _78: [core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
    let mut _79: core::fmt::ArgumentV1<'_>; // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:20:44: 20:45
    let mut _80: &main::z::E;            // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:20:44: 20:45
    let _81: &main::z::E;                // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:20:44: 20:45
    let _82: &main::z::E;                // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:20:44: 20:45
    let mut _83: &std::string::String;   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let _84: std::string::String;        // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:20:48: 20:63
    let mut _85: &str;                   // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:20:48: 20:63
    let _86: &str;                       // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:20:48: 20:51
    let _87: &std::string::String;       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
    let _88: &std::string::String;       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
    let mut _89: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    let mut _90: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
    let mut _91: &std::string::String;   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
    let mut _92: &std::string::String;   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
    let _94: !;                          // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
    let mut _95: core::panicking::AssertKind; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
    let mut _96: &std::string::String;   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let _97: &std::string::String;       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let mut _98: &std::string::String;   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let _99: &std::string::String;       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let mut _100: std::option::Option<std::fmt::Arguments<'_>>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
    let mut _101: &[&str; 1];            // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:20:36: 20:42
    let mut _102: &main::z::E;           // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:19:44: 19:48
    let mut _103: &[&str; 1];            // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:19:36: 19:42
    let mut _104: &i8;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _105: &i8;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _106: &i8;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let mut _107: &usize;                // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _108: &usize;                // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    scope 1 {
        debug left_val => _4;            // in scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        debug right_val => _5;           // in scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        let _6: core::panicking::AssertKind; // in scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
        scope 2 {
            debug kind => _6;            // in scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
        }
    }
    scope 3 {
        debug left_val => _10;           // in scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        debug right_val => _11;          // in scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        let _12: core::panicking::AssertKind; // in scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
        scope 4 {
            debug kind => _12;           // in scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
        }
    }
    scope 5 {
        debug left_val => _20;           // in scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        debug right_val => _21;          // in scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        let _26: core::panicking::AssertKind; // in scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
        scope 6 {
            debug kind => _26;           // in scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
        }
    }
    scope 7 {
        debug res => _37;                // in scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:13: 118:16
    }
    scope 8 {
        debug left_val => _53;           // in scope 8 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        debug right_val => _54;          // in scope 8 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        let _59: core::panicking::AssertKind; // in scope 8 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
        scope 9 {
            debug kind => _59;           // in scope 9 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
        }
    }
    scope 10 {
        debug res => _70;                // in scope 10 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:13: 118:16
    }
    scope 11 {
        debug left_val => _87;           // in scope 11 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        debug right_val => _88;          // in scope 11 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        let _93: core::panicking::AssertKind; // in scope 11 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
        scope 12 {
            debug kind => _93;           // in scope 12 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
        }
    }

    bb0: {
        _108 = const _;                  // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
                                         // + literal: Const { ty: &usize, val: Unevaluated(z::check, [], Some(promoted[7])) }
        _2 = _108;                       // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _107 = const _;                  // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // + literal: Const { ty: &usize, val: Unevaluated(z::check, [], Some(promoted[6])) }
        _3 = _107;                       // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _1 = (move _2, move _3);         // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _4 = (_1.0: &usize);             // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _5 = (_1.1: &usize);             // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _106 = const _;                  // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
                                         // + literal: Const { ty: &i8, val: Unevaluated(z::check, [], Some(promoted[5])) }
        _8 = _106;                       // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _105 = const _;                  // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // + literal: Const { ty: &i8, val: Unevaluated(z::check, [], Some(promoted[4])) }
        _9 = _105;                       // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _7 = (move _8, move _9);         // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _10 = (_7.0: &i8);               // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _11 = (_7.1: &i8);               // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _16 = const 23_isize;            // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:18:28: 18:29
        _17 = const true;                // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:18:28: 18:29
        assume(_17);                     // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:18:28: 18:29
        _18 = const true;                // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:18:28: 18:29
        assume(_18);                     // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:18:28: 18:29
        _15 = move _16 as i8 (IntToInt); // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:18:28: 18:29
        _14 = &_15;                      // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _104 = const _;                  // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // + literal: Const { ty: &i8, val: Unevaluated(z::check, [], Some(promoted[3])) }
        _19 = _104;                      // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _13 = (move _14, move _19);      // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _20 = (_13.0: &i8);              // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _21 = (_13.1: &i8);              // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _24 = (*_20);                    // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
        _25 = const 23_i8;               // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
        _23 = Eq(move _24, move _25);    // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
        _22 = Not(move _23);             // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
        switchInt(move _22) -> [0: bb2, otherwise: bb1]; // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    }

    bb1: {
        _26 = const core::panicking::AssertKind::Eq; // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _28 = const core::panicking::AssertKind::Eq; // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _30 = _20;                       // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _29 = _30;                       // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _32 = _21;                       // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _31 = _32;                       // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _33 = Option::<Arguments<'_>>::None; // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
        _27 = core::panicking::assert_failed::<i8, i8>(move _28, move _29, move _31, move _33); // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:53
                                         // + literal: Const { ty: for<'a, 'b, 'c> fn(core::panicking::AssertKind, &'a i8, &'b i8, Option<Arguments<'c>>) -> ! {core::panicking::assert_failed::<i8, i8>}, val: Value(<ZST>) }
    }

    bb2: {
        _103 = const _;                  // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:19:36: 19:42
                                         // mir::Constant
                                         // + span: ui/struct-enums/enum-discrim-width-stuff.rs:19:36: 19:42
                                         // + literal: Const { ty: &[&str; 1], val: Unevaluated(z::check, [], Some(promoted[2])) }
        _41 = _103;                      // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:19:36: 19:42
        _40 = _41;                       // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:19:36: 19:42
        _39 = move _40 as &[&str] (Pointer(Unsize)); // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:19:36: 19:42
        _102 = const _;                  // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:19:44: 19:48
                                         // mir::Constant
                                         // + span: ui/struct-enums/enum-discrim-width-stuff.rs:19:44: 19:48
                                         // + literal: Const { ty: &z::E, val: Unevaluated(z::check, [], Some(promoted[1])) }
        _48 = _102;                      // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:19:44: 19:48
        _47 = _48;                       // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:19:44: 19:48
        _46 = core::fmt::ArgumentV1::<'_>::new_debug::<z::E>(move _47) -> bb3; // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:19:44: 19:48
                                         // mir::Constant
                                         // + span: ui/struct-enums/enum-discrim-width-stuff.rs:19:44: 19:48
                                         // + user_ty: UserType(1)
                                         // + literal: Const { ty: for<'b> fn(&'b z::E) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_debug::<z::E>}, val: Value(<ZST>) }
    }

    bb3: {
        _45 = [move _46];                // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
        _44 = &_45;                      // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
        _43 = _44;                       // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
        _42 = move _43 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
        _38 = Arguments::<'_>::new_v1(move _39, move _42) -> bb4; // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb4: {
        _37 = format(move _38) -> bb5;   // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:19: 118:80
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:19: 118:38
                                         // + literal: Const { ty: for<'a> fn(Arguments<'a>) -> String {format}, val: Value(<ZST>) }
    }

    bb5: {
        _36 = move _37;                  // scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:119:9: 119:12
        _35 = &_36;                      // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _52 = const "V";                 // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:19:51: 19:54
                                         // mir::Constant
                                         // + span: ui/struct-enums/enum-discrim-width-stuff.rs:19:51: 19:54
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _51 = _52;                       // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:19:51: 19:66
        _50 = <str as ToString>::to_string(move _51) -> [return: bb6, unwind: bb24]; // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:19:51: 19:66
                                         // mir::Constant
                                         // + span: ui/struct-enums/enum-discrim-width-stuff.rs:19:55: 19:64
                                         // + literal: Const { ty: for<'a> fn(&'a str) -> String {<str as ToString>::to_string}, val: Value(<ZST>) }
    }

    bb6: {
        _49 = &_50;                      // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _34 = (move _35, move _49);      // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _53 = (_34.0: &std::string::String); // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _54 = (_34.1: &std::string::String); // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _57 = _53;                       // scope 8 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
        _58 = _54;                       // scope 8 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
        _56 = <String as PartialEq>::eq(move _57, move _58) -> [return: bb7, unwind: bb23]; // scope 8 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a String, &'b String) -> bool {<String as PartialEq>::eq}, val: Value(<ZST>) }
    }

    bb7: {
        _55 = Not(move _56);             // scope 8 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
        switchInt(move _55) -> [0: bb9, otherwise: bb8]; // scope 8 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    }

    bb8: {
        _59 = const core::panicking::AssertKind::Eq; // scope 8 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _61 = const core::panicking::AssertKind::Eq; // scope 9 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _63 = _53;                       // scope 9 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _62 = _63;                       // scope 9 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _65 = _54;                       // scope 9 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _64 = _65;                       // scope 9 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _66 = Option::<Arguments<'_>>::None; // scope 9 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
        _60 = core::panicking::assert_failed::<String, String>(move _61, move _62, move _64, move _66) -> bb23; // scope 9 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:53
                                         // + literal: Const { ty: for<'a, 'b, 'c> fn(core::panicking::AssertKind, &'a String, &'b String, Option<Arguments<'c>>) -> ! {core::panicking::assert_failed::<String, String>}, val: Value(<ZST>) }
    }

    bb9: {
        drop(_50) -> [return: bb10, unwind: bb24]; // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:48:9: 48:10
    }

    bb10: {
        drop(_36) -> bb11;               // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:48:9: 48:10
    }

    bb11: {
        _101 = const _;                  // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:20:36: 20:42
                                         // mir::Constant
                                         // + span: ui/struct-enums/enum-discrim-width-stuff.rs:20:36: 20:42
                                         // + literal: Const { ty: &[&str; 1], val: Unevaluated(z::check, [], Some(promoted[0])) }
        _74 = _101;                      // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:20:36: 20:42
        _73 = _74;                       // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:20:36: 20:42
        _72 = move _73 as &[&str] (Pointer(Unsize)); // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:20:36: 20:42
        _82 = const {alloc31: &z::E};    // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:20:44: 20:45
                                         // mir::Constant
                                         // + span: ui/struct-enums/enum-discrim-width-stuff.rs:20:44: 20:45
                                         // + literal: Const { ty: &z::E, val: Value(Scalar(alloc31)) }
        _81 = _82;                       // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:20:44: 20:45
        _80 = _81;                       // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:20:44: 20:45
        _79 = core::fmt::ArgumentV1::<'_>::new_debug::<z::E>(move _80) -> bb12; // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:20:44: 20:45
                                         // mir::Constant
                                         // + span: ui/struct-enums/enum-discrim-width-stuff.rs:20:44: 20:45
                                         // + user_ty: UserType(3)
                                         // + literal: Const { ty: for<'b> fn(&'b z::E) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_debug::<z::E>}, val: Value(<ZST>) }
    }

    bb12: {
        _78 = [move _79];                // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
        _77 = &_78;                      // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
        _76 = _77;                       // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
        _75 = move _76 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
        _71 = Arguments::<'_>::new_v1(move _72, move _75) -> bb13; // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
                                         // + user_ty: UserType(2)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb13: {
        _70 = format(move _71) -> bb14;  // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:19: 118:80
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:19: 118:38
                                         // + literal: Const { ty: for<'a> fn(Arguments<'a>) -> String {format}, val: Value(<ZST>) }
    }

    bb14: {
        _69 = move _70;                  // scope 10 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:119:9: 119:12
        _68 = &_69;                      // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _86 = const "V";                 // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:20:48: 20:51
                                         // mir::Constant
                                         // + span: ui/struct-enums/enum-discrim-width-stuff.rs:20:48: 20:51
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _85 = _86;                       // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:20:48: 20:63
        _84 = <str as ToString>::to_string(move _85) -> [return: bb15, unwind: bb22]; // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:20:48: 20:63
                                         // mir::Constant
                                         // + span: ui/struct-enums/enum-discrim-width-stuff.rs:20:52: 20:61
                                         // + literal: Const { ty: for<'a> fn(&'a str) -> String {<str as ToString>::to_string}, val: Value(<ZST>) }
    }

    bb15: {
        _83 = &_84;                      // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _67 = (move _68, move _83);      // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _87 = (_67.0: &std::string::String); // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _88 = (_67.1: &std::string::String); // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _91 = _87;                       // scope 11 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
        _92 = _88;                       // scope 11 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
        _90 = <String as PartialEq>::eq(move _91, move _92) -> [return: bb16, unwind: bb21]; // scope 11 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a String, &'b String) -> bool {<String as PartialEq>::eq}, val: Value(<ZST>) }
    }

    bb16: {
        _89 = Not(move _90);             // scope 11 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
        switchInt(move _89) -> [0: bb18, otherwise: bb17]; // scope 11 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    }

    bb17: {
        _93 = const core::panicking::AssertKind::Eq; // scope 11 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _95 = const core::panicking::AssertKind::Eq; // scope 12 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _97 = _87;                       // scope 12 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _96 = _97;                       // scope 12 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _99 = _88;                       // scope 12 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _98 = _99;                       // scope 12 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _100 = Option::<Arguments<'_>>::None; // scope 12 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
        _94 = core::panicking::assert_failed::<String, String>(move _95, move _96, move _98, move _100) -> bb21; // scope 12 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:53
                                         // + literal: Const { ty: for<'a, 'b, 'c> fn(core::panicking::AssertKind, &'a String, &'b String, Option<Arguments<'c>>) -> ! {core::panicking::assert_failed::<String, String>}, val: Value(<ZST>) }
    }

    bb18: {
        drop(_84) -> [return: bb19, unwind: bb22]; // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:48:9: 48:10
    }

    bb19: {
        drop(_69) -> bb20;               // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:48:9: 48:10
    }

    bb20: {
        return;                          // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:21:14: 21:14
    }

    bb21 (cleanup): {
        drop(_84) -> bb22;               // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:48:9: 48:10
    }

    bb22 (cleanup): {
        drop(_69) -> bb25;               // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:48:9: 48:10
    }

    bb23 (cleanup): {
        drop(_50) -> bb24;               // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:48:9: 48:10
    }

    bb24 (cleanup): {
        drop(_36) -> bb25;               // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:48:9: 48:10
    }

    bb25 (cleanup): {
        resume;                          // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:15:13: 21:14
    }
}

alloc31 (static: z::C, size: 1, align: 1) {
    17                                              │ .
}

promoted[0] in z::check: &[&str; 1] = {
    let mut _0: &[&str; 1];              // return place in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:20:36: 20:42
    let mut _1: [&str; 1];               // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:20:36: 20:42

    bb0: {
        _1 = [const ""];                 // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:20:36: 20:42
                                         // mir::Constant
                                         // + span: ui/struct-enums/enum-discrim-width-stuff.rs:20:36: 20:42
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:20:36: 20:42
        return;                          // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:20:36: 20:42
    }
}

promoted[1] in z::check: &z::E = {
    let mut _0: &main::z::E;             // return place in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:19:44: 19:48
    let mut _1: main::z::E;              // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:19:44: 19:48

    bb0: {
        _1 = z::E::V;                    // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:19:44: 19:48
        _0 = &_1;                        // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:19:44: 19:48
        return;                          // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:19:44: 19:48
    }
}

promoted[2] in z::check: &[&str; 1] = {
    let mut _0: &[&str; 1];              // return place in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:19:36: 19:42
    let mut _1: [&str; 1];               // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:19:36: 19:42

    bb0: {
        _1 = [const ""];                 // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:19:36: 19:42
                                         // mir::Constant
                                         // + span: ui/struct-enums/enum-discrim-width-stuff.rs:19:36: 19:42
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:19:36: 19:42
        return;                          // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:19:36: 19:42
    }
}

promoted[3] in z::check: &i8 = {
    let mut _0: &i8;                     // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _1: i8;                      // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:18:37: 18:39

    bb0: {
        _1 = const 23_i8;                // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:35:19: 35:23
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    }
}

promoted[4] in z::check: &i8 = {
    let mut _0: &i8;                     // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _1: i8;                      // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:17:40: 17:42

    bb0: {
        _1 = const 23_i8;                // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:35:19: 35:23
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    }
}

promoted[5] in z::check: &i8 = {
    let mut _0: &i8;                     // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let mut _1: i8;                      // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:17:28: 17:32
    let mut _2: isize;                   // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:17:28: 17:32
    let mut _3: (isize, bool);           // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:17:28: 17:32

    bb0: {
        _3 = CheckedAdd(const _, const 0_isize); // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:17:28: 17:32
        _2 = move (_3.0: isize);         // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:17:28: 17:32
        _1 = move _2 as i8 (IntToInt);   // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:17:28: 17:32
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    }
}

promoted[6] in z::check: &usize = {
    let mut _0: &usize;                  // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _1: usize;                   // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:16:44: 16:59

    bb0: {
        _1 = std::mem::size_of::<i8>() -> bb1; // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:16:44: 16:59
                                         // mir::Constant
                                         // + span: ui/struct-enums/enum-discrim-width-stuff.rs:16:44: 16:57
                                         // + literal: Const { ty: fn() -> usize {std::mem::size_of::<i8>}, val: Value(<ZST>) }
    }

    bb1: {
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    }
}

promoted[7] in z::check: &usize = {
    let mut _0: &usize;                  // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let mut _1: usize;                   // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:16:28: 16:42

    bb0: {
        _1 = std::mem::size_of::<z::E>() -> bb1; // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:16:28: 16:42
                                         // mir::Constant
                                         // + span: ui/struct-enums/enum-discrim-width-stuff.rs:16:28: 16:40
                                         // + literal: Const { ty: fn() -> usize {std::mem::size_of::<z::E>}, val: Value(<ZST>) }
    }

    bb1: {
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    }
}

y::E::V::{constant#0}: isize = {
    let mut _0: isize;                   // return place in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:36:19: 36:24

    bb0: {
        _0 = const -23_isize;            // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:36:19: 36:24
        return;                          // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:36:19: 36:24
    }
}

y::E::A::{constant#0}: isize = {
    let mut _0: isize;                   // return place in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:12:21: 12:22

    bb0: {
        _0 = const 0_isize;              // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:12:21: 12:22
        return;                          // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:12:21: 12:22
    }
}

fn y::<impl at ui/struct-enums/enum-discrim-width-stuff.rs:9:28: 9:33>::clone(_1: &y::E) -> y::E {
    debug self => _1;                    // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:9:28: 9:33
    let mut _0: main::y::E;              // return place in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:9:28: 9:33

    bb0: {
        _0 = (*_1);                      // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:9:28: 9:33
        return;                          // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:9:33: 9:33
    }
}

fn y::<impl at ui/struct-enums/enum-discrim-width-stuff.rs:9:35: 9:40>::fmt(_1: &y::E, _2: &mut Formatter<'_>) -> Result<(), std::fmt::Error> {
    debug self => _1;                    // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:9:35: 9:40
    debug f => _2;                       // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:9:35: 9:40
    let mut _0: std::result::Result<(), std::fmt::Error>; // return place in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:9:35: 9:40
    let mut _3: &mut std::fmt::Formatter<'_>; // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:9:35: 9:40
    let mut _4: &str;                    // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:9:35: 9:40
    let mut _5: isize;                   // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:9:35: 9:40
    let _6: &str;                        // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:9:35: 9:40
    let _7: &str;                        // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:9:35: 9:40

    bb0: {
        _3 = &mut (*_2);                 // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:9:35: 9:40
        _5 = discriminant((*_1));        // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:9:35: 9:40
        switchInt(move _5) -> [18446744073709551593: bb3, 0: bb1, otherwise: bb2]; // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:9:35: 9:40
    }

    bb1: {
        _7 = const "A";                  // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:9:35: 9:40
                                         // mir::Constant
                                         // + span: ui/struct-enums/enum-discrim-width-stuff.rs:9:35: 9:40
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _4 = _7;                         // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:9:35: 9:40
        goto -> bb4;                     // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:9:39: 9:40
    }

    bb2: {
        unreachable;                     // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:9:35: 9:40
    }

    bb3: {
        _6 = const "V";                  // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:9:35: 9:40
                                         // mir::Constant
                                         // + span: ui/struct-enums/enum-discrim-width-stuff.rs:9:35: 9:40
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _4 = _6;                         // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:9:35: 9:40
        goto -> bb4;                     // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:9:39: 9:40
    }

    bb4: {
        _0 = Formatter::<'_>::write_str(move _3, move _4) -> bb5; // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:9:35: 9:40
                                         // mir::Constant
                                         // + span: ui/struct-enums/enum-discrim-width-stuff.rs:9:35: 9:40
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a mut Formatter<'_>, &'b str) -> Result<(), std::fmt::Error> {Formatter::<'_>::write_str}, val: Value(<ZST>) }
    }

    bb5: {
        return;                          // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:9:40: 9:40
    }
}

static y::C: y::E = {
    let mut _0: main::y::E;              // return place in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:14:23: 14:24

    bb0: {
        _0 = y::E::V;                    // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:14:27: 14:31
        return;                          // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:14:13: 14:32
    }
}

fn y::check() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:15:28: 15:28
    let mut _1: (&usize, &usize);        // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _2: &usize;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let mut _3: &usize;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let _4: &usize;                      // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
    let _5: &usize;                      // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
    let mut _7: (&i8, &i8);              // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _8: &i8;                     // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let mut _9: &i8;                     // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let _10: &i8;                        // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
    let _11: &i8;                        // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
    let mut _13: (&i8, &i8);             // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _14: &i8;                    // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let _15: i8;                         // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:18:28: 18:29
    let mut _16: isize;                  // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:18:28: 18:29
    let mut _17: &i8;                    // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let _18: &i8;                        // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
    let _19: &i8;                        // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
    let mut _20: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    let mut _21: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
    let mut _22: i8;                     // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
    let mut _23: i8;                     // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
    let _25: !;                          // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
    let mut _26: core::panicking::AssertKind; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
    let mut _27: &i8;                    // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let _28: &i8;                        // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let mut _29: &i8;                    // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let _30: &i8;                        // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let mut _31: std::option::Option<std::fmt::Arguments<'_>>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
    let mut _32: (&std::string::String, &std::string::String); // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _33: &std::string::String;   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let _34: std::string::String;        // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:117:23: 120:6
    let _35: std::string::String;        // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:13: 118:16
    let mut _36: std::fmt::Arguments<'_>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
    let mut _37: &[&str];                // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:19:36: 19:42
    let mut _38: &[&str; 1];             // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:19:36: 19:42
    let _39: &[&str; 1];                 // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:19:36: 19:42
    let mut _40: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
    let mut _41: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
    let _42: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
    let _43: [core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
    let mut _44: core::fmt::ArgumentV1<'_>; // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:19:44: 19:48
    let mut _45: &main::y::E;            // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:19:44: 19:48
    let _46: &main::y::E;                // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:19:44: 19:48
    let mut _47: &std::string::String;   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let _48: std::string::String;        // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:19:51: 19:66
    let mut _49: &str;                   // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:19:51: 19:66
    let _50: &str;                       // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:19:51: 19:54
    let _51: &std::string::String;       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
    let _52: &std::string::String;       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
    let mut _53: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    let mut _54: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
    let mut _55: &std::string::String;   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
    let mut _56: &std::string::String;   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
    let _58: !;                          // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
    let mut _59: core::panicking::AssertKind; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
    let mut _60: &std::string::String;   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let _61: &std::string::String;       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let mut _62: &std::string::String;   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let _63: &std::string::String;       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let mut _64: std::option::Option<std::fmt::Arguments<'_>>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
    let mut _65: (&std::string::String, &std::string::String); // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _66: &std::string::String;   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let _67: std::string::String;        // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:117:23: 120:6
    let _68: std::string::String;        // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:13: 118:16
    let mut _69: std::fmt::Arguments<'_>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
    let mut _70: &[&str];                // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:20:36: 20:42
    let mut _71: &[&str; 1];             // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:20:36: 20:42
    let _72: &[&str; 1];                 // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:20:36: 20:42
    let mut _73: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
    let mut _74: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
    let _75: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
    let _76: [core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
    let mut _77: core::fmt::ArgumentV1<'_>; // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:20:44: 20:45
    let mut _78: &main::y::E;            // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:20:44: 20:45
    let _79: &main::y::E;                // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:20:44: 20:45
    let _80: &main::y::E;                // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:20:44: 20:45
    let mut _81: &std::string::String;   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let _82: std::string::String;        // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:20:48: 20:63
    let mut _83: &str;                   // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:20:48: 20:63
    let _84: &str;                       // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:20:48: 20:51
    let _85: &std::string::String;       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
    let _86: &std::string::String;       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
    let mut _87: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    let mut _88: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
    let mut _89: &std::string::String;   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
    let mut _90: &std::string::String;   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
    let _92: !;                          // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
    let mut _93: core::panicking::AssertKind; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
    let mut _94: &std::string::String;   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let _95: &std::string::String;       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let mut _96: &std::string::String;   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let _97: &std::string::String;       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let mut _98: std::option::Option<std::fmt::Arguments<'_>>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
    let mut _99: &[&str; 1];             // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:20:36: 20:42
    let mut _100: &main::y::E;           // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:19:44: 19:48
    let mut _101: &[&str; 1];            // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:19:36: 19:42
    let mut _102: &i8;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _103: &i8;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _104: &i8;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let mut _105: &usize;                // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _106: &usize;                // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    scope 1 {
        debug left_val => _4;            // in scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        debug right_val => _5;           // in scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        let _6: core::panicking::AssertKind; // in scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
        scope 2 {
            debug kind => _6;            // in scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
        }
    }
    scope 3 {
        debug left_val => _10;           // in scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        debug right_val => _11;          // in scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        let _12: core::panicking::AssertKind; // in scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
        scope 4 {
            debug kind => _12;           // in scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
        }
    }
    scope 5 {
        debug left_val => _18;           // in scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        debug right_val => _19;          // in scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        let _24: core::panicking::AssertKind; // in scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
        scope 6 {
            debug kind => _24;           // in scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
        }
    }
    scope 7 {
        debug res => _35;                // in scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:13: 118:16
    }
    scope 8 {
        debug left_val => _51;           // in scope 8 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        debug right_val => _52;          // in scope 8 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        let _57: core::panicking::AssertKind; // in scope 8 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
        scope 9 {
            debug kind => _57;           // in scope 9 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
        }
    }
    scope 10 {
        debug res => _68;                // in scope 10 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:13: 118:16
    }
    scope 11 {
        debug left_val => _85;           // in scope 11 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        debug right_val => _86;          // in scope 11 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        let _91: core::panicking::AssertKind; // in scope 11 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
        scope 12 {
            debug kind => _91;           // in scope 12 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
        }
    }

    bb0: {
        _106 = const _;                  // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
                                         // + literal: Const { ty: &usize, val: Unevaluated(y::check, [], Some(promoted[7])) }
        _2 = _106;                       // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _105 = const _;                  // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // + literal: Const { ty: &usize, val: Unevaluated(y::check, [], Some(promoted[6])) }
        _3 = _105;                       // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _1 = (move _2, move _3);         // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _4 = (_1.0: &usize);             // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _5 = (_1.1: &usize);             // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _104 = const _;                  // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
                                         // + literal: Const { ty: &i8, val: Unevaluated(y::check, [], Some(promoted[5])) }
        _8 = _104;                       // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _103 = const _;                  // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // + literal: Const { ty: &i8, val: Unevaluated(y::check, [], Some(promoted[4])) }
        _9 = _103;                       // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _7 = (move _8, move _9);         // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _10 = (_7.0: &i8);               // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _11 = (_7.1: &i8);               // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _16 = const -23_isize;           // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:18:28: 18:29
        _15 = move _16 as i8 (IntToInt); // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:18:28: 18:29
        _14 = &_15;                      // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _102 = const _;                  // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // + literal: Const { ty: &i8, val: Unevaluated(y::check, [], Some(promoted[3])) }
        _17 = _102;                      // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _13 = (move _14, move _17);      // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _18 = (_13.0: &i8);              // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _19 = (_13.1: &i8);              // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _22 = (*_18);                    // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
        _23 = const -23_i8;              // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
        _21 = Eq(move _22, move _23);    // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
        _20 = Not(move _21);             // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
        switchInt(move _20) -> [0: bb2, otherwise: bb1]; // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    }

    bb1: {
        _24 = const core::panicking::AssertKind::Eq; // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _26 = const core::panicking::AssertKind::Eq; // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _28 = _18;                       // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _27 = _28;                       // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _30 = _19;                       // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _29 = _30;                       // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _31 = Option::<Arguments<'_>>::None; // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
        _25 = core::panicking::assert_failed::<i8, i8>(move _26, move _27, move _29, move _31); // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:53
                                         // + literal: Const { ty: for<'a, 'b, 'c> fn(core::panicking::AssertKind, &'a i8, &'b i8, Option<Arguments<'c>>) -> ! {core::panicking::assert_failed::<i8, i8>}, val: Value(<ZST>) }
    }

    bb2: {
        _101 = const _;                  // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:19:36: 19:42
                                         // mir::Constant
                                         // + span: ui/struct-enums/enum-discrim-width-stuff.rs:19:36: 19:42
                                         // + literal: Const { ty: &[&str; 1], val: Unevaluated(y::check, [], Some(promoted[2])) }
        _39 = _101;                      // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:19:36: 19:42
        _38 = _39;                       // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:19:36: 19:42
        _37 = move _38 as &[&str] (Pointer(Unsize)); // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:19:36: 19:42
        _100 = const _;                  // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:19:44: 19:48
                                         // mir::Constant
                                         // + span: ui/struct-enums/enum-discrim-width-stuff.rs:19:44: 19:48
                                         // + literal: Const { ty: &y::E, val: Unevaluated(y::check, [], Some(promoted[1])) }
        _46 = _100;                      // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:19:44: 19:48
        _45 = _46;                       // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:19:44: 19:48
        _44 = core::fmt::ArgumentV1::<'_>::new_debug::<y::E>(move _45) -> bb3; // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:19:44: 19:48
                                         // mir::Constant
                                         // + span: ui/struct-enums/enum-discrim-width-stuff.rs:19:44: 19:48
                                         // + user_ty: UserType(1)
                                         // + literal: Const { ty: for<'b> fn(&'b y::E) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_debug::<y::E>}, val: Value(<ZST>) }
    }

    bb3: {
        _43 = [move _44];                // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
        _42 = &_43;                      // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
        _41 = _42;                       // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
        _40 = move _41 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
        _36 = Arguments::<'_>::new_v1(move _37, move _40) -> bb4; // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb4: {
        _35 = format(move _36) -> bb5;   // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:19: 118:80
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:19: 118:38
                                         // + literal: Const { ty: for<'a> fn(Arguments<'a>) -> String {format}, val: Value(<ZST>) }
    }

    bb5: {
        _34 = move _35;                  // scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:119:9: 119:12
        _33 = &_34;                      // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _50 = const "V";                 // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:19:51: 19:54
                                         // mir::Constant
                                         // + span: ui/struct-enums/enum-discrim-width-stuff.rs:19:51: 19:54
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _49 = _50;                       // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:19:51: 19:66
        _48 = <str as ToString>::to_string(move _49) -> [return: bb6, unwind: bb24]; // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:19:51: 19:66
                                         // mir::Constant
                                         // + span: ui/struct-enums/enum-discrim-width-stuff.rs:19:55: 19:64
                                         // + literal: Const { ty: for<'a> fn(&'a str) -> String {<str as ToString>::to_string}, val: Value(<ZST>) }
    }

    bb6: {
        _47 = &_48;                      // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _32 = (move _33, move _47);      // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _51 = (_32.0: &std::string::String); // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _52 = (_32.1: &std::string::String); // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _55 = _51;                       // scope 8 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
        _56 = _52;                       // scope 8 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
        _54 = <String as PartialEq>::eq(move _55, move _56) -> [return: bb7, unwind: bb23]; // scope 8 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a String, &'b String) -> bool {<String as PartialEq>::eq}, val: Value(<ZST>) }
    }

    bb7: {
        _53 = Not(move _54);             // scope 8 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
        switchInt(move _53) -> [0: bb9, otherwise: bb8]; // scope 8 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    }

    bb8: {
        _57 = const core::panicking::AssertKind::Eq; // scope 8 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _59 = const core::panicking::AssertKind::Eq; // scope 9 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _61 = _51;                       // scope 9 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _60 = _61;                       // scope 9 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _63 = _52;                       // scope 9 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _62 = _63;                       // scope 9 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _64 = Option::<Arguments<'_>>::None; // scope 9 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
        _58 = core::panicking::assert_failed::<String, String>(move _59, move _60, move _62, move _64) -> bb23; // scope 9 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:53
                                         // + literal: Const { ty: for<'a, 'b, 'c> fn(core::panicking::AssertKind, &'a String, &'b String, Option<Arguments<'c>>) -> ! {core::panicking::assert_failed::<String, String>}, val: Value(<ZST>) }
    }

    bb9: {
        drop(_48) -> [return: bb10, unwind: bb24]; // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:48:9: 48:10
    }

    bb10: {
        drop(_34) -> bb11;               // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:48:9: 48:10
    }

    bb11: {
        _99 = const _;                   // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:20:36: 20:42
                                         // mir::Constant
                                         // + span: ui/struct-enums/enum-discrim-width-stuff.rs:20:36: 20:42
                                         // + literal: Const { ty: &[&str; 1], val: Unevaluated(y::check, [], Some(promoted[0])) }
        _72 = _99;                       // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:20:36: 20:42
        _71 = _72;                       // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:20:36: 20:42
        _70 = move _71 as &[&str] (Pointer(Unsize)); // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:20:36: 20:42
        _80 = const {alloc32: &y::E};    // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:20:44: 20:45
                                         // mir::Constant
                                         // + span: ui/struct-enums/enum-discrim-width-stuff.rs:20:44: 20:45
                                         // + literal: Const { ty: &y::E, val: Value(Scalar(alloc32)) }
        _79 = _80;                       // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:20:44: 20:45
        _78 = _79;                       // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:20:44: 20:45
        _77 = core::fmt::ArgumentV1::<'_>::new_debug::<y::E>(move _78) -> bb12; // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:20:44: 20:45
                                         // mir::Constant
                                         // + span: ui/struct-enums/enum-discrim-width-stuff.rs:20:44: 20:45
                                         // + user_ty: UserType(3)
                                         // + literal: Const { ty: for<'b> fn(&'b y::E) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_debug::<y::E>}, val: Value(<ZST>) }
    }

    bb12: {
        _76 = [move _77];                // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
        _75 = &_76;                      // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
        _74 = _75;                       // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
        _73 = move _74 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
        _69 = Arguments::<'_>::new_v1(move _70, move _73) -> bb13; // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
                                         // + user_ty: UserType(2)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb13: {
        _68 = format(move _69) -> bb14;  // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:19: 118:80
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:19: 118:38
                                         // + literal: Const { ty: for<'a> fn(Arguments<'a>) -> String {format}, val: Value(<ZST>) }
    }

    bb14: {
        _67 = move _68;                  // scope 10 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:119:9: 119:12
        _66 = &_67;                      // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _84 = const "V";                 // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:20:48: 20:51
                                         // mir::Constant
                                         // + span: ui/struct-enums/enum-discrim-width-stuff.rs:20:48: 20:51
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _83 = _84;                       // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:20:48: 20:63
        _82 = <str as ToString>::to_string(move _83) -> [return: bb15, unwind: bb22]; // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:20:48: 20:63
                                         // mir::Constant
                                         // + span: ui/struct-enums/enum-discrim-width-stuff.rs:20:52: 20:61
                                         // + literal: Const { ty: for<'a> fn(&'a str) -> String {<str as ToString>::to_string}, val: Value(<ZST>) }
    }

    bb15: {
        _81 = &_82;                      // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _65 = (move _66, move _81);      // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _85 = (_65.0: &std::string::String); // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _86 = (_65.1: &std::string::String); // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _89 = _85;                       // scope 11 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
        _90 = _86;                       // scope 11 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
        _88 = <String as PartialEq>::eq(move _89, move _90) -> [return: bb16, unwind: bb21]; // scope 11 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a String, &'b String) -> bool {<String as PartialEq>::eq}, val: Value(<ZST>) }
    }

    bb16: {
        _87 = Not(move _88);             // scope 11 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
        switchInt(move _87) -> [0: bb18, otherwise: bb17]; // scope 11 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    }

    bb17: {
        _91 = const core::panicking::AssertKind::Eq; // scope 11 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _93 = const core::panicking::AssertKind::Eq; // scope 12 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _95 = _85;                       // scope 12 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _94 = _95;                       // scope 12 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _97 = _86;                       // scope 12 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _96 = _97;                       // scope 12 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _98 = Option::<Arguments<'_>>::None; // scope 12 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
        _92 = core::panicking::assert_failed::<String, String>(move _93, move _94, move _96, move _98) -> bb21; // scope 12 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:53
                                         // + literal: Const { ty: for<'a, 'b, 'c> fn(core::panicking::AssertKind, &'a String, &'b String, Option<Arguments<'c>>) -> ! {core::panicking::assert_failed::<String, String>}, val: Value(<ZST>) }
    }

    bb18: {
        drop(_82) -> [return: bb19, unwind: bb22]; // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:48:9: 48:10
    }

    bb19: {
        drop(_67) -> bb20;               // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:48:9: 48:10
    }

    bb20: {
        return;                          // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:21:14: 21:14
    }

    bb21 (cleanup): {
        drop(_82) -> bb22;               // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:48:9: 48:10
    }

    bb22 (cleanup): {
        drop(_67) -> bb25;               // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:48:9: 48:10
    }

    bb23 (cleanup): {
        drop(_48) -> bb24;               // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:48:9: 48:10
    }

    bb24 (cleanup): {
        drop(_34) -> bb25;               // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:48:9: 48:10
    }

    bb25 (cleanup): {
        resume;                          // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:15:13: 21:14
    }
}

alloc32 (static: y::C, size: 1, align: 1) {
    e9                                              │ .
}

promoted[0] in y::check: &[&str; 1] = {
    let mut _0: &[&str; 1];              // return place in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:20:36: 20:42
    let mut _1: [&str; 1];               // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:20:36: 20:42

    bb0: {
        _1 = [const ""];                 // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:20:36: 20:42
                                         // mir::Constant
                                         // + span: ui/struct-enums/enum-discrim-width-stuff.rs:20:36: 20:42
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:20:36: 20:42
        return;                          // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:20:36: 20:42
    }
}

promoted[1] in y::check: &y::E = {
    let mut _0: &main::y::E;             // return place in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:19:44: 19:48
    let mut _1: main::y::E;              // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:19:44: 19:48

    bb0: {
        _1 = y::E::V;                    // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:19:44: 19:48
        _0 = &_1;                        // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:19:44: 19:48
        return;                          // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:19:44: 19:48
    }
}

promoted[2] in y::check: &[&str; 1] = {
    let mut _0: &[&str; 1];              // return place in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:19:36: 19:42
    let mut _1: [&str; 1];               // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:19:36: 19:42

    bb0: {
        _1 = [const ""];                 // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:19:36: 19:42
                                         // mir::Constant
                                         // + span: ui/struct-enums/enum-discrim-width-stuff.rs:19:36: 19:42
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:19:36: 19:42
        return;                          // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:19:36: 19:42
    }
}

promoted[3] in y::check: &i8 = {
    let mut _0: &i8;                     // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _1: i8;                      // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:18:37: 18:39

    bb0: {
        _1 = const -23_i8;               // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:36:19: 36:24
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    }
}

promoted[4] in y::check: &i8 = {
    let mut _0: &i8;                     // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _1: i8;                      // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:17:40: 17:42

    bb0: {
        _1 = const -23_i8;               // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:36:19: 36:24
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    }
}

promoted[5] in y::check: &i8 = {
    let mut _0: &i8;                     // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let mut _1: i8;                      // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:17:28: 17:32
    let mut _2: isize;                   // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:17:28: 17:32
    let mut _3: (isize, bool);           // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:17:28: 17:32

    bb0: {
        _3 = CheckedAdd(const _, const 0_isize); // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:17:28: 17:32
        _2 = move (_3.0: isize);         // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:17:28: 17:32
        _1 = move _2 as i8 (IntToInt);   // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:17:28: 17:32
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    }
}

promoted[6] in y::check: &usize = {
    let mut _0: &usize;                  // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _1: usize;                   // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:16:44: 16:59

    bb0: {
        _1 = std::mem::size_of::<i8>() -> bb1; // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:16:44: 16:59
                                         // mir::Constant
                                         // + span: ui/struct-enums/enum-discrim-width-stuff.rs:16:44: 16:57
                                         // + literal: Const { ty: fn() -> usize {std::mem::size_of::<i8>}, val: Value(<ZST>) }
    }

    bb1: {
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    }
}

promoted[7] in y::check: &usize = {
    let mut _0: &usize;                  // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let mut _1: usize;                   // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:16:28: 16:42

    bb0: {
        _1 = std::mem::size_of::<y::E>() -> bb1; // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:16:28: 16:42
                                         // mir::Constant
                                         // + span: ui/struct-enums/enum-discrim-width-stuff.rs:16:28: 16:40
                                         // + literal: Const { ty: fn() -> usize {std::mem::size_of::<y::E>}, val: Value(<ZST>) }
    }

    bb1: {
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    }
}

x::E::V::{constant#0}: isize = {
    let mut _0: isize;                   // return place in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:37:20: 37:26

    bb0: {
        _0 = const 5927_isize;           // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:37:20: 37:26
        return;                          // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:37:20: 37:26
    }
}

x::E::A::{constant#0}: isize = {
    let mut _0: isize;                   // return place in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:12:21: 12:22

    bb0: {
        _0 = const 0_isize;              // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:12:21: 12:22
        return;                          // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:12:21: 12:22
    }
}

fn x::<impl at ui/struct-enums/enum-discrim-width-stuff.rs:9:28: 9:33>::clone(_1: &x::E) -> x::E {
    debug self => _1;                    // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:9:28: 9:33
    let mut _0: main::x::E;              // return place in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:9:28: 9:33

    bb0: {
        _0 = (*_1);                      // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:9:28: 9:33
        return;                          // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:9:33: 9:33
    }
}

fn x::<impl at ui/struct-enums/enum-discrim-width-stuff.rs:9:35: 9:40>::fmt(_1: &x::E, _2: &mut Formatter<'_>) -> Result<(), std::fmt::Error> {
    debug self => _1;                    // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:9:35: 9:40
    debug f => _2;                       // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:9:35: 9:40
    let mut _0: std::result::Result<(), std::fmt::Error>; // return place in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:9:35: 9:40
    let mut _3: &mut std::fmt::Formatter<'_>; // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:9:35: 9:40
    let mut _4: &str;                    // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:9:35: 9:40
    let mut _5: isize;                   // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:9:35: 9:40
    let _6: &str;                        // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:9:35: 9:40
    let _7: &str;                        // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:9:35: 9:40

    bb0: {
        _3 = &mut (*_2);                 // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:9:35: 9:40
        _5 = discriminant((*_1));        // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:9:35: 9:40
        switchInt(move _5) -> [5927: bb3, 0: bb1, otherwise: bb2]; // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:9:35: 9:40
    }

    bb1: {
        _7 = const "A";                  // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:9:35: 9:40
                                         // mir::Constant
                                         // + span: ui/struct-enums/enum-discrim-width-stuff.rs:9:35: 9:40
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _4 = _7;                         // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:9:35: 9:40
        goto -> bb4;                     // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:9:39: 9:40
    }

    bb2: {
        unreachable;                     // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:9:35: 9:40
    }

    bb3: {
        _6 = const "V";                  // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:9:35: 9:40
                                         // mir::Constant
                                         // + span: ui/struct-enums/enum-discrim-width-stuff.rs:9:35: 9:40
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _4 = _6;                         // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:9:35: 9:40
        goto -> bb4;                     // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:9:39: 9:40
    }

    bb4: {
        _0 = Formatter::<'_>::write_str(move _3, move _4) -> bb5; // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:9:35: 9:40
                                         // mir::Constant
                                         // + span: ui/struct-enums/enum-discrim-width-stuff.rs:9:35: 9:40
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a mut Formatter<'_>, &'b str) -> Result<(), std::fmt::Error> {Formatter::<'_>::write_str}, val: Value(<ZST>) }
    }

    bb5: {
        return;                          // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:9:40: 9:40
    }
}

static x::C: x::E = {
    let mut _0: main::x::E;              // return place in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:14:23: 14:24

    bb0: {
        _0 = x::E::V;                    // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:14:27: 14:31
        return;                          // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:14:13: 14:32
    }
}

fn x::check() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:15:28: 15:28
    let mut _1: (&usize, &usize);        // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _2: &usize;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let mut _3: &usize;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let _4: &usize;                      // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
    let _5: &usize;                      // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
    let mut _7: (&i16, &i16);            // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _8: &i16;                    // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let mut _9: &i16;                    // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let _10: &i16;                       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
    let _11: &i16;                       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
    let mut _13: (&i16, &i16);           // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _14: &i16;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let _15: i16;                        // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:18:28: 18:29
    let mut _16: isize;                  // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:18:28: 18:29
    let mut _17: bool;                   // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:18:28: 18:29
    let mut _18: bool;                   // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:18:28: 18:29
    let mut _19: &i16;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let _20: &i16;                       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
    let _21: &i16;                       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
    let mut _22: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    let mut _23: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
    let mut _24: i16;                    // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
    let mut _25: i16;                    // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
    let _27: !;                          // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
    let mut _28: core::panicking::AssertKind; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
    let mut _29: &i16;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let _30: &i16;                       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let mut _31: &i16;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let _32: &i16;                       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let mut _33: std::option::Option<std::fmt::Arguments<'_>>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
    let mut _34: (&std::string::String, &std::string::String); // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _35: &std::string::String;   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let _36: std::string::String;        // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:117:23: 120:6
    let _37: std::string::String;        // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:13: 118:16
    let mut _38: std::fmt::Arguments<'_>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
    let mut _39: &[&str];                // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:19:36: 19:42
    let mut _40: &[&str; 1];             // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:19:36: 19:42
    let _41: &[&str; 1];                 // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:19:36: 19:42
    let mut _42: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
    let mut _43: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
    let _44: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
    let _45: [core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
    let mut _46: core::fmt::ArgumentV1<'_>; // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:19:44: 19:48
    let mut _47: &main::x::E;            // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:19:44: 19:48
    let _48: &main::x::E;                // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:19:44: 19:48
    let mut _49: &std::string::String;   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let _50: std::string::String;        // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:19:51: 19:66
    let mut _51: &str;                   // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:19:51: 19:66
    let _52: &str;                       // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:19:51: 19:54
    let _53: &std::string::String;       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
    let _54: &std::string::String;       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
    let mut _55: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    let mut _56: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
    let mut _57: &std::string::String;   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
    let mut _58: &std::string::String;   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
    let _60: !;                          // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
    let mut _61: core::panicking::AssertKind; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
    let mut _62: &std::string::String;   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let _63: &std::string::String;       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let mut _64: &std::string::String;   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let _65: &std::string::String;       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let mut _66: std::option::Option<std::fmt::Arguments<'_>>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
    let mut _67: (&std::string::String, &std::string::String); // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _68: &std::string::String;   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let _69: std::string::String;        // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:117:23: 120:6
    let _70: std::string::String;        // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:13: 118:16
    let mut _71: std::fmt::Arguments<'_>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
    let mut _72: &[&str];                // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:20:36: 20:42
    let mut _73: &[&str; 1];             // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:20:36: 20:42
    let _74: &[&str; 1];                 // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:20:36: 20:42
    let mut _75: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
    let mut _76: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
    let _77: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
    let _78: [core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
    let mut _79: core::fmt::ArgumentV1<'_>; // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:20:44: 20:45
    let mut _80: &main::x::E;            // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:20:44: 20:45
    let _81: &main::x::E;                // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:20:44: 20:45
    let _82: &main::x::E;                // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:20:44: 20:45
    let mut _83: &std::string::String;   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let _84: std::string::String;        // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:20:48: 20:63
    let mut _85: &str;                   // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:20:48: 20:63
    let _86: &str;                       // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:20:48: 20:51
    let _87: &std::string::String;       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
    let _88: &std::string::String;       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
    let mut _89: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    let mut _90: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
    let mut _91: &std::string::String;   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
    let mut _92: &std::string::String;   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
    let _94: !;                          // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
    let mut _95: core::panicking::AssertKind; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
    let mut _96: &std::string::String;   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let _97: &std::string::String;       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let mut _98: &std::string::String;   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let _99: &std::string::String;       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let mut _100: std::option::Option<std::fmt::Arguments<'_>>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
    let mut _101: &[&str; 1];            // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:20:36: 20:42
    let mut _102: &main::x::E;           // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:19:44: 19:48
    let mut _103: &[&str; 1];            // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:19:36: 19:42
    let mut _104: &i16;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _105: &i16;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _106: &i16;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let mut _107: &usize;                // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _108: &usize;                // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    scope 1 {
        debug left_val => _4;            // in scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        debug right_val => _5;           // in scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        let _6: core::panicking::AssertKind; // in scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
        scope 2 {
            debug kind => _6;            // in scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
        }
    }
    scope 3 {
        debug left_val => _10;           // in scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        debug right_val => _11;          // in scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        let _12: core::panicking::AssertKind; // in scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
        scope 4 {
            debug kind => _12;           // in scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
        }
    }
    scope 5 {
        debug left_val => _20;           // in scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        debug right_val => _21;          // in scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        let _26: core::panicking::AssertKind; // in scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
        scope 6 {
            debug kind => _26;           // in scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
        }
    }
    scope 7 {
        debug res => _37;                // in scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:13: 118:16
    }
    scope 8 {
        debug left_val => _53;           // in scope 8 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        debug right_val => _54;          // in scope 8 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        let _59: core::panicking::AssertKind; // in scope 8 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
        scope 9 {
            debug kind => _59;           // in scope 9 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
        }
    }
    scope 10 {
        debug res => _70;                // in scope 10 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:13: 118:16
    }
    scope 11 {
        debug left_val => _87;           // in scope 11 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        debug right_val => _88;          // in scope 11 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        let _93: core::panicking::AssertKind; // in scope 11 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
        scope 12 {
            debug kind => _93;           // in scope 12 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
        }
    }

    bb0: {
        _108 = const _;                  // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
                                         // + literal: Const { ty: &usize, val: Unevaluated(x::check, [], Some(promoted[7])) }
        _2 = _108;                       // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _107 = const _;                  // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // + literal: Const { ty: &usize, val: Unevaluated(x::check, [], Some(promoted[6])) }
        _3 = _107;                       // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _1 = (move _2, move _3);         // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _4 = (_1.0: &usize);             // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _5 = (_1.1: &usize);             // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _106 = const _;                  // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
                                         // + literal: Const { ty: &i16, val: Unevaluated(x::check, [], Some(promoted[5])) }
        _8 = _106;                       // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _105 = const _;                  // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // + literal: Const { ty: &i16, val: Unevaluated(x::check, [], Some(promoted[4])) }
        _9 = _105;                       // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _7 = (move _8, move _9);         // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _10 = (_7.0: &i16);              // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _11 = (_7.1: &i16);              // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _16 = const 5927_isize;          // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:18:28: 18:29
        _17 = const true;                // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:18:28: 18:29
        assume(_17);                     // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:18:28: 18:29
        _18 = const true;                // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:18:28: 18:29
        assume(_18);                     // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:18:28: 18:29
        _15 = move _16 as i16 (IntToInt); // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:18:28: 18:29
        _14 = &_15;                      // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _104 = const _;                  // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // + literal: Const { ty: &i16, val: Unevaluated(x::check, [], Some(promoted[3])) }
        _19 = _104;                      // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _13 = (move _14, move _19);      // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _20 = (_13.0: &i16);             // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _21 = (_13.1: &i16);             // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _24 = (*_20);                    // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
        _25 = const 5927_i16;            // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
        _23 = Eq(move _24, move _25);    // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
        _22 = Not(move _23);             // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
        switchInt(move _22) -> [0: bb2, otherwise: bb1]; // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    }

    bb1: {
        _26 = const core::panicking::AssertKind::Eq; // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _28 = const core::panicking::AssertKind::Eq; // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _30 = _20;                       // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _29 = _30;                       // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _32 = _21;                       // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _31 = _32;                       // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _33 = Option::<Arguments<'_>>::None; // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
        _27 = core::panicking::assert_failed::<i16, i16>(move _28, move _29, move _31, move _33); // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:53
                                         // + literal: Const { ty: for<'a, 'b, 'c> fn(core::panicking::AssertKind, &'a i16, &'b i16, Option<Arguments<'c>>) -> ! {core::panicking::assert_failed::<i16, i16>}, val: Value(<ZST>) }
    }

    bb2: {
        _103 = const _;                  // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:19:36: 19:42
                                         // mir::Constant
                                         // + span: ui/struct-enums/enum-discrim-width-stuff.rs:19:36: 19:42
                                         // + literal: Const { ty: &[&str; 1], val: Unevaluated(x::check, [], Some(promoted[2])) }
        _41 = _103;                      // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:19:36: 19:42
        _40 = _41;                       // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:19:36: 19:42
        _39 = move _40 as &[&str] (Pointer(Unsize)); // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:19:36: 19:42
        _102 = const _;                  // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:19:44: 19:48
                                         // mir::Constant
                                         // + span: ui/struct-enums/enum-discrim-width-stuff.rs:19:44: 19:48
                                         // + literal: Const { ty: &x::E, val: Unevaluated(x::check, [], Some(promoted[1])) }
        _48 = _102;                      // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:19:44: 19:48
        _47 = _48;                       // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:19:44: 19:48
        _46 = core::fmt::ArgumentV1::<'_>::new_debug::<x::E>(move _47) -> bb3; // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:19:44: 19:48
                                         // mir::Constant
                                         // + span: ui/struct-enums/enum-discrim-width-stuff.rs:19:44: 19:48
                                         // + user_ty: UserType(1)
                                         // + literal: Const { ty: for<'b> fn(&'b x::E) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_debug::<x::E>}, val: Value(<ZST>) }
    }

    bb3: {
        _45 = [move _46];                // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
        _44 = &_45;                      // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
        _43 = _44;                       // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
        _42 = move _43 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
        _38 = Arguments::<'_>::new_v1(move _39, move _42) -> bb4; // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb4: {
        _37 = format(move _38) -> bb5;   // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:19: 118:80
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:19: 118:38
                                         // + literal: Const { ty: for<'a> fn(Arguments<'a>) -> String {format}, val: Value(<ZST>) }
    }

    bb5: {
        _36 = move _37;                  // scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:119:9: 119:12
        _35 = &_36;                      // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _52 = const "V";                 // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:19:51: 19:54
                                         // mir::Constant
                                         // + span: ui/struct-enums/enum-discrim-width-stuff.rs:19:51: 19:54
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _51 = _52;                       // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:19:51: 19:66
        _50 = <str as ToString>::to_string(move _51) -> [return: bb6, unwind: bb24]; // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:19:51: 19:66
                                         // mir::Constant
                                         // + span: ui/struct-enums/enum-discrim-width-stuff.rs:19:55: 19:64
                                         // + literal: Const { ty: for<'a> fn(&'a str) -> String {<str as ToString>::to_string}, val: Value(<ZST>) }
    }

    bb6: {
        _49 = &_50;                      // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _34 = (move _35, move _49);      // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _53 = (_34.0: &std::string::String); // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _54 = (_34.1: &std::string::String); // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _57 = _53;                       // scope 8 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
        _58 = _54;                       // scope 8 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
        _56 = <String as PartialEq>::eq(move _57, move _58) -> [return: bb7, unwind: bb23]; // scope 8 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a String, &'b String) -> bool {<String as PartialEq>::eq}, val: Value(<ZST>) }
    }

    bb7: {
        _55 = Not(move _56);             // scope 8 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
        switchInt(move _55) -> [0: bb9, otherwise: bb8]; // scope 8 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    }

    bb8: {
        _59 = const core::panicking::AssertKind::Eq; // scope 8 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _61 = const core::panicking::AssertKind::Eq; // scope 9 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _63 = _53;                       // scope 9 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _62 = _63;                       // scope 9 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _65 = _54;                       // scope 9 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _64 = _65;                       // scope 9 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _66 = Option::<Arguments<'_>>::None; // scope 9 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
        _60 = core::panicking::assert_failed::<String, String>(move _61, move _62, move _64, move _66) -> bb23; // scope 9 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:53
                                         // + literal: Const { ty: for<'a, 'b, 'c> fn(core::panicking::AssertKind, &'a String, &'b String, Option<Arguments<'c>>) -> ! {core::panicking::assert_failed::<String, String>}, val: Value(<ZST>) }
    }

    bb9: {
        drop(_50) -> [return: bb10, unwind: bb24]; // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:48:9: 48:10
    }

    bb10: {
        drop(_36) -> bb11;               // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:48:9: 48:10
    }

    bb11: {
        _101 = const _;                  // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:20:36: 20:42
                                         // mir::Constant
                                         // + span: ui/struct-enums/enum-discrim-width-stuff.rs:20:36: 20:42
                                         // + literal: Const { ty: &[&str; 1], val: Unevaluated(x::check, [], Some(promoted[0])) }
        _74 = _101;                      // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:20:36: 20:42
        _73 = _74;                       // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:20:36: 20:42
        _72 = move _73 as &[&str] (Pointer(Unsize)); // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:20:36: 20:42
        _82 = const {alloc33: &x::E};    // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:20:44: 20:45
                                         // mir::Constant
                                         // + span: ui/struct-enums/enum-discrim-width-stuff.rs:20:44: 20:45
                                         // + literal: Const { ty: &x::E, val: Value(Scalar(alloc33)) }
        _81 = _82;                       // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:20:44: 20:45
        _80 = _81;                       // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:20:44: 20:45
        _79 = core::fmt::ArgumentV1::<'_>::new_debug::<x::E>(move _80) -> bb12; // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:20:44: 20:45
                                         // mir::Constant
                                         // + span: ui/struct-enums/enum-discrim-width-stuff.rs:20:44: 20:45
                                         // + user_ty: UserType(3)
                                         // + literal: Const { ty: for<'b> fn(&'b x::E) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_debug::<x::E>}, val: Value(<ZST>) }
    }

    bb12: {
        _78 = [move _79];                // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
        _77 = &_78;                      // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
        _76 = _77;                       // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
        _75 = move _76 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
        _71 = Arguments::<'_>::new_v1(move _72, move _75) -> bb13; // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
                                         // + user_ty: UserType(2)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb13: {
        _70 = format(move _71) -> bb14;  // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:19: 118:80
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:19: 118:38
                                         // + literal: Const { ty: for<'a> fn(Arguments<'a>) -> String {format}, val: Value(<ZST>) }
    }

    bb14: {
        _69 = move _70;                  // scope 10 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:119:9: 119:12
        _68 = &_69;                      // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _86 = const "V";                 // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:20:48: 20:51
                                         // mir::Constant
                                         // + span: ui/struct-enums/enum-discrim-width-stuff.rs:20:48: 20:51
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _85 = _86;                       // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:20:48: 20:63
        _84 = <str as ToString>::to_string(move _85) -> [return: bb15, unwind: bb22]; // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:20:48: 20:63
                                         // mir::Constant
                                         // + span: ui/struct-enums/enum-discrim-width-stuff.rs:20:52: 20:61
                                         // + literal: Const { ty: for<'a> fn(&'a str) -> String {<str as ToString>::to_string}, val: Value(<ZST>) }
    }

    bb15: {
        _83 = &_84;                      // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _67 = (move _68, move _83);      // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _87 = (_67.0: &std::string::String); // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _88 = (_67.1: &std::string::String); // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _91 = _87;                       // scope 11 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
        _92 = _88;                       // scope 11 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
        _90 = <String as PartialEq>::eq(move _91, move _92) -> [return: bb16, unwind: bb21]; // scope 11 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a String, &'b String) -> bool {<String as PartialEq>::eq}, val: Value(<ZST>) }
    }

    bb16: {
        _89 = Not(move _90);             // scope 11 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
        switchInt(move _89) -> [0: bb18, otherwise: bb17]; // scope 11 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    }

    bb17: {
        _93 = const core::panicking::AssertKind::Eq; // scope 11 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _95 = const core::panicking::AssertKind::Eq; // scope 12 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _97 = _87;                       // scope 12 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _96 = _97;                       // scope 12 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _99 = _88;                       // scope 12 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _98 = _99;                       // scope 12 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _100 = Option::<Arguments<'_>>::None; // scope 12 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
        _94 = core::panicking::assert_failed::<String, String>(move _95, move _96, move _98, move _100) -> bb21; // scope 12 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:53
                                         // + literal: Const { ty: for<'a, 'b, 'c> fn(core::panicking::AssertKind, &'a String, &'b String, Option<Arguments<'c>>) -> ! {core::panicking::assert_failed::<String, String>}, val: Value(<ZST>) }
    }

    bb18: {
        drop(_84) -> [return: bb19, unwind: bb22]; // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:48:9: 48:10
    }

    bb19: {
        drop(_69) -> bb20;               // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:48:9: 48:10
    }

    bb20: {
        return;                          // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:21:14: 21:14
    }

    bb21 (cleanup): {
        drop(_84) -> bb22;               // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:48:9: 48:10
    }

    bb22 (cleanup): {
        drop(_69) -> bb25;               // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:48:9: 48:10
    }

    bb23 (cleanup): {
        drop(_50) -> bb24;               // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:48:9: 48:10
    }

    bb24 (cleanup): {
        drop(_36) -> bb25;               // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:48:9: 48:10
    }

    bb25 (cleanup): {
        resume;                          // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:15:13: 21:14
    }
}

alloc33 (static: x::C, size: 2, align: 2) {
    27 17                                           │ '.
}

promoted[0] in x::check: &[&str; 1] = {
    let mut _0: &[&str; 1];              // return place in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:20:36: 20:42
    let mut _1: [&str; 1];               // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:20:36: 20:42

    bb0: {
        _1 = [const ""];                 // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:20:36: 20:42
                                         // mir::Constant
                                         // + span: ui/struct-enums/enum-discrim-width-stuff.rs:20:36: 20:42
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:20:36: 20:42
        return;                          // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:20:36: 20:42
    }
}

promoted[1] in x::check: &x::E = {
    let mut _0: &main::x::E;             // return place in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:19:44: 19:48
    let mut _1: main::x::E;              // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:19:44: 19:48

    bb0: {
        _1 = x::E::V;                    // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:19:44: 19:48
        _0 = &_1;                        // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:19:44: 19:48
        return;                          // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:19:44: 19:48
    }
}

promoted[2] in x::check: &[&str; 1] = {
    let mut _0: &[&str; 1];              // return place in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:19:36: 19:42
    let mut _1: [&str; 1];               // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:19:36: 19:42

    bb0: {
        _1 = [const ""];                 // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:19:36: 19:42
                                         // mir::Constant
                                         // + span: ui/struct-enums/enum-discrim-width-stuff.rs:19:36: 19:42
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:19:36: 19:42
        return;                          // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:19:36: 19:42
    }
}

promoted[3] in x::check: &i16 = {
    let mut _0: &i16;                    // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _1: i16;                     // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:18:37: 18:39

    bb0: {
        _1 = const 5927_i16;             // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:37:20: 37:26
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    }
}

promoted[4] in x::check: &i16 = {
    let mut _0: &i16;                    // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _1: i16;                     // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:17:40: 17:42

    bb0: {
        _1 = const 5927_i16;             // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:37:20: 37:26
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    }
}

promoted[5] in x::check: &i16 = {
    let mut _0: &i16;                    // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let mut _1: i16;                     // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:17:28: 17:32
    let mut _2: isize;                   // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:17:28: 17:32
    let mut _3: (isize, bool);           // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:17:28: 17:32

    bb0: {
        _3 = CheckedAdd(const _, const 0_isize); // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:17:28: 17:32
        _2 = move (_3.0: isize);         // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:17:28: 17:32
        _1 = move _2 as i16 (IntToInt);  // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:17:28: 17:32
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    }
}

promoted[6] in x::check: &usize = {
    let mut _0: &usize;                  // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _1: usize;                   // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:16:44: 16:59

    bb0: {
        _1 = std::mem::size_of::<i16>() -> bb1; // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:16:44: 16:59
                                         // mir::Constant
                                         // + span: ui/struct-enums/enum-discrim-width-stuff.rs:16:44: 16:57
                                         // + literal: Const { ty: fn() -> usize {std::mem::size_of::<i16>}, val: Value(<ZST>) }
    }

    bb1: {
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    }
}

promoted[7] in x::check: &usize = {
    let mut _0: &usize;                  // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let mut _1: usize;                   // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:16:28: 16:42

    bb0: {
        _1 = std::mem::size_of::<x::E>() -> bb1; // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:16:28: 16:42
                                         // mir::Constant
                                         // + span: ui/struct-enums/enum-discrim-width-stuff.rs:16:28: 16:40
                                         // + literal: Const { ty: fn() -> usize {std::mem::size_of::<x::E>}, val: Value(<ZST>) }
    }

    bb1: {
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    }
}

w::E::V::{constant#0}: isize = {
    let mut _0: isize;                   // return place in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:38:20: 38:27

    bb0: {
        _0 = const -5927_isize;          // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:38:20: 38:27
        return;                          // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:38:20: 38:27
    }
}

w::E::A::{constant#0}: isize = {
    let mut _0: isize;                   // return place in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:12:21: 12:22

    bb0: {
        _0 = const 0_isize;              // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:12:21: 12:22
        return;                          // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:12:21: 12:22
    }
}

fn w::<impl at ui/struct-enums/enum-discrim-width-stuff.rs:9:28: 9:33>::clone(_1: &w::E) -> w::E {
    debug self => _1;                    // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:9:28: 9:33
    let mut _0: main::w::E;              // return place in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:9:28: 9:33

    bb0: {
        _0 = (*_1);                      // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:9:28: 9:33
        return;                          // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:9:33: 9:33
    }
}

fn w::<impl at ui/struct-enums/enum-discrim-width-stuff.rs:9:35: 9:40>::fmt(_1: &w::E, _2: &mut Formatter<'_>) -> Result<(), std::fmt::Error> {
    debug self => _1;                    // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:9:35: 9:40
    debug f => _2;                       // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:9:35: 9:40
    let mut _0: std::result::Result<(), std::fmt::Error>; // return place in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:9:35: 9:40
    let mut _3: &mut std::fmt::Formatter<'_>; // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:9:35: 9:40
    let mut _4: &str;                    // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:9:35: 9:40
    let mut _5: isize;                   // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:9:35: 9:40
    let _6: &str;                        // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:9:35: 9:40
    let _7: &str;                        // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:9:35: 9:40

    bb0: {
        _3 = &mut (*_2);                 // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:9:35: 9:40
        _5 = discriminant((*_1));        // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:9:35: 9:40
        switchInt(move _5) -> [18446744073709545689: bb3, 0: bb1, otherwise: bb2]; // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:9:35: 9:40
    }

    bb1: {
        _7 = const "A";                  // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:9:35: 9:40
                                         // mir::Constant
                                         // + span: ui/struct-enums/enum-discrim-width-stuff.rs:9:35: 9:40
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _4 = _7;                         // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:9:35: 9:40
        goto -> bb4;                     // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:9:39: 9:40
    }

    bb2: {
        unreachable;                     // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:9:35: 9:40
    }

    bb3: {
        _6 = const "V";                  // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:9:35: 9:40
                                         // mir::Constant
                                         // + span: ui/struct-enums/enum-discrim-width-stuff.rs:9:35: 9:40
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _4 = _6;                         // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:9:35: 9:40
        goto -> bb4;                     // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:9:39: 9:40
    }

    bb4: {
        _0 = Formatter::<'_>::write_str(move _3, move _4) -> bb5; // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:9:35: 9:40
                                         // mir::Constant
                                         // + span: ui/struct-enums/enum-discrim-width-stuff.rs:9:35: 9:40
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a mut Formatter<'_>, &'b str) -> Result<(), std::fmt::Error> {Formatter::<'_>::write_str}, val: Value(<ZST>) }
    }

    bb5: {
        return;                          // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:9:40: 9:40
    }
}

static w::C: w::E = {
    let mut _0: main::w::E;              // return place in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:14:23: 14:24

    bb0: {
        _0 = w::E::V;                    // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:14:27: 14:31
        return;                          // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:14:13: 14:32
    }
}

fn w::check() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:15:28: 15:28
    let mut _1: (&usize, &usize);        // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _2: &usize;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let mut _3: &usize;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let _4: &usize;                      // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
    let _5: &usize;                      // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
    let mut _7: (&i16, &i16);            // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _8: &i16;                    // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let mut _9: &i16;                    // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let _10: &i16;                       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
    let _11: &i16;                       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
    let mut _13: (&i16, &i16);           // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _14: &i16;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let _15: i16;                        // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:18:28: 18:29
    let mut _16: isize;                  // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:18:28: 18:29
    let mut _17: &i16;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let _18: &i16;                       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
    let _19: &i16;                       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
    let mut _20: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    let mut _21: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
    let mut _22: i16;                    // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
    let mut _23: i16;                    // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
    let _25: !;                          // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
    let mut _26: core::panicking::AssertKind; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
    let mut _27: &i16;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let _28: &i16;                       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let mut _29: &i16;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let _30: &i16;                       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let mut _31: std::option::Option<std::fmt::Arguments<'_>>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
    let mut _32: (&std::string::String, &std::string::String); // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _33: &std::string::String;   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let _34: std::string::String;        // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:117:23: 120:6
    let _35: std::string::String;        // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:13: 118:16
    let mut _36: std::fmt::Arguments<'_>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
    let mut _37: &[&str];                // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:19:36: 19:42
    let mut _38: &[&str; 1];             // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:19:36: 19:42
    let _39: &[&str; 1];                 // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:19:36: 19:42
    let mut _40: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
    let mut _41: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
    let _42: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
    let _43: [core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
    let mut _44: core::fmt::ArgumentV1<'_>; // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:19:44: 19:48
    let mut _45: &main::w::E;            // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:19:44: 19:48
    let _46: &main::w::E;                // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:19:44: 19:48
    let mut _47: &std::string::String;   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let _48: std::string::String;        // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:19:51: 19:66
    let mut _49: &str;                   // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:19:51: 19:66
    let _50: &str;                       // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:19:51: 19:54
    let _51: &std::string::String;       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
    let _52: &std::string::String;       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
    let mut _53: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    let mut _54: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
    let mut _55: &std::string::String;   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
    let mut _56: &std::string::String;   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
    let _58: !;                          // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
    let mut _59: core::panicking::AssertKind; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
    let mut _60: &std::string::String;   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let _61: &std::string::String;       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let mut _62: &std::string::String;   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let _63: &std::string::String;       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let mut _64: std::option::Option<std::fmt::Arguments<'_>>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
    let mut _65: (&std::string::String, &std::string::String); // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _66: &std::string::String;   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let _67: std::string::String;        // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:117:23: 120:6
    let _68: std::string::String;        // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:13: 118:16
    let mut _69: std::fmt::Arguments<'_>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
    let mut _70: &[&str];                // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:20:36: 20:42
    let mut _71: &[&str; 1];             // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:20:36: 20:42
    let _72: &[&str; 1];                 // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:20:36: 20:42
    let mut _73: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
    let mut _74: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
    let _75: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
    let _76: [core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
    let mut _77: core::fmt::ArgumentV1<'_>; // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:20:44: 20:45
    let mut _78: &main::w::E;            // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:20:44: 20:45
    let _79: &main::w::E;                // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:20:44: 20:45
    let _80: &main::w::E;                // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:20:44: 20:45
    let mut _81: &std::string::String;   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let _82: std::string::String;        // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:20:48: 20:63
    let mut _83: &str;                   // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:20:48: 20:63
    let _84: &str;                       // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:20:48: 20:51
    let _85: &std::string::String;       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
    let _86: &std::string::String;       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
    let mut _87: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    let mut _88: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
    let mut _89: &std::string::String;   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
    let mut _90: &std::string::String;   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
    let _92: !;                          // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
    let mut _93: core::panicking::AssertKind; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
    let mut _94: &std::string::String;   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let _95: &std::string::String;       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let mut _96: &std::string::String;   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let _97: &std::string::String;       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let mut _98: std::option::Option<std::fmt::Arguments<'_>>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
    let mut _99: &[&str; 1];             // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:20:36: 20:42
    let mut _100: &main::w::E;           // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:19:44: 19:48
    let mut _101: &[&str; 1];            // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:19:36: 19:42
    let mut _102: &i16;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _103: &i16;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _104: &i16;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let mut _105: &usize;                // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _106: &usize;                // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    scope 1 {
        debug left_val => _4;            // in scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        debug right_val => _5;           // in scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        let _6: core::panicking::AssertKind; // in scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
        scope 2 {
            debug kind => _6;            // in scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
        }
    }
    scope 3 {
        debug left_val => _10;           // in scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        debug right_val => _11;          // in scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        let _12: core::panicking::AssertKind; // in scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
        scope 4 {
            debug kind => _12;           // in scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
        }
    }
    scope 5 {
        debug left_val => _18;           // in scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        debug right_val => _19;          // in scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        let _24: core::panicking::AssertKind; // in scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
        scope 6 {
            debug kind => _24;           // in scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
        }
    }
    scope 7 {
        debug res => _35;                // in scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:13: 118:16
    }
    scope 8 {
        debug left_val => _51;           // in scope 8 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        debug right_val => _52;          // in scope 8 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        let _57: core::panicking::AssertKind; // in scope 8 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
        scope 9 {
            debug kind => _57;           // in scope 9 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
        }
    }
    scope 10 {
        debug res => _68;                // in scope 10 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:13: 118:16
    }
    scope 11 {
        debug left_val => _85;           // in scope 11 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        debug right_val => _86;          // in scope 11 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        let _91: core::panicking::AssertKind; // in scope 11 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
        scope 12 {
            debug kind => _91;           // in scope 12 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
        }
    }

    bb0: {
        _106 = const _;                  // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
                                         // + literal: Const { ty: &usize, val: Unevaluated(w::check, [], Some(promoted[7])) }
        _2 = _106;                       // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _105 = const _;                  // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // + literal: Const { ty: &usize, val: Unevaluated(w::check, [], Some(promoted[6])) }
        _3 = _105;                       // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _1 = (move _2, move _3);         // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _4 = (_1.0: &usize);             // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _5 = (_1.1: &usize);             // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _104 = const _;                  // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
                                         // + literal: Const { ty: &i16, val: Unevaluated(w::check, [], Some(promoted[5])) }
        _8 = _104;                       // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _103 = const _;                  // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // + literal: Const { ty: &i16, val: Unevaluated(w::check, [], Some(promoted[4])) }
        _9 = _103;                       // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _7 = (move _8, move _9);         // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _10 = (_7.0: &i16);              // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _11 = (_7.1: &i16);              // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _16 = const -5927_isize;         // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:18:28: 18:29
        _15 = move _16 as i16 (IntToInt); // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:18:28: 18:29
        _14 = &_15;                      // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _102 = const _;                  // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // + literal: Const { ty: &i16, val: Unevaluated(w::check, [], Some(promoted[3])) }
        _17 = _102;                      // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _13 = (move _14, move _17);      // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _18 = (_13.0: &i16);             // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _19 = (_13.1: &i16);             // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _22 = (*_18);                    // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
        _23 = const -5927_i16;           // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
        _21 = Eq(move _22, move _23);    // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
        _20 = Not(move _21);             // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
        switchInt(move _20) -> [0: bb2, otherwise: bb1]; // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    }

    bb1: {
        _24 = const core::panicking::AssertKind::Eq; // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _26 = const core::panicking::AssertKind::Eq; // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _28 = _18;                       // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _27 = _28;                       // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _30 = _19;                       // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _29 = _30;                       // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _31 = Option::<Arguments<'_>>::None; // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
        _25 = core::panicking::assert_failed::<i16, i16>(move _26, move _27, move _29, move _31); // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:53
                                         // + literal: Const { ty: for<'a, 'b, 'c> fn(core::panicking::AssertKind, &'a i16, &'b i16, Option<Arguments<'c>>) -> ! {core::panicking::assert_failed::<i16, i16>}, val: Value(<ZST>) }
    }

    bb2: {
        _101 = const _;                  // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:19:36: 19:42
                                         // mir::Constant
                                         // + span: ui/struct-enums/enum-discrim-width-stuff.rs:19:36: 19:42
                                         // + literal: Const { ty: &[&str; 1], val: Unevaluated(w::check, [], Some(promoted[2])) }
        _39 = _101;                      // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:19:36: 19:42
        _38 = _39;                       // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:19:36: 19:42
        _37 = move _38 as &[&str] (Pointer(Unsize)); // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:19:36: 19:42
        _100 = const _;                  // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:19:44: 19:48
                                         // mir::Constant
                                         // + span: ui/struct-enums/enum-discrim-width-stuff.rs:19:44: 19:48
                                         // + literal: Const { ty: &w::E, val: Unevaluated(w::check, [], Some(promoted[1])) }
        _46 = _100;                      // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:19:44: 19:48
        _45 = _46;                       // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:19:44: 19:48
        _44 = core::fmt::ArgumentV1::<'_>::new_debug::<w::E>(move _45) -> bb3; // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:19:44: 19:48
                                         // mir::Constant
                                         // + span: ui/struct-enums/enum-discrim-width-stuff.rs:19:44: 19:48
                                         // + user_ty: UserType(1)
                                         // + literal: Const { ty: for<'b> fn(&'b w::E) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_debug::<w::E>}, val: Value(<ZST>) }
    }

    bb3: {
        _43 = [move _44];                // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
        _42 = &_43;                      // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
        _41 = _42;                       // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
        _40 = move _41 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
        _36 = Arguments::<'_>::new_v1(move _37, move _40) -> bb4; // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb4: {
        _35 = format(move _36) -> bb5;   // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:19: 118:80
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:19: 118:38
                                         // + literal: Const { ty: for<'a> fn(Arguments<'a>) -> String {format}, val: Value(<ZST>) }
    }

    bb5: {
        _34 = move _35;                  // scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:119:9: 119:12
        _33 = &_34;                      // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _50 = const "V";                 // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:19:51: 19:54
                                         // mir::Constant
                                         // + span: ui/struct-enums/enum-discrim-width-stuff.rs:19:51: 19:54
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _49 = _50;                       // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:19:51: 19:66
        _48 = <str as ToString>::to_string(move _49) -> [return: bb6, unwind: bb24]; // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:19:51: 19:66
                                         // mir::Constant
                                         // + span: ui/struct-enums/enum-discrim-width-stuff.rs:19:55: 19:64
                                         // + literal: Const { ty: for<'a> fn(&'a str) -> String {<str as ToString>::to_string}, val: Value(<ZST>) }
    }

    bb6: {
        _47 = &_48;                      // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _32 = (move _33, move _47);      // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _51 = (_32.0: &std::string::String); // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _52 = (_32.1: &std::string::String); // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _55 = _51;                       // scope 8 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
        _56 = _52;                       // scope 8 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
        _54 = <String as PartialEq>::eq(move _55, move _56) -> [return: bb7, unwind: bb23]; // scope 8 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a String, &'b String) -> bool {<String as PartialEq>::eq}, val: Value(<ZST>) }
    }

    bb7: {
        _53 = Not(move _54);             // scope 8 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
        switchInt(move _53) -> [0: bb9, otherwise: bb8]; // scope 8 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    }

    bb8: {
        _57 = const core::panicking::AssertKind::Eq; // scope 8 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _59 = const core::panicking::AssertKind::Eq; // scope 9 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _61 = _51;                       // scope 9 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _60 = _61;                       // scope 9 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _63 = _52;                       // scope 9 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _62 = _63;                       // scope 9 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _64 = Option::<Arguments<'_>>::None; // scope 9 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
        _58 = core::panicking::assert_failed::<String, String>(move _59, move _60, move _62, move _64) -> bb23; // scope 9 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:53
                                         // + literal: Const { ty: for<'a, 'b, 'c> fn(core::panicking::AssertKind, &'a String, &'b String, Option<Arguments<'c>>) -> ! {core::panicking::assert_failed::<String, String>}, val: Value(<ZST>) }
    }

    bb9: {
        drop(_48) -> [return: bb10, unwind: bb24]; // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:48:9: 48:10
    }

    bb10: {
        drop(_34) -> bb11;               // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:48:9: 48:10
    }

    bb11: {
        _99 = const _;                   // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:20:36: 20:42
                                         // mir::Constant
                                         // + span: ui/struct-enums/enum-discrim-width-stuff.rs:20:36: 20:42
                                         // + literal: Const { ty: &[&str; 1], val: Unevaluated(w::check, [], Some(promoted[0])) }
        _72 = _99;                       // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:20:36: 20:42
        _71 = _72;                       // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:20:36: 20:42
        _70 = move _71 as &[&str] (Pointer(Unsize)); // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:20:36: 20:42
        _80 = const {alloc34: &w::E};    // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:20:44: 20:45
                                         // mir::Constant
                                         // + span: ui/struct-enums/enum-discrim-width-stuff.rs:20:44: 20:45
                                         // + literal: Const { ty: &w::E, val: Value(Scalar(alloc34)) }
        _79 = _80;                       // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:20:44: 20:45
        _78 = _79;                       // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:20:44: 20:45
        _77 = core::fmt::ArgumentV1::<'_>::new_debug::<w::E>(move _78) -> bb12; // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:20:44: 20:45
                                         // mir::Constant
                                         // + span: ui/struct-enums/enum-discrim-width-stuff.rs:20:44: 20:45
                                         // + user_ty: UserType(3)
                                         // + literal: Const { ty: for<'b> fn(&'b w::E) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_debug::<w::E>}, val: Value(<ZST>) }
    }

    bb12: {
        _76 = [move _77];                // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
        _75 = &_76;                      // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
        _74 = _75;                       // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
        _73 = move _74 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
        _69 = Arguments::<'_>::new_v1(move _70, move _73) -> bb13; // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
                                         // + user_ty: UserType(2)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb13: {
        _68 = format(move _69) -> bb14;  // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:19: 118:80
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:19: 118:38
                                         // + literal: Const { ty: for<'a> fn(Arguments<'a>) -> String {format}, val: Value(<ZST>) }
    }

    bb14: {
        _67 = move _68;                  // scope 10 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:119:9: 119:12
        _66 = &_67;                      // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _84 = const "V";                 // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:20:48: 20:51
                                         // mir::Constant
                                         // + span: ui/struct-enums/enum-discrim-width-stuff.rs:20:48: 20:51
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _83 = _84;                       // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:20:48: 20:63
        _82 = <str as ToString>::to_string(move _83) -> [return: bb15, unwind: bb22]; // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:20:48: 20:63
                                         // mir::Constant
                                         // + span: ui/struct-enums/enum-discrim-width-stuff.rs:20:52: 20:61
                                         // + literal: Const { ty: for<'a> fn(&'a str) -> String {<str as ToString>::to_string}, val: Value(<ZST>) }
    }

    bb15: {
        _81 = &_82;                      // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _65 = (move _66, move _81);      // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _85 = (_65.0: &std::string::String); // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _86 = (_65.1: &std::string::String); // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _89 = _85;                       // scope 11 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
        _90 = _86;                       // scope 11 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
        _88 = <String as PartialEq>::eq(move _89, move _90) -> [return: bb16, unwind: bb21]; // scope 11 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a String, &'b String) -> bool {<String as PartialEq>::eq}, val: Value(<ZST>) }
    }

    bb16: {
        _87 = Not(move _88);             // scope 11 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
        switchInt(move _87) -> [0: bb18, otherwise: bb17]; // scope 11 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    }

    bb17: {
        _91 = const core::panicking::AssertKind::Eq; // scope 11 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _93 = const core::panicking::AssertKind::Eq; // scope 12 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _95 = _85;                       // scope 12 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _94 = _95;                       // scope 12 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _97 = _86;                       // scope 12 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _96 = _97;                       // scope 12 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _98 = Option::<Arguments<'_>>::None; // scope 12 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
        _92 = core::panicking::assert_failed::<String, String>(move _93, move _94, move _96, move _98) -> bb21; // scope 12 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:53
                                         // + literal: Const { ty: for<'a, 'b, 'c> fn(core::panicking::AssertKind, &'a String, &'b String, Option<Arguments<'c>>) -> ! {core::panicking::assert_failed::<String, String>}, val: Value(<ZST>) }
    }

    bb18: {
        drop(_82) -> [return: bb19, unwind: bb22]; // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:48:9: 48:10
    }

    bb19: {
        drop(_67) -> bb20;               // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:48:9: 48:10
    }

    bb20: {
        return;                          // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:21:14: 21:14
    }

    bb21 (cleanup): {
        drop(_82) -> bb22;               // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:48:9: 48:10
    }

    bb22 (cleanup): {
        drop(_67) -> bb25;               // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:48:9: 48:10
    }

    bb23 (cleanup): {
        drop(_48) -> bb24;               // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:48:9: 48:10
    }

    bb24 (cleanup): {
        drop(_34) -> bb25;               // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:48:9: 48:10
    }

    bb25 (cleanup): {
        resume;                          // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:15:13: 21:14
    }
}

alloc34 (static: w::C, size: 2, align: 2) {
    d9 e8                                           │ ..
}

promoted[0] in w::check: &[&str; 1] = {
    let mut _0: &[&str; 1];              // return place in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:20:36: 20:42
    let mut _1: [&str; 1];               // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:20:36: 20:42

    bb0: {
        _1 = [const ""];                 // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:20:36: 20:42
                                         // mir::Constant
                                         // + span: ui/struct-enums/enum-discrim-width-stuff.rs:20:36: 20:42
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:20:36: 20:42
        return;                          // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:20:36: 20:42
    }
}

promoted[1] in w::check: &w::E = {
    let mut _0: &main::w::E;             // return place in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:19:44: 19:48
    let mut _1: main::w::E;              // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:19:44: 19:48

    bb0: {
        _1 = w::E::V;                    // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:19:44: 19:48
        _0 = &_1;                        // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:19:44: 19:48
        return;                          // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:19:44: 19:48
    }
}

promoted[2] in w::check: &[&str; 1] = {
    let mut _0: &[&str; 1];              // return place in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:19:36: 19:42
    let mut _1: [&str; 1];               // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:19:36: 19:42

    bb0: {
        _1 = [const ""];                 // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:19:36: 19:42
                                         // mir::Constant
                                         // + span: ui/struct-enums/enum-discrim-width-stuff.rs:19:36: 19:42
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:19:36: 19:42
        return;                          // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:19:36: 19:42
    }
}

promoted[3] in w::check: &i16 = {
    let mut _0: &i16;                    // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _1: i16;                     // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:18:37: 18:39

    bb0: {
        _1 = const -5927_i16;            // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:38:20: 38:27
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    }
}

promoted[4] in w::check: &i16 = {
    let mut _0: &i16;                    // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _1: i16;                     // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:17:40: 17:42

    bb0: {
        _1 = const -5927_i16;            // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:38:20: 38:27
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    }
}

promoted[5] in w::check: &i16 = {
    let mut _0: &i16;                    // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let mut _1: i16;                     // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:17:28: 17:32
    let mut _2: isize;                   // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:17:28: 17:32
    let mut _3: (isize, bool);           // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:17:28: 17:32

    bb0: {
        _3 = CheckedAdd(const _, const 0_isize); // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:17:28: 17:32
        _2 = move (_3.0: isize);         // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:17:28: 17:32
        _1 = move _2 as i16 (IntToInt);  // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:17:28: 17:32
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    }
}

promoted[6] in w::check: &usize = {
    let mut _0: &usize;                  // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _1: usize;                   // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:16:44: 16:59

    bb0: {
        _1 = std::mem::size_of::<i16>() -> bb1; // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:16:44: 16:59
                                         // mir::Constant
                                         // + span: ui/struct-enums/enum-discrim-width-stuff.rs:16:44: 16:57
                                         // + literal: Const { ty: fn() -> usize {std::mem::size_of::<i16>}, val: Value(<ZST>) }
    }

    bb1: {
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    }
}

promoted[7] in w::check: &usize = {
    let mut _0: &usize;                  // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let mut _1: usize;                   // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:16:28: 16:42

    bb0: {
        _1 = std::mem::size_of::<w::E>() -> bb1; // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:16:28: 16:42
                                         // mir::Constant
                                         // + span: ui/struct-enums/enum-discrim-width-stuff.rs:16:28: 16:40
                                         // + literal: Const { ty: fn() -> usize {std::mem::size_of::<w::E>}, val: Value(<ZST>) }
    }

    bb1: {
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    }
}

v::E::V::{constant#0}: isize = {
    let mut _0: isize;                   // return place in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:39:20: 39:30

    bb0: {
        _0 = const 388446023_isize;      // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:39:20: 39:30
        return;                          // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:39:20: 39:30
    }
}

v::E::A::{constant#0}: isize = {
    let mut _0: isize;                   // return place in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:12:21: 12:22

    bb0: {
        _0 = const 0_isize;              // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:12:21: 12:22
        return;                          // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:12:21: 12:22
    }
}

fn v::<impl at ui/struct-enums/enum-discrim-width-stuff.rs:9:28: 9:33>::clone(_1: &v::E) -> v::E {
    debug self => _1;                    // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:9:28: 9:33
    let mut _0: main::v::E;              // return place in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:9:28: 9:33

    bb0: {
        _0 = (*_1);                      // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:9:28: 9:33
        return;                          // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:9:33: 9:33
    }
}

fn v::<impl at ui/struct-enums/enum-discrim-width-stuff.rs:9:35: 9:40>::fmt(_1: &v::E, _2: &mut Formatter<'_>) -> Result<(), std::fmt::Error> {
    debug self => _1;                    // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:9:35: 9:40
    debug f => _2;                       // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:9:35: 9:40
    let mut _0: std::result::Result<(), std::fmt::Error>; // return place in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:9:35: 9:40
    let mut _3: &mut std::fmt::Formatter<'_>; // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:9:35: 9:40
    let mut _4: &str;                    // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:9:35: 9:40
    let mut _5: isize;                   // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:9:35: 9:40
    let _6: &str;                        // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:9:35: 9:40
    let _7: &str;                        // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:9:35: 9:40

    bb0: {
        _3 = &mut (*_2);                 // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:9:35: 9:40
        _5 = discriminant((*_1));        // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:9:35: 9:40
        switchInt(move _5) -> [388446023: bb3, 0: bb1, otherwise: bb2]; // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:9:35: 9:40
    }

    bb1: {
        _7 = const "A";                  // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:9:35: 9:40
                                         // mir::Constant
                                         // + span: ui/struct-enums/enum-discrim-width-stuff.rs:9:35: 9:40
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _4 = _7;                         // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:9:35: 9:40
        goto -> bb4;                     // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:9:39: 9:40
    }

    bb2: {
        unreachable;                     // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:9:35: 9:40
    }

    bb3: {
        _6 = const "V";                  // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:9:35: 9:40
                                         // mir::Constant
                                         // + span: ui/struct-enums/enum-discrim-width-stuff.rs:9:35: 9:40
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _4 = _6;                         // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:9:35: 9:40
        goto -> bb4;                     // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:9:39: 9:40
    }

    bb4: {
        _0 = Formatter::<'_>::write_str(move _3, move _4) -> bb5; // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:9:35: 9:40
                                         // mir::Constant
                                         // + span: ui/struct-enums/enum-discrim-width-stuff.rs:9:35: 9:40
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a mut Formatter<'_>, &'b str) -> Result<(), std::fmt::Error> {Formatter::<'_>::write_str}, val: Value(<ZST>) }
    }

    bb5: {
        return;                          // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:9:40: 9:40
    }
}

static v::C: v::E = {
    let mut _0: main::v::E;              // return place in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:14:23: 14:24

    bb0: {
        _0 = v::E::V;                    // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:14:27: 14:31
        return;                          // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:14:13: 14:32
    }
}

fn v::check() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:15:28: 15:28
    let mut _1: (&usize, &usize);        // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _2: &usize;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let mut _3: &usize;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let _4: &usize;                      // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
    let _5: &usize;                      // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
    let mut _7: (&i32, &i32);            // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _8: &i32;                    // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let mut _9: &i32;                    // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let _10: &i32;                       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
    let _11: &i32;                       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
    let mut _13: (&i32, &i32);           // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _14: &i32;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let _15: i32;                        // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:18:28: 18:29
    let mut _16: isize;                  // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:18:28: 18:29
    let mut _17: bool;                   // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:18:28: 18:29
    let mut _18: bool;                   // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:18:28: 18:29
    let mut _19: &i32;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let _20: &i32;                       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
    let _21: &i32;                       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
    let mut _22: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    let mut _23: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
    let mut _24: i32;                    // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
    let mut _25: i32;                    // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
    let _27: !;                          // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
    let mut _28: core::panicking::AssertKind; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
    let mut _29: &i32;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let _30: &i32;                       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let mut _31: &i32;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let _32: &i32;                       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let mut _33: std::option::Option<std::fmt::Arguments<'_>>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
    let mut _34: (&std::string::String, &std::string::String); // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _35: &std::string::String;   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let _36: std::string::String;        // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:117:23: 120:6
    let _37: std::string::String;        // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:13: 118:16
    let mut _38: std::fmt::Arguments<'_>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
    let mut _39: &[&str];                // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:19:36: 19:42
    let mut _40: &[&str; 1];             // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:19:36: 19:42
    let _41: &[&str; 1];                 // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:19:36: 19:42
    let mut _42: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
    let mut _43: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
    let _44: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
    let _45: [core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
    let mut _46: core::fmt::ArgumentV1<'_>; // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:19:44: 19:48
    let mut _47: &main::v::E;            // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:19:44: 19:48
    let _48: &main::v::E;                // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:19:44: 19:48
    let mut _49: &std::string::String;   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let _50: std::string::String;        // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:19:51: 19:66
    let mut _51: &str;                   // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:19:51: 19:66
    let _52: &str;                       // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:19:51: 19:54
    let _53: &std::string::String;       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
    let _54: &std::string::String;       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
    let mut _55: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    let mut _56: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
    let mut _57: &std::string::String;   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
    let mut _58: &std::string::String;   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
    let _60: !;                          // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
    let mut _61: core::panicking::AssertKind; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
    let mut _62: &std::string::String;   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let _63: &std::string::String;       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let mut _64: &std::string::String;   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let _65: &std::string::String;       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let mut _66: std::option::Option<std::fmt::Arguments<'_>>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
    let mut _67: (&std::string::String, &std::string::String); // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _68: &std::string::String;   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let _69: std::string::String;        // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:117:23: 120:6
    let _70: std::string::String;        // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:13: 118:16
    let mut _71: std::fmt::Arguments<'_>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
    let mut _72: &[&str];                // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:20:36: 20:42
    let mut _73: &[&str; 1];             // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:20:36: 20:42
    let _74: &[&str; 1];                 // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:20:36: 20:42
    let mut _75: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
    let mut _76: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
    let _77: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
    let _78: [core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
    let mut _79: core::fmt::ArgumentV1<'_>; // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:20:44: 20:45
    let mut _80: &main::v::E;            // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:20:44: 20:45
    let _81: &main::v::E;                // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:20:44: 20:45
    let _82: &main::v::E;                // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:20:44: 20:45
    let mut _83: &std::string::String;   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let _84: std::string::String;        // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:20:48: 20:63
    let mut _85: &str;                   // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:20:48: 20:63
    let _86: &str;                       // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:20:48: 20:51
    let _87: &std::string::String;       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
    let _88: &std::string::String;       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
    let mut _89: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    let mut _90: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
    let mut _91: &std::string::String;   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
    let mut _92: &std::string::String;   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
    let _94: !;                          // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
    let mut _95: core::panicking::AssertKind; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
    let mut _96: &std::string::String;   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let _97: &std::string::String;       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let mut _98: &std::string::String;   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let _99: &std::string::String;       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let mut _100: std::option::Option<std::fmt::Arguments<'_>>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
    let mut _101: &[&str; 1];            // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:20:36: 20:42
    let mut _102: &main::v::E;           // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:19:44: 19:48
    let mut _103: &[&str; 1];            // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:19:36: 19:42
    let mut _104: &i32;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _105: &i32;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _106: &i32;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let mut _107: &usize;                // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _108: &usize;                // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    scope 1 {
        debug left_val => _4;            // in scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        debug right_val => _5;           // in scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        let _6: core::panicking::AssertKind; // in scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
        scope 2 {
            debug kind => _6;            // in scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
        }
    }
    scope 3 {
        debug left_val => _10;           // in scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        debug right_val => _11;          // in scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        let _12: core::panicking::AssertKind; // in scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
        scope 4 {
            debug kind => _12;           // in scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
        }
    }
    scope 5 {
        debug left_val => _20;           // in scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        debug right_val => _21;          // in scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        let _26: core::panicking::AssertKind; // in scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
        scope 6 {
            debug kind => _26;           // in scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
        }
    }
    scope 7 {
        debug res => _37;                // in scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:13: 118:16
    }
    scope 8 {
        debug left_val => _53;           // in scope 8 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        debug right_val => _54;          // in scope 8 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        let _59: core::panicking::AssertKind; // in scope 8 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
        scope 9 {
            debug kind => _59;           // in scope 9 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
        }
    }
    scope 10 {
        debug res => _70;                // in scope 10 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:13: 118:16
    }
    scope 11 {
        debug left_val => _87;           // in scope 11 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        debug right_val => _88;          // in scope 11 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        let _93: core::panicking::AssertKind; // in scope 11 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
        scope 12 {
            debug kind => _93;           // in scope 12 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
        }
    }

    bb0: {
        _108 = const _;                  // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
                                         // + literal: Const { ty: &usize, val: Unevaluated(v::check, [], Some(promoted[7])) }
        _2 = _108;                       // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _107 = const _;                  // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // + literal: Const { ty: &usize, val: Unevaluated(v::check, [], Some(promoted[6])) }
        _3 = _107;                       // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _1 = (move _2, move _3);         // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _4 = (_1.0: &usize);             // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _5 = (_1.1: &usize);             // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _106 = const _;                  // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
                                         // + literal: Const { ty: &i32, val: Unevaluated(v::check, [], Some(promoted[5])) }
        _8 = _106;                       // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _105 = const _;                  // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // + literal: Const { ty: &i32, val: Unevaluated(v::check, [], Some(promoted[4])) }
        _9 = _105;                       // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _7 = (move _8, move _9);         // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _10 = (_7.0: &i32);              // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _11 = (_7.1: &i32);              // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _16 = const 388446023_isize;     // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:18:28: 18:29
        _17 = const true;                // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:18:28: 18:29
        assume(_17);                     // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:18:28: 18:29
        _18 = const true;                // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:18:28: 18:29
        assume(_18);                     // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:18:28: 18:29
        _15 = move _16 as i32 (IntToInt); // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:18:28: 18:29
        _14 = &_15;                      // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _104 = const _;                  // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // + literal: Const { ty: &i32, val: Unevaluated(v::check, [], Some(promoted[3])) }
        _19 = _104;                      // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _13 = (move _14, move _19);      // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _20 = (_13.0: &i32);             // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _21 = (_13.1: &i32);             // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _24 = (*_20);                    // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
        _25 = const 388446023_i32;       // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
        _23 = Eq(move _24, move _25);    // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
        _22 = Not(move _23);             // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
        switchInt(move _22) -> [0: bb2, otherwise: bb1]; // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    }

    bb1: {
        _26 = const core::panicking::AssertKind::Eq; // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _28 = const core::panicking::AssertKind::Eq; // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _30 = _20;                       // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _29 = _30;                       // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _32 = _21;                       // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _31 = _32;                       // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _33 = Option::<Arguments<'_>>::None; // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
        _27 = core::panicking::assert_failed::<i32, i32>(move _28, move _29, move _31, move _33); // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:53
                                         // + literal: Const { ty: for<'a, 'b, 'c> fn(core::panicking::AssertKind, &'a i32, &'b i32, Option<Arguments<'c>>) -> ! {core::panicking::assert_failed::<i32, i32>}, val: Value(<ZST>) }
    }

    bb2: {
        _103 = const _;                  // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:19:36: 19:42
                                         // mir::Constant
                                         // + span: ui/struct-enums/enum-discrim-width-stuff.rs:19:36: 19:42
                                         // + literal: Const { ty: &[&str; 1], val: Unevaluated(v::check, [], Some(promoted[2])) }
        _41 = _103;                      // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:19:36: 19:42
        _40 = _41;                       // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:19:36: 19:42
        _39 = move _40 as &[&str] (Pointer(Unsize)); // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:19:36: 19:42
        _102 = const _;                  // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:19:44: 19:48
                                         // mir::Constant
                                         // + span: ui/struct-enums/enum-discrim-width-stuff.rs:19:44: 19:48
                                         // + literal: Const { ty: &v::E, val: Unevaluated(v::check, [], Some(promoted[1])) }
        _48 = _102;                      // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:19:44: 19:48
        _47 = _48;                       // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:19:44: 19:48
        _46 = core::fmt::ArgumentV1::<'_>::new_debug::<v::E>(move _47) -> bb3; // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:19:44: 19:48
                                         // mir::Constant
                                         // + span: ui/struct-enums/enum-discrim-width-stuff.rs:19:44: 19:48
                                         // + user_ty: UserType(1)
                                         // + literal: Const { ty: for<'b> fn(&'b v::E) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_debug::<v::E>}, val: Value(<ZST>) }
    }

    bb3: {
        _45 = [move _46];                // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
        _44 = &_45;                      // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
        _43 = _44;                       // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
        _42 = move _43 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
        _38 = Arguments::<'_>::new_v1(move _39, move _42) -> bb4; // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb4: {
        _37 = format(move _38) -> bb5;   // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:19: 118:80
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:19: 118:38
                                         // + literal: Const { ty: for<'a> fn(Arguments<'a>) -> String {format}, val: Value(<ZST>) }
    }

    bb5: {
        _36 = move _37;                  // scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:119:9: 119:12
        _35 = &_36;                      // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _52 = const "V";                 // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:19:51: 19:54
                                         // mir::Constant
                                         // + span: ui/struct-enums/enum-discrim-width-stuff.rs:19:51: 19:54
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _51 = _52;                       // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:19:51: 19:66
        _50 = <str as ToString>::to_string(move _51) -> [return: bb6, unwind: bb24]; // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:19:51: 19:66
                                         // mir::Constant
                                         // + span: ui/struct-enums/enum-discrim-width-stuff.rs:19:55: 19:64
                                         // + literal: Const { ty: for<'a> fn(&'a str) -> String {<str as ToString>::to_string}, val: Value(<ZST>) }
    }

    bb6: {
        _49 = &_50;                      // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _34 = (move _35, move _49);      // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _53 = (_34.0: &std::string::String); // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _54 = (_34.1: &std::string::String); // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _57 = _53;                       // scope 8 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
        _58 = _54;                       // scope 8 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
        _56 = <String as PartialEq>::eq(move _57, move _58) -> [return: bb7, unwind: bb23]; // scope 8 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a String, &'b String) -> bool {<String as PartialEq>::eq}, val: Value(<ZST>) }
    }

    bb7: {
        _55 = Not(move _56);             // scope 8 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
        switchInt(move _55) -> [0: bb9, otherwise: bb8]; // scope 8 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    }

    bb8: {
        _59 = const core::panicking::AssertKind::Eq; // scope 8 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _61 = const core::panicking::AssertKind::Eq; // scope 9 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _63 = _53;                       // scope 9 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _62 = _63;                       // scope 9 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _65 = _54;                       // scope 9 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _64 = _65;                       // scope 9 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _66 = Option::<Arguments<'_>>::None; // scope 9 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
        _60 = core::panicking::assert_failed::<String, String>(move _61, move _62, move _64, move _66) -> bb23; // scope 9 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:53
                                         // + literal: Const { ty: for<'a, 'b, 'c> fn(core::panicking::AssertKind, &'a String, &'b String, Option<Arguments<'c>>) -> ! {core::panicking::assert_failed::<String, String>}, val: Value(<ZST>) }
    }

    bb9: {
        drop(_50) -> [return: bb10, unwind: bb24]; // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:48:9: 48:10
    }

    bb10: {
        drop(_36) -> bb11;               // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:48:9: 48:10
    }

    bb11: {
        _101 = const _;                  // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:20:36: 20:42
                                         // mir::Constant
                                         // + span: ui/struct-enums/enum-discrim-width-stuff.rs:20:36: 20:42
                                         // + literal: Const { ty: &[&str; 1], val: Unevaluated(v::check, [], Some(promoted[0])) }
        _74 = _101;                      // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:20:36: 20:42
        _73 = _74;                       // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:20:36: 20:42
        _72 = move _73 as &[&str] (Pointer(Unsize)); // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:20:36: 20:42
        _82 = const {alloc35: &v::E};    // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:20:44: 20:45
                                         // mir::Constant
                                         // + span: ui/struct-enums/enum-discrim-width-stuff.rs:20:44: 20:45
                                         // + literal: Const { ty: &v::E, val: Value(Scalar(alloc35)) }
        _81 = _82;                       // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:20:44: 20:45
        _80 = _81;                       // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:20:44: 20:45
        _79 = core::fmt::ArgumentV1::<'_>::new_debug::<v::E>(move _80) -> bb12; // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:20:44: 20:45
                                         // mir::Constant
                                         // + span: ui/struct-enums/enum-discrim-width-stuff.rs:20:44: 20:45
                                         // + user_ty: UserType(3)
                                         // + literal: Const { ty: for<'b> fn(&'b v::E) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_debug::<v::E>}, val: Value(<ZST>) }
    }

    bb12: {
        _78 = [move _79];                // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
        _77 = &_78;                      // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
        _76 = _77;                       // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
        _75 = move _76 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
        _71 = Arguments::<'_>::new_v1(move _72, move _75) -> bb13; // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
                                         // + user_ty: UserType(2)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb13: {
        _70 = format(move _71) -> bb14;  // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:19: 118:80
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:19: 118:38
                                         // + literal: Const { ty: for<'a> fn(Arguments<'a>) -> String {format}, val: Value(<ZST>) }
    }

    bb14: {
        _69 = move _70;                  // scope 10 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:119:9: 119:12
        _68 = &_69;                      // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _86 = const "V";                 // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:20:48: 20:51
                                         // mir::Constant
                                         // + span: ui/struct-enums/enum-discrim-width-stuff.rs:20:48: 20:51
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _85 = _86;                       // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:20:48: 20:63
        _84 = <str as ToString>::to_string(move _85) -> [return: bb15, unwind: bb22]; // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:20:48: 20:63
                                         // mir::Constant
                                         // + span: ui/struct-enums/enum-discrim-width-stuff.rs:20:52: 20:61
                                         // + literal: Const { ty: for<'a> fn(&'a str) -> String {<str as ToString>::to_string}, val: Value(<ZST>) }
    }

    bb15: {
        _83 = &_84;                      // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _67 = (move _68, move _83);      // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _87 = (_67.0: &std::string::String); // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _88 = (_67.1: &std::string::String); // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _91 = _87;                       // scope 11 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
        _92 = _88;                       // scope 11 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
        _90 = <String as PartialEq>::eq(move _91, move _92) -> [return: bb16, unwind: bb21]; // scope 11 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a String, &'b String) -> bool {<String as PartialEq>::eq}, val: Value(<ZST>) }
    }

    bb16: {
        _89 = Not(move _90);             // scope 11 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
        switchInt(move _89) -> [0: bb18, otherwise: bb17]; // scope 11 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    }

    bb17: {
        _93 = const core::panicking::AssertKind::Eq; // scope 11 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _95 = const core::panicking::AssertKind::Eq; // scope 12 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _97 = _87;                       // scope 12 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _96 = _97;                       // scope 12 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _99 = _88;                       // scope 12 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _98 = _99;                       // scope 12 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _100 = Option::<Arguments<'_>>::None; // scope 12 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
        _94 = core::panicking::assert_failed::<String, String>(move _95, move _96, move _98, move _100) -> bb21; // scope 12 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:53
                                         // + literal: Const { ty: for<'a, 'b, 'c> fn(core::panicking::AssertKind, &'a String, &'b String, Option<Arguments<'c>>) -> ! {core::panicking::assert_failed::<String, String>}, val: Value(<ZST>) }
    }

    bb18: {
        drop(_84) -> [return: bb19, unwind: bb22]; // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:48:9: 48:10
    }

    bb19: {
        drop(_69) -> bb20;               // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:48:9: 48:10
    }

    bb20: {
        return;                          // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:21:14: 21:14
    }

    bb21 (cleanup): {
        drop(_84) -> bb22;               // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:48:9: 48:10
    }

    bb22 (cleanup): {
        drop(_69) -> bb25;               // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:48:9: 48:10
    }

    bb23 (cleanup): {
        drop(_50) -> bb24;               // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:48:9: 48:10
    }

    bb24 (cleanup): {
        drop(_36) -> bb25;               // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:48:9: 48:10
    }

    bb25 (cleanup): {
        resume;                          // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:15:13: 21:14
    }
}

alloc35 (static: v::C, size: 4, align: 4) {
    47 37 27 17                                     │ G7'.
}

promoted[0] in v::check: &[&str; 1] = {
    let mut _0: &[&str; 1];              // return place in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:20:36: 20:42
    let mut _1: [&str; 1];               // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:20:36: 20:42

    bb0: {
        _1 = [const ""];                 // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:20:36: 20:42
                                         // mir::Constant
                                         // + span: ui/struct-enums/enum-discrim-width-stuff.rs:20:36: 20:42
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:20:36: 20:42
        return;                          // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:20:36: 20:42
    }
}

promoted[1] in v::check: &v::E = {
    let mut _0: &main::v::E;             // return place in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:19:44: 19:48
    let mut _1: main::v::E;              // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:19:44: 19:48

    bb0: {
        _1 = v::E::V;                    // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:19:44: 19:48
        _0 = &_1;                        // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:19:44: 19:48
        return;                          // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:19:44: 19:48
    }
}

promoted[2] in v::check: &[&str; 1] = {
    let mut _0: &[&str; 1];              // return place in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:19:36: 19:42
    let mut _1: [&str; 1];               // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:19:36: 19:42

    bb0: {
        _1 = [const ""];                 // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:19:36: 19:42
                                         // mir::Constant
                                         // + span: ui/struct-enums/enum-discrim-width-stuff.rs:19:36: 19:42
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:19:36: 19:42
        return;                          // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:19:36: 19:42
    }
}

promoted[3] in v::check: &i32 = {
    let mut _0: &i32;                    // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _1: i32;                     // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:18:37: 18:39

    bb0: {
        _1 = const 388446023_i32;        // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:39:20: 39:30
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    }
}

promoted[4] in v::check: &i32 = {
    let mut _0: &i32;                    // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _1: i32;                     // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:17:40: 17:42

    bb0: {
        _1 = const 388446023_i32;        // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:39:20: 39:30
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    }
}

promoted[5] in v::check: &i32 = {
    let mut _0: &i32;                    // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let mut _1: i32;                     // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:17:28: 17:32
    let mut _2: isize;                   // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:17:28: 17:32
    let mut _3: (isize, bool);           // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:17:28: 17:32

    bb0: {
        _3 = CheckedAdd(const _, const 0_isize); // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:17:28: 17:32
        _2 = move (_3.0: isize);         // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:17:28: 17:32
        _1 = move _2 as i32 (IntToInt);  // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:17:28: 17:32
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    }
}

promoted[6] in v::check: &usize = {
    let mut _0: &usize;                  // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _1: usize;                   // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:16:44: 16:59

    bb0: {
        _1 = std::mem::size_of::<i32>() -> bb1; // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:16:44: 16:59
                                         // mir::Constant
                                         // + span: ui/struct-enums/enum-discrim-width-stuff.rs:16:44: 16:57
                                         // + literal: Const { ty: fn() -> usize {std::mem::size_of::<i32>}, val: Value(<ZST>) }
    }

    bb1: {
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    }
}

promoted[7] in v::check: &usize = {
    let mut _0: &usize;                  // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let mut _1: usize;                   // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:16:28: 16:42

    bb0: {
        _1 = std::mem::size_of::<v::E>() -> bb1; // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:16:28: 16:42
                                         // mir::Constant
                                         // + span: ui/struct-enums/enum-discrim-width-stuff.rs:16:28: 16:40
                                         // + literal: Const { ty: fn() -> usize {std::mem::size_of::<v::E>}, val: Value(<ZST>) }
    }

    bb1: {
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    }
}

u::E::V::{constant#0}: isize = {
    let mut _0: isize;                   // return place in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:40:20: 40:31

    bb0: {
        _0 = const -388446023_isize;     // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:40:20: 40:31
        return;                          // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:40:20: 40:31
    }
}

u::E::A::{constant#0}: isize = {
    let mut _0: isize;                   // return place in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:12:21: 12:22

    bb0: {
        _0 = const 0_isize;              // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:12:21: 12:22
        return;                          // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:12:21: 12:22
    }
}

fn u::<impl at ui/struct-enums/enum-discrim-width-stuff.rs:9:28: 9:33>::clone(_1: &u::E) -> u::E {
    debug self => _1;                    // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:9:28: 9:33
    let mut _0: main::u::E;              // return place in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:9:28: 9:33

    bb0: {
        _0 = (*_1);                      // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:9:28: 9:33
        return;                          // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:9:33: 9:33
    }
}

fn u::<impl at ui/struct-enums/enum-discrim-width-stuff.rs:9:35: 9:40>::fmt(_1: &u::E, _2: &mut Formatter<'_>) -> Result<(), std::fmt::Error> {
    debug self => _1;                    // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:9:35: 9:40
    debug f => _2;                       // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:9:35: 9:40
    let mut _0: std::result::Result<(), std::fmt::Error>; // return place in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:9:35: 9:40
    let mut _3: &mut std::fmt::Formatter<'_>; // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:9:35: 9:40
    let mut _4: &str;                    // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:9:35: 9:40
    let mut _5: isize;                   // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:9:35: 9:40
    let _6: &str;                        // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:9:35: 9:40
    let _7: &str;                        // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:9:35: 9:40

    bb0: {
        _3 = &mut (*_2);                 // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:9:35: 9:40
        _5 = discriminant((*_1));        // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:9:35: 9:40
        switchInt(move _5) -> [18446744073321105593: bb3, 0: bb1, otherwise: bb2]; // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:9:35: 9:40
    }

    bb1: {
        _7 = const "A";                  // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:9:35: 9:40
                                         // mir::Constant
                                         // + span: ui/struct-enums/enum-discrim-width-stuff.rs:9:35: 9:40
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _4 = _7;                         // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:9:35: 9:40
        goto -> bb4;                     // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:9:39: 9:40
    }

    bb2: {
        unreachable;                     // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:9:35: 9:40
    }

    bb3: {
        _6 = const "V";                  // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:9:35: 9:40
                                         // mir::Constant
                                         // + span: ui/struct-enums/enum-discrim-width-stuff.rs:9:35: 9:40
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _4 = _6;                         // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:9:35: 9:40
        goto -> bb4;                     // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:9:39: 9:40
    }

    bb4: {
        _0 = Formatter::<'_>::write_str(move _3, move _4) -> bb5; // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:9:35: 9:40
                                         // mir::Constant
                                         // + span: ui/struct-enums/enum-discrim-width-stuff.rs:9:35: 9:40
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a mut Formatter<'_>, &'b str) -> Result<(), std::fmt::Error> {Formatter::<'_>::write_str}, val: Value(<ZST>) }
    }

    bb5: {
        return;                          // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:9:40: 9:40
    }
}

static u::C: u::E = {
    let mut _0: main::u::E;              // return place in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:14:23: 14:24

    bb0: {
        _0 = u::E::V;                    // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:14:27: 14:31
        return;                          // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:14:13: 14:32
    }
}

fn u::check() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:15:28: 15:28
    let mut _1: (&usize, &usize);        // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _2: &usize;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let mut _3: &usize;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let _4: &usize;                      // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
    let _5: &usize;                      // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
    let mut _7: (&i32, &i32);            // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _8: &i32;                    // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let mut _9: &i32;                    // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let _10: &i32;                       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
    let _11: &i32;                       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
    let mut _13: (&i32, &i32);           // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _14: &i32;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let _15: i32;                        // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:18:28: 18:29
    let mut _16: isize;                  // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:18:28: 18:29
    let mut _17: &i32;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let _18: &i32;                       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
    let _19: &i32;                       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
    let mut _20: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    let mut _21: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
    let mut _22: i32;                    // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
    let mut _23: i32;                    // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
    let _25: !;                          // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
    let mut _26: core::panicking::AssertKind; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
    let mut _27: &i32;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let _28: &i32;                       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let mut _29: &i32;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let _30: &i32;                       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let mut _31: std::option::Option<std::fmt::Arguments<'_>>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
    let mut _32: (&std::string::String, &std::string::String); // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _33: &std::string::String;   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let _34: std::string::String;        // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:117:23: 120:6
    let _35: std::string::String;        // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:13: 118:16
    let mut _36: std::fmt::Arguments<'_>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
    let mut _37: &[&str];                // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:19:36: 19:42
    let mut _38: &[&str; 1];             // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:19:36: 19:42
    let _39: &[&str; 1];                 // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:19:36: 19:42
    let mut _40: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
    let mut _41: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
    let _42: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
    let _43: [core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
    let mut _44: core::fmt::ArgumentV1<'_>; // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:19:44: 19:48
    let mut _45: &main::u::E;            // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:19:44: 19:48
    let _46: &main::u::E;                // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:19:44: 19:48
    let mut _47: &std::string::String;   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let _48: std::string::String;        // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:19:51: 19:66
    let mut _49: &str;                   // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:19:51: 19:66
    let _50: &str;                       // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:19:51: 19:54
    let _51: &std::string::String;       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
    let _52: &std::string::String;       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
    let mut _53: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    let mut _54: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
    let mut _55: &std::string::String;   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
    let mut _56: &std::string::String;   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
    let _58: !;                          // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
    let mut _59: core::panicking::AssertKind; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
    let mut _60: &std::string::String;   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let _61: &std::string::String;       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let mut _62: &std::string::String;   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let _63: &std::string::String;       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let mut _64: std::option::Option<std::fmt::Arguments<'_>>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
    let mut _65: (&std::string::String, &std::string::String); // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _66: &std::string::String;   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let _67: std::string::String;        // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:117:23: 120:6
    let _68: std::string::String;        // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:13: 118:16
    let mut _69: std::fmt::Arguments<'_>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
    let mut _70: &[&str];                // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:20:36: 20:42
    let mut _71: &[&str; 1];             // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:20:36: 20:42
    let _72: &[&str; 1];                 // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:20:36: 20:42
    let mut _73: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
    let mut _74: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
    let _75: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
    let _76: [core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
    let mut _77: core::fmt::ArgumentV1<'_>; // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:20:44: 20:45
    let mut _78: &main::u::E;            // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:20:44: 20:45
    let _79: &main::u::E;                // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:20:44: 20:45
    let _80: &main::u::E;                // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:20:44: 20:45
    let mut _81: &std::string::String;   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let _82: std::string::String;        // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:20:48: 20:63
    let mut _83: &str;                   // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:20:48: 20:63
    let _84: &str;                       // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:20:48: 20:51
    let _85: &std::string::String;       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
    let _86: &std::string::String;       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
    let mut _87: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    let mut _88: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
    let mut _89: &std::string::String;   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
    let mut _90: &std::string::String;   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
    let _92: !;                          // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
    let mut _93: core::panicking::AssertKind; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
    let mut _94: &std::string::String;   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let _95: &std::string::String;       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let mut _96: &std::string::String;   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let _97: &std::string::String;       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let mut _98: std::option::Option<std::fmt::Arguments<'_>>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
    let mut _99: &[&str; 1];             // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:20:36: 20:42
    let mut _100: &main::u::E;           // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:19:44: 19:48
    let mut _101: &[&str; 1];            // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:19:36: 19:42
    let mut _102: &i32;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _103: &i32;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _104: &i32;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let mut _105: &usize;                // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _106: &usize;                // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    scope 1 {
        debug left_val => _4;            // in scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        debug right_val => _5;           // in scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        let _6: core::panicking::AssertKind; // in scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
        scope 2 {
            debug kind => _6;            // in scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
        }
    }
    scope 3 {
        debug left_val => _10;           // in scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        debug right_val => _11;          // in scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        let _12: core::panicking::AssertKind; // in scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
        scope 4 {
            debug kind => _12;           // in scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
        }
    }
    scope 5 {
        debug left_val => _18;           // in scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        debug right_val => _19;          // in scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        let _24: core::panicking::AssertKind; // in scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
        scope 6 {
            debug kind => _24;           // in scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
        }
    }
    scope 7 {
        debug res => _35;                // in scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:13: 118:16
    }
    scope 8 {
        debug left_val => _51;           // in scope 8 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        debug right_val => _52;          // in scope 8 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        let _57: core::panicking::AssertKind; // in scope 8 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
        scope 9 {
            debug kind => _57;           // in scope 9 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
        }
    }
    scope 10 {
        debug res => _68;                // in scope 10 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:13: 118:16
    }
    scope 11 {
        debug left_val => _85;           // in scope 11 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        debug right_val => _86;          // in scope 11 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        let _91: core::panicking::AssertKind; // in scope 11 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
        scope 12 {
            debug kind => _91;           // in scope 12 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
        }
    }

    bb0: {
        _106 = const _;                  // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
                                         // + literal: Const { ty: &usize, val: Unevaluated(u::check, [], Some(promoted[7])) }
        _2 = _106;                       // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _105 = const _;                  // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // + literal: Const { ty: &usize, val: Unevaluated(u::check, [], Some(promoted[6])) }
        _3 = _105;                       // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _1 = (move _2, move _3);         // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _4 = (_1.0: &usize);             // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _5 = (_1.1: &usize);             // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _104 = const _;                  // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
                                         // + literal: Const { ty: &i32, val: Unevaluated(u::check, [], Some(promoted[5])) }
        _8 = _104;                       // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _103 = const _;                  // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // + literal: Const { ty: &i32, val: Unevaluated(u::check, [], Some(promoted[4])) }
        _9 = _103;                       // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _7 = (move _8, move _9);         // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _10 = (_7.0: &i32);              // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _11 = (_7.1: &i32);              // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _16 = const -388446023_isize;    // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:18:28: 18:29
        _15 = move _16 as i32 (IntToInt); // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:18:28: 18:29
        _14 = &_15;                      // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _102 = const _;                  // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // + literal: Const { ty: &i32, val: Unevaluated(u::check, [], Some(promoted[3])) }
        _17 = _102;                      // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _13 = (move _14, move _17);      // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _18 = (_13.0: &i32);             // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _19 = (_13.1: &i32);             // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _22 = (*_18);                    // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
        _23 = const -388446023_i32;      // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
        _21 = Eq(move _22, move _23);    // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
        _20 = Not(move _21);             // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
        switchInt(move _20) -> [0: bb2, otherwise: bb1]; // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    }

    bb1: {
        _24 = const core::panicking::AssertKind::Eq; // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _26 = const core::panicking::AssertKind::Eq; // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _28 = _18;                       // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _27 = _28;                       // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _30 = _19;                       // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _29 = _30;                       // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _31 = Option::<Arguments<'_>>::None; // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
        _25 = core::panicking::assert_failed::<i32, i32>(move _26, move _27, move _29, move _31); // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:53
                                         // + literal: Const { ty: for<'a, 'b, 'c> fn(core::panicking::AssertKind, &'a i32, &'b i32, Option<Arguments<'c>>) -> ! {core::panicking::assert_failed::<i32, i32>}, val: Value(<ZST>) }
    }

    bb2: {
        _101 = const _;                  // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:19:36: 19:42
                                         // mir::Constant
                                         // + span: ui/struct-enums/enum-discrim-width-stuff.rs:19:36: 19:42
                                         // + literal: Const { ty: &[&str; 1], val: Unevaluated(u::check, [], Some(promoted[2])) }
        _39 = _101;                      // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:19:36: 19:42
        _38 = _39;                       // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:19:36: 19:42
        _37 = move _38 as &[&str] (Pointer(Unsize)); // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:19:36: 19:42
        _100 = const _;                  // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:19:44: 19:48
                                         // mir::Constant
                                         // + span: ui/struct-enums/enum-discrim-width-stuff.rs:19:44: 19:48
                                         // + literal: Const { ty: &u::E, val: Unevaluated(u::check, [], Some(promoted[1])) }
        _46 = _100;                      // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:19:44: 19:48
        _45 = _46;                       // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:19:44: 19:48
        _44 = core::fmt::ArgumentV1::<'_>::new_debug::<u::E>(move _45) -> bb3; // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:19:44: 19:48
                                         // mir::Constant
                                         // + span: ui/struct-enums/enum-discrim-width-stuff.rs:19:44: 19:48
                                         // + user_ty: UserType(1)
                                         // + literal: Const { ty: for<'b> fn(&'b u::E) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_debug::<u::E>}, val: Value(<ZST>) }
    }

    bb3: {
        _43 = [move _44];                // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
        _42 = &_43;                      // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
        _41 = _42;                       // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
        _40 = move _41 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
        _36 = Arguments::<'_>::new_v1(move _37, move _40) -> bb4; // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb4: {
        _35 = format(move _36) -> bb5;   // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:19: 118:80
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:19: 118:38
                                         // + literal: Const { ty: for<'a> fn(Arguments<'a>) -> String {format}, val: Value(<ZST>) }
    }

    bb5: {
        _34 = move _35;                  // scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:119:9: 119:12
        _33 = &_34;                      // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _50 = const "V";                 // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:19:51: 19:54
                                         // mir::Constant
                                         // + span: ui/struct-enums/enum-discrim-width-stuff.rs:19:51: 19:54
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _49 = _50;                       // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:19:51: 19:66
        _48 = <str as ToString>::to_string(move _49) -> [return: bb6, unwind: bb24]; // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:19:51: 19:66
                                         // mir::Constant
                                         // + span: ui/struct-enums/enum-discrim-width-stuff.rs:19:55: 19:64
                                         // + literal: Const { ty: for<'a> fn(&'a str) -> String {<str as ToString>::to_string}, val: Value(<ZST>) }
    }

    bb6: {
        _47 = &_48;                      // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _32 = (move _33, move _47);      // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _51 = (_32.0: &std::string::String); // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _52 = (_32.1: &std::string::String); // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _55 = _51;                       // scope 8 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
        _56 = _52;                       // scope 8 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
        _54 = <String as PartialEq>::eq(move _55, move _56) -> [return: bb7, unwind: bb23]; // scope 8 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a String, &'b String) -> bool {<String as PartialEq>::eq}, val: Value(<ZST>) }
    }

    bb7: {
        _53 = Not(move _54);             // scope 8 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
        switchInt(move _53) -> [0: bb9, otherwise: bb8]; // scope 8 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    }

    bb8: {
        _57 = const core::panicking::AssertKind::Eq; // scope 8 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _59 = const core::panicking::AssertKind::Eq; // scope 9 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _61 = _51;                       // scope 9 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _60 = _61;                       // scope 9 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _63 = _52;                       // scope 9 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _62 = _63;                       // scope 9 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _64 = Option::<Arguments<'_>>::None; // scope 9 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
        _58 = core::panicking::assert_failed::<String, String>(move _59, move _60, move _62, move _64) -> bb23; // scope 9 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:53
                                         // + literal: Const { ty: for<'a, 'b, 'c> fn(core::panicking::AssertKind, &'a String, &'b String, Option<Arguments<'c>>) -> ! {core::panicking::assert_failed::<String, String>}, val: Value(<ZST>) }
    }

    bb9: {
        drop(_48) -> [return: bb10, unwind: bb24]; // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:48:9: 48:10
    }

    bb10: {
        drop(_34) -> bb11;               // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:48:9: 48:10
    }

    bb11: {
        _99 = const _;                   // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:20:36: 20:42
                                         // mir::Constant
                                         // + span: ui/struct-enums/enum-discrim-width-stuff.rs:20:36: 20:42
                                         // + literal: Const { ty: &[&str; 1], val: Unevaluated(u::check, [], Some(promoted[0])) }
        _72 = _99;                       // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:20:36: 20:42
        _71 = _72;                       // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:20:36: 20:42
        _70 = move _71 as &[&str] (Pointer(Unsize)); // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:20:36: 20:42
        _80 = const {alloc36: &u::E};    // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:20:44: 20:45
                                         // mir::Constant
                                         // + span: ui/struct-enums/enum-discrim-width-stuff.rs:20:44: 20:45
                                         // + literal: Const { ty: &u::E, val: Value(Scalar(alloc36)) }
        _79 = _80;                       // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:20:44: 20:45
        _78 = _79;                       // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:20:44: 20:45
        _77 = core::fmt::ArgumentV1::<'_>::new_debug::<u::E>(move _78) -> bb12; // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:20:44: 20:45
                                         // mir::Constant
                                         // + span: ui/struct-enums/enum-discrim-width-stuff.rs:20:44: 20:45
                                         // + user_ty: UserType(3)
                                         // + literal: Const { ty: for<'b> fn(&'b u::E) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_debug::<u::E>}, val: Value(<ZST>) }
    }

    bb12: {
        _76 = [move _77];                // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
        _75 = &_76;                      // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
        _74 = _75;                       // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
        _73 = move _74 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
        _69 = Arguments::<'_>::new_v1(move _70, move _73) -> bb13; // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
                                         // + user_ty: UserType(2)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb13: {
        _68 = format(move _69) -> bb14;  // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:19: 118:80
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:19: 118:38
                                         // + literal: Const { ty: for<'a> fn(Arguments<'a>) -> String {format}, val: Value(<ZST>) }
    }

    bb14: {
        _67 = move _68;                  // scope 10 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:119:9: 119:12
        _66 = &_67;                      // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _84 = const "V";                 // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:20:48: 20:51
                                         // mir::Constant
                                         // + span: ui/struct-enums/enum-discrim-width-stuff.rs:20:48: 20:51
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _83 = _84;                       // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:20:48: 20:63
        _82 = <str as ToString>::to_string(move _83) -> [return: bb15, unwind: bb22]; // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:20:48: 20:63
                                         // mir::Constant
                                         // + span: ui/struct-enums/enum-discrim-width-stuff.rs:20:52: 20:61
                                         // + literal: Const { ty: for<'a> fn(&'a str) -> String {<str as ToString>::to_string}, val: Value(<ZST>) }
    }

    bb15: {
        _81 = &_82;                      // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _65 = (move _66, move _81);      // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _85 = (_65.0: &std::string::String); // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _86 = (_65.1: &std::string::String); // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _89 = _85;                       // scope 11 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
        _90 = _86;                       // scope 11 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
        _88 = <String as PartialEq>::eq(move _89, move _90) -> [return: bb16, unwind: bb21]; // scope 11 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a String, &'b String) -> bool {<String as PartialEq>::eq}, val: Value(<ZST>) }
    }

    bb16: {
        _87 = Not(move _88);             // scope 11 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
        switchInt(move _87) -> [0: bb18, otherwise: bb17]; // scope 11 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    }

    bb17: {
        _91 = const core::panicking::AssertKind::Eq; // scope 11 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _93 = const core::panicking::AssertKind::Eq; // scope 12 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _95 = _85;                       // scope 12 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _94 = _95;                       // scope 12 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _97 = _86;                       // scope 12 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _96 = _97;                       // scope 12 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _98 = Option::<Arguments<'_>>::None; // scope 12 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
        _92 = core::panicking::assert_failed::<String, String>(move _93, move _94, move _96, move _98) -> bb21; // scope 12 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:53
                                         // + literal: Const { ty: for<'a, 'b, 'c> fn(core::panicking::AssertKind, &'a String, &'b String, Option<Arguments<'c>>) -> ! {core::panicking::assert_failed::<String, String>}, val: Value(<ZST>) }
    }

    bb18: {
        drop(_82) -> [return: bb19, unwind: bb22]; // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:48:9: 48:10
    }

    bb19: {
        drop(_67) -> bb20;               // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:48:9: 48:10
    }

    bb20: {
        return;                          // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:21:14: 21:14
    }

    bb21 (cleanup): {
        drop(_82) -> bb22;               // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:48:9: 48:10
    }

    bb22 (cleanup): {
        drop(_67) -> bb25;               // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:48:9: 48:10
    }

    bb23 (cleanup): {
        drop(_48) -> bb24;               // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:48:9: 48:10
    }

    bb24 (cleanup): {
        drop(_34) -> bb25;               // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:48:9: 48:10
    }

    bb25 (cleanup): {
        resume;                          // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:15:13: 21:14
    }
}

alloc36 (static: u::C, size: 4, align: 4) {
    b9 c8 d8 e8                                     │ ....
}

promoted[0] in u::check: &[&str; 1] = {
    let mut _0: &[&str; 1];              // return place in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:20:36: 20:42
    let mut _1: [&str; 1];               // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:20:36: 20:42

    bb0: {
        _1 = [const ""];                 // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:20:36: 20:42
                                         // mir::Constant
                                         // + span: ui/struct-enums/enum-discrim-width-stuff.rs:20:36: 20:42
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:20:36: 20:42
        return;                          // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:20:36: 20:42
    }
}

promoted[1] in u::check: &u::E = {
    let mut _0: &main::u::E;             // return place in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:19:44: 19:48
    let mut _1: main::u::E;              // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:19:44: 19:48

    bb0: {
        _1 = u::E::V;                    // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:19:44: 19:48
        _0 = &_1;                        // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:19:44: 19:48
        return;                          // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:19:44: 19:48
    }
}

promoted[2] in u::check: &[&str; 1] = {
    let mut _0: &[&str; 1];              // return place in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:19:36: 19:42
    let mut _1: [&str; 1];               // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:19:36: 19:42

    bb0: {
        _1 = [const ""];                 // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:19:36: 19:42
                                         // mir::Constant
                                         // + span: ui/struct-enums/enum-discrim-width-stuff.rs:19:36: 19:42
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:19:36: 19:42
        return;                          // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:19:36: 19:42
    }
}

promoted[3] in u::check: &i32 = {
    let mut _0: &i32;                    // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _1: i32;                     // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:18:37: 18:39

    bb0: {
        _1 = const -388446023_i32;       // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:40:20: 40:31
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    }
}

promoted[4] in u::check: &i32 = {
    let mut _0: &i32;                    // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _1: i32;                     // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:17:40: 17:42

    bb0: {
        _1 = const -388446023_i32;       // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:40:20: 40:31
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    }
}

promoted[5] in u::check: &i32 = {
    let mut _0: &i32;                    // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let mut _1: i32;                     // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:17:28: 17:32
    let mut _2: isize;                   // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:17:28: 17:32
    let mut _3: (isize, bool);           // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:17:28: 17:32

    bb0: {
        _3 = CheckedAdd(const _, const 0_isize); // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:17:28: 17:32
        _2 = move (_3.0: isize);         // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:17:28: 17:32
        _1 = move _2 as i32 (IntToInt);  // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:17:28: 17:32
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    }
}

promoted[6] in u::check: &usize = {
    let mut _0: &usize;                  // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _1: usize;                   // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:16:44: 16:59

    bb0: {
        _1 = std::mem::size_of::<i32>() -> bb1; // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:16:44: 16:59
                                         // mir::Constant
                                         // + span: ui/struct-enums/enum-discrim-width-stuff.rs:16:44: 16:57
                                         // + literal: Const { ty: fn() -> usize {std::mem::size_of::<i32>}, val: Value(<ZST>) }
    }

    bb1: {
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    }
}

promoted[7] in u::check: &usize = {
    let mut _0: &usize;                  // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let mut _1: usize;                   // in scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:16:28: 16:42

    bb0: {
        _1 = std::mem::size_of::<u::E>() -> bb1; // scope 0 at ui/struct-enums/enum-discrim-width-stuff.rs:16:28: 16:42
                                         // mir::Constant
                                         // + span: ui/struct-enums/enum-discrim-width-stuff.rs:16:28: 16:40
                                         // + literal: Const { ty: fn() -> usize {std::mem::size_of::<u::E>}, val: Value(<ZST>) }
    }

    bb1: {
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    }
}
