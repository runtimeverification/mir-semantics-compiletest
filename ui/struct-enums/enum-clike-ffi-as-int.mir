// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
Foo::A::{constant#0}: u32 = {
    let mut _0: u32;                     // return place in scope 0 at ui/struct-enums/enum-clike-ffi-as-int.rs:20:9: 20:10

    bb0: {
        _0 = const 0_u32;                // scope 0 at ui/struct-enums/enum-clike-ffi-as-int.rs:20:9: 20:10
        return;                          // scope 0 at ui/struct-enums/enum-clike-ffi-as-int.rs:20:9: 20:10
    }
}

Foo::B::{constant#0}: u32 = {
    let mut _0: u32;                     // return place in scope 0 at ui/struct-enums/enum-clike-ffi-as-int.rs:21:9: 21:11

    bb0: {
        _0 = const 23_u32;               // scope 0 at ui/struct-enums/enum-clike-ffi-as-int.rs:21:9: 21:11
        return;                          // scope 0 at ui/struct-enums/enum-clike-ffi-as-int.rs:21:9: 21:11
    }
}

fn foo(_1: usize) -> Foo {
    debug _x => _1;                      // in scope 0 at ui/struct-enums/enum-clike-ffi-as-int.rs:25:19: 25:21
    let mut _0: Foo;                     // return place in scope 0 at ui/struct-enums/enum-clike-ffi-as-int.rs:25:33: 25:36

    bb0: {
        _0 = const Foo::B;               // scope 0 at ui/struct-enums/enum-clike-ffi-as-int.rs:25:39: 25:45
                                         // mir::Constant
                                         // + span: ui/struct-enums/enum-clike-ffi-as-int.rs:25:39: 25:45
                                         // + literal: Const { ty: Foo, val: Value(Scalar(0x00000017)) }
        return;                          // scope 0 at ui/struct-enums/enum-clike-ffi-as-int.rs:25:47: 25:47
    }
}

fn main() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/struct-enums/enum-clike-ffi-as-int.rs:27:15: 27:15
    let mut _2: extern "C" fn(usize) -> Foo; // in scope 0 at ui/struct-enums/enum-clike-ffi-as-int.rs:30:35: 30:69
    let mut _3: (&u32, &u32);            // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _4: &u32;                    // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let _5: u32;                         // in scope 0 at ui/struct-enums/enum-clike-ffi-as-int.rs:31:20: 31:33
    let mut _6: extern "C" fn(usize) -> u32; // in scope 0 at ui/struct-enums/enum-clike-ffi-as-int.rs:31:20: 31:21
    let mut _7: &u32;                    // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _10: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    let mut _11: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
    let mut _12: u32;                    // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
    let mut _13: u32;                    // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
    let _15: !;                          // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
    let mut _16: core::panicking::AssertKind; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
    let mut _17: &u32;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let _18: &u32;                       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let mut _19: &u32;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let _20: &u32;                       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let mut _21: std::option::Option<std::fmt::Arguments<'_>>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
    scope 1 {
        let _1: extern "C" fn(usize) -> u32; // in scope 1 at ui/struct-enums/enum-clike-ffi-as-int.rs:29:13: 29:14
        scope 2 {
            debug f => _1;               // in scope 2 at ui/struct-enums/enum-clike-ffi-as-int.rs:29:13: 29:14
            let _8: &u32;                // in scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
            let _9: &u32;                // in scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
            let mut _22: &u32;           // in scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
            scope 3 {
                debug left_val => _8;    // in scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
                debug right_val => _9;   // in scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
                let _14: core::panicking::AssertKind; // in scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                scope 4 {
                    debug kind => _14;   // in scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                }
            }
        }
    }

    bb0: {
        _2 = foo as extern "C" fn(usize) -> Foo (Pointer(ReifyFnPointer)); // scope 1 at ui/struct-enums/enum-clike-ffi-as-int.rs:30:35: 30:38
                                         // mir::Constant
                                         // + span: ui/struct-enums/enum-clike-ffi-as-int.rs:30:35: 30:38
                                         // + literal: Const { ty: extern "C" fn(usize) -> Foo {foo}, val: Value(<ZST>) }
        _1 = transmute::<extern "C" fn(usize) -> Foo, extern "C" fn(usize) -> u32>(move _2) -> bb1; // scope 1 at ui/struct-enums/enum-clike-ffi-as-int.rs:30:13: 30:70
                                         // mir::Constant
                                         // + span: ui/struct-enums/enum-clike-ffi-as-int.rs:30:13: 30:34
                                         // + literal: Const { ty: unsafe extern "rust-intrinsic" fn(extern "C" fn(usize) -> Foo) -> extern "C" fn(usize) -> u32 {transmute::<extern "C" fn(usize) -> Foo, extern "C" fn(usize) -> u32>}, val: Value(<ZST>) }
    }

    bb1: {
        _6 = _1;                         // scope 2 at ui/struct-enums/enum-clike-ffi-as-int.rs:31:20: 31:21
        _5 = move _6(const 3735928559_usize) -> bb2; // scope 2 at ui/struct-enums/enum-clike-ffi-as-int.rs:31:20: 31:33
    }

    bb2: {
        _4 = &_5;                        // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _22 = const _;                   // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // + literal: Const { ty: &u32, val: Unevaluated(main, [], Some(promoted[0])) }
        _7 = _22;                        // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _3 = (move _4, move _7);         // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _8 = (_3.0: &u32);               // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _9 = (_3.1: &u32);               // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _12 = (*_8);                     // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
        _13 = const 23_u32;              // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
        _11 = Eq(move _12, move _13);    // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
        _10 = Not(move _11);             // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
        switchInt(move _10) -> [0: bb4, otherwise: bb3]; // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    }

    bb3: {
        _14 = const core::panicking::AssertKind::Eq; // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _16 = const core::panicking::AssertKind::Eq; // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _18 = _8;                        // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _17 = _18;                       // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _20 = _9;                        // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _19 = _20;                       // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _21 = Option::<Arguments<'_>>::None; // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
        _15 = core::panicking::assert_failed::<u32, u32>(move _16, move _17, move _19, move _21); // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:53
                                         // + literal: Const { ty: for<'a, 'b, 'c> fn(core::panicking::AssertKind, &'a u32, &'b u32, Option<Arguments<'c>>) -> ! {core::panicking::assert_failed::<u32, u32>}, val: Value(<ZST>) }
    }

    bb4: {
        return;                          // scope 0 at ui/struct-enums/enum-clike-ffi-as-int.rs:33:2: 33:2
    }
}

promoted[0] in main: &u32 = {
    let mut _0: &u32;                    // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _1: u32;                     // in scope 0 at ui/struct-enums/enum-clike-ffi-as-int.rs:31:35: 31:48
    let mut _2: u32;                     // in scope 0 at ui/struct-enums/enum-clike-ffi-as-int.rs:31:35: 31:48
    let mut _3: (u32, bool);             // in scope 0 at ui/struct-enums/enum-clike-ffi-as-int.rs:31:35: 31:48

    bb0: {
        _3 = CheckedAdd(const _, const 0_u32); // scope 0 at ui/struct-enums/enum-clike-ffi-as-int.rs:31:35: 31:48
        _2 = move (_3.0: u32);           // scope 0 at ui/struct-enums/enum-clike-ffi-as-int.rs:31:35: 31:48
        _1 = move _2 as u32 (IntToInt);  // scope 0 at ui/struct-enums/enum-clike-ffi-as-int.rs:31:35: 31:48
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    }
}
