// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
color::red::{constant#0}: isize = {
    let mut _0: isize;                   // return place in scope 0 at ui/struct-enums/tag-disr-val-shape.rs:7:11: 7:19

    bb0: {
        _0 = const 16711680_isize;       // scope 0 at ui/struct-enums/tag-disr-val-shape.rs:7:11: 7:19
        return;                          // scope 0 at ui/struct-enums/tag-disr-val-shape.rs:7:11: 7:19
    }
}

color::green::{constant#0}: isize = {
    let mut _0: isize;                   // return place in scope 0 at ui/struct-enums/tag-disr-val-shape.rs:8:13: 8:21

    bb0: {
        _0 = const 65280_isize;          // scope 0 at ui/struct-enums/tag-disr-val-shape.rs:8:13: 8:21
        return;                          // scope 0 at ui/struct-enums/tag-disr-val-shape.rs:8:13: 8:21
    }
}

color::blue::{constant#0}: isize = {
    let mut _0: isize;                   // return place in scope 0 at ui/struct-enums/tag-disr-val-shape.rs:9:12: 9:20

    bb0: {
        _0 = const 255_isize;            // scope 0 at ui/struct-enums/tag-disr-val-shape.rs:9:12: 9:20
        return;                          // scope 0 at ui/struct-enums/tag-disr-val-shape.rs:9:12: 9:20
    }
}

color::black::{constant#0}: isize = {
    let mut _0: isize;                   // return place in scope 0 at ui/struct-enums/tag-disr-val-shape.rs:10:13: 10:21

    bb0: {
        _0 = const 0_isize;              // scope 0 at ui/struct-enums/tag-disr-val-shape.rs:10:13: 10:21
        return;                          // scope 0 at ui/struct-enums/tag-disr-val-shape.rs:10:13: 10:21
    }
}

color::white::{constant#0}: isize = {
    let mut _0: isize;                   // return place in scope 0 at ui/struct-enums/tag-disr-val-shape.rs:11:13: 11:21

    bb0: {
        _0 = const 16777215_isize;       // scope 0 at ui/struct-enums/tag-disr-val-shape.rs:11:13: 11:21
        return;                          // scope 0 at ui/struct-enums/tag-disr-val-shape.rs:11:13: 11:21
    }
}

fn <impl at ui/struct-enums/tag-disr-val-shape.rs:5:10: 5:15>::fmt(_1: &color, _2: &mut Formatter<'_>) -> Result<(), std::fmt::Error> {
    debug self => _1;                    // in scope 0 at ui/struct-enums/tag-disr-val-shape.rs:5:10: 5:15
    debug f => _2;                       // in scope 0 at ui/struct-enums/tag-disr-val-shape.rs:5:10: 5:15
    let mut _0: std::result::Result<(), std::fmt::Error>; // return place in scope 0 at ui/struct-enums/tag-disr-val-shape.rs:5:10: 5:15
    let mut _3: &mut std::fmt::Formatter<'_>; // in scope 0 at ui/struct-enums/tag-disr-val-shape.rs:5:10: 5:15
    let mut _4: &str;                    // in scope 0 at ui/struct-enums/tag-disr-val-shape.rs:5:10: 5:15
    let mut _5: isize;                   // in scope 0 at ui/struct-enums/tag-disr-val-shape.rs:5:10: 5:15
    let _6: &str;                        // in scope 0 at ui/struct-enums/tag-disr-val-shape.rs:5:10: 5:15
    let _7: &str;                        // in scope 0 at ui/struct-enums/tag-disr-val-shape.rs:5:10: 5:15
    let _8: &str;                        // in scope 0 at ui/struct-enums/tag-disr-val-shape.rs:5:10: 5:15
    let _9: &str;                        // in scope 0 at ui/struct-enums/tag-disr-val-shape.rs:5:10: 5:15
    let _10: &str;                       // in scope 0 at ui/struct-enums/tag-disr-val-shape.rs:5:10: 5:15

    bb0: {
        _3 = &mut (*_2);                 // scope 0 at ui/struct-enums/tag-disr-val-shape.rs:5:10: 5:15
        _5 = discriminant((*_1));        // scope 0 at ui/struct-enums/tag-disr-val-shape.rs:5:10: 5:15
        switchInt(move _5) -> [16711680: bb3, 65280: bb4, 255: bb5, 0: bb6, 16777215: bb1, otherwise: bb2]; // scope 0 at ui/struct-enums/tag-disr-val-shape.rs:5:10: 5:15
    }

    bb1: {
        _10 = const "white";             // scope 0 at ui/struct-enums/tag-disr-val-shape.rs:5:10: 5:15
                                         // mir::Constant
                                         // + span: ui/struct-enums/tag-disr-val-shape.rs:5:10: 5:15
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _4 = _10;                        // scope 0 at ui/struct-enums/tag-disr-val-shape.rs:5:10: 5:15
        goto -> bb7;                     // scope 0 at ui/struct-enums/tag-disr-val-shape.rs:5:14: 5:15
    }

    bb2: {
        unreachable;                     // scope 0 at ui/struct-enums/tag-disr-val-shape.rs:5:10: 5:15
    }

    bb3: {
        _6 = const "red";                // scope 0 at ui/struct-enums/tag-disr-val-shape.rs:5:10: 5:15
                                         // mir::Constant
                                         // + span: ui/struct-enums/tag-disr-val-shape.rs:5:10: 5:15
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _4 = _6;                         // scope 0 at ui/struct-enums/tag-disr-val-shape.rs:5:10: 5:15
        goto -> bb7;                     // scope 0 at ui/struct-enums/tag-disr-val-shape.rs:5:14: 5:15
    }

    bb4: {
        _7 = const "green";              // scope 0 at ui/struct-enums/tag-disr-val-shape.rs:5:10: 5:15
                                         // mir::Constant
                                         // + span: ui/struct-enums/tag-disr-val-shape.rs:5:10: 5:15
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _4 = _7;                         // scope 0 at ui/struct-enums/tag-disr-val-shape.rs:5:10: 5:15
        goto -> bb7;                     // scope 0 at ui/struct-enums/tag-disr-val-shape.rs:5:14: 5:15
    }

    bb5: {
        _8 = const "blue";               // scope 0 at ui/struct-enums/tag-disr-val-shape.rs:5:10: 5:15
                                         // mir::Constant
                                         // + span: ui/struct-enums/tag-disr-val-shape.rs:5:10: 5:15
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _4 = _8;                         // scope 0 at ui/struct-enums/tag-disr-val-shape.rs:5:10: 5:15
        goto -> bb7;                     // scope 0 at ui/struct-enums/tag-disr-val-shape.rs:5:14: 5:15
    }

    bb6: {
        _9 = const "black";              // scope 0 at ui/struct-enums/tag-disr-val-shape.rs:5:10: 5:15
                                         // mir::Constant
                                         // + span: ui/struct-enums/tag-disr-val-shape.rs:5:10: 5:15
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _4 = _9;                         // scope 0 at ui/struct-enums/tag-disr-val-shape.rs:5:10: 5:15
        goto -> bb7;                     // scope 0 at ui/struct-enums/tag-disr-val-shape.rs:5:14: 5:15
    }

    bb7: {
        _0 = Formatter::<'_>::write_str(move _3, move _4) -> bb8; // scope 0 at ui/struct-enums/tag-disr-val-shape.rs:5:10: 5:15
                                         // mir::Constant
                                         // + span: ui/struct-enums/tag-disr-val-shape.rs:5:10: 5:15
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a mut Formatter<'_>, &'b str) -> Result<(), std::fmt::Error> {Formatter::<'_>::write_str}, val: Value(<ZST>) }
    }

    bb8: {
        return;                          // scope 0 at ui/struct-enums/tag-disr-val-shape.rs:5:15: 5:15
    }
}

fn main() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/struct-enums/tag-disr-val-shape.rs:14:15: 14:15
    let _1: std::string::String;         // in scope 0 at ui/struct-enums/tag-disr-val-shape.rs:15:9: 15:12
    let _2: std::string::String;         // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:13: 118:16
    let mut _3: std::fmt::Arguments<'_>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
    let mut _4: &[&str];                 // in scope 0 at ui/struct-enums/tag-disr-val-shape.rs:15:23: 15:29
    let mut _5: &[&str; 1];              // in scope 0 at ui/struct-enums/tag-disr-val-shape.rs:15:23: 15:29
    let _6: &[&str; 1];                  // in scope 0 at ui/struct-enums/tag-disr-val-shape.rs:15:23: 15:29
    let mut _7: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
    let mut _8: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
    let _9: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
    let _10: [core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
    let mut _11: core::fmt::ArgumentV1<'_>; // in scope 0 at ui/struct-enums/tag-disr-val-shape.rs:15:31: 15:41
    let mut _12: &color;                 // in scope 0 at ui/struct-enums/tag-disr-val-shape.rs:15:31: 15:41
    let _13: &color;                     // in scope 0 at ui/struct-enums/tag-disr-val-shape.rs:15:31: 15:41
    let _14: ();                         // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:62
    let mut _15: std::fmt::Arguments<'_>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _16: &[&str];                // in scope 0 at ui/struct-enums/tag-disr-val-shape.rs:16:14: 16:18
    let mut _17: &[&str; 2];             // in scope 0 at ui/struct-enums/tag-disr-val-shape.rs:16:14: 16:18
    let _18: &[&str; 2];                 // in scope 0 at ui/struct-enums/tag-disr-val-shape.rs:16:14: 16:18
    let mut _19: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _20: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let _21: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let _22: [core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _23: core::fmt::ArgumentV1<'_>; // in scope 0 at ui/struct-enums/tag-disr-val-shape.rs:16:20: 16:23
    let mut _24: &std::string::String;   // in scope 0 at ui/struct-enums/tag-disr-val-shape.rs:16:20: 16:23
    let _25: &std::string::String;       // in scope 0 at ui/struct-enums/tag-disr-val-shape.rs:16:20: 16:23
    let mut _26: (&std::string::String, &std::string::String); // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _27: &std::string::String;   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let _28: std::string::String;        // in scope 0 at ui/struct-enums/tag-disr-val-shape.rs:17:16: 17:33
    let mut _29: &str;                   // in scope 0 at ui/struct-enums/tag-disr-val-shape.rs:17:16: 17:33
    let _30: &str;                       // in scope 0 at ui/struct-enums/tag-disr-val-shape.rs:17:16: 17:21
    let mut _31: &std::string::String;   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _34: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    let mut _35: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
    let mut _36: &std::string::String;   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
    let mut _37: &std::string::String;   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
    let _39: !;                          // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
    let mut _40: core::panicking::AssertKind; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
    let mut _41: &std::string::String;   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let _42: &std::string::String;       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let mut _43: &std::string::String;   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let _44: &std::string::String;       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let mut _45: std::option::Option<std::fmt::Arguments<'_>>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
    let mut _46: (&std::string::String, &std::string::String); // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _47: &std::string::String;   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let _48: std::string::String;        // in scope 0 at ui/struct-enums/tag-disr-val-shape.rs:18:16: 18:35
    let mut _49: &str;                   // in scope 0 at ui/struct-enums/tag-disr-val-shape.rs:18:16: 18:35
    let _50: &str;                       // in scope 0 at ui/struct-enums/tag-disr-val-shape.rs:18:16: 18:23
    let mut _51: &std::string::String;   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let _52: std::string::String;        // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:117:23: 120:6
    let mut _54: std::fmt::Arguments<'_>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
    let mut _55: &[&str];                // in scope 0 at ui/struct-enums/tag-disr-val-shape.rs:18:45: 18:51
    let mut _56: &[&str; 1];             // in scope 0 at ui/struct-enums/tag-disr-val-shape.rs:18:45: 18:51
    let _57: &[&str; 1];                 // in scope 0 at ui/struct-enums/tag-disr-val-shape.rs:18:45: 18:51
    let mut _58: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
    let mut _59: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
    let _60: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
    let _61: [core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
    let mut _62: core::fmt::ArgumentV1<'_>; // in scope 0 at ui/struct-enums/tag-disr-val-shape.rs:18:53: 18:65
    let mut _63: &color;                 // in scope 0 at ui/struct-enums/tag-disr-val-shape.rs:18:53: 18:65
    let _64: &color;                     // in scope 0 at ui/struct-enums/tag-disr-val-shape.rs:18:53: 18:65
    let mut _67: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    let mut _68: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
    let mut _69: &std::string::String;   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
    let mut _70: &std::string::String;   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
    let _72: !;                          // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
    let mut _73: core::panicking::AssertKind; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
    let mut _74: &std::string::String;   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let _75: &std::string::String;       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let mut _76: &std::string::String;   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let _77: &std::string::String;       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let mut _78: std::option::Option<std::fmt::Arguments<'_>>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
    let mut _79: (&std::string::String, &std::string::String); // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _80: &std::string::String;   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let _81: std::string::String;        // in scope 0 at ui/struct-enums/tag-disr-val-shape.rs:19:16: 19:35
    let mut _82: &str;                   // in scope 0 at ui/struct-enums/tag-disr-val-shape.rs:19:16: 19:35
    let _83: &str;                       // in scope 0 at ui/struct-enums/tag-disr-val-shape.rs:19:16: 19:23
    let mut _84: &std::string::String;   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let _85: std::string::String;        // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:117:23: 120:6
    let mut _87: std::fmt::Arguments<'_>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
    let mut _88: &[&str];                // in scope 0 at ui/struct-enums/tag-disr-val-shape.rs:19:45: 19:51
    let mut _89: &[&str; 1];             // in scope 0 at ui/struct-enums/tag-disr-val-shape.rs:19:45: 19:51
    let _90: &[&str; 1];                 // in scope 0 at ui/struct-enums/tag-disr-val-shape.rs:19:45: 19:51
    let mut _91: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
    let mut _92: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
    let _93: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
    let _94: [core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
    let mut _95: core::fmt::ArgumentV1<'_>; // in scope 0 at ui/struct-enums/tag-disr-val-shape.rs:19:53: 19:65
    let mut _96: &color;                 // in scope 0 at ui/struct-enums/tag-disr-val-shape.rs:19:53: 19:65
    let _97: &color;                     // in scope 0 at ui/struct-enums/tag-disr-val-shape.rs:19:53: 19:65
    let mut _100: bool;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    let mut _101: bool;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
    let mut _102: &std::string::String;  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
    let mut _103: &std::string::String;  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
    let _105: !;                         // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
    let mut _106: core::panicking::AssertKind; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
    let mut _107: &std::string::String;  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let _108: &std::string::String;      // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let mut _109: &std::string::String;  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let _110: &std::string::String;      // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let mut _111: std::option::Option<std::fmt::Arguments<'_>>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
    let mut _117: &color;                // in scope 0 at ui/struct-enums/tag-disr-val-shape.rs:15:31: 15:41
    let mut _118: &[&str; 1];            // in scope 0 at ui/struct-enums/tag-disr-val-shape.rs:15:23: 15:29
    scope 1 {
        debug act => _1;                 // in scope 1 at ui/struct-enums/tag-disr-val-shape.rs:15:9: 15:12
        let _32: &std::string::String;   // in scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        let _33: &std::string::String;   // in scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        let _53: std::string::String;    // in scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:13: 118:16
        let _65: &std::string::String;   // in scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        let _66: &std::string::String;   // in scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        let _86: std::string::String;    // in scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:13: 118:16
        let _98: &std::string::String;   // in scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        let _99: &std::string::String;   // in scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        let mut _112: &color;            // in scope 1 at ui/struct-enums/tag-disr-val-shape.rs:19:53: 19:65
        let mut _113: &[&str; 1];        // in scope 1 at ui/struct-enums/tag-disr-val-shape.rs:19:45: 19:51
        let mut _114: &color;            // in scope 1 at ui/struct-enums/tag-disr-val-shape.rs:18:53: 18:65
        let mut _115: &[&str; 1];        // in scope 1 at ui/struct-enums/tag-disr-val-shape.rs:18:45: 18:51
        let mut _116: &[&str; 2];        // in scope 1 at ui/struct-enums/tag-disr-val-shape.rs:16:14: 16:18
        scope 3 {
            debug left_val => _32;       // in scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
            debug right_val => _33;      // in scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
            let _38: core::panicking::AssertKind; // in scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
            scope 4 {
                debug kind => _38;       // in scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
            }
        }
        scope 5 {
            debug res => _53;            // in scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:13: 118:16
        }
        scope 6 {
            debug left_val => _65;       // in scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
            debug right_val => _66;      // in scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
            let _71: core::panicking::AssertKind; // in scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
            scope 7 {
                debug kind => _71;       // in scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
            }
        }
        scope 8 {
            debug res => _86;            // in scope 8 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:13: 118:16
        }
        scope 9 {
            debug left_val => _98;       // in scope 9 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
            debug right_val => _99;      // in scope 9 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
            let _104: core::panicking::AssertKind; // in scope 9 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
            scope 10 {
                debug kind => _104;      // in scope 10 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
            }
        }
    }
    scope 2 {
        debug res => _2;                 // in scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:13: 118:16
    }

    bb0: {
        _118 = const _;                  // scope 0 at ui/struct-enums/tag-disr-val-shape.rs:15:23: 15:29
                                         // mir::Constant
                                         // + span: ui/struct-enums/tag-disr-val-shape.rs:15:23: 15:29
                                         // + literal: Const { ty: &[&str; 1], val: Unevaluated(main, [], Some(promoted[6])) }
        _6 = _118;                       // scope 0 at ui/struct-enums/tag-disr-val-shape.rs:15:23: 15:29
        _5 = _6;                         // scope 0 at ui/struct-enums/tag-disr-val-shape.rs:15:23: 15:29
        _4 = move _5 as &[&str] (Pointer(Unsize)); // scope 0 at ui/struct-enums/tag-disr-val-shape.rs:15:23: 15:29
        _117 = const _;                  // scope 0 at ui/struct-enums/tag-disr-val-shape.rs:15:31: 15:41
                                         // mir::Constant
                                         // + span: ui/struct-enums/tag-disr-val-shape.rs:15:31: 15:41
                                         // + literal: Const { ty: &color, val: Unevaluated(main, [], Some(promoted[5])) }
        _13 = _117;                      // scope 0 at ui/struct-enums/tag-disr-val-shape.rs:15:31: 15:41
        _12 = _13;                       // scope 0 at ui/struct-enums/tag-disr-val-shape.rs:15:31: 15:41
        _11 = core::fmt::ArgumentV1::<'_>::new_debug::<color>(move _12) -> bb1; // scope 0 at ui/struct-enums/tag-disr-val-shape.rs:15:31: 15:41
                                         // mir::Constant
                                         // + span: ui/struct-enums/tag-disr-val-shape.rs:15:31: 15:41
                                         // + user_ty: UserType(1)
                                         // + literal: Const { ty: for<'b> fn(&'b color) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_debug::<color>}, val: Value(<ZST>) }
    }

    bb1: {
        _10 = [move _11];                // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
        _9 = &_10;                       // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
        _8 = _9;                         // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
        _7 = move _8 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
        _3 = Arguments::<'_>::new_v1(move _4, move _7) -> bb2; // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb2: {
        _2 = format(move _3) -> bb3;     // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:19: 118:80
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:19: 118:38
                                         // + literal: Const { ty: for<'a> fn(Arguments<'a>) -> String {format}, val: Value(<ZST>) }
    }

    bb3: {
        _1 = move _2;                    // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:119:9: 119:12
        _116 = const _;                  // scope 1 at ui/struct-enums/tag-disr-val-shape.rs:16:14: 16:18
                                         // mir::Constant
                                         // + span: ui/struct-enums/tag-disr-val-shape.rs:16:14: 16:18
                                         // + literal: Const { ty: &[&str; 2], val: Unevaluated(main, [], Some(promoted[4])) }
        _18 = _116;                      // scope 1 at ui/struct-enums/tag-disr-val-shape.rs:16:14: 16:18
        _17 = _18;                       // scope 1 at ui/struct-enums/tag-disr-val-shape.rs:16:14: 16:18
        _16 = move _17 as &[&str] (Pointer(Unsize)); // scope 1 at ui/struct-enums/tag-disr-val-shape.rs:16:14: 16:18
        _25 = &_1;                       // scope 1 at ui/struct-enums/tag-disr-val-shape.rs:16:20: 16:23
        _24 = _25;                       // scope 1 at ui/struct-enums/tag-disr-val-shape.rs:16:20: 16:23
        _23 = core::fmt::ArgumentV1::<'_>::new_display::<String>(move _24) -> [return: bb4, unwind: bb36]; // scope 1 at ui/struct-enums/tag-disr-val-shape.rs:16:20: 16:23
                                         // mir::Constant
                                         // + span: ui/struct-enums/tag-disr-val-shape.rs:16:20: 16:23
                                         // + user_ty: UserType(3)
                                         // + literal: Const { ty: for<'b> fn(&'b String) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_display::<String>}, val: Value(<ZST>) }
    }

    bb4: {
        _22 = [move _23];                // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _21 = &_22;                      // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _20 = _21;                       // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _19 = move _20 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _15 = Arguments::<'_>::new_v1(move _16, move _19) -> [return: bb5, unwind: bb36]; // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // + user_ty: UserType(2)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb5: {
        _14 = _print(move _15) -> [return: bb6, unwind: bb36]; // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:62
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:27
                                         // + literal: Const { ty: for<'a> fn(Arguments<'a>) {_print}, val: Value(<ZST>) }
    }

    bb6: {
        _30 = const "red";               // scope 1 at ui/struct-enums/tag-disr-val-shape.rs:17:16: 17:21
                                         // mir::Constant
                                         // + span: ui/struct-enums/tag-disr-val-shape.rs:17:16: 17:21
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _29 = _30;                       // scope 1 at ui/struct-enums/tag-disr-val-shape.rs:17:16: 17:33
        _28 = <str as ToString>::to_string(move _29) -> [return: bb7, unwind: bb36]; // scope 1 at ui/struct-enums/tag-disr-val-shape.rs:17:16: 17:33
                                         // mir::Constant
                                         // + span: ui/struct-enums/tag-disr-val-shape.rs:17:22: 17:31
                                         // + literal: Const { ty: for<'a> fn(&'a str) -> String {<str as ToString>::to_string}, val: Value(<ZST>) }
    }

    bb7: {
        _27 = &_28;                      // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _31 = &_1;                       // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _26 = (move _27, move _31);      // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _32 = (_26.0: &std::string::String); // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _33 = (_26.1: &std::string::String); // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _36 = _32;                       // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
        _37 = _33;                       // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
        _35 = <String as PartialEq>::eq(move _36, move _37) -> [return: bb8, unwind: bb35]; // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a String, &'b String) -> bool {<String as PartialEq>::eq}, val: Value(<ZST>) }
    }

    bb8: {
        _34 = Not(move _35);             // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
        switchInt(move _34) -> [0: bb10, otherwise: bb9]; // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    }

    bb9: {
        _38 = const core::panicking::AssertKind::Eq; // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _40 = const core::panicking::AssertKind::Eq; // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _42 = _32;                       // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _41 = _42;                       // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _44 = _33;                       // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _43 = _44;                       // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _45 = Option::<Arguments<'_>>::None; // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
        _39 = core::panicking::assert_failed::<String, String>(move _40, move _41, move _43, move _45) -> bb35; // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:53
                                         // + literal: Const { ty: for<'a, 'b, 'c> fn(core::panicking::AssertKind, &'a String, &'b String, Option<Arguments<'c>>) -> ! {core::panicking::assert_failed::<String, String>}, val: Value(<ZST>) }
    }

    bb10: {
        drop(_28) -> [return: bb11, unwind: bb36]; // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:48:9: 48:10
    }

    bb11: {
        _50 = const "green";             // scope 1 at ui/struct-enums/tag-disr-val-shape.rs:18:16: 18:23
                                         // mir::Constant
                                         // + span: ui/struct-enums/tag-disr-val-shape.rs:18:16: 18:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _49 = _50;                       // scope 1 at ui/struct-enums/tag-disr-val-shape.rs:18:16: 18:35
        _48 = <str as ToString>::to_string(move _49) -> [return: bb12, unwind: bb36]; // scope 1 at ui/struct-enums/tag-disr-val-shape.rs:18:16: 18:35
                                         // mir::Constant
                                         // + span: ui/struct-enums/tag-disr-val-shape.rs:18:24: 18:33
                                         // + literal: Const { ty: for<'a> fn(&'a str) -> String {<str as ToString>::to_string}, val: Value(<ZST>) }
    }

    bb12: {
        _47 = &_48;                      // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _115 = const _;                  // scope 1 at ui/struct-enums/tag-disr-val-shape.rs:18:45: 18:51
                                         // mir::Constant
                                         // + span: ui/struct-enums/tag-disr-val-shape.rs:18:45: 18:51
                                         // + literal: Const { ty: &[&str; 1], val: Unevaluated(main, [], Some(promoted[3])) }
        _57 = _115;                      // scope 1 at ui/struct-enums/tag-disr-val-shape.rs:18:45: 18:51
        _56 = _57;                       // scope 1 at ui/struct-enums/tag-disr-val-shape.rs:18:45: 18:51
        _55 = move _56 as &[&str] (Pointer(Unsize)); // scope 1 at ui/struct-enums/tag-disr-val-shape.rs:18:45: 18:51
        _114 = const _;                  // scope 1 at ui/struct-enums/tag-disr-val-shape.rs:18:53: 18:65
                                         // mir::Constant
                                         // + span: ui/struct-enums/tag-disr-val-shape.rs:18:53: 18:65
                                         // + literal: Const { ty: &color, val: Unevaluated(main, [], Some(promoted[2])) }
        _64 = _114;                      // scope 1 at ui/struct-enums/tag-disr-val-shape.rs:18:53: 18:65
        _63 = _64;                       // scope 1 at ui/struct-enums/tag-disr-val-shape.rs:18:53: 18:65
        _62 = core::fmt::ArgumentV1::<'_>::new_debug::<color>(move _63) -> [return: bb13, unwind: bb34]; // scope 1 at ui/struct-enums/tag-disr-val-shape.rs:18:53: 18:65
                                         // mir::Constant
                                         // + span: ui/struct-enums/tag-disr-val-shape.rs:18:53: 18:65
                                         // + user_ty: UserType(5)
                                         // + literal: Const { ty: for<'b> fn(&'b color) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_debug::<color>}, val: Value(<ZST>) }
    }

    bb13: {
        _61 = [move _62];                // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
        _60 = &_61;                      // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
        _59 = _60;                       // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
        _58 = move _59 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
        _54 = Arguments::<'_>::new_v1(move _55, move _58) -> [return: bb14, unwind: bb34]; // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
                                         // + user_ty: UserType(4)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb14: {
        _53 = format(move _54) -> [return: bb15, unwind: bb34]; // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:19: 118:80
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:19: 118:38
                                         // + literal: Const { ty: for<'a> fn(Arguments<'a>) -> String {format}, val: Value(<ZST>) }
    }

    bb15: {
        _52 = move _53;                  // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:119:9: 119:12
        _51 = &_52;                      // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _46 = (move _47, move _51);      // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _65 = (_46.0: &std::string::String); // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _66 = (_46.1: &std::string::String); // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _69 = _65;                       // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
        _70 = _66;                       // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
        _68 = <String as PartialEq>::eq(move _69, move _70) -> [return: bb16, unwind: bb33]; // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a String, &'b String) -> bool {<String as PartialEq>::eq}, val: Value(<ZST>) }
    }

    bb16: {
        _67 = Not(move _68);             // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
        switchInt(move _67) -> [0: bb18, otherwise: bb17]; // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    }

    bb17: {
        _71 = const core::panicking::AssertKind::Eq; // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _73 = const core::panicking::AssertKind::Eq; // scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _75 = _65;                       // scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _74 = _75;                       // scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _77 = _66;                       // scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _76 = _77;                       // scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _78 = Option::<Arguments<'_>>::None; // scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
        _72 = core::panicking::assert_failed::<String, String>(move _73, move _74, move _76, move _78) -> bb33; // scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:53
                                         // + literal: Const { ty: for<'a, 'b, 'c> fn(core::panicking::AssertKind, &'a String, &'b String, Option<Arguments<'c>>) -> ! {core::panicking::assert_failed::<String, String>}, val: Value(<ZST>) }
    }

    bb18: {
        drop(_52) -> [return: bb19, unwind: bb34]; // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:48:9: 48:10
    }

    bb19: {
        drop(_48) -> [return: bb20, unwind: bb36]; // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:48:9: 48:10
    }

    bb20: {
        _83 = const "white";             // scope 1 at ui/struct-enums/tag-disr-val-shape.rs:19:16: 19:23
                                         // mir::Constant
                                         // + span: ui/struct-enums/tag-disr-val-shape.rs:19:16: 19:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _82 = _83;                       // scope 1 at ui/struct-enums/tag-disr-val-shape.rs:19:16: 19:35
        _81 = <str as ToString>::to_string(move _82) -> [return: bb21, unwind: bb36]; // scope 1 at ui/struct-enums/tag-disr-val-shape.rs:19:16: 19:35
                                         // mir::Constant
                                         // + span: ui/struct-enums/tag-disr-val-shape.rs:19:24: 19:33
                                         // + literal: Const { ty: for<'a> fn(&'a str) -> String {<str as ToString>::to_string}, val: Value(<ZST>) }
    }

    bb21: {
        _80 = &_81;                      // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _113 = const _;                  // scope 1 at ui/struct-enums/tag-disr-val-shape.rs:19:45: 19:51
                                         // mir::Constant
                                         // + span: ui/struct-enums/tag-disr-val-shape.rs:19:45: 19:51
                                         // + literal: Const { ty: &[&str; 1], val: Unevaluated(main, [], Some(promoted[1])) }
        _90 = _113;                      // scope 1 at ui/struct-enums/tag-disr-val-shape.rs:19:45: 19:51
        _89 = _90;                       // scope 1 at ui/struct-enums/tag-disr-val-shape.rs:19:45: 19:51
        _88 = move _89 as &[&str] (Pointer(Unsize)); // scope 1 at ui/struct-enums/tag-disr-val-shape.rs:19:45: 19:51
        _112 = const _;                  // scope 1 at ui/struct-enums/tag-disr-val-shape.rs:19:53: 19:65
                                         // mir::Constant
                                         // + span: ui/struct-enums/tag-disr-val-shape.rs:19:53: 19:65
                                         // + literal: Const { ty: &color, val: Unevaluated(main, [], Some(promoted[0])) }
        _97 = _112;                      // scope 1 at ui/struct-enums/tag-disr-val-shape.rs:19:53: 19:65
        _96 = _97;                       // scope 1 at ui/struct-enums/tag-disr-val-shape.rs:19:53: 19:65
        _95 = core::fmt::ArgumentV1::<'_>::new_debug::<color>(move _96) -> [return: bb22, unwind: bb32]; // scope 1 at ui/struct-enums/tag-disr-val-shape.rs:19:53: 19:65
                                         // mir::Constant
                                         // + span: ui/struct-enums/tag-disr-val-shape.rs:19:53: 19:65
                                         // + user_ty: UserType(7)
                                         // + literal: Const { ty: for<'b> fn(&'b color) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_debug::<color>}, val: Value(<ZST>) }
    }

    bb22: {
        _94 = [move _95];                // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
        _93 = &_94;                      // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
        _92 = _93;                       // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
        _91 = move _92 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
        _87 = Arguments::<'_>::new_v1(move _88, move _91) -> [return: bb23, unwind: bb32]; // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
                                         // + user_ty: UserType(6)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb23: {
        _86 = format(move _87) -> [return: bb24, unwind: bb32]; // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:19: 118:80
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:19: 118:38
                                         // + literal: Const { ty: for<'a> fn(Arguments<'a>) -> String {format}, val: Value(<ZST>) }
    }

    bb24: {
        _85 = move _86;                  // scope 8 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:119:9: 119:12
        _84 = &_85;                      // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _79 = (move _80, move _84);      // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _98 = (_79.0: &std::string::String); // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _99 = (_79.1: &std::string::String); // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _102 = _98;                      // scope 9 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
        _103 = _99;                      // scope 9 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
        _101 = <String as PartialEq>::eq(move _102, move _103) -> [return: bb25, unwind: bb31]; // scope 9 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a String, &'b String) -> bool {<String as PartialEq>::eq}, val: Value(<ZST>) }
    }

    bb25: {
        _100 = Not(move _101);           // scope 9 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
        switchInt(move _100) -> [0: bb27, otherwise: bb26]; // scope 9 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    }

    bb26: {
        _104 = const core::panicking::AssertKind::Eq; // scope 9 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _106 = const core::panicking::AssertKind::Eq; // scope 10 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _108 = _98;                      // scope 10 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _107 = _108;                     // scope 10 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _110 = _99;                      // scope 10 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _109 = _110;                     // scope 10 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _111 = Option::<Arguments<'_>>::None; // scope 10 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
        _105 = core::panicking::assert_failed::<String, String>(move _106, move _107, move _109, move _111) -> bb31; // scope 10 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:53
                                         // + literal: Const { ty: for<'a, 'b, 'c> fn(core::panicking::AssertKind, &'a String, &'b String, Option<Arguments<'c>>) -> ! {core::panicking::assert_failed::<String, String>}, val: Value(<ZST>) }
    }

    bb27: {
        drop(_85) -> [return: bb28, unwind: bb32]; // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:48:9: 48:10
    }

    bb28: {
        drop(_81) -> [return: bb29, unwind: bb36]; // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:48:9: 48:10
    }

    bb29: {
        drop(_1) -> bb30;                // scope 0 at ui/struct-enums/tag-disr-val-shape.rs:20:1: 20:2
    }

    bb30: {
        return;                          // scope 0 at ui/struct-enums/tag-disr-val-shape.rs:20:2: 20:2
    }

    bb31 (cleanup): {
        drop(_85) -> bb32;               // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:48:9: 48:10
    }

    bb32 (cleanup): {
        drop(_81) -> bb36;               // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:48:9: 48:10
    }

    bb33 (cleanup): {
        drop(_52) -> bb34;               // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:48:9: 48:10
    }

    bb34 (cleanup): {
        drop(_48) -> bb36;               // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:48:9: 48:10
    }

    bb35 (cleanup): {
        drop(_28) -> bb36;               // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:48:9: 48:10
    }

    bb36 (cleanup): {
        drop(_1) -> bb37;                // scope 0 at ui/struct-enums/tag-disr-val-shape.rs:20:1: 20:2
    }

    bb37 (cleanup): {
        resume;                          // scope 0 at ui/struct-enums/tag-disr-val-shape.rs:14:1: 20:2
    }
}

promoted[0] in main: &color = {
    let mut _0: &color;                  // return place in scope 0 at ui/struct-enums/tag-disr-val-shape.rs:19:53: 19:65
    let mut _1: color;                   // in scope 0 at ui/struct-enums/tag-disr-val-shape.rs:19:53: 19:65

    bb0: {
        _1 = color::white;               // scope 0 at ui/struct-enums/tag-disr-val-shape.rs:19:53: 19:65
        _0 = &_1;                        // scope 0 at ui/struct-enums/tag-disr-val-shape.rs:19:53: 19:65
        return;                          // scope 0 at ui/struct-enums/tag-disr-val-shape.rs:19:53: 19:65
    }
}

promoted[1] in main: &[&str; 1] = {
    let mut _0: &[&str; 1];              // return place in scope 0 at ui/struct-enums/tag-disr-val-shape.rs:19:45: 19:51
    let mut _1: [&str; 1];               // in scope 0 at ui/struct-enums/tag-disr-val-shape.rs:19:45: 19:51

    bb0: {
        _1 = [const ""];                 // scope 0 at ui/struct-enums/tag-disr-val-shape.rs:19:45: 19:51
                                         // mir::Constant
                                         // + span: ui/struct-enums/tag-disr-val-shape.rs:19:45: 19:51
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at ui/struct-enums/tag-disr-val-shape.rs:19:45: 19:51
        return;                          // scope 0 at ui/struct-enums/tag-disr-val-shape.rs:19:45: 19:51
    }
}

promoted[2] in main: &color = {
    let mut _0: &color;                  // return place in scope 0 at ui/struct-enums/tag-disr-val-shape.rs:18:53: 18:65
    let mut _1: color;                   // in scope 0 at ui/struct-enums/tag-disr-val-shape.rs:18:53: 18:65

    bb0: {
        _1 = color::green;               // scope 0 at ui/struct-enums/tag-disr-val-shape.rs:18:53: 18:65
        _0 = &_1;                        // scope 0 at ui/struct-enums/tag-disr-val-shape.rs:18:53: 18:65
        return;                          // scope 0 at ui/struct-enums/tag-disr-val-shape.rs:18:53: 18:65
    }
}

promoted[3] in main: &[&str; 1] = {
    let mut _0: &[&str; 1];              // return place in scope 0 at ui/struct-enums/tag-disr-val-shape.rs:18:45: 18:51
    let mut _1: [&str; 1];               // in scope 0 at ui/struct-enums/tag-disr-val-shape.rs:18:45: 18:51

    bb0: {
        _1 = [const ""];                 // scope 0 at ui/struct-enums/tag-disr-val-shape.rs:18:45: 18:51
                                         // mir::Constant
                                         // + span: ui/struct-enums/tag-disr-val-shape.rs:18:45: 18:51
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at ui/struct-enums/tag-disr-val-shape.rs:18:45: 18:51
        return;                          // scope 0 at ui/struct-enums/tag-disr-val-shape.rs:18:45: 18:51
    }
}

promoted[4] in main: &[&str; 2] = {
    let mut _0: &[&str; 2];              // return place in scope 0 at ui/struct-enums/tag-disr-val-shape.rs:16:14: 16:18
    let mut _1: [&str; 2];               // in scope 0 at ui/struct-enums/tag-disr-val-shape.rs:16:14: 16:18

    bb0: {
        _1 = [const "", const "\n"];     // scope 0 at ui/struct-enums/tag-disr-val-shape.rs:16:14: 16:18
                                         // mir::Constant
                                         // + span: ui/struct-enums/tag-disr-val-shape.rs:16:14: 16:18
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
                                         // mir::Constant
                                         // + span: ui/struct-enums/tag-disr-val-shape.rs:16:14: 16:18
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at ui/struct-enums/tag-disr-val-shape.rs:16:14: 16:18
        return;                          // scope 0 at ui/struct-enums/tag-disr-val-shape.rs:16:14: 16:18
    }
}

promoted[5] in main: &color = {
    let mut _0: &color;                  // return place in scope 0 at ui/struct-enums/tag-disr-val-shape.rs:15:31: 15:41
    let mut _1: color;                   // in scope 0 at ui/struct-enums/tag-disr-val-shape.rs:15:31: 15:41

    bb0: {
        _1 = color::red;                 // scope 0 at ui/struct-enums/tag-disr-val-shape.rs:15:31: 15:41
        _0 = &_1;                        // scope 0 at ui/struct-enums/tag-disr-val-shape.rs:15:31: 15:41
        return;                          // scope 0 at ui/struct-enums/tag-disr-val-shape.rs:15:31: 15:41
    }
}

promoted[6] in main: &[&str; 1] = {
    let mut _0: &[&str; 1];              // return place in scope 0 at ui/struct-enums/tag-disr-val-shape.rs:15:23: 15:29
    let mut _1: [&str; 1];               // in scope 0 at ui/struct-enums/tag-disr-val-shape.rs:15:23: 15:29

    bb0: {
        _1 = [const ""];                 // scope 0 at ui/struct-enums/tag-disr-val-shape.rs:15:23: 15:29
                                         // mir::Constant
                                         // + span: ui/struct-enums/tag-disr-val-shape.rs:15:23: 15:29
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at ui/struct-enums/tag-disr-val-shape.rs:15:23: 15:29
        return;                          // scope 0 at ui/struct-enums/tag-disr-val-shape.rs:15:23: 15:29
    }
}
