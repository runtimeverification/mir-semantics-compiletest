// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
p0f_api_query::addr::{constant#0}: usize = {
    let mut _0: usize;                   // return place in scope 0 at ui/struct-enums/multiple-reprs.rs:62:20: 62:22

    bb0: {
        _0 = const 16_usize;             // scope 0 at ui/struct-enums/multiple-reprs.rs:62:20: 62:22
        return;                          // scope 0 at ui/struct-enums/multiple-reprs.rs:62:20: 62:22
    }
}

fn main() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/struct-enums/multiple-reprs.rs:65:15: 65:15
    let mut _1: (&usize, &usize);        // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _2: &usize;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let mut _3: &usize;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let _4: &usize;                      // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
    let _5: &usize;                      // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
    let mut _7: (&usize, &usize);        // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _8: &usize;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let mut _9: &usize;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let _10: &usize;                     // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
    let _11: &usize;                     // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
    let mut _13: (&usize, &usize);       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _14: &usize;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let mut _15: &usize;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let _16: &usize;                     // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
    let _17: &usize;                     // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
    let mut _19: (&usize, &usize);       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _20: &usize;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let mut _21: &usize;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let _22: &usize;                     // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
    let _23: &usize;                     // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
    let mut _25: (&usize, &usize);       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _26: &usize;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let mut _27: &usize;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let _28: usize;                      // in scope 0 at ui/struct-enums/multiple-reprs.rs:70:33: 70:66
    let mut _29: usize;                  // in scope 0 at ui/struct-enums/multiple-reprs.rs:70:48: 70:65
    let _30: &usize;                     // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
    let _31: &usize;                     // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
    let mut _32: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    let mut _33: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
    let mut _34: usize;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
    let mut _35: usize;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
    let _37: !;                          // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
    let mut _38: core::panicking::AssertKind; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
    let mut _39: &usize;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let _40: &usize;                     // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let mut _41: &usize;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let _42: &usize;                     // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let mut _43: std::option::Option<std::fmt::Arguments<'_>>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
    let mut _44: (&usize, &usize);       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _45: &usize;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let mut _46: &usize;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let _47: usize;                      // in scope 0 at ui/struct-enums/multiple-reprs.rs:71:33: 71:66
    let mut _48: usize;                  // in scope 0 at ui/struct-enums/multiple-reprs.rs:71:48: 71:65
    let _49: &usize;                     // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
    let _50: &usize;                     // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
    let mut _51: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    let mut _52: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
    let mut _53: usize;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
    let mut _54: usize;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
    let _56: !;                          // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
    let mut _57: core::panicking::AssertKind; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
    let mut _58: &usize;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let _59: &usize;                     // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let mut _60: &usize;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let _61: &usize;                     // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let mut _62: std::option::Option<std::fmt::Arguments<'_>>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
    let mut _63: (&usize, &usize);       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _64: &usize;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let mut _65: &usize;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let _66: usize;                      // in scope 0 at ui/struct-enums/multiple-reprs.rs:72:33: 72:88
    let mut _67: usize;                  // in scope 0 at ui/struct-enums/multiple-reprs.rs:72:44: 72:66
    let mut _68: usize;                  // in scope 0 at ui/struct-enums/multiple-reprs.rs:72:48: 72:66
    let mut _69: (usize, bool);          // in scope 0 at ui/struct-enums/multiple-reprs.rs:72:44: 72:66
    let mut _70: usize;                  // in scope 0 at ui/struct-enums/multiple-reprs.rs:72:68: 72:87
    let _71: &usize;                     // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
    let _72: &usize;                     // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
    let mut _73: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    let mut _74: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
    let mut _75: usize;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
    let mut _76: usize;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
    let _78: !;                          // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
    let mut _79: core::panicking::AssertKind; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
    let mut _80: &usize;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let _81: &usize;                     // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let mut _82: &usize;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let _83: &usize;                     // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let mut _84: std::option::Option<std::fmt::Arguments<'_>>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
    let mut _85: (&usize, &usize);       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _86: &usize;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let mut _87: &usize;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let _88: &usize;                     // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
    let _89: &usize;                     // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
    let mut _91: &usize;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _92: &usize;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let mut _93: &usize;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let mut _94: &usize;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let mut _95: &usize;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let mut _96: &usize;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _97: &usize;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let mut _98: &usize;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _99: &usize;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let mut _100: &usize;                // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _101: &usize;                // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let mut _102: &usize;                // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _103: &usize;                // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    scope 1 {
        debug left_val => _4;            // in scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        debug right_val => _5;           // in scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        let _6: core::panicking::AssertKind; // in scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
        scope 2 {
            debug kind => _6;            // in scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
        }
    }
    scope 3 {
        debug left_val => _10;           // in scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        debug right_val => _11;          // in scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        let _12: core::panicking::AssertKind; // in scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
        scope 4 {
            debug kind => _12;           // in scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
        }
    }
    scope 5 {
        debug left_val => _16;           // in scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        debug right_val => _17;          // in scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        let _18: core::panicking::AssertKind; // in scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
        scope 6 {
            debug kind => _18;           // in scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
        }
    }
    scope 7 {
        debug left_val => _22;           // in scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        debug right_val => _23;          // in scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        let _24: core::panicking::AssertKind; // in scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
        scope 8 {
            debug kind => _24;           // in scope 8 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
        }
    }
    scope 9 {
        debug left_val => _30;           // in scope 9 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        debug right_val => _31;          // in scope 9 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        let _36: core::panicking::AssertKind; // in scope 9 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
        scope 10 {
            debug kind => _36;           // in scope 10 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
        }
    }
    scope 11 {
        debug left_val => _49;           // in scope 11 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        debug right_val => _50;          // in scope 11 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        let _55: core::panicking::AssertKind; // in scope 11 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
        scope 12 {
            debug kind => _55;           // in scope 12 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
        }
    }
    scope 13 {
        debug left_val => _71;           // in scope 13 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        debug right_val => _72;          // in scope 13 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        let _77: core::panicking::AssertKind; // in scope 13 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
        scope 14 {
            debug kind => _77;           // in scope 14 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
        }
    }
    scope 15 {
        debug left_val => _88;           // in scope 15 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        debug right_val => _89;          // in scope 15 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        let _90: core::panicking::AssertKind; // in scope 15 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
        scope 16 {
            debug kind => _90;           // in scope 16 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
        }
    }

    bb0: {
        _103 = const _;                  // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
                                         // + literal: Const { ty: &usize, val: Unevaluated(main, [], Some(promoted[12])) }
        _2 = _103;                       // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _102 = const _;                  // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // + literal: Const { ty: &usize, val: Unevaluated(main, [], Some(promoted[11])) }
        _3 = _102;                       // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _1 = (move _2, move _3);         // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _4 = (_1.0: &usize);             // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _5 = (_1.1: &usize);             // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _101 = const _;                  // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
                                         // + literal: Const { ty: &usize, val: Unevaluated(main, [], Some(promoted[10])) }
        _8 = _101;                       // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _100 = const _;                  // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // + literal: Const { ty: &usize, val: Unevaluated(main, [], Some(promoted[9])) }
        _9 = _100;                       // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _7 = (move _8, move _9);         // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _10 = (_7.0: &usize);            // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _11 = (_7.1: &usize);            // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _99 = const _;                   // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
                                         // + literal: Const { ty: &usize, val: Unevaluated(main, [], Some(promoted[8])) }
        _14 = _99;                       // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _98 = const _;                   // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // + literal: Const { ty: &usize, val: Unevaluated(main, [], Some(promoted[7])) }
        _15 = _98;                       // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _13 = (move _14, move _15);      // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _16 = (_13.0: &usize);           // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _17 = (_13.1: &usize);           // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _97 = const _;                   // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
                                         // + literal: Const { ty: &usize, val: Unevaluated(main, [], Some(promoted[6])) }
        _20 = _97;                       // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _96 = const _;                   // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // + literal: Const { ty: &usize, val: Unevaluated(main, [], Some(promoted[5])) }
        _21 = _96;                       // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _19 = (move _20, move _21);      // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _22 = (_19.0: &usize);           // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _23 = (_19.1: &usize);           // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _95 = const _;                   // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
                                         // + literal: Const { ty: &usize, val: Unevaluated(main, [], Some(promoted[4])) }
        _26 = _95;                       // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _29 = align_of::<u32>() -> bb1;  // scope 0 at ui/struct-enums/multiple-reprs.rs:70:48: 70:65
                                         // mir::Constant
                                         // + span: ui/struct-enums/multiple-reprs.rs:70:48: 70:63
                                         // + literal: Const { ty: fn() -> usize {align_of::<u32>}, val: Value(<ZST>) }
    }

    bb1: {
        _28 = align_size(const 10_usize, move _29) -> bb2; // scope 0 at ui/struct-enums/multiple-reprs.rs:70:33: 70:66
                                         // mir::Constant
                                         // + span: ui/struct-enums/multiple-reprs.rs:70:33: 70:43
                                         // + literal: Const { ty: fn(usize, usize) -> usize {align_size}, val: Value(<ZST>) }
    }

    bb2: {
        _27 = &_28;                      // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _25 = (move _26, move _27);      // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _30 = (_25.0: &usize);           // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _31 = (_25.1: &usize);           // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _34 = const 12_usize;            // scope 9 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
        _35 = (*_31);                    // scope 9 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
        _33 = Eq(move _34, move _35);    // scope 9 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
        _32 = Not(move _33);             // scope 9 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
        switchInt(move _32) -> [0: bb4, otherwise: bb3]; // scope 9 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    }

    bb3: {
        _36 = const core::panicking::AssertKind::Eq; // scope 9 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _38 = const core::panicking::AssertKind::Eq; // scope 10 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _40 = _30;                       // scope 10 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _39 = _40;                       // scope 10 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _42 = _31;                       // scope 10 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _41 = _42;                       // scope 10 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _43 = Option::<Arguments<'_>>::None; // scope 10 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
        _37 = core::panicking::assert_failed::<usize, usize>(move _38, move _39, move _41, move _43); // scope 10 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:53
                                         // + literal: Const { ty: for<'a, 'b, 'c> fn(core::panicking::AssertKind, &'a usize, &'b usize, Option<Arguments<'c>>) -> ! {core::panicking::assert_failed::<usize, usize>}, val: Value(<ZST>) }
    }

    bb4: {
        _94 = const _;                   // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
                                         // + literal: Const { ty: &usize, val: Unevaluated(main, [], Some(promoted[3])) }
        _45 = _94;                       // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _48 = align_of::<u64>() -> bb5;  // scope 0 at ui/struct-enums/multiple-reprs.rs:71:48: 71:65
                                         // mir::Constant
                                         // + span: ui/struct-enums/multiple-reprs.rs:71:48: 71:63
                                         // + literal: Const { ty: fn() -> usize {align_of::<u64>}, val: Value(<ZST>) }
    }

    bb5: {
        _47 = align_size(const 14_usize, move _48) -> bb6; // scope 0 at ui/struct-enums/multiple-reprs.rs:71:33: 71:66
                                         // mir::Constant
                                         // + span: ui/struct-enums/multiple-reprs.rs:71:33: 71:43
                                         // + literal: Const { ty: fn(usize, usize) -> usize {align_size}, val: Value(<ZST>) }
    }

    bb6: {
        _46 = &_47;                      // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _44 = (move _45, move _46);      // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _49 = (_44.0: &usize);           // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _50 = (_44.1: &usize);           // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _53 = const 16_usize;            // scope 11 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
        _54 = (*_50);                    // scope 11 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
        _52 = Eq(move _53, move _54);    // scope 11 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
        _51 = Not(move _52);             // scope 11 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
        switchInt(move _51) -> [0: bb8, otherwise: bb7]; // scope 11 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    }

    bb7: {
        _55 = const core::panicking::AssertKind::Eq; // scope 11 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _57 = const core::panicking::AssertKind::Eq; // scope 12 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _59 = _49;                       // scope 12 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _58 = _59;                       // scope 12 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _61 = _50;                       // scope 12 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _60 = _61;                       // scope 12 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _62 = Option::<Arguments<'_>>::None; // scope 12 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
        _56 = core::panicking::assert_failed::<usize, usize>(move _57, move _58, move _60, move _62); // scope 12 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:53
                                         // + literal: Const { ty: for<'a, 'b, 'c> fn(core::panicking::AssertKind, &'a usize, &'b usize, Option<Arguments<'c>>) -> ! {core::panicking::assert_failed::<usize, usize>}, val: Value(<ZST>) }
    }

    bb8: {
        _93 = const _;                   // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
                                         // + literal: Const { ty: &usize, val: Unevaluated(main, [], Some(promoted[2])) }
        _64 = _93;                       // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _68 = std::mem::size_of::<i32>() -> bb9; // scope 0 at ui/struct-enums/multiple-reprs.rs:72:48: 72:66
                                         // mir::Constant
                                         // + span: ui/struct-enums/multiple-reprs.rs:72:48: 72:64
                                         // + literal: Const { ty: fn() -> usize {std::mem::size_of::<i32>}, val: Value(<ZST>) }
    }

    bb9: {
        _69 = CheckedAdd(const 6_usize, _68); // scope 0 at ui/struct-enums/multiple-reprs.rs:72:44: 72:66
        assert(!move (_69.1: bool), "attempt to compute `{} + {}`, which would overflow", const 6_usize, move _68) -> bb10; // scope 0 at ui/struct-enums/multiple-reprs.rs:72:44: 72:66
    }

    bb10: {
        _67 = move (_69.0: usize);       // scope 0 at ui/struct-enums/multiple-reprs.rs:72:44: 72:66
        _70 = align_of::<i32>() -> bb11; // scope 0 at ui/struct-enums/multiple-reprs.rs:72:68: 72:87
                                         // mir::Constant
                                         // + span: ui/struct-enums/multiple-reprs.rs:72:68: 72:85
                                         // + literal: Const { ty: fn() -> usize {align_of::<i32>}, val: Value(<ZST>) }
    }

    bb11: {
        _66 = align_size(move _67, move _70) -> bb12; // scope 0 at ui/struct-enums/multiple-reprs.rs:72:33: 72:88
                                         // mir::Constant
                                         // + span: ui/struct-enums/multiple-reprs.rs:72:33: 72:43
                                         // + literal: Const { ty: fn(usize, usize) -> usize {align_size}, val: Value(<ZST>) }
    }

    bb12: {
        _65 = &_66;                      // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _63 = (move _64, move _65);      // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _71 = (_63.0: &usize);           // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _72 = (_63.1: &usize);           // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _75 = const 12_usize;            // scope 13 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
        _76 = (*_72);                    // scope 13 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
        _74 = Eq(move _75, move _76);    // scope 13 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
        _73 = Not(move _74);             // scope 13 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
        switchInt(move _73) -> [0: bb14, otherwise: bb13]; // scope 13 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    }

    bb13: {
        _77 = const core::panicking::AssertKind::Eq; // scope 13 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _79 = const core::panicking::AssertKind::Eq; // scope 14 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _81 = _71;                       // scope 14 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _80 = _81;                       // scope 14 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _83 = _72;                       // scope 14 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _82 = _83;                       // scope 14 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _84 = Option::<Arguments<'_>>::None; // scope 14 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
        _78 = core::panicking::assert_failed::<usize, usize>(move _79, move _80, move _82, move _84); // scope 14 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:53
                                         // + literal: Const { ty: for<'a, 'b, 'c> fn(core::panicking::AssertKind, &'a usize, &'b usize, Option<Arguments<'c>>) -> ! {core::panicking::assert_failed::<usize, usize>}, val: Value(<ZST>) }
    }

    bb14: {
        _92 = const _;                   // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
                                         // + literal: Const { ty: &usize, val: Unevaluated(main, [], Some(promoted[1])) }
        _86 = _92;                       // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _91 = const _;                   // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // + literal: Const { ty: &usize, val: Unevaluated(main, [], Some(promoted[0])) }
        _87 = _91;                       // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _85 = (move _86, move _87);      // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _88 = (_85.0: &usize);           // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _89 = (_85.1: &usize);           // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        return;                          // scope 0 at ui/struct-enums/multiple-reprs.rs:74:2: 74:2
    }
}

promoted[0] in main: &usize = {
    let mut _0: &usize;                  // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _1: usize;                   // in scope 0 at ui/struct-enums/multiple-reprs.rs:73:44: 73:46

    bb0: {
        _1 = const 21_usize;             // scope 0 at ui/struct-enums/multiple-reprs.rs:73:44: 73:46
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    }
}

promoted[1] in main: &usize = {
    let mut _0: &usize;                  // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let mut _1: usize;                   // in scope 0 at ui/struct-enums/multiple-reprs.rs:73:16: 73:42

    bb0: {
        _1 = std::mem::size_of::<p0f_api_query>() -> bb1; // scope 0 at ui/struct-enums/multiple-reprs.rs:73:16: 73:42
                                         // mir::Constant
                                         // + span: ui/struct-enums/multiple-reprs.rs:73:16: 73:40
                                         // + literal: Const { ty: fn() -> usize {std::mem::size_of::<p0f_api_query>}, val: Value(<ZST>) }
    }

    bb1: {
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    }
}

promoted[2] in main: &usize = {
    let mut _0: &usize;                  // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let mut _1: usize;                   // in scope 0 at ui/struct-enums/multiple-reprs.rs:72:16: 72:31

    bb0: {
        _1 = std::mem::size_of::<E7>() -> bb1; // scope 0 at ui/struct-enums/multiple-reprs.rs:72:16: 72:31
                                         // mir::Constant
                                         // + span: ui/struct-enums/multiple-reprs.rs:72:16: 72:29
                                         // + literal: Const { ty: fn() -> usize {std::mem::size_of::<E7>}, val: Value(<ZST>) }
    }

    bb1: {
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    }
}

promoted[3] in main: &usize = {
    let mut _0: &usize;                  // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let mut _1: usize;                   // in scope 0 at ui/struct-enums/multiple-reprs.rs:71:16: 71:31

    bb0: {
        _1 = std::mem::size_of::<E6>() -> bb1; // scope 0 at ui/struct-enums/multiple-reprs.rs:71:16: 71:31
                                         // mir::Constant
                                         // + span: ui/struct-enums/multiple-reprs.rs:71:16: 71:29
                                         // + literal: Const { ty: fn() -> usize {std::mem::size_of::<E6>}, val: Value(<ZST>) }
    }

    bb1: {
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    }
}

promoted[4] in main: &usize = {
    let mut _0: &usize;                  // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let mut _1: usize;                   // in scope 0 at ui/struct-enums/multiple-reprs.rs:70:16: 70:31

    bb0: {
        _1 = std::mem::size_of::<E5>() -> bb1; // scope 0 at ui/struct-enums/multiple-reprs.rs:70:16: 70:31
                                         // mir::Constant
                                         // + span: ui/struct-enums/multiple-reprs.rs:70:16: 70:29
                                         // + literal: Const { ty: fn() -> usize {std::mem::size_of::<E5>}, val: Value(<ZST>) }
    }

    bb1: {
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    }
}

promoted[5] in main: &usize = {
    let mut _0: &usize;                  // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _1: usize;                   // in scope 0 at ui/struct-enums/multiple-reprs.rs:69:33: 69:34

    bb0: {
        _1 = const 8_usize;              // scope 0 at ui/struct-enums/multiple-reprs.rs:69:33: 69:34
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    }
}

promoted[6] in main: &usize = {
    let mut _0: &usize;                  // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let mut _1: usize;                   // in scope 0 at ui/struct-enums/multiple-reprs.rs:69:16: 69:31

    bb0: {
        _1 = std::mem::size_of::<E4>() -> bb1; // scope 0 at ui/struct-enums/multiple-reprs.rs:69:16: 69:31
                                         // mir::Constant
                                         // + span: ui/struct-enums/multiple-reprs.rs:69:16: 69:29
                                         // + literal: Const { ty: fn() -> usize {std::mem::size_of::<E4>}, val: Value(<ZST>) }
    }

    bb1: {
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    }
}

promoted[7] in main: &usize = {
    let mut _0: &usize;                  // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _1: usize;                   // in scope 0 at ui/struct-enums/multiple-reprs.rs:68:33: 68:34

    bb0: {
        _1 = const 6_usize;              // scope 0 at ui/struct-enums/multiple-reprs.rs:68:33: 68:34
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    }
}

promoted[8] in main: &usize = {
    let mut _0: &usize;                  // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let mut _1: usize;                   // in scope 0 at ui/struct-enums/multiple-reprs.rs:68:16: 68:31

    bb0: {
        _1 = std::mem::size_of::<E3>() -> bb1; // scope 0 at ui/struct-enums/multiple-reprs.rs:68:16: 68:31
                                         // mir::Constant
                                         // + span: ui/struct-enums/multiple-reprs.rs:68:16: 68:29
                                         // + literal: Const { ty: fn() -> usize {std::mem::size_of::<E3>}, val: Value(<ZST>) }
    }

    bb1: {
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    }
}

promoted[9] in main: &usize = {
    let mut _0: &usize;                  // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _1: usize;                   // in scope 0 at ui/struct-enums/multiple-reprs.rs:67:33: 67:34

    bb0: {
        _1 = const 8_usize;              // scope 0 at ui/struct-enums/multiple-reprs.rs:67:33: 67:34
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    }
}

promoted[10] in main: &usize = {
    let mut _0: &usize;                  // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let mut _1: usize;                   // in scope 0 at ui/struct-enums/multiple-reprs.rs:67:16: 67:31

    bb0: {
        _1 = std::mem::size_of::<E2>() -> bb1; // scope 0 at ui/struct-enums/multiple-reprs.rs:67:16: 67:31
                                         // mir::Constant
                                         // + span: ui/struct-enums/multiple-reprs.rs:67:16: 67:29
                                         // + literal: Const { ty: fn() -> usize {std::mem::size_of::<E2>}, val: Value(<ZST>) }
    }

    bb1: {
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    }
}

promoted[11] in main: &usize = {
    let mut _0: &usize;                  // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _1: usize;                   // in scope 0 at ui/struct-enums/multiple-reprs.rs:66:33: 66:34

    bb0: {
        _1 = const 8_usize;              // scope 0 at ui/struct-enums/multiple-reprs.rs:66:33: 66:34
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    }
}

promoted[12] in main: &usize = {
    let mut _0: &usize;                  // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let mut _1: usize;                   // in scope 0 at ui/struct-enums/multiple-reprs.rs:66:16: 66:31

    bb0: {
        _1 = std::mem::size_of::<E1>() -> bb1; // scope 0 at ui/struct-enums/multiple-reprs.rs:66:16: 66:31
                                         // mir::Constant
                                         // + span: ui/struct-enums/multiple-reprs.rs:66:16: 66:29
                                         // + literal: Const { ty: fn() -> usize {std::mem::size_of::<E1>}, val: Value(<ZST>) }
    }

    bb1: {
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    }
}

fn align_size(_1: usize, _2: usize) -> usize {
    debug size => _1;                    // in scope 0 at ui/struct-enums/multiple-reprs.rs:76:15: 76:19
    debug align => _2;                   // in scope 0 at ui/struct-enums/multiple-reprs.rs:76:28: 76:33
    let mut _0: usize;                   // return place in scope 0 at ui/struct-enums/multiple-reprs.rs:76:45: 76:50
    let mut _3: usize;                   // in scope 0 at ui/struct-enums/multiple-reprs.rs:77:8: 77:20
    let mut _4: usize;                   // in scope 0 at ui/struct-enums/multiple-reprs.rs:77:8: 77:12
    let mut _5: usize;                   // in scope 0 at ui/struct-enums/multiple-reprs.rs:77:15: 77:20
    let mut _6: bool;                    // in scope 0 at ui/struct-enums/multiple-reprs.rs:77:8: 77:20
    let mut _7: usize;                   // in scope 0 at ui/struct-enums/multiple-reprs.rs:78:9: 78:13
    let mut _8: usize;                   // in scope 0 at ui/struct-enums/multiple-reprs.rs:78:16: 78:40
    let mut _9: usize;                   // in scope 0 at ui/struct-enums/multiple-reprs.rs:78:17: 78:22
    let mut _10: usize;                  // in scope 0 at ui/struct-enums/multiple-reprs.rs:78:25: 78:39
    let mut _11: usize;                  // in scope 0 at ui/struct-enums/multiple-reprs.rs:78:26: 78:30
    let mut _12: usize;                  // in scope 0 at ui/struct-enums/multiple-reprs.rs:78:33: 78:38
    let mut _13: bool;                   // in scope 0 at ui/struct-enums/multiple-reprs.rs:78:25: 78:39
    let mut _14: (usize, bool);          // in scope 0 at ui/struct-enums/multiple-reprs.rs:78:16: 78:40
    let mut _15: (usize, bool);          // in scope 0 at ui/struct-enums/multiple-reprs.rs:78:9: 78:40

    bb0: {
        _4 = _1;                         // scope 0 at ui/struct-enums/multiple-reprs.rs:77:8: 77:12
        _5 = _2;                         // scope 0 at ui/struct-enums/multiple-reprs.rs:77:15: 77:20
        _6 = Eq(_5, const 0_usize);      // scope 0 at ui/struct-enums/multiple-reprs.rs:77:8: 77:20
        assert(!move _6, "attempt to calculate the remainder of `{}` with a divisor of zero", _4) -> bb1; // scope 0 at ui/struct-enums/multiple-reprs.rs:77:8: 77:20
    }

    bb1: {
        _3 = Rem(move _4, move _5);      // scope 0 at ui/struct-enums/multiple-reprs.rs:77:8: 77:20
        switchInt(move _3) -> [0: bb6, otherwise: bb2]; // scope 0 at ui/struct-enums/multiple-reprs.rs:77:8: 77:25
    }

    bb2: {
        _7 = _1;                         // scope 0 at ui/struct-enums/multiple-reprs.rs:78:9: 78:13
        _9 = _2;                         // scope 0 at ui/struct-enums/multiple-reprs.rs:78:17: 78:22
        _11 = _1;                        // scope 0 at ui/struct-enums/multiple-reprs.rs:78:26: 78:30
        _12 = _2;                        // scope 0 at ui/struct-enums/multiple-reprs.rs:78:33: 78:38
        _13 = Eq(_12, const 0_usize);    // scope 0 at ui/struct-enums/multiple-reprs.rs:78:25: 78:39
        assert(!move _13, "attempt to calculate the remainder of `{}` with a divisor of zero", _11) -> bb3; // scope 0 at ui/struct-enums/multiple-reprs.rs:78:25: 78:39
    }

    bb3: {
        _10 = Rem(move _11, move _12);   // scope 0 at ui/struct-enums/multiple-reprs.rs:78:25: 78:39
        _14 = CheckedSub(_9, _10);       // scope 0 at ui/struct-enums/multiple-reprs.rs:78:16: 78:40
        assert(!move (_14.1: bool), "attempt to compute `{} - {}`, which would overflow", move _9, move _10) -> bb4; // scope 0 at ui/struct-enums/multiple-reprs.rs:78:16: 78:40
    }

    bb4: {
        _8 = move (_14.0: usize);        // scope 0 at ui/struct-enums/multiple-reprs.rs:78:16: 78:40
        _15 = CheckedAdd(_7, _8);        // scope 0 at ui/struct-enums/multiple-reprs.rs:78:9: 78:40
        assert(!move (_15.1: bool), "attempt to compute `{} + {}`, which would overflow", move _7, move _8) -> bb5; // scope 0 at ui/struct-enums/multiple-reprs.rs:78:9: 78:40
    }

    bb5: {
        _0 = move (_15.0: usize);        // scope 0 at ui/struct-enums/multiple-reprs.rs:78:9: 78:40
        goto -> bb7;                     // scope 0 at ui/struct-enums/multiple-reprs.rs:77:5: 81:6
    }

    bb6: {
        _0 = _1;                         // scope 0 at ui/struct-enums/multiple-reprs.rs:80:9: 80:13
        goto -> bb7;                     // scope 0 at ui/struct-enums/multiple-reprs.rs:77:5: 81:6
    }

    bb7: {
        return;                          // scope 0 at ui/struct-enums/multiple-reprs.rs:82:2: 82:2
    }
}

fn E1::A(_1: u8, _2: u16, _3: u8) -> E1 {
    let mut _0: E1;                      // return place in scope 0 at ui/struct-enums/multiple-reprs.rs:14:5: 14:6

    bb0: {
        _0 = E1::A(move _1, move _2, move _3); // scope 0 at ui/struct-enums/multiple-reprs.rs:14:5: 14:6
        return;                          // scope 0 at ui/struct-enums/multiple-reprs.rs:14:5: 14:6
    }
}

// MIR FOR CTFE
fn E1::A(_1: u8, _2: u16, _3: u8) -> E1 {
    let mut _0: E1;                      // return place in scope 0 at ui/struct-enums/multiple-reprs.rs:14:5: 14:6

    bb0: {
        _0 = E1::A(move _1, move _2, move _3); // scope 0 at ui/struct-enums/multiple-reprs.rs:14:5: 14:6
        return;                          // scope 0 at ui/struct-enums/multiple-reprs.rs:14:5: 14:6
    }
}

fn E1::B(_1: u8, _2: u16, _3: u8) -> E1 {
    let mut _0: E1;                      // return place in scope 0 at ui/struct-enums/multiple-reprs.rs:15:5: 15:6

    bb0: {
        _0 = E1::B(move _1, move _2, move _3); // scope 0 at ui/struct-enums/multiple-reprs.rs:15:5: 15:6
        return;                          // scope 0 at ui/struct-enums/multiple-reprs.rs:15:5: 15:6
    }
}

// MIR FOR CTFE
fn E1::B(_1: u8, _2: u16, _3: u8) -> E1 {
    let mut _0: E1;                      // return place in scope 0 at ui/struct-enums/multiple-reprs.rs:15:5: 15:6

    bb0: {
        _0 = E1::B(move _1, move _2, move _3); // scope 0 at ui/struct-enums/multiple-reprs.rs:15:5: 15:6
        return;                          // scope 0 at ui/struct-enums/multiple-reprs.rs:15:5: 15:6
    }
}

fn E2::A(_1: u8, _2: u16, _3: u8) -> E2 {
    let mut _0: E2;                      // return place in scope 0 at ui/struct-enums/multiple-reprs.rs:20:5: 20:6

    bb0: {
        _0 = E2::A(move _1, move _2, move _3); // scope 0 at ui/struct-enums/multiple-reprs.rs:20:5: 20:6
        return;                          // scope 0 at ui/struct-enums/multiple-reprs.rs:20:5: 20:6
    }
}

// MIR FOR CTFE
fn E2::A(_1: u8, _2: u16, _3: u8) -> E2 {
    let mut _0: E2;                      // return place in scope 0 at ui/struct-enums/multiple-reprs.rs:20:5: 20:6

    bb0: {
        _0 = E2::A(move _1, move _2, move _3); // scope 0 at ui/struct-enums/multiple-reprs.rs:20:5: 20:6
        return;                          // scope 0 at ui/struct-enums/multiple-reprs.rs:20:5: 20:6
    }
}

fn E2::B(_1: u8, _2: u16, _3: u8) -> E2 {
    let mut _0: E2;                      // return place in scope 0 at ui/struct-enums/multiple-reprs.rs:21:5: 21:6

    bb0: {
        _0 = E2::B(move _1, move _2, move _3); // scope 0 at ui/struct-enums/multiple-reprs.rs:21:5: 21:6
        return;                          // scope 0 at ui/struct-enums/multiple-reprs.rs:21:5: 21:6
    }
}

// MIR FOR CTFE
fn E2::B(_1: u8, _2: u16, _3: u8) -> E2 {
    let mut _0: E2;                      // return place in scope 0 at ui/struct-enums/multiple-reprs.rs:21:5: 21:6

    bb0: {
        _0 = E2::B(move _1, move _2, move _3); // scope 0 at ui/struct-enums/multiple-reprs.rs:21:5: 21:6
        return;                          // scope 0 at ui/struct-enums/multiple-reprs.rs:21:5: 21:6
    }
}

fn E3::A(_1: u8, _2: u16, _3: u8) -> E3 {
    let mut _0: E3;                      // return place in scope 0 at ui/struct-enums/multiple-reprs.rs:28:5: 28:6

    bb0: {
        _0 = E3::A(move _1, move _2, move _3); // scope 0 at ui/struct-enums/multiple-reprs.rs:28:5: 28:6
        return;                          // scope 0 at ui/struct-enums/multiple-reprs.rs:28:5: 28:6
    }
}

// MIR FOR CTFE
fn E3::A(_1: u8, _2: u16, _3: u8) -> E3 {
    let mut _0: E3;                      // return place in scope 0 at ui/struct-enums/multiple-reprs.rs:28:5: 28:6

    bb0: {
        _0 = E3::A(move _1, move _2, move _3); // scope 0 at ui/struct-enums/multiple-reprs.rs:28:5: 28:6
        return;                          // scope 0 at ui/struct-enums/multiple-reprs.rs:28:5: 28:6
    }
}

fn E3::B(_1: u8, _2: u16, _3: u8) -> E3 {
    let mut _0: E3;                      // return place in scope 0 at ui/struct-enums/multiple-reprs.rs:29:5: 29:6

    bb0: {
        _0 = E3::B(move _1, move _2, move _3); // scope 0 at ui/struct-enums/multiple-reprs.rs:29:5: 29:6
        return;                          // scope 0 at ui/struct-enums/multiple-reprs.rs:29:5: 29:6
    }
}

// MIR FOR CTFE
fn E3::B(_1: u8, _2: u16, _3: u8) -> E3 {
    let mut _0: E3;                      // return place in scope 0 at ui/struct-enums/multiple-reprs.rs:29:5: 29:6

    bb0: {
        _0 = E3::B(move _1, move _2, move _3); // scope 0 at ui/struct-enums/multiple-reprs.rs:29:5: 29:6
        return;                          // scope 0 at ui/struct-enums/multiple-reprs.rs:29:5: 29:6
    }
}

fn E4::A(_1: u8, _2: u16, _3: u8) -> E4 {
    let mut _0: E4;                      // return place in scope 0 at ui/struct-enums/multiple-reprs.rs:34:5: 34:6

    bb0: {
        _0 = E4::A(move _1, move _2, move _3); // scope 0 at ui/struct-enums/multiple-reprs.rs:34:5: 34:6
        return;                          // scope 0 at ui/struct-enums/multiple-reprs.rs:34:5: 34:6
    }
}

// MIR FOR CTFE
fn E4::A(_1: u8, _2: u16, _3: u8) -> E4 {
    let mut _0: E4;                      // return place in scope 0 at ui/struct-enums/multiple-reprs.rs:34:5: 34:6

    bb0: {
        _0 = E4::A(move _1, move _2, move _3); // scope 0 at ui/struct-enums/multiple-reprs.rs:34:5: 34:6
        return;                          // scope 0 at ui/struct-enums/multiple-reprs.rs:34:5: 34:6
    }
}

fn E4::B(_1: u8, _2: u16, _3: u8) -> E4 {
    let mut _0: E4;                      // return place in scope 0 at ui/struct-enums/multiple-reprs.rs:35:5: 35:6

    bb0: {
        _0 = E4::B(move _1, move _2, move _3); // scope 0 at ui/struct-enums/multiple-reprs.rs:35:5: 35:6
        return;                          // scope 0 at ui/struct-enums/multiple-reprs.rs:35:5: 35:6
    }
}

// MIR FOR CTFE
fn E4::B(_1: u8, _2: u16, _3: u8) -> E4 {
    let mut _0: E4;                      // return place in scope 0 at ui/struct-enums/multiple-reprs.rs:35:5: 35:6

    bb0: {
        _0 = E4::B(move _1, move _2, move _3); // scope 0 at ui/struct-enums/multiple-reprs.rs:35:5: 35:6
        return;                          // scope 0 at ui/struct-enums/multiple-reprs.rs:35:5: 35:6
    }
}

fn E5::A(_1: u8, _2: u16, _3: u8) -> E5 {
    let mut _0: E5;                      // return place in scope 0 at ui/struct-enums/multiple-reprs.rs:40:5: 40:6

    bb0: {
        _0 = E5::A(move _1, move _2, move _3); // scope 0 at ui/struct-enums/multiple-reprs.rs:40:5: 40:6
        return;                          // scope 0 at ui/struct-enums/multiple-reprs.rs:40:5: 40:6
    }
}

// MIR FOR CTFE
fn E5::A(_1: u8, _2: u16, _3: u8) -> E5 {
    let mut _0: E5;                      // return place in scope 0 at ui/struct-enums/multiple-reprs.rs:40:5: 40:6

    bb0: {
        _0 = E5::A(move _1, move _2, move _3); // scope 0 at ui/struct-enums/multiple-reprs.rs:40:5: 40:6
        return;                          // scope 0 at ui/struct-enums/multiple-reprs.rs:40:5: 40:6
    }
}

fn E5::B(_1: u8, _2: u16, _3: u8) -> E5 {
    let mut _0: E5;                      // return place in scope 0 at ui/struct-enums/multiple-reprs.rs:41:5: 41:6

    bb0: {
        _0 = E5::B(move _1, move _2, move _3); // scope 0 at ui/struct-enums/multiple-reprs.rs:41:5: 41:6
        return;                          // scope 0 at ui/struct-enums/multiple-reprs.rs:41:5: 41:6
    }
}

// MIR FOR CTFE
fn E5::B(_1: u8, _2: u16, _3: u8) -> E5 {
    let mut _0: E5;                      // return place in scope 0 at ui/struct-enums/multiple-reprs.rs:41:5: 41:6

    bb0: {
        _0 = E5::B(move _1, move _2, move _3); // scope 0 at ui/struct-enums/multiple-reprs.rs:41:5: 41:6
        return;                          // scope 0 at ui/struct-enums/multiple-reprs.rs:41:5: 41:6
    }
}

fn E6::A(_1: u8, _2: u16, _3: u8) -> E6 {
    let mut _0: E6;                      // return place in scope 0 at ui/struct-enums/multiple-reprs.rs:46:5: 46:6

    bb0: {
        _0 = E6::A(move _1, move _2, move _3); // scope 0 at ui/struct-enums/multiple-reprs.rs:46:5: 46:6
        return;                          // scope 0 at ui/struct-enums/multiple-reprs.rs:46:5: 46:6
    }
}

// MIR FOR CTFE
fn E6::A(_1: u8, _2: u16, _3: u8) -> E6 {
    let mut _0: E6;                      // return place in scope 0 at ui/struct-enums/multiple-reprs.rs:46:5: 46:6

    bb0: {
        _0 = E6::A(move _1, move _2, move _3); // scope 0 at ui/struct-enums/multiple-reprs.rs:46:5: 46:6
        return;                          // scope 0 at ui/struct-enums/multiple-reprs.rs:46:5: 46:6
    }
}

fn E6::B(_1: u8, _2: u16, _3: u8) -> E6 {
    let mut _0: E6;                      // return place in scope 0 at ui/struct-enums/multiple-reprs.rs:47:5: 47:6

    bb0: {
        _0 = E6::B(move _1, move _2, move _3); // scope 0 at ui/struct-enums/multiple-reprs.rs:47:5: 47:6
        return;                          // scope 0 at ui/struct-enums/multiple-reprs.rs:47:5: 47:6
    }
}

// MIR FOR CTFE
fn E6::B(_1: u8, _2: u16, _3: u8) -> E6 {
    let mut _0: E6;                      // return place in scope 0 at ui/struct-enums/multiple-reprs.rs:47:5: 47:6

    bb0: {
        _0 = E6::B(move _1, move _2, move _3); // scope 0 at ui/struct-enums/multiple-reprs.rs:47:5: 47:6
        return;                          // scope 0 at ui/struct-enums/multiple-reprs.rs:47:5: 47:6
    }
}

fn E7::A(_1: u8, _2: u16, _3: u8) -> E7 {
    let mut _0: E7;                      // return place in scope 0 at ui/struct-enums/multiple-reprs.rs:52:5: 52:6

    bb0: {
        _0 = E7::A(move _1, move _2, move _3); // scope 0 at ui/struct-enums/multiple-reprs.rs:52:5: 52:6
        return;                          // scope 0 at ui/struct-enums/multiple-reprs.rs:52:5: 52:6
    }
}

// MIR FOR CTFE
fn E7::A(_1: u8, _2: u16, _3: u8) -> E7 {
    let mut _0: E7;                      // return place in scope 0 at ui/struct-enums/multiple-reprs.rs:52:5: 52:6

    bb0: {
        _0 = E7::A(move _1, move _2, move _3); // scope 0 at ui/struct-enums/multiple-reprs.rs:52:5: 52:6
        return;                          // scope 0 at ui/struct-enums/multiple-reprs.rs:52:5: 52:6
    }
}

fn E7::B(_1: u8, _2: u16, _3: u8) -> E7 {
    let mut _0: E7;                      // return place in scope 0 at ui/struct-enums/multiple-reprs.rs:53:5: 53:6

    bb0: {
        _0 = E7::B(move _1, move _2, move _3); // scope 0 at ui/struct-enums/multiple-reprs.rs:53:5: 53:6
        return;                          // scope 0 at ui/struct-enums/multiple-reprs.rs:53:5: 53:6
    }
}

// MIR FOR CTFE
fn E7::B(_1: u8, _2: u16, _3: u8) -> E7 {
    let mut _0: E7;                      // return place in scope 0 at ui/struct-enums/multiple-reprs.rs:53:5: 53:6

    bb0: {
        _0 = E7::B(move _1, move _2, move _3); // scope 0 at ui/struct-enums/multiple-reprs.rs:53:5: 53:6
        return;                          // scope 0 at ui/struct-enums/multiple-reprs.rs:53:5: 53:6
    }
}
