// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
fn kitten(_1: Option<Box<kitten>>) -> kitten {
    debug cat => _1;                     // in scope 0 at ui/struct-enums/classes-self-referential.rs:12:11: 12:14
    let mut _0: kitten;                  // return place in scope 0 at ui/struct-enums/classes-self-referential.rs:12:32: 12:38
    let mut _2: std::option::Option<std::boxed::Box<kitten>>; // in scope 0 at ui/struct-enums/classes-self-referential.rs:14:14: 14:17

    bb0: {
        _2 = move _1;                    // scope 0 at ui/struct-enums/classes-self-referential.rs:14:14: 14:17
        _0 = kitten { cat: move _2 };    // scope 0 at ui/struct-enums/classes-self-referential.rs:13:5: 15:6
        return;                          // scope 0 at ui/struct-enums/classes-self-referential.rs:16:2: 16:2
    }
}

fn main() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/struct-enums/classes-self-referential.rs:20:15: 20:15

    bb0: {
        return;                          // scope 0 at ui/struct-enums/classes-self-referential.rs:20:17: 20:17
    }
}
