// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
fn main() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/struct-enums/rec-auto.rs:10:15: 10:15
    let _1: X;                           // in scope 0 at ui/struct-enums/rec-auto.rs:11:9: 11:10
    let mut _2: std::string::String;     // in scope 0 at ui/struct-enums/rec-auto.rs:11:21: 11:40
    let mut _3: &str;                    // in scope 0 at ui/struct-enums/rec-auto.rs:11:21: 11:40
    let _4: &str;                        // in scope 0 at ui/struct-enums/rec-auto.rs:11:21: 11:28
    let mut _5: std::string::String;     // in scope 0 at ui/struct-enums/rec-auto.rs:11:47: 11:66
    let mut _6: &str;                    // in scope 0 at ui/struct-enums/rec-auto.rs:11:47: 11:66
    let _7: &str;                        // in scope 0 at ui/struct-enums/rec-auto.rs:11:47: 11:54
    let _8: ();                          // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:62
    let mut _9: std::fmt::Arguments<'_>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _10: &[&str];                // in scope 0 at ui/struct-enums/rec-auto.rs:12:14: 12:18
    let mut _11: &[&str; 2];             // in scope 0 at ui/struct-enums/rec-auto.rs:12:14: 12:18
    let _12: &[&str; 2];                 // in scope 0 at ui/struct-enums/rec-auto.rs:12:14: 12:18
    let mut _13: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _14: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let _15: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let _16: [core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _17: core::fmt::ArgumentV1<'_>; // in scope 0 at ui/struct-enums/rec-auto.rs:12:20: 12:33
    let mut _18: &std::string::String;   // in scope 0 at ui/struct-enums/rec-auto.rs:12:20: 12:33
    let _19: &std::string::String;       // in scope 0 at ui/struct-enums/rec-auto.rs:12:20: 12:33
    let _20: std::string::String;        // in scope 0 at ui/struct-enums/rec-auto.rs:12:20: 12:33
    let mut _21: &std::string::String;   // in scope 0 at ui/struct-enums/rec-auto.rs:12:20: 12:33
    let _22: ();                         // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:62
    let mut _23: std::fmt::Arguments<'_>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _24: &[&str];                // in scope 0 at ui/struct-enums/rec-auto.rs:13:14: 13:18
    let mut _25: &[&str; 2];             // in scope 0 at ui/struct-enums/rec-auto.rs:13:14: 13:18
    let _26: &[&str; 2];                 // in scope 0 at ui/struct-enums/rec-auto.rs:13:14: 13:18
    let mut _27: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _28: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let _29: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let _30: [core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _31: core::fmt::ArgumentV1<'_>; // in scope 0 at ui/struct-enums/rec-auto.rs:13:20: 13:33
    let mut _32: &std::string::String;   // in scope 0 at ui/struct-enums/rec-auto.rs:13:20: 13:33
    let _33: &std::string::String;       // in scope 0 at ui/struct-enums/rec-auto.rs:13:20: 13:33
    let _34: std::string::String;        // in scope 0 at ui/struct-enums/rec-auto.rs:13:20: 13:33
    let mut _35: &std::string::String;   // in scope 0 at ui/struct-enums/rec-auto.rs:13:20: 13:33
    scope 1 {
        debug x => _1;                   // in scope 1 at ui/struct-enums/rec-auto.rs:11:9: 11:10
        let mut _36: &[&str; 2];         // in scope 1 at ui/struct-enums/rec-auto.rs:13:14: 13:18
        let mut _37: &[&str; 2];         // in scope 1 at ui/struct-enums/rec-auto.rs:12:14: 12:18
    }

    bb0: {
        _4 = const "hello";              // scope 0 at ui/struct-enums/rec-auto.rs:11:21: 11:28
                                         // mir::Constant
                                         // + span: ui/struct-enums/rec-auto.rs:11:21: 11:28
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _3 = _4;                         // scope 0 at ui/struct-enums/rec-auto.rs:11:21: 11:40
        _2 = <str as ToString>::to_string(move _3) -> bb1; // scope 0 at ui/struct-enums/rec-auto.rs:11:21: 11:40
                                         // mir::Constant
                                         // + span: ui/struct-enums/rec-auto.rs:11:29: 11:38
                                         // + literal: Const { ty: for<'a> fn(&'a str) -> String {<str as ToString>::to_string}, val: Value(<ZST>) }
    }

    bb1: {
        _7 = const "world";              // scope 0 at ui/struct-enums/rec-auto.rs:11:47: 11:54
                                         // mir::Constant
                                         // + span: ui/struct-enums/rec-auto.rs:11:47: 11:54
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _6 = _7;                         // scope 0 at ui/struct-enums/rec-auto.rs:11:47: 11:66
        _5 = <str as ToString>::to_string(move _6) -> [return: bb2, unwind: bb17]; // scope 0 at ui/struct-enums/rec-auto.rs:11:47: 11:66
                                         // mir::Constant
                                         // + span: ui/struct-enums/rec-auto.rs:11:55: 11:64
                                         // + literal: Const { ty: for<'a> fn(&'a str) -> String {<str as ToString>::to_string}, val: Value(<ZST>) }
    }

    bb2: {
        _1 = X { foo: move _2, bar: move _5 }; // scope 0 at ui/struct-enums/rec-auto.rs:11:13: 11:67
        _37 = const _;                   // scope 1 at ui/struct-enums/rec-auto.rs:12:14: 12:18
                                         // mir::Constant
                                         // + span: ui/struct-enums/rec-auto.rs:12:14: 12:18
                                         // + literal: Const { ty: &[&str; 2], val: Unevaluated(main, [], Some(promoted[1])) }
        _12 = _37;                       // scope 1 at ui/struct-enums/rec-auto.rs:12:14: 12:18
        _11 = _12;                       // scope 1 at ui/struct-enums/rec-auto.rs:12:14: 12:18
        _10 = move _11 as &[&str] (Pointer(Unsize)); // scope 1 at ui/struct-enums/rec-auto.rs:12:14: 12:18
        _21 = &(_1.0: std::string::String); // scope 1 at ui/struct-enums/rec-auto.rs:12:20: 12:33
        _20 = <String as Clone>::clone(move _21) -> [return: bb3, unwind: bb16]; // scope 1 at ui/struct-enums/rec-auto.rs:12:20: 12:33
                                         // mir::Constant
                                         // + span: ui/struct-enums/rec-auto.rs:12:26: 12:31
                                         // + literal: Const { ty: for<'a> fn(&'a String) -> String {<String as Clone>::clone}, val: Value(<ZST>) }
    }

    bb3: {
        _19 = &_20;                      // scope 1 at ui/struct-enums/rec-auto.rs:12:20: 12:33
        _18 = _19;                       // scope 1 at ui/struct-enums/rec-auto.rs:12:20: 12:33
        _17 = core::fmt::ArgumentV1::<'_>::new_display::<String>(move _18) -> [return: bb4, unwind: bb15]; // scope 1 at ui/struct-enums/rec-auto.rs:12:20: 12:33
                                         // mir::Constant
                                         // + span: ui/struct-enums/rec-auto.rs:12:20: 12:33
                                         // + user_ty: UserType(1)
                                         // + literal: Const { ty: for<'b> fn(&'b String) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_display::<String>}, val: Value(<ZST>) }
    }

    bb4: {
        _16 = [move _17];                // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _15 = &_16;                      // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _14 = _15;                       // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _13 = move _14 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _9 = Arguments::<'_>::new_v1(move _10, move _13) -> [return: bb5, unwind: bb15]; // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb5: {
        _8 = _print(move _9) -> [return: bb6, unwind: bb15]; // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:62
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:27
                                         // + literal: Const { ty: for<'a> fn(Arguments<'a>) {_print}, val: Value(<ZST>) }
    }

    bb6: {
        drop(_20) -> [return: bb7, unwind: bb16]; // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:62: 137:63
    }

    bb7: {
        _36 = const _;                   // scope 1 at ui/struct-enums/rec-auto.rs:13:14: 13:18
                                         // mir::Constant
                                         // + span: ui/struct-enums/rec-auto.rs:13:14: 13:18
                                         // + literal: Const { ty: &[&str; 2], val: Unevaluated(main, [], Some(promoted[0])) }
        _26 = _36;                       // scope 1 at ui/struct-enums/rec-auto.rs:13:14: 13:18
        _25 = _26;                       // scope 1 at ui/struct-enums/rec-auto.rs:13:14: 13:18
        _24 = move _25 as &[&str] (Pointer(Unsize)); // scope 1 at ui/struct-enums/rec-auto.rs:13:14: 13:18
        _35 = &(_1.1: std::string::String); // scope 1 at ui/struct-enums/rec-auto.rs:13:20: 13:33
        _34 = <String as Clone>::clone(move _35) -> [return: bb8, unwind: bb16]; // scope 1 at ui/struct-enums/rec-auto.rs:13:20: 13:33
                                         // mir::Constant
                                         // + span: ui/struct-enums/rec-auto.rs:13:26: 13:31
                                         // + literal: Const { ty: for<'a> fn(&'a String) -> String {<String as Clone>::clone}, val: Value(<ZST>) }
    }

    bb8: {
        _33 = &_34;                      // scope 1 at ui/struct-enums/rec-auto.rs:13:20: 13:33
        _32 = _33;                       // scope 1 at ui/struct-enums/rec-auto.rs:13:20: 13:33
        _31 = core::fmt::ArgumentV1::<'_>::new_display::<String>(move _32) -> [return: bb9, unwind: bb14]; // scope 1 at ui/struct-enums/rec-auto.rs:13:20: 13:33
                                         // mir::Constant
                                         // + span: ui/struct-enums/rec-auto.rs:13:20: 13:33
                                         // + user_ty: UserType(3)
                                         // + literal: Const { ty: for<'b> fn(&'b String) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_display::<String>}, val: Value(<ZST>) }
    }

    bb9: {
        _30 = [move _31];                // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _29 = &_30;                      // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _28 = _29;                       // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _27 = move _28 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _23 = Arguments::<'_>::new_v1(move _24, move _27) -> [return: bb10, unwind: bb14]; // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // + user_ty: UserType(2)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb10: {
        _22 = _print(move _23) -> [return: bb11, unwind: bb14]; // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:62
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:27
                                         // + literal: Const { ty: for<'a> fn(Arguments<'a>) {_print}, val: Value(<ZST>) }
    }

    bb11: {
        drop(_34) -> [return: bb12, unwind: bb16]; // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:62: 137:63
    }

    bb12: {
        drop(_1) -> bb13;                // scope 0 at ui/struct-enums/rec-auto.rs:14:1: 14:2
    }

    bb13: {
        return;                          // scope 0 at ui/struct-enums/rec-auto.rs:14:2: 14:2
    }

    bb14 (cleanup): {
        drop(_34) -> bb16;               // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:62: 137:63
    }

    bb15 (cleanup): {
        drop(_20) -> bb16;               // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:62: 137:63
    }

    bb16 (cleanup): {
        drop(_1) -> bb18;                // scope 0 at ui/struct-enums/rec-auto.rs:14:1: 14:2
    }

    bb17 (cleanup): {
        drop(_2) -> bb18;                // scope 0 at ui/struct-enums/rec-auto.rs:11:66: 11:67
    }

    bb18 (cleanup): {
        resume;                          // scope 0 at ui/struct-enums/rec-auto.rs:10:1: 14:2
    }
}

promoted[0] in main: &[&str; 2] = {
    let mut _0: &[&str; 2];              // return place in scope 0 at ui/struct-enums/rec-auto.rs:13:14: 13:18
    let mut _1: [&str; 2];               // in scope 0 at ui/struct-enums/rec-auto.rs:13:14: 13:18

    bb0: {
        _1 = [const "", const "\n"];     // scope 0 at ui/struct-enums/rec-auto.rs:13:14: 13:18
                                         // mir::Constant
                                         // + span: ui/struct-enums/rec-auto.rs:13:14: 13:18
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
                                         // mir::Constant
                                         // + span: ui/struct-enums/rec-auto.rs:13:14: 13:18
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at ui/struct-enums/rec-auto.rs:13:14: 13:18
        return;                          // scope 0 at ui/struct-enums/rec-auto.rs:13:14: 13:18
    }
}

promoted[1] in main: &[&str; 2] = {
    let mut _0: &[&str; 2];              // return place in scope 0 at ui/struct-enums/rec-auto.rs:12:14: 12:18
    let mut _1: [&str; 2];               // in scope 0 at ui/struct-enums/rec-auto.rs:12:14: 12:18

    bb0: {
        _1 = [const "", const "\n"];     // scope 0 at ui/struct-enums/rec-auto.rs:12:14: 12:18
                                         // mir::Constant
                                         // + span: ui/struct-enums/rec-auto.rs:12:14: 12:18
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
                                         // mir::Constant
                                         // + span: ui/struct-enums/rec-auto.rs:12:14: 12:18
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at ui/struct-enums/rec-auto.rs:12:14: 12:18
        return;                          // scope 0 at ui/struct-enums/rec-auto.rs:12:14: 12:18
    }
}
