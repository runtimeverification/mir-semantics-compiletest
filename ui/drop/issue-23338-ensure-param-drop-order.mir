// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
fn main() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/drop/issue-23338-ensure-param-drop-order.rs:11:15: 11:15
    let _1: std::cell::RefCell<std::vec::Vec<u32>>; // in scope 0 at ui/drop/issue-23338-ensure-param-drop-order.rs:12:9: 12:12
    let mut _2: std::vec::Vec<u32>;      // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:44:36: 44:59
    let _3: ();                          // in scope 0 at ui/drop/issue-23338-ensure-param-drop-order.rs:13:5: 13:36
    let mut _4: &str;                    // in scope 0 at ui/drop/issue-23338-ensure-param-drop-order.rs:13:16: 13:35
    let _5: &str;                        // in scope 0 at ui/drop/issue-23338-ensure-param-drop-order.rs:13:16: 13:35
    let _6: ();                          // in scope 0 at ui/drop/issue-23338-ensure-param-drop-order.rs:14:5: 14:15
    let mut _7: &std::cell::RefCell<std::vec::Vec<u32>>; // in scope 0 at ui/drop/issue-23338-ensure-param-drop-order.rs:14:10: 14:14
    let _8: &std::cell::RefCell<std::vec::Vec<u32>>; // in scope 0 at ui/drop/issue-23338-ensure-param-drop-order.rs:14:10: 14:14
    let mut _9: (&&[u32], &[u32; 8]);    // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _10: &&[u32];                // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let _11: &[u32];                     // in scope 0 at ui/drop/issue-23338-ensure-param-drop-order.rs:16:16: 16:33
    let _12: &[u32];                     // in scope 0 at ui/drop/issue-23338-ensure-param-drop-order.rs:16:17: 16:33
    let mut _13: &std::vec::Vec<u32>;    // in scope 0 at ui/drop/issue-23338-ensure-param-drop-order.rs:16:17: 16:29
    let _14: &std::vec::Vec<u32>;        // in scope 0 at ui/drop/issue-23338-ensure-param-drop-order.rs:16:17: 16:29
    let mut _15: &std::cell::Ref<'_, std::vec::Vec<u32>>; // in scope 0 at ui/drop/issue-23338-ensure-param-drop-order.rs:16:17: 16:29
    let _16: std::cell::Ref<'_, std::vec::Vec<u32>>; // in scope 0 at ui/drop/issue-23338-ensure-param-drop-order.rs:16:17: 16:29
    let mut _17: &std::cell::RefCell<std::vec::Vec<u32>>; // in scope 0 at ui/drop/issue-23338-ensure-param-drop-order.rs:16:17: 16:29
    let mut _18: std::ops::RangeFull;    // in scope 0 at ui/drop/issue-23338-ensure-param-drop-order.rs:16:30: 16:32
    let mut _19: &[u32; 8];              // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _22: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    let mut _23: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
    let mut _24: &&[u32];                // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
    let mut _25: &[u32; 8];              // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
    let _27: !;                          // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
    let mut _28: core::panicking::AssertKind; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
    let mut _29: &&[u32];                // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let _30: &&[u32];                    // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let mut _31: &[u32; 8];              // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let _32: &[u32; 8];                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let mut _33: std::option::Option<std::fmt::Arguments<'_>>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
    scope 1 {
        debug log => _1;                 // in scope 1 at ui/drop/issue-23338-ensure-param-drop-order.rs:12:9: 12:12
        let _20: &&[u32];                // in scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        let _21: &[u32; 8];              // in scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        let mut _34: &[u32; 8];          // in scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        scope 2 {
            debug left_val => _20;       // in scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
            debug right_val => _21;      // in scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
            let _26: core::panicking::AssertKind; // in scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
            scope 3 {
                debug kind => _26;       // in scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
            }
        }
    }

    bb0: {
        _2 = Vec::<u32>::new() -> bb1;   // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:44:36: 44:59
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:44:36: 44:57
                                         // + user_ty: UserType(1)
                                         // + literal: Const { ty: fn() -> Vec<u32> {Vec::<u32>::new}, val: Value(<ZST>) }
    }

    bb1: {
        _1 = RefCell::<Vec<u32>>::new(move _2) -> bb2; // scope 0 at ui/drop/issue-23338-ensure-param-drop-order.rs:12:15: 12:35
                                         // mir::Constant
                                         // + span: ui/drop/issue-23338-ensure-param-drop-order.rs:12:15: 12:27
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: fn(Vec<u32>) -> RefCell<Vec<u32>> {RefCell::<Vec<u32>>::new}, val: Value(<ZST>) }
    }

    bb2: {
        _5 = const "created empty log";  // scope 1 at ui/drop/issue-23338-ensure-param-drop-order.rs:13:16: 13:35
                                         // mir::Constant
                                         // + span: ui/drop/issue-23338-ensure-param-drop-order.rs:13:16: 13:35
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _4 = _5;                         // scope 1 at ui/drop/issue-23338-ensure-param-drop-order.rs:13:16: 13:35
        _3 = println(move _4) -> [return: bb3, unwind: bb14]; // scope 1 at ui/drop/issue-23338-ensure-param-drop-order.rs:13:5: 13:36
                                         // mir::Constant
                                         // + span: ui/drop/issue-23338-ensure-param-drop-order.rs:13:5: 13:15
                                         // + literal: Const { ty: for<'a> fn(&'a str) {println}, val: Value(<ZST>) }
    }

    bb3: {
        _8 = &_1;                        // scope 1 at ui/drop/issue-23338-ensure-param-drop-order.rs:14:10: 14:14
        _7 = _8;                         // scope 1 at ui/drop/issue-23338-ensure-param-drop-order.rs:14:10: 14:14
        _6 = test(move _7) -> [return: bb4, unwind: bb14]; // scope 1 at ui/drop/issue-23338-ensure-param-drop-order.rs:14:5: 14:15
                                         // mir::Constant
                                         // + span: ui/drop/issue-23338-ensure-param-drop-order.rs:14:5: 14:9
                                         // + literal: Const { ty: for<'a> fn(&'a RefCell<Vec<u32>>) {test}, val: Value(<ZST>) }
    }

    bb4: {
        _17 = &_1;                       // scope 1 at ui/drop/issue-23338-ensure-param-drop-order.rs:16:17: 16:29
        _16 = RefCell::<Vec<u32>>::borrow(move _17) -> [return: bb5, unwind: bb14]; // scope 1 at ui/drop/issue-23338-ensure-param-drop-order.rs:16:17: 16:29
                                         // mir::Constant
                                         // + span: ui/drop/issue-23338-ensure-param-drop-order.rs:16:21: 16:27
                                         // + literal: Const { ty: for<'a> fn(&'a RefCell<Vec<u32>>) -> Ref<'a, Vec<u32>> {RefCell::<Vec<u32>>::borrow}, val: Value(<ZST>) }
    }

    bb5: {
        _15 = &_16;                      // scope 1 at ui/drop/issue-23338-ensure-param-drop-order.rs:16:17: 16:29
        _14 = <Ref<'_, Vec<u32>> as Deref>::deref(move _15) -> [return: bb6, unwind: bb13]; // scope 1 at ui/drop/issue-23338-ensure-param-drop-order.rs:16:17: 16:29
                                         // mir::Constant
                                         // + span: ui/drop/issue-23338-ensure-param-drop-order.rs:16:17: 16:29
                                         // + literal: Const { ty: for<'a> fn(&'a Ref<'_, Vec<u32>>) -> &'a <Ref<'_, Vec<u32>> as Deref>::Target {<Ref<'_, Vec<u32>> as Deref>::deref}, val: Value(<ZST>) }
    }

    bb6: {
        _13 = _14;                       // scope 1 at ui/drop/issue-23338-ensure-param-drop-order.rs:16:17: 16:29
        _12 = <Vec<u32> as Index<RangeFull>>::index(move _13, move _18) -> [return: bb7, unwind: bb13]; // scope 1 at ui/drop/issue-23338-ensure-param-drop-order.rs:16:17: 16:33
                                         // mir::Constant
                                         // + span: ui/drop/issue-23338-ensure-param-drop-order.rs:16:17: 16:33
                                         // + literal: Const { ty: for<'a> fn(&'a Vec<u32>, RangeFull) -> &'a <Vec<u32> as Index<RangeFull>>::Output {<Vec<u32> as Index<RangeFull>>::index}, val: Value(<ZST>) }
    }

    bb7: {
        _11 = _12;                       // scope 1 at ui/drop/issue-23338-ensure-param-drop-order.rs:16:16: 16:33
        _10 = &_11;                      // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _34 = const _;                   // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // + literal: Const { ty: &[u32; 8], val: Unevaluated(main, [], Some(promoted[0])) }
        _19 = _34;                       // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _9 = (move _10, move _19);       // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _20 = (_9.0: &&[u32]);           // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _21 = (_9.1: &[u32; 8]);         // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _24 = _20;                       // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
        _25 = _21;                       // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
        _23 = <&[u32] as PartialEq<[u32; 8]>>::eq(move _24, move _25) -> [return: bb8, unwind: bb13]; // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a &[u32], &'b [u32; 8]) -> bool {<&[u32] as PartialEq<[u32; 8]>>::eq}, val: Value(<ZST>) }
    }

    bb8: {
        _22 = Not(move _23);             // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
        switchInt(move _22) -> [0: bb10, otherwise: bb9]; // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    }

    bb9: {
        _26 = const core::panicking::AssertKind::Eq; // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _28 = const core::panicking::AssertKind::Eq; // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _30 = _20;                       // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _29 = _30;                       // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _32 = _21;                       // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _31 = _32;                       // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _33 = Option::<Arguments<'_>>::None; // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
        _27 = core::panicking::assert_failed::<&[u32], [u32; 8]>(move _28, move _29, move _31, move _33) -> bb13; // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:53
                                         // + literal: Const { ty: for<'a, 'b, 'c> fn(core::panicking::AssertKind, &'a &[u32], &'b [u32; 8], Option<Arguments<'c>>) -> ! {core::panicking::assert_failed::<&[u32], [u32; 8]>}, val: Value(<ZST>) }
    }

    bb10: {
        drop(_16) -> [return: bb11, unwind: bb14]; // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:48:9: 48:10
    }

    bb11: {
        drop(_1) -> bb12;                // scope 0 at ui/drop/issue-23338-ensure-param-drop-order.rs:48:1: 48:2
    }

    bb12: {
        return;                          // scope 0 at ui/drop/issue-23338-ensure-param-drop-order.rs:48:2: 48:2
    }

    bb13 (cleanup): {
        drop(_16) -> bb14;               // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:48:9: 48:10
    }

    bb14 (cleanup): {
        drop(_1) -> bb15;                // scope 0 at ui/drop/issue-23338-ensure-param-drop-order.rs:48:1: 48:2
    }

    bb15 (cleanup): {
        resume;                          // scope 0 at ui/drop/issue-23338-ensure-param-drop-order.rs:11:1: 48:2
    }
}

promoted[0] in main: &[u32; 8] = {
    let mut _0: &[u32; 8];               // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _1: [u32; 8];                // in scope 0 at ui/drop/issue-23338-ensure-param-drop-order.rs:17:16: 47:25

    bb0: {
        _1 = [const 3_u32, const 4_u32, const 5_u32, const 2_u32, const 6_u32, const 1_u32, const 0_u32, const 7_u32]; // scope 0 at ui/drop/issue-23338-ensure-param-drop-order.rs:17:16: 47:25
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    }
}

fn test(_1: &RefCell<Vec<u32>>) -> () {
    debug log => _1;                     // in scope 0 at ui/drop/issue-23338-ensure-param-drop-order.rs:50:13: 50:16
    let mut _0: ();                      // return place in scope 0 at ui/drop/issue-23338-ensure-param-drop-order.rs:50:30: 50:30
    let _2: d::D<'_>;                    // in scope 0 at ui/drop/issue-23338-ensure-param-drop-order.rs:51:9: 51:11
    let mut _3: &std::cell::RefCell<std::vec::Vec<u32>>; // in scope 0 at ui/drop/issue-23338-ensure-param-drop-order.rs:51:30: 51:33
    let mut _5: &std::cell::RefCell<std::vec::Vec<u32>>; // in scope 0 at ui/drop/issue-23338-ensure-param-drop-order.rs:52:30: 52:33
    let _6: ();                          // in scope 0 at ui/drop/issue-23338-ensure-param-drop-order.rs:53:5: 53:30
    let mut _7: &str;                    // in scope 0 at ui/drop/issue-23338-ensure-param-drop-order.rs:53:16: 53:29
    let _8: &str;                        // in scope 0 at ui/drop/issue-23338-ensure-param-drop-order.rs:53:16: 53:29
    let mut _10: d::D<'_>;               // in scope 0 at ui/drop/issue-23338-ensure-param-drop-order.rs:54:22: 54:24
    let mut _11: d::D<'_>;               // in scope 0 at ui/drop/issue-23338-ensure-param-drop-order.rs:54:26: 54:28
    let _12: ();                         // in scope 0 at ui/drop/issue-23338-ensure-param-drop-order.rs:55:5: 55:46
    let mut _13: &str;                   // in scope 0 at ui/drop/issue-23338-ensure-param-drop-order.rs:55:16: 55:45
    let _14: &str;                       // in scope 0 at ui/drop/issue-23338-ensure-param-drop-order.rs:55:16: 55:45
    let mut _15: &std::string::String;   // in scope 0 at ui/drop/issue-23338-ensure-param-drop-order.rs:55:16: 55:45
    let _16: &std::string::String;       // in scope 0 at ui/drop/issue-23338-ensure-param-drop-order.rs:55:16: 55:45
    let _17: std::string::String;        // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:117:23: 120:6
    let mut _19: std::fmt::Arguments<'_>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
    let mut _20: &[&str];                // in scope 0 at ui/drop/issue-23338-ensure-param-drop-order.rs:55:25: 55:36
    let mut _21: &[&str; 1];             // in scope 0 at ui/drop/issue-23338-ensure-param-drop-order.rs:55:25: 55:36
    let _22: &[&str; 1];                 // in scope 0 at ui/drop/issue-23338-ensure-param-drop-order.rs:55:25: 55:36
    let mut _23: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
    let mut _24: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
    let _25: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
    let _26: [core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
    let mut _27: core::fmt::ArgumentV1<'_>; // in scope 0 at ui/drop/issue-23338-ensure-param-drop-order.rs:55:38: 55:44
    let mut _28: &d::D<'_>;              // in scope 0 at ui/drop/issue-23338-ensure-param-drop-order.rs:55:38: 55:44
    let _29: &d::D<'_>;                  // in scope 0 at ui/drop/issue-23338-ensure-param-drop-order.rs:55:38: 55:44
    let mut _31: bool;                   // in scope 0 at ui/drop/issue-23338-ensure-param-drop-order.rs:56:1: 56:2
    let mut _32: bool;                   // in scope 0 at ui/drop/issue-23338-ensure-param-drop-order.rs:56:1: 56:2
    scope 1 {
        debug da => _2;                  // in scope 1 at ui/drop/issue-23338-ensure-param-drop-order.rs:51:9: 51:11
        let _4: d::D<'_>;                // in scope 1 at ui/drop/issue-23338-ensure-param-drop-order.rs:52:9: 52:11
        scope 2 {
            debug de => _4;              // in scope 2 at ui/drop/issue-23338-ensure-param-drop-order.rs:52:9: 52:11
            let _9: d::D<'_>;            // in scope 2 at ui/drop/issue-23338-ensure-param-drop-order.rs:54:9: 54:15
            scope 3 {
                debug result => _9;      // in scope 3 at ui/drop/issue-23338-ensure-param-drop-order.rs:54:9: 54:15
                let _18: std::string::String; // in scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:13: 118:16
                let mut _30: &[&str; 1]; // in scope 3 at ui/drop/issue-23338-ensure-param-drop-order.rs:55:25: 55:36
                scope 4 {
                    debug res => _18;    // in scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:13: 118:16
                }
            }
        }
    }

    bb0: {
        _31 = const false;               // scope 0 at ui/drop/issue-23338-ensure-param-drop-order.rs:51:9: 51:11
        _32 = const false;               // scope 0 at ui/drop/issue-23338-ensure-param-drop-order.rs:51:9: 51:11
        _3 = _1;                         // scope 0 at ui/drop/issue-23338-ensure-param-drop-order.rs:51:30: 51:33
        _32 = const true;                // scope 0 at ui/drop/issue-23338-ensure-param-drop-order.rs:51:14: 51:34
        _2 = D::<'_>::new(const "da", const 0_u32, move _3) -> bb1; // scope 0 at ui/drop/issue-23338-ensure-param-drop-order.rs:51:14: 51:34
                                         // mir::Constant
                                         // + span: ui/drop/issue-23338-ensure-param-drop-order.rs:51:14: 51:20
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: fn(&'static str, u32, &RefCell<Vec<u32>>) -> D<'_> {D::<'_>::new}, val: Value(<ZST>) }
                                         // mir::Constant
                                         // + span: ui/drop/issue-23338-ensure-param-drop-order.rs:51:21: 51:25
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
    }

    bb1: {
        _5 = _1;                         // scope 1 at ui/drop/issue-23338-ensure-param-drop-order.rs:52:30: 52:33
        _4 = D::<'_>::new(const "de", const 1_u32, move _5) -> [return: bb2, unwind: bb18]; // scope 1 at ui/drop/issue-23338-ensure-param-drop-order.rs:52:14: 52:34
                                         // mir::Constant
                                         // + span: ui/drop/issue-23338-ensure-param-drop-order.rs:52:14: 52:20
                                         // + user_ty: UserType(1)
                                         // + literal: Const { ty: fn(&'static str, u32, &RefCell<Vec<u32>>) -> D<'_> {D::<'_>::new}, val: Value(<ZST>) }
                                         // mir::Constant
                                         // + span: ui/drop/issue-23338-ensure-param-drop-order.rs:52:21: 52:25
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
    }

    bb2: {
        _31 = const true;                // scope 1 at ui/drop/issue-23338-ensure-param-drop-order.rs:52:33: 52:34
        _8 = const "calling foo";        // scope 2 at ui/drop/issue-23338-ensure-param-drop-order.rs:53:16: 53:29
                                         // mir::Constant
                                         // + span: ui/drop/issue-23338-ensure-param-drop-order.rs:53:16: 53:29
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _7 = _8;                         // scope 2 at ui/drop/issue-23338-ensure-param-drop-order.rs:53:16: 53:29
        _6 = println(move _7) -> [return: bb3, unwind: bb16]; // scope 2 at ui/drop/issue-23338-ensure-param-drop-order.rs:53:5: 53:30
                                         // mir::Constant
                                         // + span: ui/drop/issue-23338-ensure-param-drop-order.rs:53:5: 53:15
                                         // + literal: Const { ty: for<'a> fn(&'a str) {println}, val: Value(<ZST>) }
    }

    bb3: {
        _32 = const false;               // scope 2 at ui/drop/issue-23338-ensure-param-drop-order.rs:54:22: 54:24
        _10 = move _2;                   // scope 2 at ui/drop/issue-23338-ensure-param-drop-order.rs:54:22: 54:24
        _31 = const false;               // scope 2 at ui/drop/issue-23338-ensure-param-drop-order.rs:54:26: 54:28
        _11 = move _4;                   // scope 2 at ui/drop/issue-23338-ensure-param-drop-order.rs:54:26: 54:28
        _9 = foo(move _10, move _11) -> [return: bb4, unwind: bb16]; // scope 2 at ui/drop/issue-23338-ensure-param-drop-order.rs:54:18: 54:29
                                         // mir::Constant
                                         // + span: ui/drop/issue-23338-ensure-param-drop-order.rs:54:18: 54:21
                                         // + literal: Const { ty: for<'a> fn(D<'a>, D<'a>) -> D<'a> {foo}, val: Value(<ZST>) }
    }

    bb4: {
        _30 = const _;                   // scope 3 at ui/drop/issue-23338-ensure-param-drop-order.rs:55:25: 55:36
                                         // mir::Constant
                                         // + span: ui/drop/issue-23338-ensure-param-drop-order.rs:55:25: 55:36
                                         // + literal: Const { ty: &[&str; 1], val: Unevaluated(test, [], Some(promoted[0])) }
        _22 = _30;                       // scope 3 at ui/drop/issue-23338-ensure-param-drop-order.rs:55:25: 55:36
        _21 = _22;                       // scope 3 at ui/drop/issue-23338-ensure-param-drop-order.rs:55:25: 55:36
        _20 = move _21 as &[&str] (Pointer(Unsize)); // scope 3 at ui/drop/issue-23338-ensure-param-drop-order.rs:55:25: 55:36
        _29 = &_9;                       // scope 3 at ui/drop/issue-23338-ensure-param-drop-order.rs:55:38: 55:44
        _28 = _29;                       // scope 3 at ui/drop/issue-23338-ensure-param-drop-order.rs:55:38: 55:44
        _27 = core::fmt::ArgumentV1::<'_>::new_display::<D<'_>>(move _28) -> [return: bb5, unwind: bb13]; // scope 3 at ui/drop/issue-23338-ensure-param-drop-order.rs:55:38: 55:44
                                         // mir::Constant
                                         // + span: ui/drop/issue-23338-ensure-param-drop-order.rs:55:38: 55:44
                                         // + user_ty: UserType(3)
                                         // + literal: Const { ty: for<'b> fn(&'b D<'_>) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_display::<D<'_>>}, val: Value(<ZST>) }
    }

    bb5: {
        _26 = [move _27];                // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
        _25 = &_26;                      // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
        _24 = _25;                       // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
        _23 = move _24 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
        _19 = Arguments::<'_>::new_v1(move _20, move _23) -> [return: bb6, unwind: bb13]; // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
                                         // + user_ty: UserType(2)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb6: {
        _18 = format(move _19) -> [return: bb7, unwind: bb13]; // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:19: 118:80
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:19: 118:38
                                         // + literal: Const { ty: for<'a> fn(Arguments<'a>) -> String {format}, val: Value(<ZST>) }
    }

    bb7: {
        _17 = move _18;                  // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:119:9: 119:12
        _16 = &_17;                      // scope 3 at ui/drop/issue-23338-ensure-param-drop-order.rs:55:16: 55:45
        _15 = _16;                       // scope 3 at ui/drop/issue-23338-ensure-param-drop-order.rs:55:16: 55:45
        _14 = <String as Deref>::deref(move _15) -> [return: bb8, unwind: bb12]; // scope 3 at ui/drop/issue-23338-ensure-param-drop-order.rs:55:16: 55:45
                                         // mir::Constant
                                         // + span: ui/drop/issue-23338-ensure-param-drop-order.rs:55:16: 55:45
                                         // + literal: Const { ty: for<'a> fn(&'a String) -> &'a <String as Deref>::Target {<String as Deref>::deref}, val: Value(<ZST>) }
    }

    bb8: {
        _13 = _14;                       // scope 3 at ui/drop/issue-23338-ensure-param-drop-order.rs:55:16: 55:45
        _12 = println(move _13) -> [return: bb9, unwind: bb12]; // scope 3 at ui/drop/issue-23338-ensure-param-drop-order.rs:55:5: 55:46
                                         // mir::Constant
                                         // + span: ui/drop/issue-23338-ensure-param-drop-order.rs:55:5: 55:15
                                         // + literal: Const { ty: for<'a> fn(&'a str) {println}, val: Value(<ZST>) }
    }

    bb9: {
        drop(_17) -> [return: bb10, unwind: bb13]; // scope 3 at ui/drop/issue-23338-ensure-param-drop-order.rs:55:46: 55:47
    }

    bb10: {
        drop(_9) -> [return: bb11, unwind: bb16]; // scope 2 at ui/drop/issue-23338-ensure-param-drop-order.rs:56:1: 56:2
    }

    bb11: {
        _31 = const false;               // scope 1 at ui/drop/issue-23338-ensure-param-drop-order.rs:56:1: 56:2
        _32 = const false;               // scope 0 at ui/drop/issue-23338-ensure-param-drop-order.rs:56:1: 56:2
        return;                          // scope 0 at ui/drop/issue-23338-ensure-param-drop-order.rs:56:2: 56:2
    }

    bb12 (cleanup): {
        drop(_17) -> bb13;               // scope 3 at ui/drop/issue-23338-ensure-param-drop-order.rs:55:46: 55:47
    }

    bb13 (cleanup): {
        drop(_9) -> bb16;                // scope 2 at ui/drop/issue-23338-ensure-param-drop-order.rs:56:1: 56:2
    }

    bb14 (cleanup): {
        resume;                          // scope 0 at ui/drop/issue-23338-ensure-param-drop-order.rs:50:1: 56:2
    }

    bb15 (cleanup): {
        drop(_4) -> bb18;                // scope 1 at ui/drop/issue-23338-ensure-param-drop-order.rs:56:1: 56:2
    }

    bb16 (cleanup): {
        switchInt(_31) -> [0: bb18, otherwise: bb15]; // scope 1 at ui/drop/issue-23338-ensure-param-drop-order.rs:56:1: 56:2
    }

    bb17 (cleanup): {
        drop(_2) -> bb14;                // scope 0 at ui/drop/issue-23338-ensure-param-drop-order.rs:56:1: 56:2
    }

    bb18 (cleanup): {
        switchInt(_32) -> [0: bb14, otherwise: bb17]; // scope 0 at ui/drop/issue-23338-ensure-param-drop-order.rs:56:1: 56:2
    }
}

promoted[0] in test: &[&str; 1] = {
    let mut _0: &[&str; 1];              // return place in scope 0 at ui/drop/issue-23338-ensure-param-drop-order.rs:55:25: 55:36
    let mut _1: [&str; 1];               // in scope 0 at ui/drop/issue-23338-ensure-param-drop-order.rs:55:25: 55:36

    bb0: {
        _1 = [const "result "];          // scope 0 at ui/drop/issue-23338-ensure-param-drop-order.rs:55:25: 55:36
                                         // mir::Constant
                                         // + span: ui/drop/issue-23338-ensure-param-drop-order.rs:55:25: 55:36
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at ui/drop/issue-23338-ensure-param-drop-order.rs:55:25: 55:36
        return;                          // scope 0 at ui/drop/issue-23338-ensure-param-drop-order.rs:55:25: 55:36
    }
}

fn foo(_1: D<'_>, _2: D<'_>) -> D<'_> {
    debug da0 => _1;                     // in scope 0 at ui/drop/issue-23338-ensure-param-drop-order.rs:58:12: 58:15
    debug de1 => _2;                     // in scope 0 at ui/drop/issue-23338-ensure-param-drop-order.rs:58:24: 58:27
    let mut _0: d::D<'_>;                // return place in scope 0 at ui/drop/issue-23338-ensure-param-drop-order.rs:58:39: 58:44
    let _3: ();                          // in scope 0 at ui/drop/issue-23338-ensure-param-drop-order.rs:59:5: 59:30
    let mut _4: &str;                    // in scope 0 at ui/drop/issue-23338-ensure-param-drop-order.rs:59:16: 59:29
    let _5: &str;                        // in scope 0 at ui/drop/issue-23338-ensure-param-drop-order.rs:59:16: 59:29
    let _6: d::D<'_>;                    // in scope 0 at ui/drop/issue-23338-ensure-param-drop-order.rs:60:9: 60:12
    let mut _7: &d::D<'_>;               // in scope 0 at ui/drop/issue-23338-ensure-param-drop-order.rs:60:15: 60:25
    let mut _10: &d::D<'_>;              // in scope 0 at ui/drop/issue-23338-ensure-param-drop-order.rs:62:20: 62:30
    let mut _11: &d::D<'_>;              // in scope 0 at ui/drop/issue-23338-ensure-param-drop-order.rs:63:9: 63:26
    let _12: d::D<'_>;                   // in scope 0 at ui/drop/issue-23338-ensure-param-drop-order.rs:63:9: 63:19
    let mut _13: &d::D<'_>;              // in scope 0 at ui/drop/issue-23338-ensure-param-drop-order.rs:63:9: 63:19
    let _14: ();                         // in scope 0 at ui/drop/issue-23338-ensure-param-drop-order.rs:65:5: 65:35
    let mut _15: &str;                   // in scope 0 at ui/drop/issue-23338-ensure-param-drop-order.rs:65:16: 65:34
    let _16: &str;                       // in scope 0 at ui/drop/issue-23338-ensure-param-drop-order.rs:65:16: 65:34
    let mut _17: &d::D<'_>;              // in scope 0 at ui/drop/issue-23338-ensure-param-drop-order.rs:66:5: 66:22
    let _18: d::D<'_>;                   // in scope 0 at ui/drop/issue-23338-ensure-param-drop-order.rs:66:5: 66:15
    let mut _19: &d::D<'_>;              // in scope 0 at ui/drop/issue-23338-ensure-param-drop-order.rs:66:5: 66:15
    scope 1 {
        debug de2 => _6;                 // in scope 1 at ui/drop/issue-23338-ensure-param-drop-order.rs:60:9: 60:12
        let _8: d::D<'_>;                // in scope 1 at ui/drop/issue-23338-ensure-param-drop-order.rs:61:9: 61:12
        let _9: d::D<'_>;                // in scope 1 at ui/drop/issue-23338-ensure-param-drop-order.rs:62:13: 62:17
        scope 2 {
            debug de4 => _8;             // in scope 2 at ui/drop/issue-23338-ensure-param-drop-order.rs:61:9: 61:12
        }
        scope 3 {
            debug _da1 => _9;            // in scope 3 at ui/drop/issue-23338-ensure-param-drop-order.rs:62:13: 62:17
        }
    }

    bb0: {
        _5 = const "entered foo";        // scope 0 at ui/drop/issue-23338-ensure-param-drop-order.rs:59:16: 59:29
                                         // mir::Constant
                                         // + span: ui/drop/issue-23338-ensure-param-drop-order.rs:59:16: 59:29
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _4 = _5;                         // scope 0 at ui/drop/issue-23338-ensure-param-drop-order.rs:59:16: 59:29
        _3 = println(move _4) -> [return: bb1, unwind: bb24]; // scope 0 at ui/drop/issue-23338-ensure-param-drop-order.rs:59:5: 59:30
                                         // mir::Constant
                                         // + span: ui/drop/issue-23338-ensure-param-drop-order.rs:59:5: 59:15
                                         // + literal: Const { ty: for<'a> fn(&'a str) {println}, val: Value(<ZST>) }
    }

    bb1: {
        _7 = &_2;                        // scope 0 at ui/drop/issue-23338-ensure-param-drop-order.rs:60:15: 60:25
        _6 = D::<'_>::incr(move _7) -> [return: bb2, unwind: bb24]; // scope 0 at ui/drop/issue-23338-ensure-param-drop-order.rs:60:15: 60:25
                                         // mir::Constant
                                         // + span: ui/drop/issue-23338-ensure-param-drop-order.rs:60:19: 60:23
                                         // + literal: Const { ty: for<'a> fn(&'a D<'_>) -> D<'_> {D::<'_>::incr}, val: Value(<ZST>) }
    }

    bb2: {
        _10 = &_1;                       // scope 1 at ui/drop/issue-23338-ensure-param-drop-order.rs:62:20: 62:30
        _9 = D::<'_>::incr(move _10) -> [return: bb3, unwind: bb23]; // scope 1 at ui/drop/issue-23338-ensure-param-drop-order.rs:62:20: 62:30
                                         // mir::Constant
                                         // + span: ui/drop/issue-23338-ensure-param-drop-order.rs:62:24: 62:28
                                         // + literal: Const { ty: for<'a> fn(&'a D<'_>) -> D<'_> {D::<'_>::incr}, val: Value(<ZST>) }
    }

    bb3: {
        _13 = &_6;                       // scope 3 at ui/drop/issue-23338-ensure-param-drop-order.rs:63:9: 63:19
        _12 = D::<'_>::incr(move _13) -> [return: bb4, unwind: bb22]; // scope 3 at ui/drop/issue-23338-ensure-param-drop-order.rs:63:9: 63:19
                                         // mir::Constant
                                         // + span: ui/drop/issue-23338-ensure-param-drop-order.rs:63:13: 63:17
                                         // + literal: Const { ty: for<'a> fn(&'a D<'_>) -> D<'_> {D::<'_>::incr}, val: Value(<ZST>) }
    }

    bb4: {
        _11 = &_12;                      // scope 3 at ui/drop/issue-23338-ensure-param-drop-order.rs:63:9: 63:26
        _8 = D::<'_>::incr(move _11) -> [return: bb5, unwind: bb20]; // scope 3 at ui/drop/issue-23338-ensure-param-drop-order.rs:63:9: 63:26
                                         // mir::Constant
                                         // + span: ui/drop/issue-23338-ensure-param-drop-order.rs:63:20: 63:24
                                         // + literal: Const { ty: for<'a> fn(&'a D<'_>) -> D<'_> {D::<'_>::incr}, val: Value(<ZST>) }
    }

    bb5: {
        drop(_9) -> [return: bb6, unwind: bb21]; // scope 1 at ui/drop/issue-23338-ensure-param-drop-order.rs:64:5: 64:6
    }

    bb6: {
        drop(_12) -> [return: bb7, unwind: bb19]; // scope 1 at ui/drop/issue-23338-ensure-param-drop-order.rs:64:6: 64:7
    }

    bb7: {
        _16 = const "eval tail of foo";  // scope 2 at ui/drop/issue-23338-ensure-param-drop-order.rs:65:16: 65:34
                                         // mir::Constant
                                         // + span: ui/drop/issue-23338-ensure-param-drop-order.rs:65:16: 65:34
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _15 = _16;                       // scope 2 at ui/drop/issue-23338-ensure-param-drop-order.rs:65:16: 65:34
        _14 = println(move _15) -> [return: bb8, unwind: bb19]; // scope 2 at ui/drop/issue-23338-ensure-param-drop-order.rs:65:5: 65:35
                                         // mir::Constant
                                         // + span: ui/drop/issue-23338-ensure-param-drop-order.rs:65:5: 65:15
                                         // + literal: Const { ty: for<'a> fn(&'a str) {println}, val: Value(<ZST>) }
    }

    bb8: {
        _19 = &_8;                       // scope 2 at ui/drop/issue-23338-ensure-param-drop-order.rs:66:5: 66:15
        _18 = D::<'_>::incr(move _19) -> [return: bb9, unwind: bb19]; // scope 2 at ui/drop/issue-23338-ensure-param-drop-order.rs:66:5: 66:15
                                         // mir::Constant
                                         // + span: ui/drop/issue-23338-ensure-param-drop-order.rs:66:9: 66:13
                                         // + literal: Const { ty: for<'a> fn(&'a D<'_>) -> D<'_> {D::<'_>::incr}, val: Value(<ZST>) }
    }

    bb9: {
        _17 = &_18;                      // scope 2 at ui/drop/issue-23338-ensure-param-drop-order.rs:66:5: 66:22
        _0 = D::<'_>::incr(move _17) -> [return: bb10, unwind: bb16]; // scope 2 at ui/drop/issue-23338-ensure-param-drop-order.rs:66:5: 66:22
                                         // mir::Constant
                                         // + span: ui/drop/issue-23338-ensure-param-drop-order.rs:66:16: 66:20
                                         // + literal: Const { ty: for<'a> fn(&'a D<'_>) -> D<'_> {D::<'_>::incr}, val: Value(<ZST>) }
    }

    bb10: {
        drop(_8) -> [return: bb11, unwind: bb17]; // scope 1 at ui/drop/issue-23338-ensure-param-drop-order.rs:67:1: 67:2
    }

    bb11: {
        drop(_6) -> [return: bb12, unwind: bb18]; // scope 0 at ui/drop/issue-23338-ensure-param-drop-order.rs:67:1: 67:2
    }

    bb12: {
        drop(_18) -> [return: bb13, unwind: bb24]; // scope 0 at ui/drop/issue-23338-ensure-param-drop-order.rs:67:1: 67:2
    }

    bb13: {
        drop(_2) -> [return: bb14, unwind: bb25]; // scope 0 at ui/drop/issue-23338-ensure-param-drop-order.rs:67:1: 67:2
    }

    bb14: {
        drop(_1) -> bb15;                // scope 0 at ui/drop/issue-23338-ensure-param-drop-order.rs:67:1: 67:2
    }

    bb15: {
        return;                          // scope 0 at ui/drop/issue-23338-ensure-param-drop-order.rs:67:2: 67:2
    }

    bb16 (cleanup): {
        drop(_8) -> bb17;                // scope 1 at ui/drop/issue-23338-ensure-param-drop-order.rs:67:1: 67:2
    }

    bb17 (cleanup): {
        drop(_6) -> bb18;                // scope 0 at ui/drop/issue-23338-ensure-param-drop-order.rs:67:1: 67:2
    }

    bb18 (cleanup): {
        drop(_18) -> bb24;               // scope 0 at ui/drop/issue-23338-ensure-param-drop-order.rs:67:1: 67:2
    }

    bb19 (cleanup): {
        drop(_8) -> bb23;                // scope 1 at ui/drop/issue-23338-ensure-param-drop-order.rs:67:1: 67:2
    }

    bb20 (cleanup): {
        drop(_9) -> bb21;                // scope 1 at ui/drop/issue-23338-ensure-param-drop-order.rs:64:5: 64:6
    }

    bb21 (cleanup): {
        drop(_12) -> bb23;               // scope 1 at ui/drop/issue-23338-ensure-param-drop-order.rs:64:6: 64:7
    }

    bb22 (cleanup): {
        drop(_9) -> bb23;                // scope 1 at ui/drop/issue-23338-ensure-param-drop-order.rs:64:5: 64:6
    }

    bb23 (cleanup): {
        drop(_6) -> bb24;                // scope 0 at ui/drop/issue-23338-ensure-param-drop-order.rs:67:1: 67:2
    }

    bb24 (cleanup): {
        drop(_2) -> bb25;                // scope 0 at ui/drop/issue-23338-ensure-param-drop-order.rs:67:1: 67:2
    }

    bb25 (cleanup): {
        drop(_1) -> bb26;                // scope 0 at ui/drop/issue-23338-ensure-param-drop-order.rs:67:1: 67:2
    }

    bb26 (cleanup): {
        resume;                          // scope 0 at ui/drop/issue-23338-ensure-param-drop-order.rs:58:1: 67:2
    }
}

const PREF_INDENT: u32 = {
    let mut _0: u32;                     // return place in scope 0 at ui/drop/issue-23338-ensure-param-drop-order.rs:73:20: 73:23

    bb0: {
        _0 = const 16_u32;               // scope 0 at ui/drop/issue-23338-ensure-param-drop-order.rs:73:26: 73:28
        return;                          // scope 0 at ui/drop/issue-23338-ensure-param-drop-order.rs:73:1: 73:29
    }
}

static mut counter: u32 = {
    let mut _0: u32;                     // return place in scope 0 at ui/drop/issue-23338-ensure-param-drop-order.rs:81:25: 81:28

    bb0: {
        _0 = const 0_u32;                // scope 0 at ui/drop/issue-23338-ensure-param-drop-order.rs:81:31: 81:32
        return;                          // scope 0 at ui/drop/issue-23338-ensure-param-drop-order.rs:81:5: 81:33
    }
}

static mut trails: u64 = {
    let mut _0: u64;                     // return place in scope 0 at ui/drop/issue-23338-ensure-param-drop-order.rs:82:24: 82:27

    bb0: {
        _0 = const 0_u64;                // scope 0 at ui/drop/issue-23338-ensure-param-drop-order.rs:82:30: 82:31
        return;                          // scope 0 at ui/drop/issue-23338-ensure-param-drop-order.rs:82:5: 82:32
    }
}

fn current_width() -> u32 {
    let mut _0: u32;                     // return place in scope 0 at ui/drop/issue-23338-ensure-param-drop-order.rs:86:31: 86:34
    let mut _1: u32;                     // in scope 0 at ui/drop/issue-23338-ensure-param-drop-order.rs:87:18: 87:29
    let mut _2: u32;                     // in scope 0 at ui/drop/issue-23338-ensure-param-drop-order.rs:87:32: 87:54
    let mut _3: u64;                     // in scope 0 at ui/drop/issue-23338-ensure-param-drop-order.rs:87:32: 87:38
    let mut _4: *mut u64;                // in scope 0 at ui/drop/issue-23338-ensure-param-drop-order.rs:87:32: 87:38
    let mut _5: (u32, bool);             // in scope 0 at ui/drop/issue-23338-ensure-param-drop-order.rs:87:18: 87:54
    scope 1 {
    }

    bb0: {
        _1 = max_width() -> bb1;         // scope 1 at ui/drop/issue-23338-ensure-param-drop-order.rs:87:18: 87:29
                                         // mir::Constant
                                         // + span: ui/drop/issue-23338-ensure-param-drop-order.rs:87:18: 87:27
                                         // + literal: Const { ty: fn() -> u32 {max_width}, val: Value(<ZST>) }
    }

    bb1: {
        _4 = const {alloc1: *mut u64};   // scope 1 at ui/drop/issue-23338-ensure-param-drop-order.rs:87:32: 87:38
                                         // mir::Constant
                                         // + span: ui/drop/issue-23338-ensure-param-drop-order.rs:87:32: 87:38
                                         // + literal: Const { ty: *mut u64, val: Value(Scalar(alloc1)) }
        _3 = (*_4);                      // scope 1 at ui/drop/issue-23338-ensure-param-drop-order.rs:87:32: 87:38
        _2 = core::num::<impl u64>::leading_zeros(move _3) -> bb2; // scope 1 at ui/drop/issue-23338-ensure-param-drop-order.rs:87:32: 87:54
                                         // mir::Constant
                                         // + span: ui/drop/issue-23338-ensure-param-drop-order.rs:87:39: 87:52
                                         // + literal: Const { ty: fn(u64) -> u32 {core::num::<impl u64>::leading_zeros}, val: Value(<ZST>) }
    }

    bb2: {
        _5 = CheckedSub(_1, _2);         // scope 1 at ui/drop/issue-23338-ensure-param-drop-order.rs:87:18: 87:54
        assert(!move (_5.1: bool), "attempt to compute `{} - {}`, which would overflow", move _1, move _2) -> bb3; // scope 1 at ui/drop/issue-23338-ensure-param-drop-order.rs:87:18: 87:54
    }

    bb3: {
        _0 = move (_5.0: u32);           // scope 1 at ui/drop/issue-23338-ensure-param-drop-order.rs:87:18: 87:54
        return;                          // scope 0 at ui/drop/issue-23338-ensure-param-drop-order.rs:88:6: 88:6
    }
}

alloc1 (static: trails, size: 8, align: 8) {
    00 00 00 00 00 00 00 00                         │ ........
}

fn max_width() -> u32 {
    let mut _0: u32;                     // return place in scope 0 at ui/drop/issue-23338-ensure-param-drop-order.rs:90:27: 90:30
    let mut _1: usize;                   // in scope 0 at ui/drop/issue-23338-ensure-param-drop-order.rs:92:13: 92:42
    let mut _2: usize;                   // in scope 0 at ui/drop/issue-23338-ensure-param-drop-order.rs:92:14: 92:39
    let mut _3: &u64;                    // in scope 0 at ui/drop/issue-23338-ensure-param-drop-order.rs:92:31: 92:38
    let _4: &u64;                        // in scope 0 at ui/drop/issue-23338-ensure-param-drop-order.rs:92:31: 92:38
    let _5: *mut u64;                    // in scope 0 at ui/drop/issue-23338-ensure-param-drop-order.rs:92:32: 92:38
    let mut _6: (usize, bool);           // in scope 0 at ui/drop/issue-23338-ensure-param-drop-order.rs:92:13: 92:42
    scope 1 {
    }

    bb0: {
        _5 = const {alloc1: *mut u64};   // scope 1 at ui/drop/issue-23338-ensure-param-drop-order.rs:92:32: 92:38
                                         // mir::Constant
                                         // + span: ui/drop/issue-23338-ensure-param-drop-order.rs:92:32: 92:38
                                         // + literal: Const { ty: *mut u64, val: Value(Scalar(alloc1)) }
        _4 = &(*_5);                     // scope 1 at ui/drop/issue-23338-ensure-param-drop-order.rs:92:31: 92:38
        _3 = _4;                         // scope 1 at ui/drop/issue-23338-ensure-param-drop-order.rs:92:31: 92:38
        _2 = std::mem::size_of_val::<u64>(move _3) -> bb1; // scope 1 at ui/drop/issue-23338-ensure-param-drop-order.rs:92:14: 92:39
                                         // mir::Constant
                                         // + span: ui/drop/issue-23338-ensure-param-drop-order.rs:92:14: 92:30
                                         // + literal: Const { ty: for<'a> fn(&'a u64) -> usize {std::mem::size_of_val::<u64>}, val: Value(<ZST>) }
    }

    bb1: {
        _6 = CheckedMul(_2, const 8_usize); // scope 1 at ui/drop/issue-23338-ensure-param-drop-order.rs:92:13: 92:42
        assert(!move (_6.1: bool), "attempt to compute `{} * {}`, which would overflow", move _2, const 8_usize) -> bb2; // scope 1 at ui/drop/issue-23338-ensure-param-drop-order.rs:92:13: 92:42
    }

    bb2: {
        _1 = move (_6.0: usize);         // scope 1 at ui/drop/issue-23338-ensure-param-drop-order.rs:92:13: 92:42
        _0 = move _1 as u32 (IntToInt);  // scope 1 at ui/drop/issue-23338-ensure-param-drop-order.rs:92:13: 92:49
        return;                          // scope 0 at ui/drop/issue-23338-ensure-param-drop-order.rs:94:6: 94:6
    }
}

alloc1 (static: trails, size: 8, align: 8) {
    00 00 00 00 00 00 00 00                         │ ........
}

fn indent_println(_1: u32, _2: &str) -> () {
    debug my_trails => _1;               // in scope 0 at ui/drop/issue-23338-ensure-param-drop-order.rs:96:27: 96:36
    debug s => _2;                       // in scope 0 at ui/drop/issue-23338-ensure-param-drop-order.rs:96:43: 96:44
    let mut _0: ();                      // return place in scope 0 at ui/drop/issue-23338-ensure-param-drop-order.rs:96:52: 96:52
    let mut _3: std::string::String;     // in scope 0 at ui/drop/issue-23338-ensure-param-drop-order.rs:97:13: 97:23
    let mut _4: std::ops::Range<u32>;    // in scope 0 at ui/drop/issue-23338-ensure-param-drop-order.rs:98:18: 98:30
    let mut _5: std::ops::Range<u32>;    // in scope 0 at ui/drop/issue-23338-ensure-param-drop-order.rs:98:18: 98:30
    let mut _6: u32;                     // in scope 0 at ui/drop/issue-23338-ensure-param-drop-order.rs:98:21: 98:30
    let mut _8: std::option::Option<u32>; // in scope 0 at ui/drop/issue-23338-ensure-param-drop-order.rs:98:18: 98:30
    let mut _9: &mut std::ops::Range<u32>; // in scope 0 at ui/drop/issue-23338-ensure-param-drop-order.rs:98:18: 98:30
    let mut _10: &mut std::ops::Range<u32>; // in scope 0 at ui/drop/issue-23338-ensure-param-drop-order.rs:98:18: 98:30
    let mut _11: isize;                  // in scope 0 at ui/drop/issue-23338-ensure-param-drop-order.rs:98:9: 106:10
    let mut _13: u64;                    // in scope 0 at ui/drop/issue-23338-ensure-param-drop-order.rs:100:20: 100:37
    let mut _14: u64;                    // in scope 0 at ui/drop/issue-23338-ensure-param-drop-order.rs:100:20: 100:26
    let mut _15: *mut u64;               // in scope 0 at ui/drop/issue-23338-ensure-param-drop-order.rs:100:20: 100:26
    let mut _16: u64;                    // in scope 0 at ui/drop/issue-23338-ensure-param-drop-order.rs:100:29: 100:37
    let mut _17: u32;                    // in scope 0 at ui/drop/issue-23338-ensure-param-drop-order.rs:100:35: 100:36
    let mut _18: (u64, bool);            // in scope 0 at ui/drop/issue-23338-ensure-param-drop-order.rs:100:29: 100:37
    let mut _19: std::string::String;    // in scope 0 at ui/drop/issue-23338-ensure-param-drop-order.rs:101:30: 101:43
    let mut _20: std::string::String;    // in scope 0 at ui/drop/issue-23338-ensure-param-drop-order.rs:101:30: 101:36
    let mut _21: &str;                   // in scope 0 at ui/drop/issue-23338-ensure-param-drop-order.rs:101:39: 101:43
    let _22: &str;                       // in scope 0 at ui/drop/issue-23338-ensure-param-drop-order.rs:101:39: 101:43
    let mut _23: std::string::String;    // in scope 0 at ui/drop/issue-23338-ensure-param-drop-order.rs:103:30: 103:43
    let mut _24: std::string::String;    // in scope 0 at ui/drop/issue-23338-ensure-param-drop-order.rs:103:30: 103:36
    let mut _25: &str;                   // in scope 0 at ui/drop/issue-23338-ensure-param-drop-order.rs:103:39: 103:43
    let _26: &str;                       // in scope 0 at ui/drop/issue-23338-ensure-param-drop-order.rs:103:39: 103:43
    let _27: ();                         // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:62
    let mut _28: std::fmt::Arguments<'_>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _29: &[&str];                // in scope 0 at ui/drop/issue-23338-ensure-param-drop-order.rs:107:18: 107:24
    let mut _30: &[&str; 3];             // in scope 0 at ui/drop/issue-23338-ensure-param-drop-order.rs:107:18: 107:24
    let _31: &[&str; 3];                 // in scope 0 at ui/drop/issue-23338-ensure-param-drop-order.rs:107:18: 107:24
    let mut _32: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _33: &[core::fmt::ArgumentV1<'_>; 2]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let _34: &[core::fmt::ArgumentV1<'_>; 2]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let _35: [core::fmt::ArgumentV1<'_>; 2]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _36: core::fmt::ArgumentV1<'_>; // in scope 0 at ui/drop/issue-23338-ensure-param-drop-order.rs:107:26: 107:32
    let mut _37: &std::string::String;   // in scope 0 at ui/drop/issue-23338-ensure-param-drop-order.rs:107:26: 107:32
    let _38: &std::string::String;       // in scope 0 at ui/drop/issue-23338-ensure-param-drop-order.rs:107:26: 107:32
    let mut _39: core::fmt::ArgumentV1<'_>; // in scope 0 at ui/drop/issue-23338-ensure-param-drop-order.rs:107:34: 107:35
    let mut _40: &&str;                  // in scope 0 at ui/drop/issue-23338-ensure-param-drop-order.rs:107:34: 107:35
    let _41: &&str;                      // in scope 0 at ui/drop/issue-23338-ensure-param-drop-order.rs:107:34: 107:35
    let mut _43: bool;                   // in scope 0 at ui/drop/issue-23338-ensure-param-drop-order.rs:108:5: 108:6
    scope 1 {
        debug indent => _3;              // in scope 1 at ui/drop/issue-23338-ensure-param-drop-order.rs:97:13: 97:23
        let mut _7: std::ops::Range<u32>; // in scope 1 at ui/drop/issue-23338-ensure-param-drop-order.rs:98:18: 98:30
        let mut _42: &[&str; 3];         // in scope 1 at ui/drop/issue-23338-ensure-param-drop-order.rs:107:18: 107:24
        scope 2 {
            debug iter => _7;            // in scope 2 at ui/drop/issue-23338-ensure-param-drop-order.rs:98:18: 98:30
            let _12: u32;                // in scope 2 at ui/drop/issue-23338-ensure-param-drop-order.rs:98:13: 98:14
            scope 3 {
                debug i => _12;          // in scope 3 at ui/drop/issue-23338-ensure-param-drop-order.rs:98:13: 98:14
                scope 4 {
                }
            }
        }
    }

    bb0: {
        _43 = const false;               // scope 0 at ui/drop/issue-23338-ensure-param-drop-order.rs:97:13: 97:23
        _43 = const true;                // scope 0 at ui/drop/issue-23338-ensure-param-drop-order.rs:97:34: 97:47
        _3 = String::new() -> bb1;       // scope 0 at ui/drop/issue-23338-ensure-param-drop-order.rs:97:34: 97:47
                                         // mir::Constant
                                         // + span: ui/drop/issue-23338-ensure-param-drop-order.rs:97:34: 97:45
                                         // + literal: Const { ty: fn() -> String {String::new}, val: Value(<ZST>) }
    }

    bb1: {
        _6 = _1;                         // scope 1 at ui/drop/issue-23338-ensure-param-drop-order.rs:98:21: 98:30
        _5 = std::ops::Range::<u32> { start: const 0_u32, end: move _6 }; // scope 1 at ui/drop/issue-23338-ensure-param-drop-order.rs:98:18: 98:30
        _4 = <std::ops::Range<u32> as IntoIterator>::into_iter(move _5) -> [return: bb2, unwind: bb20]; // scope 1 at ui/drop/issue-23338-ensure-param-drop-order.rs:98:18: 98:30
                                         // mir::Constant
                                         // + span: ui/drop/issue-23338-ensure-param-drop-order.rs:98:18: 98:30
                                         // + literal: Const { ty: fn(std::ops::Range<u32>) -> <std::ops::Range<u32> as IntoIterator>::IntoIter {<std::ops::Range<u32> as IntoIterator>::into_iter}, val: Value(<ZST>) }
    }

    bb2: {
        _7 = move _4;                    // scope 1 at ui/drop/issue-23338-ensure-param-drop-order.rs:98:18: 98:30
        goto -> bb3;                     // scope 2 at ui/drop/issue-23338-ensure-param-drop-order.rs:98:9: 106:10
    }

    bb3: {
        _10 = &mut _7;                   // scope 2 at ui/drop/issue-23338-ensure-param-drop-order.rs:98:18: 98:30
        _9 = &mut (*_10);                // scope 2 at ui/drop/issue-23338-ensure-param-drop-order.rs:98:18: 98:30
        _8 = <std::ops::Range<u32> as Iterator>::next(move _9) -> [return: bb4, unwind: bb20]; // scope 2 at ui/drop/issue-23338-ensure-param-drop-order.rs:98:18: 98:30
                                         // mir::Constant
                                         // + span: ui/drop/issue-23338-ensure-param-drop-order.rs:98:18: 98:30
                                         // + literal: Const { ty: for<'a> fn(&'a mut std::ops::Range<u32>) -> Option<<std::ops::Range<u32> as Iterator>::Item> {<std::ops::Range<u32> as Iterator>::next}, val: Value(<ZST>) }
    }

    bb4: {
        _11 = discriminant(_8);          // scope 2 at ui/drop/issue-23338-ensure-param-drop-order.rs:98:18: 98:30
        switchInt(move _11) -> [0: bb7, 1: bb5, otherwise: bb6]; // scope 2 at ui/drop/issue-23338-ensure-param-drop-order.rs:98:18: 98:30
    }

    bb5: {
        _12 = ((_8 as Some).0: u32);     // scope 2 at ui/drop/issue-23338-ensure-param-drop-order.rs:98:13: 98:14
        _15 = const {alloc1: *mut u64};  // scope 4 at ui/drop/issue-23338-ensure-param-drop-order.rs:100:20: 100:26
                                         // mir::Constant
                                         // + span: ui/drop/issue-23338-ensure-param-drop-order.rs:100:20: 100:26
                                         // + literal: Const { ty: *mut u64, val: Value(Scalar(alloc1)) }
        _14 = (*_15);                    // scope 4 at ui/drop/issue-23338-ensure-param-drop-order.rs:100:20: 100:26
        _17 = _12;                       // scope 4 at ui/drop/issue-23338-ensure-param-drop-order.rs:100:35: 100:36
        _18 = CheckedShl(const 1_u64, _17); // scope 4 at ui/drop/issue-23338-ensure-param-drop-order.rs:100:29: 100:37
        assert(!move (_18.1: bool), "attempt to shift left by `{}`, which would overflow", move _17) -> [success: bb8, unwind: bb20]; // scope 4 at ui/drop/issue-23338-ensure-param-drop-order.rs:100:29: 100:37
    }

    bb6: {
        unreachable;                     // scope 2 at ui/drop/issue-23338-ensure-param-drop-order.rs:98:18: 98:30
    }

    bb7: {
        _42 = const _;                   // scope 1 at ui/drop/issue-23338-ensure-param-drop-order.rs:107:18: 107:24
                                         // mir::Constant
                                         // + span: ui/drop/issue-23338-ensure-param-drop-order.rs:107:18: 107:24
                                         // + literal: Const { ty: &[&str; 3], val: Unevaluated(indent_println, [], Some(promoted[0])) }
        _31 = _42;                       // scope 1 at ui/drop/issue-23338-ensure-param-drop-order.rs:107:18: 107:24
        _30 = _31;                       // scope 1 at ui/drop/issue-23338-ensure-param-drop-order.rs:107:18: 107:24
        _29 = move _30 as &[&str] (Pointer(Unsize)); // scope 1 at ui/drop/issue-23338-ensure-param-drop-order.rs:107:18: 107:24
        _38 = &_3;                       // scope 1 at ui/drop/issue-23338-ensure-param-drop-order.rs:107:26: 107:32
        _37 = _38;                       // scope 1 at ui/drop/issue-23338-ensure-param-drop-order.rs:107:26: 107:32
        _36 = core::fmt::ArgumentV1::<'_>::new_display::<String>(move _37) -> [return: bb13, unwind: bb20]; // scope 1 at ui/drop/issue-23338-ensure-param-drop-order.rs:107:26: 107:32
                                         // mir::Constant
                                         // + span: ui/drop/issue-23338-ensure-param-drop-order.rs:107:26: 107:32
                                         // + user_ty: UserType(3)
                                         // + literal: Const { ty: for<'b> fn(&'b String) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_display::<String>}, val: Value(<ZST>) }
    }

    bb8: {
        _16 = move (_18.0: u64);         // scope 4 at ui/drop/issue-23338-ensure-param-drop-order.rs:100:29: 100:37
        _13 = BitAnd(move _14, move _16); // scope 4 at ui/drop/issue-23338-ensure-param-drop-order.rs:100:20: 100:37
        switchInt(move _13) -> [0: bb11, otherwise: bb9]; // scope 4 at ui/drop/issue-23338-ensure-param-drop-order.rs:100:20: 100:42
    }

    bb9: {
        _43 = const false;               // scope 4 at ui/drop/issue-23338-ensure-param-drop-order.rs:101:30: 101:36
        _20 = move _3;                   // scope 4 at ui/drop/issue-23338-ensure-param-drop-order.rs:101:30: 101:36
        _22 = const "| ";                // scope 4 at ui/drop/issue-23338-ensure-param-drop-order.rs:101:39: 101:43
                                         // mir::Constant
                                         // + span: ui/drop/issue-23338-ensure-param-drop-order.rs:101:39: 101:43
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _21 = _22;                       // scope 4 at ui/drop/issue-23338-ensure-param-drop-order.rs:101:39: 101:43
        _19 = <String as Add<&str>>::add(move _20, move _21) -> [return: bb10, unwind: bb20]; // scope 4 at ui/drop/issue-23338-ensure-param-drop-order.rs:101:30: 101:43
                                         // mir::Constant
                                         // + span: ui/drop/issue-23338-ensure-param-drop-order.rs:101:30: 101:43
                                         // + literal: Const { ty: fn(String, &str) -> <String as Add<&str>>::Output {<String as Add<&str>>::add}, val: Value(<ZST>) }
    }

    bb10: {
        _43 = const true;                // scope 4 at ui/drop/issue-23338-ensure-param-drop-order.rs:101:21: 101:27
        _3 = move _19;                   // scope 4 at ui/drop/issue-23338-ensure-param-drop-order.rs:101:21: 101:27
        goto -> bb3;                     // scope 4 at ui/drop/issue-23338-ensure-param-drop-order.rs:100:17: 104:18
    }

    bb11: {
        _43 = const false;               // scope 4 at ui/drop/issue-23338-ensure-param-drop-order.rs:103:30: 103:36
        _24 = move _3;                   // scope 4 at ui/drop/issue-23338-ensure-param-drop-order.rs:103:30: 103:36
        _26 = const "  ";                // scope 4 at ui/drop/issue-23338-ensure-param-drop-order.rs:103:39: 103:43
                                         // mir::Constant
                                         // + span: ui/drop/issue-23338-ensure-param-drop-order.rs:103:39: 103:43
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _25 = _26;                       // scope 4 at ui/drop/issue-23338-ensure-param-drop-order.rs:103:39: 103:43
        _23 = <String as Add<&str>>::add(move _24, move _25) -> [return: bb12, unwind: bb20]; // scope 4 at ui/drop/issue-23338-ensure-param-drop-order.rs:103:30: 103:43
                                         // mir::Constant
                                         // + span: ui/drop/issue-23338-ensure-param-drop-order.rs:103:30: 103:43
                                         // + literal: Const { ty: fn(String, &str) -> <String as Add<&str>>::Output {<String as Add<&str>>::add}, val: Value(<ZST>) }
    }

    bb12: {
        _43 = const true;                // scope 4 at ui/drop/issue-23338-ensure-param-drop-order.rs:103:21: 103:27
        _3 = move _23;                   // scope 4 at ui/drop/issue-23338-ensure-param-drop-order.rs:103:21: 103:27
        goto -> bb3;                     // scope 4 at ui/drop/issue-23338-ensure-param-drop-order.rs:100:17: 104:18
    }

    bb13: {
        _41 = &_2;                       // scope 1 at ui/drop/issue-23338-ensure-param-drop-order.rs:107:34: 107:35
        _40 = _41;                       // scope 1 at ui/drop/issue-23338-ensure-param-drop-order.rs:107:34: 107:35
        _39 = core::fmt::ArgumentV1::<'_>::new_display::<&str>(move _40) -> [return: bb14, unwind: bb20]; // scope 1 at ui/drop/issue-23338-ensure-param-drop-order.rs:107:34: 107:35
                                         // mir::Constant
                                         // + span: ui/drop/issue-23338-ensure-param-drop-order.rs:107:34: 107:35
                                         // + user_ty: UserType(4)
                                         // + literal: Const { ty: for<'b> fn(&'b &str) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_display::<&str>}, val: Value(<ZST>) }
    }

    bb14: {
        _35 = [move _36, move _39];      // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _34 = &_35;                      // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _33 = _34;                       // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _32 = move _33 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _28 = Arguments::<'_>::new_v1(move _29, move _32) -> [return: bb15, unwind: bb20]; // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // + user_ty: UserType(2)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb15: {
        _27 = _print(move _28) -> [return: bb16, unwind: bb20]; // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:62
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:27
                                         // + literal: Const { ty: for<'a> fn(Arguments<'a>) {_print}, val: Value(<ZST>) }
    }

    bb16: {
        drop(_3) -> bb17;                // scope 0 at ui/drop/issue-23338-ensure-param-drop-order.rs:108:5: 108:6
    }

    bb17: {
        _43 = const false;               // scope 0 at ui/drop/issue-23338-ensure-param-drop-order.rs:108:5: 108:6
        return;                          // scope 0 at ui/drop/issue-23338-ensure-param-drop-order.rs:108:6: 108:6
    }

    bb18 (cleanup): {
        resume;                          // scope 0 at ui/drop/issue-23338-ensure-param-drop-order.rs:96:5: 108:6
    }

    bb19 (cleanup): {
        drop(_3) -> bb18;                // scope 0 at ui/drop/issue-23338-ensure-param-drop-order.rs:108:5: 108:6
    }

    bb20 (cleanup): {
        switchInt(_43) -> [0: bb18, otherwise: bb19]; // scope 0 at ui/drop/issue-23338-ensure-param-drop-order.rs:108:5: 108:6
    }
}

alloc1 (static: trails, size: 8, align: 8) {
    00 00 00 00 00 00 00 00                         │ ........
}

promoted[0] in indent_println: &[&str; 3] = {
    let mut _0: &[&str; 3];              // return place in scope 0 at ui/drop/issue-23338-ensure-param-drop-order.rs:107:18: 107:24
    let mut _1: [&str; 3];               // in scope 0 at ui/drop/issue-23338-ensure-param-drop-order.rs:107:18: 107:24

    bb0: {
        _1 = [const "", const "", const "\n"]; // scope 0 at ui/drop/issue-23338-ensure-param-drop-order.rs:107:18: 107:24
                                         // mir::Constant
                                         // + span: ui/drop/issue-23338-ensure-param-drop-order.rs:107:18: 107:24
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
                                         // mir::Constant
                                         // + span: ui/drop/issue-23338-ensure-param-drop-order.rs:107:18: 107:24
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
                                         // mir::Constant
                                         // + span: ui/drop/issue-23338-ensure-param-drop-order.rs:107:18: 107:24
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at ui/drop/issue-23338-ensure-param-drop-order.rs:107:18: 107:24
        return;                          // scope 0 at ui/drop/issue-23338-ensure-param-drop-order.rs:107:18: 107:24
    }
}

fn println(_1: &str) -> () {
    debug s => _1;                       // in scope 0 at ui/drop/issue-23338-ensure-param-drop-order.rs:110:20: 110:21
    let mut _0: ();                      // return place in scope 0 at ui/drop/issue-23338-ensure-param-drop-order.rs:110:29: 110:29
    let _2: ();                          // in scope 0 at ui/drop/issue-23338-ensure-param-drop-order.rs:111:9: 111:46
    let mut _3: &str;                    // in scope 0 at ui/drop/issue-23338-ensure-param-drop-order.rs:111:44: 111:45

    bb0: {
        _3 = _1;                         // scope 0 at ui/drop/issue-23338-ensure-param-drop-order.rs:111:44: 111:45
        _2 = indent_println(const _, move _3) -> bb1; // scope 0 at ui/drop/issue-23338-ensure-param-drop-order.rs:111:9: 111:46
                                         // mir::Constant
                                         // + span: ui/drop/issue-23338-ensure-param-drop-order.rs:111:9: 111:23
                                         // + literal: Const { ty: for<'a> fn(u32, &'a str) {indent_println}, val: Value(<ZST>) }
    }

    bb1: {
        return;                          // scope 0 at ui/drop/issue-23338-ensure-param-drop-order.rs:112:6: 112:6
    }
}

fn first_avail() -> u32 {
    let mut _1: std::ops::Range<u32>;    // in scope 0 at ui/drop/issue-23338-ensure-param-drop-order.rs:116:22: 116:27
    let mut _2: std::ops::Range<u32>;    // in scope 0 at ui/drop/issue-23338-ensure-param-drop-order.rs:116:22: 116:27
    let mut _4: std::option::Option<u32>; // in scope 0 at ui/drop/issue-23338-ensure-param-drop-order.rs:116:22: 116:27
    let mut _5: &mut std::ops::Range<u32>; // in scope 0 at ui/drop/issue-23338-ensure-param-drop-order.rs:116:22: 116:27
    let mut _6: &mut std::ops::Range<u32>; // in scope 0 at ui/drop/issue-23338-ensure-param-drop-order.rs:116:22: 116:27
    let mut _7: isize;                   // in scope 0 at ui/drop/issue-23338-ensure-param-drop-order.rs:116:13: 120:14
    let mut _8: u64;                     // in scope 0 at ui/drop/issue-23338-ensure-param-drop-order.rs:117:20: 117:37
    let mut _9: u64;                     // in scope 0 at ui/drop/issue-23338-ensure-param-drop-order.rs:117:20: 117:26
    let mut _10: *mut u64;               // in scope 0 at ui/drop/issue-23338-ensure-param-drop-order.rs:117:20: 117:26
    let mut _11: u64;                    // in scope 0 at ui/drop/issue-23338-ensure-param-drop-order.rs:117:29: 117:37
    let mut _12: u32;                    // in scope 0 at ui/drop/issue-23338-ensure-param-drop-order.rs:117:35: 117:36
    let mut _13: (u64, bool);            // in scope 0 at ui/drop/issue-23338-ensure-param-drop-order.rs:117:29: 117:37
    let mut _14: !;                      // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/panic.rs:22:9: 22:38
    scope 1 {
        let mut _3: std::ops::Range<u32>; // in scope 1 at ui/drop/issue-23338-ensure-param-drop-order.rs:116:22: 116:27
        scope 2 {
            debug iter => _3;            // in scope 2 at ui/drop/issue-23338-ensure-param-drop-order.rs:116:22: 116:27
            let mut _0: u32;             // return place in scope 2 at ui/drop/issue-23338-ensure-param-drop-order.rs:116:17: 116:18
            scope 3 {
                debug i => _0;           // in scope 3 at ui/drop/issue-23338-ensure-param-drop-order.rs:116:17: 116:18
            }
        }
    }

    bb0: {
        _2 = std::ops::Range::<u32> { start: const 0_u32, end: const 64_u32 }; // scope 1 at ui/drop/issue-23338-ensure-param-drop-order.rs:116:22: 116:27
        _1 = <std::ops::Range<u32> as IntoIterator>::into_iter(move _2) -> bb1; // scope 1 at ui/drop/issue-23338-ensure-param-drop-order.rs:116:22: 116:27
                                         // mir::Constant
                                         // + span: ui/drop/issue-23338-ensure-param-drop-order.rs:116:22: 116:27
                                         // + literal: Const { ty: fn(std::ops::Range<u32>) -> <std::ops::Range<u32> as IntoIterator>::IntoIter {<std::ops::Range<u32> as IntoIterator>::into_iter}, val: Value(<ZST>) }
    }

    bb1: {
        _3 = move _1;                    // scope 1 at ui/drop/issue-23338-ensure-param-drop-order.rs:116:22: 116:27
        goto -> bb2;                     // scope 2 at ui/drop/issue-23338-ensure-param-drop-order.rs:116:13: 120:14
    }

    bb2: {
        _6 = &mut _3;                    // scope 2 at ui/drop/issue-23338-ensure-param-drop-order.rs:116:22: 116:27
        _5 = &mut (*_6);                 // scope 2 at ui/drop/issue-23338-ensure-param-drop-order.rs:116:22: 116:27
        _4 = <std::ops::Range<u32> as Iterator>::next(move _5) -> bb3; // scope 2 at ui/drop/issue-23338-ensure-param-drop-order.rs:116:22: 116:27
                                         // mir::Constant
                                         // + span: ui/drop/issue-23338-ensure-param-drop-order.rs:116:22: 116:27
                                         // + literal: Const { ty: for<'a> fn(&'a mut std::ops::Range<u32>) -> Option<<std::ops::Range<u32> as Iterator>::Item> {<std::ops::Range<u32> as Iterator>::next}, val: Value(<ZST>) }
    }

    bb3: {
        _7 = discriminant(_4);           // scope 2 at ui/drop/issue-23338-ensure-param-drop-order.rs:116:22: 116:27
        switchInt(move _7) -> [0: bb6, 1: bb4, otherwise: bb5]; // scope 2 at ui/drop/issue-23338-ensure-param-drop-order.rs:116:22: 116:27
    }

    bb4: {
        _0 = ((_4 as Some).0: u32);      // scope 2 at ui/drop/issue-23338-ensure-param-drop-order.rs:116:17: 116:18
        _10 = const {alloc1: *mut u64};  // scope 3 at ui/drop/issue-23338-ensure-param-drop-order.rs:117:20: 117:26
                                         // mir::Constant
                                         // + span: ui/drop/issue-23338-ensure-param-drop-order.rs:117:20: 117:26
                                         // + literal: Const { ty: *mut u64, val: Value(Scalar(alloc1)) }
        _9 = (*_10);                     // scope 3 at ui/drop/issue-23338-ensure-param-drop-order.rs:117:20: 117:26
        _12 = _0;                        // scope 3 at ui/drop/issue-23338-ensure-param-drop-order.rs:117:35: 117:36
        _13 = CheckedShl(const 1_u64, _12); // scope 3 at ui/drop/issue-23338-ensure-param-drop-order.rs:117:29: 117:37
        assert(!move (_13.1: bool), "attempt to shift left by `{}`, which would overflow", move _12) -> bb7; // scope 3 at ui/drop/issue-23338-ensure-param-drop-order.rs:117:29: 117:37
    }

    bb5: {
        unreachable;                     // scope 2 at ui/drop/issue-23338-ensure-param-drop-order.rs:116:22: 116:27
    }

    bb6: {
        _14 = begin_panic::<&str>(const "exhausted trails"); // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/panic.rs:22:9: 22:38
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/panic.rs:22:9: 22:32
                                         // + literal: Const { ty: fn(&str) -> ! {begin_panic::<&str>}, val: Value(<ZST>) }
                                         // mir::Constant
                                         // + span: ui/drop/issue-23338-ensure-param-drop-order.rs:122:16: 122:34
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
    }

    bb7: {
        _11 = move (_13.0: u64);         // scope 3 at ui/drop/issue-23338-ensure-param-drop-order.rs:117:29: 117:37
        _8 = BitAnd(move _9, move _11);  // scope 3 at ui/drop/issue-23338-ensure-param-drop-order.rs:117:20: 117:37
        switchInt(move _8) -> [0: bb8, otherwise: bb2]; // scope 3 at ui/drop/issue-23338-ensure-param-drop-order.rs:117:20: 117:42
    }

    bb8: {
        return;                          // scope 0 at ui/drop/issue-23338-ensure-param-drop-order.rs:123:6: 123:6
    }
}

alloc1 (static: trails, size: 8, align: 8) {
    00 00 00 00 00 00 00 00                         │ ........
}

fn d::<impl at ui/drop/issue-23338-ensure-param-drop-order.rs:129:5: 129:36>::fmt(_1: &D<'_>, _2: &mut Formatter<'_>) -> Result<(), std::fmt::Error> {
    debug self => _1;                    // in scope 0 at ui/drop/issue-23338-ensure-param-drop-order.rs:130:16: 130:21
    debug w => _2;                       // in scope 0 at ui/drop/issue-23338-ensure-param-drop-order.rs:130:23: 130:24
    let mut _0: std::result::Result<(), std::fmt::Error>; // return place in scope 0 at ui/drop/issue-23338-ensure-param-drop-order.rs:130:50: 130:61
    let mut _3: &mut std::fmt::Formatter<'_>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:520:9: 520:55
    let mut _4: std::fmt::Arguments<'_>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:520:24: 520:54
    let mut _5: &[&str];                 // in scope 0 at ui/drop/issue-23338-ensure-param-drop-order.rs:131:23: 131:37
    let mut _6: &[&str; 4];              // in scope 0 at ui/drop/issue-23338-ensure-param-drop-order.rs:131:23: 131:37
    let _7: &[&str; 4];                  // in scope 0 at ui/drop/issue-23338-ensure-param-drop-order.rs:131:23: 131:37
    let mut _8: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:520:24: 520:54
    let mut _9: &[core::fmt::ArgumentV1<'_>; 3]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:520:24: 520:54
    let _10: &[core::fmt::ArgumentV1<'_>; 3]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:520:24: 520:54
    let _11: [core::fmt::ArgumentV1<'_>; 3]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:520:24: 520:54
    let mut _12: core::fmt::ArgumentV1<'_>; // in scope 0 at ui/drop/issue-23338-ensure-param-drop-order.rs:131:39: 131:48
    let mut _13: &&str;                  // in scope 0 at ui/drop/issue-23338-ensure-param-drop-order.rs:131:39: 131:48
    let _14: &&str;                      // in scope 0 at ui/drop/issue-23338-ensure-param-drop-order.rs:131:39: 131:48
    let mut _15: core::fmt::ArgumentV1<'_>; // in scope 0 at ui/drop/issue-23338-ensure-param-drop-order.rs:131:50: 131:56
    let mut _16: &u32;                   // in scope 0 at ui/drop/issue-23338-ensure-param-drop-order.rs:131:50: 131:56
    let _17: &u32;                       // in scope 0 at ui/drop/issue-23338-ensure-param-drop-order.rs:131:50: 131:56
    let mut _18: core::fmt::ArgumentV1<'_>; // in scope 0 at ui/drop/issue-23338-ensure-param-drop-order.rs:131:58: 131:66
    let mut _19: &u32;                   // in scope 0 at ui/drop/issue-23338-ensure-param-drop-order.rs:131:58: 131:66
    let _20: &u32;                       // in scope 0 at ui/drop/issue-23338-ensure-param-drop-order.rs:131:58: 131:66
    let mut _21: &[&str; 4];             // in scope 0 at ui/drop/issue-23338-ensure-param-drop-order.rs:131:23: 131:37

    bb0: {
        _3 = &mut (*_2);                 // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:520:9: 520:55
        _21 = const _;                   // scope 0 at ui/drop/issue-23338-ensure-param-drop-order.rs:131:23: 131:37
                                         // mir::Constant
                                         // + span: ui/drop/issue-23338-ensure-param-drop-order.rs:131:23: 131:37
                                         // + literal: Const { ty: &[&str; 4], val: Unevaluated(<D<'a> as std::fmt::Display>::fmt, [ReErased], Some(promoted[0])) }
        _7 = _21;                        // scope 0 at ui/drop/issue-23338-ensure-param-drop-order.rs:131:23: 131:37
        _6 = _7;                         // scope 0 at ui/drop/issue-23338-ensure-param-drop-order.rs:131:23: 131:37
        _5 = move _6 as &[&str] (Pointer(Unsize)); // scope 0 at ui/drop/issue-23338-ensure-param-drop-order.rs:131:23: 131:37
        _14 = &((*_1).0: &str);          // scope 0 at ui/drop/issue-23338-ensure-param-drop-order.rs:131:39: 131:48
        _13 = _14;                       // scope 0 at ui/drop/issue-23338-ensure-param-drop-order.rs:131:39: 131:48
        _12 = core::fmt::ArgumentV1::<'_>::new_display::<&str>(move _13) -> bb1; // scope 0 at ui/drop/issue-23338-ensure-param-drop-order.rs:131:39: 131:48
                                         // mir::Constant
                                         // + span: ui/drop/issue-23338-ensure-param-drop-order.rs:131:39: 131:48
                                         // + user_ty: UserType(1)
                                         // + literal: Const { ty: for<'b> fn(&'b &str) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_display::<&str>}, val: Value(<ZST>) }
    }

    bb1: {
        _17 = &((*_1).1: u32);           // scope 0 at ui/drop/issue-23338-ensure-param-drop-order.rs:131:50: 131:56
        _16 = _17;                       // scope 0 at ui/drop/issue-23338-ensure-param-drop-order.rs:131:50: 131:56
        _15 = core::fmt::ArgumentV1::<'_>::new_display::<u32>(move _16) -> bb2; // scope 0 at ui/drop/issue-23338-ensure-param-drop-order.rs:131:50: 131:56
                                         // mir::Constant
                                         // + span: ui/drop/issue-23338-ensure-param-drop-order.rs:131:50: 131:56
                                         // + user_ty: UserType(2)
                                         // + literal: Const { ty: for<'b> fn(&'b u32) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_display::<u32>}, val: Value(<ZST>) }
    }

    bb2: {
        _20 = &((*_1).2: u32);           // scope 0 at ui/drop/issue-23338-ensure-param-drop-order.rs:131:58: 131:66
        _19 = _20;                       // scope 0 at ui/drop/issue-23338-ensure-param-drop-order.rs:131:58: 131:66
        _18 = core::fmt::ArgumentV1::<'_>::new_display::<u32>(move _19) -> bb3; // scope 0 at ui/drop/issue-23338-ensure-param-drop-order.rs:131:58: 131:66
                                         // mir::Constant
                                         // + span: ui/drop/issue-23338-ensure-param-drop-order.rs:131:58: 131:66
                                         // + user_ty: UserType(3)
                                         // + literal: Const { ty: for<'b> fn(&'b u32) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_display::<u32>}, val: Value(<ZST>) }
    }

    bb3: {
        _11 = [move _12, move _15, move _18]; // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:520:24: 520:54
        _10 = &_11;                      // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:520:24: 520:54
        _9 = _10;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:520:24: 520:54
        _8 = move _9 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:520:24: 520:54
        _4 = Arguments::<'_>::new_v1(move _5, move _8) -> bb4; // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:520:24: 520:54
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:520:24: 520:54
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb4: {
        _0 = Formatter::<'_>::write_fmt(move _3, move _4) -> bb5; // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:520:9: 520:55
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:520:14: 520:23
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a mut Formatter<'_>, Arguments<'b>) -> Result<(), std::fmt::Error> {Formatter::<'_>::write_fmt}, val: Value(<ZST>) }
    }

    bb5: {
        return;                          // scope 0 at ui/drop/issue-23338-ensure-param-drop-order.rs:132:10: 132:10
    }
}

promoted[0] in d::<impl at ui/drop/issue-23338-ensure-param-drop-order.rs:129:5: 129:36>::fmt: &[&str; 4] = {
    let mut _0: &[&str; 4];              // return place in scope 0 at ui/drop/issue-23338-ensure-param-drop-order.rs:131:23: 131:37
    let mut _1: [&str; 4];               // in scope 0 at ui/drop/issue-23338-ensure-param-drop-order.rs:131:23: 131:37

    bb0: {
        _1 = [const "D(", const "_", const ", ", const ")"]; // scope 0 at ui/drop/issue-23338-ensure-param-drop-order.rs:131:23: 131:37
                                         // mir::Constant
                                         // + span: ui/drop/issue-23338-ensure-param-drop-order.rs:131:23: 131:37
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
                                         // mir::Constant
                                         // + span: ui/drop/issue-23338-ensure-param-drop-order.rs:131:23: 131:37
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
                                         // mir::Constant
                                         // + span: ui/drop/issue-23338-ensure-param-drop-order.rs:131:23: 131:37
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
                                         // mir::Constant
                                         // + span: ui/drop/issue-23338-ensure-param-drop-order.rs:131:23: 131:37
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at ui/drop/issue-23338-ensure-param-drop-order.rs:131:23: 131:37
        return;                          // scope 0 at ui/drop/issue-23338-ensure-param-drop-order.rs:131:23: 131:37
    }
}

fn d::<impl at ui/drop/issue-23338-ensure-param-drop-order.rs:135:5: 135:19>::new(_1: &str, _2: u32, _3: &RefCell<Vec<u32>>) -> D<'_> {
    debug name => _1;                    // in scope 0 at ui/drop/issue-23338-ensure-param-drop-order.rs:136:20: 136:24
    debug i => _2;                       // in scope 0 at ui/drop/issue-23338-ensure-param-drop-order.rs:136:40: 136:41
    debug log => _3;                     // in scope 0 at ui/drop/issue-23338-ensure-param-drop-order.rs:136:48: 136:51
    let mut _6: *mut u32;                // in scope 0 at ui/drop/issue-23338-ensure-param-drop-order.rs:139:27: 139:34
    let mut _7: *mut u32;                // in scope 0 at ui/drop/issue-23338-ensure-param-drop-order.rs:140:17: 140:24
    let mut _8: (u32, bool);             // in scope 0 at ui/drop/issue-23338-ensure-param-drop-order.rs:140:17: 140:29
    let mut _9: u64;                     // in scope 0 at ui/drop/issue-23338-ensure-param-drop-order.rs:141:27: 141:39
    let mut _10: u32;                    // in scope 0 at ui/drop/issue-23338-ensure-param-drop-order.rs:141:33: 141:38
    let mut _11: (u64, bool);            // in scope 0 at ui/drop/issue-23338-ensure-param-drop-order.rs:141:27: 141:39
    let mut _12: *mut u64;               // in scope 0 at ui/drop/issue-23338-ensure-param-drop-order.rs:141:17: 141:23
    let mut _13: &str;                   // in scope 0 at ui/drop/issue-23338-ensure-param-drop-order.rs:143:27: 143:31
    let mut _14: u32;                    // in scope 0 at ui/drop/issue-23338-ensure-param-drop-order.rs:143:36: 143:37
    let mut _15: &std::cell::RefCell<std::vec::Vec<u32>>; // in scope 0 at ui/drop/issue-23338-ensure-param-drop-order.rs:143:44: 143:47
    let mut _16: u32;                    // in scope 0 at ui/drop/issue-23338-ensure-param-drop-order.rs:143:54: 143:57
    let mut _17: u32;                    // in scope 0 at ui/drop/issue-23338-ensure-param-drop-order.rs:143:66: 143:71
    let _18: ();                         // in scope 0 at ui/drop/issue-23338-ensure-param-drop-order.rs:145:17: 145:68
    let mut _19: u32;                    // in scope 0 at ui/drop/issue-23338-ensure-param-drop-order.rs:145:32: 145:37
    let mut _20: &str;                   // in scope 0 at ui/drop/issue-23338-ensure-param-drop-order.rs:145:39: 145:67
    let _21: &str;                       // in scope 0 at ui/drop/issue-23338-ensure-param-drop-order.rs:145:39: 145:67
    let mut _22: &std::string::String;   // in scope 0 at ui/drop/issue-23338-ensure-param-drop-order.rs:145:39: 145:67
    let _23: &std::string::String;       // in scope 0 at ui/drop/issue-23338-ensure-param-drop-order.rs:145:39: 145:67
    let _24: std::string::String;        // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:117:23: 120:6
    let mut _26: std::fmt::Arguments<'_>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
    let mut _27: &[&str];                // in scope 0 at ui/drop/issue-23338-ensure-param-drop-order.rs:145:48: 145:61
    let mut _28: &[&str; 1];             // in scope 0 at ui/drop/issue-23338-ensure-param-drop-order.rs:145:48: 145:61
    let _29: &[&str; 1];                 // in scope 0 at ui/drop/issue-23338-ensure-param-drop-order.rs:145:48: 145:61
    let mut _30: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
    let mut _31: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
    let _32: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
    let _33: [core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
    let mut _34: core::fmt::ArgumentV1<'_>; // in scope 0 at ui/drop/issue-23338-ensure-param-drop-order.rs:145:63: 145:66
    let mut _35: &d::D<'_>;              // in scope 0 at ui/drop/issue-23338-ensure-param-drop-order.rs:145:63: 145:66
    let _36: &d::D<'_>;                  // in scope 0 at ui/drop/issue-23338-ensure-param-drop-order.rs:145:63: 145:66
    scope 1 {
        let _4: u32;                     // in scope 1 at ui/drop/issue-23338-ensure-param-drop-order.rs:138:21: 138:26
        scope 2 {
            debug trail => _4;           // in scope 2 at ui/drop/issue-23338-ensure-param-drop-order.rs:138:21: 138:26
            let _5: u32;                 // in scope 2 at ui/drop/issue-23338-ensure-param-drop-order.rs:139:21: 139:24
            scope 3 {
                debug ctr => _5;         // in scope 3 at ui/drop/issue-23338-ensure-param-drop-order.rs:139:21: 139:24
                let mut _0: d::D<'_>;    // return place in scope 3 at ui/drop/issue-23338-ensure-param-drop-order.rs:142:21: 142:24
                scope 4 {
                    debug ret => _0;     // in scope 4 at ui/drop/issue-23338-ensure-param-drop-order.rs:142:21: 142:24
                    let _25: std::string::String; // in scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:13: 118:16
                    let mut _37: &[&str; 1]; // in scope 4 at ui/drop/issue-23338-ensure-param-drop-order.rs:145:48: 145:61
                    scope 5 {
                        debug res => _25; // in scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:13: 118:16
                    }
                }
            }
        }
    }

    bb0: {
        _4 = first_avail() -> bb1;       // scope 1 at ui/drop/issue-23338-ensure-param-drop-order.rs:138:29: 138:42
                                         // mir::Constant
                                         // + span: ui/drop/issue-23338-ensure-param-drop-order.rs:138:29: 138:40
                                         // + literal: Const { ty: fn() -> u32 {first_avail}, val: Value(<ZST>) }
    }

    bb1: {
        _6 = const {alloc2: *mut u32};   // scope 2 at ui/drop/issue-23338-ensure-param-drop-order.rs:139:27: 139:34
                                         // mir::Constant
                                         // + span: ui/drop/issue-23338-ensure-param-drop-order.rs:139:27: 139:34
                                         // + literal: Const { ty: *mut u32, val: Value(Scalar(alloc2)) }
        _5 = (*_6);                      // scope 2 at ui/drop/issue-23338-ensure-param-drop-order.rs:139:27: 139:34
        _7 = const {alloc2: *mut u32};   // scope 3 at ui/drop/issue-23338-ensure-param-drop-order.rs:140:17: 140:24
                                         // mir::Constant
                                         // + span: ui/drop/issue-23338-ensure-param-drop-order.rs:140:17: 140:24
                                         // + literal: Const { ty: *mut u32, val: Value(Scalar(alloc2)) }
        _8 = CheckedAdd((*_7), const 1_u32); // scope 3 at ui/drop/issue-23338-ensure-param-drop-order.rs:140:17: 140:29
        assert(!move (_8.1: bool), "attempt to compute `{} + {}`, which would overflow", (*_7), const 1_u32) -> bb2; // scope 3 at ui/drop/issue-23338-ensure-param-drop-order.rs:140:17: 140:29
    }

    bb2: {
        (*_7) = move (_8.0: u32);        // scope 3 at ui/drop/issue-23338-ensure-param-drop-order.rs:140:17: 140:29
        _10 = _4;                        // scope 3 at ui/drop/issue-23338-ensure-param-drop-order.rs:141:33: 141:38
        _11 = CheckedShl(const 1_u64, _10); // scope 3 at ui/drop/issue-23338-ensure-param-drop-order.rs:141:27: 141:39
        assert(!move (_11.1: bool), "attempt to shift left by `{}`, which would overflow", move _10) -> bb3; // scope 3 at ui/drop/issue-23338-ensure-param-drop-order.rs:141:27: 141:39
    }

    bb3: {
        _9 = move (_11.0: u64);          // scope 3 at ui/drop/issue-23338-ensure-param-drop-order.rs:141:27: 141:39
        _12 = const {alloc1: *mut u64};  // scope 3 at ui/drop/issue-23338-ensure-param-drop-order.rs:141:17: 141:23
                                         // mir::Constant
                                         // + span: ui/drop/issue-23338-ensure-param-drop-order.rs:141:17: 141:23
                                         // + literal: Const { ty: *mut u64, val: Value(Scalar(alloc1)) }
        (*_12) = BitOr((*_12), move _9); // scope 3 at ui/drop/issue-23338-ensure-param-drop-order.rs:141:17: 141:39
        _13 = _1;                        // scope 3 at ui/drop/issue-23338-ensure-param-drop-order.rs:143:27: 143:31
        _14 = _2;                        // scope 3 at ui/drop/issue-23338-ensure-param-drop-order.rs:143:36: 143:37
        _15 = _3;                        // scope 3 at ui/drop/issue-23338-ensure-param-drop-order.rs:143:44: 143:47
        _16 = _5;                        // scope 3 at ui/drop/issue-23338-ensure-param-drop-order.rs:143:54: 143:57
        _17 = _4;                        // scope 3 at ui/drop/issue-23338-ensure-param-drop-order.rs:143:66: 143:71
        _0 = D::<'_> { name: move _13, i: move _14, uid: move _16, trail: move _17, log: move _15 }; // scope 3 at ui/drop/issue-23338-ensure-param-drop-order.rs:142:27: 144:18
        _19 = _4;                        // scope 4 at ui/drop/issue-23338-ensure-param-drop-order.rs:145:32: 145:37
        _37 = const _;                   // scope 4 at ui/drop/issue-23338-ensure-param-drop-order.rs:145:48: 145:61
                                         // mir::Constant
                                         // + span: ui/drop/issue-23338-ensure-param-drop-order.rs:145:48: 145:61
                                         // + literal: Const { ty: &[&str; 1], val: Unevaluated(D::<'a>::new, [ReErased], Some(promoted[0])) }
        _29 = _37;                       // scope 4 at ui/drop/issue-23338-ensure-param-drop-order.rs:145:48: 145:61
        _28 = _29;                       // scope 4 at ui/drop/issue-23338-ensure-param-drop-order.rs:145:48: 145:61
        _27 = move _28 as &[&str] (Pointer(Unsize)); // scope 4 at ui/drop/issue-23338-ensure-param-drop-order.rs:145:48: 145:61
        _36 = &_0;                       // scope 4 at ui/drop/issue-23338-ensure-param-drop-order.rs:145:63: 145:66
        _35 = _36;                       // scope 4 at ui/drop/issue-23338-ensure-param-drop-order.rs:145:63: 145:66
        _34 = core::fmt::ArgumentV1::<'_>::new_display::<D<'_>>(move _35) -> [return: bb4, unwind: bb11]; // scope 4 at ui/drop/issue-23338-ensure-param-drop-order.rs:145:63: 145:66
                                         // mir::Constant
                                         // + span: ui/drop/issue-23338-ensure-param-drop-order.rs:145:63: 145:66
                                         // + user_ty: UserType(1)
                                         // + literal: Const { ty: for<'b> fn(&'b D<'_>) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_display::<D<'_>>}, val: Value(<ZST>) }
    }

    bb4: {
        _33 = [move _34];                // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
        _32 = &_33;                      // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
        _31 = _32;                       // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
        _30 = move _31 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
        _26 = Arguments::<'_>::new_v1(move _27, move _30) -> [return: bb5, unwind: bb11]; // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb5: {
        _25 = format(move _26) -> [return: bb6, unwind: bb11]; // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:19: 118:80
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:19: 118:38
                                         // + literal: Const { ty: for<'a> fn(Arguments<'a>) -> String {format}, val: Value(<ZST>) }
    }

    bb6: {
        _24 = move _25;                  // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:119:9: 119:12
        _23 = &_24;                      // scope 4 at ui/drop/issue-23338-ensure-param-drop-order.rs:145:39: 145:67
        _22 = _23;                       // scope 4 at ui/drop/issue-23338-ensure-param-drop-order.rs:145:39: 145:67
        _21 = <String as Deref>::deref(move _22) -> [return: bb7, unwind: bb10]; // scope 4 at ui/drop/issue-23338-ensure-param-drop-order.rs:145:39: 145:67
                                         // mir::Constant
                                         // + span: ui/drop/issue-23338-ensure-param-drop-order.rs:145:39: 145:67
                                         // + literal: Const { ty: for<'a> fn(&'a String) -> &'a <String as Deref>::Target {<String as Deref>::deref}, val: Value(<ZST>) }
    }

    bb7: {
        _20 = _21;                       // scope 4 at ui/drop/issue-23338-ensure-param-drop-order.rs:145:39: 145:67
        _18 = indent_println(move _19, move _20) -> [return: bb8, unwind: bb10]; // scope 4 at ui/drop/issue-23338-ensure-param-drop-order.rs:145:17: 145:68
                                         // mir::Constant
                                         // + span: ui/drop/issue-23338-ensure-param-drop-order.rs:145:17: 145:31
                                         // + literal: Const { ty: for<'a> fn(u32, &'a str) {indent_println}, val: Value(<ZST>) }
    }

    bb8: {
        drop(_24) -> [return: bb9, unwind: bb11]; // scope 4 at ui/drop/issue-23338-ensure-param-drop-order.rs:145:68: 145:69
    }

    bb9: {
        return;                          // scope 0 at ui/drop/issue-23338-ensure-param-drop-order.rs:148:10: 148:10
    }

    bb10 (cleanup): {
        drop(_24) -> bb11;               // scope 4 at ui/drop/issue-23338-ensure-param-drop-order.rs:145:68: 145:69
    }

    bb11 (cleanup): {
        drop(_0) -> bb12;                // scope 3 at ui/drop/issue-23338-ensure-param-drop-order.rs:147:13: 147:14
    }

    bb12 (cleanup): {
        resume;                          // scope 0 at ui/drop/issue-23338-ensure-param-drop-order.rs:136:9: 148:10
    }
}

alloc2 (static: counter, size: 4, align: 4) {
    00 00 00 00                                     │ ....
}

alloc1 (static: trails, size: 8, align: 8) {
    00 00 00 00 00 00 00 00                         │ ........
}

promoted[0] in d::<impl at ui/drop/issue-23338-ensure-param-drop-order.rs:135:5: 135:19>::new: &[&str; 1] = {
    let mut _0: &[&str; 1];              // return place in scope 0 at ui/drop/issue-23338-ensure-param-drop-order.rs:145:48: 145:61
    let mut _1: [&str; 1];               // in scope 0 at ui/drop/issue-23338-ensure-param-drop-order.rs:145:48: 145:61

    bb0: {
        _1 = [const "+-- Make "];        // scope 0 at ui/drop/issue-23338-ensure-param-drop-order.rs:145:48: 145:61
                                         // mir::Constant
                                         // + span: ui/drop/issue-23338-ensure-param-drop-order.rs:145:48: 145:61
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at ui/drop/issue-23338-ensure-param-drop-order.rs:145:48: 145:61
        return;                          // scope 0 at ui/drop/issue-23338-ensure-param-drop-order.rs:145:48: 145:61
    }
}

fn d::<impl at ui/drop/issue-23338-ensure-param-drop-order.rs:135:5: 135:19>::incr(_1: &D<'_>) -> D<'_> {
    debug self => _1;                    // in scope 0 at ui/drop/issue-23338-ensure-param-drop-order.rs:149:21: 149:26
    let mut _0: d::D<'_>;                // return place in scope 0 at ui/drop/issue-23338-ensure-param-drop-order.rs:149:31: 149:36
    let mut _2: &str;                    // in scope 0 at ui/drop/issue-23338-ensure-param-drop-order.rs:150:20: 150:29
    let mut _3: u32;                     // in scope 0 at ui/drop/issue-23338-ensure-param-drop-order.rs:150:31: 150:41
    let mut _4: u32;                     // in scope 0 at ui/drop/issue-23338-ensure-param-drop-order.rs:150:31: 150:37
    let mut _5: (u32, bool);             // in scope 0 at ui/drop/issue-23338-ensure-param-drop-order.rs:150:31: 150:41
    let mut _6: &std::cell::RefCell<std::vec::Vec<u32>>; // in scope 0 at ui/drop/issue-23338-ensure-param-drop-order.rs:150:43: 150:51
    let mut _7: &std::cell::RefCell<std::vec::Vec<u32>>; // in scope 0 at ui/drop/issue-23338-ensure-param-drop-order.rs:149:21: 149:26

    bb0: {
        _2 = ((*_1).0: &str);            // scope 0 at ui/drop/issue-23338-ensure-param-drop-order.rs:150:20: 150:29
        _4 = ((*_1).1: u32);             // scope 0 at ui/drop/issue-23338-ensure-param-drop-order.rs:150:31: 150:37
        _5 = CheckedAdd(_4, const 1_u32); // scope 0 at ui/drop/issue-23338-ensure-param-drop-order.rs:150:31: 150:41
        assert(!move (_5.1: bool), "attempt to compute `{} + {}`, which would overflow", move _4, const 1_u32) -> bb1; // scope 0 at ui/drop/issue-23338-ensure-param-drop-order.rs:150:31: 150:41
    }

    bb1: {
        _3 = move (_5.0: u32);           // scope 0 at ui/drop/issue-23338-ensure-param-drop-order.rs:150:31: 150:41
        _7 = deref_copy ((*_1).4: &std::cell::RefCell<std::vec::Vec<u32>>); // scope 0 at ui/drop/issue-23338-ensure-param-drop-order.rs:150:43: 150:51
        _6 = _7;                         // scope 0 at ui/drop/issue-23338-ensure-param-drop-order.rs:150:43: 150:51
        _0 = D::<'_>::new(move _2, move _3, move _6) -> bb2; // scope 0 at ui/drop/issue-23338-ensure-param-drop-order.rs:150:13: 150:52
                                         // mir::Constant
                                         // + span: ui/drop/issue-23338-ensure-param-drop-order.rs:150:13: 150:19
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: fn(&'static str, u32, &RefCell<Vec<u32>>) -> D<'_> {D::<'_>::new}, val: Value(<ZST>) }
    }

    bb2: {
        return;                          // scope 0 at ui/drop/issue-23338-ensure-param-drop-order.rs:151:10: 151:10
    }
}

fn d::<impl at ui/drop/issue-23338-ensure-param-drop-order.rs:154:5: 154:28>::drop(_1: &mut D<'_>) -> () {
    debug self => _1;                    // in scope 0 at ui/drop/issue-23338-ensure-param-drop-order.rs:155:17: 155:26
    let mut _0: ();                      // return place in scope 0 at ui/drop/issue-23338-ensure-param-drop-order.rs:155:28: 155:28
    let mut _2: u64;                     // in scope 0 at ui/drop/issue-23338-ensure-param-drop-order.rs:156:32: 156:50
    let mut _3: u64;                     // in scope 0 at ui/drop/issue-23338-ensure-param-drop-order.rs:156:33: 156:50
    let mut _4: u32;                     // in scope 0 at ui/drop/issue-23338-ensure-param-drop-order.rs:156:39: 156:49
    let mut _5: (u64, bool);             // in scope 0 at ui/drop/issue-23338-ensure-param-drop-order.rs:156:33: 156:50
    let mut _6: *mut u64;                // in scope 0 at ui/drop/issue-23338-ensure-param-drop-order.rs:156:22: 156:28
    let _7: ();                          // in scope 0 at ui/drop/issue-23338-ensure-param-drop-order.rs:157:13: 157:49
    let mut _8: &mut std::vec::Vec<u32>; // in scope 0 at ui/drop/issue-23338-ensure-param-drop-order.rs:157:13: 157:49
    let mut _9: &mut std::vec::Vec<u32>; // in scope 0 at ui/drop/issue-23338-ensure-param-drop-order.rs:157:13: 157:49
    let mut _10: &mut std::cell::RefMut<'_, std::vec::Vec<u32>>; // in scope 0 at ui/drop/issue-23338-ensure-param-drop-order.rs:157:13: 157:49
    let mut _11: std::cell::RefMut<'_, std::vec::Vec<u32>>; // in scope 0 at ui/drop/issue-23338-ensure-param-drop-order.rs:157:13: 157:34
    let mut _12: &std::cell::RefCell<std::vec::Vec<u32>>; // in scope 0 at ui/drop/issue-23338-ensure-param-drop-order.rs:157:13: 157:34
    let mut _13: u32;                    // in scope 0 at ui/drop/issue-23338-ensure-param-drop-order.rs:157:40: 157:48
    let _14: ();                         // in scope 0 at ui/drop/issue-23338-ensure-param-drop-order.rs:158:13: 158:70
    let mut _15: u32;                    // in scope 0 at ui/drop/issue-23338-ensure-param-drop-order.rs:158:28: 158:38
    let mut _16: &str;                   // in scope 0 at ui/drop/issue-23338-ensure-param-drop-order.rs:158:40: 158:69
    let _17: &str;                       // in scope 0 at ui/drop/issue-23338-ensure-param-drop-order.rs:158:40: 158:69
    let mut _18: &std::string::String;   // in scope 0 at ui/drop/issue-23338-ensure-param-drop-order.rs:158:40: 158:69
    let _19: &std::string::String;       // in scope 0 at ui/drop/issue-23338-ensure-param-drop-order.rs:158:40: 158:69
    let _20: std::string::String;        // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:117:23: 120:6
    let _21: std::string::String;        // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:13: 118:16
    let mut _22: std::fmt::Arguments<'_>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
    let mut _23: &[&str];                // in scope 0 at ui/drop/issue-23338-ensure-param-drop-order.rs:158:49: 158:62
    let mut _24: &[&str; 1];             // in scope 0 at ui/drop/issue-23338-ensure-param-drop-order.rs:158:49: 158:62
    let _25: &[&str; 1];                 // in scope 0 at ui/drop/issue-23338-ensure-param-drop-order.rs:158:49: 158:62
    let mut _26: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
    let mut _27: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
    let _28: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
    let _29: [core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
    let mut _30: core::fmt::ArgumentV1<'_>; // in scope 0 at ui/drop/issue-23338-ensure-param-drop-order.rs:158:64: 158:68
    let mut _31: &&mut d::D<'_>;         // in scope 0 at ui/drop/issue-23338-ensure-param-drop-order.rs:158:64: 158:68
    let _32: &&mut d::D<'_>;             // in scope 0 at ui/drop/issue-23338-ensure-param-drop-order.rs:158:64: 158:68
    let _33: ();                         // in scope 0 at ui/drop/issue-23338-ensure-param-drop-order.rs:159:13: 159:46
    let mut _34: &str;                   // in scope 0 at ui/drop/issue-23338-ensure-param-drop-order.rs:159:43: 159:45
    let _35: &str;                       // in scope 0 at ui/drop/issue-23338-ensure-param-drop-order.rs:159:43: 159:45
    let mut _36: &[&str; 1];             // in scope 0 at ui/drop/issue-23338-ensure-param-drop-order.rs:158:49: 158:62
    let mut _37: &std::cell::RefCell<std::vec::Vec<u32>>; // in scope 0 at ui/drop/issue-23338-ensure-param-drop-order.rs:155:17: 155:26
    scope 1 {
    }
    scope 2 {
        debug res => _21;                // in scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:13: 118:16
    }

    bb0: {
        _4 = ((*_1).3: u32);             // scope 1 at ui/drop/issue-23338-ensure-param-drop-order.rs:156:39: 156:49
        _5 = CheckedShl(const 1_u64, _4); // scope 1 at ui/drop/issue-23338-ensure-param-drop-order.rs:156:33: 156:50
        assert(!move (_5.1: bool), "attempt to shift left by `{}`, which would overflow", move _4) -> bb1; // scope 1 at ui/drop/issue-23338-ensure-param-drop-order.rs:156:33: 156:50
    }

    bb1: {
        _3 = move (_5.0: u64);           // scope 1 at ui/drop/issue-23338-ensure-param-drop-order.rs:156:33: 156:50
        _2 = Not(move _3);               // scope 1 at ui/drop/issue-23338-ensure-param-drop-order.rs:156:32: 156:50
        _6 = const {alloc1: *mut u64};   // scope 1 at ui/drop/issue-23338-ensure-param-drop-order.rs:156:22: 156:28
                                         // mir::Constant
                                         // + span: ui/drop/issue-23338-ensure-param-drop-order.rs:156:22: 156:28
                                         // + literal: Const { ty: *mut u64, val: Value(Scalar(alloc1)) }
        (*_6) = BitAnd((*_6), move _2);  // scope 1 at ui/drop/issue-23338-ensure-param-drop-order.rs:156:22: 156:50
        _37 = deref_copy ((*_1).4: &std::cell::RefCell<std::vec::Vec<u32>>); // scope 0 at ui/drop/issue-23338-ensure-param-drop-order.rs:157:13: 157:34
        _12 = _37;                       // scope 0 at ui/drop/issue-23338-ensure-param-drop-order.rs:157:13: 157:34
        _11 = RefCell::<Vec<u32>>::borrow_mut(move _12) -> bb2; // scope 0 at ui/drop/issue-23338-ensure-param-drop-order.rs:157:13: 157:34
                                         // mir::Constant
                                         // + span: ui/drop/issue-23338-ensure-param-drop-order.rs:157:22: 157:32
                                         // + literal: Const { ty: for<'a> fn(&'a RefCell<Vec<u32>>) -> RefMut<'a, Vec<u32>> {RefCell::<Vec<u32>>::borrow_mut}, val: Value(<ZST>) }
    }

    bb2: {
        _10 = &mut _11;                  // scope 0 at ui/drop/issue-23338-ensure-param-drop-order.rs:157:13: 157:49
        _9 = <RefMut<'_, Vec<u32>> as DerefMut>::deref_mut(move _10) -> [return: bb3, unwind: bb14]; // scope 0 at ui/drop/issue-23338-ensure-param-drop-order.rs:157:13: 157:49
                                         // mir::Constant
                                         // + span: ui/drop/issue-23338-ensure-param-drop-order.rs:157:13: 157:49
                                         // + literal: Const { ty: for<'a> fn(&'a mut RefMut<'_, Vec<u32>>) -> &'a mut <RefMut<'_, Vec<u32>> as Deref>::Target {<RefMut<'_, Vec<u32>> as DerefMut>::deref_mut}, val: Value(<ZST>) }
    }

    bb3: {
        _8 = &mut (*_9);                 // scope 0 at ui/drop/issue-23338-ensure-param-drop-order.rs:157:13: 157:49
        _13 = ((*_1).2: u32);            // scope 0 at ui/drop/issue-23338-ensure-param-drop-order.rs:157:40: 157:48
        _7 = Vec::<u32>::push(move _8, move _13) -> [return: bb4, unwind: bb14]; // scope 0 at ui/drop/issue-23338-ensure-param-drop-order.rs:157:13: 157:49
                                         // mir::Constant
                                         // + span: ui/drop/issue-23338-ensure-param-drop-order.rs:157:35: 157:39
                                         // + literal: Const { ty: for<'a> fn(&'a mut Vec<u32>, u32) {Vec::<u32>::push}, val: Value(<ZST>) }
    }

    bb4: {
        drop(_11) -> bb5;                // scope 0 at ui/drop/issue-23338-ensure-param-drop-order.rs:157:49: 157:50
    }

    bb5: {
        _15 = ((*_1).3: u32);            // scope 0 at ui/drop/issue-23338-ensure-param-drop-order.rs:158:28: 158:38
        _36 = const _;                   // scope 0 at ui/drop/issue-23338-ensure-param-drop-order.rs:158:49: 158:62
                                         // mir::Constant
                                         // + span: ui/drop/issue-23338-ensure-param-drop-order.rs:158:49: 158:62
                                         // + literal: Const { ty: &[&str; 1], val: Unevaluated(<D<'a> as Drop>::drop, [ReErased], Some(promoted[0])) }
        _25 = _36;                       // scope 0 at ui/drop/issue-23338-ensure-param-drop-order.rs:158:49: 158:62
        _24 = _25;                       // scope 0 at ui/drop/issue-23338-ensure-param-drop-order.rs:158:49: 158:62
        _23 = move _24 as &[&str] (Pointer(Unsize)); // scope 0 at ui/drop/issue-23338-ensure-param-drop-order.rs:158:49: 158:62
        _32 = &_1;                       // scope 0 at ui/drop/issue-23338-ensure-param-drop-order.rs:158:64: 158:68
        _31 = _32;                       // scope 0 at ui/drop/issue-23338-ensure-param-drop-order.rs:158:64: 158:68
        _30 = core::fmt::ArgumentV1::<'_>::new_display::<&mut D<'_>>(move _31) -> bb6; // scope 0 at ui/drop/issue-23338-ensure-param-drop-order.rs:158:64: 158:68
                                         // mir::Constant
                                         // + span: ui/drop/issue-23338-ensure-param-drop-order.rs:158:64: 158:68
                                         // + user_ty: UserType(1)
                                         // + literal: Const { ty: for<'b> fn(&'b &mut D<'_>) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_display::<&mut D<'_>>}, val: Value(<ZST>) }
    }

    bb6: {
        _29 = [move _30];                // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
        _28 = &_29;                      // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
        _27 = _28;                       // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
        _26 = move _27 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
        _22 = Arguments::<'_>::new_v1(move _23, move _26) -> bb7; // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb7: {
        _21 = format(move _22) -> bb8;   // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:19: 118:80
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:19: 118:38
                                         // + literal: Const { ty: for<'a> fn(Arguments<'a>) -> String {format}, val: Value(<ZST>) }
    }

    bb8: {
        _20 = move _21;                  // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:119:9: 119:12
        _19 = &_20;                      // scope 0 at ui/drop/issue-23338-ensure-param-drop-order.rs:158:40: 158:69
        _18 = _19;                       // scope 0 at ui/drop/issue-23338-ensure-param-drop-order.rs:158:40: 158:69
        _17 = <String as Deref>::deref(move _18) -> [return: bb9, unwind: bb13]; // scope 0 at ui/drop/issue-23338-ensure-param-drop-order.rs:158:40: 158:69
                                         // mir::Constant
                                         // + span: ui/drop/issue-23338-ensure-param-drop-order.rs:158:40: 158:69
                                         // + literal: Const { ty: for<'a> fn(&'a String) -> &'a <String as Deref>::Target {<String as Deref>::deref}, val: Value(<ZST>) }
    }

    bb9: {
        _16 = _17;                       // scope 0 at ui/drop/issue-23338-ensure-param-drop-order.rs:158:40: 158:69
        _14 = indent_println(move _15, move _16) -> [return: bb10, unwind: bb13]; // scope 0 at ui/drop/issue-23338-ensure-param-drop-order.rs:158:13: 158:70
                                         // mir::Constant
                                         // + span: ui/drop/issue-23338-ensure-param-drop-order.rs:158:13: 158:27
                                         // + literal: Const { ty: for<'a> fn(u32, &'a str) {indent_println}, val: Value(<ZST>) }
    }

    bb10: {
        drop(_20) -> bb11;               // scope 0 at ui/drop/issue-23338-ensure-param-drop-order.rs:158:70: 158:71
    }

    bb11: {
        _35 = const "";                  // scope 0 at ui/drop/issue-23338-ensure-param-drop-order.rs:159:43: 159:45
                                         // mir::Constant
                                         // + span: ui/drop/issue-23338-ensure-param-drop-order.rs:159:43: 159:45
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _34 = _35;                       // scope 0 at ui/drop/issue-23338-ensure-param-drop-order.rs:159:43: 159:45
        _33 = indent_println(const _, move _34) -> bb12; // scope 0 at ui/drop/issue-23338-ensure-param-drop-order.rs:159:13: 159:46
                                         // mir::Constant
                                         // + span: ui/drop/issue-23338-ensure-param-drop-order.rs:159:13: 159:27
                                         // + literal: Const { ty: for<'a> fn(u32, &'a str) {indent_println}, val: Value(<ZST>) }
    }

    bb12: {
        return;                          // scope 0 at ui/drop/issue-23338-ensure-param-drop-order.rs:160:10: 160:10
    }

    bb13 (cleanup): {
        drop(_20) -> bb15;               // scope 0 at ui/drop/issue-23338-ensure-param-drop-order.rs:158:70: 158:71
    }

    bb14 (cleanup): {
        drop(_11) -> bb15;               // scope 0 at ui/drop/issue-23338-ensure-param-drop-order.rs:157:49: 157:50
    }

    bb15 (cleanup): {
        resume;                          // scope 0 at ui/drop/issue-23338-ensure-param-drop-order.rs:155:9: 160:10
    }
}

alloc1 (static: trails, size: 8, align: 8) {
    00 00 00 00 00 00 00 00                         │ ........
}

promoted[0] in d::<impl at ui/drop/issue-23338-ensure-param-drop-order.rs:154:5: 154:28>::drop: &[&str; 1] = {
    let mut _0: &[&str; 1];              // return place in scope 0 at ui/drop/issue-23338-ensure-param-drop-order.rs:158:49: 158:62
    let mut _1: [&str; 1];               // in scope 0 at ui/drop/issue-23338-ensure-param-drop-order.rs:158:49: 158:62

    bb0: {
        _1 = [const "+-- Drop "];        // scope 0 at ui/drop/issue-23338-ensure-param-drop-order.rs:158:49: 158:62
                                         // mir::Constant
                                         // + span: ui/drop/issue-23338-ensure-param-drop-order.rs:158:49: 158:62
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at ui/drop/issue-23338-ensure-param-drop-order.rs:158:49: 158:62
        return;                          // scope 0 at ui/drop/issue-23338-ensure-param-drop-order.rs:158:49: 158:62
    }
}
