// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
fn <impl at ui/drop/issue-103107.rs:6:1: 6:26>::drop(_1: &mut Foo<'_>) -> () {
    debug self => _1;                    // in scope 0 at ui/drop/issue-103107.rs:7:13: 7:22
    let mut _0: ();                      // return place in scope 0 at ui/drop/issue-103107.rs:7:24: 7:24
    let mut _2: &mut u32;                // in scope 0 at ui/drop/issue-103107.rs:7:13: 7:22

    bb0: {
        _2 = deref_copy ((*_1).0: &mut u32); // scope 0 at ui/drop/issue-103107.rs:8:9: 8:20
        (*_2) = const 0_u32;             // scope 0 at ui/drop/issue-103107.rs:8:9: 8:20
        return;                          // scope 0 at ui/drop/issue-103107.rs:9:6: 9:6
    }
}

fn and() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/drop/issue-103107.rs:12:10: 12:10
    let mut _1: u32;                     // in scope 0 at ui/drop/issue-103107.rs:13:9: 13:16
    let mut _2: bool;                    // in scope 0 at ui/drop/issue-103107.rs:15:8: 15:37
    let mut _3: bool;                    // in scope 0 at ui/drop/issue-103107.rs:15:16: 15:37
    let mut _4: u32;                     // in scope 0 at ui/drop/issue-103107.rs:15:16: 15:32
    let mut _5: Foo<'_>;                 // in scope 0 at ui/drop/issue-103107.rs:15:17: 15:30
    let mut _6: &mut u32;                // in scope 0 at ui/drop/issue-103107.rs:15:21: 15:29
    let mut _7: &mut u32;                // in scope 0 at ui/drop/issue-103107.rs:15:21: 15:29
    let mut _8: bool;                    // in scope 0 at ui/drop/issue-103107.rs:18:8: 18:29
    let mut _9: u32;                     // in scope 0 at ui/drop/issue-103107.rs:18:8: 18:24
    let mut _10: Foo<'_>;                // in scope 0 at ui/drop/issue-103107.rs:18:9: 18:22
    let mut _11: &mut u32;               // in scope 0 at ui/drop/issue-103107.rs:18:13: 18:21
    let mut _12: &mut u32;               // in scope 0 at ui/drop/issue-103107.rs:18:13: 18:21
    let _13: ();                         // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:62
    let mut _14: std::fmt::Arguments<'_>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _15: &[&str];                // in scope 0 at ui/drop/issue-103107.rs:20:14: 20:21
    let mut _16: &[&str; 2];             // in scope 0 at ui/drop/issue-103107.rs:20:14: 20:21
    let _17: &[&str; 2];                 // in scope 0 at ui/drop/issue-103107.rs:20:14: 20:21
    let mut _18: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _19: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let _20: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let _21: [core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _22: core::fmt::ArgumentV1<'_>; // in scope 0 at ui/drop/issue-103107.rs:20:16: 20:19
    let mut _23: &u32;                   // in scope 0 at ui/drop/issue-103107.rs:20:16: 20:19
    let _24: &u32;                       // in scope 0 at ui/drop/issue-103107.rs:20:16: 20:19
    let mut _26: &mut u32;               // in scope 0 at ui/drop/issue-103107.rs:15:17: 15:30
    let mut _27: &mut u32;               // in scope 0 at ui/drop/issue-103107.rs:18:9: 18:22
    scope 1 {
        debug foo => _1;                 // in scope 1 at ui/drop/issue-103107.rs:13:9: 13:16
        let mut _25: &[&str; 2];         // in scope 1 at ui/drop/issue-103107.rs:20:14: 20:21
    }

    bb0: {
        _1 = const 0_u32;                // scope 0 at ui/drop/issue-103107.rs:13:19: 13:20
        _7 = &mut _1;                    // scope 1 at ui/drop/issue-103107.rs:15:21: 15:29
        _6 = &mut (*_7);                 // scope 1 at ui/drop/issue-103107.rs:15:21: 15:29
        _5 = Foo::<'_>(move _6);         // scope 1 at ui/drop/issue-103107.rs:15:17: 15:30
        _26 = deref_copy (_5.0: &mut u32); // scope 1 at ui/drop/issue-103107.rs:15:16: 15:32
        _4 = (*_26);                     // scope 1 at ui/drop/issue-103107.rs:15:16: 15:32
        _3 = Eq(move _4, const 0_u32);   // scope 1 at ui/drop/issue-103107.rs:15:16: 15:37
        drop(_5) -> bb4;                 // scope 1 at ui/drop/issue-103107.rs:15:36: 15:37
    }

    bb1: {
        goto -> bb3;                     // scope 1 at ui/drop/issue-103107.rs:15:8: 15:59
    }

    bb2: {
        _1 = const 0_u32;                // scope 1 at ui/drop/issue-103107.rs:15:44: 15:51
        goto -> bb3;                     // scope 1 at ui/drop/issue-103107.rs:15:8: 15:59
    }

    bb3: {
        _12 = &mut _1;                   // scope 1 at ui/drop/issue-103107.rs:18:13: 18:21
        _11 = &mut (*_12);               // scope 1 at ui/drop/issue-103107.rs:18:13: 18:21
        _10 = Foo::<'_>(move _11);       // scope 1 at ui/drop/issue-103107.rs:18:9: 18:22
        _27 = deref_copy (_10.0: &mut u32); // scope 1 at ui/drop/issue-103107.rs:18:8: 18:24
        _9 = (*_27);                     // scope 1 at ui/drop/issue-103107.rs:18:8: 18:24
        _8 = Eq(move _9, const 0_u32);   // scope 1 at ui/drop/issue-103107.rs:18:8: 18:29
        drop(_10) -> bb8;                // scope 1 at ui/drop/issue-103107.rs:18:28: 18:29
    }

    bb4: {
        _2 = move _3;                    // scope 1 at ui/drop/issue-103107.rs:15:8: 15:37
        switchInt(move _2) -> [0: bb1, otherwise: bb2]; // scope 1 at ui/drop/issue-103107.rs:15:8: 15:59
    }

    bb5: {
        goto -> bb7;                     // scope 1 at ui/drop/issue-103107.rs:18:8: 18:51
    }

    bb6: {
        _1 = const 0_u32;                // scope 1 at ui/drop/issue-103107.rs:18:36: 18:43
        goto -> bb7;                     // scope 1 at ui/drop/issue-103107.rs:18:8: 18:51
    }

    bb7: {
        _25 = const _;                   // scope 1 at ui/drop/issue-103107.rs:20:14: 20:21
                                         // mir::Constant
                                         // + span: ui/drop/issue-103107.rs:20:14: 20:21
                                         // + literal: Const { ty: &[&str; 2], val: Unevaluated(and, [], Some(promoted[0])) }
        _17 = _25;                       // scope 1 at ui/drop/issue-103107.rs:20:14: 20:21
        _16 = _17;                       // scope 1 at ui/drop/issue-103107.rs:20:14: 20:21
        _15 = move _16 as &[&str] (Pointer(Unsize)); // scope 1 at ui/drop/issue-103107.rs:20:14: 20:21
        _24 = &_1;                       // scope 1 at ui/drop/issue-103107.rs:20:16: 20:19
        _23 = _24;                       // scope 1 at ui/drop/issue-103107.rs:20:16: 20:19
        _22 = core::fmt::ArgumentV1::<'_>::new_display::<u32>(move _23) -> bb9; // scope 1 at ui/drop/issue-103107.rs:20:16: 20:19
                                         // mir::Constant
                                         // + span: ui/drop/issue-103107.rs:20:16: 20:19
                                         // + user_ty: UserType(1)
                                         // + literal: Const { ty: for<'b> fn(&'b u32) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_display::<u32>}, val: Value(<ZST>) }
    }

    bb8: {
        switchInt(move _8) -> [0: bb5, otherwise: bb6]; // scope 1 at ui/drop/issue-103107.rs:18:8: 18:51
    }

    bb9: {
        _21 = [move _22];                // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _20 = &_21;                      // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _19 = _20;                       // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _18 = move _19 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _14 = Arguments::<'_>::new_v1(move _15, move _18) -> bb10; // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb10: {
        _13 = _print(move _14) -> bb11;  // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:62
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:27
                                         // + literal: Const { ty: for<'a> fn(Arguments<'a>) {_print}, val: Value(<ZST>) }
    }

    bb11: {
        return;                          // scope 0 at ui/drop/issue-103107.rs:21:2: 21:2
    }
}

promoted[0] in and: &[&str; 2] = {
    let mut _0: &[&str; 2];              // return place in scope 0 at ui/drop/issue-103107.rs:20:14: 20:21
    let mut _1: [&str; 2];               // in scope 0 at ui/drop/issue-103107.rs:20:14: 20:21

    bb0: {
        _1 = [const "", const "\n"];     // scope 0 at ui/drop/issue-103107.rs:20:14: 20:21
                                         // mir::Constant
                                         // + span: ui/drop/issue-103107.rs:20:14: 20:21
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
                                         // mir::Constant
                                         // + span: ui/drop/issue-103107.rs:20:14: 20:21
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at ui/drop/issue-103107.rs:20:14: 20:21
        return;                          // scope 0 at ui/drop/issue-103107.rs:20:14: 20:21
    }
}

fn or() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/drop/issue-103107.rs:23:9: 23:9
    let mut _1: u32;                     // in scope 0 at ui/drop/issue-103107.rs:24:9: 24:16
    let mut _2: bool;                    // in scope 0 at ui/drop/issue-103107.rs:26:8: 26:38
    let mut _3: bool;                    // in scope 0 at ui/drop/issue-103107.rs:26:17: 26:38
    let mut _4: u32;                     // in scope 0 at ui/drop/issue-103107.rs:26:17: 26:33
    let mut _5: Foo<'_>;                 // in scope 0 at ui/drop/issue-103107.rs:26:18: 26:31
    let mut _6: &mut u32;                // in scope 0 at ui/drop/issue-103107.rs:26:22: 26:30
    let mut _7: &mut u32;                // in scope 0 at ui/drop/issue-103107.rs:26:22: 26:30
    let mut _8: bool;                    // in scope 0 at ui/drop/issue-103107.rs:29:8: 29:29
    let mut _9: u32;                     // in scope 0 at ui/drop/issue-103107.rs:29:8: 29:24
    let mut _10: Foo<'_>;                // in scope 0 at ui/drop/issue-103107.rs:29:9: 29:22
    let mut _11: &mut u32;               // in scope 0 at ui/drop/issue-103107.rs:29:13: 29:21
    let mut _12: &mut u32;               // in scope 0 at ui/drop/issue-103107.rs:29:13: 29:21
    let _13: ();                         // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:62
    let mut _14: std::fmt::Arguments<'_>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _15: &[&str];                // in scope 0 at ui/drop/issue-103107.rs:31:14: 31:21
    let mut _16: &[&str; 2];             // in scope 0 at ui/drop/issue-103107.rs:31:14: 31:21
    let _17: &[&str; 2];                 // in scope 0 at ui/drop/issue-103107.rs:31:14: 31:21
    let mut _18: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _19: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let _20: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let _21: [core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _22: core::fmt::ArgumentV1<'_>; // in scope 0 at ui/drop/issue-103107.rs:31:16: 31:19
    let mut _23: &u32;                   // in scope 0 at ui/drop/issue-103107.rs:31:16: 31:19
    let _24: &u32;                       // in scope 0 at ui/drop/issue-103107.rs:31:16: 31:19
    let mut _26: &mut u32;               // in scope 0 at ui/drop/issue-103107.rs:26:18: 26:31
    let mut _27: &mut u32;               // in scope 0 at ui/drop/issue-103107.rs:29:9: 29:22
    scope 1 {
        debug foo => _1;                 // in scope 1 at ui/drop/issue-103107.rs:24:9: 24:16
        let mut _25: &[&str; 2];         // in scope 1 at ui/drop/issue-103107.rs:31:14: 31:21
    }

    bb0: {
        _1 = const 0_u32;                // scope 0 at ui/drop/issue-103107.rs:24:19: 24:20
        _7 = &mut _1;                    // scope 1 at ui/drop/issue-103107.rs:26:22: 26:30
        _6 = &mut (*_7);                 // scope 1 at ui/drop/issue-103107.rs:26:22: 26:30
        _5 = Foo::<'_>(move _6);         // scope 1 at ui/drop/issue-103107.rs:26:18: 26:31
        _26 = deref_copy (_5.0: &mut u32); // scope 1 at ui/drop/issue-103107.rs:26:17: 26:33
        _4 = (*_26);                     // scope 1 at ui/drop/issue-103107.rs:26:17: 26:33
        _3 = Eq(move _4, const 1_u32);   // scope 1 at ui/drop/issue-103107.rs:26:17: 26:38
        drop(_5) -> bb4;                 // scope 1 at ui/drop/issue-103107.rs:26:37: 26:38
    }

    bb1: {
        goto -> bb3;                     // scope 1 at ui/drop/issue-103107.rs:26:8: 26:60
    }

    bb2: {
        _1 = const 0_u32;                // scope 1 at ui/drop/issue-103107.rs:26:45: 26:52
        goto -> bb3;                     // scope 1 at ui/drop/issue-103107.rs:26:8: 26:60
    }

    bb3: {
        _12 = &mut _1;                   // scope 1 at ui/drop/issue-103107.rs:29:13: 29:21
        _11 = &mut (*_12);               // scope 1 at ui/drop/issue-103107.rs:29:13: 29:21
        _10 = Foo::<'_>(move _11);       // scope 1 at ui/drop/issue-103107.rs:29:9: 29:22
        _27 = deref_copy (_10.0: &mut u32); // scope 1 at ui/drop/issue-103107.rs:29:8: 29:24
        _9 = (*_27);                     // scope 1 at ui/drop/issue-103107.rs:29:8: 29:24
        _8 = Eq(move _9, const 1_u32);   // scope 1 at ui/drop/issue-103107.rs:29:8: 29:29
        drop(_10) -> bb8;                // scope 1 at ui/drop/issue-103107.rs:29:28: 29:29
    }

    bb4: {
        _2 = move _3;                    // scope 1 at ui/drop/issue-103107.rs:26:8: 26:38
        switchInt(move _2) -> [0: bb2, otherwise: bb1]; // scope 1 at ui/drop/issue-103107.rs:26:8: 26:60
    }

    bb5: {
        goto -> bb7;                     // scope 1 at ui/drop/issue-103107.rs:29:8: 29:51
    }

    bb6: {
        _1 = const 0_u32;                // scope 1 at ui/drop/issue-103107.rs:29:36: 29:43
        goto -> bb7;                     // scope 1 at ui/drop/issue-103107.rs:29:8: 29:51
    }

    bb7: {
        _25 = const _;                   // scope 1 at ui/drop/issue-103107.rs:31:14: 31:21
                                         // mir::Constant
                                         // + span: ui/drop/issue-103107.rs:31:14: 31:21
                                         // + literal: Const { ty: &[&str; 2], val: Unevaluated(or, [], Some(promoted[0])) }
        _17 = _25;                       // scope 1 at ui/drop/issue-103107.rs:31:14: 31:21
        _16 = _17;                       // scope 1 at ui/drop/issue-103107.rs:31:14: 31:21
        _15 = move _16 as &[&str] (Pointer(Unsize)); // scope 1 at ui/drop/issue-103107.rs:31:14: 31:21
        _24 = &_1;                       // scope 1 at ui/drop/issue-103107.rs:31:16: 31:19
        _23 = _24;                       // scope 1 at ui/drop/issue-103107.rs:31:16: 31:19
        _22 = core::fmt::ArgumentV1::<'_>::new_display::<u32>(move _23) -> bb9; // scope 1 at ui/drop/issue-103107.rs:31:16: 31:19
                                         // mir::Constant
                                         // + span: ui/drop/issue-103107.rs:31:16: 31:19
                                         // + user_ty: UserType(1)
                                         // + literal: Const { ty: for<'b> fn(&'b u32) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_display::<u32>}, val: Value(<ZST>) }
    }

    bb8: {
        switchInt(move _8) -> [0: bb6, otherwise: bb5]; // scope 1 at ui/drop/issue-103107.rs:29:8: 29:51
    }

    bb9: {
        _21 = [move _22];                // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _20 = &_21;                      // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _19 = _20;                       // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _18 = move _19 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _14 = Arguments::<'_>::new_v1(move _15, move _18) -> bb10; // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb10: {
        _13 = _print(move _14) -> bb11;  // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:62
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:27
                                         // + literal: Const { ty: for<'a> fn(Arguments<'a>) {_print}, val: Value(<ZST>) }
    }

    bb11: {
        return;                          // scope 0 at ui/drop/issue-103107.rs:32:2: 32:2
    }
}

promoted[0] in or: &[&str; 2] = {
    let mut _0: &[&str; 2];              // return place in scope 0 at ui/drop/issue-103107.rs:31:14: 31:21
    let mut _1: [&str; 2];               // in scope 0 at ui/drop/issue-103107.rs:31:14: 31:21

    bb0: {
        _1 = [const "", const "\n"];     // scope 0 at ui/drop/issue-103107.rs:31:14: 31:21
                                         // mir::Constant
                                         // + span: ui/drop/issue-103107.rs:31:14: 31:21
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
                                         // mir::Constant
                                         // + span: ui/drop/issue-103107.rs:31:14: 31:21
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at ui/drop/issue-103107.rs:31:14: 31:21
        return;                          // scope 0 at ui/drop/issue-103107.rs:31:14: 31:21
    }
}

fn main() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/drop/issue-103107.rs:34:11: 34:11
    let _1: ();                          // in scope 0 at ui/drop/issue-103107.rs:35:5: 35:10
    let _2: ();                          // in scope 0 at ui/drop/issue-103107.rs:36:5: 36:9

    bb0: {
        _1 = and() -> bb1;               // scope 0 at ui/drop/issue-103107.rs:35:5: 35:10
                                         // mir::Constant
                                         // + span: ui/drop/issue-103107.rs:35:5: 35:8
                                         // + literal: Const { ty: fn() {and}, val: Value(<ZST>) }
    }

    bb1: {
        _2 = or() -> bb2;                // scope 0 at ui/drop/issue-103107.rs:36:5: 36:9
                                         // mir::Constant
                                         // + span: ui/drop/issue-103107.rs:36:5: 36:7
                                         // + literal: Const { ty: fn() {or}, val: Value(<ZST>) }
    }

    bb2: {
        return;                          // scope 0 at ui/drop/issue-103107.rs:37:2: 37:2
    }
}

fn Foo(_1: &mut u32) -> Foo<'_> {
    let mut _0: Foo<'_>;                 // return place in scope 0 at ui/drop/issue-103107.rs:4:1: 4:15

    bb0: {
        _0 = Foo::<'_>(move _1);         // scope 0 at ui/drop/issue-103107.rs:4:1: 4:15
        return;                          // scope 0 at ui/drop/issue-103107.rs:4:1: 4:15
    }
}

// MIR FOR CTFE
fn Foo(_1: &mut u32) -> Foo<'_> {
    let mut _0: Foo<'_>;                 // return place in scope 0 at ui/drop/issue-103107.rs:4:1: 4:15

    bb0: {
        _0 = Foo::<'_>(move _1);         // scope 0 at ui/drop/issue-103107.rs:4:1: 4:15
        return;                          // scope 0 at ui/drop/issue-103107.rs:4:1: 4:15
    }
}
