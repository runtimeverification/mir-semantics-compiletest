// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
fn <impl at ui/drop/drop-trait-enum.rs:11:10: 11:19>::eq(_1: &Message, _2: &Message) -> bool {
    debug self => _1;                    // in scope 0 at ui/drop/drop-trait-enum.rs:11:10: 11:19
    debug other => _2;                   // in scope 0 at ui/drop/drop-trait-enum.rs:11:10: 11:19
    let mut _0: bool;                    // return place in scope 0 at ui/drop/drop-trait-enum.rs:11:10: 11:19
    let _3: isize;                       // in scope 0 at ui/drop/drop-trait-enum.rs:11:10: 11:19
    let mut _4: &Message;                // in scope 0 at ui/drop/drop-trait-enum.rs:11:10: 11:19
    let mut _6: &Message;                // in scope 0 at ui/drop/drop-trait-enum.rs:11:10: 11:19
    let mut _7: isize;                   // in scope 0 at ui/drop/drop-trait-enum.rs:11:10: 11:19
    let mut _8: isize;                   // in scope 0 at ui/drop/drop-trait-enum.rs:11:10: 11:19
    scope 1 {
        debug __self_tag => _3;          // in scope 1 at ui/drop/drop-trait-enum.rs:11:10: 11:19
        let _5: isize;                   // in scope 1 at ui/drop/drop-trait-enum.rs:11:10: 11:19
        scope 2 {
            debug __arg1_tag => _5;      // in scope 2 at ui/drop/drop-trait-enum.rs:11:10: 11:19
        }
    }

    bb0: {
        _4 = _1;                         // scope 0 at ui/drop/drop-trait-enum.rs:11:10: 11:19
        _3 = discriminant((*_4));        // scope 0 at ui/drop/drop-trait-enum.rs:11:10: 11:19
        _6 = _2;                         // scope 1 at ui/drop/drop-trait-enum.rs:11:10: 11:19
        _5 = discriminant((*_6));        // scope 1 at ui/drop/drop-trait-enum.rs:11:10: 11:19
        _7 = _3;                         // scope 2 at ui/drop/drop-trait-enum.rs:11:10: 11:19
        _8 = _5;                         // scope 2 at ui/drop/drop-trait-enum.rs:11:10: 11:19
        _0 = Eq(move _7, move _8);       // scope 2 at ui/drop/drop-trait-enum.rs:11:10: 11:19
        return;                          // scope 0 at ui/drop/drop-trait-enum.rs:11:19: 11:19
    }
}

fn <impl at ui/drop/drop-trait-enum.rs:11:21: 11:26>::fmt(_1: &Message, _2: &mut Formatter<'_>) -> Result<(), std::fmt::Error> {
    debug self => _1;                    // in scope 0 at ui/drop/drop-trait-enum.rs:11:21: 11:26
    debug f => _2;                       // in scope 0 at ui/drop/drop-trait-enum.rs:11:21: 11:26
    let mut _0: std::result::Result<(), std::fmt::Error>; // return place in scope 0 at ui/drop/drop-trait-enum.rs:11:21: 11:26
    let mut _3: &mut std::fmt::Formatter<'_>; // in scope 0 at ui/drop/drop-trait-enum.rs:11:21: 11:26
    let mut _4: &str;                    // in scope 0 at ui/drop/drop-trait-enum.rs:11:21: 11:26
    let mut _5: isize;                   // in scope 0 at ui/drop/drop-trait-enum.rs:11:21: 11:26
    let _6: &str;                        // in scope 0 at ui/drop/drop-trait-enum.rs:11:21: 11:26
    let _7: &str;                        // in scope 0 at ui/drop/drop-trait-enum.rs:11:21: 11:26

    bb0: {
        _3 = &mut (*_2);                 // scope 0 at ui/drop/drop-trait-enum.rs:11:21: 11:26
        _5 = discriminant((*_1));        // scope 0 at ui/drop/drop-trait-enum.rs:11:21: 11:26
        switchInt(move _5) -> [0: bb3, 1: bb1, otherwise: bb2]; // scope 0 at ui/drop/drop-trait-enum.rs:11:21: 11:26
    }

    bb1: {
        _7 = const "DestructorRan";      // scope 0 at ui/drop/drop-trait-enum.rs:11:21: 11:26
                                         // mir::Constant
                                         // + span: ui/drop/drop-trait-enum.rs:11:21: 11:26
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _4 = _7;                         // scope 0 at ui/drop/drop-trait-enum.rs:11:21: 11:26
        goto -> bb4;                     // scope 0 at ui/drop/drop-trait-enum.rs:11:25: 11:26
    }

    bb2: {
        unreachable;                     // scope 0 at ui/drop/drop-trait-enum.rs:11:21: 11:26
    }

    bb3: {
        _6 = const "Dropped";            // scope 0 at ui/drop/drop-trait-enum.rs:11:21: 11:26
                                         // mir::Constant
                                         // + span: ui/drop/drop-trait-enum.rs:11:21: 11:26
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _4 = _6;                         // scope 0 at ui/drop/drop-trait-enum.rs:11:21: 11:26
        goto -> bb4;                     // scope 0 at ui/drop/drop-trait-enum.rs:11:25: 11:26
    }

    bb4: {
        _0 = Formatter::<'_>::write_str(move _3, move _4) -> bb5; // scope 0 at ui/drop/drop-trait-enum.rs:11:21: 11:26
                                         // mir::Constant
                                         // + span: ui/drop/drop-trait-enum.rs:11:21: 11:26
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a mut Formatter<'_>, &'b str) -> Result<(), std::fmt::Error> {Formatter::<'_>::write_str}, val: Value(<ZST>) }
    }

    bb5: {
        return;                          // scope 0 at ui/drop/drop-trait-enum.rs:11:26: 11:26
    }
}

fn <impl at ui/drop/drop-trait-enum.rs:21:1: 21:25>::drop(_1: &mut SendOnDrop) -> () {
    debug self => _1;                    // in scope 0 at ui/drop/drop-trait-enum.rs:22:13: 22:22
    let mut _0: ();                      // return place in scope 0 at ui/drop/drop-trait-enum.rs:22:24: 22:24
    let _2: ();                          // in scope 0 at ui/drop/drop-trait-enum.rs:23:9: 23:52
    let mut _3: std::result::Result<(), std::sync::mpsc::SendError<Message>>; // in scope 0 at ui/drop/drop-trait-enum.rs:23:9: 23:43
    let mut _4: &std::sync::mpsc::Sender<Message>; // in scope 0 at ui/drop/drop-trait-enum.rs:23:9: 23:43
    let mut _5: Message;                 // in scope 0 at ui/drop/drop-trait-enum.rs:23:26: 23:42

    bb0: {
        _4 = &((*_1).0: std::sync::mpsc::Sender<Message>); // scope 0 at ui/drop/drop-trait-enum.rs:23:9: 23:43
        _5 = const Message::Dropped;     // scope 0 at ui/drop/drop-trait-enum.rs:23:26: 23:42
                                         // mir::Constant
                                         // + span: ui/drop/drop-trait-enum.rs:23:26: 23:42
                                         // + literal: Const { ty: Message, val: Value(Scalar(0x00)) }
        _3 = Sender::<Message>::send(move _4, move _5) -> bb1; // scope 0 at ui/drop/drop-trait-enum.rs:23:9: 23:43
                                         // mir::Constant
                                         // + span: ui/drop/drop-trait-enum.rs:23:21: 23:25
                                         // + literal: Const { ty: for<'a> fn(&'a Sender<Message>, Message) -> Result<(), SendError<Message>> {Sender::<Message>::send}, val: Value(<ZST>) }
    }

    bb1: {
        _2 = Result::<(), SendError<Message>>::unwrap(move _3) -> bb2; // scope 0 at ui/drop/drop-trait-enum.rs:23:9: 23:52
                                         // mir::Constant
                                         // + span: ui/drop/drop-trait-enum.rs:23:44: 23:50
                                         // + literal: Const { ty: fn(Result<(), SendError<Message>>) {Result::<(), SendError<Message>>::unwrap}, val: Value(<ZST>) }
    }

    bb2: {
        return;                          // scope 0 at ui/drop/drop-trait-enum.rs:24:6: 24:6
    }
}

fn <impl at ui/drop/drop-trait-enum.rs:33:1: 33:18>::drop(_1: &mut Foo) -> () {
    debug self => _1;                    // in scope 0 at ui/drop/drop-trait-enum.rs:34:13: 34:22
    let mut _0: ();                      // return place in scope 0 at ui/drop/drop-trait-enum.rs:34:24: 34:24
    let mut _2: isize;                   // in scope 0 at ui/drop/drop-trait-enum.rs:36:18: 36:52
    let _3: &mut std::sync::mpsc::Sender<Message>; // in scope 0 at ui/drop/drop-trait-enum.rs:36:37: 36:51
    let _4: ();                          // in scope 0 at ui/drop/drop-trait-enum.rs:37:17: 37:61
    let mut _5: std::result::Result<(), std::sync::mpsc::SendError<Message>>; // in scope 0 at ui/drop/drop-trait-enum.rs:37:17: 37:52
    let mut _6: &std::sync::mpsc::Sender<Message>; // in scope 0 at ui/drop/drop-trait-enum.rs:37:17: 37:52
    let mut _7: Message;                 // in scope 0 at ui/drop/drop-trait-enum.rs:37:29: 37:51
    let _8: &mut std::sync::mpsc::Sender<Message>; // in scope 0 at ui/drop/drop-trait-enum.rs:39:43: 39:57
    let _9: ();                          // in scope 0 at ui/drop/drop-trait-enum.rs:40:17: 40:61
    let mut _10: std::result::Result<(), std::sync::mpsc::SendError<Message>>; // in scope 0 at ui/drop/drop-trait-enum.rs:40:17: 40:52
    let mut _11: &std::sync::mpsc::Sender<Message>; // in scope 0 at ui/drop/drop-trait-enum.rs:40:17: 40:52
    let mut _12: Message;                // in scope 0 at ui/drop/drop-trait-enum.rs:40:29: 40:51
    let mut _13: !;                      // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/panic.rs:22:9: 22:38
    scope 1 {
        debug sender => _3;              // in scope 1 at ui/drop/drop-trait-enum.rs:36:37: 36:51
    }
    scope 2 {
        debug sender => _8;              // in scope 2 at ui/drop/drop-trait-enum.rs:39:43: 39:57
    }

    bb0: {
        _2 = discriminant((*_1));        // scope 0 at ui/drop/drop-trait-enum.rs:35:15: 35:19
        switchInt(move _2) -> [0: bb3, 1: bb5, 2: bb1, otherwise: bb2]; // scope 0 at ui/drop/drop-trait-enum.rs:35:9: 35:19
    }

    bb1: {
        _13 = begin_panic::<&str>(const "Failed"); // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/panic.rs:22:9: 22:38
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/panic.rs:22:9: 22:32
                                         // + literal: Const { ty: fn(&str) -> ! {begin_panic::<&str>}, val: Value(<ZST>) }
                                         // mir::Constant
                                         // + span: ui/drop/drop-trait-enum.rs:43:24: 43:32
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
    }

    bb2: {
        unreachable;                     // scope 0 at ui/drop/drop-trait-enum.rs:35:15: 35:19
    }

    bb3: {
        _3 = &mut (((*_1) as SimpleVariant).0: std::sync::mpsc::Sender<Message>); // scope 0 at ui/drop/drop-trait-enum.rs:36:37: 36:51
        _6 = &(*_3);                     // scope 1 at ui/drop/drop-trait-enum.rs:37:17: 37:52
        _7 = const Message::DestructorRan; // scope 1 at ui/drop/drop-trait-enum.rs:37:29: 37:51
                                         // mir::Constant
                                         // + span: ui/drop/drop-trait-enum.rs:37:29: 37:51
                                         // + literal: Const { ty: Message, val: Value(Scalar(0x01)) }
        _5 = Sender::<Message>::send(move _6, move _7) -> bb4; // scope 1 at ui/drop/drop-trait-enum.rs:37:17: 37:52
                                         // mir::Constant
                                         // + span: ui/drop/drop-trait-enum.rs:37:24: 37:28
                                         // + literal: Const { ty: for<'a> fn(&'a Sender<Message>, Message) -> Result<(), SendError<Message>> {Sender::<Message>::send}, val: Value(<ZST>) }
    }

    bb4: {
        _4 = Result::<(), SendError<Message>>::unwrap(move _5) -> bb7; // scope 1 at ui/drop/drop-trait-enum.rs:37:17: 37:61
                                         // mir::Constant
                                         // + span: ui/drop/drop-trait-enum.rs:37:53: 37:59
                                         // + literal: Const { ty: fn(Result<(), SendError<Message>>) {Result::<(), SendError<Message>>::unwrap}, val: Value(<ZST>) }
    }

    bb5: {
        _8 = &mut (((*_1) as NestedVariant).2: std::sync::mpsc::Sender<Message>); // scope 0 at ui/drop/drop-trait-enum.rs:39:43: 39:57
        _11 = &(*_8);                    // scope 2 at ui/drop/drop-trait-enum.rs:40:17: 40:52
        _12 = const Message::DestructorRan; // scope 2 at ui/drop/drop-trait-enum.rs:40:29: 40:51
                                         // mir::Constant
                                         // + span: ui/drop/drop-trait-enum.rs:40:29: 40:51
                                         // + literal: Const { ty: Message, val: Value(Scalar(0x01)) }
        _10 = Sender::<Message>::send(move _11, move _12) -> bb6; // scope 2 at ui/drop/drop-trait-enum.rs:40:17: 40:52
                                         // mir::Constant
                                         // + span: ui/drop/drop-trait-enum.rs:40:24: 40:28
                                         // + literal: Const { ty: for<'a> fn(&'a Sender<Message>, Message) -> Result<(), SendError<Message>> {Sender::<Message>::send}, val: Value(<ZST>) }
    }

    bb6: {
        _9 = Result::<(), SendError<Message>>::unwrap(move _10) -> bb7; // scope 2 at ui/drop/drop-trait-enum.rs:40:17: 40:61
                                         // mir::Constant
                                         // + span: ui/drop/drop-trait-enum.rs:40:53: 40:59
                                         // + literal: Const { ty: fn(Result<(), SendError<Message>>) {Result::<(), SendError<Message>>::unwrap}, val: Value(<ZST>) }
    }

    bb7: {
        return;                          // scope 0 at ui/drop/drop-trait-enum.rs:46:6: 46:6
    }
}

fn main() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/drop/drop-trait-enum.rs:49:15: 49:15
    let _1: std::sync::mpsc::Sender<Message>; // in scope 0 at ui/drop/drop-trait-enum.rs:50:10: 50:16
    let _2: std::sync::mpsc::Receiver<Message>; // in scope 0 at ui/drop/drop-trait-enum.rs:50:18: 50:26
    let mut _3: (std::sync::mpsc::Sender<Message>, std::sync::mpsc::Receiver<Message>); // in scope 0 at ui/drop/drop-trait-enum.rs:50:30: 50:39
    let mut _5: std::sync::mpsc::Sender<Message>; // in scope 0 at ui/drop/drop-trait-enum.rs:52:36: 52:42
    let mut _6: (&Message, &Message);    // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _7: &Message;                // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let _8: Message;                     // in scope 0 at ui/drop/drop-trait-enum.rs:54:16: 54:40
    let mut _9: std::result::Result<Message, std::sync::mpsc::RecvError>; // in scope 0 at ui/drop/drop-trait-enum.rs:54:16: 54:31
    let mut _10: &std::sync::mpsc::Receiver<Message>; // in scope 0 at ui/drop/drop-trait-enum.rs:54:16: 54:31
    let mut _11: &Message;               // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _14: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    let mut _15: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
    let mut _16: &Message;               // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
    let mut _17: &Message;               // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
    let _19: !;                          // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
    let mut _20: core::panicking::AssertKind; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
    let mut _21: &Message;               // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let _22: &Message;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let mut _23: &Message;               // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let _24: &Message;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let mut _25: std::option::Option<std::fmt::Arguments<'_>>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
    let mut _26: (&std::option::Option<Message>, &std::option::Option<Message>); // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _27: &std::option::Option<Message>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let _28: std::option::Option<Message>; // in scope 0 at ui/drop/drop-trait-enum.rs:55:16: 55:36
    let mut _29: std::result::Result<Message, std::sync::mpsc::RecvError>; // in scope 0 at ui/drop/drop-trait-enum.rs:55:16: 55:31
    let mut _30: &std::sync::mpsc::Receiver<Message>; // in scope 0 at ui/drop/drop-trait-enum.rs:55:16: 55:31
    let mut _31: &std::option::Option<Message>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _34: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    let mut _35: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
    let mut _36: &std::option::Option<Message>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
    let mut _37: &std::option::Option<Message>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
    let _39: !;                          // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
    let mut _40: core::panicking::AssertKind; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
    let mut _41: &std::option::Option<Message>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let _42: &std::option::Option<Message>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let mut _43: &std::option::Option<Message>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let _44: &std::option::Option<Message>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let mut _45: std::option::Option<std::fmt::Arguments<'_>>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
    let mut _48: (std::sync::mpsc::Sender<Message>, std::sync::mpsc::Receiver<Message>); // in scope 0 at ui/drop/drop-trait-enum.rs:57:30: 57:39
    let mut _50: std::boxed::Box<usize>; // in scope 0 at ui/drop/drop-trait-enum.rs:59:36: 59:48
    let mut _51: SendOnDrop;             // in scope 0 at ui/drop/drop-trait-enum.rs:59:50: 59:87
    let mut _52: std::sync::mpsc::Sender<Message>; // in scope 0 at ui/drop/drop-trait-enum.rs:59:71: 59:85
    let mut _53: &std::sync::mpsc::Sender<Message>; // in scope 0 at ui/drop/drop-trait-enum.rs:59:71: 59:85
    let mut _54: std::sync::mpsc::Sender<Message>; // in scope 0 at ui/drop/drop-trait-enum.rs:59:89: 59:95
    let mut _55: (&Message, &Message);   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _56: &Message;               // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let _57: Message;                    // in scope 0 at ui/drop/drop-trait-enum.rs:61:16: 61:40
    let mut _58: std::result::Result<Message, std::sync::mpsc::RecvError>; // in scope 0 at ui/drop/drop-trait-enum.rs:61:16: 61:31
    let mut _59: &std::sync::mpsc::Receiver<Message>; // in scope 0 at ui/drop/drop-trait-enum.rs:61:16: 61:31
    let mut _60: &Message;               // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _63: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    let mut _64: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
    let mut _65: &Message;               // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
    let mut _66: &Message;               // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
    let _68: !;                          // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
    let mut _69: core::panicking::AssertKind; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
    let mut _70: &Message;               // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let _71: &Message;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let mut _72: &Message;               // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let _73: &Message;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let mut _74: std::option::Option<std::fmt::Arguments<'_>>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
    let mut _75: (&Message, &Message);   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _76: &Message;               // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let _77: Message;                    // in scope 0 at ui/drop/drop-trait-enum.rs:62:16: 62:40
    let mut _78: std::result::Result<Message, std::sync::mpsc::RecvError>; // in scope 0 at ui/drop/drop-trait-enum.rs:62:16: 62:31
    let mut _79: &std::sync::mpsc::Receiver<Message>; // in scope 0 at ui/drop/drop-trait-enum.rs:62:16: 62:31
    let mut _80: &Message;               // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _83: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    let mut _84: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
    let mut _85: &Message;               // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
    let mut _86: &Message;               // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
    let _88: !;                          // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
    let mut _89: core::panicking::AssertKind; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
    let mut _90: &Message;               // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let _91: &Message;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let mut _92: &Message;               // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let _93: &Message;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let mut _94: std::option::Option<std::fmt::Arguments<'_>>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
    let mut _95: (&std::option::Option<Message>, &std::option::Option<Message>); // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _96: &std::option::Option<Message>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let _97: std::option::Option<Message>; // in scope 0 at ui/drop/drop-trait-enum.rs:63:16: 63:36
    let mut _98: std::result::Result<Message, std::sync::mpsc::RecvError>; // in scope 0 at ui/drop/drop-trait-enum.rs:63:16: 63:31
    let mut _99: &std::sync::mpsc::Receiver<Message>; // in scope 0 at ui/drop/drop-trait-enum.rs:63:16: 63:31
    let mut _100: &std::option::Option<Message>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _103: bool;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    let mut _104: bool;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
    let mut _105: &std::option::Option<Message>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
    let mut _106: &std::option::Option<Message>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
    let _108: !;                         // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
    let mut _109: core::panicking::AssertKind; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
    let mut _110: &std::option::Option<Message>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let _111: &std::option::Option<Message>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let mut _112: &std::option::Option<Message>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let _113: &std::option::Option<Message>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let mut _114: std::option::Option<std::fmt::Arguments<'_>>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
    let mut _117: (std::sync::mpsc::Sender<Message>, std::sync::mpsc::Receiver<Message>); // in scope 0 at ui/drop/drop-trait-enum.rs:65:30: 65:39
    let mut _119: [closure@ui/drop/drop-trait-enum.rs:66:27: 66:33]; // in scope 0 at ui/drop/drop-trait-enum.rs:66:27: 68:6
    let mut _120: (&Message, &Message);  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _121: &Message;              // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let _122: Message;                   // in scope 0 at ui/drop/drop-trait-enum.rs:69:16: 69:40
    let mut _123: std::result::Result<Message, std::sync::mpsc::RecvError>; // in scope 0 at ui/drop/drop-trait-enum.rs:69:16: 69:31
    let mut _124: &std::sync::mpsc::Receiver<Message>; // in scope 0 at ui/drop/drop-trait-enum.rs:69:16: 69:31
    let mut _125: &Message;              // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _128: bool;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    let mut _129: bool;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
    let mut _130: &Message;              // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
    let mut _131: &Message;              // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
    let _133: !;                         // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
    let mut _134: core::panicking::AssertKind; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
    let mut _135: &Message;              // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let _136: &Message;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let mut _137: &Message;              // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let _138: &Message;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let mut _139: std::option::Option<std::fmt::Arguments<'_>>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
    let mut _140: (&std::option::Option<Message>, &std::option::Option<Message>); // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _141: &std::option::Option<Message>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let _142: std::option::Option<Message>; // in scope 0 at ui/drop/drop-trait-enum.rs:70:16: 70:36
    let mut _143: std::result::Result<Message, std::sync::mpsc::RecvError>; // in scope 0 at ui/drop/drop-trait-enum.rs:70:16: 70:31
    let mut _144: &std::sync::mpsc::Receiver<Message>; // in scope 0 at ui/drop/drop-trait-enum.rs:70:16: 70:31
    let mut _145: &std::option::Option<Message>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _148: bool;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    let mut _149: bool;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
    let mut _150: &std::option::Option<Message>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
    let mut _151: &std::option::Option<Message>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
    let _153: !;                         // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
    let mut _154: core::panicking::AssertKind; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
    let mut _155: &std::option::Option<Message>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let _156: &std::option::Option<Message>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let mut _157: &std::option::Option<Message>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let _158: &std::option::Option<Message>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let mut _159: std::option::Option<std::fmt::Arguments<'_>>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
    let _160: ();                        // in scope 0 at ui/drop/drop-trait-enum.rs:71:5: 71:19
    let mut _161: std::result::Result<(), std::boxed::Box<dyn std::any::Any + std::marker::Send>>; // in scope 0 at ui/drop/drop-trait-enum.rs:71:10: 71:18
    let mut _162: std::thread::JoinHandle<()>; // in scope 0 at ui/drop/drop-trait-enum.rs:71:10: 71:11
    let mut _165: (std::sync::mpsc::Sender<Message>, std::sync::mpsc::Receiver<Message>); // in scope 0 at ui/drop/drop-trait-enum.rs:73:30: 73:39
    let mut _167: [closure@ui/drop/drop-trait-enum.rs:75:23: 75:29]; // in scope 0 at ui/drop/drop-trait-enum.rs:75:23: 84:10
    let mut _168: (&Message, &Message);  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _169: &Message;              // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let _170: Message;                   // in scope 0 at ui/drop/drop-trait-enum.rs:86:16: 86:40
    let mut _171: std::result::Result<Message, std::sync::mpsc::RecvError>; // in scope 0 at ui/drop/drop-trait-enum.rs:86:16: 86:31
    let mut _172: &std::sync::mpsc::Receiver<Message>; // in scope 0 at ui/drop/drop-trait-enum.rs:86:16: 86:31
    let mut _173: &Message;              // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _176: bool;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    let mut _177: bool;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
    let mut _178: &Message;              // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
    let mut _179: &Message;              // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
    let _181: !;                         // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
    let mut _182: core::panicking::AssertKind; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
    let mut _183: &Message;              // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let _184: &Message;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let mut _185: &Message;              // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let _186: &Message;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let mut _187: std::option::Option<std::fmt::Arguments<'_>>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
    let mut _188: (&Message, &Message);  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _189: &Message;              // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let _190: Message;                   // in scope 0 at ui/drop/drop-trait-enum.rs:87:16: 87:40
    let mut _191: std::result::Result<Message, std::sync::mpsc::RecvError>; // in scope 0 at ui/drop/drop-trait-enum.rs:87:16: 87:31
    let mut _192: &std::sync::mpsc::Receiver<Message>; // in scope 0 at ui/drop/drop-trait-enum.rs:87:16: 87:31
    let mut _193: &Message;              // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _196: bool;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    let mut _197: bool;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
    let mut _198: &Message;              // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
    let mut _199: &Message;              // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
    let _201: !;                         // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
    let mut _202: core::panicking::AssertKind; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
    let mut _203: &Message;              // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let _204: &Message;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let mut _205: &Message;              // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let _206: &Message;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let mut _207: std::option::Option<std::fmt::Arguments<'_>>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
    let mut _208: (&Message, &Message);  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _209: &Message;              // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let _210: Message;                   // in scope 0 at ui/drop/drop-trait-enum.rs:88:16: 88:40
    let mut _211: std::result::Result<Message, std::sync::mpsc::RecvError>; // in scope 0 at ui/drop/drop-trait-enum.rs:88:16: 88:31
    let mut _212: &std::sync::mpsc::Receiver<Message>; // in scope 0 at ui/drop/drop-trait-enum.rs:88:16: 88:31
    let mut _213: &Message;              // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _216: bool;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    let mut _217: bool;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
    let mut _218: &Message;              // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
    let mut _219: &Message;              // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
    let _221: !;                         // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
    let mut _222: core::panicking::AssertKind; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
    let mut _223: &Message;              // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let _224: &Message;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let mut _225: &Message;              // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let _226: &Message;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let mut _227: std::option::Option<std::fmt::Arguments<'_>>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
    let mut _228: (&Message, &Message);  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _229: &Message;              // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let _230: Message;                   // in scope 0 at ui/drop/drop-trait-enum.rs:89:16: 89:40
    let mut _231: std::result::Result<Message, std::sync::mpsc::RecvError>; // in scope 0 at ui/drop/drop-trait-enum.rs:89:16: 89:31
    let mut _232: &std::sync::mpsc::Receiver<Message>; // in scope 0 at ui/drop/drop-trait-enum.rs:89:16: 89:31
    let mut _233: &Message;              // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _236: bool;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    let mut _237: bool;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
    let mut _238: &Message;              // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
    let mut _239: &Message;              // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
    let _241: !;                         // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
    let mut _242: core::panicking::AssertKind; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
    let mut _243: &Message;              // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let _244: &Message;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let mut _245: &Message;              // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let _246: &Message;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let mut _247: std::option::Option<std::fmt::Arguments<'_>>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
    let mut _248: (&Message, &Message);  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _249: &Message;              // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let _250: Message;                   // in scope 0 at ui/drop/drop-trait-enum.rs:90:16: 90:40
    let mut _251: std::result::Result<Message, std::sync::mpsc::RecvError>; // in scope 0 at ui/drop/drop-trait-enum.rs:90:16: 90:31
    let mut _252: &std::sync::mpsc::Receiver<Message>; // in scope 0 at ui/drop/drop-trait-enum.rs:90:16: 90:31
    let mut _253: &Message;              // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _256: bool;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    let mut _257: bool;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
    let mut _258: &Message;              // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
    let mut _259: &Message;              // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
    let _261: !;                         // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
    let mut _262: core::panicking::AssertKind; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
    let mut _263: &Message;              // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let _264: &Message;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let mut _265: &Message;              // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let _266: &Message;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let mut _267: std::option::Option<std::fmt::Arguments<'_>>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
    let mut _268: (&Message, &Message);  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _269: &Message;              // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let _270: Message;                   // in scope 0 at ui/drop/drop-trait-enum.rs:91:16: 91:40
    let mut _271: std::result::Result<Message, std::sync::mpsc::RecvError>; // in scope 0 at ui/drop/drop-trait-enum.rs:91:16: 91:31
    let mut _272: &std::sync::mpsc::Receiver<Message>; // in scope 0 at ui/drop/drop-trait-enum.rs:91:16: 91:31
    let mut _273: &Message;              // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _276: bool;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    let mut _277: bool;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
    let mut _278: &Message;              // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
    let mut _279: &Message;              // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
    let _281: !;                         // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
    let mut _282: core::panicking::AssertKind; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
    let mut _283: &Message;              // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let _284: &Message;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let mut _285: &Message;              // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let _286: &Message;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let mut _287: std::option::Option<std::fmt::Arguments<'_>>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
    let mut _288: (&std::option::Option<Message>, &std::option::Option<Message>); // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _289: &std::option::Option<Message>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let _290: std::option::Option<Message>; // in scope 0 at ui/drop/drop-trait-enum.rs:92:16: 92:36
    let mut _291: std::result::Result<Message, std::sync::mpsc::RecvError>; // in scope 0 at ui/drop/drop-trait-enum.rs:92:16: 92:31
    let mut _292: &std::sync::mpsc::Receiver<Message>; // in scope 0 at ui/drop/drop-trait-enum.rs:92:16: 92:31
    let mut _293: &std::option::Option<Message>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _296: bool;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    let mut _297: bool;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
    let mut _298: &std::option::Option<Message>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
    let mut _299: &std::option::Option<Message>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
    let _301: !;                         // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
    let mut _302: core::panicking::AssertKind; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
    let mut _303: &std::option::Option<Message>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let _304: &std::option::Option<Message>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let mut _305: &std::option::Option<Message>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let _306: &std::option::Option<Message>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let mut _307: std::option::Option<std::fmt::Arguments<'_>>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
    let _308: ();                        // in scope 0 at ui/drop/drop-trait-enum.rs:93:5: 93:19
    let mut _309: std::result::Result<(), std::boxed::Box<dyn std::any::Any + std::marker::Send>>; // in scope 0 at ui/drop/drop-trait-enum.rs:93:10: 93:18
    let mut _310: std::thread::JoinHandle<()>; // in scope 0 at ui/drop/drop-trait-enum.rs:93:10: 93:11
    let mut _325: bool;                  // in scope 0 at ui/drop/drop-trait-enum.rs:94:1: 94:2
    let mut _326: bool;                  // in scope 0 at ui/drop/drop-trait-enum.rs:94:1: 94:2
    let mut _327: bool;                  // in scope 0 at ui/drop/drop-trait-enum.rs:94:1: 94:2
    let mut _328: bool;                  // in scope 0 at ui/drop/drop-trait-enum.rs:94:1: 94:2
    let mut _329: bool;                  // in scope 0 at ui/drop/drop-trait-enum.rs:94:1: 94:2
    let mut _330: bool;                  // in scope 0 at ui/drop/drop-trait-enum.rs:94:1: 94:2
    scope 1 {
        debug sender => _1;              // in scope 1 at ui/drop/drop-trait-enum.rs:50:10: 50:16
        debug receiver => _2;            // in scope 1 at ui/drop/drop-trait-enum.rs:50:18: 50:26
        let _4: Foo;                     // in scope 1 at ui/drop/drop-trait-enum.rs:52:13: 52:14
        let _12: &Message;               // in scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        let _13: &Message;               // in scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        let _32: &std::option::Option<Message>; // in scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        let _33: &std::option::Option<Message>; // in scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        let _46: std::sync::mpsc::Sender<Message>; // in scope 1 at ui/drop/drop-trait-enum.rs:57:10: 57:16
        let _47: std::sync::mpsc::Receiver<Message>; // in scope 1 at ui/drop/drop-trait-enum.rs:57:18: 57:26
        let mut _323: &std::option::Option<Message>; // in scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        let mut _324: &Message;          // in scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        scope 2 {
            debug v => _4;               // in scope 2 at ui/drop/drop-trait-enum.rs:52:13: 52:14
        }
        scope 3 {
            debug left_val => _12;       // in scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
            debug right_val => _13;      // in scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
            let _18: core::panicking::AssertKind; // in scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
            scope 4 {
                debug kind => _18;       // in scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
            }
        }
        scope 5 {
            debug left_val => _32;       // in scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
            debug right_val => _33;      // in scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
            let _38: core::panicking::AssertKind; // in scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
            scope 6 {
                debug kind => _38;       // in scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
            }
        }
        scope 7 {
            debug sender => _46;         // in scope 7 at ui/drop/drop-trait-enum.rs:57:10: 57:16
            debug receiver => _47;       // in scope 7 at ui/drop/drop-trait-enum.rs:57:18: 57:26
            let _49: Foo;                // in scope 7 at ui/drop/drop-trait-enum.rs:59:13: 59:14
            let _61: &Message;           // in scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
            let _62: &Message;           // in scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
            let _81: &Message;           // in scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
            let _82: &Message;           // in scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
            let _101: &std::option::Option<Message>; // in scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
            let _102: &std::option::Option<Message>; // in scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
            let _115: std::sync::mpsc::Sender<Message>; // in scope 7 at ui/drop/drop-trait-enum.rs:65:10: 65:16
            let _116: std::sync::mpsc::Receiver<Message>; // in scope 7 at ui/drop/drop-trait-enum.rs:65:18: 65:26
            let mut _320: &std::option::Option<Message>; // in scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
            let mut _321: &Message;      // in scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
            let mut _322: &Message;      // in scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
            scope 8 {
                debug v => _49;          // in scope 8 at ui/drop/drop-trait-enum.rs:59:13: 59:14
            }
            scope 9 {
                debug left_val => _61;   // in scope 9 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
                debug right_val => _62;  // in scope 9 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
                let _67: core::panicking::AssertKind; // in scope 9 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                scope 10 {
                    debug kind => _67;   // in scope 10 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                }
            }
            scope 11 {
                debug left_val => _81;   // in scope 11 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
                debug right_val => _82;  // in scope 11 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
                let _87: core::panicking::AssertKind; // in scope 11 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                scope 12 {
                    debug kind => _87;   // in scope 12 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                }
            }
            scope 13 {
                debug left_val => _101;  // in scope 13 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
                debug right_val => _102; // in scope 13 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
                let _107: core::panicking::AssertKind; // in scope 13 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                scope 14 {
                    debug kind => _107;  // in scope 14 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                }
            }
            scope 15 {
                debug sender => _115;    // in scope 15 at ui/drop/drop-trait-enum.rs:65:10: 65:16
                debug receiver => _116;  // in scope 15 at ui/drop/drop-trait-enum.rs:65:18: 65:26
                let _118: std::thread::JoinHandle<()>; // in scope 15 at ui/drop/drop-trait-enum.rs:66:9: 66:10
                scope 16 {
                    debug t => _118;     // in scope 16 at ui/drop/drop-trait-enum.rs:66:9: 66:10
                    let _126: &Message;  // in scope 16 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
                    let _127: &Message;  // in scope 16 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
                    let _146: &std::option::Option<Message>; // in scope 16 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
                    let _147: &std::option::Option<Message>; // in scope 16 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
                    let _163: std::sync::mpsc::Sender<Message>; // in scope 16 at ui/drop/drop-trait-enum.rs:73:10: 73:16
                    let _164: std::sync::mpsc::Receiver<Message>; // in scope 16 at ui/drop/drop-trait-enum.rs:73:18: 73:26
                    let mut _318: &std::option::Option<Message>; // in scope 16 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                    let mut _319: &Message; // in scope 16 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                    scope 17 {
                        debug left_val => _126; // in scope 17 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
                        debug right_val => _127; // in scope 17 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
                        let _132: core::panicking::AssertKind; // in scope 17 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                        scope 18 {
                            debug kind => _132; // in scope 18 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                        }
                    }
                    scope 19 {
                        debug left_val => _146; // in scope 19 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
                        debug right_val => _147; // in scope 19 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
                        let _152: core::panicking::AssertKind; // in scope 19 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                        scope 20 {
                            debug kind => _152; // in scope 20 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                        }
                    }
                    scope 21 {
                        debug sender => _163; // in scope 21 at ui/drop/drop-trait-enum.rs:73:10: 73:16
                        debug receiver => _164; // in scope 21 at ui/drop/drop-trait-enum.rs:73:18: 73:26
                        let _166: std::thread::JoinHandle<()>; // in scope 21 at ui/drop/drop-trait-enum.rs:74:9: 74:10
                        scope 22 {
                            debug t => _166; // in scope 22 at ui/drop/drop-trait-enum.rs:74:9: 74:10
                            let _174: &Message; // in scope 22 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
                            let _175: &Message; // in scope 22 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
                            let _194: &Message; // in scope 22 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
                            let _195: &Message; // in scope 22 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
                            let _214: &Message; // in scope 22 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
                            let _215: &Message; // in scope 22 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
                            let _234: &Message; // in scope 22 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
                            let _235: &Message; // in scope 22 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
                            let _254: &Message; // in scope 22 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
                            let _255: &Message; // in scope 22 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
                            let _274: &Message; // in scope 22 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
                            let _275: &Message; // in scope 22 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
                            let _294: &std::option::Option<Message>; // in scope 22 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
                            let _295: &std::option::Option<Message>; // in scope 22 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
                            let mut _311: &std::option::Option<Message>; // in scope 22 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                            let mut _312: &Message; // in scope 22 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                            let mut _313: &Message; // in scope 22 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                            let mut _314: &Message; // in scope 22 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                            let mut _315: &Message; // in scope 22 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                            let mut _316: &Message; // in scope 22 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                            let mut _317: &Message; // in scope 22 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                            scope 23 {
                                debug left_val => _174; // in scope 23 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
                                debug right_val => _175; // in scope 23 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
                                let _180: core::panicking::AssertKind; // in scope 23 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                                scope 24 {
                                    debug kind => _180; // in scope 24 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                                }
                            }
                            scope 25 {
                                debug left_val => _194; // in scope 25 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
                                debug right_val => _195; // in scope 25 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
                                let _200: core::panicking::AssertKind; // in scope 25 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                                scope 26 {
                                    debug kind => _200; // in scope 26 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                                }
                            }
                            scope 27 {
                                debug left_val => _214; // in scope 27 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
                                debug right_val => _215; // in scope 27 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
                                let _220: core::panicking::AssertKind; // in scope 27 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                                scope 28 {
                                    debug kind => _220; // in scope 28 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                                }
                            }
                            scope 29 {
                                debug left_val => _234; // in scope 29 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
                                debug right_val => _235; // in scope 29 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
                                let _240: core::panicking::AssertKind; // in scope 29 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                                scope 30 {
                                    debug kind => _240; // in scope 30 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                                }
                            }
                            scope 31 {
                                debug left_val => _254; // in scope 31 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
                                debug right_val => _255; // in scope 31 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
                                let _260: core::panicking::AssertKind; // in scope 31 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                                scope 32 {
                                    debug kind => _260; // in scope 32 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                                }
                            }
                            scope 33 {
                                debug left_val => _274; // in scope 33 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
                                debug right_val => _275; // in scope 33 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
                                let _280: core::panicking::AssertKind; // in scope 33 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                                scope 34 {
                                    debug kind => _280; // in scope 34 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                                }
                            }
                            scope 35 {
                                debug left_val => _294; // in scope 35 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
                                debug right_val => _295; // in scope 35 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
                                let _300: core::panicking::AssertKind; // in scope 35 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                                scope 36 {
                                    debug kind => _300; // in scope 36 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                                }
                            }
                        }
                    }
                }
            }
        }
    }

    bb0: {
        _325 = const false;              // scope 0 at ui/drop/drop-trait-enum.rs:50:30: 50:39
        _326 = const false;              // scope 0 at ui/drop/drop-trait-enum.rs:50:30: 50:39
        _327 = const false;              // scope 0 at ui/drop/drop-trait-enum.rs:50:30: 50:39
        _328 = const false;              // scope 0 at ui/drop/drop-trait-enum.rs:50:30: 50:39
        _329 = const false;              // scope 0 at ui/drop/drop-trait-enum.rs:50:30: 50:39
        _330 = const false;              // scope 0 at ui/drop/drop-trait-enum.rs:50:30: 50:39
        _3 = channel::<Message>() -> bb1; // scope 0 at ui/drop/drop-trait-enum.rs:50:30: 50:39
                                         // mir::Constant
                                         // + span: ui/drop/drop-trait-enum.rs:50:30: 50:37
                                         // + literal: Const { ty: fn() -> (Sender<Message>, std::sync::mpsc::Receiver<Message>) {channel::<Message>}, val: Value(<ZST>) }
    }

    bb1: {
        _330 = const true;               // scope 0 at ui/drop/drop-trait-enum.rs:50:10: 50:16
        _1 = move (_3.0: std::sync::mpsc::Sender<Message>); // scope 0 at ui/drop/drop-trait-enum.rs:50:10: 50:16
        _2 = move (_3.1: std::sync::mpsc::Receiver<Message>); // scope 0 at ui/drop/drop-trait-enum.rs:50:18: 50:26
        _330 = const false;              // scope 1 at ui/drop/drop-trait-enum.rs:52:36: 52:42
        _5 = move _1;                    // scope 1 at ui/drop/drop-trait-enum.rs:52:36: 52:42
        _4 = Foo::SimpleVariant(move _5); // scope 1 at ui/drop/drop-trait-enum.rs:52:17: 52:43
        drop(_4) -> [return: bb2, unwind: bb93]; // scope 1 at ui/drop/drop-trait-enum.rs:53:5: 53:6
    }

    bb2: {
        _10 = &_2;                       // scope 1 at ui/drop/drop-trait-enum.rs:54:16: 54:31
        _9 = std::sync::mpsc::Receiver::<Message>::recv(move _10) -> [return: bb3, unwind: bb93]; // scope 1 at ui/drop/drop-trait-enum.rs:54:16: 54:31
                                         // mir::Constant
                                         // + span: ui/drop/drop-trait-enum.rs:54:25: 54:29
                                         // + literal: Const { ty: for<'a> fn(&'a std::sync::mpsc::Receiver<Message>) -> Result<Message, RecvError> {std::sync::mpsc::Receiver::<Message>::recv}, val: Value(<ZST>) }
    }

    bb3: {
        _8 = Result::<Message, RecvError>::unwrap(move _9) -> [return: bb4, unwind: bb93]; // scope 1 at ui/drop/drop-trait-enum.rs:54:16: 54:40
                                         // mir::Constant
                                         // + span: ui/drop/drop-trait-enum.rs:54:32: 54:38
                                         // + literal: Const { ty: fn(Result<Message, RecvError>) -> Message {Result::<Message, RecvError>::unwrap}, val: Value(<ZST>) }
    }

    bb4: {
        _7 = &_8;                        // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _324 = const _;                  // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // + literal: Const { ty: &Message, val: Unevaluated(main, [], Some(promoted[13])) }
        _11 = _324;                      // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _6 = (move _7, move _11);        // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _12 = (_6.0: &Message);          // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _13 = (_6.1: &Message);          // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _16 = _12;                       // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
        _17 = _13;                       // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
        _15 = <Message as PartialEq>::eq(move _16, move _17) -> [return: bb5, unwind: bb93]; // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a Message, &'b Message) -> bool {<Message as PartialEq>::eq}, val: Value(<ZST>) }
    }

    bb5: {
        _14 = Not(move _15);             // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
        switchInt(move _14) -> [0: bb7, otherwise: bb6]; // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    }

    bb6: {
        _18 = const core::panicking::AssertKind::Eq; // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _20 = const core::panicking::AssertKind::Eq; // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _22 = _12;                       // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _21 = _22;                       // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _24 = _13;                       // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _23 = _24;                       // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _25 = Option::<Arguments<'_>>::None; // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
        _19 = core::panicking::assert_failed::<Message, Message>(move _20, move _21, move _23, move _25) -> bb93; // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:53
                                         // + literal: Const { ty: for<'a, 'b, 'c> fn(core::panicking::AssertKind, &'a Message, &'b Message, Option<Arguments<'c>>) -> ! {core::panicking::assert_failed::<Message, Message>}, val: Value(<ZST>) }
    }

    bb7: {
        _30 = &_2;                       // scope 1 at ui/drop/drop-trait-enum.rs:55:16: 55:31
        _29 = std::sync::mpsc::Receiver::<Message>::recv(move _30) -> [return: bb8, unwind: bb93]; // scope 1 at ui/drop/drop-trait-enum.rs:55:16: 55:31
                                         // mir::Constant
                                         // + span: ui/drop/drop-trait-enum.rs:55:25: 55:29
                                         // + literal: Const { ty: for<'a> fn(&'a std::sync::mpsc::Receiver<Message>) -> Result<Message, RecvError> {std::sync::mpsc::Receiver::<Message>::recv}, val: Value(<ZST>) }
    }

    bb8: {
        _28 = Result::<Message, RecvError>::ok(move _29) -> [return: bb9, unwind: bb93]; // scope 1 at ui/drop/drop-trait-enum.rs:55:16: 55:36
                                         // mir::Constant
                                         // + span: ui/drop/drop-trait-enum.rs:55:32: 55:34
                                         // + literal: Const { ty: fn(Result<Message, RecvError>) -> Option<Message> {Result::<Message, RecvError>::ok}, val: Value(<ZST>) }
    }

    bb9: {
        _27 = &_28;                      // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _323 = const _;                  // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // + literal: Const { ty: &Option<Message>, val: Unevaluated(main, [], Some(promoted[12])) }
        _31 = _323;                      // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _26 = (move _27, move _31);      // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _32 = (_26.0: &std::option::Option<Message>); // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _33 = (_26.1: &std::option::Option<Message>); // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _36 = _32;                       // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
        _37 = _33;                       // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
        _35 = <Option<Message> as PartialEq>::eq(move _36, move _37) -> [return: bb10, unwind: bb93]; // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a Option<Message>, &'b Option<Message>) -> bool {<Option<Message> as PartialEq>::eq}, val: Value(<ZST>) }
    }

    bb10: {
        _34 = Not(move _35);             // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
        switchInt(move _34) -> [0: bb12, otherwise: bb11]; // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    }

    bb11: {
        _38 = const core::panicking::AssertKind::Eq; // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _40 = const core::panicking::AssertKind::Eq; // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _42 = _32;                       // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _41 = _42;                       // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _44 = _33;                       // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _43 = _44;                       // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _45 = Option::<Arguments<'_>>::None; // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
        _39 = core::panicking::assert_failed::<Option<Message>, Option<Message>>(move _40, move _41, move _43, move _45) -> bb93; // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:53
                                         // + literal: Const { ty: for<'a, 'b, 'c> fn(core::panicking::AssertKind, &'a Option<Message>, &'b Option<Message>, Option<Arguments<'c>>) -> ! {core::panicking::assert_failed::<Option<Message>, Option<Message>>}, val: Value(<ZST>) }
    }

    bb12: {
        _48 = channel::<Message>() -> [return: bb13, unwind: bb93]; // scope 1 at ui/drop/drop-trait-enum.rs:57:30: 57:39
                                         // mir::Constant
                                         // + span: ui/drop/drop-trait-enum.rs:57:30: 57:37
                                         // + literal: Const { ty: fn() -> (Sender<Message>, std::sync::mpsc::Receiver<Message>) {channel::<Message>}, val: Value(<ZST>) }
    }

    bb13: {
        _329 = const true;               // scope 1 at ui/drop/drop-trait-enum.rs:57:10: 57:16
        _46 = move (_48.0: std::sync::mpsc::Sender<Message>); // scope 1 at ui/drop/drop-trait-enum.rs:57:10: 57:16
        _47 = move (_48.1: std::sync::mpsc::Receiver<Message>); // scope 1 at ui/drop/drop-trait-enum.rs:57:18: 57:26
        _50 = Box::<usize>::new(const 42_usize) -> [return: bb14, unwind: bb92]; // scope 7 at ui/drop/drop-trait-enum.rs:59:36: 59:48
                                         // mir::Constant
                                         // + span: ui/drop/drop-trait-enum.rs:59:36: 59:44
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: fn(usize) -> Box<usize> {Box::<usize>::new}, val: Value(<ZST>) }
    }

    bb14: {
        _53 = &_46;                      // scope 7 at ui/drop/drop-trait-enum.rs:59:71: 59:85
        _52 = <Sender<Message> as Clone>::clone(move _53) -> [return: bb15, unwind: bb91]; // scope 7 at ui/drop/drop-trait-enum.rs:59:71: 59:85
                                         // mir::Constant
                                         // + span: ui/drop/drop-trait-enum.rs:59:78: 59:83
                                         // + literal: Const { ty: for<'a> fn(&'a Sender<Message>) -> Sender<Message> {<Sender<Message> as Clone>::clone}, val: Value(<ZST>) }
    }

    bb15: {
        _51 = SendOnDrop { sender: move _52 }; // scope 7 at ui/drop/drop-trait-enum.rs:59:50: 59:87
        _329 = const false;              // scope 7 at ui/drop/drop-trait-enum.rs:59:89: 59:95
        _54 = move _46;                  // scope 7 at ui/drop/drop-trait-enum.rs:59:89: 59:95
        _49 = Foo::NestedVariant(move _50, move _51, move _54); // scope 7 at ui/drop/drop-trait-enum.rs:59:17: 59:96
        drop(_49) -> [return: bb16, unwind: bb92]; // scope 7 at ui/drop/drop-trait-enum.rs:60:5: 60:6
    }

    bb16: {
        _59 = &_47;                      // scope 7 at ui/drop/drop-trait-enum.rs:61:16: 61:31
        _58 = std::sync::mpsc::Receiver::<Message>::recv(move _59) -> [return: bb17, unwind: bb92]; // scope 7 at ui/drop/drop-trait-enum.rs:61:16: 61:31
                                         // mir::Constant
                                         // + span: ui/drop/drop-trait-enum.rs:61:25: 61:29
                                         // + literal: Const { ty: for<'a> fn(&'a std::sync::mpsc::Receiver<Message>) -> Result<Message, RecvError> {std::sync::mpsc::Receiver::<Message>::recv}, val: Value(<ZST>) }
    }

    bb17: {
        _57 = Result::<Message, RecvError>::unwrap(move _58) -> [return: bb18, unwind: bb92]; // scope 7 at ui/drop/drop-trait-enum.rs:61:16: 61:40
                                         // mir::Constant
                                         // + span: ui/drop/drop-trait-enum.rs:61:32: 61:38
                                         // + literal: Const { ty: fn(Result<Message, RecvError>) -> Message {Result::<Message, RecvError>::unwrap}, val: Value(<ZST>) }
    }

    bb18: {
        _56 = &_57;                      // scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _322 = const _;                  // scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // + literal: Const { ty: &Message, val: Unevaluated(main, [], Some(promoted[11])) }
        _60 = _322;                      // scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _55 = (move _56, move _60);      // scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _61 = (_55.0: &Message);         // scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _62 = (_55.1: &Message);         // scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _65 = _61;                       // scope 9 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
        _66 = _62;                       // scope 9 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
        _64 = <Message as PartialEq>::eq(move _65, move _66) -> [return: bb19, unwind: bb92]; // scope 9 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a Message, &'b Message) -> bool {<Message as PartialEq>::eq}, val: Value(<ZST>) }
    }

    bb19: {
        _63 = Not(move _64);             // scope 9 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
        switchInt(move _63) -> [0: bb21, otherwise: bb20]; // scope 9 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    }

    bb20: {
        _67 = const core::panicking::AssertKind::Eq; // scope 9 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _69 = const core::panicking::AssertKind::Eq; // scope 10 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _71 = _61;                       // scope 10 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _70 = _71;                       // scope 10 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _73 = _62;                       // scope 10 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _72 = _73;                       // scope 10 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _74 = Option::<Arguments<'_>>::None; // scope 10 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
        _68 = core::panicking::assert_failed::<Message, Message>(move _69, move _70, move _72, move _74) -> bb92; // scope 10 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:53
                                         // + literal: Const { ty: for<'a, 'b, 'c> fn(core::panicking::AssertKind, &'a Message, &'b Message, Option<Arguments<'c>>) -> ! {core::panicking::assert_failed::<Message, Message>}, val: Value(<ZST>) }
    }

    bb21: {
        _79 = &_47;                      // scope 7 at ui/drop/drop-trait-enum.rs:62:16: 62:31
        _78 = std::sync::mpsc::Receiver::<Message>::recv(move _79) -> [return: bb22, unwind: bb92]; // scope 7 at ui/drop/drop-trait-enum.rs:62:16: 62:31
                                         // mir::Constant
                                         // + span: ui/drop/drop-trait-enum.rs:62:25: 62:29
                                         // + literal: Const { ty: for<'a> fn(&'a std::sync::mpsc::Receiver<Message>) -> Result<Message, RecvError> {std::sync::mpsc::Receiver::<Message>::recv}, val: Value(<ZST>) }
    }

    bb22: {
        _77 = Result::<Message, RecvError>::unwrap(move _78) -> [return: bb23, unwind: bb92]; // scope 7 at ui/drop/drop-trait-enum.rs:62:16: 62:40
                                         // mir::Constant
                                         // + span: ui/drop/drop-trait-enum.rs:62:32: 62:38
                                         // + literal: Const { ty: fn(Result<Message, RecvError>) -> Message {Result::<Message, RecvError>::unwrap}, val: Value(<ZST>) }
    }

    bb23: {
        _76 = &_77;                      // scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _321 = const _;                  // scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // + literal: Const { ty: &Message, val: Unevaluated(main, [], Some(promoted[10])) }
        _80 = _321;                      // scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _75 = (move _76, move _80);      // scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _81 = (_75.0: &Message);         // scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _82 = (_75.1: &Message);         // scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _85 = _81;                       // scope 11 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
        _86 = _82;                       // scope 11 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
        _84 = <Message as PartialEq>::eq(move _85, move _86) -> [return: bb24, unwind: bb92]; // scope 11 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a Message, &'b Message) -> bool {<Message as PartialEq>::eq}, val: Value(<ZST>) }
    }

    bb24: {
        _83 = Not(move _84);             // scope 11 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
        switchInt(move _83) -> [0: bb26, otherwise: bb25]; // scope 11 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    }

    bb25: {
        _87 = const core::panicking::AssertKind::Eq; // scope 11 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _89 = const core::panicking::AssertKind::Eq; // scope 12 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _91 = _81;                       // scope 12 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _90 = _91;                       // scope 12 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _93 = _82;                       // scope 12 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _92 = _93;                       // scope 12 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _94 = Option::<Arguments<'_>>::None; // scope 12 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
        _88 = core::panicking::assert_failed::<Message, Message>(move _89, move _90, move _92, move _94) -> bb92; // scope 12 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:53
                                         // + literal: Const { ty: for<'a, 'b, 'c> fn(core::panicking::AssertKind, &'a Message, &'b Message, Option<Arguments<'c>>) -> ! {core::panicking::assert_failed::<Message, Message>}, val: Value(<ZST>) }
    }

    bb26: {
        _99 = &_47;                      // scope 7 at ui/drop/drop-trait-enum.rs:63:16: 63:31
        _98 = std::sync::mpsc::Receiver::<Message>::recv(move _99) -> [return: bb27, unwind: bb92]; // scope 7 at ui/drop/drop-trait-enum.rs:63:16: 63:31
                                         // mir::Constant
                                         // + span: ui/drop/drop-trait-enum.rs:63:25: 63:29
                                         // + literal: Const { ty: for<'a> fn(&'a std::sync::mpsc::Receiver<Message>) -> Result<Message, RecvError> {std::sync::mpsc::Receiver::<Message>::recv}, val: Value(<ZST>) }
    }

    bb27: {
        _97 = Result::<Message, RecvError>::ok(move _98) -> [return: bb28, unwind: bb92]; // scope 7 at ui/drop/drop-trait-enum.rs:63:16: 63:36
                                         // mir::Constant
                                         // + span: ui/drop/drop-trait-enum.rs:63:32: 63:34
                                         // + literal: Const { ty: fn(Result<Message, RecvError>) -> Option<Message> {Result::<Message, RecvError>::ok}, val: Value(<ZST>) }
    }

    bb28: {
        _96 = &_97;                      // scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _320 = const _;                  // scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // + literal: Const { ty: &Option<Message>, val: Unevaluated(main, [], Some(promoted[9])) }
        _100 = _320;                     // scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _95 = (move _96, move _100);     // scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _101 = (_95.0: &std::option::Option<Message>); // scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _102 = (_95.1: &std::option::Option<Message>); // scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _105 = _101;                     // scope 13 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
        _106 = _102;                     // scope 13 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
        _104 = <Option<Message> as PartialEq>::eq(move _105, move _106) -> [return: bb29, unwind: bb92]; // scope 13 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a Option<Message>, &'b Option<Message>) -> bool {<Option<Message> as PartialEq>::eq}, val: Value(<ZST>) }
    }

    bb29: {
        _103 = Not(move _104);           // scope 13 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
        switchInt(move _103) -> [0: bb31, otherwise: bb30]; // scope 13 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    }

    bb30: {
        _107 = const core::panicking::AssertKind::Eq; // scope 13 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _109 = const core::panicking::AssertKind::Eq; // scope 14 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _111 = _101;                     // scope 14 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _110 = _111;                     // scope 14 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _113 = _102;                     // scope 14 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _112 = _113;                     // scope 14 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _114 = Option::<Arguments<'_>>::None; // scope 14 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
        _108 = core::panicking::assert_failed::<Option<Message>, Option<Message>>(move _109, move _110, move _112, move _114) -> bb92; // scope 14 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:53
                                         // + literal: Const { ty: for<'a, 'b, 'c> fn(core::panicking::AssertKind, &'a Option<Message>, &'b Option<Message>, Option<Arguments<'c>>) -> ! {core::panicking::assert_failed::<Option<Message>, Option<Message>>}, val: Value(<ZST>) }
    }

    bb31: {
        _117 = channel::<Message>() -> [return: bb32, unwind: bb92]; // scope 7 at ui/drop/drop-trait-enum.rs:65:30: 65:39
                                         // mir::Constant
                                         // + span: ui/drop/drop-trait-enum.rs:65:30: 65:37
                                         // + literal: Const { ty: fn() -> (Sender<Message>, std::sync::mpsc::Receiver<Message>) {channel::<Message>}, val: Value(<ZST>) }
    }

    bb32: {
        _328 = const true;               // scope 7 at ui/drop/drop-trait-enum.rs:65:10: 65:16
        _115 = move (_117.0: std::sync::mpsc::Sender<Message>); // scope 7 at ui/drop/drop-trait-enum.rs:65:10: 65:16
        _116 = move (_117.1: std::sync::mpsc::Receiver<Message>); // scope 7 at ui/drop/drop-trait-enum.rs:65:18: 65:26
        _328 = const false;              // scope 15 at ui/drop/drop-trait-enum.rs:66:27: 68:6
        _119 = [closure@ui/drop/drop-trait-enum.rs:66:27: 66:33] { sender: move _115 }; // scope 15 at ui/drop/drop-trait-enum.rs:66:27: 68:6
                                         // closure
                                         // + def_id: DefId(0:25 ~ drop_trait_enum[45bd]::main::{closure#0})
                                         // + substs: [
                                         //     i32,
                                         //     extern "rust-call" fn(()),
                                         //     (std::sync::mpsc::Sender<Message>,),
                                         // ]
        _118 = spawn::<[closure@ui/drop/drop-trait-enum.rs:66:27: 66:33], ()>(move _119) -> [return: bb33, unwind: bb90]; // scope 15 at ui/drop/drop-trait-enum.rs:66:13: 68:7
                                         // mir::Constant
                                         // + span: ui/drop/drop-trait-enum.rs:66:13: 66:26
                                         // + literal: Const { ty: fn([closure@ui/drop/drop-trait-enum.rs:66:27: 66:33]) -> JoinHandle<()> {spawn::<[closure@ui/drop/drop-trait-enum.rs:66:27: 66:33], ()>}, val: Value(<ZST>) }
    }

    bb33: {
        _327 = const true;               // scope 15 at ui/drop/drop-trait-enum.rs:68:6: 68:7
        _124 = &_116;                    // scope 16 at ui/drop/drop-trait-enum.rs:69:16: 69:31
        _123 = std::sync::mpsc::Receiver::<Message>::recv(move _124) -> [return: bb34, unwind: bb100]; // scope 16 at ui/drop/drop-trait-enum.rs:69:16: 69:31
                                         // mir::Constant
                                         // + span: ui/drop/drop-trait-enum.rs:69:25: 69:29
                                         // + literal: Const { ty: for<'a> fn(&'a std::sync::mpsc::Receiver<Message>) -> Result<Message, RecvError> {std::sync::mpsc::Receiver::<Message>::recv}, val: Value(<ZST>) }
    }

    bb34: {
        _122 = Result::<Message, RecvError>::unwrap(move _123) -> [return: bb35, unwind: bb100]; // scope 16 at ui/drop/drop-trait-enum.rs:69:16: 69:40
                                         // mir::Constant
                                         // + span: ui/drop/drop-trait-enum.rs:69:32: 69:38
                                         // + literal: Const { ty: fn(Result<Message, RecvError>) -> Message {Result::<Message, RecvError>::unwrap}, val: Value(<ZST>) }
    }

    bb35: {
        _121 = &_122;                    // scope 16 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _319 = const _;                  // scope 16 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // + literal: Const { ty: &Message, val: Unevaluated(main, [], Some(promoted[8])) }
        _125 = _319;                     // scope 16 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _120 = (move _121, move _125);   // scope 16 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _126 = (_120.0: &Message);       // scope 16 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _127 = (_120.1: &Message);       // scope 16 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _130 = _126;                     // scope 17 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
        _131 = _127;                     // scope 17 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
        _129 = <Message as PartialEq>::eq(move _130, move _131) -> [return: bb36, unwind: bb100]; // scope 17 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a Message, &'b Message) -> bool {<Message as PartialEq>::eq}, val: Value(<ZST>) }
    }

    bb36: {
        _128 = Not(move _129);           // scope 17 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
        switchInt(move _128) -> [0: bb38, otherwise: bb37]; // scope 17 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    }

    bb37: {
        _132 = const core::panicking::AssertKind::Eq; // scope 17 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _134 = const core::panicking::AssertKind::Eq; // scope 18 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _136 = _126;                     // scope 18 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _135 = _136;                     // scope 18 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _138 = _127;                     // scope 18 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _137 = _138;                     // scope 18 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _139 = Option::<Arguments<'_>>::None; // scope 18 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
        _133 = core::panicking::assert_failed::<Message, Message>(move _134, move _135, move _137, move _139) -> bb100; // scope 18 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:53
                                         // + literal: Const { ty: for<'a, 'b, 'c> fn(core::panicking::AssertKind, &'a Message, &'b Message, Option<Arguments<'c>>) -> ! {core::panicking::assert_failed::<Message, Message>}, val: Value(<ZST>) }
    }

    bb38: {
        _144 = &_116;                    // scope 16 at ui/drop/drop-trait-enum.rs:70:16: 70:31
        _143 = std::sync::mpsc::Receiver::<Message>::recv(move _144) -> [return: bb39, unwind: bb100]; // scope 16 at ui/drop/drop-trait-enum.rs:70:16: 70:31
                                         // mir::Constant
                                         // + span: ui/drop/drop-trait-enum.rs:70:25: 70:29
                                         // + literal: Const { ty: for<'a> fn(&'a std::sync::mpsc::Receiver<Message>) -> Result<Message, RecvError> {std::sync::mpsc::Receiver::<Message>::recv}, val: Value(<ZST>) }
    }

    bb39: {
        _142 = Result::<Message, RecvError>::ok(move _143) -> [return: bb40, unwind: bb100]; // scope 16 at ui/drop/drop-trait-enum.rs:70:16: 70:36
                                         // mir::Constant
                                         // + span: ui/drop/drop-trait-enum.rs:70:32: 70:34
                                         // + literal: Const { ty: fn(Result<Message, RecvError>) -> Option<Message> {Result::<Message, RecvError>::ok}, val: Value(<ZST>) }
    }

    bb40: {
        _141 = &_142;                    // scope 16 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _318 = const _;                  // scope 16 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // + literal: Const { ty: &Option<Message>, val: Unevaluated(main, [], Some(promoted[7])) }
        _145 = _318;                     // scope 16 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _140 = (move _141, move _145);   // scope 16 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _146 = (_140.0: &std::option::Option<Message>); // scope 16 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _147 = (_140.1: &std::option::Option<Message>); // scope 16 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _150 = _146;                     // scope 19 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
        _151 = _147;                     // scope 19 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
        _149 = <Option<Message> as PartialEq>::eq(move _150, move _151) -> [return: bb41, unwind: bb100]; // scope 19 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a Option<Message>, &'b Option<Message>) -> bool {<Option<Message> as PartialEq>::eq}, val: Value(<ZST>) }
    }

    bb41: {
        _148 = Not(move _149);           // scope 19 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
        switchInt(move _148) -> [0: bb43, otherwise: bb42]; // scope 19 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    }

    bb42: {
        _152 = const core::panicking::AssertKind::Eq; // scope 19 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _154 = const core::panicking::AssertKind::Eq; // scope 20 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _156 = _146;                     // scope 20 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _155 = _156;                     // scope 20 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _158 = _147;                     // scope 20 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _157 = _158;                     // scope 20 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _159 = Option::<Arguments<'_>>::None; // scope 20 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
        _153 = core::panicking::assert_failed::<Option<Message>, Option<Message>>(move _154, move _155, move _157, move _159) -> bb100; // scope 20 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:53
                                         // + literal: Const { ty: for<'a, 'b, 'c> fn(core::panicking::AssertKind, &'a Option<Message>, &'b Option<Message>, Option<Arguments<'c>>) -> ! {core::panicking::assert_failed::<Option<Message>, Option<Message>>}, val: Value(<ZST>) }
    }

    bb43: {
        _327 = const false;              // scope 16 at ui/drop/drop-trait-enum.rs:71:10: 71:11
        _162 = move _118;                // scope 16 at ui/drop/drop-trait-enum.rs:71:10: 71:11
        _161 = JoinHandle::<()>::join(move _162) -> [return: bb44, unwind: bb100]; // scope 16 at ui/drop/drop-trait-enum.rs:71:10: 71:18
                                         // mir::Constant
                                         // + span: ui/drop/drop-trait-enum.rs:71:12: 71:16
                                         // + literal: Const { ty: fn(JoinHandle<()>) -> Result<(), Box<(dyn Any + Send + 'static)>> {JoinHandle::<()>::join}, val: Value(<ZST>) }
    }

    bb44: {
        _160 = std::mem::drop::<Result<(), Box<dyn Any + Send>>>(move _161) -> [return: bb45, unwind: bb100]; // scope 16 at ui/drop/drop-trait-enum.rs:71:5: 71:19
                                         // mir::Constant
                                         // + span: ui/drop/drop-trait-enum.rs:71:5: 71:9
                                         // + literal: Const { ty: fn(Result<(), Box<dyn Any + Send>>) {std::mem::drop::<Result<(), Box<dyn Any + Send>>>}, val: Value(<ZST>) }
    }

    bb45: {
        _165 = channel::<Message>() -> [return: bb46, unwind: bb100]; // scope 16 at ui/drop/drop-trait-enum.rs:73:30: 73:39
                                         // mir::Constant
                                         // + span: ui/drop/drop-trait-enum.rs:73:30: 73:37
                                         // + literal: Const { ty: fn() -> (Sender<Message>, std::sync::mpsc::Receiver<Message>) {channel::<Message>}, val: Value(<ZST>) }
    }

    bb46: {
        _326 = const true;               // scope 16 at ui/drop/drop-trait-enum.rs:73:10: 73:16
        _163 = move (_165.0: std::sync::mpsc::Sender<Message>); // scope 16 at ui/drop/drop-trait-enum.rs:73:10: 73:16
        _164 = move (_165.1: std::sync::mpsc::Receiver<Message>); // scope 16 at ui/drop/drop-trait-enum.rs:73:18: 73:26
        _326 = const false;              // scope 21 at ui/drop/drop-trait-enum.rs:75:23: 84:10
        _167 = [closure@ui/drop/drop-trait-enum.rs:75:23: 75:29] { sender: move _163 }; // scope 21 at ui/drop/drop-trait-enum.rs:75:23: 84:10
                                         // closure
                                         // + def_id: DefId(0:26 ~ drop_trait_enum[45bd]::main::{closure#1})
                                         // + substs: [
                                         //     i32,
                                         //     extern "rust-call" fn(()),
                                         //     (std::sync::mpsc::Sender<Message>,),
                                         // ]
        _166 = spawn::<[closure@ui/drop/drop-trait-enum.rs:75:23: 75:29], ()>(move _167) -> [return: bb47, unwind: bb89]; // scope 21 at ui/drop/drop-trait-enum.rs:75:9: 84:11
                                         // mir::Constant
                                         // + span: ui/drop/drop-trait-enum.rs:75:9: 75:22
                                         // + literal: Const { ty: fn([closure@ui/drop/drop-trait-enum.rs:75:23: 75:29]) -> JoinHandle<()> {spawn::<[closure@ui/drop/drop-trait-enum.rs:75:23: 75:29], ()>}, val: Value(<ZST>) }
    }

    bb47: {
        _325 = const true;               // scope 21 at ui/drop/drop-trait-enum.rs:84:10: 84:11
        _172 = &_164;                    // scope 22 at ui/drop/drop-trait-enum.rs:86:16: 86:31
        _171 = std::sync::mpsc::Receiver::<Message>::recv(move _172) -> [return: bb48, unwind: bb96]; // scope 22 at ui/drop/drop-trait-enum.rs:86:16: 86:31
                                         // mir::Constant
                                         // + span: ui/drop/drop-trait-enum.rs:86:25: 86:29
                                         // + literal: Const { ty: for<'a> fn(&'a std::sync::mpsc::Receiver<Message>) -> Result<Message, RecvError> {std::sync::mpsc::Receiver::<Message>::recv}, val: Value(<ZST>) }
    }

    bb48: {
        _170 = Result::<Message, RecvError>::unwrap(move _171) -> [return: bb49, unwind: bb96]; // scope 22 at ui/drop/drop-trait-enum.rs:86:16: 86:40
                                         // mir::Constant
                                         // + span: ui/drop/drop-trait-enum.rs:86:32: 86:38
                                         // + literal: Const { ty: fn(Result<Message, RecvError>) -> Message {Result::<Message, RecvError>::unwrap}, val: Value(<ZST>) }
    }

    bb49: {
        _169 = &_170;                    // scope 22 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _317 = const _;                  // scope 22 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // + literal: Const { ty: &Message, val: Unevaluated(main, [], Some(promoted[6])) }
        _173 = _317;                     // scope 22 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _168 = (move _169, move _173);   // scope 22 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _174 = (_168.0: &Message);       // scope 22 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _175 = (_168.1: &Message);       // scope 22 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _178 = _174;                     // scope 23 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
        _179 = _175;                     // scope 23 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
        _177 = <Message as PartialEq>::eq(move _178, move _179) -> [return: bb50, unwind: bb96]; // scope 23 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a Message, &'b Message) -> bool {<Message as PartialEq>::eq}, val: Value(<ZST>) }
    }

    bb50: {
        _176 = Not(move _177);           // scope 23 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
        switchInt(move _176) -> [0: bb52, otherwise: bb51]; // scope 23 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    }

    bb51: {
        _180 = const core::panicking::AssertKind::Eq; // scope 23 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _182 = const core::panicking::AssertKind::Eq; // scope 24 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _184 = _174;                     // scope 24 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _183 = _184;                     // scope 24 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _186 = _175;                     // scope 24 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _185 = _186;                     // scope 24 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _187 = Option::<Arguments<'_>>::None; // scope 24 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
        _181 = core::panicking::assert_failed::<Message, Message>(move _182, move _183, move _185, move _187) -> bb96; // scope 24 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:53
                                         // + literal: Const { ty: for<'a, 'b, 'c> fn(core::panicking::AssertKind, &'a Message, &'b Message, Option<Arguments<'c>>) -> ! {core::panicking::assert_failed::<Message, Message>}, val: Value(<ZST>) }
    }

    bb52: {
        _192 = &_164;                    // scope 22 at ui/drop/drop-trait-enum.rs:87:16: 87:31
        _191 = std::sync::mpsc::Receiver::<Message>::recv(move _192) -> [return: bb53, unwind: bb96]; // scope 22 at ui/drop/drop-trait-enum.rs:87:16: 87:31
                                         // mir::Constant
                                         // + span: ui/drop/drop-trait-enum.rs:87:25: 87:29
                                         // + literal: Const { ty: for<'a> fn(&'a std::sync::mpsc::Receiver<Message>) -> Result<Message, RecvError> {std::sync::mpsc::Receiver::<Message>::recv}, val: Value(<ZST>) }
    }

    bb53: {
        _190 = Result::<Message, RecvError>::unwrap(move _191) -> [return: bb54, unwind: bb96]; // scope 22 at ui/drop/drop-trait-enum.rs:87:16: 87:40
                                         // mir::Constant
                                         // + span: ui/drop/drop-trait-enum.rs:87:32: 87:38
                                         // + literal: Const { ty: fn(Result<Message, RecvError>) -> Message {Result::<Message, RecvError>::unwrap}, val: Value(<ZST>) }
    }

    bb54: {
        _189 = &_190;                    // scope 22 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _316 = const _;                  // scope 22 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // + literal: Const { ty: &Message, val: Unevaluated(main, [], Some(promoted[5])) }
        _193 = _316;                     // scope 22 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _188 = (move _189, move _193);   // scope 22 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _194 = (_188.0: &Message);       // scope 22 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _195 = (_188.1: &Message);       // scope 22 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _198 = _194;                     // scope 25 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
        _199 = _195;                     // scope 25 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
        _197 = <Message as PartialEq>::eq(move _198, move _199) -> [return: bb55, unwind: bb96]; // scope 25 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a Message, &'b Message) -> bool {<Message as PartialEq>::eq}, val: Value(<ZST>) }
    }

    bb55: {
        _196 = Not(move _197);           // scope 25 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
        switchInt(move _196) -> [0: bb57, otherwise: bb56]; // scope 25 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    }

    bb56: {
        _200 = const core::panicking::AssertKind::Eq; // scope 25 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _202 = const core::panicking::AssertKind::Eq; // scope 26 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _204 = _194;                     // scope 26 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _203 = _204;                     // scope 26 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _206 = _195;                     // scope 26 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _205 = _206;                     // scope 26 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _207 = Option::<Arguments<'_>>::None; // scope 26 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
        _201 = core::panicking::assert_failed::<Message, Message>(move _202, move _203, move _205, move _207) -> bb96; // scope 26 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:53
                                         // + literal: Const { ty: for<'a, 'b, 'c> fn(core::panicking::AssertKind, &'a Message, &'b Message, Option<Arguments<'c>>) -> ! {core::panicking::assert_failed::<Message, Message>}, val: Value(<ZST>) }
    }

    bb57: {
        _212 = &_164;                    // scope 22 at ui/drop/drop-trait-enum.rs:88:16: 88:31
        _211 = std::sync::mpsc::Receiver::<Message>::recv(move _212) -> [return: bb58, unwind: bb96]; // scope 22 at ui/drop/drop-trait-enum.rs:88:16: 88:31
                                         // mir::Constant
                                         // + span: ui/drop/drop-trait-enum.rs:88:25: 88:29
                                         // + literal: Const { ty: for<'a> fn(&'a std::sync::mpsc::Receiver<Message>) -> Result<Message, RecvError> {std::sync::mpsc::Receiver::<Message>::recv}, val: Value(<ZST>) }
    }

    bb58: {
        _210 = Result::<Message, RecvError>::unwrap(move _211) -> [return: bb59, unwind: bb96]; // scope 22 at ui/drop/drop-trait-enum.rs:88:16: 88:40
                                         // mir::Constant
                                         // + span: ui/drop/drop-trait-enum.rs:88:32: 88:38
                                         // + literal: Const { ty: fn(Result<Message, RecvError>) -> Message {Result::<Message, RecvError>::unwrap}, val: Value(<ZST>) }
    }

    bb59: {
        _209 = &_210;                    // scope 22 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _315 = const _;                  // scope 22 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // + literal: Const { ty: &Message, val: Unevaluated(main, [], Some(promoted[4])) }
        _213 = _315;                     // scope 22 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _208 = (move _209, move _213);   // scope 22 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _214 = (_208.0: &Message);       // scope 22 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _215 = (_208.1: &Message);       // scope 22 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _218 = _214;                     // scope 27 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
        _219 = _215;                     // scope 27 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
        _217 = <Message as PartialEq>::eq(move _218, move _219) -> [return: bb60, unwind: bb96]; // scope 27 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a Message, &'b Message) -> bool {<Message as PartialEq>::eq}, val: Value(<ZST>) }
    }

    bb60: {
        _216 = Not(move _217);           // scope 27 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
        switchInt(move _216) -> [0: bb62, otherwise: bb61]; // scope 27 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    }

    bb61: {
        _220 = const core::panicking::AssertKind::Eq; // scope 27 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _222 = const core::panicking::AssertKind::Eq; // scope 28 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _224 = _214;                     // scope 28 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _223 = _224;                     // scope 28 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _226 = _215;                     // scope 28 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _225 = _226;                     // scope 28 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _227 = Option::<Arguments<'_>>::None; // scope 28 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
        _221 = core::panicking::assert_failed::<Message, Message>(move _222, move _223, move _225, move _227) -> bb96; // scope 28 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:53
                                         // + literal: Const { ty: for<'a, 'b, 'c> fn(core::panicking::AssertKind, &'a Message, &'b Message, Option<Arguments<'c>>) -> ! {core::panicking::assert_failed::<Message, Message>}, val: Value(<ZST>) }
    }

    bb62: {
        _232 = &_164;                    // scope 22 at ui/drop/drop-trait-enum.rs:89:16: 89:31
        _231 = std::sync::mpsc::Receiver::<Message>::recv(move _232) -> [return: bb63, unwind: bb96]; // scope 22 at ui/drop/drop-trait-enum.rs:89:16: 89:31
                                         // mir::Constant
                                         // + span: ui/drop/drop-trait-enum.rs:89:25: 89:29
                                         // + literal: Const { ty: for<'a> fn(&'a std::sync::mpsc::Receiver<Message>) -> Result<Message, RecvError> {std::sync::mpsc::Receiver::<Message>::recv}, val: Value(<ZST>) }
    }

    bb63: {
        _230 = Result::<Message, RecvError>::unwrap(move _231) -> [return: bb64, unwind: bb96]; // scope 22 at ui/drop/drop-trait-enum.rs:89:16: 89:40
                                         // mir::Constant
                                         // + span: ui/drop/drop-trait-enum.rs:89:32: 89:38
                                         // + literal: Const { ty: fn(Result<Message, RecvError>) -> Message {Result::<Message, RecvError>::unwrap}, val: Value(<ZST>) }
    }

    bb64: {
        _229 = &_230;                    // scope 22 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _314 = const _;                  // scope 22 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // + literal: Const { ty: &Message, val: Unevaluated(main, [], Some(promoted[3])) }
        _233 = _314;                     // scope 22 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _228 = (move _229, move _233);   // scope 22 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _234 = (_228.0: &Message);       // scope 22 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _235 = (_228.1: &Message);       // scope 22 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _238 = _234;                     // scope 29 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
        _239 = _235;                     // scope 29 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
        _237 = <Message as PartialEq>::eq(move _238, move _239) -> [return: bb65, unwind: bb96]; // scope 29 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a Message, &'b Message) -> bool {<Message as PartialEq>::eq}, val: Value(<ZST>) }
    }

    bb65: {
        _236 = Not(move _237);           // scope 29 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
        switchInt(move _236) -> [0: bb67, otherwise: bb66]; // scope 29 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    }

    bb66: {
        _240 = const core::panicking::AssertKind::Eq; // scope 29 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _242 = const core::panicking::AssertKind::Eq; // scope 30 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _244 = _234;                     // scope 30 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _243 = _244;                     // scope 30 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _246 = _235;                     // scope 30 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _245 = _246;                     // scope 30 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _247 = Option::<Arguments<'_>>::None; // scope 30 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
        _241 = core::panicking::assert_failed::<Message, Message>(move _242, move _243, move _245, move _247) -> bb96; // scope 30 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:53
                                         // + literal: Const { ty: for<'a, 'b, 'c> fn(core::panicking::AssertKind, &'a Message, &'b Message, Option<Arguments<'c>>) -> ! {core::panicking::assert_failed::<Message, Message>}, val: Value(<ZST>) }
    }

    bb67: {
        _252 = &_164;                    // scope 22 at ui/drop/drop-trait-enum.rs:90:16: 90:31
        _251 = std::sync::mpsc::Receiver::<Message>::recv(move _252) -> [return: bb68, unwind: bb96]; // scope 22 at ui/drop/drop-trait-enum.rs:90:16: 90:31
                                         // mir::Constant
                                         // + span: ui/drop/drop-trait-enum.rs:90:25: 90:29
                                         // + literal: Const { ty: for<'a> fn(&'a std::sync::mpsc::Receiver<Message>) -> Result<Message, RecvError> {std::sync::mpsc::Receiver::<Message>::recv}, val: Value(<ZST>) }
    }

    bb68: {
        _250 = Result::<Message, RecvError>::unwrap(move _251) -> [return: bb69, unwind: bb96]; // scope 22 at ui/drop/drop-trait-enum.rs:90:16: 90:40
                                         // mir::Constant
                                         // + span: ui/drop/drop-trait-enum.rs:90:32: 90:38
                                         // + literal: Const { ty: fn(Result<Message, RecvError>) -> Message {Result::<Message, RecvError>::unwrap}, val: Value(<ZST>) }
    }

    bb69: {
        _249 = &_250;                    // scope 22 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _313 = const _;                  // scope 22 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // + literal: Const { ty: &Message, val: Unevaluated(main, [], Some(promoted[2])) }
        _253 = _313;                     // scope 22 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _248 = (move _249, move _253);   // scope 22 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _254 = (_248.0: &Message);       // scope 22 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _255 = (_248.1: &Message);       // scope 22 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _258 = _254;                     // scope 31 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
        _259 = _255;                     // scope 31 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
        _257 = <Message as PartialEq>::eq(move _258, move _259) -> [return: bb70, unwind: bb96]; // scope 31 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a Message, &'b Message) -> bool {<Message as PartialEq>::eq}, val: Value(<ZST>) }
    }

    bb70: {
        _256 = Not(move _257);           // scope 31 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
        switchInt(move _256) -> [0: bb72, otherwise: bb71]; // scope 31 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    }

    bb71: {
        _260 = const core::panicking::AssertKind::Eq; // scope 31 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _262 = const core::panicking::AssertKind::Eq; // scope 32 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _264 = _254;                     // scope 32 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _263 = _264;                     // scope 32 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _266 = _255;                     // scope 32 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _265 = _266;                     // scope 32 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _267 = Option::<Arguments<'_>>::None; // scope 32 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
        _261 = core::panicking::assert_failed::<Message, Message>(move _262, move _263, move _265, move _267) -> bb96; // scope 32 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:53
                                         // + literal: Const { ty: for<'a, 'b, 'c> fn(core::panicking::AssertKind, &'a Message, &'b Message, Option<Arguments<'c>>) -> ! {core::panicking::assert_failed::<Message, Message>}, val: Value(<ZST>) }
    }

    bb72: {
        _272 = &_164;                    // scope 22 at ui/drop/drop-trait-enum.rs:91:16: 91:31
        _271 = std::sync::mpsc::Receiver::<Message>::recv(move _272) -> [return: bb73, unwind: bb96]; // scope 22 at ui/drop/drop-trait-enum.rs:91:16: 91:31
                                         // mir::Constant
                                         // + span: ui/drop/drop-trait-enum.rs:91:25: 91:29
                                         // + literal: Const { ty: for<'a> fn(&'a std::sync::mpsc::Receiver<Message>) -> Result<Message, RecvError> {std::sync::mpsc::Receiver::<Message>::recv}, val: Value(<ZST>) }
    }

    bb73: {
        _270 = Result::<Message, RecvError>::unwrap(move _271) -> [return: bb74, unwind: bb96]; // scope 22 at ui/drop/drop-trait-enum.rs:91:16: 91:40
                                         // mir::Constant
                                         // + span: ui/drop/drop-trait-enum.rs:91:32: 91:38
                                         // + literal: Const { ty: fn(Result<Message, RecvError>) -> Message {Result::<Message, RecvError>::unwrap}, val: Value(<ZST>) }
    }

    bb74: {
        _269 = &_270;                    // scope 22 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _312 = const _;                  // scope 22 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // + literal: Const { ty: &Message, val: Unevaluated(main, [], Some(promoted[1])) }
        _273 = _312;                     // scope 22 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _268 = (move _269, move _273);   // scope 22 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _274 = (_268.0: &Message);       // scope 22 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _275 = (_268.1: &Message);       // scope 22 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _278 = _274;                     // scope 33 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
        _279 = _275;                     // scope 33 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
        _277 = <Message as PartialEq>::eq(move _278, move _279) -> [return: bb75, unwind: bb96]; // scope 33 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a Message, &'b Message) -> bool {<Message as PartialEq>::eq}, val: Value(<ZST>) }
    }

    bb75: {
        _276 = Not(move _277);           // scope 33 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
        switchInt(move _276) -> [0: bb77, otherwise: bb76]; // scope 33 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    }

    bb76: {
        _280 = const core::panicking::AssertKind::Eq; // scope 33 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _282 = const core::panicking::AssertKind::Eq; // scope 34 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _284 = _274;                     // scope 34 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _283 = _284;                     // scope 34 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _286 = _275;                     // scope 34 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _285 = _286;                     // scope 34 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _287 = Option::<Arguments<'_>>::None; // scope 34 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
        _281 = core::panicking::assert_failed::<Message, Message>(move _282, move _283, move _285, move _287) -> bb96; // scope 34 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:53
                                         // + literal: Const { ty: for<'a, 'b, 'c> fn(core::panicking::AssertKind, &'a Message, &'b Message, Option<Arguments<'c>>) -> ! {core::panicking::assert_failed::<Message, Message>}, val: Value(<ZST>) }
    }

    bb77: {
        _292 = &_164;                    // scope 22 at ui/drop/drop-trait-enum.rs:92:16: 92:31
        _291 = std::sync::mpsc::Receiver::<Message>::recv(move _292) -> [return: bb78, unwind: bb96]; // scope 22 at ui/drop/drop-trait-enum.rs:92:16: 92:31
                                         // mir::Constant
                                         // + span: ui/drop/drop-trait-enum.rs:92:25: 92:29
                                         // + literal: Const { ty: for<'a> fn(&'a std::sync::mpsc::Receiver<Message>) -> Result<Message, RecvError> {std::sync::mpsc::Receiver::<Message>::recv}, val: Value(<ZST>) }
    }

    bb78: {
        _290 = Result::<Message, RecvError>::ok(move _291) -> [return: bb79, unwind: bb96]; // scope 22 at ui/drop/drop-trait-enum.rs:92:16: 92:36
                                         // mir::Constant
                                         // + span: ui/drop/drop-trait-enum.rs:92:32: 92:34
                                         // + literal: Const { ty: fn(Result<Message, RecvError>) -> Option<Message> {Result::<Message, RecvError>::ok}, val: Value(<ZST>) }
    }

    bb79: {
        _289 = &_290;                    // scope 22 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _311 = const _;                  // scope 22 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // + literal: Const { ty: &Option<Message>, val: Unevaluated(main, [], Some(promoted[0])) }
        _293 = _311;                     // scope 22 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _288 = (move _289, move _293);   // scope 22 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _294 = (_288.0: &std::option::Option<Message>); // scope 22 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _295 = (_288.1: &std::option::Option<Message>); // scope 22 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _298 = _294;                     // scope 35 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
        _299 = _295;                     // scope 35 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
        _297 = <Option<Message> as PartialEq>::eq(move _298, move _299) -> [return: bb80, unwind: bb96]; // scope 35 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a Option<Message>, &'b Option<Message>) -> bool {<Option<Message> as PartialEq>::eq}, val: Value(<ZST>) }
    }

    bb80: {
        _296 = Not(move _297);           // scope 35 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
        switchInt(move _296) -> [0: bb82, otherwise: bb81]; // scope 35 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    }

    bb81: {
        _300 = const core::panicking::AssertKind::Eq; // scope 35 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _302 = const core::panicking::AssertKind::Eq; // scope 36 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _304 = _294;                     // scope 36 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _303 = _304;                     // scope 36 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _306 = _295;                     // scope 36 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _305 = _306;                     // scope 36 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _307 = Option::<Arguments<'_>>::None; // scope 36 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
        _301 = core::panicking::assert_failed::<Option<Message>, Option<Message>>(move _302, move _303, move _305, move _307) -> bb96; // scope 36 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:53
                                         // + literal: Const { ty: for<'a, 'b, 'c> fn(core::panicking::AssertKind, &'a Option<Message>, &'b Option<Message>, Option<Arguments<'c>>) -> ! {core::panicking::assert_failed::<Option<Message>, Option<Message>>}, val: Value(<ZST>) }
    }

    bb82: {
        _325 = const false;              // scope 22 at ui/drop/drop-trait-enum.rs:93:10: 93:11
        _310 = move _166;                // scope 22 at ui/drop/drop-trait-enum.rs:93:10: 93:11
        _309 = JoinHandle::<()>::join(move _310) -> [return: bb83, unwind: bb96]; // scope 22 at ui/drop/drop-trait-enum.rs:93:10: 93:18
                                         // mir::Constant
                                         // + span: ui/drop/drop-trait-enum.rs:93:12: 93:16
                                         // + literal: Const { ty: fn(JoinHandle<()>) -> Result<(), Box<(dyn Any + Send + 'static)>> {JoinHandle::<()>::join}, val: Value(<ZST>) }
    }

    bb83: {
        _308 = std::mem::drop::<Result<(), Box<dyn Any + Send>>>(move _309) -> [return: bb84, unwind: bb96]; // scope 22 at ui/drop/drop-trait-enum.rs:93:5: 93:19
                                         // mir::Constant
                                         // + span: ui/drop/drop-trait-enum.rs:93:5: 93:9
                                         // + literal: Const { ty: fn(Result<(), Box<dyn Any + Send>>) {std::mem::drop::<Result<(), Box<dyn Any + Send>>>}, val: Value(<ZST>) }
    }

    bb84: {
        _325 = const false;              // scope 21 at ui/drop/drop-trait-enum.rs:94:1: 94:2
        drop(_164) -> [return: bb85, unwind: bb98]; // scope 16 at ui/drop/drop-trait-enum.rs:94:1: 94:2
    }

    bb85: {
        _326 = const false;              // scope 16 at ui/drop/drop-trait-enum.rs:94:1: 94:2
        _327 = const false;              // scope 15 at ui/drop/drop-trait-enum.rs:94:1: 94:2
        drop(_116) -> [return: bb86, unwind: bb102]; // scope 7 at ui/drop/drop-trait-enum.rs:94:1: 94:2
    }

    bb86: {
        _328 = const false;              // scope 7 at ui/drop/drop-trait-enum.rs:94:1: 94:2
        drop(_47) -> [return: bb87, unwind: bb104]; // scope 1 at ui/drop/drop-trait-enum.rs:94:1: 94:2
    }

    bb87: {
        _329 = const false;              // scope 1 at ui/drop/drop-trait-enum.rs:94:1: 94:2
        drop(_2) -> [return: bb88, unwind: bb106]; // scope 0 at ui/drop/drop-trait-enum.rs:94:1: 94:2
    }

    bb88: {
        _330 = const false;              // scope 0 at ui/drop/drop-trait-enum.rs:94:1: 94:2
        return;                          // scope 0 at ui/drop/drop-trait-enum.rs:94:2: 94:2
    }

    bb89 (cleanup): {
        drop(_164) -> bb98;              // scope 16 at ui/drop/drop-trait-enum.rs:94:1: 94:2
    }

    bb90 (cleanup): {
        drop(_116) -> bb102;             // scope 7 at ui/drop/drop-trait-enum.rs:94:1: 94:2
    }

    bb91 (cleanup): {
        drop(_50) -> bb92;               // scope 7 at ui/drop/drop-trait-enum.rs:59:95: 59:96
    }

    bb92 (cleanup): {
        drop(_47) -> bb104;              // scope 1 at ui/drop/drop-trait-enum.rs:94:1: 94:2
    }

    bb93 (cleanup): {
        drop(_2) -> bb106;               // scope 0 at ui/drop/drop-trait-enum.rs:94:1: 94:2
    }

    bb94 (cleanup): {
        resume;                          // scope 0 at ui/drop/drop-trait-enum.rs:49:1: 94:2
    }

    bb95 (cleanup): {
        drop(_166) -> bb89;              // scope 21 at ui/drop/drop-trait-enum.rs:94:1: 94:2
    }

    bb96 (cleanup): {
        switchInt(_325) -> [0: bb89, otherwise: bb95]; // scope 21 at ui/drop/drop-trait-enum.rs:94:1: 94:2
    }

    bb97 (cleanup): {
        drop(_163) -> bb100;             // scope 16 at ui/drop/drop-trait-enum.rs:94:1: 94:2
    }

    bb98 (cleanup): {
        switchInt(_326) -> [0: bb100, otherwise: bb97]; // scope 16 at ui/drop/drop-trait-enum.rs:94:1: 94:2
    }

    bb99 (cleanup): {
        drop(_118) -> bb90;              // scope 15 at ui/drop/drop-trait-enum.rs:94:1: 94:2
    }

    bb100 (cleanup): {
        switchInt(_327) -> [0: bb90, otherwise: bb99]; // scope 15 at ui/drop/drop-trait-enum.rs:94:1: 94:2
    }

    bb101 (cleanup): {
        drop(_115) -> bb92;              // scope 7 at ui/drop/drop-trait-enum.rs:94:1: 94:2
    }

    bb102 (cleanup): {
        switchInt(_328) -> [0: bb92, otherwise: bb101]; // scope 7 at ui/drop/drop-trait-enum.rs:94:1: 94:2
    }

    bb103 (cleanup): {
        drop(_46) -> bb93;               // scope 1 at ui/drop/drop-trait-enum.rs:94:1: 94:2
    }

    bb104 (cleanup): {
        switchInt(_329) -> [0: bb93, otherwise: bb103]; // scope 1 at ui/drop/drop-trait-enum.rs:94:1: 94:2
    }

    bb105 (cleanup): {
        drop(_1) -> bb94;                // scope 0 at ui/drop/drop-trait-enum.rs:94:1: 94:2
    }

    bb106 (cleanup): {
        switchInt(_330) -> [0: bb94, otherwise: bb105]; // scope 0 at ui/drop/drop-trait-enum.rs:94:1: 94:2
    }
}

promoted[0] in main: &Option<Message> = {
    let mut _0: &std::option::Option<Message>; // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _1: std::option::Option<Message>; // in scope 0 at ui/drop/drop-trait-enum.rs:92:38: 92:42

    bb0: {
        _1 = Option::<Message>::None;    // scope 0 at ui/drop/drop-trait-enum.rs:92:38: 92:42
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    }
}

promoted[1] in main: &Message = {
    let mut _0: &Message;                // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _1: Message;                 // in scope 0 at ui/drop/drop-trait-enum.rs:91:42: 91:58

    bb0: {
        _1 = Message::Dropped;           // scope 0 at ui/drop/drop-trait-enum.rs:91:42: 91:58
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    }
}

promoted[2] in main: &Message = {
    let mut _0: &Message;                // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _1: Message;                 // in scope 0 at ui/drop/drop-trait-enum.rs:90:42: 90:64

    bb0: {
        _1 = Message::DestructorRan;     // scope 0 at ui/drop/drop-trait-enum.rs:90:42: 90:64
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    }
}

promoted[3] in main: &Message = {
    let mut _0: &Message;                // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _1: Message;                 // in scope 0 at ui/drop/drop-trait-enum.rs:89:42: 89:58

    bb0: {
        _1 = Message::Dropped;           // scope 0 at ui/drop/drop-trait-enum.rs:89:42: 89:58
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    }
}

promoted[4] in main: &Message = {
    let mut _0: &Message;                // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _1: Message;                 // in scope 0 at ui/drop/drop-trait-enum.rs:88:42: 88:64

    bb0: {
        _1 = Message::DestructorRan;     // scope 0 at ui/drop/drop-trait-enum.rs:88:42: 88:64
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    }
}

promoted[5] in main: &Message = {
    let mut _0: &Message;                // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _1: Message;                 // in scope 0 at ui/drop/drop-trait-enum.rs:87:42: 87:58

    bb0: {
        _1 = Message::Dropped;           // scope 0 at ui/drop/drop-trait-enum.rs:87:42: 87:58
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    }
}

promoted[6] in main: &Message = {
    let mut _0: &Message;                // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _1: Message;                 // in scope 0 at ui/drop/drop-trait-enum.rs:86:42: 86:64

    bb0: {
        _1 = Message::DestructorRan;     // scope 0 at ui/drop/drop-trait-enum.rs:86:42: 86:64
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    }
}

promoted[7] in main: &Option<Message> = {
    let mut _0: &std::option::Option<Message>; // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _1: std::option::Option<Message>; // in scope 0 at ui/drop/drop-trait-enum.rs:70:38: 70:42

    bb0: {
        _1 = Option::<Message>::None;    // scope 0 at ui/drop/drop-trait-enum.rs:70:38: 70:42
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    }
}

promoted[8] in main: &Message = {
    let mut _0: &Message;                // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _1: Message;                 // in scope 0 at ui/drop/drop-trait-enum.rs:69:42: 69:58

    bb0: {
        _1 = Message::Dropped;           // scope 0 at ui/drop/drop-trait-enum.rs:69:42: 69:58
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    }
}

promoted[9] in main: &Option<Message> = {
    let mut _0: &std::option::Option<Message>; // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _1: std::option::Option<Message>; // in scope 0 at ui/drop/drop-trait-enum.rs:63:38: 63:42

    bb0: {
        _1 = Option::<Message>::None;    // scope 0 at ui/drop/drop-trait-enum.rs:63:38: 63:42
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    }
}

promoted[10] in main: &Message = {
    let mut _0: &Message;                // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _1: Message;                 // in scope 0 at ui/drop/drop-trait-enum.rs:62:42: 62:58

    bb0: {
        _1 = Message::Dropped;           // scope 0 at ui/drop/drop-trait-enum.rs:62:42: 62:58
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    }
}

promoted[11] in main: &Message = {
    let mut _0: &Message;                // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _1: Message;                 // in scope 0 at ui/drop/drop-trait-enum.rs:61:42: 61:64

    bb0: {
        _1 = Message::DestructorRan;     // scope 0 at ui/drop/drop-trait-enum.rs:61:42: 61:64
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    }
}

promoted[12] in main: &Option<Message> = {
    let mut _0: &std::option::Option<Message>; // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _1: std::option::Option<Message>; // in scope 0 at ui/drop/drop-trait-enum.rs:55:38: 55:42

    bb0: {
        _1 = Option::<Message>::None;    // scope 0 at ui/drop/drop-trait-enum.rs:55:38: 55:42
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    }
}

promoted[13] in main: &Message = {
    let mut _0: &Message;                // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _1: Message;                 // in scope 0 at ui/drop/drop-trait-enum.rs:54:42: 54:64

    bb0: {
        _1 = Message::DestructorRan;     // scope 0 at ui/drop/drop-trait-enum.rs:54:42: 54:64
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    }
}

fn main::{closure#0}(_1: [closure@ui/drop/drop-trait-enum.rs:66:27: 66:33]) -> () {
    debug sender => (_1.0: std::sync::mpsc::Sender<Message>); // in scope 0 at ui/drop/drop-trait-enum.rs:65:10: 65:16
    let mut _0: ();                      // return place in scope 0 at ui/drop/drop-trait-enum.rs:66:34: 66:34
    let _2: Foo;                         // in scope 0 at ui/drop/drop-trait-enum.rs:67:13: 67:14
    let mut _3: SendOnDrop;              // in scope 0 at ui/drop/drop-trait-enum.rs:67:48: 67:77
    let mut _4: std::sync::mpsc::Sender<Message>; // in scope 0 at ui/drop/drop-trait-enum.rs:67:69: 67:75
    scope 1 {
        debug v => _2;                   // in scope 1 at ui/drop/drop-trait-enum.rs:67:13: 67:14
    }

    bb0: {
        _4 = move (_1.0: std::sync::mpsc::Sender<Message>); // scope 0 at ui/drop/drop-trait-enum.rs:67:69: 67:75
        _3 = SendOnDrop { sender: move _4 }; // scope 0 at ui/drop/drop-trait-enum.rs:67:48: 67:77
        _2 = Foo::FailingVariant { on_drop: move _3 }; // scope 0 at ui/drop/drop-trait-enum.rs:67:17: 67:79
        drop(_2) -> bb1;                 // scope 0 at ui/drop/drop-trait-enum.rs:68:5: 68:6
    }

    bb1: {
        return;                          // scope 0 at ui/drop/drop-trait-enum.rs:68:6: 68:6
    }
}

fn main::{closure#1}(_1: [closure@ui/drop/drop-trait-enum.rs:75:23: 75:29]) -> () {
    debug sender => (_1.0: std::sync::mpsc::Sender<Message>); // in scope 0 at ui/drop/drop-trait-enum.rs:73:10: 73:16
    let mut _0: ();                      // return place in scope 0 at ui/drop/drop-trait-enum.rs:75:30: 75:30
    let mut _2: Foo;                     // in scope 0 at ui/drop/drop-trait-enum.rs:76:17: 76:22
    let mut _3: std::boxed::Box<usize>;  // in scope 0 at ui/drop/drop-trait-enum.rs:76:44: 76:56
    let mut _4: SendOnDrop;              // in scope 0 at ui/drop/drop-trait-enum.rs:76:58: 78:14
    let mut _5: std::sync::mpsc::Sender<Message>; // in scope 0 at ui/drop/drop-trait-enum.rs:77:25: 77:39
    let mut _6: &std::sync::mpsc::Sender<Message>; // in scope 0 at ui/drop/drop-trait-enum.rs:77:25: 77:39
    let mut _7: std::sync::mpsc::Sender<Message>; // in scope 0 at ui/drop/drop-trait-enum.rs:78:16: 78:30
    let mut _8: &std::sync::mpsc::Sender<Message>; // in scope 0 at ui/drop/drop-trait-enum.rs:78:16: 78:30
    let mut _9: Foo;                     // in scope 0 at ui/drop/drop-trait-enum.rs:79:17: 81:51
    let mut _10: std::boxed::Box<usize>; // in scope 0 at ui/drop/drop-trait-enum.rs:79:36: 79:48
    let mut _11: SendOnDrop;             // in scope 0 at ui/drop/drop-trait-enum.rs:80:36: 80:73
    let mut _12: std::sync::mpsc::Sender<Message>; // in scope 0 at ui/drop/drop-trait-enum.rs:80:57: 80:71
    let mut _13: &std::sync::mpsc::Sender<Message>; // in scope 0 at ui/drop/drop-trait-enum.rs:80:57: 80:71
    let mut _14: std::sync::mpsc::Sender<Message>; // in scope 0 at ui/drop/drop-trait-enum.rs:81:36: 81:50
    let mut _15: &std::sync::mpsc::Sender<Message>; // in scope 0 at ui/drop/drop-trait-enum.rs:81:36: 81:50
    let mut _16: Foo;                    // in scope 0 at ui/drop/drop-trait-enum.rs:82:17: 82:51
    let mut _17: std::sync::mpsc::Sender<Message>; // in scope 0 at ui/drop/drop-trait-enum.rs:82:36: 82:50
    let mut _18: &std::sync::mpsc::Sender<Message>; // in scope 0 at ui/drop/drop-trait-enum.rs:82:36: 82:50
    let mut _19: Foo;                    // in scope 0 at ui/drop/drop-trait-enum.rs:83:17: 83:79
    let mut _20: SendOnDrop;             // in scope 0 at ui/drop/drop-trait-enum.rs:83:48: 83:77
    let mut _21: std::sync::mpsc::Sender<Message>; // in scope 0 at ui/drop/drop-trait-enum.rs:83:69: 83:75
    let mut _22: bool;                   // in scope 0 at ui/drop/drop-trait-enum.rs:84:9: 84:10
    scope 1 {
        debug v => _2;                   // in scope 1 at ui/drop/drop-trait-enum.rs:76:17: 76:22
    }

    bb0: {
        _22 = const false;               // scope 0 at ui/drop/drop-trait-enum.rs:76:17: 76:22
        _22 = const true;                // scope 0 at ui/drop/drop-trait-enum.rs:76:17: 76:22
        _3 = Box::<usize>::new(const 42_usize) -> [return: bb1, unwind: bb22]; // scope 0 at ui/drop/drop-trait-enum.rs:76:44: 76:56
                                         // mir::Constant
                                         // + span: ui/drop/drop-trait-enum.rs:76:44: 76:52
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: fn(usize) -> Box<usize> {Box::<usize>::new}, val: Value(<ZST>) }
    }

    bb1: {
        _6 = &(_1.0: std::sync::mpsc::Sender<Message>); // scope 0 at ui/drop/drop-trait-enum.rs:77:25: 77:39
        _5 = <Sender<Message> as Clone>::clone(move _6) -> [return: bb2, unwind: bb13]; // scope 0 at ui/drop/drop-trait-enum.rs:77:25: 77:39
                                         // mir::Constant
                                         // + span: ui/drop/drop-trait-enum.rs:77:32: 77:37
                                         // + literal: Const { ty: for<'a> fn(&'a Sender<Message>) -> Sender<Message> {<Sender<Message> as Clone>::clone}, val: Value(<ZST>) }
    }

    bb2: {
        _4 = SendOnDrop { sender: move _5 }; // scope 0 at ui/drop/drop-trait-enum.rs:76:58: 78:14
        _8 = &(_1.0: std::sync::mpsc::Sender<Message>); // scope 0 at ui/drop/drop-trait-enum.rs:78:16: 78:30
        _7 = <Sender<Message> as Clone>::clone(move _8) -> [return: bb3, unwind: bb12]; // scope 0 at ui/drop/drop-trait-enum.rs:78:16: 78:30
                                         // mir::Constant
                                         // + span: ui/drop/drop-trait-enum.rs:78:23: 78:28
                                         // + literal: Const { ty: for<'a> fn(&'a Sender<Message>) -> Sender<Message> {<Sender<Message> as Clone>::clone}, val: Value(<ZST>) }
    }

    bb3: {
        _2 = Foo::NestedVariant(move _3, move _4, move _7); // scope 0 at ui/drop/drop-trait-enum.rs:76:25: 78:31
        _10 = Box::<usize>::new(const 42_usize) -> [return: bb4, unwind: bb11]; // scope 1 at ui/drop/drop-trait-enum.rs:79:36: 79:48
                                         // mir::Constant
                                         // + span: ui/drop/drop-trait-enum.rs:79:36: 79:44
                                         // + user_ty: UserType(1)
                                         // + literal: Const { ty: fn(usize) -> Box<usize> {Box::<usize>::new}, val: Value(<ZST>) }
    }

    bb4: {
        _13 = &(_1.0: std::sync::mpsc::Sender<Message>); // scope 1 at ui/drop/drop-trait-enum.rs:80:57: 80:71
        _12 = <Sender<Message> as Clone>::clone(move _13) -> [return: bb5, unwind: bb10]; // scope 1 at ui/drop/drop-trait-enum.rs:80:57: 80:71
                                         // mir::Constant
                                         // + span: ui/drop/drop-trait-enum.rs:80:64: 80:69
                                         // + literal: Const { ty: for<'a> fn(&'a Sender<Message>) -> Sender<Message> {<Sender<Message> as Clone>::clone}, val: Value(<ZST>) }
    }

    bb5: {
        _11 = SendOnDrop { sender: move _12 }; // scope 1 at ui/drop/drop-trait-enum.rs:80:36: 80:73
        _15 = &(_1.0: std::sync::mpsc::Sender<Message>); // scope 1 at ui/drop/drop-trait-enum.rs:81:36: 81:50
        _14 = <Sender<Message> as Clone>::clone(move _15) -> [return: bb6, unwind: bb9]; // scope 1 at ui/drop/drop-trait-enum.rs:81:36: 81:50
                                         // mir::Constant
                                         // + span: ui/drop/drop-trait-enum.rs:81:43: 81:48
                                         // + literal: Const { ty: for<'a> fn(&'a Sender<Message>) -> Sender<Message> {<Sender<Message> as Clone>::clone}, val: Value(<ZST>) }
    }

    bb6: {
        _9 = Foo::NestedVariant(move _10, move _11, move _14); // scope 1 at ui/drop/drop-trait-enum.rs:79:17: 81:51
        drop(_2) -> [return: bb16, unwind: bb15]; // scope 1 at ui/drop/drop-trait-enum.rs:79:13: 79:14
    }

    bb7: {
        _16 = Foo::SimpleVariant(move _17); // scope 1 at ui/drop/drop-trait-enum.rs:82:17: 82:51
        drop(_2) -> [return: bb18, unwind: bb17]; // scope 1 at ui/drop/drop-trait-enum.rs:82:13: 82:14
    }

    bb8: {
        return;                          // scope 0 at ui/drop/drop-trait-enum.rs:84:10: 84:10
    }

    bb9 (cleanup): {
        drop(_11) -> bb10;               // scope 1 at ui/drop/drop-trait-enum.rs:81:50: 81:51
    }

    bb10 (cleanup): {
        drop(_10) -> bb11;               // scope 1 at ui/drop/drop-trait-enum.rs:81:50: 81:51
    }

    bb11 (cleanup): {
        drop(_2) -> bb22;                // scope 0 at ui/drop/drop-trait-enum.rs:84:9: 84:10
    }

    bb12 (cleanup): {
        drop(_4) -> bb13;                // scope 0 at ui/drop/drop-trait-enum.rs:78:30: 78:31
    }

    bb13 (cleanup): {
        drop(_3) -> bb22;                // scope 0 at ui/drop/drop-trait-enum.rs:78:30: 78:31
    }

    bb14 (cleanup): {
        resume;                          // scope 0 at ui/drop/drop-trait-enum.rs:75:23: 84:10
    }

    bb15 (cleanup): {
        _2 = move _9;                    // scope 1 at ui/drop/drop-trait-enum.rs:79:13: 79:14
        goto -> bb11;                    // scope 1 at ui/drop/drop-trait-enum.rs:79:13: 79:14
    }

    bb16: {
        _2 = move _9;                    // scope 1 at ui/drop/drop-trait-enum.rs:79:13: 79:14
        _18 = &(_1.0: std::sync::mpsc::Sender<Message>); // scope 1 at ui/drop/drop-trait-enum.rs:82:36: 82:50
        _17 = <Sender<Message> as Clone>::clone(move _18) -> [return: bb7, unwind: bb11]; // scope 1 at ui/drop/drop-trait-enum.rs:82:36: 82:50
                                         // mir::Constant
                                         // + span: ui/drop/drop-trait-enum.rs:82:43: 82:48
                                         // + literal: Const { ty: for<'a> fn(&'a Sender<Message>) -> Sender<Message> {<Sender<Message> as Clone>::clone}, val: Value(<ZST>) }
    }

    bb17 (cleanup): {
        _2 = move _16;                   // scope 1 at ui/drop/drop-trait-enum.rs:82:13: 82:14
        goto -> bb11;                    // scope 1 at ui/drop/drop-trait-enum.rs:82:13: 82:14
    }

    bb18: {
        _2 = move _16;                   // scope 1 at ui/drop/drop-trait-enum.rs:82:13: 82:14
        _22 = const false;               // scope 1 at ui/drop/drop-trait-enum.rs:83:69: 83:75
        _21 = move (_1.0: std::sync::mpsc::Sender<Message>); // scope 1 at ui/drop/drop-trait-enum.rs:83:69: 83:75
        _20 = SendOnDrop { sender: move _21 }; // scope 1 at ui/drop/drop-trait-enum.rs:83:48: 83:77
        _19 = Foo::FailingVariant { on_drop: move _20 }; // scope 1 at ui/drop/drop-trait-enum.rs:83:17: 83:79
        drop(_2) -> [return: bb20, unwind: bb19]; // scope 1 at ui/drop/drop-trait-enum.rs:83:13: 83:14
    }

    bb19 (cleanup): {
        _2 = move _19;                   // scope 1 at ui/drop/drop-trait-enum.rs:83:13: 83:14
        goto -> bb11;                    // scope 1 at ui/drop/drop-trait-enum.rs:83:13: 83:14
    }

    bb20: {
        _2 = move _19;                   // scope 1 at ui/drop/drop-trait-enum.rs:83:13: 83:14
        drop(_2) -> [return: bb8, unwind: bb22]; // scope 0 at ui/drop/drop-trait-enum.rs:84:9: 84:10
    }

    bb21 (cleanup): {
        drop((_1.0: std::sync::mpsc::Sender<Message>)) -> bb14; // scope 0 at ui/drop/drop-trait-enum.rs:84:9: 84:10
    }

    bb22 (cleanup): {
        switchInt(_22) -> [0: bb14, otherwise: bb21]; // scope 0 at ui/drop/drop-trait-enum.rs:84:9: 84:10
    }
}

fn Foo::SimpleVariant(_1: Sender<Message>) -> Foo {
    let mut _0: Foo;                     // return place in scope 0 at ui/drop/drop-trait-enum.rs:28:5: 28:18

    bb0: {
        _0 = Foo::SimpleVariant(move _1); // scope 0 at ui/drop/drop-trait-enum.rs:28:5: 28:18
        return;                          // scope 0 at ui/drop/drop-trait-enum.rs:28:5: 28:18
    }
}

// MIR FOR CTFE
fn Foo::SimpleVariant(_1: Sender<Message>) -> Foo {
    let mut _0: Foo;                     // return place in scope 0 at ui/drop/drop-trait-enum.rs:28:5: 28:18

    bb0: {
        _0 = Foo::SimpleVariant(move _1); // scope 0 at ui/drop/drop-trait-enum.rs:28:5: 28:18
        return;                          // scope 0 at ui/drop/drop-trait-enum.rs:28:5: 28:18
    }
}

fn Foo::NestedVariant(_1: Box<usize>, _2: SendOnDrop, _3: Sender<Message>) -> Foo {
    let mut _0: Foo;                     // return place in scope 0 at ui/drop/drop-trait-enum.rs:29:5: 29:18

    bb0: {
        _0 = Foo::NestedVariant(move _1, move _2, move _3); // scope 0 at ui/drop/drop-trait-enum.rs:29:5: 29:18
        return;                          // scope 0 at ui/drop/drop-trait-enum.rs:29:5: 29:18
    }
}

// MIR FOR CTFE
fn Foo::NestedVariant(_1: Box<usize>, _2: SendOnDrop, _3: Sender<Message>) -> Foo {
    let mut _0: Foo;                     // return place in scope 0 at ui/drop/drop-trait-enum.rs:29:5: 29:18

    bb0: {
        _0 = Foo::NestedVariant(move _1, move _2, move _3); // scope 0 at ui/drop/drop-trait-enum.rs:29:5: 29:18
        return;                          // scope 0 at ui/drop/drop-trait-enum.rs:29:5: 29:18
    }
}
