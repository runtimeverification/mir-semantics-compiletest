// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
fn <impl at ui/drop/drop_order.rs:8:10: 8:17>::default() -> DropOrderCollector {
    let mut _0: DropOrderCollector;      // return place in scope 0 at ui/drop/drop_order.rs:8:10: 8:17
    let mut _1: std::cell::RefCell<std::vec::Vec<u32>>; // in scope 0 at ui/drop/drop_order.rs:9:27: 9:44

    bb0: {
        _1 = <RefCell<Vec<u32>> as Default>::default() -> bb1; // scope 0 at ui/drop/drop_order.rs:9:27: 9:44
                                         // mir::Constant
                                         // + span: ui/drop/drop_order.rs:9:27: 9:44
                                         // + literal: Const { ty: fn() -> RefCell<Vec<u32>> {<RefCell<Vec<u32>> as Default>::default}, val: Value(<ZST>) }
    }

    bb1: {
        _0 = DropOrderCollector(move _1); // scope 0 at ui/drop/drop_order.rs:8:10: 8:17
        return;                          // scope 0 at ui/drop/drop_order.rs:8:17: 8:17
    }
}

fn <impl at ui/drop/drop_order.rs:13:1: 13:27>::drop(_1: &mut LoudDrop<'_>) -> () {
    debug self => _1;                    // in scope 0 at ui/drop/drop_order.rs:14:13: 14:22
    let mut _0: ();                      // return place in scope 0 at ui/drop/drop_order.rs:14:24: 14:24
    let _2: ();                          // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:62
    let mut _3: std::fmt::Arguments<'_>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _4: &[&str];                 // in scope 0 at ui/drop/drop_order.rs:15:18: 15:22
    let mut _5: &[&str; 2];              // in scope 0 at ui/drop/drop_order.rs:15:18: 15:22
    let _6: &[&str; 2];                  // in scope 0 at ui/drop/drop_order.rs:15:18: 15:22
    let mut _7: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _8: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let _9: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let _10: [core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _11: core::fmt::ArgumentV1<'_>; // in scope 0 at ui/drop/drop_order.rs:15:24: 15:30
    let mut _12: &u32;                   // in scope 0 at ui/drop/drop_order.rs:15:24: 15:30
    let _13: &u32;                       // in scope 0 at ui/drop/drop_order.rs:15:24: 15:30
    let _14: ();                         // in scope 0 at ui/drop/drop_order.rs:16:9: 16:43
    let mut _15: &mut std::vec::Vec<u32>; // in scope 0 at ui/drop/drop_order.rs:16:9: 16:43
    let mut _16: &mut std::vec::Vec<u32>; // in scope 0 at ui/drop/drop_order.rs:16:9: 16:43
    let mut _17: &mut std::cell::RefMut<'_, std::vec::Vec<u32>>; // in scope 0 at ui/drop/drop_order.rs:16:9: 16:43
    let mut _18: std::cell::RefMut<'_, std::vec::Vec<u32>>; // in scope 0 at ui/drop/drop_order.rs:16:9: 16:30
    let mut _19: &std::cell::RefCell<std::vec::Vec<u32>>; // in scope 0 at ui/drop/drop_order.rs:16:9: 16:30
    let mut _20: u32;                    // in scope 0 at ui/drop/drop_order.rs:16:36: 16:42
    let mut _21: &[&str; 2];             // in scope 0 at ui/drop/drop_order.rs:15:18: 15:22
    let mut _22: &DropOrderCollector;    // in scope 0 at ui/drop/drop_order.rs:14:13: 14:22

    bb0: {
        _21 = const _;                   // scope 0 at ui/drop/drop_order.rs:15:18: 15:22
                                         // mir::Constant
                                         // + span: ui/drop/drop_order.rs:15:18: 15:22
                                         // + literal: Const { ty: &[&str; 2], val: Unevaluated(<LoudDrop<'_> as Drop>::drop, [ReErased], Some(promoted[0])) }
        _6 = _21;                        // scope 0 at ui/drop/drop_order.rs:15:18: 15:22
        _5 = _6;                         // scope 0 at ui/drop/drop_order.rs:15:18: 15:22
        _4 = move _5 as &[&str] (Pointer(Unsize)); // scope 0 at ui/drop/drop_order.rs:15:18: 15:22
        _13 = &((*_1).1: u32);           // scope 0 at ui/drop/drop_order.rs:15:24: 15:30
        _12 = _13;                       // scope 0 at ui/drop/drop_order.rs:15:24: 15:30
        _11 = core::fmt::ArgumentV1::<'_>::new_display::<u32>(move _12) -> bb1; // scope 0 at ui/drop/drop_order.rs:15:24: 15:30
                                         // mir::Constant
                                         // + span: ui/drop/drop_order.rs:15:24: 15:30
                                         // + user_ty: UserType(1)
                                         // + literal: Const { ty: for<'b> fn(&'b u32) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_display::<u32>}, val: Value(<ZST>) }
    }

    bb1: {
        _10 = [move _11];                // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _9 = &_10;                       // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _8 = _9;                         // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _7 = move _8 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _3 = Arguments::<'_>::new_v1(move _4, move _7) -> bb2; // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb2: {
        _2 = _print(move _3) -> bb3;     // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:62
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:27
                                         // + literal: Const { ty: for<'a> fn(Arguments<'a>) {_print}, val: Value(<ZST>) }
    }

    bb3: {
        _22 = deref_copy ((*_1).0: &DropOrderCollector); // scope 0 at ui/drop/drop_order.rs:16:9: 16:30
        _19 = &((*_22).0: std::cell::RefCell<std::vec::Vec<u32>>); // scope 0 at ui/drop/drop_order.rs:16:9: 16:30
        _18 = RefCell::<Vec<u32>>::borrow_mut(move _19) -> bb4; // scope 0 at ui/drop/drop_order.rs:16:9: 16:30
                                         // mir::Constant
                                         // + span: ui/drop/drop_order.rs:16:18: 16:28
                                         // + literal: Const { ty: for<'a> fn(&'a RefCell<Vec<u32>>) -> RefMut<'a, Vec<u32>> {RefCell::<Vec<u32>>::borrow_mut}, val: Value(<ZST>) }
    }

    bb4: {
        _17 = &mut _18;                  // scope 0 at ui/drop/drop_order.rs:16:9: 16:43
        _16 = <RefMut<'_, Vec<u32>> as DerefMut>::deref_mut(move _17) -> [return: bb5, unwind: bb8]; // scope 0 at ui/drop/drop_order.rs:16:9: 16:43
                                         // mir::Constant
                                         // + span: ui/drop/drop_order.rs:16:9: 16:43
                                         // + literal: Const { ty: for<'a> fn(&'a mut RefMut<'_, Vec<u32>>) -> &'a mut <RefMut<'_, Vec<u32>> as Deref>::Target {<RefMut<'_, Vec<u32>> as DerefMut>::deref_mut}, val: Value(<ZST>) }
    }

    bb5: {
        _15 = &mut (*_16);               // scope 0 at ui/drop/drop_order.rs:16:9: 16:43
        _20 = ((*_1).1: u32);            // scope 0 at ui/drop/drop_order.rs:16:36: 16:42
        _14 = Vec::<u32>::push(move _15, move _20) -> [return: bb6, unwind: bb8]; // scope 0 at ui/drop/drop_order.rs:16:9: 16:43
                                         // mir::Constant
                                         // + span: ui/drop/drop_order.rs:16:31: 16:35
                                         // + literal: Const { ty: for<'a> fn(&'a mut Vec<u32>, u32) {Vec::<u32>::push}, val: Value(<ZST>) }
    }

    bb6: {
        drop(_18) -> bb7;                // scope 0 at ui/drop/drop_order.rs:16:43: 16:44
    }

    bb7: {
        return;                          // scope 0 at ui/drop/drop_order.rs:17:6: 17:6
    }

    bb8 (cleanup): {
        drop(_18) -> bb9;                // scope 0 at ui/drop/drop_order.rs:16:43: 16:44
    }

    bb9 (cleanup): {
        resume;                          // scope 0 at ui/drop/drop_order.rs:14:5: 17:6
    }
}

promoted[0] in <impl at ui/drop/drop_order.rs:13:1: 13:27>::drop: &[&str; 2] = {
    let mut _0: &[&str; 2];              // return place in scope 0 at ui/drop/drop_order.rs:15:18: 15:22
    let mut _1: [&str; 2];               // in scope 0 at ui/drop/drop_order.rs:15:18: 15:22

    bb0: {
        _1 = [const "", const "\n"];     // scope 0 at ui/drop/drop_order.rs:15:18: 15:22
                                         // mir::Constant
                                         // + span: ui/drop/drop_order.rs:15:18: 15:22
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
                                         // mir::Constant
                                         // + span: ui/drop/drop_order.rs:15:18: 15:22
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at ui/drop/drop_order.rs:15:18: 15:22
        return;                          // scope 0 at ui/drop/drop_order.rs:15:18: 15:22
    }
}

fn <impl at ui/drop/drop_order.rs:20:1: 20:24>::option_loud_drop(_1: &DropOrderCollector, _2: u32) -> Option<LoudDrop<'_>> {
    debug self => _1;                    // in scope 0 at ui/drop/drop_order.rs:21:25: 21:30
    debug n => _2;                       // in scope 0 at ui/drop/drop_order.rs:21:32: 21:33
    let mut _0: std::option::Option<LoudDrop<'_>>; // return place in scope 0 at ui/drop/drop_order.rs:21:43: 21:59
    let mut _3: LoudDrop<'_>;            // in scope 0 at ui/drop/drop_order.rs:22:14: 22:31
    let mut _4: &DropOrderCollector;     // in scope 0 at ui/drop/drop_order.rs:22:23: 22:27
    let mut _5: u32;                     // in scope 0 at ui/drop/drop_order.rs:22:29: 22:30

    bb0: {
        _4 = _1;                         // scope 0 at ui/drop/drop_order.rs:22:23: 22:27
        _5 = _2;                         // scope 0 at ui/drop/drop_order.rs:22:29: 22:30
        _3 = LoudDrop::<'_>(move _4, move _5); // scope 0 at ui/drop/drop_order.rs:22:14: 22:31
        _0 = Option::<LoudDrop<'_>>::Some(move _3); // scope 0 at ui/drop/drop_order.rs:22:9: 22:32
        return;                          // scope 0 at ui/drop/drop_order.rs:23:6: 23:6
    }
}

fn <impl at ui/drop/drop_order.rs:20:1: 20:24>::loud_drop(_1: &DropOrderCollector, _2: u32) -> LoudDrop<'_> {
    debug self => _1;                    // in scope 0 at ui/drop/drop_order.rs:25:18: 25:23
    debug n => _2;                       // in scope 0 at ui/drop/drop_order.rs:25:25: 25:26
    let mut _0: LoudDrop<'_>;            // return place in scope 0 at ui/drop/drop_order.rs:25:36: 25:44
    let mut _3: &DropOrderCollector;     // in scope 0 at ui/drop/drop_order.rs:26:18: 26:22
    let mut _4: u32;                     // in scope 0 at ui/drop/drop_order.rs:26:24: 26:25

    bb0: {
        _3 = _1;                         // scope 0 at ui/drop/drop_order.rs:26:18: 26:22
        _4 = _2;                         // scope 0 at ui/drop/drop_order.rs:26:24: 26:25
        _0 = LoudDrop::<'_>(move _3, move _4); // scope 0 at ui/drop/drop_order.rs:26:9: 26:26
        return;                          // scope 0 at ui/drop/drop_order.rs:27:6: 27:6
    }
}

fn <impl at ui/drop/drop_order.rs:20:1: 20:24>::print(_1: &DropOrderCollector, _2: u32) -> () {
    debug self => _1;                    // in scope 0 at ui/drop/drop_order.rs:29:14: 29:19
    debug n => _2;                       // in scope 0 at ui/drop/drop_order.rs:29:21: 29:22
    let mut _0: ();                      // return place in scope 0 at ui/drop/drop_order.rs:29:29: 29:29
    let _3: ();                          // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:62
    let mut _4: std::fmt::Arguments<'_>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _5: &[&str];                 // in scope 0 at ui/drop/drop_order.rs:30:18: 30:22
    let mut _6: &[&str; 2];              // in scope 0 at ui/drop/drop_order.rs:30:18: 30:22
    let _7: &[&str; 2];                  // in scope 0 at ui/drop/drop_order.rs:30:18: 30:22
    let mut _8: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _9: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let _10: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let _11: [core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _12: core::fmt::ArgumentV1<'_>; // in scope 0 at ui/drop/drop_order.rs:30:24: 30:25
    let mut _13: &u32;                   // in scope 0 at ui/drop/drop_order.rs:30:24: 30:25
    let _14: &u32;                       // in scope 0 at ui/drop/drop_order.rs:30:24: 30:25
    let mut _15: &mut std::vec::Vec<u32>; // in scope 0 at ui/drop/drop_order.rs:31:9: 31:36
    let mut _16: &mut std::vec::Vec<u32>; // in scope 0 at ui/drop/drop_order.rs:31:9: 31:36
    let mut _17: &mut std::cell::RefMut<'_, std::vec::Vec<u32>>; // in scope 0 at ui/drop/drop_order.rs:31:9: 31:36
    let mut _18: std::cell::RefMut<'_, std::vec::Vec<u32>>; // in scope 0 at ui/drop/drop_order.rs:31:9: 31:28
    let mut _19: &std::cell::RefCell<std::vec::Vec<u32>>; // in scope 0 at ui/drop/drop_order.rs:31:9: 31:28
    let mut _20: u32;                    // in scope 0 at ui/drop/drop_order.rs:31:34: 31:35
    let mut _21: &[&str; 2];             // in scope 0 at ui/drop/drop_order.rs:30:18: 30:22

    bb0: {
        _21 = const _;                   // scope 0 at ui/drop/drop_order.rs:30:18: 30:22
                                         // mir::Constant
                                         // + span: ui/drop/drop_order.rs:30:18: 30:22
                                         // + literal: Const { ty: &[&str; 2], val: Unevaluated(DropOrderCollector::print, [], Some(promoted[0])) }
        _7 = _21;                        // scope 0 at ui/drop/drop_order.rs:30:18: 30:22
        _6 = _7;                         // scope 0 at ui/drop/drop_order.rs:30:18: 30:22
        _5 = move _6 as &[&str] (Pointer(Unsize)); // scope 0 at ui/drop/drop_order.rs:30:18: 30:22
        _14 = &_2;                       // scope 0 at ui/drop/drop_order.rs:30:24: 30:25
        _13 = _14;                       // scope 0 at ui/drop/drop_order.rs:30:24: 30:25
        _12 = core::fmt::ArgumentV1::<'_>::new_display::<u32>(move _13) -> bb1; // scope 0 at ui/drop/drop_order.rs:30:24: 30:25
                                         // mir::Constant
                                         // + span: ui/drop/drop_order.rs:30:24: 30:25
                                         // + user_ty: UserType(1)
                                         // + literal: Const { ty: for<'b> fn(&'b u32) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_display::<u32>}, val: Value(<ZST>) }
    }

    bb1: {
        _11 = [move _12];                // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _10 = &_11;                      // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _9 = _10;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _8 = move _9 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _4 = Arguments::<'_>::new_v1(move _5, move _8) -> bb2; // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb2: {
        _3 = _print(move _4) -> bb3;     // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:62
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:27
                                         // + literal: Const { ty: for<'a> fn(Arguments<'a>) {_print}, val: Value(<ZST>) }
    }

    bb3: {
        _19 = &((*_1).0: std::cell::RefCell<std::vec::Vec<u32>>); // scope 0 at ui/drop/drop_order.rs:31:9: 31:28
        _18 = RefCell::<Vec<u32>>::borrow_mut(move _19) -> bb4; // scope 0 at ui/drop/drop_order.rs:31:9: 31:28
                                         // mir::Constant
                                         // + span: ui/drop/drop_order.rs:31:16: 31:26
                                         // + literal: Const { ty: for<'a> fn(&'a RefCell<Vec<u32>>) -> RefMut<'a, Vec<u32>> {RefCell::<Vec<u32>>::borrow_mut}, val: Value(<ZST>) }
    }

    bb4: {
        _17 = &mut _18;                  // scope 0 at ui/drop/drop_order.rs:31:9: 31:36
        _16 = <RefMut<'_, Vec<u32>> as DerefMut>::deref_mut(move _17) -> [return: bb5, unwind: bb8]; // scope 0 at ui/drop/drop_order.rs:31:9: 31:36
                                         // mir::Constant
                                         // + span: ui/drop/drop_order.rs:31:9: 31:36
                                         // + literal: Const { ty: for<'a> fn(&'a mut RefMut<'_, Vec<u32>>) -> &'a mut <RefMut<'_, Vec<u32>> as Deref>::Target {<RefMut<'_, Vec<u32>> as DerefMut>::deref_mut}, val: Value(<ZST>) }
    }

    bb5: {
        _15 = &mut (*_16);               // scope 0 at ui/drop/drop_order.rs:31:9: 31:36
        _20 = _2;                        // scope 0 at ui/drop/drop_order.rs:31:34: 31:35
        _0 = Vec::<u32>::push(move _15, move _20) -> [return: bb6, unwind: bb8]; // scope 0 at ui/drop/drop_order.rs:31:9: 31:36
                                         // mir::Constant
                                         // + span: ui/drop/drop_order.rs:31:29: 31:33
                                         // + literal: Const { ty: for<'a> fn(&'a mut Vec<u32>, u32) {Vec::<u32>::push}, val: Value(<ZST>) }
    }

    bb6: {
        drop(_18) -> bb7;                // scope 0 at ui/drop/drop_order.rs:32:5: 32:6
    }

    bb7: {
        return;                          // scope 0 at ui/drop/drop_order.rs:32:6: 32:6
    }

    bb8 (cleanup): {
        drop(_18) -> bb9;                // scope 0 at ui/drop/drop_order.rs:32:5: 32:6
    }

    bb9 (cleanup): {
        resume;                          // scope 0 at ui/drop/drop_order.rs:29:5: 32:6
    }
}

promoted[0] in <impl at ui/drop/drop_order.rs:20:1: 20:24>::print: &[&str; 2] = {
    let mut _0: &[&str; 2];              // return place in scope 0 at ui/drop/drop_order.rs:30:18: 30:22
    let mut _1: [&str; 2];               // in scope 0 at ui/drop/drop_order.rs:30:18: 30:22

    bb0: {
        _1 = [const "", const "\n"];     // scope 0 at ui/drop/drop_order.rs:30:18: 30:22
                                         // mir::Constant
                                         // + span: ui/drop/drop_order.rs:30:18: 30:22
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
                                         // mir::Constant
                                         // + span: ui/drop/drop_order.rs:30:18: 30:22
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at ui/drop/drop_order.rs:30:18: 30:22
        return;                          // scope 0 at ui/drop/drop_order.rs:30:18: 30:22
    }
}

fn <impl at ui/drop/drop_order.rs:20:1: 20:24>::if_(_1: &DropOrderCollector) -> () {
    debug self => _1;                    // in scope 0 at ui/drop/drop_order.rs:34:12: 34:17
    let mut _0: ();                      // return place in scope 0 at ui/drop/drop_order.rs:34:19: 34:19
    let mut _2: bool;                    // in scope 0 at ui/drop/drop_order.rs:35:12: 35:46
    let mut _3: &std::option::Option<LoudDrop<'_>>; // in scope 0 at ui/drop/drop_order.rs:35:12: 35:46
    let _4: std::option::Option<LoudDrop<'_>>; // in scope 0 at ui/drop/drop_order.rs:35:12: 35:36
    let mut _5: &DropOrderCollector;     // in scope 0 at ui/drop/drop_order.rs:35:12: 35:36
    let _6: ();                          // in scope 0 at ui/drop/drop_order.rs:36:13: 36:26
    let mut _7: &DropOrderCollector;     // in scope 0 at ui/drop/drop_order.rs:36:13: 36:26
    let mut _8: bool;                    // in scope 0 at ui/drop/drop_order.rs:39:12: 39:46
    let mut _9: &std::option::Option<LoudDrop<'_>>; // in scope 0 at ui/drop/drop_order.rs:39:12: 39:46
    let _10: std::option::Option<LoudDrop<'_>>; // in scope 0 at ui/drop/drop_order.rs:39:12: 39:36
    let mut _11: &DropOrderCollector;    // in scope 0 at ui/drop/drop_order.rs:39:12: 39:36
    let _12: !;                          // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/panic.rs:68:9: 68:77
    let mut _13: bool;                   // in scope 0 at ui/drop/drop_order.rs:41:19: 41:53
    let mut _14: &std::option::Option<LoudDrop<'_>>; // in scope 0 at ui/drop/drop_order.rs:41:19: 41:53
    let _15: std::option::Option<LoudDrop<'_>>; // in scope 0 at ui/drop/drop_order.rs:41:19: 41:43
    let mut _16: &DropOrderCollector;    // in scope 0 at ui/drop/drop_order.rs:41:19: 41:43
    let _17: ();                         // in scope 0 at ui/drop/drop_order.rs:42:13: 42:26
    let mut _18: &DropOrderCollector;    // in scope 0 at ui/drop/drop_order.rs:42:13: 42:26
    let mut _19: bool;                   // in scope 0 at ui/drop/drop_order.rs:45:12: 52:10
    let mut _20: bool;                   // in scope 0 at ui/drop/drop_order.rs:46:16: 46:88
    let mut _21: bool;                   // in scope 0 at ui/drop/drop_order.rs:46:16: 46:50
    let mut _22: &std::option::Option<LoudDrop<'_>>; // in scope 0 at ui/drop/drop_order.rs:46:16: 46:50
    let _23: std::option::Option<LoudDrop<'_>>; // in scope 0 at ui/drop/drop_order.rs:46:16: 46:40
    let mut _24: &DropOrderCollector;    // in scope 0 at ui/drop/drop_order.rs:46:16: 46:40
    let mut _25: bool;                   // in scope 0 at ui/drop/drop_order.rs:46:54: 46:88
    let mut _26: &std::option::Option<LoudDrop<'_>>; // in scope 0 at ui/drop/drop_order.rs:46:54: 46:88
    let _27: std::option::Option<LoudDrop<'_>>; // in scope 0 at ui/drop/drop_order.rs:46:54: 46:78
    let mut _28: &DropOrderCollector;    // in scope 0 at ui/drop/drop_order.rs:46:54: 46:78
    let _29: LoudDrop<'_>;               // in scope 0 at ui/drop/drop_order.rs:47:17: 47:34
    let mut _30: &DropOrderCollector;    // in scope 0 at ui/drop/drop_order.rs:47:17: 47:34
    let _31: ();                         // in scope 0 at ui/drop/drop_order.rs:53:13: 53:26
    let mut _32: &DropOrderCollector;    // in scope 0 at ui/drop/drop_order.rs:53:13: 53:26

    bb0: {
        _5 = _1;                         // scope 0 at ui/drop/drop_order.rs:35:12: 35:36
        _4 = DropOrderCollector::option_loud_drop(move _5, const 1_u32) -> bb1; // scope 0 at ui/drop/drop_order.rs:35:12: 35:36
                                         // mir::Constant
                                         // + span: ui/drop/drop_order.rs:35:17: 35:33
                                         // + literal: Const { ty: for<'a> fn(&'a DropOrderCollector, u32) -> Option<LoudDrop<'a>> {DropOrderCollector::option_loud_drop}, val: Value(<ZST>) }
    }

    bb1: {
        _3 = &_4;                        // scope 0 at ui/drop/drop_order.rs:35:12: 35:46
        _2 = Option::<LoudDrop<'_>>::is_some(move _3) -> [return: bb2, unwind: bb36]; // scope 0 at ui/drop/drop_order.rs:35:12: 35:46
                                         // mir::Constant
                                         // + span: ui/drop/drop_order.rs:35:37: 35:44
                                         // + literal: Const { ty: for<'a> fn(&'a Option<LoudDrop<'_>>) -> bool {Option::<LoudDrop<'_>>::is_some}, val: Value(<ZST>) }
    }

    bb2: {
        drop(_4) -> bb3;                 // scope 0 at ui/drop/drop_order.rs:35:45: 35:46
    }

    bb3: {
        switchInt(move _2) -> [0: bb5, otherwise: bb4]; // scope 0 at ui/drop/drop_order.rs:35:12: 35:46
    }

    bb4: {
        _7 = _1;                         // scope 0 at ui/drop/drop_order.rs:36:13: 36:26
        _6 = DropOrderCollector::print(move _7, const 2_u32) -> bb5; // scope 0 at ui/drop/drop_order.rs:36:13: 36:26
                                         // mir::Constant
                                         // + span: ui/drop/drop_order.rs:36:18: 36:23
                                         // + literal: Const { ty: for<'a> fn(&'a DropOrderCollector, u32) {DropOrderCollector::print}, val: Value(<ZST>) }
    }

    bb5: {
        _11 = _1;                        // scope 0 at ui/drop/drop_order.rs:39:12: 39:36
        _10 = DropOrderCollector::option_loud_drop(move _11, const 3_u32) -> bb6; // scope 0 at ui/drop/drop_order.rs:39:12: 39:36
                                         // mir::Constant
                                         // + span: ui/drop/drop_order.rs:39:17: 39:33
                                         // + literal: Const { ty: for<'a> fn(&'a DropOrderCollector, u32) -> Option<LoudDrop<'a>> {DropOrderCollector::option_loud_drop}, val: Value(<ZST>) }
    }

    bb6: {
        _9 = &_10;                       // scope 0 at ui/drop/drop_order.rs:39:12: 39:46
        _8 = Option::<LoudDrop<'_>>::is_none(move _9) -> [return: bb7, unwind: bb35]; // scope 0 at ui/drop/drop_order.rs:39:12: 39:46
                                         // mir::Constant
                                         // + span: ui/drop/drop_order.rs:39:37: 39:44
                                         // + literal: Const { ty: for<'a> fn(&'a Option<LoudDrop<'_>>) -> bool {Option::<LoudDrop<'_>>::is_none}, val: Value(<ZST>) }
    }

    bb7: {
        drop(_10) -> bb8;                // scope 0 at ui/drop/drop_order.rs:39:45: 39:46
    }

    bb8: {
        switchInt(move _8) -> [0: bb10, otherwise: bb9]; // scope 0 at ui/drop/drop_order.rs:39:12: 39:46
    }

    bb9: {
        _12 = core::panicking::panic(const "internal error: entered unreachable code"); // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/panic.rs:68:9: 68:77
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/panic.rs:68:9: 68:33
                                         // + literal: Const { ty: fn(&'static str) -> ! {core::panicking::panic}, val: Value(<ZST>) }
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/panic.rs:68:34: 68:76
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
    }

    bb10: {
        _16 = _1;                        // scope 0 at ui/drop/drop_order.rs:41:19: 41:43
        _15 = DropOrderCollector::option_loud_drop(move _16, const 4_u32) -> bb11; // scope 0 at ui/drop/drop_order.rs:41:19: 41:43
                                         // mir::Constant
                                         // + span: ui/drop/drop_order.rs:41:24: 41:40
                                         // + literal: Const { ty: for<'a> fn(&'a DropOrderCollector, u32) -> Option<LoudDrop<'a>> {DropOrderCollector::option_loud_drop}, val: Value(<ZST>) }
    }

    bb11: {
        _14 = &_15;                      // scope 0 at ui/drop/drop_order.rs:41:19: 41:53
        _13 = Option::<LoudDrop<'_>>::is_some(move _14) -> [return: bb12, unwind: bb34]; // scope 0 at ui/drop/drop_order.rs:41:19: 41:53
                                         // mir::Constant
                                         // + span: ui/drop/drop_order.rs:41:44: 41:51
                                         // + literal: Const { ty: for<'a> fn(&'a Option<LoudDrop<'_>>) -> bool {Option::<LoudDrop<'_>>::is_some}, val: Value(<ZST>) }
    }

    bb12: {
        drop(_15) -> bb13;               // scope 0 at ui/drop/drop_order.rs:41:52: 41:53
    }

    bb13: {
        switchInt(move _13) -> [0: bb15, otherwise: bb14]; // scope 0 at ui/drop/drop_order.rs:41:19: 41:53
    }

    bb14: {
        _18 = _1;                        // scope 0 at ui/drop/drop_order.rs:42:13: 42:26
        _17 = DropOrderCollector::print(move _18, const 5_u32) -> bb15; // scope 0 at ui/drop/drop_order.rs:42:13: 42:26
                                         // mir::Constant
                                         // + span: ui/drop/drop_order.rs:42:18: 42:23
                                         // + literal: Const { ty: for<'a> fn(&'a DropOrderCollector, u32) {DropOrderCollector::print}, val: Value(<ZST>) }
    }

    bb15: {
        _24 = _1;                        // scope 0 at ui/drop/drop_order.rs:46:16: 46:40
        _23 = DropOrderCollector::option_loud_drop(move _24, const 6_u32) -> bb19; // scope 0 at ui/drop/drop_order.rs:46:16: 46:40
                                         // mir::Constant
                                         // + span: ui/drop/drop_order.rs:46:21: 46:37
                                         // + literal: Const { ty: for<'a> fn(&'a DropOrderCollector, u32) -> Option<LoudDrop<'a>> {DropOrderCollector::option_loud_drop}, val: Value(<ZST>) }
    }

    bb16: {
        _20 = const false;               // scope 0 at ui/drop/drop_order.rs:46:16: 46:88
        goto -> bb18;                    // scope 0 at ui/drop/drop_order.rs:46:16: 46:88
    }

    bb17: {
        _28 = _1;                        // scope 0 at ui/drop/drop_order.rs:46:54: 46:78
        _27 = DropOrderCollector::option_loud_drop(move _28, const 7_u32) -> bb22; // scope 0 at ui/drop/drop_order.rs:46:54: 46:78
                                         // mir::Constant
                                         // + span: ui/drop/drop_order.rs:46:59: 46:75
                                         // + literal: Const { ty: for<'a> fn(&'a DropOrderCollector, u32) -> Option<LoudDrop<'a>> {DropOrderCollector::option_loud_drop}, val: Value(<ZST>) }
    }

    bb18: {
        switchInt(move _20) -> [0: bb28, otherwise: bb25]; // scope 0 at ui/drop/drop_order.rs:46:16: 46:88
    }

    bb19: {
        _22 = &_23;                      // scope 0 at ui/drop/drop_order.rs:46:16: 46:50
        _21 = Option::<LoudDrop<'_>>::is_some(move _22) -> [return: bb20, unwind: bb33]; // scope 0 at ui/drop/drop_order.rs:46:16: 46:50
                                         // mir::Constant
                                         // + span: ui/drop/drop_order.rs:46:41: 46:48
                                         // + literal: Const { ty: for<'a> fn(&'a Option<LoudDrop<'_>>) -> bool {Option::<LoudDrop<'_>>::is_some}, val: Value(<ZST>) }
    }

    bb20: {
        drop(_23) -> bb21;               // scope 0 at ui/drop/drop_order.rs:46:49: 46:50
    }

    bb21: {
        switchInt(move _21) -> [0: bb16, otherwise: bb17]; // scope 0 at ui/drop/drop_order.rs:46:16: 46:88
    }

    bb22: {
        _26 = &_27;                      // scope 0 at ui/drop/drop_order.rs:46:54: 46:88
        _25 = Option::<LoudDrop<'_>>::is_some(move _26) -> [return: bb23, unwind: bb32]; // scope 0 at ui/drop/drop_order.rs:46:54: 46:88
                                         // mir::Constant
                                         // + span: ui/drop/drop_order.rs:46:79: 46:86
                                         // + literal: Const { ty: for<'a> fn(&'a Option<LoudDrop<'_>>) -> bool {Option::<LoudDrop<'_>>::is_some}, val: Value(<ZST>) }
    }

    bb23: {
        drop(_27) -> bb24;               // scope 0 at ui/drop/drop_order.rs:46:87: 46:88
    }

    bb24: {
        _20 = move _25;                  // scope 0 at ui/drop/drop_order.rs:46:16: 46:88
        goto -> bb18;                    // scope 0 at ui/drop/drop_order.rs:46:16: 46:88
    }

    bb25: {
        _30 = _1;                        // scope 0 at ui/drop/drop_order.rs:47:17: 47:34
        _29 = DropOrderCollector::loud_drop(move _30, const 8_u32) -> bb26; // scope 0 at ui/drop/drop_order.rs:47:17: 47:34
                                         // mir::Constant
                                         // + span: ui/drop/drop_order.rs:47:22: 47:31
                                         // + literal: Const { ty: for<'a> fn(&'a DropOrderCollector, u32) -> LoudDrop<'a> {DropOrderCollector::loud_drop}, val: Value(<ZST>) }
    }

    bb26: {
        drop(_29) -> bb27;               // scope 0 at ui/drop/drop_order.rs:47:34: 47:35
    }

    bb27: {
        _19 = const true;                // scope 0 at ui/drop/drop_order.rs:48:17: 48:21
        goto -> bb29;                    // scope 0 at ui/drop/drop_order.rs:46:13: 51:14
    }

    bb28: {
        _19 = const false;               // scope 0 at ui/drop/drop_order.rs:50:17: 50:22
        goto -> bb29;                    // scope 0 at ui/drop/drop_order.rs:46:13: 51:14
    }

    bb29: {
        switchInt(move _19) -> [0: bb31, otherwise: bb30]; // scope 0 at ui/drop/drop_order.rs:45:12: 52:10
    }

    bb30: {
        _32 = _1;                        // scope 0 at ui/drop/drop_order.rs:53:13: 53:26
        _31 = DropOrderCollector::print(move _32, const 9_u32) -> bb31; // scope 0 at ui/drop/drop_order.rs:53:13: 53:26
                                         // mir::Constant
                                         // + span: ui/drop/drop_order.rs:53:18: 53:23
                                         // + literal: Const { ty: for<'a> fn(&'a DropOrderCollector, u32) {DropOrderCollector::print}, val: Value(<ZST>) }
    }

    bb31: {
        return;                          // scope 0 at ui/drop/drop_order.rs:55:6: 55:6
    }

    bb32 (cleanup): {
        drop(_27) -> bb37;               // scope 0 at ui/drop/drop_order.rs:46:87: 46:88
    }

    bb33 (cleanup): {
        drop(_23) -> bb37;               // scope 0 at ui/drop/drop_order.rs:46:49: 46:50
    }

    bb34 (cleanup): {
        drop(_15) -> bb37;               // scope 0 at ui/drop/drop_order.rs:41:52: 41:53
    }

    bb35 (cleanup): {
        drop(_10) -> bb37;               // scope 0 at ui/drop/drop_order.rs:39:45: 39:46
    }

    bb36 (cleanup): {
        drop(_4) -> bb37;                // scope 0 at ui/drop/drop_order.rs:35:45: 35:46
    }

    bb37 (cleanup): {
        resume;                          // scope 0 at ui/drop/drop_order.rs:34:5: 55:6
    }
}

fn <impl at ui/drop/drop_order.rs:20:1: 20:24>::if_let(_1: &DropOrderCollector) -> () {
    debug self => _1;                    // in scope 0 at ui/drop/drop_order.rs:57:15: 57:20
    let mut _0: ();                      // return place in scope 0 at ui/drop/drop_order.rs:57:22: 57:22
    let mut _2: std::option::Option<LoudDrop<'_>>; // in scope 0 at ui/drop/drop_order.rs:58:23: 58:47
    let mut _3: &DropOrderCollector;     // in scope 0 at ui/drop/drop_order.rs:58:23: 58:47
    let mut _4: isize;                   // in scope 0 at ui/drop/drop_order.rs:58:16: 58:20
    let _5: !;                           // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/panic.rs:68:9: 68:77
    let _6: ();                          // in scope 0 at ui/drop/drop_order.rs:61:13: 61:26
    let mut _7: &DropOrderCollector;     // in scope 0 at ui/drop/drop_order.rs:61:13: 61:26
    let mut _8: std::option::Option<LoudDrop<'_>>; // in scope 0 at ui/drop/drop_order.rs:64:26: 64:50
    let mut _9: &DropOrderCollector;     // in scope 0 at ui/drop/drop_order.rs:64:26: 64:50
    let mut _10: isize;                  // in scope 0 at ui/drop/drop_order.rs:64:16: 64:23
    let _11: ();                         // in scope 0 at ui/drop/drop_order.rs:65:13: 65:26
    let mut _12: &DropOrderCollector;    // in scope 0 at ui/drop/drop_order.rs:65:13: 65:26
    let mut _13: std::option::Option<LoudDrop<'_>>; // in scope 0 at ui/drop/drop_order.rs:68:27: 68:51
    let mut _14: &DropOrderCollector;    // in scope 0 at ui/drop/drop_order.rs:68:27: 68:51
    let mut _15: isize;                  // in scope 0 at ui/drop/drop_order.rs:68:16: 68:24
    let _17: ();                         // in scope 0 at ui/drop/drop_order.rs:69:13: 69:26
    let mut _18: &DropOrderCollector;    // in scope 0 at ui/drop/drop_order.rs:69:13: 69:26
    let mut _19: bool;                   // in scope 0 at ui/drop/drop_order.rs:71:5: 71:6
    let mut _20: isize;                  // in scope 0 at ui/drop/drop_order.rs:71:5: 71:6
    scope 1 {
    }
    scope 2 {
    }
    scope 3 {
        debug _d => _16;                 // in scope 3 at ui/drop/drop_order.rs:68:21: 68:23
        let _16: LoudDrop<'_>;           // in scope 3 at ui/drop/drop_order.rs:68:21: 68:23
    }

    bb0: {
        _19 = const false;               // scope 0 at ui/drop/drop_order.rs:58:9: 62:10
        _3 = _1;                         // scope 1 at ui/drop/drop_order.rs:58:23: 58:47
        _2 = DropOrderCollector::option_loud_drop(move _3, const 2_u32) -> bb1; // scope 1 at ui/drop/drop_order.rs:58:23: 58:47
                                         // mir::Constant
                                         // + span: ui/drop/drop_order.rs:58:28: 58:44
                                         // + literal: Const { ty: for<'a> fn(&'a DropOrderCollector, u32) -> Option<LoudDrop<'a>> {DropOrderCollector::option_loud_drop}, val: Value(<ZST>) }
    }

    bb1: {
        _4 = discriminant(_2);           // scope 1 at ui/drop/drop_order.rs:58:16: 58:20
        switchInt(move _4) -> [0: bb2, otherwise: bb3]; // scope 1 at ui/drop/drop_order.rs:58:16: 58:20
    }

    bb2: {
        _5 = core::panicking::panic(const "internal error: entered unreachable code") -> bb15; // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/panic.rs:68:9: 68:77
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/panic.rs:68:9: 68:33
                                         // + literal: Const { ty: fn(&'static str) -> ! {core::panicking::panic}, val: Value(<ZST>) }
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/panic.rs:68:34: 68:76
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
    }

    bb3: {
        _7 = _1;                         // scope 0 at ui/drop/drop_order.rs:61:13: 61:26
        _6 = DropOrderCollector::print(move _7, const 1_u32) -> [return: bb4, unwind: bb15]; // scope 0 at ui/drop/drop_order.rs:61:13: 61:26
                                         // mir::Constant
                                         // + span: ui/drop/drop_order.rs:61:18: 61:23
                                         // + literal: Const { ty: for<'a> fn(&'a DropOrderCollector, u32) {DropOrderCollector::print}, val: Value(<ZST>) }
    }

    bb4: {
        drop(_2) -> bb5;                 // scope 0 at ui/drop/drop_order.rs:62:9: 62:10
    }

    bb5: {
        _9 = _1;                         // scope 2 at ui/drop/drop_order.rs:64:26: 64:50
        _8 = DropOrderCollector::option_loud_drop(move _9, const 4_u32) -> bb6; // scope 2 at ui/drop/drop_order.rs:64:26: 64:50
                                         // mir::Constant
                                         // + span: ui/drop/drop_order.rs:64:31: 64:47
                                         // + literal: Const { ty: for<'a> fn(&'a DropOrderCollector, u32) -> Option<LoudDrop<'a>> {DropOrderCollector::option_loud_drop}, val: Value(<ZST>) }
    }

    bb6: {
        _10 = discriminant(_8);          // scope 2 at ui/drop/drop_order.rs:64:16: 64:23
        switchInt(move _10) -> [1: bb7, otherwise: bb8]; // scope 2 at ui/drop/drop_order.rs:64:16: 64:23
    }

    bb7: {
        _12 = _1;                        // scope 2 at ui/drop/drop_order.rs:65:13: 65:26
        _11 = DropOrderCollector::print(move _12, const 3_u32) -> [return: bb21, unwind: bb14]; // scope 2 at ui/drop/drop_order.rs:65:13: 65:26
                                         // mir::Constant
                                         // + span: ui/drop/drop_order.rs:65:18: 65:23
                                         // + literal: Const { ty: for<'a> fn(&'a DropOrderCollector, u32) {DropOrderCollector::print}, val: Value(<ZST>) }
    }

    bb8: {
        drop(_8) -> bb9;                 // scope 0 at ui/drop/drop_order.rs:66:9: 66:10
    }

    bb9: {
        _14 = _1;                        // scope 3 at ui/drop/drop_order.rs:68:27: 68:51
        _19 = const true;                // scope 3 at ui/drop/drop_order.rs:68:27: 68:51
        _13 = DropOrderCollector::option_loud_drop(move _14, const 6_u32) -> bb10; // scope 3 at ui/drop/drop_order.rs:68:27: 68:51
                                         // mir::Constant
                                         // + span: ui/drop/drop_order.rs:68:32: 68:48
                                         // + literal: Const { ty: for<'a> fn(&'a DropOrderCollector, u32) -> Option<LoudDrop<'a>> {DropOrderCollector::option_loud_drop}, val: Value(<ZST>) }
    }

    bb10: {
        _15 = discriminant(_13);         // scope 3 at ui/drop/drop_order.rs:68:16: 68:24
        switchInt(move _15) -> [1: bb11, otherwise: bb20]; // scope 3 at ui/drop/drop_order.rs:68:16: 68:24
    }

    bb11: {
        _19 = const false;               // scope 3 at ui/drop/drop_order.rs:68:21: 68:23
        _16 = move ((_13 as Some).0: LoudDrop<'_>); // scope 3 at ui/drop/drop_order.rs:68:21: 68:23
        _18 = _1;                        // scope 3 at ui/drop/drop_order.rs:69:13: 69:26
        _17 = DropOrderCollector::print(move _18, const 5_u32) -> [return: bb12, unwind: bb13]; // scope 3 at ui/drop/drop_order.rs:69:13: 69:26
                                         // mir::Constant
                                         // + span: ui/drop/drop_order.rs:69:18: 69:23
                                         // + literal: Const { ty: for<'a> fn(&'a DropOrderCollector, u32) {DropOrderCollector::print}, val: Value(<ZST>) }
    }

    bb12: {
        drop(_16) -> bb20;               // scope 0 at ui/drop/drop_order.rs:70:9: 70:10
    }

    bb13 (cleanup): {
        drop(_16) -> bb16;               // scope 0 at ui/drop/drop_order.rs:70:9: 70:10
    }

    bb14 (cleanup): {
        drop(_8) -> bb16;                // scope 0 at ui/drop/drop_order.rs:66:9: 66:10
    }

    bb15 (cleanup): {
        drop(_2) -> bb16;                // scope 0 at ui/drop/drop_order.rs:62:9: 62:10
    }

    bb16 (cleanup): {
        resume;                          // scope 0 at ui/drop/drop_order.rs:57:5: 71:6
    }

    bb17: {
        _19 = const false;               // scope 0 at ui/drop/drop_order.rs:71:5: 71:6
        return;                          // scope 0 at ui/drop/drop_order.rs:71:6: 71:6
    }

    bb18: {
        switchInt(_19) -> [0: bb17, otherwise: bb19]; // scope 0 at ui/drop/drop_order.rs:71:5: 71:6
    }

    bb19: {
        drop(((_13 as Some).0: LoudDrop<'_>)) -> bb17; // scope 0 at ui/drop/drop_order.rs:71:5: 71:6
    }

    bb20: {
        _20 = discriminant(_13);         // scope 0 at ui/drop/drop_order.rs:71:5: 71:6
        switchInt(move _20) -> [1: bb18, otherwise: bb17]; // scope 0 at ui/drop/drop_order.rs:71:5: 71:6
    }

    bb21: {
        goto -> bb8;                     // scope 2 at ui/drop/drop_order.rs:65:13: 65:26
    }
}

fn <impl at ui/drop/drop_order.rs:20:1: 20:24>::match_(_1: &DropOrderCollector) -> () {
    debug self => _1;                    // in scope 0 at ui/drop/drop_order.rs:73:15: 73:20
    let mut _0: ();                      // return place in scope 0 at ui/drop/drop_order.rs:73:22: 73:22
    let _2: ();                          // in scope 0 at ui/drop/drop_order.rs:74:9: 76:10
    let mut _3: std::option::Option<LoudDrop<'_>>; // in scope 0 at ui/drop/drop_order.rs:74:15: 74:39
    let mut _4: &DropOrderCollector;     // in scope 0 at ui/drop/drop_order.rs:74:15: 74:39
    let _5: std::option::Option<LoudDrop<'_>>; // in scope 0 at ui/drop/drop_order.rs:75:13: 75:17
    let mut _6: &DropOrderCollector;     // in scope 0 at ui/drop/drop_order.rs:75:21: 75:34
    let _7: ();                          // in scope 0 at ui/drop/drop_order.rs:78:9: 80:10
    let mut _8: std::option::Option<LoudDrop<'_>>; // in scope 0 at ui/drop/drop_order.rs:78:15: 78:39
    let mut _9: &DropOrderCollector;     // in scope 0 at ui/drop/drop_order.rs:78:15: 78:39
    let mut _10: &DropOrderCollector;    // in scope 0 at ui/drop/drop_order.rs:79:18: 79:31
    let _11: ();                         // in scope 0 at ui/drop/drop_order.rs:82:9: 85:10
    let mut _12: std::option::Option<LoudDrop<'_>>; // in scope 0 at ui/drop/drop_order.rs:82:15: 82:39
    let mut _13: &DropOrderCollector;    // in scope 0 at ui/drop/drop_order.rs:82:15: 82:39
    let mut _14: isize;                  // in scope 0 at ui/drop/drop_order.rs:83:13: 83:20
    let mut _15: &DropOrderCollector;    // in scope 0 at ui/drop/drop_order.rs:83:24: 83:37
    let mut _16: !;                      // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/panic.rs:68:9: 68:77
    let _17: ();                         // in scope 0 at ui/drop/drop_order.rs:87:9: 94:10
    let mut _18: LoudDrop<'_>;           // in scope 0 at ui/drop/drop_order.rs:88:21: 88:38
    let mut _19: &DropOrderCollector;    // in scope 0 at ui/drop/drop_order.rs:88:21: 88:38
    let mut _21: &DropOrderCollector;    // in scope 0 at ui/drop/drop_order.rs:89:22: 89:39
    let _22: ();                         // in scope 0 at ui/drop/drop_order.rs:90:13: 90:26
    let mut _23: &DropOrderCollector;    // in scope 0 at ui/drop/drop_order.rs:90:13: 90:26
    let mut _24: &DropOrderCollector;    // in scope 0 at ui/drop/drop_order.rs:93:19: 93:33
    let _25: ();                         // in scope 0 at ui/drop/drop_order.rs:96:9: 105:10
    let mut _26: std::option::Option<LoudDrop<'_>>; // in scope 0 at ui/drop/drop_order.rs:96:15: 103:10
    let mut _27: std::option::Option<LoudDrop<'_>>; // in scope 0 at ui/drop/drop_order.rs:97:19: 97:44
    let mut _28: &DropOrderCollector;    // in scope 0 at ui/drop/drop_order.rs:97:19: 97:44
    let _29: ();                         // in scope 0 at ui/drop/drop_order.rs:99:21: 99:35
    let mut _30: &DropOrderCollector;    // in scope 0 at ui/drop/drop_order.rs:99:21: 99:35
    let mut _31: &DropOrderCollector;    // in scope 0 at ui/drop/drop_order.rs:100:21: 100:46
    let mut _32: &DropOrderCollector;    // in scope 0 at ui/drop/drop_order.rs:104:18: 104:32
    let mut _33: std::option::Option<LoudDrop<'_>>; // in scope 0 at ui/drop/drop_order.rs:107:15: 116:10
    let mut _34: std::option::Option<LoudDrop<'_>>; // in scope 0 at ui/drop/drop_order.rs:109:29: 109:54
    let mut _35: &DropOrderCollector;    // in scope 0 at ui/drop/drop_order.rs:109:29: 109:54
    let _36: ();                         // in scope 0 at ui/drop/drop_order.rs:111:25: 111:39
    let mut _37: &DropOrderCollector;    // in scope 0 at ui/drop/drop_order.rs:111:25: 111:39
    let mut _38: &DropOrderCollector;    // in scope 0 at ui/drop/drop_order.rs:112:25: 112:50
    let mut _39: &DropOrderCollector;    // in scope 0 at ui/drop/drop_order.rs:117:18: 117:32
    scope 1 {
        debug _any => _5;                // in scope 1 at ui/drop/drop_order.rs:75:13: 75:17
    }
    scope 2 {
        let _20: LoudDrop<'_>;           // in scope 2 at ui/drop/drop_order.rs:89:17: 89:19
        scope 3 {
            debug _d => _20;             // in scope 3 at ui/drop/drop_order.rs:89:17: 89:19
        }
    }

    bb0: {
        _4 = _1;                         // scope 0 at ui/drop/drop_order.rs:74:15: 74:39
        _3 = DropOrderCollector::option_loud_drop(move _4, const 2_u32) -> bb1; // scope 0 at ui/drop/drop_order.rs:74:15: 74:39
                                         // mir::Constant
                                         // + span: ui/drop/drop_order.rs:74:20: 74:36
                                         // + literal: Const { ty: for<'a> fn(&'a DropOrderCollector, u32) -> Option<LoudDrop<'a>> {DropOrderCollector::option_loud_drop}, val: Value(<ZST>) }
    }

    bb1: {
        _5 = move _3;                    // scope 0 at ui/drop/drop_order.rs:75:13: 75:17
        _6 = _1;                         // scope 1 at ui/drop/drop_order.rs:75:21: 75:34
        _2 = DropOrderCollector::print(move _6, const 1_u32) -> [return: bb2, unwind: bb37]; // scope 1 at ui/drop/drop_order.rs:75:21: 75:34
                                         // mir::Constant
                                         // + span: ui/drop/drop_order.rs:75:26: 75:31
                                         // + literal: Const { ty: for<'a> fn(&'a DropOrderCollector, u32) {DropOrderCollector::print}, val: Value(<ZST>) }
    }

    bb2: {
        drop(_5) -> bb3;                 // scope 0 at ui/drop/drop_order.rs:75:33: 75:34
    }

    bb3: {
        _9 = _1;                         // scope 0 at ui/drop/drop_order.rs:78:15: 78:39
        _8 = DropOrderCollector::option_loud_drop(move _9, const 4_u32) -> bb4; // scope 0 at ui/drop/drop_order.rs:78:15: 78:39
                                         // mir::Constant
                                         // + span: ui/drop/drop_order.rs:78:20: 78:36
                                         // + literal: Const { ty: for<'a> fn(&'a DropOrderCollector, u32) -> Option<LoudDrop<'a>> {DropOrderCollector::option_loud_drop}, val: Value(<ZST>) }
    }

    bb4: {
        _10 = _1;                        // scope 0 at ui/drop/drop_order.rs:79:18: 79:31
        _7 = DropOrderCollector::print(move _10, const 3_u32) -> [return: bb5, unwind: bb36]; // scope 0 at ui/drop/drop_order.rs:79:18: 79:31
                                         // mir::Constant
                                         // + span: ui/drop/drop_order.rs:79:23: 79:28
                                         // + literal: Const { ty: for<'a> fn(&'a DropOrderCollector, u32) {DropOrderCollector::print}, val: Value(<ZST>) }
    }

    bb5: {
        drop(_8) -> bb6;                 // scope 0 at ui/drop/drop_order.rs:80:9: 80:10
    }

    bb6: {
        _13 = _1;                        // scope 0 at ui/drop/drop_order.rs:82:15: 82:39
        _12 = DropOrderCollector::option_loud_drop(move _13, const 6_u32) -> bb7; // scope 0 at ui/drop/drop_order.rs:82:15: 82:39
                                         // mir::Constant
                                         // + span: ui/drop/drop_order.rs:82:20: 82:36
                                         // + literal: Const { ty: for<'a> fn(&'a DropOrderCollector, u32) -> Option<LoudDrop<'a>> {DropOrderCollector::option_loud_drop}, val: Value(<ZST>) }
    }

    bb7: {
        _14 = discriminant(_12);         // scope 0 at ui/drop/drop_order.rs:82:15: 82:39
        switchInt(move _14) -> [1: bb9, otherwise: bb8]; // scope 0 at ui/drop/drop_order.rs:82:9: 82:39
    }

    bb8: {
        _16 = core::panicking::panic(const "internal error: entered unreachable code") -> bb35; // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/panic.rs:68:9: 68:77
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/panic.rs:68:9: 68:33
                                         // + literal: Const { ty: fn(&'static str) -> ! {core::panicking::panic}, val: Value(<ZST>) }
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/panic.rs:68:34: 68:76
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
    }

    bb9: {
        _15 = _1;                        // scope 0 at ui/drop/drop_order.rs:83:24: 83:37
        _11 = DropOrderCollector::print(move _15, const 5_u32) -> [return: bb10, unwind: bb35]; // scope 0 at ui/drop/drop_order.rs:83:24: 83:37
                                         // mir::Constant
                                         // + span: ui/drop/drop_order.rs:83:29: 83:34
                                         // + literal: Const { ty: for<'a> fn(&'a DropOrderCollector, u32) {DropOrderCollector::print}, val: Value(<ZST>) }
    }

    bb10: {
        drop(_12) -> bb11;               // scope 0 at ui/drop/drop_order.rs:85:9: 85:10
    }

    bb11: {
        _19 = _1;                        // scope 0 at ui/drop/drop_order.rs:88:21: 88:38
        _18 = DropOrderCollector::loud_drop(move _19, const 7_u32) -> bb12; // scope 0 at ui/drop/drop_order.rs:88:21: 88:38
                                         // mir::Constant
                                         // + span: ui/drop/drop_order.rs:88:26: 88:35
                                         // + literal: Const { ty: for<'a> fn(&'a DropOrderCollector, u32) -> LoudDrop<'a> {DropOrderCollector::loud_drop}, val: Value(<ZST>) }
    }

    bb12: {
        drop(_18) -> bb13;               // scope 0 at ui/drop/drop_order.rs:88:38: 88:39
    }

    bb13: {
        _21 = _1;                        // scope 2 at ui/drop/drop_order.rs:89:22: 89:39
        _20 = DropOrderCollector::loud_drop(move _21, const 9_u32) -> bb14; // scope 2 at ui/drop/drop_order.rs:89:22: 89:39
                                         // mir::Constant
                                         // + span: ui/drop/drop_order.rs:89:27: 89:36
                                         // + literal: Const { ty: for<'a> fn(&'a DropOrderCollector, u32) -> LoudDrop<'a> {DropOrderCollector::loud_drop}, val: Value(<ZST>) }
    }

    bb14: {
        _23 = _1;                        // scope 3 at ui/drop/drop_order.rs:90:13: 90:26
        _22 = DropOrderCollector::print(move _23, const 8_u32) -> [return: bb15, unwind: bb34]; // scope 3 at ui/drop/drop_order.rs:90:13: 90:26
                                         // mir::Constant
                                         // + span: ui/drop/drop_order.rs:90:18: 90:23
                                         // + literal: Const { ty: for<'a> fn(&'a DropOrderCollector, u32) {DropOrderCollector::print}, val: Value(<ZST>) }
    }

    bb15: {
        drop(_20) -> bb16;               // scope 2 at ui/drop/drop_order.rs:92:9: 92:10
    }

    bb16: {
        _24 = _1;                        // scope 0 at ui/drop/drop_order.rs:93:19: 93:33
        _17 = DropOrderCollector::print(move _24, const 10_u32) -> bb17; // scope 0 at ui/drop/drop_order.rs:93:19: 93:33
                                         // mir::Constant
                                         // + span: ui/drop/drop_order.rs:93:24: 93:29
                                         // + literal: Const { ty: for<'a> fn(&'a DropOrderCollector, u32) {DropOrderCollector::print}, val: Value(<ZST>) }
    }

    bb17: {
        _28 = _1;                        // scope 0 at ui/drop/drop_order.rs:97:19: 97:44
        _27 = DropOrderCollector::option_loud_drop(move _28, const 14_u32) -> bb18; // scope 0 at ui/drop/drop_order.rs:97:19: 97:44
                                         // mir::Constant
                                         // + span: ui/drop/drop_order.rs:97:24: 97:40
                                         // + literal: Const { ty: for<'a> fn(&'a DropOrderCollector, u32) -> Option<LoudDrop<'a>> {DropOrderCollector::option_loud_drop}, val: Value(<ZST>) }
    }

    bb18: {
        _30 = _1;                        // scope 0 at ui/drop/drop_order.rs:99:21: 99:35
        _29 = DropOrderCollector::print(move _30, const 11_u32) -> [return: bb19, unwind: bb33]; // scope 0 at ui/drop/drop_order.rs:99:21: 99:35
                                         // mir::Constant
                                         // + span: ui/drop/drop_order.rs:99:26: 99:31
                                         // + literal: Const { ty: for<'a> fn(&'a DropOrderCollector, u32) {DropOrderCollector::print}, val: Value(<ZST>) }
    }

    bb19: {
        _31 = _1;                        // scope 0 at ui/drop/drop_order.rs:100:21: 100:46
        _26 = DropOrderCollector::option_loud_drop(move _31, const 13_u32) -> [return: bb20, unwind: bb33]; // scope 0 at ui/drop/drop_order.rs:100:21: 100:46
                                         // mir::Constant
                                         // + span: ui/drop/drop_order.rs:100:26: 100:42
                                         // + literal: Const { ty: for<'a> fn(&'a DropOrderCollector, u32) -> Option<LoudDrop<'a>> {DropOrderCollector::option_loud_drop}, val: Value(<ZST>) }
    }

    bb20: {
        _32 = _1;                        // scope 0 at ui/drop/drop_order.rs:104:18: 104:32
        _25 = DropOrderCollector::print(move _32, const 12_u32) -> [return: bb21, unwind: bb32]; // scope 0 at ui/drop/drop_order.rs:104:18: 104:32
                                         // mir::Constant
                                         // + span: ui/drop/drop_order.rs:104:23: 104:28
                                         // + literal: Const { ty: for<'a> fn(&'a DropOrderCollector, u32) {DropOrderCollector::print}, val: Value(<ZST>) }
    }

    bb21: {
        drop(_26) -> [return: bb22, unwind: bb33]; // scope 0 at ui/drop/drop_order.rs:105:9: 105:10
    }

    bb22: {
        drop(_27) -> bb23;               // scope 0 at ui/drop/drop_order.rs:105:9: 105:10
    }

    bb23: {
        _35 = _1;                        // scope 0 at ui/drop/drop_order.rs:109:29: 109:54
        _34 = DropOrderCollector::option_loud_drop(move _35, const 16_u32) -> bb24; // scope 0 at ui/drop/drop_order.rs:109:29: 109:54
                                         // mir::Constant
                                         // + span: ui/drop/drop_order.rs:109:34: 109:50
                                         // + literal: Const { ty: for<'a> fn(&'a DropOrderCollector, u32) -> Option<LoudDrop<'a>> {DropOrderCollector::option_loud_drop}, val: Value(<ZST>) }
    }

    bb24: {
        _37 = _1;                        // scope 0 at ui/drop/drop_order.rs:111:25: 111:39
        _36 = DropOrderCollector::print(move _37, const 15_u32) -> [return: bb25, unwind: bb31]; // scope 0 at ui/drop/drop_order.rs:111:25: 111:39
                                         // mir::Constant
                                         // + span: ui/drop/drop_order.rs:111:30: 111:35
                                         // + literal: Const { ty: for<'a> fn(&'a DropOrderCollector, u32) {DropOrderCollector::print}, val: Value(<ZST>) }
    }

    bb25: {
        _38 = _1;                        // scope 0 at ui/drop/drop_order.rs:112:25: 112:50
        _33 = DropOrderCollector::option_loud_drop(move _38, const 18_u32) -> [return: bb26, unwind: bb31]; // scope 0 at ui/drop/drop_order.rs:112:25: 112:50
                                         // mir::Constant
                                         // + span: ui/drop/drop_order.rs:112:30: 112:46
                                         // + literal: Const { ty: for<'a> fn(&'a DropOrderCollector, u32) -> Option<LoudDrop<'a>> {DropOrderCollector::option_loud_drop}, val: Value(<ZST>) }
    }

    bb26: {
        drop(_34) -> bb27;               // scope 0 at ui/drop/drop_order.rs:114:18: 114:19
    }

    bb27: {
        _39 = _1;                        // scope 0 at ui/drop/drop_order.rs:117:18: 117:32
        _0 = DropOrderCollector::print(move _39, const 17_u32) -> [return: bb28, unwind: bb30]; // scope 0 at ui/drop/drop_order.rs:117:18: 117:32
                                         // mir::Constant
                                         // + span: ui/drop/drop_order.rs:117:23: 117:28
                                         // + literal: Const { ty: for<'a> fn(&'a DropOrderCollector, u32) {DropOrderCollector::print}, val: Value(<ZST>) }
    }

    bb28: {
        drop(_33) -> bb29;               // scope 0 at ui/drop/drop_order.rs:119:5: 119:6
    }

    bb29: {
        return;                          // scope 0 at ui/drop/drop_order.rs:119:6: 119:6
    }

    bb30 (cleanup): {
        drop(_33) -> bb38;               // scope 0 at ui/drop/drop_order.rs:119:5: 119:6
    }

    bb31 (cleanup): {
        drop(_34) -> bb38;               // scope 0 at ui/drop/drop_order.rs:114:18: 114:19
    }

    bb32 (cleanup): {
        drop(_26) -> bb33;               // scope 0 at ui/drop/drop_order.rs:105:9: 105:10
    }

    bb33 (cleanup): {
        drop(_27) -> bb38;               // scope 0 at ui/drop/drop_order.rs:105:9: 105:10
    }

    bb34 (cleanup): {
        drop(_20) -> bb38;               // scope 2 at ui/drop/drop_order.rs:92:9: 92:10
    }

    bb35 (cleanup): {
        drop(_12) -> bb38;               // scope 0 at ui/drop/drop_order.rs:85:9: 85:10
    }

    bb36 (cleanup): {
        drop(_8) -> bb38;                // scope 0 at ui/drop/drop_order.rs:80:9: 80:10
    }

    bb37 (cleanup): {
        drop(_5) -> bb38;                // scope 0 at ui/drop/drop_order.rs:75:33: 75:34
    }

    bb38 (cleanup): {
        resume;                          // scope 0 at ui/drop/drop_order.rs:73:5: 119:6
    }
}

fn <impl at ui/drop/drop_order.rs:20:1: 20:24>::and_chain(_1: &DropOrderCollector) -> () {
    debug self => _1;                    // in scope 0 at ui/drop/drop_order.rs:121:18: 121:23
    let mut _0: ();                      // return place in scope 0 at ui/drop/drop_order.rs:121:25: 121:25
    let mut _2: bool;                    // in scope 0 at ui/drop/drop_order.rs:123:12: 127:50
    let mut _3: bool;                    // in scope 0 at ui/drop/drop_order.rs:123:12: 126:50
    let mut _4: bool;                    // in scope 0 at ui/drop/drop_order.rs:123:12: 125:50
    let mut _5: bool;                    // in scope 0 at ui/drop/drop_order.rs:123:12: 124:50
    let mut _6: bool;                    // in scope 0 at ui/drop/drop_order.rs:123:12: 123:46
    let mut _7: &std::option::Option<LoudDrop<'_>>; // in scope 0 at ui/drop/drop_order.rs:123:12: 123:46
    let _8: std::option::Option<LoudDrop<'_>>; // in scope 0 at ui/drop/drop_order.rs:123:12: 123:36
    let mut _9: &DropOrderCollector;     // in scope 0 at ui/drop/drop_order.rs:123:12: 123:36
    let mut _10: bool;                   // in scope 0 at ui/drop/drop_order.rs:124:16: 124:50
    let mut _11: &std::option::Option<LoudDrop<'_>>; // in scope 0 at ui/drop/drop_order.rs:124:16: 124:50
    let _12: std::option::Option<LoudDrop<'_>>; // in scope 0 at ui/drop/drop_order.rs:124:16: 124:40
    let mut _13: &DropOrderCollector;    // in scope 0 at ui/drop/drop_order.rs:124:16: 124:40
    let mut _14: bool;                   // in scope 0 at ui/drop/drop_order.rs:125:16: 125:50
    let mut _15: &std::option::Option<LoudDrop<'_>>; // in scope 0 at ui/drop/drop_order.rs:125:16: 125:50
    let _16: std::option::Option<LoudDrop<'_>>; // in scope 0 at ui/drop/drop_order.rs:125:16: 125:40
    let mut _17: &DropOrderCollector;    // in scope 0 at ui/drop/drop_order.rs:125:16: 125:40
    let mut _18: bool;                   // in scope 0 at ui/drop/drop_order.rs:126:16: 126:50
    let mut _19: &std::option::Option<LoudDrop<'_>>; // in scope 0 at ui/drop/drop_order.rs:126:16: 126:50
    let _20: std::option::Option<LoudDrop<'_>>; // in scope 0 at ui/drop/drop_order.rs:126:16: 126:40
    let mut _21: &DropOrderCollector;    // in scope 0 at ui/drop/drop_order.rs:126:16: 126:40
    let mut _22: bool;                   // in scope 0 at ui/drop/drop_order.rs:127:16: 127:50
    let mut _23: &std::option::Option<LoudDrop<'_>>; // in scope 0 at ui/drop/drop_order.rs:127:16: 127:50
    let _24: std::option::Option<LoudDrop<'_>>; // in scope 0 at ui/drop/drop_order.rs:127:16: 127:40
    let mut _25: &DropOrderCollector;    // in scope 0 at ui/drop/drop_order.rs:127:16: 127:40
    let _26: ();                         // in scope 0 at ui/drop/drop_order.rs:129:13: 129:26
    let mut _27: &DropOrderCollector;    // in scope 0 at ui/drop/drop_order.rs:129:13: 129:26
    let mut _28: bool;                   // in scope 0 at ui/drop/drop_order.rs:132:17: 133:50
    let mut _29: bool;                   // in scope 0 at ui/drop/drop_order.rs:132:17: 132:51
    let mut _30: &std::option::Option<LoudDrop<'_>>; // in scope 0 at ui/drop/drop_order.rs:132:17: 132:51
    let _31: std::option::Option<LoudDrop<'_>>; // in scope 0 at ui/drop/drop_order.rs:132:17: 132:41
    let mut _32: &DropOrderCollector;    // in scope 0 at ui/drop/drop_order.rs:132:17: 132:41
    let mut _33: bool;                   // in scope 0 at ui/drop/drop_order.rs:133:16: 133:50
    let mut _34: &std::option::Option<LoudDrop<'_>>; // in scope 0 at ui/drop/drop_order.rs:133:16: 133:50
    let _35: std::option::Option<LoudDrop<'_>>; // in scope 0 at ui/drop/drop_order.rs:133:16: 133:40
    let mut _36: &DropOrderCollector;    // in scope 0 at ui/drop/drop_order.rs:133:16: 133:40
    let mut _37: bool;                   // in scope 0 at ui/drop/drop_order.rs:134:16: 134:50
    let mut _38: &std::option::Option<LoudDrop<'_>>; // in scope 0 at ui/drop/drop_order.rs:134:16: 134:50
    let _39: std::option::Option<LoudDrop<'_>>; // in scope 0 at ui/drop/drop_order.rs:134:16: 134:40
    let mut _40: &DropOrderCollector;    // in scope 0 at ui/drop/drop_order.rs:134:16: 134:40
    let _41: ();                         // in scope 0 at ui/drop/drop_order.rs:135:9: 135:23
    let mut _42: &DropOrderCollector;    // in scope 0 at ui/drop/drop_order.rs:135:9: 135:23
    let mut _43: bool;                   // in scope 0 at ui/drop/drop_order.rs:138:12: 142:51
    let mut _44: bool;                   // in scope 0 at ui/drop/drop_order.rs:138:12: 141:52
    let mut _45: bool;                   // in scope 0 at ui/drop/drop_order.rs:138:12: 138:47
    let mut _46: &std::option::Option<LoudDrop<'_>>; // in scope 0 at ui/drop/drop_order.rs:138:12: 138:47
    let _47: std::option::Option<LoudDrop<'_>>; // in scope 0 at ui/drop/drop_order.rs:138:12: 138:37
    let mut _48: &DropOrderCollector;    // in scope 0 at ui/drop/drop_order.rs:138:12: 138:37
    let mut _49: bool;                   // in scope 0 at ui/drop/drop_order.rs:139:16: 141:52
    let mut _50: bool;                   // in scope 0 at ui/drop/drop_order.rs:139:17: 140:51
    let mut _51: bool;                   // in scope 0 at ui/drop/drop_order.rs:139:17: 139:52
    let mut _52: &std::option::Option<LoudDrop<'_>>; // in scope 0 at ui/drop/drop_order.rs:139:17: 139:52
    let _53: std::option::Option<LoudDrop<'_>>; // in scope 0 at ui/drop/drop_order.rs:139:17: 139:42
    let mut _54: &DropOrderCollector;    // in scope 0 at ui/drop/drop_order.rs:139:17: 139:42
    let mut _55: bool;                   // in scope 0 at ui/drop/drop_order.rs:140:16: 140:51
    let mut _56: &std::option::Option<LoudDrop<'_>>; // in scope 0 at ui/drop/drop_order.rs:140:16: 140:51
    let _57: std::option::Option<LoudDrop<'_>>; // in scope 0 at ui/drop/drop_order.rs:140:16: 140:41
    let mut _58: &DropOrderCollector;    // in scope 0 at ui/drop/drop_order.rs:140:16: 140:41
    let mut _59: bool;                   // in scope 0 at ui/drop/drop_order.rs:141:16: 141:51
    let mut _60: &std::option::Option<LoudDrop<'_>>; // in scope 0 at ui/drop/drop_order.rs:141:16: 141:51
    let _61: std::option::Option<LoudDrop<'_>>; // in scope 0 at ui/drop/drop_order.rs:141:16: 141:41
    let mut _62: &DropOrderCollector;    // in scope 0 at ui/drop/drop_order.rs:141:16: 141:41
    let mut _63: bool;                   // in scope 0 at ui/drop/drop_order.rs:142:16: 142:51
    let mut _64: &std::option::Option<LoudDrop<'_>>; // in scope 0 at ui/drop/drop_order.rs:142:16: 142:51
    let _65: std::option::Option<LoudDrop<'_>>; // in scope 0 at ui/drop/drop_order.rs:142:16: 142:41
    let mut _66: &DropOrderCollector;    // in scope 0 at ui/drop/drop_order.rs:142:16: 142:41
    let _67: ();                         // in scope 0 at ui/drop/drop_order.rs:144:13: 144:27
    let mut _68: &DropOrderCollector;    // in scope 0 at ui/drop/drop_order.rs:144:13: 144:27
    scope 1 {
    }

    bb0: {
        _9 = _1;                         // scope 0 at ui/drop/drop_order.rs:123:12: 123:36
        _8 = DropOrderCollector::option_loud_drop(move _9, const 1_u32) -> bb13; // scope 0 at ui/drop/drop_order.rs:123:12: 123:36
                                         // mir::Constant
                                         // + span: ui/drop/drop_order.rs:123:17: 123:33
                                         // + literal: Const { ty: for<'a> fn(&'a DropOrderCollector, u32) -> Option<LoudDrop<'a>> {DropOrderCollector::option_loud_drop}, val: Value(<ZST>) }
    }

    bb1: {
        _2 = const false;                // scope 0 at ui/drop/drop_order.rs:123:12: 127:50
        goto -> bb3;                     // scope 0 at ui/drop/drop_order.rs:123:12: 127:50
    }

    bb2: {
        _25 = _1;                        // scope 0 at ui/drop/drop_order.rs:127:16: 127:40
        _24 = DropOrderCollector::option_loud_drop(move _25, const 5_u32) -> bb25; // scope 0 at ui/drop/drop_order.rs:127:16: 127:40
                                         // mir::Constant
                                         // + span: ui/drop/drop_order.rs:127:21: 127:37
                                         // + literal: Const { ty: for<'a> fn(&'a DropOrderCollector, u32) -> Option<LoudDrop<'a>> {DropOrderCollector::option_loud_drop}, val: Value(<ZST>) }
    }

    bb3: {
        switchInt(move _2) -> [0: bb29, otherwise: bb28]; // scope 0 at ui/drop/drop_order.rs:123:12: 127:50
    }

    bb4: {
        _3 = const false;                // scope 0 at ui/drop/drop_order.rs:123:12: 126:50
        goto -> bb6;                     // scope 0 at ui/drop/drop_order.rs:123:12: 126:50
    }

    bb5: {
        _21 = _1;                        // scope 0 at ui/drop/drop_order.rs:126:16: 126:40
        _20 = DropOrderCollector::option_loud_drop(move _21, const 4_u32) -> bb22; // scope 0 at ui/drop/drop_order.rs:126:16: 126:40
                                         // mir::Constant
                                         // + span: ui/drop/drop_order.rs:126:21: 126:37
                                         // + literal: Const { ty: for<'a> fn(&'a DropOrderCollector, u32) -> Option<LoudDrop<'a>> {DropOrderCollector::option_loud_drop}, val: Value(<ZST>) }
    }

    bb6: {
        switchInt(move _3) -> [0: bb1, otherwise: bb2]; // scope 0 at ui/drop/drop_order.rs:123:12: 127:50
    }

    bb7: {
        _4 = const false;                // scope 0 at ui/drop/drop_order.rs:123:12: 125:50
        goto -> bb9;                     // scope 0 at ui/drop/drop_order.rs:123:12: 125:50
    }

    bb8: {
        _17 = _1;                        // scope 0 at ui/drop/drop_order.rs:125:16: 125:40
        _16 = DropOrderCollector::option_loud_drop(move _17, const 3_u32) -> bb19; // scope 0 at ui/drop/drop_order.rs:125:16: 125:40
                                         // mir::Constant
                                         // + span: ui/drop/drop_order.rs:125:21: 125:37
                                         // + literal: Const { ty: for<'a> fn(&'a DropOrderCollector, u32) -> Option<LoudDrop<'a>> {DropOrderCollector::option_loud_drop}, val: Value(<ZST>) }
    }

    bb9: {
        switchInt(move _4) -> [0: bb4, otherwise: bb5]; // scope 0 at ui/drop/drop_order.rs:123:12: 126:50
    }

    bb10: {
        _5 = const false;                // scope 0 at ui/drop/drop_order.rs:123:12: 124:50
        goto -> bb12;                    // scope 0 at ui/drop/drop_order.rs:123:12: 124:50
    }

    bb11: {
        _13 = _1;                        // scope 0 at ui/drop/drop_order.rs:124:16: 124:40
        _12 = DropOrderCollector::option_loud_drop(move _13, const 2_u32) -> bb16; // scope 0 at ui/drop/drop_order.rs:124:16: 124:40
                                         // mir::Constant
                                         // + span: ui/drop/drop_order.rs:124:21: 124:37
                                         // + literal: Const { ty: for<'a> fn(&'a DropOrderCollector, u32) -> Option<LoudDrop<'a>> {DropOrderCollector::option_loud_drop}, val: Value(<ZST>) }
    }

    bb12: {
        switchInt(move _5) -> [0: bb7, otherwise: bb8]; // scope 0 at ui/drop/drop_order.rs:123:12: 125:50
    }

    bb13: {
        _7 = &_8;                        // scope 0 at ui/drop/drop_order.rs:123:12: 123:46
        _6 = Option::<LoudDrop<'_>>::is_some(move _7) -> [return: bb14, unwind: bb85]; // scope 0 at ui/drop/drop_order.rs:123:12: 123:46
                                         // mir::Constant
                                         // + span: ui/drop/drop_order.rs:123:37: 123:44
                                         // + literal: Const { ty: for<'a> fn(&'a Option<LoudDrop<'_>>) -> bool {Option::<LoudDrop<'_>>::is_some}, val: Value(<ZST>) }
    }

    bb14: {
        drop(_8) -> bb15;                // scope 0 at ui/drop/drop_order.rs:123:45: 123:46
    }

    bb15: {
        switchInt(move _6) -> [0: bb10, otherwise: bb11]; // scope 0 at ui/drop/drop_order.rs:123:12: 124:50
    }

    bb16: {
        _11 = &_12;                      // scope 0 at ui/drop/drop_order.rs:124:16: 124:50
        _10 = Option::<LoudDrop<'_>>::is_some(move _11) -> [return: bb17, unwind: bb84]; // scope 0 at ui/drop/drop_order.rs:124:16: 124:50
                                         // mir::Constant
                                         // + span: ui/drop/drop_order.rs:124:41: 124:48
                                         // + literal: Const { ty: for<'a> fn(&'a Option<LoudDrop<'_>>) -> bool {Option::<LoudDrop<'_>>::is_some}, val: Value(<ZST>) }
    }

    bb17: {
        drop(_12) -> bb18;               // scope 0 at ui/drop/drop_order.rs:124:49: 124:50
    }

    bb18: {
        _5 = move _10;                   // scope 0 at ui/drop/drop_order.rs:123:12: 124:50
        goto -> bb12;                    // scope 0 at ui/drop/drop_order.rs:123:12: 124:50
    }

    bb19: {
        _15 = &_16;                      // scope 0 at ui/drop/drop_order.rs:125:16: 125:50
        _14 = Option::<LoudDrop<'_>>::is_some(move _15) -> [return: bb20, unwind: bb83]; // scope 0 at ui/drop/drop_order.rs:125:16: 125:50
                                         // mir::Constant
                                         // + span: ui/drop/drop_order.rs:125:41: 125:48
                                         // + literal: Const { ty: for<'a> fn(&'a Option<LoudDrop<'_>>) -> bool {Option::<LoudDrop<'_>>::is_some}, val: Value(<ZST>) }
    }

    bb20: {
        drop(_16) -> bb21;               // scope 0 at ui/drop/drop_order.rs:125:49: 125:50
    }

    bb21: {
        _4 = move _14;                   // scope 0 at ui/drop/drop_order.rs:123:12: 125:50
        goto -> bb9;                     // scope 0 at ui/drop/drop_order.rs:123:12: 125:50
    }

    bb22: {
        _19 = &_20;                      // scope 0 at ui/drop/drop_order.rs:126:16: 126:50
        _18 = Option::<LoudDrop<'_>>::is_some(move _19) -> [return: bb23, unwind: bb82]; // scope 0 at ui/drop/drop_order.rs:126:16: 126:50
                                         // mir::Constant
                                         // + span: ui/drop/drop_order.rs:126:41: 126:48
                                         // + literal: Const { ty: for<'a> fn(&'a Option<LoudDrop<'_>>) -> bool {Option::<LoudDrop<'_>>::is_some}, val: Value(<ZST>) }
    }

    bb23: {
        drop(_20) -> bb24;               // scope 0 at ui/drop/drop_order.rs:126:49: 126:50
    }

    bb24: {
        _3 = move _18;                   // scope 0 at ui/drop/drop_order.rs:123:12: 126:50
        goto -> bb6;                     // scope 0 at ui/drop/drop_order.rs:123:12: 126:50
    }

    bb25: {
        _23 = &_24;                      // scope 0 at ui/drop/drop_order.rs:127:16: 127:50
        _22 = Option::<LoudDrop<'_>>::is_some(move _23) -> [return: bb26, unwind: bb81]; // scope 0 at ui/drop/drop_order.rs:127:16: 127:50
                                         // mir::Constant
                                         // + span: ui/drop/drop_order.rs:127:41: 127:48
                                         // + literal: Const { ty: for<'a> fn(&'a Option<LoudDrop<'_>>) -> bool {Option::<LoudDrop<'_>>::is_some}, val: Value(<ZST>) }
    }

    bb26: {
        drop(_24) -> bb27;               // scope 0 at ui/drop/drop_order.rs:127:49: 127:50
    }

    bb27: {
        _2 = move _22;                   // scope 0 at ui/drop/drop_order.rs:123:12: 127:50
        goto -> bb3;                     // scope 0 at ui/drop/drop_order.rs:123:12: 127:50
    }

    bb28: {
        _27 = _1;                        // scope 0 at ui/drop/drop_order.rs:129:13: 129:26
        _26 = DropOrderCollector::print(move _27, const 6_u32) -> bb29; // scope 0 at ui/drop/drop_order.rs:129:13: 129:26
                                         // mir::Constant
                                         // + span: ui/drop/drop_order.rs:129:18: 129:23
                                         // + literal: Const { ty: for<'a> fn(&'a DropOrderCollector, u32) {DropOrderCollector::print}, val: Value(<ZST>) }
    }

    bb29: {
        _32 = _1;                        // scope 0 at ui/drop/drop_order.rs:132:17: 132:41
        _31 = DropOrderCollector::option_loud_drop(move _32, const 7_u32) -> bb35; // scope 0 at ui/drop/drop_order.rs:132:17: 132:41
                                         // mir::Constant
                                         // + span: ui/drop/drop_order.rs:132:22: 132:38
                                         // + literal: Const { ty: for<'a> fn(&'a DropOrderCollector, u32) -> Option<LoudDrop<'a>> {DropOrderCollector::option_loud_drop}, val: Value(<ZST>) }
    }

    bb30: {
        _40 = _1;                        // scope 0 at ui/drop/drop_order.rs:134:16: 134:40
        _39 = DropOrderCollector::option_loud_drop(move _40, const 9_u32) -> bb41; // scope 0 at ui/drop/drop_order.rs:134:16: 134:40
                                         // mir::Constant
                                         // + span: ui/drop/drop_order.rs:134:21: 134:37
                                         // + literal: Const { ty: for<'a> fn(&'a DropOrderCollector, u32) -> Option<LoudDrop<'a>> {DropOrderCollector::option_loud_drop}, val: Value(<ZST>) }
    }

    bb31: {
        _42 = _1;                        // scope 1 at ui/drop/drop_order.rs:135:9: 135:23
        _41 = DropOrderCollector::print(move _42, const 10_u32) -> bb43; // scope 1 at ui/drop/drop_order.rs:135:9: 135:23
                                         // mir::Constant
                                         // + span: ui/drop/drop_order.rs:135:14: 135:19
                                         // + literal: Const { ty: for<'a> fn(&'a DropOrderCollector, u32) {DropOrderCollector::print}, val: Value(<ZST>) }
    }

    bb32: {
        _28 = const false;               // scope 0 at ui/drop/drop_order.rs:132:17: 133:50
        goto -> bb34;                    // scope 0 at ui/drop/drop_order.rs:132:17: 133:50
    }

    bb33: {
        _36 = _1;                        // scope 0 at ui/drop/drop_order.rs:133:16: 133:40
        _35 = DropOrderCollector::option_loud_drop(move _36, const 8_u32) -> bb38; // scope 0 at ui/drop/drop_order.rs:133:16: 133:40
                                         // mir::Constant
                                         // + span: ui/drop/drop_order.rs:133:21: 133:37
                                         // + literal: Const { ty: for<'a> fn(&'a DropOrderCollector, u32) -> Option<LoudDrop<'a>> {DropOrderCollector::option_loud_drop}, val: Value(<ZST>) }
    }

    bb34: {
        switchInt(move _28) -> [0: bb31, otherwise: bb30]; // scope 0 at ui/drop/drop_order.rs:132:17: 134:50
    }

    bb35: {
        _30 = &_31;                      // scope 0 at ui/drop/drop_order.rs:132:17: 132:51
        _29 = Option::<LoudDrop<'_>>::is_some(move _30) -> [return: bb36, unwind: bb80]; // scope 0 at ui/drop/drop_order.rs:132:17: 132:51
                                         // mir::Constant
                                         // + span: ui/drop/drop_order.rs:132:42: 132:49
                                         // + literal: Const { ty: for<'a> fn(&'a Option<LoudDrop<'_>>) -> bool {Option::<LoudDrop<'_>>::is_some}, val: Value(<ZST>) }
    }

    bb36: {
        drop(_31) -> bb37;               // scope 0 at ui/drop/drop_order.rs:132:50: 132:51
    }

    bb37: {
        switchInt(move _29) -> [0: bb32, otherwise: bb33]; // scope 0 at ui/drop/drop_order.rs:132:17: 133:50
    }

    bb38: {
        _34 = &_35;                      // scope 0 at ui/drop/drop_order.rs:133:16: 133:50
        _33 = Option::<LoudDrop<'_>>::is_some(move _34) -> [return: bb39, unwind: bb79]; // scope 0 at ui/drop/drop_order.rs:133:16: 133:50
                                         // mir::Constant
                                         // + span: ui/drop/drop_order.rs:133:41: 133:48
                                         // + literal: Const { ty: for<'a> fn(&'a Option<LoudDrop<'_>>) -> bool {Option::<LoudDrop<'_>>::is_some}, val: Value(<ZST>) }
    }

    bb39: {
        drop(_35) -> bb40;               // scope 0 at ui/drop/drop_order.rs:133:49: 133:50
    }

    bb40: {
        _28 = move _33;                  // scope 0 at ui/drop/drop_order.rs:132:17: 133:50
        goto -> bb34;                    // scope 0 at ui/drop/drop_order.rs:132:17: 133:50
    }

    bb41: {
        _38 = &_39;                      // scope 0 at ui/drop/drop_order.rs:134:16: 134:50
        _37 = Option::<LoudDrop<'_>>::is_some(move _38) -> [return: bb42, unwind: bb78]; // scope 0 at ui/drop/drop_order.rs:134:16: 134:50
                                         // mir::Constant
                                         // + span: ui/drop/drop_order.rs:134:41: 134:48
                                         // + literal: Const { ty: for<'a> fn(&'a Option<LoudDrop<'_>>) -> bool {Option::<LoudDrop<'_>>::is_some}, val: Value(<ZST>) }
    }

    bb42: {
        drop(_39) -> bb31;               // scope 0 at ui/drop/drop_order.rs:134:49: 134:50
    }

    bb43: {
        _48 = _1;                        // scope 1 at ui/drop/drop_order.rs:138:12: 138:37
        _47 = DropOrderCollector::option_loud_drop(move _48, const 11_u32) -> bb50; // scope 1 at ui/drop/drop_order.rs:138:12: 138:37
                                         // mir::Constant
                                         // + span: ui/drop/drop_order.rs:138:17: 138:33
                                         // + literal: Const { ty: for<'a> fn(&'a DropOrderCollector, u32) -> Option<LoudDrop<'a>> {DropOrderCollector::option_loud_drop}, val: Value(<ZST>) }
    }

    bb44: {
        _43 = const false;               // scope 1 at ui/drop/drop_order.rs:138:12: 142:51
        goto -> bb46;                    // scope 1 at ui/drop/drop_order.rs:138:12: 142:51
    }

    bb45: {
        _66 = _1;                        // scope 1 at ui/drop/drop_order.rs:142:16: 142:41
        _65 = DropOrderCollector::option_loud_drop(move _66, const 15_u32) -> bb68; // scope 1 at ui/drop/drop_order.rs:142:16: 142:41
                                         // mir::Constant
                                         // + span: ui/drop/drop_order.rs:142:21: 142:37
                                         // + literal: Const { ty: for<'a> fn(&'a DropOrderCollector, u32) -> Option<LoudDrop<'a>> {DropOrderCollector::option_loud_drop}, val: Value(<ZST>) }
    }

    bb46: {
        switchInt(move _43) -> [0: bb72, otherwise: bb71]; // scope 1 at ui/drop/drop_order.rs:138:12: 142:51
    }

    bb47: {
        _44 = const false;               // scope 1 at ui/drop/drop_order.rs:138:12: 141:52
        goto -> bb49;                    // scope 1 at ui/drop/drop_order.rs:138:12: 141:52
    }

    bb48: {
        _54 = _1;                        // scope 1 at ui/drop/drop_order.rs:139:17: 139:42
        _53 = DropOrderCollector::option_loud_drop(move _54, const 12_u32) -> bb59; // scope 1 at ui/drop/drop_order.rs:139:17: 139:42
                                         // mir::Constant
                                         // + span: ui/drop/drop_order.rs:139:22: 139:38
                                         // + literal: Const { ty: for<'a> fn(&'a DropOrderCollector, u32) -> Option<LoudDrop<'a>> {DropOrderCollector::option_loud_drop}, val: Value(<ZST>) }
    }

    bb49: {
        switchInt(move _44) -> [0: bb44, otherwise: bb45]; // scope 1 at ui/drop/drop_order.rs:138:12: 142:51
    }

    bb50: {
        _46 = &_47;                      // scope 1 at ui/drop/drop_order.rs:138:12: 138:47
        _45 = Option::<LoudDrop<'_>>::is_some(move _46) -> [return: bb51, unwind: bb77]; // scope 1 at ui/drop/drop_order.rs:138:12: 138:47
                                         // mir::Constant
                                         // + span: ui/drop/drop_order.rs:138:38: 138:45
                                         // + literal: Const { ty: for<'a> fn(&'a Option<LoudDrop<'_>>) -> bool {Option::<LoudDrop<'_>>::is_some}, val: Value(<ZST>) }
    }

    bb51: {
        drop(_47) -> bb52;               // scope 1 at ui/drop/drop_order.rs:138:46: 138:47
    }

    bb52: {
        switchInt(move _45) -> [0: bb47, otherwise: bb48]; // scope 1 at ui/drop/drop_order.rs:138:12: 141:52
    }

    bb53: {
        _49 = const false;               // scope 1 at ui/drop/drop_order.rs:139:16: 141:52
        goto -> bb55;                    // scope 1 at ui/drop/drop_order.rs:139:16: 141:52
    }

    bb54: {
        _62 = _1;                        // scope 1 at ui/drop/drop_order.rs:141:16: 141:41
        _61 = DropOrderCollector::option_loud_drop(move _62, const 14_u32) -> bb65; // scope 1 at ui/drop/drop_order.rs:141:16: 141:41
                                         // mir::Constant
                                         // + span: ui/drop/drop_order.rs:141:21: 141:37
                                         // + literal: Const { ty: for<'a> fn(&'a DropOrderCollector, u32) -> Option<LoudDrop<'a>> {DropOrderCollector::option_loud_drop}, val: Value(<ZST>) }
    }

    bb55: {
        _44 = move _49;                  // scope 1 at ui/drop/drop_order.rs:138:12: 141:52
        goto -> bb49;                    // scope 1 at ui/drop/drop_order.rs:138:12: 141:52
    }

    bb56: {
        _50 = const false;               // scope 1 at ui/drop/drop_order.rs:139:17: 140:51
        goto -> bb58;                    // scope 1 at ui/drop/drop_order.rs:139:17: 140:51
    }

    bb57: {
        _58 = _1;                        // scope 1 at ui/drop/drop_order.rs:140:16: 140:41
        _57 = DropOrderCollector::option_loud_drop(move _58, const 13_u32) -> bb62; // scope 1 at ui/drop/drop_order.rs:140:16: 140:41
                                         // mir::Constant
                                         // + span: ui/drop/drop_order.rs:140:21: 140:37
                                         // + literal: Const { ty: for<'a> fn(&'a DropOrderCollector, u32) -> Option<LoudDrop<'a>> {DropOrderCollector::option_loud_drop}, val: Value(<ZST>) }
    }

    bb58: {
        switchInt(move _50) -> [0: bb53, otherwise: bb54]; // scope 1 at ui/drop/drop_order.rs:139:16: 141:52
    }

    bb59: {
        _52 = &_53;                      // scope 1 at ui/drop/drop_order.rs:139:17: 139:52
        _51 = Option::<LoudDrop<'_>>::is_some(move _52) -> [return: bb60, unwind: bb76]; // scope 1 at ui/drop/drop_order.rs:139:17: 139:52
                                         // mir::Constant
                                         // + span: ui/drop/drop_order.rs:139:43: 139:50
                                         // + literal: Const { ty: for<'a> fn(&'a Option<LoudDrop<'_>>) -> bool {Option::<LoudDrop<'_>>::is_some}, val: Value(<ZST>) }
    }

    bb60: {
        drop(_53) -> bb61;               // scope 1 at ui/drop/drop_order.rs:139:51: 139:52
    }

    bb61: {
        switchInt(move _51) -> [0: bb56, otherwise: bb57]; // scope 1 at ui/drop/drop_order.rs:139:17: 140:51
    }

    bb62: {
        _56 = &_57;                      // scope 1 at ui/drop/drop_order.rs:140:16: 140:51
        _55 = Option::<LoudDrop<'_>>::is_some(move _56) -> [return: bb63, unwind: bb75]; // scope 1 at ui/drop/drop_order.rs:140:16: 140:51
                                         // mir::Constant
                                         // + span: ui/drop/drop_order.rs:140:42: 140:49
                                         // + literal: Const { ty: for<'a> fn(&'a Option<LoudDrop<'_>>) -> bool {Option::<LoudDrop<'_>>::is_some}, val: Value(<ZST>) }
    }

    bb63: {
        drop(_57) -> bb64;               // scope 1 at ui/drop/drop_order.rs:140:50: 140:51
    }

    bb64: {
        _50 = move _55;                  // scope 1 at ui/drop/drop_order.rs:139:17: 140:51
        goto -> bb58;                    // scope 1 at ui/drop/drop_order.rs:139:17: 140:51
    }

    bb65: {
        _60 = &_61;                      // scope 1 at ui/drop/drop_order.rs:141:16: 141:51
        _59 = Option::<LoudDrop<'_>>::is_some(move _60) -> [return: bb66, unwind: bb74]; // scope 1 at ui/drop/drop_order.rs:141:16: 141:51
                                         // mir::Constant
                                         // + span: ui/drop/drop_order.rs:141:42: 141:49
                                         // + literal: Const { ty: for<'a> fn(&'a Option<LoudDrop<'_>>) -> bool {Option::<LoudDrop<'_>>::is_some}, val: Value(<ZST>) }
    }

    bb66: {
        drop(_61) -> bb67;               // scope 1 at ui/drop/drop_order.rs:141:50: 141:51
    }

    bb67: {
        _49 = move _59;                  // scope 1 at ui/drop/drop_order.rs:139:16: 141:52
        goto -> bb55;                    // scope 1 at ui/drop/drop_order.rs:139:16: 141:52
    }

    bb68: {
        _64 = &_65;                      // scope 1 at ui/drop/drop_order.rs:142:16: 142:51
        _63 = Option::<LoudDrop<'_>>::is_some(move _64) -> [return: bb69, unwind: bb73]; // scope 1 at ui/drop/drop_order.rs:142:16: 142:51
                                         // mir::Constant
                                         // + span: ui/drop/drop_order.rs:142:42: 142:49
                                         // + literal: Const { ty: for<'a> fn(&'a Option<LoudDrop<'_>>) -> bool {Option::<LoudDrop<'_>>::is_some}, val: Value(<ZST>) }
    }

    bb69: {
        drop(_65) -> bb70;               // scope 1 at ui/drop/drop_order.rs:142:50: 142:51
    }

    bb70: {
        _43 = move _63;                  // scope 1 at ui/drop/drop_order.rs:138:12: 142:51
        goto -> bb46;                    // scope 1 at ui/drop/drop_order.rs:138:12: 142:51
    }

    bb71: {
        _68 = _1;                        // scope 1 at ui/drop/drop_order.rs:144:13: 144:27
        _67 = DropOrderCollector::print(move _68, const 16_u32) -> bb72; // scope 1 at ui/drop/drop_order.rs:144:13: 144:27
                                         // mir::Constant
                                         // + span: ui/drop/drop_order.rs:144:18: 144:23
                                         // + literal: Const { ty: for<'a> fn(&'a DropOrderCollector, u32) {DropOrderCollector::print}, val: Value(<ZST>) }
    }

    bb72: {
        return;                          // scope 0 at ui/drop/drop_order.rs:146:6: 146:6
    }

    bb73 (cleanup): {
        drop(_65) -> bb86;               // scope 1 at ui/drop/drop_order.rs:142:50: 142:51
    }

    bb74 (cleanup): {
        drop(_61) -> bb86;               // scope 1 at ui/drop/drop_order.rs:141:50: 141:51
    }

    bb75 (cleanup): {
        drop(_57) -> bb86;               // scope 1 at ui/drop/drop_order.rs:140:50: 140:51
    }

    bb76 (cleanup): {
        drop(_53) -> bb86;               // scope 1 at ui/drop/drop_order.rs:139:51: 139:52
    }

    bb77 (cleanup): {
        drop(_47) -> bb86;               // scope 1 at ui/drop/drop_order.rs:138:46: 138:47
    }

    bb78 (cleanup): {
        drop(_39) -> bb86;               // scope 0 at ui/drop/drop_order.rs:134:49: 134:50
    }

    bb79 (cleanup): {
        drop(_35) -> bb86;               // scope 0 at ui/drop/drop_order.rs:133:49: 133:50
    }

    bb80 (cleanup): {
        drop(_31) -> bb86;               // scope 0 at ui/drop/drop_order.rs:132:50: 132:51
    }

    bb81 (cleanup): {
        drop(_24) -> bb86;               // scope 0 at ui/drop/drop_order.rs:127:49: 127:50
    }

    bb82 (cleanup): {
        drop(_20) -> bb86;               // scope 0 at ui/drop/drop_order.rs:126:49: 126:50
    }

    bb83 (cleanup): {
        drop(_16) -> bb86;               // scope 0 at ui/drop/drop_order.rs:125:49: 125:50
    }

    bb84 (cleanup): {
        drop(_12) -> bb86;               // scope 0 at ui/drop/drop_order.rs:124:49: 124:50
    }

    bb85 (cleanup): {
        drop(_8) -> bb86;                // scope 0 at ui/drop/drop_order.rs:123:45: 123:46
    }

    bb86 (cleanup): {
        resume;                          // scope 0 at ui/drop/drop_order.rs:121:5: 146:6
    }
}

fn <impl at ui/drop/drop_order.rs:20:1: 20:24>::or_chain(_1: &DropOrderCollector) -> () {
    debug self => _1;                    // in scope 0 at ui/drop/drop_order.rs:148:17: 148:22
    let mut _0: ();                      // return place in scope 0 at ui/drop/drop_order.rs:148:24: 148:24
    let mut _2: bool;                    // in scope 0 at ui/drop/drop_order.rs:150:12: 154:50
    let mut _3: bool;                    // in scope 0 at ui/drop/drop_order.rs:150:12: 153:50
    let mut _4: bool;                    // in scope 0 at ui/drop/drop_order.rs:150:12: 152:50
    let mut _5: bool;                    // in scope 0 at ui/drop/drop_order.rs:150:12: 151:50
    let mut _6: bool;                    // in scope 0 at ui/drop/drop_order.rs:150:12: 150:46
    let mut _7: &std::option::Option<LoudDrop<'_>>; // in scope 0 at ui/drop/drop_order.rs:150:12: 150:46
    let _8: std::option::Option<LoudDrop<'_>>; // in scope 0 at ui/drop/drop_order.rs:150:12: 150:36
    let mut _9: &DropOrderCollector;     // in scope 0 at ui/drop/drop_order.rs:150:12: 150:36
    let mut _10: bool;                   // in scope 0 at ui/drop/drop_order.rs:151:16: 151:50
    let mut _11: &std::option::Option<LoudDrop<'_>>; // in scope 0 at ui/drop/drop_order.rs:151:16: 151:50
    let _12: std::option::Option<LoudDrop<'_>>; // in scope 0 at ui/drop/drop_order.rs:151:16: 151:40
    let mut _13: &DropOrderCollector;    // in scope 0 at ui/drop/drop_order.rs:151:16: 151:40
    let mut _14: bool;                   // in scope 0 at ui/drop/drop_order.rs:152:16: 152:50
    let mut _15: &std::option::Option<LoudDrop<'_>>; // in scope 0 at ui/drop/drop_order.rs:152:16: 152:50
    let _16: std::option::Option<LoudDrop<'_>>; // in scope 0 at ui/drop/drop_order.rs:152:16: 152:40
    let mut _17: &DropOrderCollector;    // in scope 0 at ui/drop/drop_order.rs:152:16: 152:40
    let mut _18: bool;                   // in scope 0 at ui/drop/drop_order.rs:153:16: 153:50
    let mut _19: &std::option::Option<LoudDrop<'_>>; // in scope 0 at ui/drop/drop_order.rs:153:16: 153:50
    let _20: std::option::Option<LoudDrop<'_>>; // in scope 0 at ui/drop/drop_order.rs:153:16: 153:40
    let mut _21: &DropOrderCollector;    // in scope 0 at ui/drop/drop_order.rs:153:16: 153:40
    let mut _22: bool;                   // in scope 0 at ui/drop/drop_order.rs:154:16: 154:50
    let mut _23: &std::option::Option<LoudDrop<'_>>; // in scope 0 at ui/drop/drop_order.rs:154:16: 154:50
    let _24: std::option::Option<LoudDrop<'_>>; // in scope 0 at ui/drop/drop_order.rs:154:16: 154:40
    let mut _25: &DropOrderCollector;    // in scope 0 at ui/drop/drop_order.rs:154:16: 154:40
    let _26: ();                         // in scope 0 at ui/drop/drop_order.rs:156:13: 156:26
    let mut _27: &DropOrderCollector;    // in scope 0 at ui/drop/drop_order.rs:156:13: 156:26
    let mut _28: bool;                   // in scope 0 at ui/drop/drop_order.rs:159:17: 160:50
    let mut _29: bool;                   // in scope 0 at ui/drop/drop_order.rs:159:17: 159:51
    let mut _30: &std::option::Option<LoudDrop<'_>>; // in scope 0 at ui/drop/drop_order.rs:159:17: 159:51
    let _31: std::option::Option<LoudDrop<'_>>; // in scope 0 at ui/drop/drop_order.rs:159:17: 159:41
    let mut _32: &DropOrderCollector;    // in scope 0 at ui/drop/drop_order.rs:159:17: 159:41
    let mut _33: bool;                   // in scope 0 at ui/drop/drop_order.rs:160:16: 160:50
    let mut _34: &std::option::Option<LoudDrop<'_>>; // in scope 0 at ui/drop/drop_order.rs:160:16: 160:50
    let _35: std::option::Option<LoudDrop<'_>>; // in scope 0 at ui/drop/drop_order.rs:160:16: 160:40
    let mut _36: &DropOrderCollector;    // in scope 0 at ui/drop/drop_order.rs:160:16: 160:40
    let mut _37: bool;                   // in scope 0 at ui/drop/drop_order.rs:161:16: 161:50
    let mut _38: &std::option::Option<LoudDrop<'_>>; // in scope 0 at ui/drop/drop_order.rs:161:16: 161:50
    let _39: std::option::Option<LoudDrop<'_>>; // in scope 0 at ui/drop/drop_order.rs:161:16: 161:40
    let mut _40: &DropOrderCollector;    // in scope 0 at ui/drop/drop_order.rs:161:16: 161:40
    let _41: ();                         // in scope 0 at ui/drop/drop_order.rs:162:9: 162:23
    let mut _42: &DropOrderCollector;    // in scope 0 at ui/drop/drop_order.rs:162:9: 162:23
    let mut _43: bool;                   // in scope 0 at ui/drop/drop_order.rs:165:12: 169:51
    let mut _44: bool;                   // in scope 0 at ui/drop/drop_order.rs:165:12: 168:52
    let mut _45: bool;                   // in scope 0 at ui/drop/drop_order.rs:165:12: 165:47
    let mut _46: &std::option::Option<LoudDrop<'_>>; // in scope 0 at ui/drop/drop_order.rs:165:12: 165:47
    let _47: std::option::Option<LoudDrop<'_>>; // in scope 0 at ui/drop/drop_order.rs:165:12: 165:37
    let mut _48: &DropOrderCollector;    // in scope 0 at ui/drop/drop_order.rs:165:12: 165:37
    let mut _49: bool;                   // in scope 0 at ui/drop/drop_order.rs:166:16: 168:52
    let mut _50: bool;                   // in scope 0 at ui/drop/drop_order.rs:166:17: 167:51
    let mut _51: bool;                   // in scope 0 at ui/drop/drop_order.rs:166:17: 166:52
    let mut _52: &std::option::Option<LoudDrop<'_>>; // in scope 0 at ui/drop/drop_order.rs:166:17: 166:52
    let _53: std::option::Option<LoudDrop<'_>>; // in scope 0 at ui/drop/drop_order.rs:166:17: 166:42
    let mut _54: &DropOrderCollector;    // in scope 0 at ui/drop/drop_order.rs:166:17: 166:42
    let mut _55: bool;                   // in scope 0 at ui/drop/drop_order.rs:167:16: 167:51
    let mut _56: &std::option::Option<LoudDrop<'_>>; // in scope 0 at ui/drop/drop_order.rs:167:16: 167:51
    let _57: std::option::Option<LoudDrop<'_>>; // in scope 0 at ui/drop/drop_order.rs:167:16: 167:41
    let mut _58: &DropOrderCollector;    // in scope 0 at ui/drop/drop_order.rs:167:16: 167:41
    let mut _59: bool;                   // in scope 0 at ui/drop/drop_order.rs:168:16: 168:51
    let mut _60: &std::option::Option<LoudDrop<'_>>; // in scope 0 at ui/drop/drop_order.rs:168:16: 168:51
    let _61: std::option::Option<LoudDrop<'_>>; // in scope 0 at ui/drop/drop_order.rs:168:16: 168:41
    let mut _62: &DropOrderCollector;    // in scope 0 at ui/drop/drop_order.rs:168:16: 168:41
    let mut _63: bool;                   // in scope 0 at ui/drop/drop_order.rs:169:16: 169:51
    let mut _64: &std::option::Option<LoudDrop<'_>>; // in scope 0 at ui/drop/drop_order.rs:169:16: 169:51
    let _65: std::option::Option<LoudDrop<'_>>; // in scope 0 at ui/drop/drop_order.rs:169:16: 169:41
    let mut _66: &DropOrderCollector;    // in scope 0 at ui/drop/drop_order.rs:169:16: 169:41
    let _67: ();                         // in scope 0 at ui/drop/drop_order.rs:171:13: 171:27
    let mut _68: &DropOrderCollector;    // in scope 0 at ui/drop/drop_order.rs:171:13: 171:27
    scope 1 {
    }

    bb0: {
        _9 = _1;                         // scope 0 at ui/drop/drop_order.rs:150:12: 150:36
        _8 = DropOrderCollector::option_loud_drop(move _9, const 1_u32) -> bb13; // scope 0 at ui/drop/drop_order.rs:150:12: 150:36
                                         // mir::Constant
                                         // + span: ui/drop/drop_order.rs:150:17: 150:33
                                         // + literal: Const { ty: for<'a> fn(&'a DropOrderCollector, u32) -> Option<LoudDrop<'a>> {DropOrderCollector::option_loud_drop}, val: Value(<ZST>) }
    }

    bb1: {
        _2 = const true;                 // scope 0 at ui/drop/drop_order.rs:150:12: 154:50
        goto -> bb3;                     // scope 0 at ui/drop/drop_order.rs:150:12: 154:50
    }

    bb2: {
        _25 = _1;                        // scope 0 at ui/drop/drop_order.rs:154:16: 154:40
        _24 = DropOrderCollector::option_loud_drop(move _25, const 5_u32) -> bb25; // scope 0 at ui/drop/drop_order.rs:154:16: 154:40
                                         // mir::Constant
                                         // + span: ui/drop/drop_order.rs:154:21: 154:37
                                         // + literal: Const { ty: for<'a> fn(&'a DropOrderCollector, u32) -> Option<LoudDrop<'a>> {DropOrderCollector::option_loud_drop}, val: Value(<ZST>) }
    }

    bb3: {
        switchInt(move _2) -> [0: bb29, otherwise: bb28]; // scope 0 at ui/drop/drop_order.rs:150:12: 154:50
    }

    bb4: {
        _3 = const true;                 // scope 0 at ui/drop/drop_order.rs:150:12: 153:50
        goto -> bb6;                     // scope 0 at ui/drop/drop_order.rs:150:12: 153:50
    }

    bb5: {
        _21 = _1;                        // scope 0 at ui/drop/drop_order.rs:153:16: 153:40
        _20 = DropOrderCollector::option_loud_drop(move _21, const 4_u32) -> bb22; // scope 0 at ui/drop/drop_order.rs:153:16: 153:40
                                         // mir::Constant
                                         // + span: ui/drop/drop_order.rs:153:21: 153:37
                                         // + literal: Const { ty: for<'a> fn(&'a DropOrderCollector, u32) -> Option<LoudDrop<'a>> {DropOrderCollector::option_loud_drop}, val: Value(<ZST>) }
    }

    bb6: {
        switchInt(move _3) -> [0: bb2, otherwise: bb1]; // scope 0 at ui/drop/drop_order.rs:150:12: 154:50
    }

    bb7: {
        _4 = const true;                 // scope 0 at ui/drop/drop_order.rs:150:12: 152:50
        goto -> bb9;                     // scope 0 at ui/drop/drop_order.rs:150:12: 152:50
    }

    bb8: {
        _17 = _1;                        // scope 0 at ui/drop/drop_order.rs:152:16: 152:40
        _16 = DropOrderCollector::option_loud_drop(move _17, const 3_u32) -> bb19; // scope 0 at ui/drop/drop_order.rs:152:16: 152:40
                                         // mir::Constant
                                         // + span: ui/drop/drop_order.rs:152:21: 152:37
                                         // + literal: Const { ty: for<'a> fn(&'a DropOrderCollector, u32) -> Option<LoudDrop<'a>> {DropOrderCollector::option_loud_drop}, val: Value(<ZST>) }
    }

    bb9: {
        switchInt(move _4) -> [0: bb5, otherwise: bb4]; // scope 0 at ui/drop/drop_order.rs:150:12: 153:50
    }

    bb10: {
        _5 = const true;                 // scope 0 at ui/drop/drop_order.rs:150:12: 151:50
        goto -> bb12;                    // scope 0 at ui/drop/drop_order.rs:150:12: 151:50
    }

    bb11: {
        _13 = _1;                        // scope 0 at ui/drop/drop_order.rs:151:16: 151:40
        _12 = DropOrderCollector::option_loud_drop(move _13, const 2_u32) -> bb16; // scope 0 at ui/drop/drop_order.rs:151:16: 151:40
                                         // mir::Constant
                                         // + span: ui/drop/drop_order.rs:151:21: 151:37
                                         // + literal: Const { ty: for<'a> fn(&'a DropOrderCollector, u32) -> Option<LoudDrop<'a>> {DropOrderCollector::option_loud_drop}, val: Value(<ZST>) }
    }

    bb12: {
        switchInt(move _5) -> [0: bb8, otherwise: bb7]; // scope 0 at ui/drop/drop_order.rs:150:12: 152:50
    }

    bb13: {
        _7 = &_8;                        // scope 0 at ui/drop/drop_order.rs:150:12: 150:46
        _6 = Option::<LoudDrop<'_>>::is_none(move _7) -> [return: bb14, unwind: bb85]; // scope 0 at ui/drop/drop_order.rs:150:12: 150:46
                                         // mir::Constant
                                         // + span: ui/drop/drop_order.rs:150:37: 150:44
                                         // + literal: Const { ty: for<'a> fn(&'a Option<LoudDrop<'_>>) -> bool {Option::<LoudDrop<'_>>::is_none}, val: Value(<ZST>) }
    }

    bb14: {
        drop(_8) -> bb15;                // scope 0 at ui/drop/drop_order.rs:150:45: 150:46
    }

    bb15: {
        switchInt(move _6) -> [0: bb11, otherwise: bb10]; // scope 0 at ui/drop/drop_order.rs:150:12: 151:50
    }

    bb16: {
        _11 = &_12;                      // scope 0 at ui/drop/drop_order.rs:151:16: 151:50
        _10 = Option::<LoudDrop<'_>>::is_none(move _11) -> [return: bb17, unwind: bb84]; // scope 0 at ui/drop/drop_order.rs:151:16: 151:50
                                         // mir::Constant
                                         // + span: ui/drop/drop_order.rs:151:41: 151:48
                                         // + literal: Const { ty: for<'a> fn(&'a Option<LoudDrop<'_>>) -> bool {Option::<LoudDrop<'_>>::is_none}, val: Value(<ZST>) }
    }

    bb17: {
        drop(_12) -> bb18;               // scope 0 at ui/drop/drop_order.rs:151:49: 151:50
    }

    bb18: {
        _5 = move _10;                   // scope 0 at ui/drop/drop_order.rs:150:12: 151:50
        goto -> bb12;                    // scope 0 at ui/drop/drop_order.rs:150:12: 151:50
    }

    bb19: {
        _15 = &_16;                      // scope 0 at ui/drop/drop_order.rs:152:16: 152:50
        _14 = Option::<LoudDrop<'_>>::is_none(move _15) -> [return: bb20, unwind: bb83]; // scope 0 at ui/drop/drop_order.rs:152:16: 152:50
                                         // mir::Constant
                                         // + span: ui/drop/drop_order.rs:152:41: 152:48
                                         // + literal: Const { ty: for<'a> fn(&'a Option<LoudDrop<'_>>) -> bool {Option::<LoudDrop<'_>>::is_none}, val: Value(<ZST>) }
    }

    bb20: {
        drop(_16) -> bb21;               // scope 0 at ui/drop/drop_order.rs:152:49: 152:50
    }

    bb21: {
        _4 = move _14;                   // scope 0 at ui/drop/drop_order.rs:150:12: 152:50
        goto -> bb9;                     // scope 0 at ui/drop/drop_order.rs:150:12: 152:50
    }

    bb22: {
        _19 = &_20;                      // scope 0 at ui/drop/drop_order.rs:153:16: 153:50
        _18 = Option::<LoudDrop<'_>>::is_none(move _19) -> [return: bb23, unwind: bb82]; // scope 0 at ui/drop/drop_order.rs:153:16: 153:50
                                         // mir::Constant
                                         // + span: ui/drop/drop_order.rs:153:41: 153:48
                                         // + literal: Const { ty: for<'a> fn(&'a Option<LoudDrop<'_>>) -> bool {Option::<LoudDrop<'_>>::is_none}, val: Value(<ZST>) }
    }

    bb23: {
        drop(_20) -> bb24;               // scope 0 at ui/drop/drop_order.rs:153:49: 153:50
    }

    bb24: {
        _3 = move _18;                   // scope 0 at ui/drop/drop_order.rs:150:12: 153:50
        goto -> bb6;                     // scope 0 at ui/drop/drop_order.rs:150:12: 153:50
    }

    bb25: {
        _23 = &_24;                      // scope 0 at ui/drop/drop_order.rs:154:16: 154:50
        _22 = Option::<LoudDrop<'_>>::is_some(move _23) -> [return: bb26, unwind: bb81]; // scope 0 at ui/drop/drop_order.rs:154:16: 154:50
                                         // mir::Constant
                                         // + span: ui/drop/drop_order.rs:154:41: 154:48
                                         // + literal: Const { ty: for<'a> fn(&'a Option<LoudDrop<'_>>) -> bool {Option::<LoudDrop<'_>>::is_some}, val: Value(<ZST>) }
    }

    bb26: {
        drop(_24) -> bb27;               // scope 0 at ui/drop/drop_order.rs:154:49: 154:50
    }

    bb27: {
        _2 = move _22;                   // scope 0 at ui/drop/drop_order.rs:150:12: 154:50
        goto -> bb3;                     // scope 0 at ui/drop/drop_order.rs:150:12: 154:50
    }

    bb28: {
        _27 = _1;                        // scope 0 at ui/drop/drop_order.rs:156:13: 156:26
        _26 = DropOrderCollector::print(move _27, const 6_u32) -> bb29; // scope 0 at ui/drop/drop_order.rs:156:13: 156:26
                                         // mir::Constant
                                         // + span: ui/drop/drop_order.rs:156:18: 156:23
                                         // + literal: Const { ty: for<'a> fn(&'a DropOrderCollector, u32) {DropOrderCollector::print}, val: Value(<ZST>) }
    }

    bb29: {
        _32 = _1;                        // scope 0 at ui/drop/drop_order.rs:159:17: 159:41
        _31 = DropOrderCollector::option_loud_drop(move _32, const 7_u32) -> bb35; // scope 0 at ui/drop/drop_order.rs:159:17: 159:41
                                         // mir::Constant
                                         // + span: ui/drop/drop_order.rs:159:22: 159:38
                                         // + literal: Const { ty: for<'a> fn(&'a DropOrderCollector, u32) -> Option<LoudDrop<'a>> {DropOrderCollector::option_loud_drop}, val: Value(<ZST>) }
    }

    bb30: {
        _40 = _1;                        // scope 0 at ui/drop/drop_order.rs:161:16: 161:40
        _39 = DropOrderCollector::option_loud_drop(move _40, const 9_u32) -> bb41; // scope 0 at ui/drop/drop_order.rs:161:16: 161:40
                                         // mir::Constant
                                         // + span: ui/drop/drop_order.rs:161:21: 161:37
                                         // + literal: Const { ty: for<'a> fn(&'a DropOrderCollector, u32) -> Option<LoudDrop<'a>> {DropOrderCollector::option_loud_drop}, val: Value(<ZST>) }
    }

    bb31: {
        _42 = _1;                        // scope 1 at ui/drop/drop_order.rs:162:9: 162:23
        _41 = DropOrderCollector::print(move _42, const 10_u32) -> bb43; // scope 1 at ui/drop/drop_order.rs:162:9: 162:23
                                         // mir::Constant
                                         // + span: ui/drop/drop_order.rs:162:14: 162:19
                                         // + literal: Const { ty: for<'a> fn(&'a DropOrderCollector, u32) {DropOrderCollector::print}, val: Value(<ZST>) }
    }

    bb32: {
        _28 = const true;                // scope 0 at ui/drop/drop_order.rs:159:17: 160:50
        goto -> bb34;                    // scope 0 at ui/drop/drop_order.rs:159:17: 160:50
    }

    bb33: {
        _36 = _1;                        // scope 0 at ui/drop/drop_order.rs:160:16: 160:40
        _35 = DropOrderCollector::option_loud_drop(move _36, const 8_u32) -> bb38; // scope 0 at ui/drop/drop_order.rs:160:16: 160:40
                                         // mir::Constant
                                         // + span: ui/drop/drop_order.rs:160:21: 160:37
                                         // + literal: Const { ty: for<'a> fn(&'a DropOrderCollector, u32) -> Option<LoudDrop<'a>> {DropOrderCollector::option_loud_drop}, val: Value(<ZST>) }
    }

    bb34: {
        switchInt(move _28) -> [0: bb30, otherwise: bb31]; // scope 0 at ui/drop/drop_order.rs:159:17: 161:50
    }

    bb35: {
        _30 = &_31;                      // scope 0 at ui/drop/drop_order.rs:159:17: 159:51
        _29 = Option::<LoudDrop<'_>>::is_none(move _30) -> [return: bb36, unwind: bb80]; // scope 0 at ui/drop/drop_order.rs:159:17: 159:51
                                         // mir::Constant
                                         // + span: ui/drop/drop_order.rs:159:42: 159:49
                                         // + literal: Const { ty: for<'a> fn(&'a Option<LoudDrop<'_>>) -> bool {Option::<LoudDrop<'_>>::is_none}, val: Value(<ZST>) }
    }

    bb36: {
        drop(_31) -> bb37;               // scope 0 at ui/drop/drop_order.rs:159:50: 159:51
    }

    bb37: {
        switchInt(move _29) -> [0: bb33, otherwise: bb32]; // scope 0 at ui/drop/drop_order.rs:159:17: 160:50
    }

    bb38: {
        _34 = &_35;                      // scope 0 at ui/drop/drop_order.rs:160:16: 160:50
        _33 = Option::<LoudDrop<'_>>::is_none(move _34) -> [return: bb39, unwind: bb79]; // scope 0 at ui/drop/drop_order.rs:160:16: 160:50
                                         // mir::Constant
                                         // + span: ui/drop/drop_order.rs:160:41: 160:48
                                         // + literal: Const { ty: for<'a> fn(&'a Option<LoudDrop<'_>>) -> bool {Option::<LoudDrop<'_>>::is_none}, val: Value(<ZST>) }
    }

    bb39: {
        drop(_35) -> bb40;               // scope 0 at ui/drop/drop_order.rs:160:49: 160:50
    }

    bb40: {
        _28 = move _33;                  // scope 0 at ui/drop/drop_order.rs:159:17: 160:50
        goto -> bb34;                    // scope 0 at ui/drop/drop_order.rs:159:17: 160:50
    }

    bb41: {
        _38 = &_39;                      // scope 0 at ui/drop/drop_order.rs:161:16: 161:50
        _37 = Option::<LoudDrop<'_>>::is_none(move _38) -> [return: bb42, unwind: bb78]; // scope 0 at ui/drop/drop_order.rs:161:16: 161:50
                                         // mir::Constant
                                         // + span: ui/drop/drop_order.rs:161:41: 161:48
                                         // + literal: Const { ty: for<'a> fn(&'a Option<LoudDrop<'_>>) -> bool {Option::<LoudDrop<'_>>::is_none}, val: Value(<ZST>) }
    }

    bb42: {
        drop(_39) -> bb31;               // scope 0 at ui/drop/drop_order.rs:161:49: 161:50
    }

    bb43: {
        _48 = _1;                        // scope 1 at ui/drop/drop_order.rs:165:12: 165:37
        _47 = DropOrderCollector::option_loud_drop(move _48, const 11_u32) -> bb50; // scope 1 at ui/drop/drop_order.rs:165:12: 165:37
                                         // mir::Constant
                                         // + span: ui/drop/drop_order.rs:165:17: 165:33
                                         // + literal: Const { ty: for<'a> fn(&'a DropOrderCollector, u32) -> Option<LoudDrop<'a>> {DropOrderCollector::option_loud_drop}, val: Value(<ZST>) }
    }

    bb44: {
        _43 = const true;                // scope 1 at ui/drop/drop_order.rs:165:12: 169:51
        goto -> bb46;                    // scope 1 at ui/drop/drop_order.rs:165:12: 169:51
    }

    bb45: {
        _66 = _1;                        // scope 1 at ui/drop/drop_order.rs:169:16: 169:41
        _65 = DropOrderCollector::option_loud_drop(move _66, const 15_u32) -> bb68; // scope 1 at ui/drop/drop_order.rs:169:16: 169:41
                                         // mir::Constant
                                         // + span: ui/drop/drop_order.rs:169:21: 169:37
                                         // + literal: Const { ty: for<'a> fn(&'a DropOrderCollector, u32) -> Option<LoudDrop<'a>> {DropOrderCollector::option_loud_drop}, val: Value(<ZST>) }
    }

    bb46: {
        switchInt(move _43) -> [0: bb72, otherwise: bb71]; // scope 1 at ui/drop/drop_order.rs:165:12: 169:51
    }

    bb47: {
        _44 = const true;                // scope 1 at ui/drop/drop_order.rs:165:12: 168:52
        goto -> bb49;                    // scope 1 at ui/drop/drop_order.rs:165:12: 168:52
    }

    bb48: {
        _54 = _1;                        // scope 1 at ui/drop/drop_order.rs:166:17: 166:42
        _53 = DropOrderCollector::option_loud_drop(move _54, const 12_u32) -> bb59; // scope 1 at ui/drop/drop_order.rs:166:17: 166:42
                                         // mir::Constant
                                         // + span: ui/drop/drop_order.rs:166:22: 166:38
                                         // + literal: Const { ty: for<'a> fn(&'a DropOrderCollector, u32) -> Option<LoudDrop<'a>> {DropOrderCollector::option_loud_drop}, val: Value(<ZST>) }
    }

    bb49: {
        switchInt(move _44) -> [0: bb45, otherwise: bb44]; // scope 1 at ui/drop/drop_order.rs:165:12: 169:51
    }

    bb50: {
        _46 = &_47;                      // scope 1 at ui/drop/drop_order.rs:165:12: 165:47
        _45 = Option::<LoudDrop<'_>>::is_none(move _46) -> [return: bb51, unwind: bb77]; // scope 1 at ui/drop/drop_order.rs:165:12: 165:47
                                         // mir::Constant
                                         // + span: ui/drop/drop_order.rs:165:38: 165:45
                                         // + literal: Const { ty: for<'a> fn(&'a Option<LoudDrop<'_>>) -> bool {Option::<LoudDrop<'_>>::is_none}, val: Value(<ZST>) }
    }

    bb51: {
        drop(_47) -> bb52;               // scope 1 at ui/drop/drop_order.rs:165:46: 165:47
    }

    bb52: {
        switchInt(move _45) -> [0: bb48, otherwise: bb47]; // scope 1 at ui/drop/drop_order.rs:165:12: 168:52
    }

    bb53: {
        _49 = const true;                // scope 1 at ui/drop/drop_order.rs:166:16: 168:52
        goto -> bb55;                    // scope 1 at ui/drop/drop_order.rs:166:16: 168:52
    }

    bb54: {
        _62 = _1;                        // scope 1 at ui/drop/drop_order.rs:168:16: 168:41
        _61 = DropOrderCollector::option_loud_drop(move _62, const 14_u32) -> bb65; // scope 1 at ui/drop/drop_order.rs:168:16: 168:41
                                         // mir::Constant
                                         // + span: ui/drop/drop_order.rs:168:21: 168:37
                                         // + literal: Const { ty: for<'a> fn(&'a DropOrderCollector, u32) -> Option<LoudDrop<'a>> {DropOrderCollector::option_loud_drop}, val: Value(<ZST>) }
    }

    bb55: {
        _44 = move _49;                  // scope 1 at ui/drop/drop_order.rs:165:12: 168:52
        goto -> bb49;                    // scope 1 at ui/drop/drop_order.rs:165:12: 168:52
    }

    bb56: {
        _50 = const true;                // scope 1 at ui/drop/drop_order.rs:166:17: 167:51
        goto -> bb58;                    // scope 1 at ui/drop/drop_order.rs:166:17: 167:51
    }

    bb57: {
        _58 = _1;                        // scope 1 at ui/drop/drop_order.rs:167:16: 167:41
        _57 = DropOrderCollector::option_loud_drop(move _58, const 13_u32) -> bb62; // scope 1 at ui/drop/drop_order.rs:167:16: 167:41
                                         // mir::Constant
                                         // + span: ui/drop/drop_order.rs:167:21: 167:37
                                         // + literal: Const { ty: for<'a> fn(&'a DropOrderCollector, u32) -> Option<LoudDrop<'a>> {DropOrderCollector::option_loud_drop}, val: Value(<ZST>) }
    }

    bb58: {
        switchInt(move _50) -> [0: bb54, otherwise: bb53]; // scope 1 at ui/drop/drop_order.rs:166:16: 168:52
    }

    bb59: {
        _52 = &_53;                      // scope 1 at ui/drop/drop_order.rs:166:17: 166:52
        _51 = Option::<LoudDrop<'_>>::is_none(move _52) -> [return: bb60, unwind: bb76]; // scope 1 at ui/drop/drop_order.rs:166:17: 166:52
                                         // mir::Constant
                                         // + span: ui/drop/drop_order.rs:166:43: 166:50
                                         // + literal: Const { ty: for<'a> fn(&'a Option<LoudDrop<'_>>) -> bool {Option::<LoudDrop<'_>>::is_none}, val: Value(<ZST>) }
    }

    bb60: {
        drop(_53) -> bb61;               // scope 1 at ui/drop/drop_order.rs:166:51: 166:52
    }

    bb61: {
        switchInt(move _51) -> [0: bb57, otherwise: bb56]; // scope 1 at ui/drop/drop_order.rs:166:17: 167:51
    }

    bb62: {
        _56 = &_57;                      // scope 1 at ui/drop/drop_order.rs:167:16: 167:51
        _55 = Option::<LoudDrop<'_>>::is_none(move _56) -> [return: bb63, unwind: bb75]; // scope 1 at ui/drop/drop_order.rs:167:16: 167:51
                                         // mir::Constant
                                         // + span: ui/drop/drop_order.rs:167:42: 167:49
                                         // + literal: Const { ty: for<'a> fn(&'a Option<LoudDrop<'_>>) -> bool {Option::<LoudDrop<'_>>::is_none}, val: Value(<ZST>) }
    }

    bb63: {
        drop(_57) -> bb64;               // scope 1 at ui/drop/drop_order.rs:167:50: 167:51
    }

    bb64: {
        _50 = move _55;                  // scope 1 at ui/drop/drop_order.rs:166:17: 167:51
        goto -> bb58;                    // scope 1 at ui/drop/drop_order.rs:166:17: 167:51
    }

    bb65: {
        _60 = &_61;                      // scope 1 at ui/drop/drop_order.rs:168:16: 168:51
        _59 = Option::<LoudDrop<'_>>::is_none(move _60) -> [return: bb66, unwind: bb74]; // scope 1 at ui/drop/drop_order.rs:168:16: 168:51
                                         // mir::Constant
                                         // + span: ui/drop/drop_order.rs:168:42: 168:49
                                         // + literal: Const { ty: for<'a> fn(&'a Option<LoudDrop<'_>>) -> bool {Option::<LoudDrop<'_>>::is_none}, val: Value(<ZST>) }
    }

    bb66: {
        drop(_61) -> bb67;               // scope 1 at ui/drop/drop_order.rs:168:50: 168:51
    }

    bb67: {
        _49 = move _59;                  // scope 1 at ui/drop/drop_order.rs:166:16: 168:52
        goto -> bb55;                    // scope 1 at ui/drop/drop_order.rs:166:16: 168:52
    }

    bb68: {
        _64 = &_65;                      // scope 1 at ui/drop/drop_order.rs:169:16: 169:51
        _63 = Option::<LoudDrop<'_>>::is_some(move _64) -> [return: bb69, unwind: bb73]; // scope 1 at ui/drop/drop_order.rs:169:16: 169:51
                                         // mir::Constant
                                         // + span: ui/drop/drop_order.rs:169:42: 169:49
                                         // + literal: Const { ty: for<'a> fn(&'a Option<LoudDrop<'_>>) -> bool {Option::<LoudDrop<'_>>::is_some}, val: Value(<ZST>) }
    }

    bb69: {
        drop(_65) -> bb70;               // scope 1 at ui/drop/drop_order.rs:169:50: 169:51
    }

    bb70: {
        _43 = move _63;                  // scope 1 at ui/drop/drop_order.rs:165:12: 169:51
        goto -> bb46;                    // scope 1 at ui/drop/drop_order.rs:165:12: 169:51
    }

    bb71: {
        _68 = _1;                        // scope 1 at ui/drop/drop_order.rs:171:13: 171:27
        _67 = DropOrderCollector::print(move _68, const 16_u32) -> bb72; // scope 1 at ui/drop/drop_order.rs:171:13: 171:27
                                         // mir::Constant
                                         // + span: ui/drop/drop_order.rs:171:18: 171:23
                                         // + literal: Const { ty: for<'a> fn(&'a DropOrderCollector, u32) {DropOrderCollector::print}, val: Value(<ZST>) }
    }

    bb72: {
        return;                          // scope 0 at ui/drop/drop_order.rs:173:6: 173:6
    }

    bb73 (cleanup): {
        drop(_65) -> bb86;               // scope 1 at ui/drop/drop_order.rs:169:50: 169:51
    }

    bb74 (cleanup): {
        drop(_61) -> bb86;               // scope 1 at ui/drop/drop_order.rs:168:50: 168:51
    }

    bb75 (cleanup): {
        drop(_57) -> bb86;               // scope 1 at ui/drop/drop_order.rs:167:50: 167:51
    }

    bb76 (cleanup): {
        drop(_53) -> bb86;               // scope 1 at ui/drop/drop_order.rs:166:51: 166:52
    }

    bb77 (cleanup): {
        drop(_47) -> bb86;               // scope 1 at ui/drop/drop_order.rs:165:46: 165:47
    }

    bb78 (cleanup): {
        drop(_39) -> bb86;               // scope 0 at ui/drop/drop_order.rs:161:49: 161:50
    }

    bb79 (cleanup): {
        drop(_35) -> bb86;               // scope 0 at ui/drop/drop_order.rs:160:49: 160:50
    }

    bb80 (cleanup): {
        drop(_31) -> bb86;               // scope 0 at ui/drop/drop_order.rs:159:50: 159:51
    }

    bb81 (cleanup): {
        drop(_24) -> bb86;               // scope 0 at ui/drop/drop_order.rs:154:49: 154:50
    }

    bb82 (cleanup): {
        drop(_20) -> bb86;               // scope 0 at ui/drop/drop_order.rs:153:49: 153:50
    }

    bb83 (cleanup): {
        drop(_16) -> bb86;               // scope 0 at ui/drop/drop_order.rs:152:49: 152:50
    }

    bb84 (cleanup): {
        drop(_12) -> bb86;               // scope 0 at ui/drop/drop_order.rs:151:49: 151:50
    }

    bb85 (cleanup): {
        drop(_8) -> bb86;                // scope 0 at ui/drop/drop_order.rs:150:45: 150:46
    }

    bb86 (cleanup): {
        resume;                          // scope 0 at ui/drop/drop_order.rs:148:5: 173:6
    }
}

fn <impl at ui/drop/drop_order.rs:20:1: 20:24>::mixed_and_or_chain(_1: &DropOrderCollector) -> () {
    debug self => _1;                    // in scope 0 at ui/drop/drop_order.rs:175:27: 175:32
    let mut _0: ();                      // return place in scope 0 at ui/drop/drop_order.rs:175:34: 175:34
    let mut _2: bool;                    // in scope 0 at ui/drop/drop_order.rs:177:12: 183:50
    let mut _3: bool;                    // in scope 0 at ui/drop/drop_order.rs:177:12: 182:50
    let mut _4: bool;                    // in scope 0 at ui/drop/drop_order.rs:177:12: 181:50
    let mut _5: bool;                    // in scope 0 at ui/drop/drop_order.rs:177:12: 178:50
    let mut _6: bool;                    // in scope 0 at ui/drop/drop_order.rs:177:12: 177:46
    let mut _7: &std::option::Option<LoudDrop<'_>>; // in scope 0 at ui/drop/drop_order.rs:177:12: 177:46
    let _8: std::option::Option<LoudDrop<'_>>; // in scope 0 at ui/drop/drop_order.rs:177:12: 177:36
    let mut _9: &DropOrderCollector;     // in scope 0 at ui/drop/drop_order.rs:177:12: 177:36
    let mut _10: bool;                   // in scope 0 at ui/drop/drop_order.rs:178:16: 178:50
    let mut _11: &std::option::Option<LoudDrop<'_>>; // in scope 0 at ui/drop/drop_order.rs:178:16: 178:50
    let _12: std::option::Option<LoudDrop<'_>>; // in scope 0 at ui/drop/drop_order.rs:178:16: 178:40
    let mut _13: &DropOrderCollector;    // in scope 0 at ui/drop/drop_order.rs:178:16: 178:40
    let mut _14: bool;                   // in scope 0 at ui/drop/drop_order.rs:179:16: 181:50
    let mut _15: bool;                   // in scope 0 at ui/drop/drop_order.rs:179:16: 180:50
    let mut _16: bool;                   // in scope 0 at ui/drop/drop_order.rs:179:16: 179:50
    let mut _17: &std::option::Option<LoudDrop<'_>>; // in scope 0 at ui/drop/drop_order.rs:179:16: 179:50
    let _18: std::option::Option<LoudDrop<'_>>; // in scope 0 at ui/drop/drop_order.rs:179:16: 179:40
    let mut _19: &DropOrderCollector;    // in scope 0 at ui/drop/drop_order.rs:179:16: 179:40
    let mut _20: bool;                   // in scope 0 at ui/drop/drop_order.rs:180:16: 180:50
    let mut _21: &std::option::Option<LoudDrop<'_>>; // in scope 0 at ui/drop/drop_order.rs:180:16: 180:50
    let _22: std::option::Option<LoudDrop<'_>>; // in scope 0 at ui/drop/drop_order.rs:180:16: 180:40
    let mut _23: &DropOrderCollector;    // in scope 0 at ui/drop/drop_order.rs:180:16: 180:40
    let mut _24: bool;                   // in scope 0 at ui/drop/drop_order.rs:181:16: 181:50
    let mut _25: &std::option::Option<LoudDrop<'_>>; // in scope 0 at ui/drop/drop_order.rs:181:16: 181:50
    let _26: std::option::Option<LoudDrop<'_>>; // in scope 0 at ui/drop/drop_order.rs:181:16: 181:40
    let mut _27: &DropOrderCollector;    // in scope 0 at ui/drop/drop_order.rs:181:16: 181:40
    let mut _28: bool;                   // in scope 0 at ui/drop/drop_order.rs:182:16: 182:50
    let mut _29: &std::option::Option<LoudDrop<'_>>; // in scope 0 at ui/drop/drop_order.rs:182:16: 182:50
    let _30: std::option::Option<LoudDrop<'_>>; // in scope 0 at ui/drop/drop_order.rs:182:16: 182:40
    let mut _31: &DropOrderCollector;    // in scope 0 at ui/drop/drop_order.rs:182:16: 182:40
    let mut _32: bool;                   // in scope 0 at ui/drop/drop_order.rs:183:16: 183:50
    let mut _33: &std::option::Option<LoudDrop<'_>>; // in scope 0 at ui/drop/drop_order.rs:183:16: 183:50
    let _34: std::option::Option<LoudDrop<'_>>; // in scope 0 at ui/drop/drop_order.rs:183:16: 183:40
    let mut _35: &DropOrderCollector;    // in scope 0 at ui/drop/drop_order.rs:183:16: 183:40
    let _36: ();                         // in scope 0 at ui/drop/drop_order.rs:185:13: 185:26
    let mut _37: &DropOrderCollector;    // in scope 0 at ui/drop/drop_order.rs:185:13: 185:26

    bb0: {
        _9 = _1;                         // scope 0 at ui/drop/drop_order.rs:177:12: 177:36
        _8 = DropOrderCollector::option_loud_drop(move _9, const 1_u32) -> bb13; // scope 0 at ui/drop/drop_order.rs:177:12: 177:36
                                         // mir::Constant
                                         // + span: ui/drop/drop_order.rs:177:17: 177:33
                                         // + literal: Const { ty: for<'a> fn(&'a DropOrderCollector, u32) -> Option<LoudDrop<'a>> {DropOrderCollector::option_loud_drop}, val: Value(<ZST>) }
    }

    bb1: {
        _2 = const true;                 // scope 0 at ui/drop/drop_order.rs:177:12: 183:50
        goto -> bb3;                     // scope 0 at ui/drop/drop_order.rs:177:12: 183:50
    }

    bb2: {
        _35 = _1;                        // scope 0 at ui/drop/drop_order.rs:183:16: 183:40
        _34 = DropOrderCollector::option_loud_drop(move _35, const 7_u32) -> bb37; // scope 0 at ui/drop/drop_order.rs:183:16: 183:40
                                         // mir::Constant
                                         // + span: ui/drop/drop_order.rs:183:21: 183:37
                                         // + literal: Const { ty: for<'a> fn(&'a DropOrderCollector, u32) -> Option<LoudDrop<'a>> {DropOrderCollector::option_loud_drop}, val: Value(<ZST>) }
    }

    bb3: {
        switchInt(move _2) -> [0: bb41, otherwise: bb40]; // scope 0 at ui/drop/drop_order.rs:177:12: 183:50
    }

    bb4: {
        _3 = const true;                 // scope 0 at ui/drop/drop_order.rs:177:12: 182:50
        goto -> bb6;                     // scope 0 at ui/drop/drop_order.rs:177:12: 182:50
    }

    bb5: {
        _31 = _1;                        // scope 0 at ui/drop/drop_order.rs:182:16: 182:40
        _30 = DropOrderCollector::option_loud_drop(move _31, const 6_u32) -> bb34; // scope 0 at ui/drop/drop_order.rs:182:16: 182:40
                                         // mir::Constant
                                         // + span: ui/drop/drop_order.rs:182:21: 182:37
                                         // + literal: Const { ty: for<'a> fn(&'a DropOrderCollector, u32) -> Option<LoudDrop<'a>> {DropOrderCollector::option_loud_drop}, val: Value(<ZST>) }
    }

    bb6: {
        switchInt(move _3) -> [0: bb2, otherwise: bb1]; // scope 0 at ui/drop/drop_order.rs:177:12: 183:50
    }

    bb7: {
        _4 = const true;                 // scope 0 at ui/drop/drop_order.rs:177:12: 181:50
        goto -> bb9;                     // scope 0 at ui/drop/drop_order.rs:177:12: 181:50
    }

    bb8: {
        _19 = _1;                        // scope 0 at ui/drop/drop_order.rs:179:16: 179:40
        _18 = DropOrderCollector::option_loud_drop(move _19, const 3_u32) -> bb25; // scope 0 at ui/drop/drop_order.rs:179:16: 179:40
                                         // mir::Constant
                                         // + span: ui/drop/drop_order.rs:179:21: 179:37
                                         // + literal: Const { ty: for<'a> fn(&'a DropOrderCollector, u32) -> Option<LoudDrop<'a>> {DropOrderCollector::option_loud_drop}, val: Value(<ZST>) }
    }

    bb9: {
        switchInt(move _4) -> [0: bb5, otherwise: bb4]; // scope 0 at ui/drop/drop_order.rs:177:12: 182:50
    }

    bb10: {
        _5 = const true;                 // scope 0 at ui/drop/drop_order.rs:177:12: 178:50
        goto -> bb12;                    // scope 0 at ui/drop/drop_order.rs:177:12: 178:50
    }

    bb11: {
        _13 = _1;                        // scope 0 at ui/drop/drop_order.rs:178:16: 178:40
        _12 = DropOrderCollector::option_loud_drop(move _13, const 2_u32) -> bb16; // scope 0 at ui/drop/drop_order.rs:178:16: 178:40
                                         // mir::Constant
                                         // + span: ui/drop/drop_order.rs:178:21: 178:37
                                         // + literal: Const { ty: for<'a> fn(&'a DropOrderCollector, u32) -> Option<LoudDrop<'a>> {DropOrderCollector::option_loud_drop}, val: Value(<ZST>) }
    }

    bb12: {
        switchInt(move _5) -> [0: bb8, otherwise: bb7]; // scope 0 at ui/drop/drop_order.rs:177:12: 181:50
    }

    bb13: {
        _7 = &_8;                        // scope 0 at ui/drop/drop_order.rs:177:12: 177:46
        _6 = Option::<LoudDrop<'_>>::is_none(move _7) -> [return: bb14, unwind: bb48]; // scope 0 at ui/drop/drop_order.rs:177:12: 177:46
                                         // mir::Constant
                                         // + span: ui/drop/drop_order.rs:177:37: 177:44
                                         // + literal: Const { ty: for<'a> fn(&'a Option<LoudDrop<'_>>) -> bool {Option::<LoudDrop<'_>>::is_none}, val: Value(<ZST>) }
    }

    bb14: {
        drop(_8) -> bb15;                // scope 0 at ui/drop/drop_order.rs:177:45: 177:46
    }

    bb15: {
        switchInt(move _6) -> [0: bb11, otherwise: bb10]; // scope 0 at ui/drop/drop_order.rs:177:12: 178:50
    }

    bb16: {
        _11 = &_12;                      // scope 0 at ui/drop/drop_order.rs:178:16: 178:50
        _10 = Option::<LoudDrop<'_>>::is_none(move _11) -> [return: bb17, unwind: bb47]; // scope 0 at ui/drop/drop_order.rs:178:16: 178:50
                                         // mir::Constant
                                         // + span: ui/drop/drop_order.rs:178:41: 178:48
                                         // + literal: Const { ty: for<'a> fn(&'a Option<LoudDrop<'_>>) -> bool {Option::<LoudDrop<'_>>::is_none}, val: Value(<ZST>) }
    }

    bb17: {
        drop(_12) -> bb18;               // scope 0 at ui/drop/drop_order.rs:178:49: 178:50
    }

    bb18: {
        _5 = move _10;                   // scope 0 at ui/drop/drop_order.rs:177:12: 178:50
        goto -> bb12;                    // scope 0 at ui/drop/drop_order.rs:177:12: 178:50
    }

    bb19: {
        _14 = const false;               // scope 0 at ui/drop/drop_order.rs:179:16: 181:50
        goto -> bb21;                    // scope 0 at ui/drop/drop_order.rs:179:16: 181:50
    }

    bb20: {
        _27 = _1;                        // scope 0 at ui/drop/drop_order.rs:181:16: 181:40
        _26 = DropOrderCollector::option_loud_drop(move _27, const 5_u32) -> bb31; // scope 0 at ui/drop/drop_order.rs:181:16: 181:40
                                         // mir::Constant
                                         // + span: ui/drop/drop_order.rs:181:21: 181:37
                                         // + literal: Const { ty: for<'a> fn(&'a DropOrderCollector, u32) -> Option<LoudDrop<'a>> {DropOrderCollector::option_loud_drop}, val: Value(<ZST>) }
    }

    bb21: {
        _4 = move _14;                   // scope 0 at ui/drop/drop_order.rs:177:12: 181:50
        goto -> bb9;                     // scope 0 at ui/drop/drop_order.rs:177:12: 181:50
    }

    bb22: {
        _15 = const false;               // scope 0 at ui/drop/drop_order.rs:179:16: 180:50
        goto -> bb24;                    // scope 0 at ui/drop/drop_order.rs:179:16: 180:50
    }

    bb23: {
        _23 = _1;                        // scope 0 at ui/drop/drop_order.rs:180:16: 180:40
        _22 = DropOrderCollector::option_loud_drop(move _23, const 4_u32) -> bb28; // scope 0 at ui/drop/drop_order.rs:180:16: 180:40
                                         // mir::Constant
                                         // + span: ui/drop/drop_order.rs:180:21: 180:37
                                         // + literal: Const { ty: for<'a> fn(&'a DropOrderCollector, u32) -> Option<LoudDrop<'a>> {DropOrderCollector::option_loud_drop}, val: Value(<ZST>) }
    }

    bb24: {
        switchInt(move _15) -> [0: bb19, otherwise: bb20]; // scope 0 at ui/drop/drop_order.rs:179:16: 181:50
    }

    bb25: {
        _17 = &_18;                      // scope 0 at ui/drop/drop_order.rs:179:16: 179:50
        _16 = Option::<LoudDrop<'_>>::is_some(move _17) -> [return: bb26, unwind: bb46]; // scope 0 at ui/drop/drop_order.rs:179:16: 179:50
                                         // mir::Constant
                                         // + span: ui/drop/drop_order.rs:179:41: 179:48
                                         // + literal: Const { ty: for<'a> fn(&'a Option<LoudDrop<'_>>) -> bool {Option::<LoudDrop<'_>>::is_some}, val: Value(<ZST>) }
    }

    bb26: {
        drop(_18) -> bb27;               // scope 0 at ui/drop/drop_order.rs:179:49: 179:50
    }

    bb27: {
        switchInt(move _16) -> [0: bb22, otherwise: bb23]; // scope 0 at ui/drop/drop_order.rs:179:16: 180:50
    }

    bb28: {
        _21 = &_22;                      // scope 0 at ui/drop/drop_order.rs:180:16: 180:50
        _20 = Option::<LoudDrop<'_>>::is_some(move _21) -> [return: bb29, unwind: bb45]; // scope 0 at ui/drop/drop_order.rs:180:16: 180:50
                                         // mir::Constant
                                         // + span: ui/drop/drop_order.rs:180:41: 180:48
                                         // + literal: Const { ty: for<'a> fn(&'a Option<LoudDrop<'_>>) -> bool {Option::<LoudDrop<'_>>::is_some}, val: Value(<ZST>) }
    }

    bb29: {
        drop(_22) -> bb30;               // scope 0 at ui/drop/drop_order.rs:180:49: 180:50
    }

    bb30: {
        _15 = move _20;                  // scope 0 at ui/drop/drop_order.rs:179:16: 180:50
        goto -> bb24;                    // scope 0 at ui/drop/drop_order.rs:179:16: 180:50
    }

    bb31: {
        _25 = &_26;                      // scope 0 at ui/drop/drop_order.rs:181:16: 181:50
        _24 = Option::<LoudDrop<'_>>::is_none(move _25) -> [return: bb32, unwind: bb44]; // scope 0 at ui/drop/drop_order.rs:181:16: 181:50
                                         // mir::Constant
                                         // + span: ui/drop/drop_order.rs:181:41: 181:48
                                         // + literal: Const { ty: for<'a> fn(&'a Option<LoudDrop<'_>>) -> bool {Option::<LoudDrop<'_>>::is_none}, val: Value(<ZST>) }
    }

    bb32: {
        drop(_26) -> bb33;               // scope 0 at ui/drop/drop_order.rs:181:49: 181:50
    }

    bb33: {
        _14 = move _24;                  // scope 0 at ui/drop/drop_order.rs:179:16: 181:50
        goto -> bb21;                    // scope 0 at ui/drop/drop_order.rs:179:16: 181:50
    }

    bb34: {
        _29 = &_30;                      // scope 0 at ui/drop/drop_order.rs:182:16: 182:50
        _28 = Option::<LoudDrop<'_>>::is_none(move _29) -> [return: bb35, unwind: bb43]; // scope 0 at ui/drop/drop_order.rs:182:16: 182:50
                                         // mir::Constant
                                         // + span: ui/drop/drop_order.rs:182:41: 182:48
                                         // + literal: Const { ty: for<'a> fn(&'a Option<LoudDrop<'_>>) -> bool {Option::<LoudDrop<'_>>::is_none}, val: Value(<ZST>) }
    }

    bb35: {
        drop(_30) -> bb36;               // scope 0 at ui/drop/drop_order.rs:182:49: 182:50
    }

    bb36: {
        _3 = move _28;                   // scope 0 at ui/drop/drop_order.rs:177:12: 182:50
        goto -> bb6;                     // scope 0 at ui/drop/drop_order.rs:177:12: 182:50
    }

    bb37: {
        _33 = &_34;                      // scope 0 at ui/drop/drop_order.rs:183:16: 183:50
        _32 = Option::<LoudDrop<'_>>::is_some(move _33) -> [return: bb38, unwind: bb42]; // scope 0 at ui/drop/drop_order.rs:183:16: 183:50
                                         // mir::Constant
                                         // + span: ui/drop/drop_order.rs:183:41: 183:48
                                         // + literal: Const { ty: for<'a> fn(&'a Option<LoudDrop<'_>>) -> bool {Option::<LoudDrop<'_>>::is_some}, val: Value(<ZST>) }
    }

    bb38: {
        drop(_34) -> bb39;               // scope 0 at ui/drop/drop_order.rs:183:49: 183:50
    }

    bb39: {
        _2 = move _32;                   // scope 0 at ui/drop/drop_order.rs:177:12: 183:50
        goto -> bb3;                     // scope 0 at ui/drop/drop_order.rs:177:12: 183:50
    }

    bb40: {
        _37 = _1;                        // scope 0 at ui/drop/drop_order.rs:185:13: 185:26
        _36 = DropOrderCollector::print(move _37, const 8_u32) -> bb41; // scope 0 at ui/drop/drop_order.rs:185:13: 185:26
                                         // mir::Constant
                                         // + span: ui/drop/drop_order.rs:185:18: 185:23
                                         // + literal: Const { ty: for<'a> fn(&'a DropOrderCollector, u32) {DropOrderCollector::print}, val: Value(<ZST>) }
    }

    bb41: {
        return;                          // scope 0 at ui/drop/drop_order.rs:187:6: 187:6
    }

    bb42 (cleanup): {
        drop(_34) -> bb49;               // scope 0 at ui/drop/drop_order.rs:183:49: 183:50
    }

    bb43 (cleanup): {
        drop(_30) -> bb49;               // scope 0 at ui/drop/drop_order.rs:182:49: 182:50
    }

    bb44 (cleanup): {
        drop(_26) -> bb49;               // scope 0 at ui/drop/drop_order.rs:181:49: 181:50
    }

    bb45 (cleanup): {
        drop(_22) -> bb49;               // scope 0 at ui/drop/drop_order.rs:180:49: 180:50
    }

    bb46 (cleanup): {
        drop(_18) -> bb49;               // scope 0 at ui/drop/drop_order.rs:179:49: 179:50
    }

    bb47 (cleanup): {
        drop(_12) -> bb49;               // scope 0 at ui/drop/drop_order.rs:178:49: 178:50
    }

    bb48 (cleanup): {
        drop(_8) -> bb49;                // scope 0 at ui/drop/drop_order.rs:177:45: 177:46
    }

    bb49 (cleanup): {
        resume;                          // scope 0 at ui/drop/drop_order.rs:175:5: 187:6
    }
}

fn <impl at ui/drop/drop_order.rs:20:1: 20:24>::let_chain(_1: &DropOrderCollector) -> () {
    debug self => _1;                    // in scope 0 at ui/drop/drop_order.rs:189:18: 189:23
    debug _d => _14;                     // in scope 0 at ui/drop/drop_order.rs:193:25: 193:27
    debug _d => _39;                     // in scope 0 at ui/drop/drop_order.rs:208:25: 208:27
    debug _e => _47;                     // in scope 0 at ui/drop/drop_order.rs:210:25: 210:27
    debug _d => _53;                     // in scope 0 at ui/drop/drop_order.rs:215:21: 215:23
    debug _e => _57;                     // in scope 0 at ui/drop/drop_order.rs:216:25: 216:27
    debug _d => _80;                     // in scope 0 at ui/drop/drop_order.rs:225:25: 225:27
    debug _e => _84;                     // in scope 0 at ui/drop/drop_order.rs:226:25: 226:27
    let mut _0: ();                      // return place in scope 0 at ui/drop/drop_order.rs:189:25: 189:25
    let mut _2: bool;                    // in scope 0 at ui/drop/drop_order.rs:191:12: 192:50
    let mut _3: bool;                    // in scope 0 at ui/drop/drop_order.rs:191:12: 191:46
    let mut _4: &std::option::Option<LoudDrop<'_>>; // in scope 0 at ui/drop/drop_order.rs:191:12: 191:46
    let _5: std::option::Option<LoudDrop<'_>>; // in scope 0 at ui/drop/drop_order.rs:191:12: 191:36
    let mut _6: &DropOrderCollector;     // in scope 0 at ui/drop/drop_order.rs:191:12: 191:36
    let mut _7: bool;                    // in scope 0 at ui/drop/drop_order.rs:192:16: 192:50
    let mut _8: &std::option::Option<LoudDrop<'_>>; // in scope 0 at ui/drop/drop_order.rs:192:16: 192:50
    let _9: std::option::Option<LoudDrop<'_>>; // in scope 0 at ui/drop/drop_order.rs:192:16: 192:40
    let mut _10: &DropOrderCollector;    // in scope 0 at ui/drop/drop_order.rs:192:16: 192:40
    let mut _11: std::option::Option<LoudDrop<'_>>; // in scope 0 at ui/drop/drop_order.rs:193:31: 193:55
    let mut _12: &DropOrderCollector;    // in scope 0 at ui/drop/drop_order.rs:193:31: 193:55
    let mut _13: isize;                  // in scope 0 at ui/drop/drop_order.rs:193:20: 193:28
    let _14: LoudDrop<'_>;               // in scope 0 at ui/drop/drop_order.rs:193:25: 193:27
    let _15: ();                         // in scope 0 at ui/drop/drop_order.rs:194:13: 194:26
    let mut _16: &DropOrderCollector;    // in scope 0 at ui/drop/drop_order.rs:194:13: 194:26
    let mut _17: bool;                   // in scope 0 at ui/drop/drop_order.rs:198:12: 199:50
    let mut _18: bool;                   // in scope 0 at ui/drop/drop_order.rs:198:12: 198:46
    let mut _19: &std::option::Option<LoudDrop<'_>>; // in scope 0 at ui/drop/drop_order.rs:198:12: 198:46
    let _20: std::option::Option<LoudDrop<'_>>; // in scope 0 at ui/drop/drop_order.rs:198:12: 198:36
    let mut _21: &DropOrderCollector;    // in scope 0 at ui/drop/drop_order.rs:198:12: 198:36
    let mut _22: bool;                   // in scope 0 at ui/drop/drop_order.rs:199:16: 199:50
    let mut _23: &std::option::Option<LoudDrop<'_>>; // in scope 0 at ui/drop/drop_order.rs:199:16: 199:50
    let _24: std::option::Option<LoudDrop<'_>>; // in scope 0 at ui/drop/drop_order.rs:199:16: 199:40
    let mut _25: &DropOrderCollector;    // in scope 0 at ui/drop/drop_order.rs:199:16: 199:40
    let mut _26: std::option::Option<LoudDrop<'_>>; // in scope 0 at ui/drop/drop_order.rs:200:27: 200:51
    let mut _27: &DropOrderCollector;    // in scope 0 at ui/drop/drop_order.rs:200:27: 200:51
    let mut _28: isize;                  // in scope 0 at ui/drop/drop_order.rs:200:20: 200:24
    let _29: !;                          // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/panic.rs:68:9: 68:77
    let _30: ();                         // in scope 0 at ui/drop/drop_order.rs:203:13: 203:26
    let mut _31: &DropOrderCollector;    // in scope 0 at ui/drop/drop_order.rs:203:13: 203:26
    let mut _32: bool;                   // in scope 0 at ui/drop/drop_order.rs:207:12: 207:46
    let mut _33: &std::option::Option<LoudDrop<'_>>; // in scope 0 at ui/drop/drop_order.rs:207:12: 207:46
    let _34: std::option::Option<LoudDrop<'_>>; // in scope 0 at ui/drop/drop_order.rs:207:12: 207:36
    let mut _35: &DropOrderCollector;    // in scope 0 at ui/drop/drop_order.rs:207:12: 207:36
    let mut _36: std::option::Option<LoudDrop<'_>>; // in scope 0 at ui/drop/drop_order.rs:208:31: 208:56
    let mut _37: &DropOrderCollector;    // in scope 0 at ui/drop/drop_order.rs:208:31: 208:56
    let mut _38: isize;                  // in scope 0 at ui/drop/drop_order.rs:208:20: 208:28
    let _39: LoudDrop<'_>;               // in scope 0 at ui/drop/drop_order.rs:208:25: 208:27
    let mut _40: bool;                   // in scope 0 at ui/drop/drop_order.rs:209:16: 209:51
    let mut _41: &std::option::Option<LoudDrop<'_>>; // in scope 0 at ui/drop/drop_order.rs:209:16: 209:51
    let _42: std::option::Option<LoudDrop<'_>>; // in scope 0 at ui/drop/drop_order.rs:209:16: 209:41
    let mut _43: &DropOrderCollector;    // in scope 0 at ui/drop/drop_order.rs:209:16: 209:41
    let mut _44: std::option::Option<LoudDrop<'_>>; // in scope 0 at ui/drop/drop_order.rs:210:31: 210:56
    let mut _45: &DropOrderCollector;    // in scope 0 at ui/drop/drop_order.rs:210:31: 210:56
    let mut _46: isize;                  // in scope 0 at ui/drop/drop_order.rs:210:20: 210:28
    let _47: LoudDrop<'_>;               // in scope 0 at ui/drop/drop_order.rs:210:25: 210:27
    let _48: ();                         // in scope 0 at ui/drop/drop_order.rs:211:13: 211:27
    let mut _49: &DropOrderCollector;    // in scope 0 at ui/drop/drop_order.rs:211:13: 211:27
    let mut _50: std::option::Option<LoudDrop<'_>>; // in scope 0 at ui/drop/drop_order.rs:215:27: 215:52
    let mut _51: &DropOrderCollector;    // in scope 0 at ui/drop/drop_order.rs:215:27: 215:52
    let mut _52: isize;                  // in scope 0 at ui/drop/drop_order.rs:215:16: 215:24
    let _53: LoudDrop<'_>;               // in scope 0 at ui/drop/drop_order.rs:215:21: 215:23
    let mut _54: std::option::Option<LoudDrop<'_>>; // in scope 0 at ui/drop/drop_order.rs:216:31: 216:56
    let mut _55: &DropOrderCollector;    // in scope 0 at ui/drop/drop_order.rs:216:31: 216:56
    let mut _56: isize;                  // in scope 0 at ui/drop/drop_order.rs:216:20: 216:28
    let _57: LoudDrop<'_>;               // in scope 0 at ui/drop/drop_order.rs:216:25: 216:27
    let mut _58: bool;                   // in scope 0 at ui/drop/drop_order.rs:217:16: 217:51
    let mut _59: &std::option::Option<LoudDrop<'_>>; // in scope 0 at ui/drop/drop_order.rs:217:16: 217:51
    let _60: std::option::Option<LoudDrop<'_>>; // in scope 0 at ui/drop/drop_order.rs:217:16: 217:41
    let mut _61: &DropOrderCollector;    // in scope 0 at ui/drop/drop_order.rs:217:16: 217:41
    let mut _62: bool;                   // in scope 0 at ui/drop/drop_order.rs:218:16: 218:51
    let mut _63: &std::option::Option<LoudDrop<'_>>; // in scope 0 at ui/drop/drop_order.rs:218:16: 218:51
    let _64: std::option::Option<LoudDrop<'_>>; // in scope 0 at ui/drop/drop_order.rs:218:16: 218:41
    let mut _65: &DropOrderCollector;    // in scope 0 at ui/drop/drop_order.rs:218:16: 218:41
    let _66: ();                         // in scope 0 at ui/drop/drop_order.rs:219:17: 219:31
    let mut _67: &DropOrderCollector;    // in scope 0 at ui/drop/drop_order.rs:219:17: 219:31
    let mut _68: bool;                   // in scope 0 at ui/drop/drop_order.rs:223:12: 224:51
    let mut _69: bool;                   // in scope 0 at ui/drop/drop_order.rs:223:12: 223:47
    let mut _70: &std::option::Option<LoudDrop<'_>>; // in scope 0 at ui/drop/drop_order.rs:223:12: 223:47
    let _71: std::option::Option<LoudDrop<'_>>; // in scope 0 at ui/drop/drop_order.rs:223:12: 223:37
    let mut _72: &DropOrderCollector;    // in scope 0 at ui/drop/drop_order.rs:223:12: 223:37
    let mut _73: bool;                   // in scope 0 at ui/drop/drop_order.rs:224:16: 224:51
    let mut _74: &std::option::Option<LoudDrop<'_>>; // in scope 0 at ui/drop/drop_order.rs:224:16: 224:51
    let _75: std::option::Option<LoudDrop<'_>>; // in scope 0 at ui/drop/drop_order.rs:224:16: 224:41
    let mut _76: &DropOrderCollector;    // in scope 0 at ui/drop/drop_order.rs:224:16: 224:41
    let mut _77: std::option::Option<LoudDrop<'_>>; // in scope 0 at ui/drop/drop_order.rs:225:31: 225:56
    let mut _78: &DropOrderCollector;    // in scope 0 at ui/drop/drop_order.rs:225:31: 225:56
    let mut _79: isize;                  // in scope 0 at ui/drop/drop_order.rs:225:20: 225:28
    let _80: LoudDrop<'_>;               // in scope 0 at ui/drop/drop_order.rs:225:25: 225:27
    let mut _81: std::option::Option<LoudDrop<'_>>; // in scope 0 at ui/drop/drop_order.rs:226:31: 226:56
    let mut _82: &DropOrderCollector;    // in scope 0 at ui/drop/drop_order.rs:226:31: 226:56
    let mut _83: isize;                  // in scope 0 at ui/drop/drop_order.rs:226:20: 226:28
    let _84: LoudDrop<'_>;               // in scope 0 at ui/drop/drop_order.rs:226:25: 226:27
    let _85: ();                         // in scope 0 at ui/drop/drop_order.rs:227:17: 227:31
    let mut _86: &DropOrderCollector;    // in scope 0 at ui/drop/drop_order.rs:227:17: 227:31
    let mut _87: bool;                   // in scope 0 at ui/drop/drop_order.rs:195:9: 195:10
    let mut _88: bool;                   // in scope 0 at ui/drop/drop_order.rs:195:9: 195:10
    let mut _89: bool;                   // in scope 0 at ui/drop/drop_order.rs:204:9: 204:10
    let mut _90: bool;                   // in scope 0 at ui/drop/drop_order.rs:212:9: 212:10
    let mut _91: bool;                   // in scope 0 at ui/drop/drop_order.rs:212:9: 212:10
    let mut _92: bool;                   // in scope 0 at ui/drop/drop_order.rs:212:9: 212:10
    let mut _93: bool;                   // in scope 0 at ui/drop/drop_order.rs:212:9: 212:10
    let mut _94: bool;                   // in scope 0 at ui/drop/drop_order.rs:220:13: 220:14
    let mut _95: bool;                   // in scope 0 at ui/drop/drop_order.rs:220:13: 220:14
    let mut _96: bool;                   // in scope 0 at ui/drop/drop_order.rs:220:13: 220:14
    let mut _97: bool;                   // in scope 0 at ui/drop/drop_order.rs:229:5: 229:6
    let mut _98: bool;                   // in scope 0 at ui/drop/drop_order.rs:229:5: 229:6
    let mut _99: bool;                   // in scope 0 at ui/drop/drop_order.rs:229:5: 229:6
    let mut _100: bool;                  // in scope 0 at ui/drop/drop_order.rs:229:5: 229:6
    let mut _101: isize;                 // in scope 0 at ui/drop/drop_order.rs:195:9: 195:10
    let mut _102: isize;                 // in scope 0 at ui/drop/drop_order.rs:212:9: 212:10
    let mut _103: isize;                 // in scope 0 at ui/drop/drop_order.rs:212:9: 212:10
    let mut _104: isize;                 // in scope 0 at ui/drop/drop_order.rs:220:13: 220:14
    let mut _105: isize;                 // in scope 0 at ui/drop/drop_order.rs:220:13: 220:14
    let mut _106: isize;                 // in scope 0 at ui/drop/drop_order.rs:229:5: 229:6
    let mut _107: isize;                 // in scope 0 at ui/drop/drop_order.rs:229:5: 229:6
    let mut _108: isize;                 // in scope 0 at ui/drop/drop_order.rs:229:5: 229:6
    let mut _109: isize;                 // in scope 0 at ui/drop/drop_order.rs:229:5: 229:6
    let mut _110: isize;                 // in scope 0 at ui/drop/drop_order.rs:220:13: 220:14
    let mut _111: isize;                 // in scope 0 at ui/drop/drop_order.rs:220:13: 220:14
    let mut _112: isize;                 // in scope 0 at ui/drop/drop_order.rs:212:9: 212:10
    let mut _113: isize;                 // in scope 0 at ui/drop/drop_order.rs:212:9: 212:10

    bb0: {
        _88 = const false;               // scope 0 at ui/drop/drop_order.rs:191:9: 195:10
        _92 = const false;               // scope 0 at ui/drop/drop_order.rs:191:9: 195:10
        _95 = const false;               // scope 0 at ui/drop/drop_order.rs:191:9: 195:10
        _93 = const false;               // scope 0 at ui/drop/drop_order.rs:191:9: 195:10
        _89 = const false;               // scope 0 at ui/drop/drop_order.rs:191:9: 195:10
        _97 = const false;               // scope 0 at ui/drop/drop_order.rs:191:9: 195:10
        _90 = const false;               // scope 0 at ui/drop/drop_order.rs:191:9: 195:10
        _100 = const false;              // scope 0 at ui/drop/drop_order.rs:191:9: 195:10
        _91 = const false;               // scope 0 at ui/drop/drop_order.rs:191:9: 195:10
        _94 = const false;               // scope 0 at ui/drop/drop_order.rs:191:9: 195:10
        _99 = const false;               // scope 0 at ui/drop/drop_order.rs:191:9: 195:10
        _87 = const false;               // scope 0 at ui/drop/drop_order.rs:191:9: 195:10
        _98 = const false;               // scope 0 at ui/drop/drop_order.rs:191:9: 195:10
        _96 = const false;               // scope 0 at ui/drop/drop_order.rs:191:9: 195:10
        _6 = _1;                         // scope 0 at ui/drop/drop_order.rs:191:12: 191:36
        _5 = DropOrderCollector::option_loud_drop(move _6, const 1_u32) -> bb4; // scope 0 at ui/drop/drop_order.rs:191:12: 191:36
                                         // mir::Constant
                                         // + span: ui/drop/drop_order.rs:191:17: 191:33
                                         // + literal: Const { ty: for<'a> fn(&'a DropOrderCollector, u32) -> Option<LoudDrop<'a>> {DropOrderCollector::option_loud_drop}, val: Value(<ZST>) }
    }

    bb1: {
        _2 = const false;                // scope 0 at ui/drop/drop_order.rs:191:12: 192:50
        goto -> bb3;                     // scope 0 at ui/drop/drop_order.rs:191:12: 192:50
    }

    bb2: {
        _10 = _1;                        // scope 0 at ui/drop/drop_order.rs:192:16: 192:40
        _9 = DropOrderCollector::option_loud_drop(move _10, const 2_u32) -> bb7; // scope 0 at ui/drop/drop_order.rs:192:16: 192:40
                                         // mir::Constant
                                         // + span: ui/drop/drop_order.rs:192:21: 192:37
                                         // + literal: Const { ty: for<'a> fn(&'a DropOrderCollector, u32) -> Option<LoudDrop<'a>> {DropOrderCollector::option_loud_drop}, val: Value(<ZST>) }
    }

    bb3: {
        switchInt(move _2) -> [0: bb14, otherwise: bb10]; // scope 0 at ui/drop/drop_order.rs:191:12: 192:50
    }

    bb4: {
        _4 = &_5;                        // scope 0 at ui/drop/drop_order.rs:191:12: 191:46
        _3 = Option::<LoudDrop<'_>>::is_some(move _4) -> [return: bb5, unwind: bb100]; // scope 0 at ui/drop/drop_order.rs:191:12: 191:46
                                         // mir::Constant
                                         // + span: ui/drop/drop_order.rs:191:37: 191:44
                                         // + literal: Const { ty: for<'a> fn(&'a Option<LoudDrop<'_>>) -> bool {Option::<LoudDrop<'_>>::is_some}, val: Value(<ZST>) }
    }

    bb5: {
        drop(_5) -> bb6;                 // scope 0 at ui/drop/drop_order.rs:191:45: 191:46
    }

    bb6: {
        switchInt(move _3) -> [0: bb1, otherwise: bb2]; // scope 0 at ui/drop/drop_order.rs:191:12: 192:50
    }

    bb7: {
        _8 = &_9;                        // scope 0 at ui/drop/drop_order.rs:192:16: 192:50
        _7 = Option::<LoudDrop<'_>>::is_some(move _8) -> [return: bb8, unwind: bb99]; // scope 0 at ui/drop/drop_order.rs:192:16: 192:50
                                         // mir::Constant
                                         // + span: ui/drop/drop_order.rs:192:41: 192:48
                                         // + literal: Const { ty: for<'a> fn(&'a Option<LoudDrop<'_>>) -> bool {Option::<LoudDrop<'_>>::is_some}, val: Value(<ZST>) }
    }

    bb8: {
        drop(_9) -> bb9;                 // scope 0 at ui/drop/drop_order.rs:192:49: 192:50
    }

    bb9: {
        _2 = move _7;                    // scope 0 at ui/drop/drop_order.rs:191:12: 192:50
        goto -> bb3;                     // scope 0 at ui/drop/drop_order.rs:191:12: 192:50
    }

    bb10: {
        _12 = _1;                        // scope 0 at ui/drop/drop_order.rs:193:31: 193:55
        _87 = const true;                // scope 0 at ui/drop/drop_order.rs:193:31: 193:55
        _88 = const true;                // scope 0 at ui/drop/drop_order.rs:193:31: 193:55
        _11 = DropOrderCollector::option_loud_drop(move _12, const 4_u32) -> bb11; // scope 0 at ui/drop/drop_order.rs:193:31: 193:55
                                         // mir::Constant
                                         // + span: ui/drop/drop_order.rs:193:36: 193:52
                                         // + literal: Const { ty: for<'a> fn(&'a DropOrderCollector, u32) -> Option<LoudDrop<'a>> {DropOrderCollector::option_loud_drop}, val: Value(<ZST>) }
    }

    bb11: {
        _13 = discriminant(_11);         // scope 0 at ui/drop/drop_order.rs:193:20: 193:28
        switchInt(move _13) -> [1: bb12, otherwise: bb14]; // scope 0 at ui/drop/drop_order.rs:193:20: 193:28
    }

    bb12: {
        _88 = const false;               // scope 0 at ui/drop/drop_order.rs:193:25: 193:27
        _14 = move ((_11 as Some).0: LoudDrop<'_>); // scope 0 at ui/drop/drop_order.rs:193:25: 193:27
        _16 = _1;                        // scope 0 at ui/drop/drop_order.rs:194:13: 194:26
        _15 = DropOrderCollector::print(move _16, const 3_u32) -> [return: bb13, unwind: bb98]; // scope 0 at ui/drop/drop_order.rs:194:13: 194:26
                                         // mir::Constant
                                         // + span: ui/drop/drop_order.rs:194:18: 194:23
                                         // + literal: Const { ty: for<'a> fn(&'a DropOrderCollector, u32) {DropOrderCollector::print}, val: Value(<ZST>) }
    }

    bb13: {
        drop(_14) -> bb14;               // scope 0 at ui/drop/drop_order.rs:195:9: 195:10
    }

    bb14: {
        switchInt(_87) -> [0: bb102, otherwise: bb105]; // scope 0 at ui/drop/drop_order.rs:195:9: 195:10
    }

    bb15: {
        _17 = const false;               // scope 0 at ui/drop/drop_order.rs:198:12: 199:50
        goto -> bb17;                    // scope 0 at ui/drop/drop_order.rs:198:12: 199:50
    }

    bb16: {
        _25 = _1;                        // scope 0 at ui/drop/drop_order.rs:199:16: 199:40
        _24 = DropOrderCollector::option_loud_drop(move _25, const 6_u32) -> bb21; // scope 0 at ui/drop/drop_order.rs:199:16: 199:40
                                         // mir::Constant
                                         // + span: ui/drop/drop_order.rs:199:21: 199:37
                                         // + literal: Const { ty: for<'a> fn(&'a DropOrderCollector, u32) -> Option<LoudDrop<'a>> {DropOrderCollector::option_loud_drop}, val: Value(<ZST>) }
    }

    bb17: {
        switchInt(move _17) -> [0: bb27, otherwise: bb24]; // scope 0 at ui/drop/drop_order.rs:198:12: 199:50
    }

    bb18: {
        _19 = &_20;                      // scope 0 at ui/drop/drop_order.rs:198:12: 198:46
        _18 = Option::<LoudDrop<'_>>::is_some(move _19) -> [return: bb19, unwind: bb97]; // scope 0 at ui/drop/drop_order.rs:198:12: 198:46
                                         // mir::Constant
                                         // + span: ui/drop/drop_order.rs:198:37: 198:44
                                         // + literal: Const { ty: for<'a> fn(&'a Option<LoudDrop<'_>>) -> bool {Option::<LoudDrop<'_>>::is_some}, val: Value(<ZST>) }
    }

    bb19: {
        drop(_20) -> bb20;               // scope 0 at ui/drop/drop_order.rs:198:45: 198:46
    }

    bb20: {
        switchInt(move _18) -> [0: bb15, otherwise: bb16]; // scope 0 at ui/drop/drop_order.rs:198:12: 199:50
    }

    bb21: {
        _23 = &_24;                      // scope 0 at ui/drop/drop_order.rs:199:16: 199:50
        _22 = Option::<LoudDrop<'_>>::is_some(move _23) -> [return: bb22, unwind: bb96]; // scope 0 at ui/drop/drop_order.rs:199:16: 199:50
                                         // mir::Constant
                                         // + span: ui/drop/drop_order.rs:199:41: 199:48
                                         // + literal: Const { ty: for<'a> fn(&'a Option<LoudDrop<'_>>) -> bool {Option::<LoudDrop<'_>>::is_some}, val: Value(<ZST>) }
    }

    bb22: {
        drop(_24) -> bb23;               // scope 0 at ui/drop/drop_order.rs:199:49: 199:50
    }

    bb23: {
        _17 = move _22;                  // scope 0 at ui/drop/drop_order.rs:198:12: 199:50
        goto -> bb17;                    // scope 0 at ui/drop/drop_order.rs:198:12: 199:50
    }

    bb24: {
        _27 = _1;                        // scope 0 at ui/drop/drop_order.rs:200:27: 200:51
        _89 = const true;                // scope 0 at ui/drop/drop_order.rs:200:27: 200:51
        _26 = DropOrderCollector::option_loud_drop(move _27, const 8_u32) -> bb25; // scope 0 at ui/drop/drop_order.rs:200:27: 200:51
                                         // mir::Constant
                                         // + span: ui/drop/drop_order.rs:200:32: 200:48
                                         // + literal: Const { ty: for<'a> fn(&'a DropOrderCollector, u32) -> Option<LoudDrop<'a>> {DropOrderCollector::option_loud_drop}, val: Value(<ZST>) }
    }

    bb25: {
        _28 = discriminant(_26);         // scope 0 at ui/drop/drop_order.rs:200:20: 200:24
        switchInt(move _28) -> [0: bb26, otherwise: bb27]; // scope 0 at ui/drop/drop_order.rs:200:20: 200:24
    }

    bb26: {
        _29 = core::panicking::panic(const "internal error: entered unreachable code") -> bb152; // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/panic.rs:68:9: 68:77
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/panic.rs:68:9: 68:33
                                         // + literal: Const { ty: fn(&'static str) -> ! {core::panicking::panic}, val: Value(<ZST>) }
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/panic.rs:68:34: 68:76
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
    }

    bb27: {
        _31 = _1;                        // scope 0 at ui/drop/drop_order.rs:203:13: 203:26
        _30 = DropOrderCollector::print(move _31, const 7_u32) -> [return: bb28, unwind: bb152]; // scope 0 at ui/drop/drop_order.rs:203:13: 203:26
                                         // mir::Constant
                                         // + span: ui/drop/drop_order.rs:203:18: 203:23
                                         // + literal: Const { ty: for<'a> fn(&'a DropOrderCollector, u32) {DropOrderCollector::print}, val: Value(<ZST>) }
    }

    bb28: {
        switchInt(_89) -> [0: bb29, otherwise: bb106]; // scope 0 at ui/drop/drop_order.rs:204:9: 204:10
    }

    bb29: {
        _89 = const false;               // scope 0 at ui/drop/drop_order.rs:204:9: 204:10
        _35 = _1;                        // scope 0 at ui/drop/drop_order.rs:207:12: 207:36
        _34 = DropOrderCollector::option_loud_drop(move _35, const 9_u32) -> bb30; // scope 0 at ui/drop/drop_order.rs:207:12: 207:36
                                         // mir::Constant
                                         // + span: ui/drop/drop_order.rs:207:17: 207:33
                                         // + literal: Const { ty: for<'a> fn(&'a DropOrderCollector, u32) -> Option<LoudDrop<'a>> {DropOrderCollector::option_loud_drop}, val: Value(<ZST>) }
    }

    bb30: {
        _33 = &_34;                      // scope 0 at ui/drop/drop_order.rs:207:12: 207:46
        _32 = Option::<LoudDrop<'_>>::is_some(move _33) -> [return: bb31, unwind: bb95]; // scope 0 at ui/drop/drop_order.rs:207:12: 207:46
                                         // mir::Constant
                                         // + span: ui/drop/drop_order.rs:207:37: 207:44
                                         // + literal: Const { ty: for<'a> fn(&'a Option<LoudDrop<'_>>) -> bool {Option::<LoudDrop<'_>>::is_some}, val: Value(<ZST>) }
    }

    bb31: {
        drop(_34) -> bb32;               // scope 0 at ui/drop/drop_order.rs:207:45: 207:46
    }

    bb32: {
        switchInt(move _32) -> [0: bb45, otherwise: bb33]; // scope 0 at ui/drop/drop_order.rs:207:12: 207:46
    }

    bb33: {
        _37 = _1;                        // scope 0 at ui/drop/drop_order.rs:208:31: 208:56
        _92 = const true;                // scope 0 at ui/drop/drop_order.rs:208:31: 208:56
        _93 = const true;                // scope 0 at ui/drop/drop_order.rs:208:31: 208:56
        _36 = DropOrderCollector::option_loud_drop(move _37, const 13_u32) -> bb34; // scope 0 at ui/drop/drop_order.rs:208:31: 208:56
                                         // mir::Constant
                                         // + span: ui/drop/drop_order.rs:208:36: 208:52
                                         // + literal: Const { ty: for<'a> fn(&'a DropOrderCollector, u32) -> Option<LoudDrop<'a>> {DropOrderCollector::option_loud_drop}, val: Value(<ZST>) }
    }

    bb34: {
        _38 = discriminant(_36);         // scope 0 at ui/drop/drop_order.rs:208:20: 208:28
        switchInt(move _38) -> [1: bb35, otherwise: bb45]; // scope 0 at ui/drop/drop_order.rs:208:20: 208:28
    }

    bb35: {
        _93 = const false;               // scope 0 at ui/drop/drop_order.rs:208:25: 208:27
        _39 = move ((_36 as Some).0: LoudDrop<'_>); // scope 0 at ui/drop/drop_order.rs:208:25: 208:27
        _43 = _1;                        // scope 0 at ui/drop/drop_order.rs:209:16: 209:41
        _42 = DropOrderCollector::option_loud_drop(move _43, const 10_u32) -> [return: bb36, unwind: bb94]; // scope 0 at ui/drop/drop_order.rs:209:16: 209:41
                                         // mir::Constant
                                         // + span: ui/drop/drop_order.rs:209:21: 209:37
                                         // + literal: Const { ty: for<'a> fn(&'a DropOrderCollector, u32) -> Option<LoudDrop<'a>> {DropOrderCollector::option_loud_drop}, val: Value(<ZST>) }
    }

    bb36: {
        _41 = &_42;                      // scope 0 at ui/drop/drop_order.rs:209:16: 209:51
        _40 = Option::<LoudDrop<'_>>::is_some(move _41) -> [return: bb37, unwind: bb93]; // scope 0 at ui/drop/drop_order.rs:209:16: 209:51
                                         // mir::Constant
                                         // + span: ui/drop/drop_order.rs:209:42: 209:49
                                         // + literal: Const { ty: for<'a> fn(&'a Option<LoudDrop<'_>>) -> bool {Option::<LoudDrop<'_>>::is_some}, val: Value(<ZST>) }
    }

    bb37: {
        drop(_42) -> [return: bb38, unwind: bb94]; // scope 0 at ui/drop/drop_order.rs:209:50: 209:51
    }

    bb38: {
        switchInt(move _40) -> [0: bb43, otherwise: bb39]; // scope 0 at ui/drop/drop_order.rs:209:16: 209:51
    }

    bb39: {
        _45 = _1;                        // scope 0 at ui/drop/drop_order.rs:210:31: 210:56
        _44 = DropOrderCollector::option_loud_drop(move _45, const 12_u32) -> [return: bb40, unwind: bb94]; // scope 0 at ui/drop/drop_order.rs:210:31: 210:56
                                         // mir::Constant
                                         // + span: ui/drop/drop_order.rs:210:36: 210:52
                                         // + literal: Const { ty: for<'a> fn(&'a DropOrderCollector, u32) -> Option<LoudDrop<'a>> {DropOrderCollector::option_loud_drop}, val: Value(<ZST>) }
    }

    bb40: {
        _90 = const true;                // scope 0 at ui/drop/drop_order.rs:210:55: 210:56
        _91 = const true;                // scope 0 at ui/drop/drop_order.rs:210:55: 210:56
        _46 = discriminant(_44);         // scope 0 at ui/drop/drop_order.rs:210:20: 210:28
        switchInt(move _46) -> [1: bb41, otherwise: bb43]; // scope 0 at ui/drop/drop_order.rs:210:20: 210:28
    }

    bb41: {
        _91 = const false;               // scope 0 at ui/drop/drop_order.rs:210:25: 210:27
        _47 = move ((_44 as Some).0: LoudDrop<'_>); // scope 0 at ui/drop/drop_order.rs:210:25: 210:27
        _49 = _1;                        // scope 0 at ui/drop/drop_order.rs:211:13: 211:27
        _48 = DropOrderCollector::print(move _49, const 11_u32) -> [return: bb42, unwind: bb91]; // scope 0 at ui/drop/drop_order.rs:211:13: 211:27
                                         // mir::Constant
                                         // + span: ui/drop/drop_order.rs:211:18: 211:23
                                         // + literal: Const { ty: for<'a> fn(&'a DropOrderCollector, u32) {DropOrderCollector::print}, val: Value(<ZST>) }
    }

    bb42: {
        drop(_47) -> [return: bb44, unwind: bb92]; // scope 0 at ui/drop/drop_order.rs:212:9: 212:10
    }

    bb43: {
        drop(_39) -> [return: bb45, unwind: bb146]; // scope 0 at ui/drop/drop_order.rs:212:9: 212:10
    }

    bb44: {
        drop(_39) -> [return: bb45, unwind: bb146]; // scope 0 at ui/drop/drop_order.rs:212:9: 212:10
    }

    bb45: {
        switchInt(_90) -> [0: bb107, otherwise: bb110]; // scope 0 at ui/drop/drop_order.rs:212:9: 212:10
    }

    bb46: {
        _52 = discriminant(_50);         // scope 0 at ui/drop/drop_order.rs:215:16: 215:24
        switchInt(move _52) -> [1: bb47, otherwise: bb62]; // scope 0 at ui/drop/drop_order.rs:215:16: 215:24
    }

    bb47: {
        _96 = const false;               // scope 0 at ui/drop/drop_order.rs:215:21: 215:23
        _53 = move ((_50 as Some).0: LoudDrop<'_>); // scope 0 at ui/drop/drop_order.rs:215:21: 215:23
        _55 = _1;                        // scope 0 at ui/drop/drop_order.rs:216:31: 216:56
        _54 = DropOrderCollector::option_loud_drop(move _55, const 17_u32) -> [return: bb48, unwind: bb90]; // scope 0 at ui/drop/drop_order.rs:216:31: 216:56
                                         // mir::Constant
                                         // + span: ui/drop/drop_order.rs:216:36: 216:52
                                         // + literal: Const { ty: for<'a> fn(&'a DropOrderCollector, u32) -> Option<LoudDrop<'a>> {DropOrderCollector::option_loud_drop}, val: Value(<ZST>) }
    }

    bb48: {
        _94 = const true;                // scope 0 at ui/drop/drop_order.rs:216:55: 216:56
        _95 = const true;                // scope 0 at ui/drop/drop_order.rs:216:55: 216:56
        _56 = discriminant(_54);         // scope 0 at ui/drop/drop_order.rs:216:20: 216:28
        switchInt(move _56) -> [1: bb49, otherwise: bb60]; // scope 0 at ui/drop/drop_order.rs:216:20: 216:28
    }

    bb49: {
        _95 = const false;               // scope 0 at ui/drop/drop_order.rs:216:25: 216:27
        _57 = move ((_54 as Some).0: LoudDrop<'_>); // scope 0 at ui/drop/drop_order.rs:216:25: 216:27
        _61 = _1;                        // scope 0 at ui/drop/drop_order.rs:217:16: 217:41
        _60 = DropOrderCollector::option_loud_drop(move _61, const 14_u32) -> [return: bb50, unwind: bb88]; // scope 0 at ui/drop/drop_order.rs:217:16: 217:41
                                         // mir::Constant
                                         // + span: ui/drop/drop_order.rs:217:21: 217:37
                                         // + literal: Const { ty: for<'a> fn(&'a DropOrderCollector, u32) -> Option<LoudDrop<'a>> {DropOrderCollector::option_loud_drop}, val: Value(<ZST>) }
    }

    bb50: {
        _59 = &_60;                      // scope 0 at ui/drop/drop_order.rs:217:16: 217:51
        _58 = Option::<LoudDrop<'_>>::is_some(move _59) -> [return: bb51, unwind: bb87]; // scope 0 at ui/drop/drop_order.rs:217:16: 217:51
                                         // mir::Constant
                                         // + span: ui/drop/drop_order.rs:217:42: 217:49
                                         // + literal: Const { ty: for<'a> fn(&'a Option<LoudDrop<'_>>) -> bool {Option::<LoudDrop<'_>>::is_some}, val: Value(<ZST>) }
    }

    bb51: {
        drop(_60) -> [return: bb52, unwind: bb88]; // scope 0 at ui/drop/drop_order.rs:217:50: 217:51
    }

    bb52: {
        switchInt(move _58) -> [0: bb59, otherwise: bb53]; // scope 0 at ui/drop/drop_order.rs:217:16: 217:51
    }

    bb53: {
        _65 = _1;                        // scope 0 at ui/drop/drop_order.rs:218:16: 218:41
        _64 = DropOrderCollector::option_loud_drop(move _65, const 15_u32) -> [return: bb54, unwind: bb88]; // scope 0 at ui/drop/drop_order.rs:218:16: 218:41
                                         // mir::Constant
                                         // + span: ui/drop/drop_order.rs:218:21: 218:37
                                         // + literal: Const { ty: for<'a> fn(&'a DropOrderCollector, u32) -> Option<LoudDrop<'a>> {DropOrderCollector::option_loud_drop}, val: Value(<ZST>) }
    }

    bb54: {
        _63 = &_64;                      // scope 0 at ui/drop/drop_order.rs:218:16: 218:51
        _62 = Option::<LoudDrop<'_>>::is_some(move _63) -> [return: bb55, unwind: bb86]; // scope 0 at ui/drop/drop_order.rs:218:16: 218:51
                                         // mir::Constant
                                         // + span: ui/drop/drop_order.rs:218:42: 218:49
                                         // + literal: Const { ty: for<'a> fn(&'a Option<LoudDrop<'_>>) -> bool {Option::<LoudDrop<'_>>::is_some}, val: Value(<ZST>) }
    }

    bb55: {
        drop(_64) -> [return: bb56, unwind: bb88]; // scope 0 at ui/drop/drop_order.rs:218:50: 218:51
    }

    bb56: {
        switchInt(move _62) -> [0: bb59, otherwise: bb57]; // scope 0 at ui/drop/drop_order.rs:218:16: 218:51
    }

    bb57: {
        _67 = _1;                        // scope 0 at ui/drop/drop_order.rs:219:17: 219:31
        _66 = DropOrderCollector::print(move _67, const 16_u32) -> [return: bb58, unwind: bb88]; // scope 0 at ui/drop/drop_order.rs:219:17: 219:31
                                         // mir::Constant
                                         // + span: ui/drop/drop_order.rs:219:22: 219:27
                                         // + literal: Const { ty: for<'a> fn(&'a DropOrderCollector, u32) {DropOrderCollector::print}, val: Value(<ZST>) }
    }

    bb58: {
        drop(_57) -> [return: bb61, unwind: bb89]; // scope 0 at ui/drop/drop_order.rs:220:13: 220:14
    }

    bb59: {
        drop(_57) -> [return: bb60, unwind: bb89]; // scope 0 at ui/drop/drop_order.rs:220:13: 220:14
    }

    bb60: {
        drop(_53) -> [return: bb62, unwind: bb139]; // scope 0 at ui/drop/drop_order.rs:220:13: 220:14
    }

    bb61: {
        drop(_53) -> [return: bb62, unwind: bb139]; // scope 0 at ui/drop/drop_order.rs:220:13: 220:14
    }

    bb62: {
        switchInt(_94) -> [0: bb115, otherwise: bb118]; // scope 0 at ui/drop/drop_order.rs:220:13: 220:14
    }

    bb63: {
        _68 = const false;               // scope 0 at ui/drop/drop_order.rs:223:12: 224:51
        goto -> bb65;                    // scope 0 at ui/drop/drop_order.rs:223:12: 224:51
    }

    bb64: {
        _76 = _1;                        // scope 0 at ui/drop/drop_order.rs:224:16: 224:41
        _75 = DropOrderCollector::option_loud_drop(move _76, const 20_u32) -> bb69; // scope 0 at ui/drop/drop_order.rs:224:16: 224:41
                                         // mir::Constant
                                         // + span: ui/drop/drop_order.rs:224:21: 224:37
                                         // + literal: Const { ty: for<'a> fn(&'a DropOrderCollector, u32) -> Option<LoudDrop<'a>> {DropOrderCollector::option_loud_drop}, val: Value(<ZST>) }
    }

    bb65: {
        switchInt(move _68) -> [0: bb80, otherwise: bb72]; // scope 0 at ui/drop/drop_order.rs:223:12: 224:51
    }

    bb66: {
        _70 = &_71;                      // scope 0 at ui/drop/drop_order.rs:223:12: 223:47
        _69 = Option::<LoudDrop<'_>>::is_some(move _70) -> [return: bb67, unwind: bb85]; // scope 0 at ui/drop/drop_order.rs:223:12: 223:47
                                         // mir::Constant
                                         // + span: ui/drop/drop_order.rs:223:38: 223:45
                                         // + literal: Const { ty: for<'a> fn(&'a Option<LoudDrop<'_>>) -> bool {Option::<LoudDrop<'_>>::is_some}, val: Value(<ZST>) }
    }

    bb67: {
        drop(_71) -> bb68;               // scope 0 at ui/drop/drop_order.rs:223:46: 223:47
    }

    bb68: {
        switchInt(move _69) -> [0: bb63, otherwise: bb64]; // scope 0 at ui/drop/drop_order.rs:223:12: 224:51
    }

    bb69: {
        _74 = &_75;                      // scope 0 at ui/drop/drop_order.rs:224:16: 224:51
        _73 = Option::<LoudDrop<'_>>::is_some(move _74) -> [return: bb70, unwind: bb84]; // scope 0 at ui/drop/drop_order.rs:224:16: 224:51
                                         // mir::Constant
                                         // + span: ui/drop/drop_order.rs:224:42: 224:49
                                         // + literal: Const { ty: for<'a> fn(&'a Option<LoudDrop<'_>>) -> bool {Option::<LoudDrop<'_>>::is_some}, val: Value(<ZST>) }
    }

    bb70: {
        drop(_75) -> bb71;               // scope 0 at ui/drop/drop_order.rs:224:50: 224:51
    }

    bb71: {
        _68 = move _73;                  // scope 0 at ui/drop/drop_order.rs:223:12: 224:51
        goto -> bb65;                    // scope 0 at ui/drop/drop_order.rs:223:12: 224:51
    }

    bb72: {
        _78 = _1;                        // scope 0 at ui/drop/drop_order.rs:225:31: 225:56
        _99 = const true;                // scope 0 at ui/drop/drop_order.rs:225:31: 225:56
        _100 = const true;               // scope 0 at ui/drop/drop_order.rs:225:31: 225:56
        _77 = DropOrderCollector::option_loud_drop(move _78, const 23_u32) -> bb73; // scope 0 at ui/drop/drop_order.rs:225:31: 225:56
                                         // mir::Constant
                                         // + span: ui/drop/drop_order.rs:225:36: 225:52
                                         // + literal: Const { ty: for<'a> fn(&'a DropOrderCollector, u32) -> Option<LoudDrop<'a>> {DropOrderCollector::option_loud_drop}, val: Value(<ZST>) }
    }

    bb73: {
        _79 = discriminant(_77);         // scope 0 at ui/drop/drop_order.rs:225:20: 225:28
        switchInt(move _79) -> [1: bb74, otherwise: bb80]; // scope 0 at ui/drop/drop_order.rs:225:20: 225:28
    }

    bb74: {
        _100 = const false;              // scope 0 at ui/drop/drop_order.rs:225:25: 225:27
        _80 = move ((_77 as Some).0: LoudDrop<'_>); // scope 0 at ui/drop/drop_order.rs:225:25: 225:27
        _82 = _1;                        // scope 0 at ui/drop/drop_order.rs:226:31: 226:56
        _81 = DropOrderCollector::option_loud_drop(move _82, const 22_u32) -> [return: bb75, unwind: bb83]; // scope 0 at ui/drop/drop_order.rs:226:31: 226:56
                                         // mir::Constant
                                         // + span: ui/drop/drop_order.rs:226:36: 226:52
                                         // + literal: Const { ty: for<'a> fn(&'a DropOrderCollector, u32) -> Option<LoudDrop<'a>> {DropOrderCollector::option_loud_drop}, val: Value(<ZST>) }
    }

    bb75: {
        _97 = const true;                // scope 0 at ui/drop/drop_order.rs:226:55: 226:56
        _98 = const true;                // scope 0 at ui/drop/drop_order.rs:226:55: 226:56
        _83 = discriminant(_81);         // scope 0 at ui/drop/drop_order.rs:226:20: 226:28
        switchInt(move _83) -> [1: bb76, otherwise: bb78]; // scope 0 at ui/drop/drop_order.rs:226:20: 226:28
    }

    bb76: {
        _98 = const false;               // scope 0 at ui/drop/drop_order.rs:226:25: 226:27
        _84 = move ((_81 as Some).0: LoudDrop<'_>); // scope 0 at ui/drop/drop_order.rs:226:25: 226:27
        _86 = _1;                        // scope 0 at ui/drop/drop_order.rs:227:17: 227:31
        _85 = DropOrderCollector::print(move _86, const 21_u32) -> [return: bb77, unwind: bb81]; // scope 0 at ui/drop/drop_order.rs:227:17: 227:31
                                         // mir::Constant
                                         // + span: ui/drop/drop_order.rs:227:22: 227:27
                                         // + literal: Const { ty: for<'a> fn(&'a DropOrderCollector, u32) {DropOrderCollector::print}, val: Value(<ZST>) }
    }

    bb77: {
        drop(_84) -> [return: bb79, unwind: bb82]; // scope 0 at ui/drop/drop_order.rs:228:9: 228:10
    }

    bb78: {
        drop(_80) -> [return: bb80, unwind: bb132]; // scope 0 at ui/drop/drop_order.rs:228:9: 228:10
    }

    bb79: {
        drop(_80) -> [return: bb80, unwind: bb132]; // scope 0 at ui/drop/drop_order.rs:228:9: 228:10
    }

    bb80: {
        switchInt(_97) -> [0: bb122, otherwise: bb125]; // scope 0 at ui/drop/drop_order.rs:229:5: 229:6
    }

    bb81 (cleanup): {
        drop(_84) -> bb82;               // scope 0 at ui/drop/drop_order.rs:228:9: 228:10
    }

    bb82 (cleanup): {
        drop(_80) -> bb132;              // scope 0 at ui/drop/drop_order.rs:228:9: 228:10
    }

    bb83 (cleanup): {
        drop(_80) -> bb136;              // scope 0 at ui/drop/drop_order.rs:228:9: 228:10
    }

    bb84 (cleanup): {
        drop(_75) -> bb101;              // scope 0 at ui/drop/drop_order.rs:224:50: 224:51
    }

    bb85 (cleanup): {
        drop(_71) -> bb101;              // scope 0 at ui/drop/drop_order.rs:223:46: 223:47
    }

    bb86 (cleanup): {
        drop(_64) -> bb88;               // scope 0 at ui/drop/drop_order.rs:218:50: 218:51
    }

    bb87 (cleanup): {
        drop(_60) -> bb88;               // scope 0 at ui/drop/drop_order.rs:217:50: 217:51
    }

    bb88 (cleanup): {
        drop(_57) -> bb89;               // scope 0 at ui/drop/drop_order.rs:220:13: 220:14
    }

    bb89 (cleanup): {
        drop(_53) -> bb139;              // scope 0 at ui/drop/drop_order.rs:220:13: 220:14
    }

    bb90 (cleanup): {
        drop(_53) -> bb142;              // scope 0 at ui/drop/drop_order.rs:220:13: 220:14
    }

    bb91 (cleanup): {
        drop(_47) -> bb92;               // scope 0 at ui/drop/drop_order.rs:212:9: 212:10
    }

    bb92 (cleanup): {
        drop(_39) -> bb146;              // scope 0 at ui/drop/drop_order.rs:212:9: 212:10
    }

    bb93 (cleanup): {
        drop(_42) -> bb94;               // scope 0 at ui/drop/drop_order.rs:209:50: 209:51
    }

    bb94 (cleanup): {
        drop(_39) -> bb150;              // scope 0 at ui/drop/drop_order.rs:212:9: 212:10
    }

    bb95 (cleanup): {
        drop(_34) -> bb101;              // scope 0 at ui/drop/drop_order.rs:207:45: 207:46
    }

    bb96 (cleanup): {
        drop(_24) -> bb101;              // scope 0 at ui/drop/drop_order.rs:199:49: 199:50
    }

    bb97 (cleanup): {
        drop(_20) -> bb101;              // scope 0 at ui/drop/drop_order.rs:198:45: 198:46
    }

    bb98 (cleanup): {
        drop(_14) -> bb101;              // scope 0 at ui/drop/drop_order.rs:195:9: 195:10
    }

    bb99 (cleanup): {
        drop(_9) -> bb101;               // scope 0 at ui/drop/drop_order.rs:192:49: 192:50
    }

    bb100 (cleanup): {
        drop(_5) -> bb101;               // scope 0 at ui/drop/drop_order.rs:191:45: 191:46
    }

    bb101 (cleanup): {
        resume;                          // scope 0 at ui/drop/drop_order.rs:189:5: 229:6
    }

    bb102: {
        _87 = const false;               // scope 0 at ui/drop/drop_order.rs:195:9: 195:10
        _87 = const false;               // scope 0 at ui/drop/drop_order.rs:195:9: 195:10
        _88 = const false;               // scope 0 at ui/drop/drop_order.rs:195:9: 195:10
        _21 = _1;                        // scope 0 at ui/drop/drop_order.rs:198:12: 198:36
        _20 = DropOrderCollector::option_loud_drop(move _21, const 5_u32) -> bb18; // scope 0 at ui/drop/drop_order.rs:198:12: 198:36
                                         // mir::Constant
                                         // + span: ui/drop/drop_order.rs:198:17: 198:33
                                         // + literal: Const { ty: for<'a> fn(&'a DropOrderCollector, u32) -> Option<LoudDrop<'a>> {DropOrderCollector::option_loud_drop}, val: Value(<ZST>) }
    }

    bb103: {
        switchInt(_88) -> [0: bb102, otherwise: bb104]; // scope 0 at ui/drop/drop_order.rs:195:9: 195:10
    }

    bb104: {
        drop(((_11 as Some).0: LoudDrop<'_>)) -> bb102; // scope 0 at ui/drop/drop_order.rs:195:9: 195:10
    }

    bb105: {
        _101 = discriminant(_11);        // scope 0 at ui/drop/drop_order.rs:195:9: 195:10
        switchInt(move _101) -> [1: bb103, otherwise: bb102]; // scope 0 at ui/drop/drop_order.rs:195:9: 195:10
    }

    bb106: {
        drop(_26) -> bb29;               // scope 0 at ui/drop/drop_order.rs:204:9: 204:10
    }

    bb107: {
        _90 = const false;               // scope 0 at ui/drop/drop_order.rs:212:9: 212:10
        _90 = const false;               // scope 0 at ui/drop/drop_order.rs:212:9: 212:10
        _91 = const false;               // scope 0 at ui/drop/drop_order.rs:212:9: 212:10
        switchInt(_92) -> [0: bb111, otherwise: bb114]; // scope 0 at ui/drop/drop_order.rs:212:9: 212:10
    }

    bb108: {
        switchInt(_91) -> [0: bb107, otherwise: bb109]; // scope 0 at ui/drop/drop_order.rs:212:9: 212:10
    }

    bb109: {
        drop(((_44 as Some).0: LoudDrop<'_>)) -> [return: bb107, unwind: bb150]; // scope 0 at ui/drop/drop_order.rs:212:9: 212:10
    }

    bb110: {
        _102 = discriminant(_44);        // scope 0 at ui/drop/drop_order.rs:212:9: 212:10
        switchInt(move _102) -> [1: bb108, otherwise: bb107]; // scope 0 at ui/drop/drop_order.rs:212:9: 212:10
    }

    bb111: {
        _92 = const false;               // scope 0 at ui/drop/drop_order.rs:212:9: 212:10
        _92 = const false;               // scope 0 at ui/drop/drop_order.rs:212:9: 212:10
        _93 = const false;               // scope 0 at ui/drop/drop_order.rs:212:9: 212:10
        _51 = _1;                        // scope 0 at ui/drop/drop_order.rs:215:27: 215:52
        _96 = const true;                // scope 0 at ui/drop/drop_order.rs:215:27: 215:52
        _50 = DropOrderCollector::option_loud_drop(move _51, const 18_u32) -> bb46; // scope 0 at ui/drop/drop_order.rs:215:27: 215:52
                                         // mir::Constant
                                         // + span: ui/drop/drop_order.rs:215:32: 215:48
                                         // + literal: Const { ty: for<'a> fn(&'a DropOrderCollector, u32) -> Option<LoudDrop<'a>> {DropOrderCollector::option_loud_drop}, val: Value(<ZST>) }
    }

    bb112: {
        switchInt(_93) -> [0: bb111, otherwise: bb113]; // scope 0 at ui/drop/drop_order.rs:212:9: 212:10
    }

    bb113: {
        drop(((_36 as Some).0: LoudDrop<'_>)) -> bb111; // scope 0 at ui/drop/drop_order.rs:212:9: 212:10
    }

    bb114: {
        _103 = discriminant(_36);        // scope 0 at ui/drop/drop_order.rs:212:9: 212:10
        switchInt(move _103) -> [1: bb112, otherwise: bb111]; // scope 0 at ui/drop/drop_order.rs:212:9: 212:10
    }

    bb115: {
        _94 = const false;               // scope 0 at ui/drop/drop_order.rs:220:13: 220:14
        _94 = const false;               // scope 0 at ui/drop/drop_order.rs:220:13: 220:14
        _95 = const false;               // scope 0 at ui/drop/drop_order.rs:220:13: 220:14
        _105 = discriminant(_50);        // scope 0 at ui/drop/drop_order.rs:220:13: 220:14
        switchInt(move _105) -> [1: bb120, otherwise: bb119]; // scope 0 at ui/drop/drop_order.rs:220:13: 220:14
    }

    bb116: {
        switchInt(_95) -> [0: bb115, otherwise: bb117]; // scope 0 at ui/drop/drop_order.rs:220:13: 220:14
    }

    bb117: {
        drop(((_54 as Some).0: LoudDrop<'_>)) -> [return: bb115, unwind: bb142]; // scope 0 at ui/drop/drop_order.rs:220:13: 220:14
    }

    bb118: {
        _104 = discriminant(_54);        // scope 0 at ui/drop/drop_order.rs:220:13: 220:14
        switchInt(move _104) -> [1: bb116, otherwise: bb115]; // scope 0 at ui/drop/drop_order.rs:220:13: 220:14
    }

    bb119: {
        _96 = const false;               // scope 0 at ui/drop/drop_order.rs:220:13: 220:14
        _72 = _1;                        // scope 0 at ui/drop/drop_order.rs:223:12: 223:37
        _71 = DropOrderCollector::option_loud_drop(move _72, const 19_u32) -> bb66; // scope 0 at ui/drop/drop_order.rs:223:12: 223:37
                                         // mir::Constant
                                         // + span: ui/drop/drop_order.rs:223:17: 223:33
                                         // + literal: Const { ty: for<'a> fn(&'a DropOrderCollector, u32) -> Option<LoudDrop<'a>> {DropOrderCollector::option_loud_drop}, val: Value(<ZST>) }
    }

    bb120: {
        switchInt(_96) -> [0: bb119, otherwise: bb121]; // scope 0 at ui/drop/drop_order.rs:220:13: 220:14
    }

    bb121: {
        drop(((_50 as Some).0: LoudDrop<'_>)) -> bb119; // scope 0 at ui/drop/drop_order.rs:220:13: 220:14
    }

    bb122: {
        _97 = const false;               // scope 0 at ui/drop/drop_order.rs:229:5: 229:6
        _97 = const false;               // scope 0 at ui/drop/drop_order.rs:229:5: 229:6
        _98 = const false;               // scope 0 at ui/drop/drop_order.rs:229:5: 229:6
        switchInt(_99) -> [0: bb126, otherwise: bb129]; // scope 0 at ui/drop/drop_order.rs:229:5: 229:6
    }

    bb123: {
        switchInt(_98) -> [0: bb122, otherwise: bb124]; // scope 0 at ui/drop/drop_order.rs:229:5: 229:6
    }

    bb124: {
        drop(((_81 as Some).0: LoudDrop<'_>)) -> [return: bb122, unwind: bb136]; // scope 0 at ui/drop/drop_order.rs:229:5: 229:6
    }

    bb125: {
        _106 = discriminant(_81);        // scope 0 at ui/drop/drop_order.rs:229:5: 229:6
        switchInt(move _106) -> [1: bb123, otherwise: bb122]; // scope 0 at ui/drop/drop_order.rs:229:5: 229:6
    }

    bb126: {
        _99 = const false;               // scope 0 at ui/drop/drop_order.rs:229:5: 229:6
        _99 = const false;               // scope 0 at ui/drop/drop_order.rs:229:5: 229:6
        _100 = const false;              // scope 0 at ui/drop/drop_order.rs:229:5: 229:6
        return;                          // scope 0 at ui/drop/drop_order.rs:229:6: 229:6
    }

    bb127: {
        switchInt(_100) -> [0: bb126, otherwise: bb128]; // scope 0 at ui/drop/drop_order.rs:229:5: 229:6
    }

    bb128: {
        drop(((_77 as Some).0: LoudDrop<'_>)) -> bb126; // scope 0 at ui/drop/drop_order.rs:229:5: 229:6
    }

    bb129: {
        _107 = discriminant(_77);        // scope 0 at ui/drop/drop_order.rs:229:5: 229:6
        switchInt(move _107) -> [1: bb127, otherwise: bb126]; // scope 0 at ui/drop/drop_order.rs:229:5: 229:6
    }

    bb130 (cleanup): {
        switchInt(_98) -> [0: bb136, otherwise: bb131]; // scope 0 at ui/drop/drop_order.rs:229:5: 229:6
    }

    bb131 (cleanup): {
        drop(((_81 as Some).0: LoudDrop<'_>)) -> bb136; // scope 0 at ui/drop/drop_order.rs:229:5: 229:6
    }

    bb132 (cleanup): {
        _108 = discriminant(_81);        // scope 0 at ui/drop/drop_order.rs:229:5: 229:6
        switchInt(move _108) -> [1: bb130, otherwise: bb136]; // scope 0 at ui/drop/drop_order.rs:229:5: 229:6
    }

    bb133 (cleanup): {
        switchInt(_100) -> [0: bb101, otherwise: bb134]; // scope 0 at ui/drop/drop_order.rs:229:5: 229:6
    }

    bb134 (cleanup): {
        drop(((_77 as Some).0: LoudDrop<'_>)) -> bb101; // scope 0 at ui/drop/drop_order.rs:229:5: 229:6
    }

    bb135 (cleanup): {
        _109 = discriminant(_77);        // scope 0 at ui/drop/drop_order.rs:229:5: 229:6
        switchInt(move _109) -> [1: bb133, otherwise: bb101]; // scope 0 at ui/drop/drop_order.rs:229:5: 229:6
    }

    bb136 (cleanup): {
        switchInt(_99) -> [0: bb101, otherwise: bb135]; // scope 0 at ui/drop/drop_order.rs:229:5: 229:6
    }

    bb137 (cleanup): {
        switchInt(_95) -> [0: bb142, otherwise: bb138]; // scope 0 at ui/drop/drop_order.rs:220:13: 220:14
    }

    bb138 (cleanup): {
        drop(((_54 as Some).0: LoudDrop<'_>)) -> bb142; // scope 0 at ui/drop/drop_order.rs:220:13: 220:14
    }

    bb139 (cleanup): {
        _110 = discriminant(_54);        // scope 0 at ui/drop/drop_order.rs:220:13: 220:14
        switchInt(move _110) -> [1: bb137, otherwise: bb142]; // scope 0 at ui/drop/drop_order.rs:220:13: 220:14
    }

    bb140 (cleanup): {
        switchInt(_96) -> [0: bb101, otherwise: bb141]; // scope 0 at ui/drop/drop_order.rs:220:13: 220:14
    }

    bb141 (cleanup): {
        drop(((_50 as Some).0: LoudDrop<'_>)) -> bb101; // scope 0 at ui/drop/drop_order.rs:220:13: 220:14
    }

    bb142 (cleanup): {
        _111 = discriminant(_50);        // scope 0 at ui/drop/drop_order.rs:220:13: 220:14
        switchInt(move _111) -> [1: bb140, otherwise: bb101]; // scope 0 at ui/drop/drop_order.rs:220:13: 220:14
    }

    bb143 (cleanup): {
        switchInt(_91) -> [0: bb150, otherwise: bb144]; // scope 0 at ui/drop/drop_order.rs:212:9: 212:10
    }

    bb144 (cleanup): {
        drop(((_44 as Some).0: LoudDrop<'_>)) -> bb150; // scope 0 at ui/drop/drop_order.rs:212:9: 212:10
    }

    bb145 (cleanup): {
        _112 = discriminant(_44);        // scope 0 at ui/drop/drop_order.rs:212:9: 212:10
        switchInt(move _112) -> [1: bb143, otherwise: bb150]; // scope 0 at ui/drop/drop_order.rs:212:9: 212:10
    }

    bb146 (cleanup): {
        switchInt(_90) -> [0: bb150, otherwise: bb145]; // scope 0 at ui/drop/drop_order.rs:212:9: 212:10
    }

    bb147 (cleanup): {
        switchInt(_93) -> [0: bb101, otherwise: bb148]; // scope 0 at ui/drop/drop_order.rs:212:9: 212:10
    }

    bb148 (cleanup): {
        drop(((_36 as Some).0: LoudDrop<'_>)) -> bb101; // scope 0 at ui/drop/drop_order.rs:212:9: 212:10
    }

    bb149 (cleanup): {
        _113 = discriminant(_36);        // scope 0 at ui/drop/drop_order.rs:212:9: 212:10
        switchInt(move _113) -> [1: bb147, otherwise: bb101]; // scope 0 at ui/drop/drop_order.rs:212:9: 212:10
    }

    bb150 (cleanup): {
        switchInt(_92) -> [0: bb101, otherwise: bb149]; // scope 0 at ui/drop/drop_order.rs:212:9: 212:10
    }

    bb151 (cleanup): {
        drop(_26) -> bb101;              // scope 0 at ui/drop/drop_order.rs:204:9: 204:10
    }

    bb152 (cleanup): {
        switchInt(_89) -> [0: bb101, otherwise: bb151]; // scope 0 at ui/drop/drop_order.rs:204:9: 204:10
    }
}

fn <impl at ui/drop/drop_order.rs:20:1: 20:24>::while_(_1: &DropOrderCollector) -> () {
    debug self => _1;                    // in scope 0 at ui/drop/drop_order.rs:231:15: 231:20
    let mut _0: ();                      // return place in scope 0 at ui/drop/drop_order.rs:231:22: 231:22
    let mut _2: std::option::Option<LoudDrop<'_>>; // in scope 0 at ui/drop/drop_order.rs:232:13: 232:18
    let mut _3: &DropOrderCollector;     // in scope 0 at ui/drop/drop_order.rs:232:21: 232:45
    let mut _4: isize;                   // in scope 0 at ui/drop/drop_order.rs:233:19: 233:27
    let mut _6: bool;                    // in scope 0 at ui/drop/drop_order.rs:234:16: 234:50
    let mut _7: &std::option::Option<LoudDrop<'_>>; // in scope 0 at ui/drop/drop_order.rs:234:16: 234:50
    let _8: std::option::Option<LoudDrop<'_>>; // in scope 0 at ui/drop/drop_order.rs:234:16: 234:40
    let mut _9: &DropOrderCollector;     // in scope 0 at ui/drop/drop_order.rs:234:16: 234:40
    let mut _10: bool;                   // in scope 0 at ui/drop/drop_order.rs:235:16: 235:50
    let mut _11: &std::option::Option<LoudDrop<'_>>; // in scope 0 at ui/drop/drop_order.rs:235:16: 235:50
    let _12: std::option::Option<LoudDrop<'_>>; // in scope 0 at ui/drop/drop_order.rs:235:16: 235:40
    let mut _13: &DropOrderCollector;    // in scope 0 at ui/drop/drop_order.rs:235:16: 235:40
    let _14: ();                         // in scope 0 at ui/drop/drop_order.rs:236:13: 236:26
    let mut _15: &DropOrderCollector;    // in scope 0 at ui/drop/drop_order.rs:236:13: 236:26
    let mut _16: std::option::Option<LoudDrop<'_>>; // in scope 0 at ui/drop/drop_order.rs:237:17: 237:21
    let mut _17: bool;                   // in scope 0 at ui/drop/drop_order.rs:239:5: 239:6
    let mut _18: isize;                  // in scope 0 at ui/drop/drop_order.rs:239:5: 239:6
    let mut _19: isize;                  // in scope 0 at ui/drop/drop_order.rs:239:5: 239:6
    scope 1 {
        debug v => _2;                   // in scope 1 at ui/drop/drop_order.rs:232:13: 232:18
        debug _d => _5;                  // in scope 1 at ui/drop/drop_order.rs:233:24: 233:26
        let _5: LoudDrop<'_>;            // in scope 1 at ui/drop/drop_order.rs:233:24: 233:26
    }

    bb0: {
        _17 = const false;               // scope 0 at ui/drop/drop_order.rs:232:13: 232:18
        _3 = _1;                         // scope 0 at ui/drop/drop_order.rs:232:21: 232:45
        _17 = const true;                // scope 0 at ui/drop/drop_order.rs:232:21: 232:45
        _2 = DropOrderCollector::option_loud_drop(move _3, const 4_u32) -> bb1; // scope 0 at ui/drop/drop_order.rs:232:21: 232:45
                                         // mir::Constant
                                         // + span: ui/drop/drop_order.rs:232:26: 232:42
                                         // + literal: Const { ty: for<'a> fn(&'a DropOrderCollector, u32) -> Option<LoudDrop<'a>> {DropOrderCollector::option_loud_drop}, val: Value(<ZST>) }
    }

    bb1: {
        _4 = discriminant(_2);           // scope 1 at ui/drop/drop_order.rs:233:19: 233:27
        switchInt(move _4) -> [1: bb2, otherwise: bb13]; // scope 1 at ui/drop/drop_order.rs:233:19: 233:27
    }

    bb2: {
        _17 = const false;               // scope 1 at ui/drop/drop_order.rs:233:24: 233:26
        _5 = move ((_2 as Some).0: LoudDrop<'_>); // scope 1 at ui/drop/drop_order.rs:233:24: 233:26
        _9 = _1;                         // scope 1 at ui/drop/drop_order.rs:234:16: 234:40
        _8 = DropOrderCollector::option_loud_drop(move _9, const 1_u32) -> [return: bb3, unwind: bb16]; // scope 1 at ui/drop/drop_order.rs:234:16: 234:40
                                         // mir::Constant
                                         // + span: ui/drop/drop_order.rs:234:21: 234:37
                                         // + literal: Const { ty: for<'a> fn(&'a DropOrderCollector, u32) -> Option<LoudDrop<'a>> {DropOrderCollector::option_loud_drop}, val: Value(<ZST>) }
    }

    bb3: {
        _7 = &_8;                        // scope 1 at ui/drop/drop_order.rs:234:16: 234:50
        _6 = Option::<LoudDrop<'_>>::is_some(move _7) -> [return: bb4, unwind: bb15]; // scope 1 at ui/drop/drop_order.rs:234:16: 234:50
                                         // mir::Constant
                                         // + span: ui/drop/drop_order.rs:234:41: 234:48
                                         // + literal: Const { ty: for<'a> fn(&'a Option<LoudDrop<'_>>) -> bool {Option::<LoudDrop<'_>>::is_some}, val: Value(<ZST>) }
    }

    bb4: {
        drop(_8) -> [return: bb5, unwind: bb16]; // scope 1 at ui/drop/drop_order.rs:234:49: 234:50
    }

    bb5: {
        switchInt(move _6) -> [0: bb12, otherwise: bb6]; // scope 1 at ui/drop/drop_order.rs:234:16: 234:50
    }

    bb6: {
        _13 = _1;                        // scope 1 at ui/drop/drop_order.rs:235:16: 235:40
        _12 = DropOrderCollector::option_loud_drop(move _13, const 2_u32) -> [return: bb7, unwind: bb16]; // scope 1 at ui/drop/drop_order.rs:235:16: 235:40
                                         // mir::Constant
                                         // + span: ui/drop/drop_order.rs:235:21: 235:37
                                         // + literal: Const { ty: for<'a> fn(&'a DropOrderCollector, u32) -> Option<LoudDrop<'a>> {DropOrderCollector::option_loud_drop}, val: Value(<ZST>) }
    }

    bb7: {
        _11 = &_12;                      // scope 1 at ui/drop/drop_order.rs:235:16: 235:50
        _10 = Option::<LoudDrop<'_>>::is_some(move _11) -> [return: bb8, unwind: bb14]; // scope 1 at ui/drop/drop_order.rs:235:16: 235:50
                                         // mir::Constant
                                         // + span: ui/drop/drop_order.rs:235:41: 235:48
                                         // + literal: Const { ty: for<'a> fn(&'a Option<LoudDrop<'_>>) -> bool {Option::<LoudDrop<'_>>::is_some}, val: Value(<ZST>) }
    }

    bb8: {
        drop(_12) -> [return: bb9, unwind: bb16]; // scope 1 at ui/drop/drop_order.rs:235:49: 235:50
    }

    bb9: {
        switchInt(move _10) -> [0: bb12, otherwise: bb10]; // scope 1 at ui/drop/drop_order.rs:235:16: 235:50
    }

    bb10: {
        _15 = _1;                        // scope 1 at ui/drop/drop_order.rs:236:13: 236:26
        _14 = DropOrderCollector::print(move _15, const 3_u32) -> [return: bb11, unwind: bb16]; // scope 1 at ui/drop/drop_order.rs:236:13: 236:26
                                         // mir::Constant
                                         // + span: ui/drop/drop_order.rs:236:18: 236:23
                                         // + literal: Const { ty: for<'a> fn(&'a DropOrderCollector, u32) {DropOrderCollector::print}, val: Value(<ZST>) }
    }

    bb11: {
        _16 = Option::<LoudDrop<'_>>::None; // scope 1 at ui/drop/drop_order.rs:237:17: 237:21
        _17 = const true;                // scope 1 at ui/drop/drop_order.rs:237:13: 237:14
        _2 = move _16;                   // scope 1 at ui/drop/drop_order.rs:237:13: 237:14
        drop(_5) -> [return: bb1, unwind: bb23]; // scope 1 at ui/drop/drop_order.rs:238:9: 238:10
    }

    bb12: {
        drop(_5) -> [return: bb13, unwind: bb23]; // scope 1 at ui/drop/drop_order.rs:238:9: 238:10
    }

    bb13: {
        _18 = discriminant(_2);          // scope 0 at ui/drop/drop_order.rs:239:5: 239:6
        switchInt(move _18) -> [1: bb19, otherwise: bb18]; // scope 0 at ui/drop/drop_order.rs:239:5: 239:6
    }

    bb14 (cleanup): {
        drop(_12) -> bb16;               // scope 1 at ui/drop/drop_order.rs:235:49: 235:50
    }

    bb15 (cleanup): {
        drop(_8) -> bb16;                // scope 1 at ui/drop/drop_order.rs:234:49: 234:50
    }

    bb16 (cleanup): {
        drop(_5) -> bb23;                // scope 1 at ui/drop/drop_order.rs:238:9: 238:10
    }

    bb17 (cleanup): {
        resume;                          // scope 0 at ui/drop/drop_order.rs:231:5: 239:6
    }

    bb18: {
        _17 = const false;               // scope 0 at ui/drop/drop_order.rs:239:5: 239:6
        return;                          // scope 0 at ui/drop/drop_order.rs:239:6: 239:6
    }

    bb19: {
        switchInt(_17) -> [0: bb18, otherwise: bb20]; // scope 0 at ui/drop/drop_order.rs:239:5: 239:6
    }

    bb20: {
        drop(((_2 as Some).0: LoudDrop<'_>)) -> bb18; // scope 0 at ui/drop/drop_order.rs:239:5: 239:6
    }

    bb21 (cleanup): {
        switchInt(_17) -> [0: bb17, otherwise: bb22]; // scope 0 at ui/drop/drop_order.rs:239:5: 239:6
    }

    bb22 (cleanup): {
        drop(((_2 as Some).0: LoudDrop<'_>)) -> bb17; // scope 0 at ui/drop/drop_order.rs:239:5: 239:6
    }

    bb23 (cleanup): {
        _19 = discriminant(_2);          // scope 0 at ui/drop/drop_order.rs:239:5: 239:6
        switchInt(move _19) -> [1: bb21, otherwise: bb17]; // scope 0 at ui/drop/drop_order.rs:239:5: 239:6
    }
}

fn <impl at ui/drop/drop_order.rs:20:1: 20:24>::assert_sorted(_1: DropOrderCollector) -> () {
    debug self => _1;                    // in scope 0 at ui/drop/drop_order.rs:241:22: 241:26
    let mut _0: ();                      // return place in scope 0 at ui/drop/drop_order.rs:241:28: 241:28
    let mut _2: bool;                    // in scope 0 at ui/drop/drop_order.rs:242:9: 248:10
    let mut _3: bool;                    // in scope 0 at ui/drop/drop_order.rs:243:13: 247:72
    let mut _4: &mut std::iter::Enumerate<std::vec::IntoIter<u32>>; // in scope 0 at ui/drop/drop_order.rs:243:13: 247:72
    let mut _5: std::iter::Enumerate<std::vec::IntoIter<u32>>; // in scope 0 at ui/drop/drop_order.rs:243:13: 246:29
    let mut _6: std::vec::IntoIter<u32>; // in scope 0 at ui/drop/drop_order.rs:243:13: 245:29
    let mut _7: std::vec::Vec<u32>;      // in scope 0 at ui/drop/drop_order.rs:243:13: 244:30
    let mut _8: std::cell::RefCell<std::vec::Vec<u32>>; // in scope 0 at ui/drop/drop_order.rs:243:13: 243:19
    let mut _9: [closure@ui/drop/drop_order.rs:247:22: 247:35]; // in scope 0 at ui/drop/drop_order.rs:247:22: 247:71
    let mut _10: !;                      // in scope 0 at ui/drop/drop_order.rs:242:9: 248:10

    bb0: {
        _8 = move (_1.0: std::cell::RefCell<std::vec::Vec<u32>>); // scope 0 at ui/drop/drop_order.rs:243:13: 243:19
        _7 = RefCell::<Vec<u32>>::into_inner(move _8) -> bb1; // scope 0 at ui/drop/drop_order.rs:243:13: 244:30
                                         // mir::Constant
                                         // + span: ui/drop/drop_order.rs:244:18: 244:28
                                         // + literal: Const { ty: fn(RefCell<Vec<u32>>) -> Vec<u32> {RefCell::<Vec<u32>>::into_inner}, val: Value(<ZST>) }
    }

    bb1: {
        _6 = <Vec<u32> as IntoIterator>::into_iter(move _7) -> bb2; // scope 0 at ui/drop/drop_order.rs:243:13: 245:29
                                         // mir::Constant
                                         // + span: ui/drop/drop_order.rs:245:18: 245:27
                                         // + literal: Const { ty: fn(Vec<u32>) -> <Vec<u32> as IntoIterator>::IntoIter {<Vec<u32> as IntoIterator>::into_iter}, val: Value(<ZST>) }
    }

    bb2: {
        _5 = <std::vec::IntoIter<u32> as Iterator>::enumerate(move _6) -> bb3; // scope 0 at ui/drop/drop_order.rs:243:13: 246:29
                                         // mir::Constant
                                         // + span: ui/drop/drop_order.rs:246:18: 246:27
                                         // + literal: Const { ty: fn(std::vec::IntoIter<u32>) -> Enumerate<std::vec::IntoIter<u32>> {<std::vec::IntoIter<u32> as Iterator>::enumerate}, val: Value(<ZST>) }
    }

    bb3: {
        _4 = &mut _5;                    // scope 0 at ui/drop/drop_order.rs:243:13: 247:72
        _3 = <Enumerate<std::vec::IntoIter<u32>> as Iterator>::all::<[closure@ui/drop/drop_order.rs:247:22: 247:35]>(move _4, move _9) -> [return: bb4, unwind: bb8]; // scope 0 at ui/drop/drop_order.rs:243:13: 247:72
                                         // mir::Constant
                                         // + span: ui/drop/drop_order.rs:247:18: 247:21
                                         // + literal: Const { ty: for<'a> fn(&'a mut Enumerate<std::vec::IntoIter<u32>>, [closure@ui/drop/drop_order.rs:247:22: 247:35]) -> bool {<Enumerate<std::vec::IntoIter<u32>> as Iterator>::all::<[closure@ui/drop/drop_order.rs:247:22: 247:35]>}, val: Value(<ZST>) }
    }

    bb4: {
        _2 = Not(move _3);               // scope 0 at ui/drop/drop_order.rs:242:9: 248:10
        drop(_5) -> bb5;                 // scope 0 at ui/drop/drop_order.rs:248:9: 248:10
    }

    bb5: {
        switchInt(move _2) -> [0: bb7, otherwise: bb6]; // scope 0 at ui/drop/drop_order.rs:242:9: 248:10
    }

    bb6: {
        _10 = core::panicking::panic(const "assertion failed: self.0.into_inner().into_iter().enumerate().all(|(idx, item)|\\n        idx + 1 == item.try_into().unwrap())"); // scope 0 at ui/drop/drop_order.rs:242:9: 248:10
                                         // mir::Constant
                                         // + span: ui/drop/drop_order.rs:242:9: 248:10
                                         // + literal: Const { ty: fn(&'static str) -> ! {core::panicking::panic}, val: Value(<ZST>) }
                                         // mir::Constant
                                         // + span: no-location
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
    }

    bb7: {
        return;                          // scope 0 at ui/drop/drop_order.rs:249:6: 249:6
    }

    bb8 (cleanup): {
        drop(_5) -> bb9;                 // scope 0 at ui/drop/drop_order.rs:248:9: 248:10
    }

    bb9 (cleanup): {
        resume;                          // scope 0 at ui/drop/drop_order.rs:241:5: 249:6
    }
}

fn <impl at ui/drop/drop_order.rs:20:1: 20:24>::assert_sorted::{closure#0}(_1: &mut [closure@ui/drop/drop_order.rs:247:22: 247:35], _2: (usize, u32)) -> bool {
    let mut _0: bool;                    // return place in scope 0 at ui/drop/drop_order.rs:247:36: 247:36
    let _3: usize;                       // in scope 0 at ui/drop/drop_order.rs:247:24: 247:27
    let _4: u32;                         // in scope 0 at ui/drop/drop_order.rs:247:29: 247:33
    let mut _5: usize;                   // in scope 0 at ui/drop/drop_order.rs:247:36: 247:43
    let mut _6: usize;                   // in scope 0 at ui/drop/drop_order.rs:247:36: 247:39
    let mut _7: (usize, bool);           // in scope 0 at ui/drop/drop_order.rs:247:36: 247:43
    let mut _8: usize;                   // in scope 0 at ui/drop/drop_order.rs:247:47: 247:71
    let mut _9: std::result::Result<usize, std::num::TryFromIntError>; // in scope 0 at ui/drop/drop_order.rs:247:47: 247:62
    let mut _10: u32;                    // in scope 0 at ui/drop/drop_order.rs:247:47: 247:51
    scope 1 {
        debug idx => _3;                 // in scope 1 at ui/drop/drop_order.rs:247:24: 247:27
        debug item => _4;                // in scope 1 at ui/drop/drop_order.rs:247:29: 247:33
    }

    bb0: {
        _3 = (_2.0: usize);              // scope 0 at ui/drop/drop_order.rs:247:24: 247:27
        _4 = (_2.1: u32);                // scope 0 at ui/drop/drop_order.rs:247:29: 247:33
        _6 = _3;                         // scope 1 at ui/drop/drop_order.rs:247:36: 247:39
        _7 = CheckedAdd(_6, const 1_usize); // scope 1 at ui/drop/drop_order.rs:247:36: 247:43
        assert(!move (_7.1: bool), "attempt to compute `{} + {}`, which would overflow", move _6, const 1_usize) -> bb1; // scope 1 at ui/drop/drop_order.rs:247:36: 247:43
    }

    bb1: {
        _5 = move (_7.0: usize);         // scope 1 at ui/drop/drop_order.rs:247:36: 247:43
        _10 = _4;                        // scope 1 at ui/drop/drop_order.rs:247:47: 247:51
        _9 = <u32 as TryInto<usize>>::try_into(move _10) -> bb2; // scope 1 at ui/drop/drop_order.rs:247:47: 247:62
                                         // mir::Constant
                                         // + span: ui/drop/drop_order.rs:247:52: 247:60
                                         // + literal: Const { ty: fn(u32) -> Result<usize, <u32 as TryInto<usize>>::Error> {<u32 as TryInto<usize>>::try_into}, val: Value(<ZST>) }
    }

    bb2: {
        _8 = Result::<usize, TryFromIntError>::unwrap(move _9) -> bb3; // scope 1 at ui/drop/drop_order.rs:247:47: 247:71
                                         // mir::Constant
                                         // + span: ui/drop/drop_order.rs:247:63: 247:69
                                         // + literal: Const { ty: fn(Result<usize, TryFromIntError>) -> usize {Result::<usize, TryFromIntError>::unwrap}, val: Value(<ZST>) }
    }

    bb3: {
        _0 = Eq(move _5, move _8);       // scope 1 at ui/drop/drop_order.rs:247:36: 247:71
        return;                          // scope 0 at ui/drop/drop_order.rs:247:71: 247:71
    }
}

fn main() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/drop/drop_order.rs:252:11: 252:11
    let _1: ();                          // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:62
    let mut _2: std::fmt::Arguments<'_>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _3: &[&str];                 // in scope 0 at ui/drop/drop_order.rs:253:14: 253:24
    let mut _4: &[&str; 1];              // in scope 0 at ui/drop/drop_order.rs:253:14: 253:24
    let _5: &[&str; 1];                  // in scope 0 at ui/drop/drop_order.rs:253:14: 253:24
    let mut _6: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _7: &[core::fmt::ArgumentV1<'_>; 0]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let _8: &[core::fmt::ArgumentV1<'_>; 0]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let _9: DropOrderCollector;          // in scope 0 at ui/drop/drop_order.rs:254:9: 254:18
    let _10: ();                         // in scope 0 at ui/drop/drop_order.rs:255:5: 255:20
    let mut _11: &DropOrderCollector;    // in scope 0 at ui/drop/drop_order.rs:255:5: 255:20
    let _12: ();                         // in scope 0 at ui/drop/drop_order.rs:256:5: 256:30
    let mut _13: DropOrderCollector;     // in scope 0 at ui/drop/drop_order.rs:256:5: 256:14
    let _14: ();                         // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:62
    let mut _15: std::fmt::Arguments<'_>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _16: &[&str];                // in scope 0 at ui/drop/drop_order.rs:258:14: 258:31
    let mut _17: &[&str; 1];             // in scope 0 at ui/drop/drop_order.rs:258:14: 258:31
    let _18: &[&str; 1];                 // in scope 0 at ui/drop/drop_order.rs:258:14: 258:31
    let mut _19: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _20: &[core::fmt::ArgumentV1<'_>; 0]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let _21: &[core::fmt::ArgumentV1<'_>; 0]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let _23: ();                         // in scope 0 at ui/drop/drop_order.rs:260:5: 260:26
    let mut _24: &DropOrderCollector;    // in scope 0 at ui/drop/drop_order.rs:260:5: 260:26
    let _25: ();                         // in scope 0 at ui/drop/drop_order.rs:261:5: 261:30
    let mut _26: DropOrderCollector;     // in scope 0 at ui/drop/drop_order.rs:261:5: 261:14
    let _27: ();                         // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:62
    let mut _28: std::fmt::Arguments<'_>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _29: &[&str];                // in scope 0 at ui/drop/drop_order.rs:263:14: 263:30
    let mut _30: &[&str; 1];             // in scope 0 at ui/drop/drop_order.rs:263:14: 263:30
    let _31: &[&str; 1];                 // in scope 0 at ui/drop/drop_order.rs:263:14: 263:30
    let mut _32: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _33: &[core::fmt::ArgumentV1<'_>; 0]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let _34: &[core::fmt::ArgumentV1<'_>; 0]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let _36: ();                         // in scope 0 at ui/drop/drop_order.rs:265:5: 265:25
    let mut _37: &DropOrderCollector;    // in scope 0 at ui/drop/drop_order.rs:265:5: 265:25
    let _38: ();                         // in scope 0 at ui/drop/drop_order.rs:266:5: 266:30
    let mut _39: DropOrderCollector;     // in scope 0 at ui/drop/drop_order.rs:266:5: 266:14
    let _40: ();                         // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:62
    let mut _41: std::fmt::Arguments<'_>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _42: &[&str];                // in scope 0 at ui/drop/drop_order.rs:268:14: 268:40
    let mut _43: &[&str; 1];             // in scope 0 at ui/drop/drop_order.rs:268:14: 268:40
    let _44: &[&str; 1];                 // in scope 0 at ui/drop/drop_order.rs:268:14: 268:40
    let mut _45: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _46: &[core::fmt::ArgumentV1<'_>; 0]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let _47: &[core::fmt::ArgumentV1<'_>; 0]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let _49: ();                         // in scope 0 at ui/drop/drop_order.rs:270:5: 270:35
    let mut _50: &DropOrderCollector;    // in scope 0 at ui/drop/drop_order.rs:270:5: 270:35
    let _51: ();                         // in scope 0 at ui/drop/drop_order.rs:271:5: 271:30
    let mut _52: DropOrderCollector;     // in scope 0 at ui/drop/drop_order.rs:271:5: 271:14
    let _53: ();                         // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:62
    let mut _54: std::fmt::Arguments<'_>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _55: &[&str];                // in scope 0 at ui/drop/drop_order.rs:273:14: 273:28
    let mut _56: &[&str; 1];             // in scope 0 at ui/drop/drop_order.rs:273:14: 273:28
    let _57: &[&str; 1];                 // in scope 0 at ui/drop/drop_order.rs:273:14: 273:28
    let mut _58: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _59: &[core::fmt::ArgumentV1<'_>; 0]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let _60: &[core::fmt::ArgumentV1<'_>; 0]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let _62: ();                         // in scope 0 at ui/drop/drop_order.rs:275:5: 275:23
    let mut _63: &DropOrderCollector;    // in scope 0 at ui/drop/drop_order.rs:275:5: 275:23
    let _64: ();                         // in scope 0 at ui/drop/drop_order.rs:276:5: 276:30
    let mut _65: DropOrderCollector;     // in scope 0 at ui/drop/drop_order.rs:276:5: 276:14
    let _66: ();                         // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:62
    let mut _67: std::fmt::Arguments<'_>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _68: &[&str];                // in scope 0 at ui/drop/drop_order.rs:278:14: 278:27
    let mut _69: &[&str; 1];             // in scope 0 at ui/drop/drop_order.rs:278:14: 278:27
    let _70: &[&str; 1];                 // in scope 0 at ui/drop/drop_order.rs:278:14: 278:27
    let mut _71: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _72: &[core::fmt::ArgumentV1<'_>; 0]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let _73: &[core::fmt::ArgumentV1<'_>; 0]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let _75: ();                         // in scope 0 at ui/drop/drop_order.rs:280:5: 280:23
    let mut _76: &DropOrderCollector;    // in scope 0 at ui/drop/drop_order.rs:280:5: 280:23
    let _77: ();                         // in scope 0 at ui/drop/drop_order.rs:281:5: 281:30
    let mut _78: DropOrderCollector;     // in scope 0 at ui/drop/drop_order.rs:281:5: 281:14
    let _79: ();                         // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:62
    let mut _80: std::fmt::Arguments<'_>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _81: &[&str];                // in scope 0 at ui/drop/drop_order.rs:283:14: 283:31
    let mut _82: &[&str; 1];             // in scope 0 at ui/drop/drop_order.rs:283:14: 283:31
    let _83: &[&str; 1];                 // in scope 0 at ui/drop/drop_order.rs:283:14: 283:31
    let mut _84: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _85: &[core::fmt::ArgumentV1<'_>; 0]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let _86: &[core::fmt::ArgumentV1<'_>; 0]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let _88: ();                         // in scope 0 at ui/drop/drop_order.rs:285:5: 285:26
    let mut _89: &DropOrderCollector;    // in scope 0 at ui/drop/drop_order.rs:285:5: 285:26
    let _90: ();                         // in scope 0 at ui/drop/drop_order.rs:286:5: 286:30
    let mut _91: DropOrderCollector;     // in scope 0 at ui/drop/drop_order.rs:286:5: 286:14
    let _92: ();                         // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:62
    let mut _93: std::fmt::Arguments<'_>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _94: &[&str];                // in scope 0 at ui/drop/drop_order.rs:288:14: 288:27
    let mut _95: &[&str; 1];             // in scope 0 at ui/drop/drop_order.rs:288:14: 288:27
    let _96: &[&str; 1];                 // in scope 0 at ui/drop/drop_order.rs:288:14: 288:27
    let mut _97: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _98: &[core::fmt::ArgumentV1<'_>; 0]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let _99: &[core::fmt::ArgumentV1<'_>; 0]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let _101: ();                        // in scope 0 at ui/drop/drop_order.rs:290:5: 290:23
    let mut _102: &DropOrderCollector;   // in scope 0 at ui/drop/drop_order.rs:290:5: 290:23
    let _103: ();                        // in scope 0 at ui/drop/drop_order.rs:291:5: 291:30
    let mut _104: DropOrderCollector;    // in scope 0 at ui/drop/drop_order.rs:291:5: 291:14
    let mut _119: &[core::fmt::ArgumentV1<'_>; 0]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _120: &[&str; 1];            // in scope 0 at ui/drop/drop_order.rs:253:14: 253:24
    let mut _121: bool;                  // in scope 0 at ui/drop/drop_order.rs:292:1: 292:2
    let mut _122: bool;                  // in scope 0 at ui/drop/drop_order.rs:292:1: 292:2
    let mut _123: bool;                  // in scope 0 at ui/drop/drop_order.rs:292:1: 292:2
    let mut _124: bool;                  // in scope 0 at ui/drop/drop_order.rs:292:1: 292:2
    let mut _125: bool;                  // in scope 0 at ui/drop/drop_order.rs:292:1: 292:2
    let mut _126: bool;                  // in scope 0 at ui/drop/drop_order.rs:292:1: 292:2
    let mut _127: bool;                  // in scope 0 at ui/drop/drop_order.rs:292:1: 292:2
    let mut _128: bool;                  // in scope 0 at ui/drop/drop_order.rs:292:1: 292:2
    scope 1 {
        debug collector => _9;           // in scope 1 at ui/drop/drop_order.rs:254:9: 254:18
        let _22: DropOrderCollector;     // in scope 1 at ui/drop/drop_order.rs:259:9: 259:18
        let mut _117: &[core::fmt::ArgumentV1<'_>; 0]; // in scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        let mut _118: &[&str; 1];        // in scope 1 at ui/drop/drop_order.rs:258:14: 258:31
        scope 2 {
            debug collector => _22;      // in scope 2 at ui/drop/drop_order.rs:259:9: 259:18
            let _35: DropOrderCollector; // in scope 2 at ui/drop/drop_order.rs:264:9: 264:18
            let mut _115: &[core::fmt::ArgumentV1<'_>; 0]; // in scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
            let mut _116: &[&str; 1];    // in scope 2 at ui/drop/drop_order.rs:263:14: 263:30
            scope 3 {
                debug collector => _35;  // in scope 3 at ui/drop/drop_order.rs:264:9: 264:18
                let _48: DropOrderCollector; // in scope 3 at ui/drop/drop_order.rs:269:9: 269:18
                let mut _113: &[core::fmt::ArgumentV1<'_>; 0]; // in scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                let mut _114: &[&str; 1]; // in scope 3 at ui/drop/drop_order.rs:268:14: 268:40
                scope 4 {
                    debug collector => _48; // in scope 4 at ui/drop/drop_order.rs:269:9: 269:18
                    let _61: DropOrderCollector; // in scope 4 at ui/drop/drop_order.rs:274:9: 274:18
                    let mut _111: &[core::fmt::ArgumentV1<'_>; 0]; // in scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                    let mut _112: &[&str; 1]; // in scope 4 at ui/drop/drop_order.rs:273:14: 273:28
                    scope 5 {
                        debug collector => _61; // in scope 5 at ui/drop/drop_order.rs:274:9: 274:18
                        let _74: DropOrderCollector; // in scope 5 at ui/drop/drop_order.rs:279:9: 279:18
                        let mut _109: &[core::fmt::ArgumentV1<'_>; 0]; // in scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                        let mut _110: &[&str; 1]; // in scope 5 at ui/drop/drop_order.rs:278:14: 278:27
                        scope 6 {
                            debug collector => _74; // in scope 6 at ui/drop/drop_order.rs:279:9: 279:18
                            let _87: DropOrderCollector; // in scope 6 at ui/drop/drop_order.rs:284:9: 284:18
                            let mut _107: &[core::fmt::ArgumentV1<'_>; 0]; // in scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                            let mut _108: &[&str; 1]; // in scope 6 at ui/drop/drop_order.rs:283:14: 283:31
                            scope 7 {
                                debug collector => _87; // in scope 7 at ui/drop/drop_order.rs:284:9: 284:18
                                let _100: DropOrderCollector; // in scope 7 at ui/drop/drop_order.rs:289:9: 289:18
                                let mut _105: &[core::fmt::ArgumentV1<'_>; 0]; // in scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                let mut _106: &[&str; 1]; // in scope 7 at ui/drop/drop_order.rs:288:14: 288:27
                                scope 8 {
                                    debug collector => _100; // in scope 8 at ui/drop/drop_order.rs:289:9: 289:18
                                }
                            }
                        }
                    }
                }
            }
        }
    }

    bb0: {
        _122 = const false;              // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:136:23: 138:6
        _123 = const false;              // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:136:23: 138:6
        _124 = const false;              // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:136:23: 138:6
        _128 = const false;              // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:136:23: 138:6
        _125 = const false;              // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:136:23: 138:6
        _126 = const false;              // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:136:23: 138:6
        _127 = const false;              // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:136:23: 138:6
        _121 = const false;              // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:136:23: 138:6
        _120 = const _;                  // scope 0 at ui/drop/drop_order.rs:253:14: 253:24
                                         // mir::Constant
                                         // + span: ui/drop/drop_order.rs:253:14: 253:24
                                         // + literal: Const { ty: &[&str; 1], val: Unevaluated(main, [], Some(promoted[15])) }
        _5 = _120;                       // scope 0 at ui/drop/drop_order.rs:253:14: 253:24
        _4 = _5;                         // scope 0 at ui/drop/drop_order.rs:253:14: 253:24
        _3 = move _4 as &[&str] (Pointer(Unsize)); // scope 0 at ui/drop/drop_order.rs:253:14: 253:24
        _119 = const _;                  // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // + literal: Const { ty: &[core::fmt::ArgumentV1<'_>; 0], val: Unevaluated(main, [], Some(promoted[14])) }
        _8 = _119;                       // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _7 = _8;                         // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _6 = move _7 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _2 = Arguments::<'_>::new_v1(move _3, move _6) -> bb1; // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb1: {
        _1 = _print(move _2) -> bb2;     // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:62
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:27
                                         // + literal: Const { ty: for<'a> fn(Arguments<'a>) {_print}, val: Value(<ZST>) }
    }

    bb2: {
        _128 = const true;               // scope 0 at ui/drop/drop_order.rs:254:21: 254:50
        _9 = <DropOrderCollector as Default>::default() -> bb3; // scope 0 at ui/drop/drop_order.rs:254:21: 254:50
                                         // mir::Constant
                                         // + span: ui/drop/drop_order.rs:254:21: 254:48
                                         // + literal: Const { ty: fn() -> DropOrderCollector {<DropOrderCollector as Default>::default}, val: Value(<ZST>) }
    }

    bb3: {
        _11 = &_9;                       // scope 1 at ui/drop/drop_order.rs:255:5: 255:20
        _10 = DropOrderCollector::if_(move _11) -> [return: bb4, unwind: bb57]; // scope 1 at ui/drop/drop_order.rs:255:5: 255:20
                                         // mir::Constant
                                         // + span: ui/drop/drop_order.rs:255:15: 255:18
                                         // + literal: Const { ty: for<'a> fn(&'a DropOrderCollector) {DropOrderCollector::if_}, val: Value(<ZST>) }
    }

    bb4: {
        _128 = const false;              // scope 1 at ui/drop/drop_order.rs:256:5: 256:14
        _13 = move _9;                   // scope 1 at ui/drop/drop_order.rs:256:5: 256:14
        _12 = DropOrderCollector::assert_sorted(move _13) -> [return: bb5, unwind: bb57]; // scope 1 at ui/drop/drop_order.rs:256:5: 256:30
                                         // mir::Constant
                                         // + span: ui/drop/drop_order.rs:256:15: 256:28
                                         // + literal: Const { ty: fn(DropOrderCollector) {DropOrderCollector::assert_sorted}, val: Value(<ZST>) }
    }

    bb5: {
        _118 = const _;                  // scope 1 at ui/drop/drop_order.rs:258:14: 258:31
                                         // mir::Constant
                                         // + span: ui/drop/drop_order.rs:258:14: 258:31
                                         // + literal: Const { ty: &[&str; 1], val: Unevaluated(main, [], Some(promoted[13])) }
        _18 = _118;                      // scope 1 at ui/drop/drop_order.rs:258:14: 258:31
        _17 = _18;                       // scope 1 at ui/drop/drop_order.rs:258:14: 258:31
        _16 = move _17 as &[&str] (Pointer(Unsize)); // scope 1 at ui/drop/drop_order.rs:258:14: 258:31
        _117 = const _;                  // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // + literal: Const { ty: &[core::fmt::ArgumentV1<'_>; 0], val: Unevaluated(main, [], Some(promoted[12])) }
        _21 = _117;                      // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _20 = _21;                       // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _19 = move _20 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _15 = Arguments::<'_>::new_v1(move _16, move _19) -> [return: bb6, unwind: bb57]; // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // + user_ty: UserType(1)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb6: {
        _14 = _print(move _15) -> [return: bb7, unwind: bb57]; // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:62
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:27
                                         // + literal: Const { ty: for<'a> fn(Arguments<'a>) {_print}, val: Value(<ZST>) }
    }

    bb7: {
        _22 = <DropOrderCollector as Default>::default() -> [return: bb8, unwind: bb57]; // scope 1 at ui/drop/drop_order.rs:259:21: 259:50
                                         // mir::Constant
                                         // + span: ui/drop/drop_order.rs:259:21: 259:48
                                         // + literal: Const { ty: fn() -> DropOrderCollector {<DropOrderCollector as Default>::default}, val: Value(<ZST>) }
    }

    bb8: {
        _127 = const true;               // scope 2 at ui/drop/drop_order.rs:260:5: 260:26
        _24 = &_22;                      // scope 2 at ui/drop/drop_order.rs:260:5: 260:26
        _23 = DropOrderCollector::and_chain(move _24) -> [return: bb9, unwind: bb55]; // scope 2 at ui/drop/drop_order.rs:260:5: 260:26
                                         // mir::Constant
                                         // + span: ui/drop/drop_order.rs:260:15: 260:24
                                         // + literal: Const { ty: for<'a> fn(&'a DropOrderCollector) {DropOrderCollector::and_chain}, val: Value(<ZST>) }
    }

    bb9: {
        _127 = const false;              // scope 2 at ui/drop/drop_order.rs:261:5: 261:14
        _26 = move _22;                  // scope 2 at ui/drop/drop_order.rs:261:5: 261:14
        _25 = DropOrderCollector::assert_sorted(move _26) -> [return: bb10, unwind: bb55]; // scope 2 at ui/drop/drop_order.rs:261:5: 261:30
                                         // mir::Constant
                                         // + span: ui/drop/drop_order.rs:261:15: 261:28
                                         // + literal: Const { ty: fn(DropOrderCollector) {DropOrderCollector::assert_sorted}, val: Value(<ZST>) }
    }

    bb10: {
        _116 = const _;                  // scope 2 at ui/drop/drop_order.rs:263:14: 263:30
                                         // mir::Constant
                                         // + span: ui/drop/drop_order.rs:263:14: 263:30
                                         // + literal: Const { ty: &[&str; 1], val: Unevaluated(main, [], Some(promoted[11])) }
        _31 = _116;                      // scope 2 at ui/drop/drop_order.rs:263:14: 263:30
        _30 = _31;                       // scope 2 at ui/drop/drop_order.rs:263:14: 263:30
        _29 = move _30 as &[&str] (Pointer(Unsize)); // scope 2 at ui/drop/drop_order.rs:263:14: 263:30
        _115 = const _;                  // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // + literal: Const { ty: &[core::fmt::ArgumentV1<'_>; 0], val: Unevaluated(main, [], Some(promoted[10])) }
        _34 = _115;                      // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _33 = _34;                       // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _32 = move _33 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _28 = Arguments::<'_>::new_v1(move _29, move _32) -> [return: bb11, unwind: bb55]; // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // + user_ty: UserType(2)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb11: {
        _27 = _print(move _28) -> [return: bb12, unwind: bb55]; // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:62
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:27
                                         // + literal: Const { ty: for<'a> fn(Arguments<'a>) {_print}, val: Value(<ZST>) }
    }

    bb12: {
        _35 = <DropOrderCollector as Default>::default() -> [return: bb13, unwind: bb55]; // scope 2 at ui/drop/drop_order.rs:264:21: 264:50
                                         // mir::Constant
                                         // + span: ui/drop/drop_order.rs:264:21: 264:48
                                         // + literal: Const { ty: fn() -> DropOrderCollector {<DropOrderCollector as Default>::default}, val: Value(<ZST>) }
    }

    bb13: {
        _126 = const true;               // scope 3 at ui/drop/drop_order.rs:265:5: 265:25
        _37 = &_35;                      // scope 3 at ui/drop/drop_order.rs:265:5: 265:25
        _36 = DropOrderCollector::or_chain(move _37) -> [return: bb14, unwind: bb53]; // scope 3 at ui/drop/drop_order.rs:265:5: 265:25
                                         // mir::Constant
                                         // + span: ui/drop/drop_order.rs:265:15: 265:23
                                         // + literal: Const { ty: for<'a> fn(&'a DropOrderCollector) {DropOrderCollector::or_chain}, val: Value(<ZST>) }
    }

    bb14: {
        _126 = const false;              // scope 3 at ui/drop/drop_order.rs:266:5: 266:14
        _39 = move _35;                  // scope 3 at ui/drop/drop_order.rs:266:5: 266:14
        _38 = DropOrderCollector::assert_sorted(move _39) -> [return: bb15, unwind: bb53]; // scope 3 at ui/drop/drop_order.rs:266:5: 266:30
                                         // mir::Constant
                                         // + span: ui/drop/drop_order.rs:266:15: 266:28
                                         // + literal: Const { ty: fn(DropOrderCollector) {DropOrderCollector::assert_sorted}, val: Value(<ZST>) }
    }

    bb15: {
        _114 = const _;                  // scope 3 at ui/drop/drop_order.rs:268:14: 268:40
                                         // mir::Constant
                                         // + span: ui/drop/drop_order.rs:268:14: 268:40
                                         // + literal: Const { ty: &[&str; 1], val: Unevaluated(main, [], Some(promoted[9])) }
        _44 = _114;                      // scope 3 at ui/drop/drop_order.rs:268:14: 268:40
        _43 = _44;                       // scope 3 at ui/drop/drop_order.rs:268:14: 268:40
        _42 = move _43 as &[&str] (Pointer(Unsize)); // scope 3 at ui/drop/drop_order.rs:268:14: 268:40
        _113 = const _;                  // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // + literal: Const { ty: &[core::fmt::ArgumentV1<'_>; 0], val: Unevaluated(main, [], Some(promoted[8])) }
        _47 = _113;                      // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _46 = _47;                       // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _45 = move _46 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _41 = Arguments::<'_>::new_v1(move _42, move _45) -> [return: bb16, unwind: bb53]; // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // + user_ty: UserType(3)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb16: {
        _40 = _print(move _41) -> [return: bb17, unwind: bb53]; // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:62
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:27
                                         // + literal: Const { ty: for<'a> fn(Arguments<'a>) {_print}, val: Value(<ZST>) }
    }

    bb17: {
        _48 = <DropOrderCollector as Default>::default() -> [return: bb18, unwind: bb53]; // scope 3 at ui/drop/drop_order.rs:269:21: 269:50
                                         // mir::Constant
                                         // + span: ui/drop/drop_order.rs:269:21: 269:48
                                         // + literal: Const { ty: fn() -> DropOrderCollector {<DropOrderCollector as Default>::default}, val: Value(<ZST>) }
    }

    bb18: {
        _125 = const true;               // scope 4 at ui/drop/drop_order.rs:270:5: 270:35
        _50 = &_48;                      // scope 4 at ui/drop/drop_order.rs:270:5: 270:35
        _49 = DropOrderCollector::mixed_and_or_chain(move _50) -> [return: bb19, unwind: bb51]; // scope 4 at ui/drop/drop_order.rs:270:5: 270:35
                                         // mir::Constant
                                         // + span: ui/drop/drop_order.rs:270:15: 270:33
                                         // + literal: Const { ty: for<'a> fn(&'a DropOrderCollector) {DropOrderCollector::mixed_and_or_chain}, val: Value(<ZST>) }
    }

    bb19: {
        _125 = const false;              // scope 4 at ui/drop/drop_order.rs:271:5: 271:14
        _52 = move _48;                  // scope 4 at ui/drop/drop_order.rs:271:5: 271:14
        _51 = DropOrderCollector::assert_sorted(move _52) -> [return: bb20, unwind: bb51]; // scope 4 at ui/drop/drop_order.rs:271:5: 271:30
                                         // mir::Constant
                                         // + span: ui/drop/drop_order.rs:271:15: 271:28
                                         // + literal: Const { ty: fn(DropOrderCollector) {DropOrderCollector::assert_sorted}, val: Value(<ZST>) }
    }

    bb20: {
        _112 = const _;                  // scope 4 at ui/drop/drop_order.rs:273:14: 273:28
                                         // mir::Constant
                                         // + span: ui/drop/drop_order.rs:273:14: 273:28
                                         // + literal: Const { ty: &[&str; 1], val: Unevaluated(main, [], Some(promoted[7])) }
        _57 = _112;                      // scope 4 at ui/drop/drop_order.rs:273:14: 273:28
        _56 = _57;                       // scope 4 at ui/drop/drop_order.rs:273:14: 273:28
        _55 = move _56 as &[&str] (Pointer(Unsize)); // scope 4 at ui/drop/drop_order.rs:273:14: 273:28
        _111 = const _;                  // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // + literal: Const { ty: &[core::fmt::ArgumentV1<'_>; 0], val: Unevaluated(main, [], Some(promoted[6])) }
        _60 = _111;                      // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _59 = _60;                       // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _58 = move _59 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _54 = Arguments::<'_>::new_v1(move _55, move _58) -> [return: bb21, unwind: bb51]; // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // + user_ty: UserType(4)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb21: {
        _53 = _print(move _54) -> [return: bb22, unwind: bb51]; // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:62
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:27
                                         // + literal: Const { ty: for<'a> fn(Arguments<'a>) {_print}, val: Value(<ZST>) }
    }

    bb22: {
        _61 = <DropOrderCollector as Default>::default() -> [return: bb23, unwind: bb51]; // scope 4 at ui/drop/drop_order.rs:274:21: 274:50
                                         // mir::Constant
                                         // + span: ui/drop/drop_order.rs:274:21: 274:48
                                         // + literal: Const { ty: fn() -> DropOrderCollector {<DropOrderCollector as Default>::default}, val: Value(<ZST>) }
    }

    bb23: {
        _124 = const true;               // scope 5 at ui/drop/drop_order.rs:275:5: 275:23
        _63 = &_61;                      // scope 5 at ui/drop/drop_order.rs:275:5: 275:23
        _62 = DropOrderCollector::if_let(move _63) -> [return: bb24, unwind: bb49]; // scope 5 at ui/drop/drop_order.rs:275:5: 275:23
                                         // mir::Constant
                                         // + span: ui/drop/drop_order.rs:275:15: 275:21
                                         // + literal: Const { ty: for<'a> fn(&'a DropOrderCollector) {DropOrderCollector::if_let}, val: Value(<ZST>) }
    }

    bb24: {
        _124 = const false;              // scope 5 at ui/drop/drop_order.rs:276:5: 276:14
        _65 = move _61;                  // scope 5 at ui/drop/drop_order.rs:276:5: 276:14
        _64 = DropOrderCollector::assert_sorted(move _65) -> [return: bb25, unwind: bb49]; // scope 5 at ui/drop/drop_order.rs:276:5: 276:30
                                         // mir::Constant
                                         // + span: ui/drop/drop_order.rs:276:15: 276:28
                                         // + literal: Const { ty: fn(DropOrderCollector) {DropOrderCollector::assert_sorted}, val: Value(<ZST>) }
    }

    bb25: {
        _110 = const _;                  // scope 5 at ui/drop/drop_order.rs:278:14: 278:27
                                         // mir::Constant
                                         // + span: ui/drop/drop_order.rs:278:14: 278:27
                                         // + literal: Const { ty: &[&str; 1], val: Unevaluated(main, [], Some(promoted[5])) }
        _70 = _110;                      // scope 5 at ui/drop/drop_order.rs:278:14: 278:27
        _69 = _70;                       // scope 5 at ui/drop/drop_order.rs:278:14: 278:27
        _68 = move _69 as &[&str] (Pointer(Unsize)); // scope 5 at ui/drop/drop_order.rs:278:14: 278:27
        _109 = const _;                  // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // + literal: Const { ty: &[core::fmt::ArgumentV1<'_>; 0], val: Unevaluated(main, [], Some(promoted[4])) }
        _73 = _109;                      // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _72 = _73;                       // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _71 = move _72 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _67 = Arguments::<'_>::new_v1(move _68, move _71) -> [return: bb26, unwind: bb49]; // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // + user_ty: UserType(5)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb26: {
        _66 = _print(move _67) -> [return: bb27, unwind: bb49]; // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:62
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:27
                                         // + literal: Const { ty: for<'a> fn(Arguments<'a>) {_print}, val: Value(<ZST>) }
    }

    bb27: {
        _74 = <DropOrderCollector as Default>::default() -> [return: bb28, unwind: bb49]; // scope 5 at ui/drop/drop_order.rs:279:21: 279:50
                                         // mir::Constant
                                         // + span: ui/drop/drop_order.rs:279:21: 279:48
                                         // + literal: Const { ty: fn() -> DropOrderCollector {<DropOrderCollector as Default>::default}, val: Value(<ZST>) }
    }

    bb28: {
        _123 = const true;               // scope 6 at ui/drop/drop_order.rs:280:5: 280:23
        _76 = &_74;                      // scope 6 at ui/drop/drop_order.rs:280:5: 280:23
        _75 = DropOrderCollector::match_(move _76) -> [return: bb29, unwind: bb47]; // scope 6 at ui/drop/drop_order.rs:280:5: 280:23
                                         // mir::Constant
                                         // + span: ui/drop/drop_order.rs:280:15: 280:21
                                         // + literal: Const { ty: for<'a> fn(&'a DropOrderCollector) {DropOrderCollector::match_}, val: Value(<ZST>) }
    }

    bb29: {
        _123 = const false;              // scope 6 at ui/drop/drop_order.rs:281:5: 281:14
        _78 = move _74;                  // scope 6 at ui/drop/drop_order.rs:281:5: 281:14
        _77 = DropOrderCollector::assert_sorted(move _78) -> [return: bb30, unwind: bb47]; // scope 6 at ui/drop/drop_order.rs:281:5: 281:30
                                         // mir::Constant
                                         // + span: ui/drop/drop_order.rs:281:15: 281:28
                                         // + literal: Const { ty: fn(DropOrderCollector) {DropOrderCollector::assert_sorted}, val: Value(<ZST>) }
    }

    bb30: {
        _108 = const _;                  // scope 6 at ui/drop/drop_order.rs:283:14: 283:31
                                         // mir::Constant
                                         // + span: ui/drop/drop_order.rs:283:14: 283:31
                                         // + literal: Const { ty: &[&str; 1], val: Unevaluated(main, [], Some(promoted[3])) }
        _83 = _108;                      // scope 6 at ui/drop/drop_order.rs:283:14: 283:31
        _82 = _83;                       // scope 6 at ui/drop/drop_order.rs:283:14: 283:31
        _81 = move _82 as &[&str] (Pointer(Unsize)); // scope 6 at ui/drop/drop_order.rs:283:14: 283:31
        _107 = const _;                  // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // + literal: Const { ty: &[core::fmt::ArgumentV1<'_>; 0], val: Unevaluated(main, [], Some(promoted[2])) }
        _86 = _107;                      // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _85 = _86;                       // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _84 = move _85 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _80 = Arguments::<'_>::new_v1(move _81, move _84) -> [return: bb31, unwind: bb47]; // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // + user_ty: UserType(6)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb31: {
        _79 = _print(move _80) -> [return: bb32, unwind: bb47]; // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:62
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:27
                                         // + literal: Const { ty: for<'a> fn(Arguments<'a>) {_print}, val: Value(<ZST>) }
    }

    bb32: {
        _87 = <DropOrderCollector as Default>::default() -> [return: bb33, unwind: bb47]; // scope 6 at ui/drop/drop_order.rs:284:21: 284:50
                                         // mir::Constant
                                         // + span: ui/drop/drop_order.rs:284:21: 284:48
                                         // + literal: Const { ty: fn() -> DropOrderCollector {<DropOrderCollector as Default>::default}, val: Value(<ZST>) }
    }

    bb33: {
        _122 = const true;               // scope 7 at ui/drop/drop_order.rs:285:5: 285:26
        _89 = &_87;                      // scope 7 at ui/drop/drop_order.rs:285:5: 285:26
        _88 = DropOrderCollector::let_chain(move _89) -> [return: bb34, unwind: bb45]; // scope 7 at ui/drop/drop_order.rs:285:5: 285:26
                                         // mir::Constant
                                         // + span: ui/drop/drop_order.rs:285:15: 285:24
                                         // + literal: Const { ty: for<'a> fn(&'a DropOrderCollector) {DropOrderCollector::let_chain}, val: Value(<ZST>) }
    }

    bb34: {
        _122 = const false;              // scope 7 at ui/drop/drop_order.rs:286:5: 286:14
        _91 = move _87;                  // scope 7 at ui/drop/drop_order.rs:286:5: 286:14
        _90 = DropOrderCollector::assert_sorted(move _91) -> [return: bb35, unwind: bb45]; // scope 7 at ui/drop/drop_order.rs:286:5: 286:30
                                         // mir::Constant
                                         // + span: ui/drop/drop_order.rs:286:15: 286:28
                                         // + literal: Const { ty: fn(DropOrderCollector) {DropOrderCollector::assert_sorted}, val: Value(<ZST>) }
    }

    bb35: {
        _106 = const _;                  // scope 7 at ui/drop/drop_order.rs:288:14: 288:27
                                         // mir::Constant
                                         // + span: ui/drop/drop_order.rs:288:14: 288:27
                                         // + literal: Const { ty: &[&str; 1], val: Unevaluated(main, [], Some(promoted[1])) }
        _96 = _106;                      // scope 7 at ui/drop/drop_order.rs:288:14: 288:27
        _95 = _96;                       // scope 7 at ui/drop/drop_order.rs:288:14: 288:27
        _94 = move _95 as &[&str] (Pointer(Unsize)); // scope 7 at ui/drop/drop_order.rs:288:14: 288:27
        _105 = const _;                  // scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // + literal: Const { ty: &[core::fmt::ArgumentV1<'_>; 0], val: Unevaluated(main, [], Some(promoted[0])) }
        _99 = _105;                      // scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _98 = _99;                       // scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _97 = move _98 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _93 = Arguments::<'_>::new_v1(move _94, move _97) -> [return: bb36, unwind: bb45]; // scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // + user_ty: UserType(7)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb36: {
        _92 = _print(move _93) -> [return: bb37, unwind: bb45]; // scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:62
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:27
                                         // + literal: Const { ty: for<'a> fn(Arguments<'a>) {_print}, val: Value(<ZST>) }
    }

    bb37: {
        _100 = <DropOrderCollector as Default>::default() -> [return: bb38, unwind: bb45]; // scope 7 at ui/drop/drop_order.rs:289:21: 289:50
                                         // mir::Constant
                                         // + span: ui/drop/drop_order.rs:289:21: 289:48
                                         // + literal: Const { ty: fn() -> DropOrderCollector {<DropOrderCollector as Default>::default}, val: Value(<ZST>) }
    }

    bb38: {
        _121 = const true;               // scope 8 at ui/drop/drop_order.rs:290:5: 290:23
        _102 = &_100;                    // scope 8 at ui/drop/drop_order.rs:290:5: 290:23
        _101 = DropOrderCollector::while_(move _102) -> [return: bb39, unwind: bb43]; // scope 8 at ui/drop/drop_order.rs:290:5: 290:23
                                         // mir::Constant
                                         // + span: ui/drop/drop_order.rs:290:15: 290:21
                                         // + literal: Const { ty: for<'a> fn(&'a DropOrderCollector) {DropOrderCollector::while_}, val: Value(<ZST>) }
    }

    bb39: {
        _121 = const false;              // scope 8 at ui/drop/drop_order.rs:291:5: 291:14
        _104 = move _100;                // scope 8 at ui/drop/drop_order.rs:291:5: 291:14
        _103 = DropOrderCollector::assert_sorted(move _104) -> [return: bb40, unwind: bb43]; // scope 8 at ui/drop/drop_order.rs:291:5: 291:30
                                         // mir::Constant
                                         // + span: ui/drop/drop_order.rs:291:15: 291:28
                                         // + literal: Const { ty: fn(DropOrderCollector) {DropOrderCollector::assert_sorted}, val: Value(<ZST>) }
    }

    bb40: {
        _121 = const false;              // scope 7 at ui/drop/drop_order.rs:292:1: 292:2
        _122 = const false;              // scope 6 at ui/drop/drop_order.rs:292:1: 292:2
        _123 = const false;              // scope 5 at ui/drop/drop_order.rs:292:1: 292:2
        _124 = const false;              // scope 4 at ui/drop/drop_order.rs:292:1: 292:2
        _125 = const false;              // scope 3 at ui/drop/drop_order.rs:292:1: 292:2
        _126 = const false;              // scope 2 at ui/drop/drop_order.rs:292:1: 292:2
        _127 = const false;              // scope 1 at ui/drop/drop_order.rs:292:1: 292:2
        _128 = const false;              // scope 0 at ui/drop/drop_order.rs:292:1: 292:2
        return;                          // scope 0 at ui/drop/drop_order.rs:292:2: 292:2
    }

    bb41 (cleanup): {
        resume;                          // scope 0 at ui/drop/drop_order.rs:252:1: 292:2
    }

    bb42 (cleanup): {
        drop(_100) -> bb45;              // scope 7 at ui/drop/drop_order.rs:292:1: 292:2
    }

    bb43 (cleanup): {
        switchInt(_121) -> [0: bb45, otherwise: bb42]; // scope 7 at ui/drop/drop_order.rs:292:1: 292:2
    }

    bb44 (cleanup): {
        drop(_87) -> bb47;               // scope 6 at ui/drop/drop_order.rs:292:1: 292:2
    }

    bb45 (cleanup): {
        switchInt(_122) -> [0: bb47, otherwise: bb44]; // scope 6 at ui/drop/drop_order.rs:292:1: 292:2
    }

    bb46 (cleanup): {
        drop(_74) -> bb49;               // scope 5 at ui/drop/drop_order.rs:292:1: 292:2
    }

    bb47 (cleanup): {
        switchInt(_123) -> [0: bb49, otherwise: bb46]; // scope 5 at ui/drop/drop_order.rs:292:1: 292:2
    }

    bb48 (cleanup): {
        drop(_61) -> bb51;               // scope 4 at ui/drop/drop_order.rs:292:1: 292:2
    }

    bb49 (cleanup): {
        switchInt(_124) -> [0: bb51, otherwise: bb48]; // scope 4 at ui/drop/drop_order.rs:292:1: 292:2
    }

    bb50 (cleanup): {
        drop(_48) -> bb53;               // scope 3 at ui/drop/drop_order.rs:292:1: 292:2
    }

    bb51 (cleanup): {
        switchInt(_125) -> [0: bb53, otherwise: bb50]; // scope 3 at ui/drop/drop_order.rs:292:1: 292:2
    }

    bb52 (cleanup): {
        drop(_35) -> bb55;               // scope 2 at ui/drop/drop_order.rs:292:1: 292:2
    }

    bb53 (cleanup): {
        switchInt(_126) -> [0: bb55, otherwise: bb52]; // scope 2 at ui/drop/drop_order.rs:292:1: 292:2
    }

    bb54 (cleanup): {
        drop(_22) -> bb57;               // scope 1 at ui/drop/drop_order.rs:292:1: 292:2
    }

    bb55 (cleanup): {
        switchInt(_127) -> [0: bb57, otherwise: bb54]; // scope 1 at ui/drop/drop_order.rs:292:1: 292:2
    }

    bb56 (cleanup): {
        drop(_9) -> bb41;                // scope 0 at ui/drop/drop_order.rs:292:1: 292:2
    }

    bb57 (cleanup): {
        switchInt(_128) -> [0: bb41, otherwise: bb56]; // scope 0 at ui/drop/drop_order.rs:292:1: 292:2
    }
}

promoted[0] in main: &[core::fmt::ArgumentV1<'_>; 0] = {
    let mut _0: &[core::fmt::ArgumentV1<'_>; 0]; // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _1: [core::fmt::ArgumentV1<'_>; 0]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61

    bb0: {
        _1 = [];                         // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    }
}

promoted[1] in main: &[&str; 1] = {
    let mut _0: &[&str; 1];              // return place in scope 0 at ui/drop/drop_order.rs:288:14: 288:27
    let mut _1: [&str; 1];               // in scope 0 at ui/drop/drop_order.rs:288:14: 288:27

    bb0: {
        _1 = [const "-- while --\n"];    // scope 0 at ui/drop/drop_order.rs:288:14: 288:27
                                         // mir::Constant
                                         // + span: ui/drop/drop_order.rs:288:14: 288:27
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at ui/drop/drop_order.rs:288:14: 288:27
        return;                          // scope 0 at ui/drop/drop_order.rs:288:14: 288:27
    }
}

promoted[2] in main: &[core::fmt::ArgumentV1<'_>; 0] = {
    let mut _0: &[core::fmt::ArgumentV1<'_>; 0]; // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _1: [core::fmt::ArgumentV1<'_>; 0]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61

    bb0: {
        _1 = [];                         // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    }
}

promoted[3] in main: &[&str; 1] = {
    let mut _0: &[&str; 1];              // return place in scope 0 at ui/drop/drop_order.rs:283:14: 283:31
    let mut _1: [&str; 1];               // in scope 0 at ui/drop/drop_order.rs:283:14: 283:31

    bb0: {
        _1 = [const "-- let chain --\n"]; // scope 0 at ui/drop/drop_order.rs:283:14: 283:31
                                         // mir::Constant
                                         // + span: ui/drop/drop_order.rs:283:14: 283:31
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at ui/drop/drop_order.rs:283:14: 283:31
        return;                          // scope 0 at ui/drop/drop_order.rs:283:14: 283:31
    }
}

promoted[4] in main: &[core::fmt::ArgumentV1<'_>; 0] = {
    let mut _0: &[core::fmt::ArgumentV1<'_>; 0]; // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _1: [core::fmt::ArgumentV1<'_>; 0]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61

    bb0: {
        _1 = [];                         // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    }
}

promoted[5] in main: &[&str; 1] = {
    let mut _0: &[&str; 1];              // return place in scope 0 at ui/drop/drop_order.rs:278:14: 278:27
    let mut _1: [&str; 1];               // in scope 0 at ui/drop/drop_order.rs:278:14: 278:27

    bb0: {
        _1 = [const "-- match --\n"];    // scope 0 at ui/drop/drop_order.rs:278:14: 278:27
                                         // mir::Constant
                                         // + span: ui/drop/drop_order.rs:278:14: 278:27
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at ui/drop/drop_order.rs:278:14: 278:27
        return;                          // scope 0 at ui/drop/drop_order.rs:278:14: 278:27
    }
}

promoted[6] in main: &[core::fmt::ArgumentV1<'_>; 0] = {
    let mut _0: &[core::fmt::ArgumentV1<'_>; 0]; // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _1: [core::fmt::ArgumentV1<'_>; 0]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61

    bb0: {
        _1 = [];                         // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    }
}

promoted[7] in main: &[&str; 1] = {
    let mut _0: &[&str; 1];              // return place in scope 0 at ui/drop/drop_order.rs:273:14: 273:28
    let mut _1: [&str; 1];               // in scope 0 at ui/drop/drop_order.rs:273:14: 273:28

    bb0: {
        _1 = [const "-- if let --\n"];   // scope 0 at ui/drop/drop_order.rs:273:14: 273:28
                                         // mir::Constant
                                         // + span: ui/drop/drop_order.rs:273:14: 273:28
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at ui/drop/drop_order.rs:273:14: 273:28
        return;                          // scope 0 at ui/drop/drop_order.rs:273:14: 273:28
    }
}

promoted[8] in main: &[core::fmt::ArgumentV1<'_>; 0] = {
    let mut _0: &[core::fmt::ArgumentV1<'_>; 0]; // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _1: [core::fmt::ArgumentV1<'_>; 0]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61

    bb0: {
        _1 = [];                         // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    }
}

promoted[9] in main: &[&str; 1] = {
    let mut _0: &[&str; 1];              // return place in scope 0 at ui/drop/drop_order.rs:268:14: 268:40
    let mut _1: [&str; 1];               // in scope 0 at ui/drop/drop_order.rs:268:14: 268:40

    bb0: {
        _1 = [const "-- mixed and/or chain --\n"]; // scope 0 at ui/drop/drop_order.rs:268:14: 268:40
                                         // mir::Constant
                                         // + span: ui/drop/drop_order.rs:268:14: 268:40
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at ui/drop/drop_order.rs:268:14: 268:40
        return;                          // scope 0 at ui/drop/drop_order.rs:268:14: 268:40
    }
}

promoted[10] in main: &[core::fmt::ArgumentV1<'_>; 0] = {
    let mut _0: &[core::fmt::ArgumentV1<'_>; 0]; // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _1: [core::fmt::ArgumentV1<'_>; 0]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61

    bb0: {
        _1 = [];                         // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    }
}

promoted[11] in main: &[&str; 1] = {
    let mut _0: &[&str; 1];              // return place in scope 0 at ui/drop/drop_order.rs:263:14: 263:30
    let mut _1: [&str; 1];               // in scope 0 at ui/drop/drop_order.rs:263:14: 263:30

    bb0: {
        _1 = [const "-- or chain --\n"]; // scope 0 at ui/drop/drop_order.rs:263:14: 263:30
                                         // mir::Constant
                                         // + span: ui/drop/drop_order.rs:263:14: 263:30
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at ui/drop/drop_order.rs:263:14: 263:30
        return;                          // scope 0 at ui/drop/drop_order.rs:263:14: 263:30
    }
}

promoted[12] in main: &[core::fmt::ArgumentV1<'_>; 0] = {
    let mut _0: &[core::fmt::ArgumentV1<'_>; 0]; // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _1: [core::fmt::ArgumentV1<'_>; 0]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61

    bb0: {
        _1 = [];                         // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    }
}

promoted[13] in main: &[&str; 1] = {
    let mut _0: &[&str; 1];              // return place in scope 0 at ui/drop/drop_order.rs:258:14: 258:31
    let mut _1: [&str; 1];               // in scope 0 at ui/drop/drop_order.rs:258:14: 258:31

    bb0: {
        _1 = [const "-- and chain --\n"]; // scope 0 at ui/drop/drop_order.rs:258:14: 258:31
                                         // mir::Constant
                                         // + span: ui/drop/drop_order.rs:258:14: 258:31
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at ui/drop/drop_order.rs:258:14: 258:31
        return;                          // scope 0 at ui/drop/drop_order.rs:258:14: 258:31
    }
}

promoted[14] in main: &[core::fmt::ArgumentV1<'_>; 0] = {
    let mut _0: &[core::fmt::ArgumentV1<'_>; 0]; // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _1: [core::fmt::ArgumentV1<'_>; 0]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61

    bb0: {
        _1 = [];                         // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    }
}

promoted[15] in main: &[&str; 1] = {
    let mut _0: &[&str; 1];              // return place in scope 0 at ui/drop/drop_order.rs:253:14: 253:24
    let mut _1: [&str; 1];               // in scope 0 at ui/drop/drop_order.rs:253:14: 253:24

    bb0: {
        _1 = [const "-- if --\n"];       // scope 0 at ui/drop/drop_order.rs:253:14: 253:24
                                         // mir::Constant
                                         // + span: ui/drop/drop_order.rs:253:14: 253:24
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at ui/drop/drop_order.rs:253:14: 253:24
        return;                          // scope 0 at ui/drop/drop_order.rs:253:14: 253:24
    }
}

fn DropOrderCollector(_1: RefCell<Vec<u32>>) -> DropOrderCollector {
    let mut _0: DropOrderCollector;      // return place in scope 0 at ui/drop/drop_order.rs:9:1: 9:26

    bb0: {
        _0 = DropOrderCollector(move _1); // scope 0 at ui/drop/drop_order.rs:9:1: 9:26
        return;                          // scope 0 at ui/drop/drop_order.rs:9:1: 9:26
    }
}

// MIR FOR CTFE
fn DropOrderCollector(_1: RefCell<Vec<u32>>) -> DropOrderCollector {
    let mut _0: DropOrderCollector;      // return place in scope 0 at ui/drop/drop_order.rs:9:1: 9:26

    bb0: {
        _0 = DropOrderCollector(move _1); // scope 0 at ui/drop/drop_order.rs:9:1: 9:26
        return;                          // scope 0 at ui/drop/drop_order.rs:9:1: 9:26
    }
}

fn LoudDrop(_1: &DropOrderCollector, _2: u32) -> LoudDrop<'_> {
    let mut _0: LoudDrop<'_>;            // return place in scope 0 at ui/drop/drop_order.rs:11:1: 11:20

    bb0: {
        _0 = LoudDrop::<'_>(move _1, move _2); // scope 0 at ui/drop/drop_order.rs:11:1: 11:20
        return;                          // scope 0 at ui/drop/drop_order.rs:11:1: 11:20
    }
}

// MIR FOR CTFE
fn LoudDrop(_1: &DropOrderCollector, _2: u32) -> LoudDrop<'_> {
    let mut _0: LoudDrop<'_>;            // return place in scope 0 at ui/drop/drop_order.rs:11:1: 11:20

    bb0: {
        _0 = LoudDrop::<'_>(move _1, move _2); // scope 0 at ui/drop/drop_order.rs:11:1: 11:20
        return;                          // scope 0 at ui/drop/drop_order.rs:11:1: 11:20
    }
}
