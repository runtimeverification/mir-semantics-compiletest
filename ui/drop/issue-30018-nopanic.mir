// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
fn <impl at ui/drop/issue-30018-nopanic.rs:15:1: 15:24>::drop(_1: &mut D<'_>) -> () {
    debug self => _1;                    // in scope 0 at ui/drop/issue-30018-nopanic.rs:16:13: 16:22
    let mut _0: ();                      // return place in scope 0 at ui/drop/issue-30018-nopanic.rs:16:24: 16:24
    let _2: ();                          // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:62
    let mut _3: std::fmt::Arguments<'_>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _4: &[&str];                 // in scope 0 at ui/drop/issue-30018-nopanic.rs:17:18: 17:34
    let mut _5: &[&str; 2];              // in scope 0 at ui/drop/issue-30018-nopanic.rs:17:18: 17:34
    let _6: &[&str; 2];                  // in scope 0 at ui/drop/issue-30018-nopanic.rs:17:18: 17:34
    let mut _7: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _8: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let _9: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let _10: [core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _11: core::fmt::ArgumentV1<'_>; // in scope 0 at ui/drop/issue-30018-nopanic.rs:17:36: 17:42
    let mut _12: &i32;                   // in scope 0 at ui/drop/issue-30018-nopanic.rs:17:36: 17:42
    let _13: &i32;                       // in scope 0 at ui/drop/issue-30018-nopanic.rs:17:36: 17:42
    let _14: ();                         // in scope 0 at ui/drop/issue-30018-nopanic.rs:18:9: 18:43
    let mut _15: &mut std::vec::Vec<i32>; // in scope 0 at ui/drop/issue-30018-nopanic.rs:18:9: 18:43
    let mut _16: &mut std::vec::Vec<i32>; // in scope 0 at ui/drop/issue-30018-nopanic.rs:18:9: 18:43
    let mut _17: &mut std::cell::RefMut<'_, std::vec::Vec<i32>>; // in scope 0 at ui/drop/issue-30018-nopanic.rs:18:9: 18:43
    let mut _18: std::cell::RefMut<'_, std::vec::Vec<i32>>; // in scope 0 at ui/drop/issue-30018-nopanic.rs:18:9: 18:30
    let mut _19: &std::cell::RefCell<std::vec::Vec<i32>>; // in scope 0 at ui/drop/issue-30018-nopanic.rs:18:9: 18:30
    let mut _20: i32;                    // in scope 0 at ui/drop/issue-30018-nopanic.rs:18:36: 18:42
    let mut _21: &[&str; 2];             // in scope 0 at ui/drop/issue-30018-nopanic.rs:17:18: 17:34
    let mut _22: &std::cell::RefCell<std::vec::Vec<i32>>; // in scope 0 at ui/drop/issue-30018-nopanic.rs:16:13: 16:22

    bb0: {
        _21 = const _;                   // scope 0 at ui/drop/issue-30018-nopanic.rs:17:18: 17:34
                                         // mir::Constant
                                         // + span: ui/drop/issue-30018-nopanic.rs:17:18: 17:34
                                         // + literal: Const { ty: &[&str; 2], val: Unevaluated(<D<'a> as Drop>::drop, [ReErased], Some(promoted[0])) }
        _6 = _21;                        // scope 0 at ui/drop/issue-30018-nopanic.rs:17:18: 17:34
        _5 = _6;                         // scope 0 at ui/drop/issue-30018-nopanic.rs:17:18: 17:34
        _4 = move _5 as &[&str] (Pointer(Unsize)); // scope 0 at ui/drop/issue-30018-nopanic.rs:17:18: 17:34
        _13 = &((*_1).1: i32);           // scope 0 at ui/drop/issue-30018-nopanic.rs:17:36: 17:42
        _12 = _13;                       // scope 0 at ui/drop/issue-30018-nopanic.rs:17:36: 17:42
        _11 = core::fmt::ArgumentV1::<'_>::new_display::<i32>(move _12) -> bb1; // scope 0 at ui/drop/issue-30018-nopanic.rs:17:36: 17:42
                                         // mir::Constant
                                         // + span: ui/drop/issue-30018-nopanic.rs:17:36: 17:42
                                         // + user_ty: UserType(1)
                                         // + literal: Const { ty: for<'b> fn(&'b i32) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_display::<i32>}, val: Value(<ZST>) }
    }

    bb1: {
        _10 = [move _11];                // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _9 = &_10;                       // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _8 = _9;                         // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _7 = move _8 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _3 = Arguments::<'_>::new_v1(move _4, move _7) -> bb2; // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb2: {
        _2 = _print(move _3) -> bb3;     // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:62
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:27
                                         // + literal: Const { ty: for<'a> fn(Arguments<'a>) {_print}, val: Value(<ZST>) }
    }

    bb3: {
        _22 = deref_copy ((*_1).0: &std::cell::RefCell<std::vec::Vec<i32>>); // scope 0 at ui/drop/issue-30018-nopanic.rs:18:9: 18:30
        _19 = _22;                       // scope 0 at ui/drop/issue-30018-nopanic.rs:18:9: 18:30
        _18 = RefCell::<Vec<i32>>::borrow_mut(move _19) -> bb4; // scope 0 at ui/drop/issue-30018-nopanic.rs:18:9: 18:30
                                         // mir::Constant
                                         // + span: ui/drop/issue-30018-nopanic.rs:18:18: 18:28
                                         // + literal: Const { ty: for<'a> fn(&'a RefCell<Vec<i32>>) -> RefMut<'a, Vec<i32>> {RefCell::<Vec<i32>>::borrow_mut}, val: Value(<ZST>) }
    }

    bb4: {
        _17 = &mut _18;                  // scope 0 at ui/drop/issue-30018-nopanic.rs:18:9: 18:43
        _16 = <RefMut<'_, Vec<i32>> as DerefMut>::deref_mut(move _17) -> [return: bb5, unwind: bb8]; // scope 0 at ui/drop/issue-30018-nopanic.rs:18:9: 18:43
                                         // mir::Constant
                                         // + span: ui/drop/issue-30018-nopanic.rs:18:9: 18:43
                                         // + literal: Const { ty: for<'a> fn(&'a mut RefMut<'_, Vec<i32>>) -> &'a mut <RefMut<'_, Vec<i32>> as Deref>::Target {<RefMut<'_, Vec<i32>> as DerefMut>::deref_mut}, val: Value(<ZST>) }
    }

    bb5: {
        _15 = &mut (*_16);               // scope 0 at ui/drop/issue-30018-nopanic.rs:18:9: 18:43
        _20 = ((*_1).1: i32);            // scope 0 at ui/drop/issue-30018-nopanic.rs:18:36: 18:42
        _14 = Vec::<i32>::push(move _15, move _20) -> [return: bb6, unwind: bb8]; // scope 0 at ui/drop/issue-30018-nopanic.rs:18:9: 18:43
                                         // mir::Constant
                                         // + span: ui/drop/issue-30018-nopanic.rs:18:31: 18:35
                                         // + literal: Const { ty: for<'a> fn(&'a mut Vec<i32>, i32) {Vec::<i32>::push}, val: Value(<ZST>) }
    }

    bb6: {
        drop(_18) -> bb7;                // scope 0 at ui/drop/issue-30018-nopanic.rs:18:43: 18:44
    }

    bb7: {
        return;                          // scope 0 at ui/drop/issue-30018-nopanic.rs:19:6: 19:6
    }

    bb8 (cleanup): {
        drop(_18) -> bb9;                // scope 0 at ui/drop/issue-30018-nopanic.rs:18:43: 18:44
    }

    bb9 (cleanup): {
        resume;                          // scope 0 at ui/drop/issue-30018-nopanic.rs:16:5: 19:6
    }
}

promoted[0] in <impl at ui/drop/issue-30018-nopanic.rs:15:1: 15:24>::drop: &[&str; 2] = {
    let mut _0: &[&str; 2];              // return place in scope 0 at ui/drop/issue-30018-nopanic.rs:17:18: 17:34
    let mut _1: [&str; 2];               // in scope 0 at ui/drop/issue-30018-nopanic.rs:17:18: 17:34

    bb0: {
        _1 = [const "Dropping D(", const ")\n"]; // scope 0 at ui/drop/issue-30018-nopanic.rs:17:18: 17:34
                                         // mir::Constant
                                         // + span: ui/drop/issue-30018-nopanic.rs:17:18: 17:34
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
                                         // mir::Constant
                                         // + span: ui/drop/issue-30018-nopanic.rs:17:18: 17:34
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at ui/drop/issue-30018-nopanic.rs:17:18: 17:34
        return;                          // scope 0 at ui/drop/issue-30018-nopanic.rs:17:18: 17:34
    }
}

fn main() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/drop/issue-30018-nopanic.rs:22:11: 22:11
    let _1: ();                          // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:62
    let mut _2: std::fmt::Arguments<'_>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _3: &[&str];                 // in scope 0 at ui/drop/issue-30018-nopanic.rs:23:14: 23:21
    let mut _4: &[&str; 1];              // in scope 0 at ui/drop/issue-30018-nopanic.rs:23:14: 23:21
    let _5: &[&str; 1];                  // in scope 0 at ui/drop/issue-30018-nopanic.rs:23:14: 23:21
    let mut _6: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _7: &[core::fmt::ArgumentV1<'_>; 0]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let _8: &[core::fmt::ArgumentV1<'_>; 0]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let _9: ();                          // in scope 0 at ui/drop/issue-30018-nopanic.rs:24:5: 24:24
    let _10: ();                         // in scope 0 at ui/drop/issue-30018-nopanic.rs:25:5: 25:24
    let _11: ();                         // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:62
    let mut _12: std::fmt::Arguments<'_>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _13: &[&str];                // in scope 0 at ui/drop/issue-30018-nopanic.rs:26:14: 26:21
    let mut _14: &[&str; 1];             // in scope 0 at ui/drop/issue-30018-nopanic.rs:26:14: 26:21
    let _15: &[&str; 1];                 // in scope 0 at ui/drop/issue-30018-nopanic.rs:26:14: 26:21
    let mut _16: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _17: &[core::fmt::ArgumentV1<'_>; 0]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let _18: &[core::fmt::ArgumentV1<'_>; 0]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _19: &[core::fmt::ArgumentV1<'_>; 0]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _20: &[&str; 1];             // in scope 0 at ui/drop/issue-30018-nopanic.rs:26:14: 26:21
    let mut _21: &[core::fmt::ArgumentV1<'_>; 0]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _22: &[&str; 1];             // in scope 0 at ui/drop/issue-30018-nopanic.rs:23:14: 23:21

    bb0: {
        _22 = const _;                   // scope 0 at ui/drop/issue-30018-nopanic.rs:23:14: 23:21
                                         // mir::Constant
                                         // + span: ui/drop/issue-30018-nopanic.rs:23:14: 23:21
                                         // + literal: Const { ty: &[&str; 1], val: Unevaluated(main, [], Some(promoted[3])) }
        _5 = _22;                        // scope 0 at ui/drop/issue-30018-nopanic.rs:23:14: 23:21
        _4 = _5;                         // scope 0 at ui/drop/issue-30018-nopanic.rs:23:14: 23:21
        _3 = move _4 as &[&str] (Pointer(Unsize)); // scope 0 at ui/drop/issue-30018-nopanic.rs:23:14: 23:21
        _21 = const _;                   // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // + literal: Const { ty: &[core::fmt::ArgumentV1<'_>; 0], val: Unevaluated(main, [], Some(promoted[2])) }
        _8 = _21;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _7 = _8;                         // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _6 = move _7 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _2 = Arguments::<'_>::new_v1(move _3, move _6) -> bb1; // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb1: {
        _1 = _print(move _2) -> bb2;     // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:62
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:27
                                         // + literal: Const { ty: for<'a> fn(Arguments<'a>) {_print}, val: Value(<ZST>) }
    }

    bb2: {
        _9 = break_during_elem() -> bb3; // scope 0 at ui/drop/issue-30018-nopanic.rs:24:5: 24:24
                                         // mir::Constant
                                         // + span: ui/drop/issue-30018-nopanic.rs:24:5: 24:22
                                         // + literal: Const { ty: fn() {break_during_elem}, val: Value(<ZST>) }
    }

    bb3: {
        _10 = break_after_whole() -> bb4; // scope 0 at ui/drop/issue-30018-nopanic.rs:25:5: 25:24
                                         // mir::Constant
                                         // + span: ui/drop/issue-30018-nopanic.rs:25:5: 25:22
                                         // + literal: Const { ty: fn() {break_after_whole}, val: Value(<ZST>) }
    }

    bb4: {
        _20 = const _;                   // scope 0 at ui/drop/issue-30018-nopanic.rs:26:14: 26:21
                                         // mir::Constant
                                         // + span: ui/drop/issue-30018-nopanic.rs:26:14: 26:21
                                         // + literal: Const { ty: &[&str; 1], val: Unevaluated(main, [], Some(promoted[1])) }
        _15 = _20;                       // scope 0 at ui/drop/issue-30018-nopanic.rs:26:14: 26:21
        _14 = _15;                       // scope 0 at ui/drop/issue-30018-nopanic.rs:26:14: 26:21
        _13 = move _14 as &[&str] (Pointer(Unsize)); // scope 0 at ui/drop/issue-30018-nopanic.rs:26:14: 26:21
        _19 = const _;                   // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // + literal: Const { ty: &[core::fmt::ArgumentV1<'_>; 0], val: Unevaluated(main, [], Some(promoted[0])) }
        _18 = _19;                       // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _17 = _18;                       // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _16 = move _17 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _12 = Arguments::<'_>::new_v1(move _13, move _16) -> bb5; // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // + user_ty: UserType(1)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb5: {
        _11 = _print(move _12) -> bb6;   // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:62
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:27
                                         // + literal: Const { ty: for<'a> fn(Arguments<'a>) {_print}, val: Value(<ZST>) }
    }

    bb6: {
        return;                          // scope 0 at ui/drop/issue-30018-nopanic.rs:27:2: 27:2
    }
}

promoted[0] in main: &[core::fmt::ArgumentV1<'_>; 0] = {
    let mut _0: &[core::fmt::ArgumentV1<'_>; 0]; // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _1: [core::fmt::ArgumentV1<'_>; 0]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61

    bb0: {
        _1 = [];                         // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    }
}

promoted[1] in main: &[&str; 1] = {
    let mut _0: &[&str; 1];              // return place in scope 0 at ui/drop/issue-30018-nopanic.rs:26:14: 26:21
    let mut _1: [&str; 1];               // in scope 0 at ui/drop/issue-30018-nopanic.rs:26:14: 26:21

    bb0: {
        _1 = [const "Finis\n"];          // scope 0 at ui/drop/issue-30018-nopanic.rs:26:14: 26:21
                                         // mir::Constant
                                         // + span: ui/drop/issue-30018-nopanic.rs:26:14: 26:21
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at ui/drop/issue-30018-nopanic.rs:26:14: 26:21
        return;                          // scope 0 at ui/drop/issue-30018-nopanic.rs:26:14: 26:21
    }
}

promoted[2] in main: &[core::fmt::ArgumentV1<'_>; 0] = {
    let mut _0: &[core::fmt::ArgumentV1<'_>; 0]; // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _1: [core::fmt::ArgumentV1<'_>; 0]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61

    bb0: {
        _1 = [];                         // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    }
}

promoted[3] in main: &[&str; 1] = {
    let mut _0: &[&str; 1];              // return place in scope 0 at ui/drop/issue-30018-nopanic.rs:23:14: 23:21
    let mut _1: [&str; 1];               // in scope 0 at ui/drop/issue-30018-nopanic.rs:23:14: 23:21

    bb0: {
        _1 = [const "Start\n"];          // scope 0 at ui/drop/issue-30018-nopanic.rs:23:14: 23:21
                                         // mir::Constant
                                         // + span: ui/drop/issue-30018-nopanic.rs:23:14: 23:21
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at ui/drop/issue-30018-nopanic.rs:23:14: 23:21
        return;                          // scope 0 at ui/drop/issue-30018-nopanic.rs:23:14: 23:21
    }
}

fn break_during_elem() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/drop/issue-30018-nopanic.rs:29:24: 29:24
    let _1: &std::cell::RefCell<std::vec::Vec<i32>>; // in scope 0 at ui/drop/issue-30018-nopanic.rs:30:9: 30:12
    let _2: std::cell::RefCell<std::vec::Vec<i32>>; // in scope 0 at ui/drop/issue-30018-nopanic.rs:30:16: 30:40
    let mut _3: std::vec::Vec<i32>;      // in scope 0 at ui/drop/issue-30018-nopanic.rs:30:29: 30:39
    let mut _5: D<'_>;                   // in scope 0 at ui/drop/issue-30018-nopanic.rs:34:19: 34:29
    let mut _6: &std::cell::RefCell<std::vec::Vec<i32>>; // in scope 0 at ui/drop/issue-30018-nopanic.rs:34:21: 34:24
    let mut _7: D<'_>;                   // in scope 0 at ui/drop/issue-30018-nopanic.rs:35:19: 35:29
    let mut _8: &std::cell::RefCell<std::vec::Vec<i32>>; // in scope 0 at ui/drop/issue-30018-nopanic.rs:35:21: 35:24
    let _9: D<'_>;                       // in scope 0 at ui/drop/issue-30018-nopanic.rs:36:21: 36:31
    let mut _10: &std::cell::RefCell<std::vec::Vec<i32>>; // in scope 0 at ui/drop/issue-30018-nopanic.rs:36:23: 36:26
    let mut _11: (&&[i32], &&[i32; 3]);  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _12: &&[i32];                // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let _13: &[i32];                     // in scope 0 at ui/drop/issue-30018-nopanic.rs:39:16: 39:33
    let _14: &[i32];                     // in scope 0 at ui/drop/issue-30018-nopanic.rs:39:17: 39:33
    let mut _15: &std::vec::Vec<i32>;    // in scope 0 at ui/drop/issue-30018-nopanic.rs:39:17: 39:29
    let _16: &std::vec::Vec<i32>;        // in scope 0 at ui/drop/issue-30018-nopanic.rs:39:17: 39:29
    let mut _17: &std::cell::Ref<'_, std::vec::Vec<i32>>; // in scope 0 at ui/drop/issue-30018-nopanic.rs:39:17: 39:29
    let _18: std::cell::Ref<'_, std::vec::Vec<i32>>; // in scope 0 at ui/drop/issue-30018-nopanic.rs:39:17: 39:29
    let mut _19: &std::cell::RefCell<std::vec::Vec<i32>>; // in scope 0 at ui/drop/issue-30018-nopanic.rs:39:17: 39:29
    let mut _20: std::ops::RangeFull;    // in scope 0 at ui/drop/issue-30018-nopanic.rs:39:30: 39:32
    let mut _21: &&[i32; 3];             // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _24: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    let mut _25: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
    let mut _26: &&[i32];                // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
    let mut _27: &&[i32; 3];             // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
    let _29: !;                          // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
    let mut _30: core::panicking::AssertKind; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
    let mut _31: &&[i32];                // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let _32: &&[i32];                    // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let mut _33: &&[i32; 3];             // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let _34: &&[i32; 3];                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let mut _35: std::option::Option<std::fmt::Arguments<'_>>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
    let _36: ();                         // in scope 0 at ui/drop/issue-30018-nopanic.rs:40:5: 40:29
    let mut _37: &mut std::vec::Vec<i32>; // in scope 0 at ui/drop/issue-30018-nopanic.rs:40:5: 40:29
    let mut _38: &mut std::vec::Vec<i32>; // in scope 0 at ui/drop/issue-30018-nopanic.rs:40:5: 40:29
    let mut _39: &mut std::cell::RefMut<'_, std::vec::Vec<i32>>; // in scope 0 at ui/drop/issue-30018-nopanic.rs:40:5: 40:29
    let mut _40: std::cell::RefMut<'_, std::vec::Vec<i32>>; // in scope 0 at ui/drop/issue-30018-nopanic.rs:40:5: 40:21
    let mut _41: &std::cell::RefCell<std::vec::Vec<i32>>; // in scope 0 at ui/drop/issue-30018-nopanic.rs:40:5: 40:21
    let mut _43: D<'_>;                  // in scope 0 at ui/drop/issue-30018-nopanic.rs:45:20: 45:30
    let mut _44: &std::cell::RefCell<std::vec::Vec<i32>>; // in scope 0 at ui/drop/issue-30018-nopanic.rs:45:22: 45:25
    let mut _45: D<'_>;                  // in scope 0 at ui/drop/issue-30018-nopanic.rs:46:20: 46:30
    let mut _46: &std::cell::RefCell<std::vec::Vec<i32>>; // in scope 0 at ui/drop/issue-30018-nopanic.rs:46:22: 46:25
    let _47: D<'_>;                      // in scope 0 at ui/drop/issue-30018-nopanic.rs:47:22: 47:32
    let mut _48: &std::cell::RefCell<std::vec::Vec<i32>>; // in scope 0 at ui/drop/issue-30018-nopanic.rs:47:24: 47:27
    let mut _49: (&&[i32], &&[i32; 3]);  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _50: &&[i32];                // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let _51: &[i32];                     // in scope 0 at ui/drop/issue-30018-nopanic.rs:50:16: 50:33
    let _52: &[i32];                     // in scope 0 at ui/drop/issue-30018-nopanic.rs:50:17: 50:33
    let mut _53: &std::vec::Vec<i32>;    // in scope 0 at ui/drop/issue-30018-nopanic.rs:50:17: 50:29
    let _54: &std::vec::Vec<i32>;        // in scope 0 at ui/drop/issue-30018-nopanic.rs:50:17: 50:29
    let mut _55: &std::cell::Ref<'_, std::vec::Vec<i32>>; // in scope 0 at ui/drop/issue-30018-nopanic.rs:50:17: 50:29
    let _56: std::cell::Ref<'_, std::vec::Vec<i32>>; // in scope 0 at ui/drop/issue-30018-nopanic.rs:50:17: 50:29
    let mut _57: &std::cell::RefCell<std::vec::Vec<i32>>; // in scope 0 at ui/drop/issue-30018-nopanic.rs:50:17: 50:29
    let mut _58: std::ops::RangeFull;    // in scope 0 at ui/drop/issue-30018-nopanic.rs:50:30: 50:32
    let mut _59: &&[i32; 3];             // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _62: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    let mut _63: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
    let mut _64: &&[i32];                // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
    let mut _65: &&[i32; 3];             // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
    let _67: !;                          // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
    let mut _68: core::panicking::AssertKind; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
    let mut _69: &&[i32];                // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let _70: &&[i32];                    // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let mut _71: &&[i32; 3];             // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let _72: &&[i32; 3];                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let mut _73: std::option::Option<std::fmt::Arguments<'_>>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
    let _74: ();                         // in scope 0 at ui/drop/issue-30018-nopanic.rs:51:5: 51:29
    let mut _75: &mut std::vec::Vec<i32>; // in scope 0 at ui/drop/issue-30018-nopanic.rs:51:5: 51:29
    let mut _76: &mut std::vec::Vec<i32>; // in scope 0 at ui/drop/issue-30018-nopanic.rs:51:5: 51:29
    let mut _77: &mut std::cell::RefMut<'_, std::vec::Vec<i32>>; // in scope 0 at ui/drop/issue-30018-nopanic.rs:51:5: 51:29
    let mut _78: std::cell::RefMut<'_, std::vec::Vec<i32>>; // in scope 0 at ui/drop/issue-30018-nopanic.rs:51:5: 51:21
    let mut _79: &std::cell::RefCell<std::vec::Vec<i32>>; // in scope 0 at ui/drop/issue-30018-nopanic.rs:51:5: 51:21
    let mut _81: D<'_>;                  // in scope 0 at ui/drop/issue-30018-nopanic.rs:55:20: 55:30
    let mut _82: &std::cell::RefCell<std::vec::Vec<i32>>; // in scope 0 at ui/drop/issue-30018-nopanic.rs:55:22: 55:25
    let mut _83: D<'_>;                  // in scope 0 at ui/drop/issue-30018-nopanic.rs:56:19: 56:29
    let mut _84: &std::cell::RefCell<std::vec::Vec<i32>>; // in scope 0 at ui/drop/issue-30018-nopanic.rs:56:21: 56:24
    let _85: D<'_>;                      // in scope 0 at ui/drop/issue-30018-nopanic.rs:57:21: 57:31
    let mut _86: &std::cell::RefCell<std::vec::Vec<i32>>; // in scope 0 at ui/drop/issue-30018-nopanic.rs:57:23: 57:26
    let mut _87: (&&[i32], &&[i32; 3]);  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _88: &&[i32];                // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let _89: &[i32];                     // in scope 0 at ui/drop/issue-30018-nopanic.rs:60:16: 60:33
    let _90: &[i32];                     // in scope 0 at ui/drop/issue-30018-nopanic.rs:60:17: 60:33
    let mut _91: &std::vec::Vec<i32>;    // in scope 0 at ui/drop/issue-30018-nopanic.rs:60:17: 60:29
    let _92: &std::vec::Vec<i32>;        // in scope 0 at ui/drop/issue-30018-nopanic.rs:60:17: 60:29
    let mut _93: &std::cell::Ref<'_, std::vec::Vec<i32>>; // in scope 0 at ui/drop/issue-30018-nopanic.rs:60:17: 60:29
    let _94: std::cell::Ref<'_, std::vec::Vec<i32>>; // in scope 0 at ui/drop/issue-30018-nopanic.rs:60:17: 60:29
    let mut _95: &std::cell::RefCell<std::vec::Vec<i32>>; // in scope 0 at ui/drop/issue-30018-nopanic.rs:60:17: 60:29
    let mut _96: std::ops::RangeFull;    // in scope 0 at ui/drop/issue-30018-nopanic.rs:60:30: 60:32
    let mut _97: &&[i32; 3];             // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _100: bool;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    let mut _101: bool;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
    let mut _102: &&[i32];               // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
    let mut _103: &&[i32; 3];            // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
    let _105: !;                         // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
    let mut _106: core::panicking::AssertKind; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
    let mut _107: &&[i32];               // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let _108: &&[i32];                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let mut _109: &&[i32; 3];            // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let _110: &&[i32; 3];                // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let mut _111: std::option::Option<std::fmt::Arguments<'_>>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
    let _112: ();                        // in scope 0 at ui/drop/issue-30018-nopanic.rs:61:5: 61:29
    let mut _113: &mut std::vec::Vec<i32>; // in scope 0 at ui/drop/issue-30018-nopanic.rs:61:5: 61:29
    let mut _114: &mut std::vec::Vec<i32>; // in scope 0 at ui/drop/issue-30018-nopanic.rs:61:5: 61:29
    let mut _115: &mut std::cell::RefMut<'_, std::vec::Vec<i32>>; // in scope 0 at ui/drop/issue-30018-nopanic.rs:61:5: 61:29
    let mut _116: std::cell::RefMut<'_, std::vec::Vec<i32>>; // in scope 0 at ui/drop/issue-30018-nopanic.rs:61:5: 61:21
    let mut _117: &std::cell::RefCell<std::vec::Vec<i32>>; // in scope 0 at ui/drop/issue-30018-nopanic.rs:61:5: 61:21
    scope 1 {
        debug log => _1;                 // in scope 1 at ui/drop/issue-30018-nopanic.rs:30:9: 30:12
        let _4: [D<'_>; 4];              // in scope 1 at ui/drop/issue-30018-nopanic.rs:34:13: 34:15
        let _22: &&[i32];                // in scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        let _23: &&[i32; 3];             // in scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        let _42: &[D<'_>; 4];            // in scope 1 at ui/drop/issue-30018-nopanic.rs:45:13: 45:15
        let _60: &&[i32];                // in scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        let _61: &&[i32; 3];             // in scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        let _80: &[D<'_>];               // in scope 1 at ui/drop/issue-30018-nopanic.rs:55:13: 55:15
        let _98: &&[i32];                // in scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        let _99: &&[i32; 3];             // in scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        let mut _118: &&[i32; 3];        // in scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        let mut _119: &&[i32; 3];        // in scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        let mut _120: &&[i32; 3];        // in scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        scope 2 {
            debug _r => _4;              // in scope 2 at ui/drop/issue-30018-nopanic.rs:34:13: 34:15
        }
        scope 3 {
            debug left_val => _22;       // in scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
            debug right_val => _23;      // in scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
            let _28: core::panicking::AssertKind; // in scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
            scope 4 {
                debug kind => _28;       // in scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
            }
        }
        scope 5 {
            debug _r => _42;             // in scope 5 at ui/drop/issue-30018-nopanic.rs:45:13: 45:15
        }
        scope 6 {
            debug left_val => _60;       // in scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
            debug right_val => _61;      // in scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
            let _66: core::panicking::AssertKind; // in scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
            scope 7 {
                debug kind => _66;       // in scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
            }
        }
        scope 8 {
            debug _r => _80;             // in scope 8 at ui/drop/issue-30018-nopanic.rs:55:13: 55:15
        }
        scope 9 {
            debug left_val => _98;       // in scope 9 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
            debug right_val => _99;      // in scope 9 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
            let _104: core::panicking::AssertKind; // in scope 9 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
            scope 10 {
                debug kind => _104;      // in scope 10 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
            }
        }
    }

    bb0: {
        _3 = Vec::<i32>::new() -> bb1;   // scope 0 at ui/drop/issue-30018-nopanic.rs:30:29: 30:39
                                         // mir::Constant
                                         // + span: ui/drop/issue-30018-nopanic.rs:30:29: 30:37
                                         // + user_ty: UserType(1)
                                         // + literal: Const { ty: fn() -> Vec<i32> {Vec::<i32>::new}, val: Value(<ZST>) }
    }

    bb1: {
        _2 = RefCell::<Vec<i32>>::new(move _3) -> bb2; // scope 0 at ui/drop/issue-30018-nopanic.rs:30:16: 30:40
                                         // mir::Constant
                                         // + span: ui/drop/issue-30018-nopanic.rs:30:16: 30:28
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: fn(Vec<i32>) -> RefCell<Vec<i32>> {RefCell::<Vec<i32>>::new}, val: Value(<ZST>) }
    }

    bb2: {
        _1 = &_2;                        // scope 0 at ui/drop/issue-30018-nopanic.rs:30:15: 30:40
        _6 = _1;                         // scope 1 at ui/drop/issue-30018-nopanic.rs:34:21: 34:24
        _5 = D::<'_>(move _6, const 10_i32); // scope 1 at ui/drop/issue-30018-nopanic.rs:34:19: 34:29
        _8 = _1;                         // scope 1 at ui/drop/issue-30018-nopanic.rs:35:21: 35:24
        _7 = D::<'_>(move _8, const 11_i32); // scope 1 at ui/drop/issue-30018-nopanic.rs:35:19: 35:29
        _10 = _1;                        // scope 1 at ui/drop/issue-30018-nopanic.rs:36:23: 36:26
        _9 = D::<'_>(move _10, const 12_i32); // scope 1 at ui/drop/issue-30018-nopanic.rs:36:21: 36:31
        drop(_9) -> [return: bb3, unwind: bb56]; // scope 1 at ui/drop/issue-30018-nopanic.rs:36:31: 36:32
    }

    bb3: {
        drop(_7) -> [return: bb4, unwind: bb57]; // scope 1 at ui/drop/issue-30018-nopanic.rs:37:29: 37:30
    }

    bb4: {
        drop(_5) -> [return: bb5, unwind: bb58]; // scope 1 at ui/drop/issue-30018-nopanic.rs:37:29: 37:30
    }

    bb5: {
        _19 = _1;                        // scope 1 at ui/drop/issue-30018-nopanic.rs:39:17: 39:29
        _18 = RefCell::<Vec<i32>>::borrow(move _19) -> [return: bb6, unwind: bb58]; // scope 1 at ui/drop/issue-30018-nopanic.rs:39:17: 39:29
                                         // mir::Constant
                                         // + span: ui/drop/issue-30018-nopanic.rs:39:21: 39:27
                                         // + literal: Const { ty: for<'a> fn(&'a RefCell<Vec<i32>>) -> Ref<'a, Vec<i32>> {RefCell::<Vec<i32>>::borrow}, val: Value(<ZST>) }
    }

    bb6: {
        _17 = &_18;                      // scope 1 at ui/drop/issue-30018-nopanic.rs:39:17: 39:29
        _16 = <Ref<'_, Vec<i32>> as Deref>::deref(move _17) -> [return: bb7, unwind: bb55]; // scope 1 at ui/drop/issue-30018-nopanic.rs:39:17: 39:29
                                         // mir::Constant
                                         // + span: ui/drop/issue-30018-nopanic.rs:39:17: 39:29
                                         // + literal: Const { ty: for<'a> fn(&'a Ref<'_, Vec<i32>>) -> &'a <Ref<'_, Vec<i32>> as Deref>::Target {<Ref<'_, Vec<i32>> as Deref>::deref}, val: Value(<ZST>) }
    }

    bb7: {
        _15 = _16;                       // scope 1 at ui/drop/issue-30018-nopanic.rs:39:17: 39:29
        _14 = <Vec<i32> as Index<RangeFull>>::index(move _15, move _20) -> [return: bb8, unwind: bb55]; // scope 1 at ui/drop/issue-30018-nopanic.rs:39:17: 39:33
                                         // mir::Constant
                                         // + span: ui/drop/issue-30018-nopanic.rs:39:17: 39:33
                                         // + literal: Const { ty: for<'a> fn(&'a Vec<i32>, RangeFull) -> &'a <Vec<i32> as Index<RangeFull>>::Output {<Vec<i32> as Index<RangeFull>>::index}, val: Value(<ZST>) }
    }

    bb8: {
        _13 = _14;                       // scope 1 at ui/drop/issue-30018-nopanic.rs:39:16: 39:33
        _12 = &_13;                      // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _120 = const _;                  // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // + literal: Const { ty: &&[i32; 3], val: Unevaluated(break_during_elem, [], Some(promoted[2])) }
        _21 = _120;                      // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _11 = (move _12, move _21);      // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _22 = (_11.0: &&[i32]);          // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _23 = (_11.1: &&[i32; 3]);       // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _26 = _22;                       // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
        _27 = _23;                       // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
        _25 = <&[i32] as PartialEq<&[i32; 3]>>::eq(move _26, move _27) -> [return: bb9, unwind: bb55]; // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a &[i32], &'b &[i32; 3]) -> bool {<&[i32] as PartialEq<&[i32; 3]>>::eq}, val: Value(<ZST>) }
    }

    bb9: {
        _24 = Not(move _25);             // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
        switchInt(move _24) -> [0: bb11, otherwise: bb10]; // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    }

    bb10: {
        _28 = const core::panicking::AssertKind::Eq; // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _30 = const core::panicking::AssertKind::Eq; // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _32 = _22;                       // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _31 = _32;                       // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _34 = _23;                       // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _33 = _34;                       // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _35 = Option::<Arguments<'_>>::None; // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
        _29 = core::panicking::assert_failed::<&[i32], &[i32; 3]>(move _30, move _31, move _33, move _35) -> bb55; // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:53
                                         // + literal: Const { ty: for<'a, 'b, 'c> fn(core::panicking::AssertKind, &'a &[i32], &'b &[i32; 3], Option<Arguments<'c>>) -> ! {core::panicking::assert_failed::<&[i32], &[i32; 3]>}, val: Value(<ZST>) }
    }

    bb11: {
        drop(_18) -> [return: bb12, unwind: bb58]; // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:48:9: 48:10
    }

    bb12: {
        _41 = _1;                        // scope 1 at ui/drop/issue-30018-nopanic.rs:40:5: 40:21
        _40 = RefCell::<Vec<i32>>::borrow_mut(move _41) -> [return: bb13, unwind: bb58]; // scope 1 at ui/drop/issue-30018-nopanic.rs:40:5: 40:21
                                         // mir::Constant
                                         // + span: ui/drop/issue-30018-nopanic.rs:40:9: 40:19
                                         // + literal: Const { ty: for<'a> fn(&'a RefCell<Vec<i32>>) -> RefMut<'a, Vec<i32>> {RefCell::<Vec<i32>>::borrow_mut}, val: Value(<ZST>) }
    }

    bb13: {
        _39 = &mut _40;                  // scope 1 at ui/drop/issue-30018-nopanic.rs:40:5: 40:29
        _38 = <RefMut<'_, Vec<i32>> as DerefMut>::deref_mut(move _39) -> [return: bb14, unwind: bb54]; // scope 1 at ui/drop/issue-30018-nopanic.rs:40:5: 40:29
                                         // mir::Constant
                                         // + span: ui/drop/issue-30018-nopanic.rs:40:5: 40:29
                                         // + literal: Const { ty: for<'a> fn(&'a mut RefMut<'_, Vec<i32>>) -> &'a mut <RefMut<'_, Vec<i32>> as Deref>::Target {<RefMut<'_, Vec<i32>> as DerefMut>::deref_mut}, val: Value(<ZST>) }
    }

    bb14: {
        _37 = &mut (*_38);               // scope 1 at ui/drop/issue-30018-nopanic.rs:40:5: 40:29
        _36 = Vec::<i32>::clear(move _37) -> [return: bb15, unwind: bb54]; // scope 1 at ui/drop/issue-30018-nopanic.rs:40:5: 40:29
                                         // mir::Constant
                                         // + span: ui/drop/issue-30018-nopanic.rs:40:22: 40:27
                                         // + literal: Const { ty: for<'a> fn(&'a mut Vec<i32>) {Vec::<i32>::clear}, val: Value(<ZST>) }
    }

    bb15: {
        drop(_40) -> [return: bb16, unwind: bb58]; // scope 1 at ui/drop/issue-30018-nopanic.rs:40:29: 40:30
    }

    bb16: {
        _44 = _1;                        // scope 1 at ui/drop/issue-30018-nopanic.rs:45:22: 45:25
        _43 = D::<'_>(move _44, const 20_i32); // scope 1 at ui/drop/issue-30018-nopanic.rs:45:20: 45:30
        _46 = _1;                        // scope 1 at ui/drop/issue-30018-nopanic.rs:46:22: 46:25
        _45 = D::<'_>(move _46, const 21_i32); // scope 1 at ui/drop/issue-30018-nopanic.rs:46:20: 46:30
        _48 = _1;                        // scope 1 at ui/drop/issue-30018-nopanic.rs:47:24: 47:27
        _47 = D::<'_>(move _48, const 22_i32); // scope 1 at ui/drop/issue-30018-nopanic.rs:47:22: 47:32
        drop(_47) -> [return: bb17, unwind: bb52]; // scope 1 at ui/drop/issue-30018-nopanic.rs:47:32: 47:33
    }

    bb17: {
        drop(_45) -> [return: bb18, unwind: bb53]; // scope 1 at ui/drop/issue-30018-nopanic.rs:48:30: 48:31
    }

    bb18: {
        drop(_43) -> [return: bb19, unwind: bb58]; // scope 1 at ui/drop/issue-30018-nopanic.rs:48:30: 48:31
    }

    bb19: {
        _57 = _1;                        // scope 1 at ui/drop/issue-30018-nopanic.rs:50:17: 50:29
        _56 = RefCell::<Vec<i32>>::borrow(move _57) -> [return: bb20, unwind: bb58]; // scope 1 at ui/drop/issue-30018-nopanic.rs:50:17: 50:29
                                         // mir::Constant
                                         // + span: ui/drop/issue-30018-nopanic.rs:50:21: 50:27
                                         // + literal: Const { ty: for<'a> fn(&'a RefCell<Vec<i32>>) -> Ref<'a, Vec<i32>> {RefCell::<Vec<i32>>::borrow}, val: Value(<ZST>) }
    }

    bb20: {
        _55 = &_56;                      // scope 1 at ui/drop/issue-30018-nopanic.rs:50:17: 50:29
        _54 = <Ref<'_, Vec<i32>> as Deref>::deref(move _55) -> [return: bb21, unwind: bb51]; // scope 1 at ui/drop/issue-30018-nopanic.rs:50:17: 50:29
                                         // mir::Constant
                                         // + span: ui/drop/issue-30018-nopanic.rs:50:17: 50:29
                                         // + literal: Const { ty: for<'a> fn(&'a Ref<'_, Vec<i32>>) -> &'a <Ref<'_, Vec<i32>> as Deref>::Target {<Ref<'_, Vec<i32>> as Deref>::deref}, val: Value(<ZST>) }
    }

    bb21: {
        _53 = _54;                       // scope 1 at ui/drop/issue-30018-nopanic.rs:50:17: 50:29
        _52 = <Vec<i32> as Index<RangeFull>>::index(move _53, move _58) -> [return: bb22, unwind: bb51]; // scope 1 at ui/drop/issue-30018-nopanic.rs:50:17: 50:33
                                         // mir::Constant
                                         // + span: ui/drop/issue-30018-nopanic.rs:50:17: 50:33
                                         // + literal: Const { ty: for<'a> fn(&'a Vec<i32>, RangeFull) -> &'a <Vec<i32> as Index<RangeFull>>::Output {<Vec<i32> as Index<RangeFull>>::index}, val: Value(<ZST>) }
    }

    bb22: {
        _51 = _52;                       // scope 1 at ui/drop/issue-30018-nopanic.rs:50:16: 50:33
        _50 = &_51;                      // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _119 = const _;                  // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // + literal: Const { ty: &&[i32; 3], val: Unevaluated(break_during_elem, [], Some(promoted[1])) }
        _59 = _119;                      // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _49 = (move _50, move _59);      // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _60 = (_49.0: &&[i32]);          // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _61 = (_49.1: &&[i32; 3]);       // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _64 = _60;                       // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
        _65 = _61;                       // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
        _63 = <&[i32] as PartialEq<&[i32; 3]>>::eq(move _64, move _65) -> [return: bb23, unwind: bb51]; // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a &[i32], &'b &[i32; 3]) -> bool {<&[i32] as PartialEq<&[i32; 3]>>::eq}, val: Value(<ZST>) }
    }

    bb23: {
        _62 = Not(move _63);             // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
        switchInt(move _62) -> [0: bb25, otherwise: bb24]; // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    }

    bb24: {
        _66 = const core::panicking::AssertKind::Eq; // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _68 = const core::panicking::AssertKind::Eq; // scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _70 = _60;                       // scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _69 = _70;                       // scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _72 = _61;                       // scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _71 = _72;                       // scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _73 = Option::<Arguments<'_>>::None; // scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
        _67 = core::panicking::assert_failed::<&[i32], &[i32; 3]>(move _68, move _69, move _71, move _73) -> bb51; // scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:53
                                         // + literal: Const { ty: for<'a, 'b, 'c> fn(core::panicking::AssertKind, &'a &[i32], &'b &[i32; 3], Option<Arguments<'c>>) -> ! {core::panicking::assert_failed::<&[i32], &[i32; 3]>}, val: Value(<ZST>) }
    }

    bb25: {
        drop(_56) -> [return: bb26, unwind: bb58]; // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:48:9: 48:10
    }

    bb26: {
        _79 = _1;                        // scope 1 at ui/drop/issue-30018-nopanic.rs:51:5: 51:21
        _78 = RefCell::<Vec<i32>>::borrow_mut(move _79) -> [return: bb27, unwind: bb58]; // scope 1 at ui/drop/issue-30018-nopanic.rs:51:5: 51:21
                                         // mir::Constant
                                         // + span: ui/drop/issue-30018-nopanic.rs:51:9: 51:19
                                         // + literal: Const { ty: for<'a> fn(&'a RefCell<Vec<i32>>) -> RefMut<'a, Vec<i32>> {RefCell::<Vec<i32>>::borrow_mut}, val: Value(<ZST>) }
    }

    bb27: {
        _77 = &mut _78;                  // scope 1 at ui/drop/issue-30018-nopanic.rs:51:5: 51:29
        _76 = <RefMut<'_, Vec<i32>> as DerefMut>::deref_mut(move _77) -> [return: bb28, unwind: bb50]; // scope 1 at ui/drop/issue-30018-nopanic.rs:51:5: 51:29
                                         // mir::Constant
                                         // + span: ui/drop/issue-30018-nopanic.rs:51:5: 51:29
                                         // + literal: Const { ty: for<'a> fn(&'a mut RefMut<'_, Vec<i32>>) -> &'a mut <RefMut<'_, Vec<i32>> as Deref>::Target {<RefMut<'_, Vec<i32>> as DerefMut>::deref_mut}, val: Value(<ZST>) }
    }

    bb28: {
        _75 = &mut (*_76);               // scope 1 at ui/drop/issue-30018-nopanic.rs:51:5: 51:29
        _74 = Vec::<i32>::clear(move _75) -> [return: bb29, unwind: bb50]; // scope 1 at ui/drop/issue-30018-nopanic.rs:51:5: 51:29
                                         // mir::Constant
                                         // + span: ui/drop/issue-30018-nopanic.rs:51:22: 51:27
                                         // + literal: Const { ty: for<'a> fn(&'a mut Vec<i32>) {Vec::<i32>::clear}, val: Value(<ZST>) }
    }

    bb29: {
        drop(_78) -> [return: bb30, unwind: bb58]; // scope 1 at ui/drop/issue-30018-nopanic.rs:51:29: 51:30
    }

    bb30: {
        _82 = _1;                        // scope 1 at ui/drop/issue-30018-nopanic.rs:55:22: 55:25
        _81 = D::<'_>(move _82, const 30_i32); // scope 1 at ui/drop/issue-30018-nopanic.rs:55:20: 55:30
        _84 = _1;                        // scope 1 at ui/drop/issue-30018-nopanic.rs:56:21: 56:24
        _83 = D::<'_>(move _84, const 31_i32); // scope 1 at ui/drop/issue-30018-nopanic.rs:56:19: 56:29
        _86 = _1;                        // scope 1 at ui/drop/issue-30018-nopanic.rs:57:23: 57:26
        _85 = D::<'_>(move _86, const 32_i32); // scope 1 at ui/drop/issue-30018-nopanic.rs:57:21: 57:31
        drop(_85) -> [return: bb31, unwind: bb48]; // scope 1 at ui/drop/issue-30018-nopanic.rs:57:31: 57:32
    }

    bb31: {
        drop(_83) -> [return: bb32, unwind: bb49]; // scope 1 at ui/drop/issue-30018-nopanic.rs:58:29: 58:30
    }

    bb32: {
        drop(_81) -> [return: bb33, unwind: bb58]; // scope 1 at ui/drop/issue-30018-nopanic.rs:58:29: 58:30
    }

    bb33: {
        _95 = _1;                        // scope 1 at ui/drop/issue-30018-nopanic.rs:60:17: 60:29
        _94 = RefCell::<Vec<i32>>::borrow(move _95) -> [return: bb34, unwind: bb58]; // scope 1 at ui/drop/issue-30018-nopanic.rs:60:17: 60:29
                                         // mir::Constant
                                         // + span: ui/drop/issue-30018-nopanic.rs:60:21: 60:27
                                         // + literal: Const { ty: for<'a> fn(&'a RefCell<Vec<i32>>) -> Ref<'a, Vec<i32>> {RefCell::<Vec<i32>>::borrow}, val: Value(<ZST>) }
    }

    bb34: {
        _93 = &_94;                      // scope 1 at ui/drop/issue-30018-nopanic.rs:60:17: 60:29
        _92 = <Ref<'_, Vec<i32>> as Deref>::deref(move _93) -> [return: bb35, unwind: bb47]; // scope 1 at ui/drop/issue-30018-nopanic.rs:60:17: 60:29
                                         // mir::Constant
                                         // + span: ui/drop/issue-30018-nopanic.rs:60:17: 60:29
                                         // + literal: Const { ty: for<'a> fn(&'a Ref<'_, Vec<i32>>) -> &'a <Ref<'_, Vec<i32>> as Deref>::Target {<Ref<'_, Vec<i32>> as Deref>::deref}, val: Value(<ZST>) }
    }

    bb35: {
        _91 = _92;                       // scope 1 at ui/drop/issue-30018-nopanic.rs:60:17: 60:29
        _90 = <Vec<i32> as Index<RangeFull>>::index(move _91, move _96) -> [return: bb36, unwind: bb47]; // scope 1 at ui/drop/issue-30018-nopanic.rs:60:17: 60:33
                                         // mir::Constant
                                         // + span: ui/drop/issue-30018-nopanic.rs:60:17: 60:33
                                         // + literal: Const { ty: for<'a> fn(&'a Vec<i32>, RangeFull) -> &'a <Vec<i32> as Index<RangeFull>>::Output {<Vec<i32> as Index<RangeFull>>::index}, val: Value(<ZST>) }
    }

    bb36: {
        _89 = _90;                       // scope 1 at ui/drop/issue-30018-nopanic.rs:60:16: 60:33
        _88 = &_89;                      // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _118 = const _;                  // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // + literal: Const { ty: &&[i32; 3], val: Unevaluated(break_during_elem, [], Some(promoted[0])) }
        _97 = _118;                      // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _87 = (move _88, move _97);      // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _98 = (_87.0: &&[i32]);          // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _99 = (_87.1: &&[i32; 3]);       // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _102 = _98;                      // scope 9 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
        _103 = _99;                      // scope 9 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
        _101 = <&[i32] as PartialEq<&[i32; 3]>>::eq(move _102, move _103) -> [return: bb37, unwind: bb47]; // scope 9 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a &[i32], &'b &[i32; 3]) -> bool {<&[i32] as PartialEq<&[i32; 3]>>::eq}, val: Value(<ZST>) }
    }

    bb37: {
        _100 = Not(move _101);           // scope 9 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
        switchInt(move _100) -> [0: bb39, otherwise: bb38]; // scope 9 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    }

    bb38: {
        _104 = const core::panicking::AssertKind::Eq; // scope 9 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _106 = const core::panicking::AssertKind::Eq; // scope 10 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _108 = _98;                      // scope 10 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _107 = _108;                     // scope 10 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _110 = _99;                      // scope 10 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _109 = _110;                     // scope 10 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _111 = Option::<Arguments<'_>>::None; // scope 10 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
        _105 = core::panicking::assert_failed::<&[i32], &[i32; 3]>(move _106, move _107, move _109, move _111) -> bb47; // scope 10 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:53
                                         // + literal: Const { ty: for<'a, 'b, 'c> fn(core::panicking::AssertKind, &'a &[i32], &'b &[i32; 3], Option<Arguments<'c>>) -> ! {core::panicking::assert_failed::<&[i32], &[i32; 3]>}, val: Value(<ZST>) }
    }

    bb39: {
        drop(_94) -> [return: bb40, unwind: bb58]; // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:48:9: 48:10
    }

    bb40: {
        _117 = _1;                       // scope 1 at ui/drop/issue-30018-nopanic.rs:61:5: 61:21
        _116 = RefCell::<Vec<i32>>::borrow_mut(move _117) -> [return: bb41, unwind: bb58]; // scope 1 at ui/drop/issue-30018-nopanic.rs:61:5: 61:21
                                         // mir::Constant
                                         // + span: ui/drop/issue-30018-nopanic.rs:61:9: 61:19
                                         // + literal: Const { ty: for<'a> fn(&'a RefCell<Vec<i32>>) -> RefMut<'a, Vec<i32>> {RefCell::<Vec<i32>>::borrow_mut}, val: Value(<ZST>) }
    }

    bb41: {
        _115 = &mut _116;                // scope 1 at ui/drop/issue-30018-nopanic.rs:61:5: 61:29
        _114 = <RefMut<'_, Vec<i32>> as DerefMut>::deref_mut(move _115) -> [return: bb42, unwind: bb46]; // scope 1 at ui/drop/issue-30018-nopanic.rs:61:5: 61:29
                                         // mir::Constant
                                         // + span: ui/drop/issue-30018-nopanic.rs:61:5: 61:29
                                         // + literal: Const { ty: for<'a> fn(&'a mut RefMut<'_, Vec<i32>>) -> &'a mut <RefMut<'_, Vec<i32>> as Deref>::Target {<RefMut<'_, Vec<i32>> as DerefMut>::deref_mut}, val: Value(<ZST>) }
    }

    bb42: {
        _113 = &mut (*_114);             // scope 1 at ui/drop/issue-30018-nopanic.rs:61:5: 61:29
        _112 = Vec::<i32>::clear(move _113) -> [return: bb43, unwind: bb46]; // scope 1 at ui/drop/issue-30018-nopanic.rs:61:5: 61:29
                                         // mir::Constant
                                         // + span: ui/drop/issue-30018-nopanic.rs:61:22: 61:27
                                         // + literal: Const { ty: for<'a> fn(&'a mut Vec<i32>) {Vec::<i32>::clear}, val: Value(<ZST>) }
    }

    bb43: {
        drop(_116) -> [return: bb44, unwind: bb58]; // scope 1 at ui/drop/issue-30018-nopanic.rs:61:29: 61:30
    }

    bb44: {
        drop(_2) -> bb45;                // scope 0 at ui/drop/issue-30018-nopanic.rs:62:1: 62:2
    }

    bb45: {
        return;                          // scope 0 at ui/drop/issue-30018-nopanic.rs:62:2: 62:2
    }

    bb46 (cleanup): {
        drop(_116) -> bb58;              // scope 1 at ui/drop/issue-30018-nopanic.rs:61:29: 61:30
    }

    bb47 (cleanup): {
        drop(_94) -> bb58;               // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:48:9: 48:10
    }

    bb48 (cleanup): {
        drop(_83) -> bb49;               // scope 1 at ui/drop/issue-30018-nopanic.rs:58:29: 58:30
    }

    bb49 (cleanup): {
        drop(_81) -> bb58;               // scope 1 at ui/drop/issue-30018-nopanic.rs:58:29: 58:30
    }

    bb50 (cleanup): {
        drop(_78) -> bb58;               // scope 1 at ui/drop/issue-30018-nopanic.rs:51:29: 51:30
    }

    bb51 (cleanup): {
        drop(_56) -> bb58;               // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:48:9: 48:10
    }

    bb52 (cleanup): {
        drop(_45) -> bb53;               // scope 1 at ui/drop/issue-30018-nopanic.rs:48:30: 48:31
    }

    bb53 (cleanup): {
        drop(_43) -> bb58;               // scope 1 at ui/drop/issue-30018-nopanic.rs:48:30: 48:31
    }

    bb54 (cleanup): {
        drop(_40) -> bb58;               // scope 1 at ui/drop/issue-30018-nopanic.rs:40:29: 40:30
    }

    bb55 (cleanup): {
        drop(_18) -> bb58;               // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:48:9: 48:10
    }

    bb56 (cleanup): {
        drop(_7) -> bb57;                // scope 1 at ui/drop/issue-30018-nopanic.rs:37:29: 37:30
    }

    bb57 (cleanup): {
        drop(_5) -> bb58;                // scope 1 at ui/drop/issue-30018-nopanic.rs:37:29: 37:30
    }

    bb58 (cleanup): {
        drop(_2) -> bb59;                // scope 0 at ui/drop/issue-30018-nopanic.rs:62:1: 62:2
    }

    bb59 (cleanup): {
        resume;                          // scope 0 at ui/drop/issue-30018-nopanic.rs:29:1: 62:2
    }
}

promoted[0] in break_during_elem: &&[i32; 3] = {
    let mut _0: &&[i32; 3];              // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _1: &[i32; 3];               // in scope 0 at ui/drop/issue-30018-nopanic.rs:60:35: 60:48
    let mut _2: [i32; 3];                // in scope 0 at ui/drop/issue-30018-nopanic.rs:60:36: 60:48

    bb0: {
        _2 = [const 32_i32, const 31_i32, const 30_i32]; // scope 0 at ui/drop/issue-30018-nopanic.rs:60:36: 60:48
        _1 = &_2;                        // scope 0 at ui/drop/issue-30018-nopanic.rs:60:35: 60:48
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    }
}

promoted[1] in break_during_elem: &&[i32; 3] = {
    let mut _0: &&[i32; 3];              // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _1: &[i32; 3];               // in scope 0 at ui/drop/issue-30018-nopanic.rs:50:35: 50:48
    let mut _2: [i32; 3];                // in scope 0 at ui/drop/issue-30018-nopanic.rs:50:36: 50:48

    bb0: {
        _2 = [const 22_i32, const 21_i32, const 20_i32]; // scope 0 at ui/drop/issue-30018-nopanic.rs:50:36: 50:48
        _1 = &_2;                        // scope 0 at ui/drop/issue-30018-nopanic.rs:50:35: 50:48
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    }
}

promoted[2] in break_during_elem: &&[i32; 3] = {
    let mut _0: &&[i32; 3];              // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _1: &[i32; 3];               // in scope 0 at ui/drop/issue-30018-nopanic.rs:39:35: 39:48
    let mut _2: [i32; 3];                // in scope 0 at ui/drop/issue-30018-nopanic.rs:39:36: 39:48

    bb0: {
        _2 = [const 12_i32, const 11_i32, const 10_i32]; // scope 0 at ui/drop/issue-30018-nopanic.rs:39:36: 39:48
        _1 = &_2;                        // scope 0 at ui/drop/issue-30018-nopanic.rs:39:35: 39:48
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    }
}

fn break_after_whole() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/drop/issue-30018-nopanic.rs:71:24: 71:24
    let _1: &std::cell::RefCell<std::vec::Vec<i32>>; // in scope 0 at ui/drop/issue-30018-nopanic.rs:72:9: 72:12
    let _2: std::cell::RefCell<std::vec::Vec<i32>>; // in scope 0 at ui/drop/issue-30018-nopanic.rs:72:16: 72:40
    let mut _3: std::vec::Vec<i32>;      // in scope 0 at ui/drop/issue-30018-nopanic.rs:72:29: 72:39
    let mut _5: D<'_>;                   // in scope 0 at ui/drop/issue-30018-nopanic.rs:76:19: 76:29
    let mut _6: &std::cell::RefCell<std::vec::Vec<i32>>; // in scope 0 at ui/drop/issue-30018-nopanic.rs:76:21: 76:24
    let mut _7: D<'_>;                   // in scope 0 at ui/drop/issue-30018-nopanic.rs:77:19: 77:29
    let mut _8: &std::cell::RefCell<std::vec::Vec<i32>>; // in scope 0 at ui/drop/issue-30018-nopanic.rs:77:21: 77:24
    let mut _9: D<'_>;                   // in scope 0 at ui/drop/issue-30018-nopanic.rs:78:19: 78:29
    let mut _10: &std::cell::RefCell<std::vec::Vec<i32>>; // in scope 0 at ui/drop/issue-30018-nopanic.rs:78:21: 78:24
    let mut _11: (&&[i32], &&[i32; 3]);  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _12: &&[i32];                // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let _13: &[i32];                     // in scope 0 at ui/drop/issue-30018-nopanic.rs:81:16: 81:33
    let _14: &[i32];                     // in scope 0 at ui/drop/issue-30018-nopanic.rs:81:17: 81:33
    let mut _15: &std::vec::Vec<i32>;    // in scope 0 at ui/drop/issue-30018-nopanic.rs:81:17: 81:29
    let _16: &std::vec::Vec<i32>;        // in scope 0 at ui/drop/issue-30018-nopanic.rs:81:17: 81:29
    let mut _17: &std::cell::Ref<'_, std::vec::Vec<i32>>; // in scope 0 at ui/drop/issue-30018-nopanic.rs:81:17: 81:29
    let _18: std::cell::Ref<'_, std::vec::Vec<i32>>; // in scope 0 at ui/drop/issue-30018-nopanic.rs:81:17: 81:29
    let mut _19: &std::cell::RefCell<std::vec::Vec<i32>>; // in scope 0 at ui/drop/issue-30018-nopanic.rs:81:17: 81:29
    let mut _20: std::ops::RangeFull;    // in scope 0 at ui/drop/issue-30018-nopanic.rs:81:30: 81:32
    let mut _21: &&[i32; 3];             // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _24: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    let mut _25: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
    let mut _26: &&[i32];                // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
    let mut _27: &&[i32; 3];             // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
    let _29: !;                          // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
    let mut _30: core::panicking::AssertKind; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
    let mut _31: &&[i32];                // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let _32: &&[i32];                    // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let mut _33: &&[i32; 3];             // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let _34: &&[i32; 3];                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let mut _35: std::option::Option<std::fmt::Arguments<'_>>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
    let _36: ();                         // in scope 0 at ui/drop/issue-30018-nopanic.rs:82:5: 82:29
    let mut _37: &mut std::vec::Vec<i32>; // in scope 0 at ui/drop/issue-30018-nopanic.rs:82:5: 82:29
    let mut _38: &mut std::vec::Vec<i32>; // in scope 0 at ui/drop/issue-30018-nopanic.rs:82:5: 82:29
    let mut _39: &mut std::cell::RefMut<'_, std::vec::Vec<i32>>; // in scope 0 at ui/drop/issue-30018-nopanic.rs:82:5: 82:29
    let mut _40: std::cell::RefMut<'_, std::vec::Vec<i32>>; // in scope 0 at ui/drop/issue-30018-nopanic.rs:82:5: 82:21
    let mut _41: &std::cell::RefCell<std::vec::Vec<i32>>; // in scope 0 at ui/drop/issue-30018-nopanic.rs:82:5: 82:21
    let _43: [D<'_>; 3];                 // in scope 0 at ui/drop/issue-30018-nopanic.rs:86:19: 88:31
    let mut _44: D<'_>;                  // in scope 0 at ui/drop/issue-30018-nopanic.rs:86:20: 86:30
    let mut _45: &std::cell::RefCell<std::vec::Vec<i32>>; // in scope 0 at ui/drop/issue-30018-nopanic.rs:86:22: 86:25
    let mut _46: D<'_>;                  // in scope 0 at ui/drop/issue-30018-nopanic.rs:87:20: 87:30
    let mut _47: &std::cell::RefCell<std::vec::Vec<i32>>; // in scope 0 at ui/drop/issue-30018-nopanic.rs:87:22: 87:25
    let mut _48: D<'_>;                  // in scope 0 at ui/drop/issue-30018-nopanic.rs:88:20: 88:30
    let mut _49: &std::cell::RefCell<std::vec::Vec<i32>>; // in scope 0 at ui/drop/issue-30018-nopanic.rs:88:22: 88:25
    let mut _50: (&&[i32], &&[i32; 3]);  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _51: &&[i32];                // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let _52: &[i32];                     // in scope 0 at ui/drop/issue-30018-nopanic.rs:91:16: 91:33
    let _53: &[i32];                     // in scope 0 at ui/drop/issue-30018-nopanic.rs:91:17: 91:33
    let mut _54: &std::vec::Vec<i32>;    // in scope 0 at ui/drop/issue-30018-nopanic.rs:91:17: 91:29
    let _55: &std::vec::Vec<i32>;        // in scope 0 at ui/drop/issue-30018-nopanic.rs:91:17: 91:29
    let mut _56: &std::cell::Ref<'_, std::vec::Vec<i32>>; // in scope 0 at ui/drop/issue-30018-nopanic.rs:91:17: 91:29
    let _57: std::cell::Ref<'_, std::vec::Vec<i32>>; // in scope 0 at ui/drop/issue-30018-nopanic.rs:91:17: 91:29
    let mut _58: &std::cell::RefCell<std::vec::Vec<i32>>; // in scope 0 at ui/drop/issue-30018-nopanic.rs:91:17: 91:29
    let mut _59: std::ops::RangeFull;    // in scope 0 at ui/drop/issue-30018-nopanic.rs:91:30: 91:32
    let mut _60: &&[i32; 3];             // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _63: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    let mut _64: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
    let mut _65: &&[i32];                // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
    let mut _66: &&[i32; 3];             // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
    let _68: !;                          // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
    let mut _69: core::panicking::AssertKind; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
    let mut _70: &&[i32];                // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let _71: &&[i32];                    // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let mut _72: &&[i32; 3];             // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let _73: &&[i32; 3];                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let mut _74: std::option::Option<std::fmt::Arguments<'_>>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
    let _75: ();                         // in scope 0 at ui/drop/issue-30018-nopanic.rs:92:5: 92:29
    let mut _76: &mut std::vec::Vec<i32>; // in scope 0 at ui/drop/issue-30018-nopanic.rs:92:5: 92:29
    let mut _77: &mut std::vec::Vec<i32>; // in scope 0 at ui/drop/issue-30018-nopanic.rs:92:5: 92:29
    let mut _78: &mut std::cell::RefMut<'_, std::vec::Vec<i32>>; // in scope 0 at ui/drop/issue-30018-nopanic.rs:92:5: 92:29
    let mut _79: std::cell::RefMut<'_, std::vec::Vec<i32>>; // in scope 0 at ui/drop/issue-30018-nopanic.rs:92:5: 92:21
    let mut _80: &std::cell::RefCell<std::vec::Vec<i32>>; // in scope 0 at ui/drop/issue-30018-nopanic.rs:92:5: 92:21
    let _82: &[D<'_>];                   // in scope 0 at ui/drop/issue-30018-nopanic.rs:96:19: 98:35
    let mut _83: &[D<'_>; 3];            // in scope 0 at ui/drop/issue-30018-nopanic.rs:96:19: 98:31
    let _84: [D<'_>; 3];                 // in scope 0 at ui/drop/issue-30018-nopanic.rs:96:19: 98:31
    let mut _85: D<'_>;                  // in scope 0 at ui/drop/issue-30018-nopanic.rs:96:20: 96:30
    let mut _86: &std::cell::RefCell<std::vec::Vec<i32>>; // in scope 0 at ui/drop/issue-30018-nopanic.rs:96:22: 96:25
    let mut _87: D<'_>;                  // in scope 0 at ui/drop/issue-30018-nopanic.rs:97:20: 97:30
    let mut _88: &std::cell::RefCell<std::vec::Vec<i32>>; // in scope 0 at ui/drop/issue-30018-nopanic.rs:97:22: 97:25
    let mut _89: D<'_>;                  // in scope 0 at ui/drop/issue-30018-nopanic.rs:98:20: 98:30
    let mut _90: &std::cell::RefCell<std::vec::Vec<i32>>; // in scope 0 at ui/drop/issue-30018-nopanic.rs:98:22: 98:25
    let mut _91: std::ops::RangeFull;    // in scope 0 at ui/drop/issue-30018-nopanic.rs:98:32: 98:34
    let mut _92: (&&[i32], &&[i32; 3]);  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _93: &&[i32];                // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let _94: &[i32];                     // in scope 0 at ui/drop/issue-30018-nopanic.rs:101:16: 101:33
    let _95: &[i32];                     // in scope 0 at ui/drop/issue-30018-nopanic.rs:101:17: 101:33
    let mut _96: &std::vec::Vec<i32>;    // in scope 0 at ui/drop/issue-30018-nopanic.rs:101:17: 101:29
    let _97: &std::vec::Vec<i32>;        // in scope 0 at ui/drop/issue-30018-nopanic.rs:101:17: 101:29
    let mut _98: &std::cell::Ref<'_, std::vec::Vec<i32>>; // in scope 0 at ui/drop/issue-30018-nopanic.rs:101:17: 101:29
    let _99: std::cell::Ref<'_, std::vec::Vec<i32>>; // in scope 0 at ui/drop/issue-30018-nopanic.rs:101:17: 101:29
    let mut _100: &std::cell::RefCell<std::vec::Vec<i32>>; // in scope 0 at ui/drop/issue-30018-nopanic.rs:101:17: 101:29
    let mut _101: std::ops::RangeFull;   // in scope 0 at ui/drop/issue-30018-nopanic.rs:101:30: 101:32
    let mut _102: &&[i32; 3];            // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _105: bool;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    let mut _106: bool;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
    let mut _107: &&[i32];               // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
    let mut _108: &&[i32; 3];            // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
    let _110: !;                         // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
    let mut _111: core::panicking::AssertKind; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
    let mut _112: &&[i32];               // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let _113: &&[i32];                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let mut _114: &&[i32; 3];            // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let _115: &&[i32; 3];                // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let mut _116: std::option::Option<std::fmt::Arguments<'_>>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
    let _117: ();                        // in scope 0 at ui/drop/issue-30018-nopanic.rs:102:5: 102:29
    let mut _118: &mut std::vec::Vec<i32>; // in scope 0 at ui/drop/issue-30018-nopanic.rs:102:5: 102:29
    let mut _119: &mut std::vec::Vec<i32>; // in scope 0 at ui/drop/issue-30018-nopanic.rs:102:5: 102:29
    let mut _120: &mut std::cell::RefMut<'_, std::vec::Vec<i32>>; // in scope 0 at ui/drop/issue-30018-nopanic.rs:102:5: 102:29
    let mut _121: std::cell::RefMut<'_, std::vec::Vec<i32>>; // in scope 0 at ui/drop/issue-30018-nopanic.rs:102:5: 102:21
    let mut _122: &std::cell::RefCell<std::vec::Vec<i32>>; // in scope 0 at ui/drop/issue-30018-nopanic.rs:102:5: 102:21
    scope 1 {
        debug log => _1;                 // in scope 1 at ui/drop/issue-30018-nopanic.rs:72:9: 72:12
        let _4: [D<'_>; 3];              // in scope 1 at ui/drop/issue-30018-nopanic.rs:76:13: 76:15
        let _22: &&[i32];                // in scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        let _23: &&[i32; 3];             // in scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        let _42: &[D<'_>; 3];            // in scope 1 at ui/drop/issue-30018-nopanic.rs:86:13: 86:15
        let _61: &&[i32];                // in scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        let _62: &&[i32; 3];             // in scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        let _81: &[D<'_>];               // in scope 1 at ui/drop/issue-30018-nopanic.rs:96:13: 96:15
        let _103: &&[i32];               // in scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        let _104: &&[i32; 3];            // in scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        let mut _123: &&[i32; 3];        // in scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        let mut _124: &&[i32; 3];        // in scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        let mut _125: &&[i32; 3];        // in scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        scope 2 {
            debug _r => _4;              // in scope 2 at ui/drop/issue-30018-nopanic.rs:76:13: 76:15
        }
        scope 3 {
            debug left_val => _22;       // in scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
            debug right_val => _23;      // in scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
            let _28: core::panicking::AssertKind; // in scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
            scope 4 {
                debug kind => _28;       // in scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
            }
        }
        scope 5 {
            debug _r => _42;             // in scope 5 at ui/drop/issue-30018-nopanic.rs:86:13: 86:15
        }
        scope 6 {
            debug left_val => _61;       // in scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
            debug right_val => _62;      // in scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
            let _67: core::panicking::AssertKind; // in scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
            scope 7 {
                debug kind => _67;       // in scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
            }
        }
        scope 8 {
            debug _r => _81;             // in scope 8 at ui/drop/issue-30018-nopanic.rs:96:13: 96:15
        }
        scope 9 {
            debug left_val => _103;      // in scope 9 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
            debug right_val => _104;     // in scope 9 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
            let _109: core::panicking::AssertKind; // in scope 9 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
            scope 10 {
                debug kind => _109;      // in scope 10 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
            }
        }
    }

    bb0: {
        _3 = Vec::<i32>::new() -> bb1;   // scope 0 at ui/drop/issue-30018-nopanic.rs:72:29: 72:39
                                         // mir::Constant
                                         // + span: ui/drop/issue-30018-nopanic.rs:72:29: 72:37
                                         // + user_ty: UserType(1)
                                         // + literal: Const { ty: fn() -> Vec<i32> {Vec::<i32>::new}, val: Value(<ZST>) }
    }

    bb1: {
        _2 = RefCell::<Vec<i32>>::new(move _3) -> bb2; // scope 0 at ui/drop/issue-30018-nopanic.rs:72:16: 72:40
                                         // mir::Constant
                                         // + span: ui/drop/issue-30018-nopanic.rs:72:16: 72:28
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: fn(Vec<i32>) -> RefCell<Vec<i32>> {RefCell::<Vec<i32>>::new}, val: Value(<ZST>) }
    }

    bb2: {
        _1 = &_2;                        // scope 0 at ui/drop/issue-30018-nopanic.rs:72:15: 72:40
        _6 = _1;                         // scope 1 at ui/drop/issue-30018-nopanic.rs:76:21: 76:24
        _5 = D::<'_>(move _6, const 10_i32); // scope 1 at ui/drop/issue-30018-nopanic.rs:76:19: 76:29
        _8 = _1;                         // scope 1 at ui/drop/issue-30018-nopanic.rs:77:21: 77:24
        _7 = D::<'_>(move _8, const 11_i32); // scope 1 at ui/drop/issue-30018-nopanic.rs:77:19: 77:29
        _10 = _1;                        // scope 1 at ui/drop/issue-30018-nopanic.rs:78:21: 78:24
        _9 = D::<'_>(move _10, const 12_i32); // scope 1 at ui/drop/issue-30018-nopanic.rs:78:19: 78:29
        _4 = [move _5, move _7, move _9]; // scope 1 at ui/drop/issue-30018-nopanic.rs:76:18: 78:30
        drop(_4) -> [return: bb3, unwind: bb48]; // scope 1 at ui/drop/issue-30018-nopanic.rs:80:5: 80:6
    }

    bb3: {
        _19 = _1;                        // scope 1 at ui/drop/issue-30018-nopanic.rs:81:17: 81:29
        _18 = RefCell::<Vec<i32>>::borrow(move _19) -> [return: bb4, unwind: bb48]; // scope 1 at ui/drop/issue-30018-nopanic.rs:81:17: 81:29
                                         // mir::Constant
                                         // + span: ui/drop/issue-30018-nopanic.rs:81:21: 81:27
                                         // + literal: Const { ty: for<'a> fn(&'a RefCell<Vec<i32>>) -> Ref<'a, Vec<i32>> {RefCell::<Vec<i32>>::borrow}, val: Value(<ZST>) }
    }

    bb4: {
        _17 = &_18;                      // scope 1 at ui/drop/issue-30018-nopanic.rs:81:17: 81:29
        _16 = <Ref<'_, Vec<i32>> as Deref>::deref(move _17) -> [return: bb5, unwind: bb47]; // scope 1 at ui/drop/issue-30018-nopanic.rs:81:17: 81:29
                                         // mir::Constant
                                         // + span: ui/drop/issue-30018-nopanic.rs:81:17: 81:29
                                         // + literal: Const { ty: for<'a> fn(&'a Ref<'_, Vec<i32>>) -> &'a <Ref<'_, Vec<i32>> as Deref>::Target {<Ref<'_, Vec<i32>> as Deref>::deref}, val: Value(<ZST>) }
    }

    bb5: {
        _15 = _16;                       // scope 1 at ui/drop/issue-30018-nopanic.rs:81:17: 81:29
        _14 = <Vec<i32> as Index<RangeFull>>::index(move _15, move _20) -> [return: bb6, unwind: bb47]; // scope 1 at ui/drop/issue-30018-nopanic.rs:81:17: 81:33
                                         // mir::Constant
                                         // + span: ui/drop/issue-30018-nopanic.rs:81:17: 81:33
                                         // + literal: Const { ty: for<'a> fn(&'a Vec<i32>, RangeFull) -> &'a <Vec<i32> as Index<RangeFull>>::Output {<Vec<i32> as Index<RangeFull>>::index}, val: Value(<ZST>) }
    }

    bb6: {
        _13 = _14;                       // scope 1 at ui/drop/issue-30018-nopanic.rs:81:16: 81:33
        _12 = &_13;                      // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _125 = const _;                  // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // + literal: Const { ty: &&[i32; 3], val: Unevaluated(break_after_whole, [], Some(promoted[2])) }
        _21 = _125;                      // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _11 = (move _12, move _21);      // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _22 = (_11.0: &&[i32]);          // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _23 = (_11.1: &&[i32; 3]);       // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _26 = _22;                       // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
        _27 = _23;                       // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
        _25 = <&[i32] as PartialEq<&[i32; 3]>>::eq(move _26, move _27) -> [return: bb7, unwind: bb47]; // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a &[i32], &'b &[i32; 3]) -> bool {<&[i32] as PartialEq<&[i32; 3]>>::eq}, val: Value(<ZST>) }
    }

    bb7: {
        _24 = Not(move _25);             // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
        switchInt(move _24) -> [0: bb9, otherwise: bb8]; // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    }

    bb8: {
        _28 = const core::panicking::AssertKind::Eq; // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _30 = const core::panicking::AssertKind::Eq; // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _32 = _22;                       // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _31 = _32;                       // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _34 = _23;                       // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _33 = _34;                       // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _35 = Option::<Arguments<'_>>::None; // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
        _29 = core::panicking::assert_failed::<&[i32], &[i32; 3]>(move _30, move _31, move _33, move _35) -> bb47; // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:53
                                         // + literal: Const { ty: for<'a, 'b, 'c> fn(core::panicking::AssertKind, &'a &[i32], &'b &[i32; 3], Option<Arguments<'c>>) -> ! {core::panicking::assert_failed::<&[i32], &[i32; 3]>}, val: Value(<ZST>) }
    }

    bb9: {
        drop(_18) -> [return: bb10, unwind: bb48]; // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:48:9: 48:10
    }

    bb10: {
        _41 = _1;                        // scope 1 at ui/drop/issue-30018-nopanic.rs:82:5: 82:21
        _40 = RefCell::<Vec<i32>>::borrow_mut(move _41) -> [return: bb11, unwind: bb48]; // scope 1 at ui/drop/issue-30018-nopanic.rs:82:5: 82:21
                                         // mir::Constant
                                         // + span: ui/drop/issue-30018-nopanic.rs:82:9: 82:19
                                         // + literal: Const { ty: for<'a> fn(&'a RefCell<Vec<i32>>) -> RefMut<'a, Vec<i32>> {RefCell::<Vec<i32>>::borrow_mut}, val: Value(<ZST>) }
    }

    bb11: {
        _39 = &mut _40;                  // scope 1 at ui/drop/issue-30018-nopanic.rs:82:5: 82:29
        _38 = <RefMut<'_, Vec<i32>> as DerefMut>::deref_mut(move _39) -> [return: bb12, unwind: bb46]; // scope 1 at ui/drop/issue-30018-nopanic.rs:82:5: 82:29
                                         // mir::Constant
                                         // + span: ui/drop/issue-30018-nopanic.rs:82:5: 82:29
                                         // + literal: Const { ty: for<'a> fn(&'a mut RefMut<'_, Vec<i32>>) -> &'a mut <RefMut<'_, Vec<i32>> as Deref>::Target {<RefMut<'_, Vec<i32>> as DerefMut>::deref_mut}, val: Value(<ZST>) }
    }

    bb12: {
        _37 = &mut (*_38);               // scope 1 at ui/drop/issue-30018-nopanic.rs:82:5: 82:29
        _36 = Vec::<i32>::clear(move _37) -> [return: bb13, unwind: bb46]; // scope 1 at ui/drop/issue-30018-nopanic.rs:82:5: 82:29
                                         // mir::Constant
                                         // + span: ui/drop/issue-30018-nopanic.rs:82:22: 82:27
                                         // + literal: Const { ty: for<'a> fn(&'a mut Vec<i32>) {Vec::<i32>::clear}, val: Value(<ZST>) }
    }

    bb13: {
        drop(_40) -> [return: bb14, unwind: bb48]; // scope 1 at ui/drop/issue-30018-nopanic.rs:82:29: 82:30
    }

    bb14: {
        _45 = _1;                        // scope 1 at ui/drop/issue-30018-nopanic.rs:86:22: 86:25
        _44 = D::<'_>(move _45, const 20_i32); // scope 1 at ui/drop/issue-30018-nopanic.rs:86:20: 86:30
        _47 = _1;                        // scope 1 at ui/drop/issue-30018-nopanic.rs:87:22: 87:25
        _46 = D::<'_>(move _47, const 21_i32); // scope 1 at ui/drop/issue-30018-nopanic.rs:87:20: 87:30
        _49 = _1;                        // scope 1 at ui/drop/issue-30018-nopanic.rs:88:22: 88:25
        _48 = D::<'_>(move _49, const 22_i32); // scope 1 at ui/drop/issue-30018-nopanic.rs:88:20: 88:30
        _43 = [move _44, move _46, move _48]; // scope 1 at ui/drop/issue-30018-nopanic.rs:86:19: 88:31
        _42 = &_43;                      // scope 1 at ui/drop/issue-30018-nopanic.rs:86:18: 88:31
        drop(_43) -> [return: bb15, unwind: bb48]; // scope 1 at ui/drop/issue-30018-nopanic.rs:90:5: 90:6
    }

    bb15: {
        _58 = _1;                        // scope 1 at ui/drop/issue-30018-nopanic.rs:91:17: 91:29
        _57 = RefCell::<Vec<i32>>::borrow(move _58) -> [return: bb16, unwind: bb48]; // scope 1 at ui/drop/issue-30018-nopanic.rs:91:17: 91:29
                                         // mir::Constant
                                         // + span: ui/drop/issue-30018-nopanic.rs:91:21: 91:27
                                         // + literal: Const { ty: for<'a> fn(&'a RefCell<Vec<i32>>) -> Ref<'a, Vec<i32>> {RefCell::<Vec<i32>>::borrow}, val: Value(<ZST>) }
    }

    bb16: {
        _56 = &_57;                      // scope 1 at ui/drop/issue-30018-nopanic.rs:91:17: 91:29
        _55 = <Ref<'_, Vec<i32>> as Deref>::deref(move _56) -> [return: bb17, unwind: bb45]; // scope 1 at ui/drop/issue-30018-nopanic.rs:91:17: 91:29
                                         // mir::Constant
                                         // + span: ui/drop/issue-30018-nopanic.rs:91:17: 91:29
                                         // + literal: Const { ty: for<'a> fn(&'a Ref<'_, Vec<i32>>) -> &'a <Ref<'_, Vec<i32>> as Deref>::Target {<Ref<'_, Vec<i32>> as Deref>::deref}, val: Value(<ZST>) }
    }

    bb17: {
        _54 = _55;                       // scope 1 at ui/drop/issue-30018-nopanic.rs:91:17: 91:29
        _53 = <Vec<i32> as Index<RangeFull>>::index(move _54, move _59) -> [return: bb18, unwind: bb45]; // scope 1 at ui/drop/issue-30018-nopanic.rs:91:17: 91:33
                                         // mir::Constant
                                         // + span: ui/drop/issue-30018-nopanic.rs:91:17: 91:33
                                         // + literal: Const { ty: for<'a> fn(&'a Vec<i32>, RangeFull) -> &'a <Vec<i32> as Index<RangeFull>>::Output {<Vec<i32> as Index<RangeFull>>::index}, val: Value(<ZST>) }
    }

    bb18: {
        _52 = _53;                       // scope 1 at ui/drop/issue-30018-nopanic.rs:91:16: 91:33
        _51 = &_52;                      // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _124 = const _;                  // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // + literal: Const { ty: &&[i32; 3], val: Unevaluated(break_after_whole, [], Some(promoted[1])) }
        _60 = _124;                      // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _50 = (move _51, move _60);      // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _61 = (_50.0: &&[i32]);          // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _62 = (_50.1: &&[i32; 3]);       // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _65 = _61;                       // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
        _66 = _62;                       // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
        _64 = <&[i32] as PartialEq<&[i32; 3]>>::eq(move _65, move _66) -> [return: bb19, unwind: bb45]; // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a &[i32], &'b &[i32; 3]) -> bool {<&[i32] as PartialEq<&[i32; 3]>>::eq}, val: Value(<ZST>) }
    }

    bb19: {
        _63 = Not(move _64);             // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
        switchInt(move _63) -> [0: bb21, otherwise: bb20]; // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    }

    bb20: {
        _67 = const core::panicking::AssertKind::Eq; // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _69 = const core::panicking::AssertKind::Eq; // scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _71 = _61;                       // scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _70 = _71;                       // scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _73 = _62;                       // scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _72 = _73;                       // scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _74 = Option::<Arguments<'_>>::None; // scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
        _68 = core::panicking::assert_failed::<&[i32], &[i32; 3]>(move _69, move _70, move _72, move _74) -> bb45; // scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:53
                                         // + literal: Const { ty: for<'a, 'b, 'c> fn(core::panicking::AssertKind, &'a &[i32], &'b &[i32; 3], Option<Arguments<'c>>) -> ! {core::panicking::assert_failed::<&[i32], &[i32; 3]>}, val: Value(<ZST>) }
    }

    bb21: {
        drop(_57) -> [return: bb22, unwind: bb48]; // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:48:9: 48:10
    }

    bb22: {
        _80 = _1;                        // scope 1 at ui/drop/issue-30018-nopanic.rs:92:5: 92:21
        _79 = RefCell::<Vec<i32>>::borrow_mut(move _80) -> [return: bb23, unwind: bb48]; // scope 1 at ui/drop/issue-30018-nopanic.rs:92:5: 92:21
                                         // mir::Constant
                                         // + span: ui/drop/issue-30018-nopanic.rs:92:9: 92:19
                                         // + literal: Const { ty: for<'a> fn(&'a RefCell<Vec<i32>>) -> RefMut<'a, Vec<i32>> {RefCell::<Vec<i32>>::borrow_mut}, val: Value(<ZST>) }
    }

    bb23: {
        _78 = &mut _79;                  // scope 1 at ui/drop/issue-30018-nopanic.rs:92:5: 92:29
        _77 = <RefMut<'_, Vec<i32>> as DerefMut>::deref_mut(move _78) -> [return: bb24, unwind: bb44]; // scope 1 at ui/drop/issue-30018-nopanic.rs:92:5: 92:29
                                         // mir::Constant
                                         // + span: ui/drop/issue-30018-nopanic.rs:92:5: 92:29
                                         // + literal: Const { ty: for<'a> fn(&'a mut RefMut<'_, Vec<i32>>) -> &'a mut <RefMut<'_, Vec<i32>> as Deref>::Target {<RefMut<'_, Vec<i32>> as DerefMut>::deref_mut}, val: Value(<ZST>) }
    }

    bb24: {
        _76 = &mut (*_77);               // scope 1 at ui/drop/issue-30018-nopanic.rs:92:5: 92:29
        _75 = Vec::<i32>::clear(move _76) -> [return: bb25, unwind: bb44]; // scope 1 at ui/drop/issue-30018-nopanic.rs:92:5: 92:29
                                         // mir::Constant
                                         // + span: ui/drop/issue-30018-nopanic.rs:92:22: 92:27
                                         // + literal: Const { ty: for<'a> fn(&'a mut Vec<i32>) {Vec::<i32>::clear}, val: Value(<ZST>) }
    }

    bb25: {
        drop(_79) -> [return: bb26, unwind: bb48]; // scope 1 at ui/drop/issue-30018-nopanic.rs:92:29: 92:30
    }

    bb26: {
        _86 = _1;                        // scope 1 at ui/drop/issue-30018-nopanic.rs:96:22: 96:25
        _85 = D::<'_>(move _86, const 30_i32); // scope 1 at ui/drop/issue-30018-nopanic.rs:96:20: 96:30
        _88 = _1;                        // scope 1 at ui/drop/issue-30018-nopanic.rs:97:22: 97:25
        _87 = D::<'_>(move _88, const 31_i32); // scope 1 at ui/drop/issue-30018-nopanic.rs:97:20: 97:30
        _90 = _1;                        // scope 1 at ui/drop/issue-30018-nopanic.rs:98:22: 98:25
        _89 = D::<'_>(move _90, const 32_i32); // scope 1 at ui/drop/issue-30018-nopanic.rs:98:20: 98:30
        _84 = [move _85, move _87, move _89]; // scope 1 at ui/drop/issue-30018-nopanic.rs:96:19: 98:31
        _83 = &_84;                      // scope 1 at ui/drop/issue-30018-nopanic.rs:96:19: 98:31
        _82 = <[D<'_>; 3] as Index<RangeFull>>::index(move _83, move _91) -> [return: bb27, unwind: bb43]; // scope 1 at ui/drop/issue-30018-nopanic.rs:96:19: 98:35
                                         // mir::Constant
                                         // + span: ui/drop/issue-30018-nopanic.rs:96:19: 98:35
                                         // + literal: Const { ty: for<'a> fn(&'a [D<'_>; 3], RangeFull) -> &'a <[D<'_>; 3] as Index<RangeFull>>::Output {<[D<'_>; 3] as Index<RangeFull>>::index}, val: Value(<ZST>) }
    }

    bb27: {
        _81 = _82;                       // scope 1 at ui/drop/issue-30018-nopanic.rs:96:18: 98:35
        drop(_84) -> [return: bb28, unwind: bb48]; // scope 1 at ui/drop/issue-30018-nopanic.rs:100:5: 100:6
    }

    bb28: {
        _100 = _1;                       // scope 1 at ui/drop/issue-30018-nopanic.rs:101:17: 101:29
        _99 = RefCell::<Vec<i32>>::borrow(move _100) -> [return: bb29, unwind: bb48]; // scope 1 at ui/drop/issue-30018-nopanic.rs:101:17: 101:29
                                         // mir::Constant
                                         // + span: ui/drop/issue-30018-nopanic.rs:101:21: 101:27
                                         // + literal: Const { ty: for<'a> fn(&'a RefCell<Vec<i32>>) -> Ref<'a, Vec<i32>> {RefCell::<Vec<i32>>::borrow}, val: Value(<ZST>) }
    }

    bb29: {
        _98 = &_99;                      // scope 1 at ui/drop/issue-30018-nopanic.rs:101:17: 101:29
        _97 = <Ref<'_, Vec<i32>> as Deref>::deref(move _98) -> [return: bb30, unwind: bb42]; // scope 1 at ui/drop/issue-30018-nopanic.rs:101:17: 101:29
                                         // mir::Constant
                                         // + span: ui/drop/issue-30018-nopanic.rs:101:17: 101:29
                                         // + literal: Const { ty: for<'a> fn(&'a Ref<'_, Vec<i32>>) -> &'a <Ref<'_, Vec<i32>> as Deref>::Target {<Ref<'_, Vec<i32>> as Deref>::deref}, val: Value(<ZST>) }
    }

    bb30: {
        _96 = _97;                       // scope 1 at ui/drop/issue-30018-nopanic.rs:101:17: 101:29
        _95 = <Vec<i32> as Index<RangeFull>>::index(move _96, move _101) -> [return: bb31, unwind: bb42]; // scope 1 at ui/drop/issue-30018-nopanic.rs:101:17: 101:33
                                         // mir::Constant
                                         // + span: ui/drop/issue-30018-nopanic.rs:101:17: 101:33
                                         // + literal: Const { ty: for<'a> fn(&'a Vec<i32>, RangeFull) -> &'a <Vec<i32> as Index<RangeFull>>::Output {<Vec<i32> as Index<RangeFull>>::index}, val: Value(<ZST>) }
    }

    bb31: {
        _94 = _95;                       // scope 1 at ui/drop/issue-30018-nopanic.rs:101:16: 101:33
        _93 = &_94;                      // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _123 = const _;                  // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // + literal: Const { ty: &&[i32; 3], val: Unevaluated(break_after_whole, [], Some(promoted[0])) }
        _102 = _123;                     // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _92 = (move _93, move _102);     // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _103 = (_92.0: &&[i32]);         // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _104 = (_92.1: &&[i32; 3]);      // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _107 = _103;                     // scope 9 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
        _108 = _104;                     // scope 9 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
        _106 = <&[i32] as PartialEq<&[i32; 3]>>::eq(move _107, move _108) -> [return: bb32, unwind: bb42]; // scope 9 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a &[i32], &'b &[i32; 3]) -> bool {<&[i32] as PartialEq<&[i32; 3]>>::eq}, val: Value(<ZST>) }
    }

    bb32: {
        _105 = Not(move _106);           // scope 9 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
        switchInt(move _105) -> [0: bb34, otherwise: bb33]; // scope 9 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    }

    bb33: {
        _109 = const core::panicking::AssertKind::Eq; // scope 9 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _111 = const core::panicking::AssertKind::Eq; // scope 10 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _113 = _103;                     // scope 10 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _112 = _113;                     // scope 10 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _115 = _104;                     // scope 10 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _114 = _115;                     // scope 10 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _116 = Option::<Arguments<'_>>::None; // scope 10 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
        _110 = core::panicking::assert_failed::<&[i32], &[i32; 3]>(move _111, move _112, move _114, move _116) -> bb42; // scope 10 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:53
                                         // + literal: Const { ty: for<'a, 'b, 'c> fn(core::panicking::AssertKind, &'a &[i32], &'b &[i32; 3], Option<Arguments<'c>>) -> ! {core::panicking::assert_failed::<&[i32], &[i32; 3]>}, val: Value(<ZST>) }
    }

    bb34: {
        drop(_99) -> [return: bb35, unwind: bb48]; // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:48:9: 48:10
    }

    bb35: {
        _122 = _1;                       // scope 1 at ui/drop/issue-30018-nopanic.rs:102:5: 102:21
        _121 = RefCell::<Vec<i32>>::borrow_mut(move _122) -> [return: bb36, unwind: bb48]; // scope 1 at ui/drop/issue-30018-nopanic.rs:102:5: 102:21
                                         // mir::Constant
                                         // + span: ui/drop/issue-30018-nopanic.rs:102:9: 102:19
                                         // + literal: Const { ty: for<'a> fn(&'a RefCell<Vec<i32>>) -> RefMut<'a, Vec<i32>> {RefCell::<Vec<i32>>::borrow_mut}, val: Value(<ZST>) }
    }

    bb36: {
        _120 = &mut _121;                // scope 1 at ui/drop/issue-30018-nopanic.rs:102:5: 102:29
        _119 = <RefMut<'_, Vec<i32>> as DerefMut>::deref_mut(move _120) -> [return: bb37, unwind: bb41]; // scope 1 at ui/drop/issue-30018-nopanic.rs:102:5: 102:29
                                         // mir::Constant
                                         // + span: ui/drop/issue-30018-nopanic.rs:102:5: 102:29
                                         // + literal: Const { ty: for<'a> fn(&'a mut RefMut<'_, Vec<i32>>) -> &'a mut <RefMut<'_, Vec<i32>> as Deref>::Target {<RefMut<'_, Vec<i32>> as DerefMut>::deref_mut}, val: Value(<ZST>) }
    }

    bb37: {
        _118 = &mut (*_119);             // scope 1 at ui/drop/issue-30018-nopanic.rs:102:5: 102:29
        _117 = Vec::<i32>::clear(move _118) -> [return: bb38, unwind: bb41]; // scope 1 at ui/drop/issue-30018-nopanic.rs:102:5: 102:29
                                         // mir::Constant
                                         // + span: ui/drop/issue-30018-nopanic.rs:102:22: 102:27
                                         // + literal: Const { ty: for<'a> fn(&'a mut Vec<i32>) {Vec::<i32>::clear}, val: Value(<ZST>) }
    }

    bb38: {
        drop(_121) -> [return: bb39, unwind: bb48]; // scope 1 at ui/drop/issue-30018-nopanic.rs:102:29: 102:30
    }

    bb39: {
        drop(_2) -> bb40;                // scope 0 at ui/drop/issue-30018-nopanic.rs:103:1: 103:2
    }

    bb40: {
        return;                          // scope 0 at ui/drop/issue-30018-nopanic.rs:103:2: 103:2
    }

    bb41 (cleanup): {
        drop(_121) -> bb48;              // scope 1 at ui/drop/issue-30018-nopanic.rs:102:29: 102:30
    }

    bb42 (cleanup): {
        drop(_99) -> bb48;               // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:48:9: 48:10
    }

    bb43 (cleanup): {
        drop(_84) -> bb48;               // scope 1 at ui/drop/issue-30018-nopanic.rs:100:5: 100:6
    }

    bb44 (cleanup): {
        drop(_79) -> bb48;               // scope 1 at ui/drop/issue-30018-nopanic.rs:92:29: 92:30
    }

    bb45 (cleanup): {
        drop(_57) -> bb48;               // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:48:9: 48:10
    }

    bb46 (cleanup): {
        drop(_40) -> bb48;               // scope 1 at ui/drop/issue-30018-nopanic.rs:82:29: 82:30
    }

    bb47 (cleanup): {
        drop(_18) -> bb48;               // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:48:9: 48:10
    }

    bb48 (cleanup): {
        drop(_2) -> bb49;                // scope 0 at ui/drop/issue-30018-nopanic.rs:103:1: 103:2
    }

    bb49 (cleanup): {
        resume;                          // scope 0 at ui/drop/issue-30018-nopanic.rs:71:1: 103:2
    }
}

promoted[0] in break_after_whole: &&[i32; 3] = {
    let mut _0: &&[i32; 3];              // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _1: &[i32; 3];               // in scope 0 at ui/drop/issue-30018-nopanic.rs:101:35: 101:48
    let mut _2: [i32; 3];                // in scope 0 at ui/drop/issue-30018-nopanic.rs:101:36: 101:48

    bb0: {
        _2 = [const 30_i32, const 31_i32, const 32_i32]; // scope 0 at ui/drop/issue-30018-nopanic.rs:101:36: 101:48
        _1 = &_2;                        // scope 0 at ui/drop/issue-30018-nopanic.rs:101:35: 101:48
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    }
}

promoted[1] in break_after_whole: &&[i32; 3] = {
    let mut _0: &&[i32; 3];              // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _1: &[i32; 3];               // in scope 0 at ui/drop/issue-30018-nopanic.rs:91:35: 91:48
    let mut _2: [i32; 3];                // in scope 0 at ui/drop/issue-30018-nopanic.rs:91:36: 91:48

    bb0: {
        _2 = [const 20_i32, const 21_i32, const 22_i32]; // scope 0 at ui/drop/issue-30018-nopanic.rs:91:36: 91:48
        _1 = &_2;                        // scope 0 at ui/drop/issue-30018-nopanic.rs:91:35: 91:48
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    }
}

promoted[2] in break_after_whole: &&[i32; 3] = {
    let mut _0: &&[i32; 3];              // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _1: &[i32; 3];               // in scope 0 at ui/drop/issue-30018-nopanic.rs:81:35: 81:48
    let mut _2: [i32; 3];                // in scope 0 at ui/drop/issue-30018-nopanic.rs:81:36: 81:48

    bb0: {
        _2 = [const 10_i32, const 11_i32, const 12_i32]; // scope 0 at ui/drop/issue-30018-nopanic.rs:81:36: 81:48
        _1 = &_2;                        // scope 0 at ui/drop/issue-30018-nopanic.rs:81:35: 81:48
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    }
}

fn D(_1: &RefCell<Vec<i32>>, _2: i32) -> D<'_> {
    let mut _0: D<'_>;                   // return place in scope 0 at ui/drop/issue-30018-nopanic.rs:13:1: 13:13

    bb0: {
        _0 = D::<'_>(move _1, move _2);  // scope 0 at ui/drop/issue-30018-nopanic.rs:13:1: 13:13
        return;                          // scope 0 at ui/drop/issue-30018-nopanic.rs:13:1: 13:13
    }
}

// MIR FOR CTFE
fn D(_1: &RefCell<Vec<i32>>, _2: i32) -> D<'_> {
    let mut _0: D<'_>;                   // return place in scope 0 at ui/drop/issue-30018-nopanic.rs:13:1: 13:13

    bb0: {
        _0 = D::<'_>(move _1, move _2);  // scope 0 at ui/drop/issue-30018-nopanic.rs:13:1: 13:13
        return;                          // scope 0 at ui/drop/issue-30018-nopanic.rs:13:1: 13:13
    }
}
