// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
fn main() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/lambda-infer-unresolved.rs:10:15: 10:15
    let mut _1: Refs;                    // in scope 0 at ui/lambda-infer-unresolved.rs:11:9: 11:14
    let mut _2: std::vec::Vec<isize>;    // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:44:36: 44:59
    let mut _4: &Refs;                   // in scope 0 at ui/lambda-infer-unresolved.rs:12:14: 12:36
    let _6: &[isize];                    // in scope 0 at ui/lambda-infer-unresolved.rs:13:23: 13:30
    let mut _7: &std::vec::Vec<isize>;   // in scope 0 at ui/lambda-infer-unresolved.rs:13:23: 13:30
    let _8: &std::vec::Vec<isize>;       // in scope 0 at ui/lambda-infer-unresolved.rs:13:23: 13:30
    let mut _9: (&usize, &usize);        // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _10: &usize;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let _11: usize;                      // in scope 0 at ui/lambda-infer-unresolved.rs:14:16: 14:23
    let mut _12: &[isize];               // in scope 0 at ui/lambda-infer-unresolved.rs:14:16: 14:23
    let mut _13: &usize;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _16: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    let mut _17: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
    let mut _18: usize;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
    let mut _19: usize;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
    let _21: !;                          // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
    let mut _22: core::panicking::AssertKind; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
    let mut _23: &usize;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let _24: &usize;                     // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let mut _25: &usize;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let _26: &usize;                     // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let mut _27: std::option::Option<std::fmt::Arguments<'_>>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
    scope 1 {
        debug e => _1;                   // in scope 1 at ui/lambda-infer-unresolved.rs:11:9: 11:14
        let _3: [closure@ui/lambda-infer-unresolved.rs:12:14: 12:16]; // in scope 1 at ui/lambda-infer-unresolved.rs:12:9: 12:11
        scope 2 {
            debug _f => _3;              // in scope 2 at ui/lambda-infer-unresolved.rs:12:9: 12:11
            let _5: &[isize];            // in scope 2 at ui/lambda-infer-unresolved.rs:13:9: 13:10
            scope 3 {
                debug x => _5;           // in scope 3 at ui/lambda-infer-unresolved.rs:13:9: 13:10
                let _14: &usize;         // in scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
                let _15: &usize;         // in scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
                let mut _28: &usize;     // in scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                scope 4 {
                    debug left_val => _14; // in scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
                    debug right_val => _15; // in scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
                    let _20: core::panicking::AssertKind; // in scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                    scope 5 {
                        debug kind => _20; // in scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                    }
                }
            }
        }
    }

    bb0: {
        _2 = Vec::<isize>::new() -> bb1; // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:44:36: 44:59
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:44:36: 44:57
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: fn() -> Vec<isize> {Vec::<isize>::new}, val: Value(<ZST>) }
    }

    bb1: {
        _1 = Refs { refs: move _2, n: const 0_isize }; // scope 0 at ui/lambda-infer-unresolved.rs:11:17: 11:41
        _4 = &_1;                        // scope 1 at ui/lambda-infer-unresolved.rs:12:14: 12:36
        _3 = [closure@ui/lambda-infer-unresolved.rs:12:14: 12:16] { e: move _4 }; // scope 1 at ui/lambda-infer-unresolved.rs:12:14: 12:36
                                         // closure
                                         // + def_id: DefId(0:7 ~ lambda_infer_unresolved[7e30]::main::{closure#0})
                                         // + substs: [
                                         //     i8,
                                         //     extern "rust-call" fn(()),
                                         //     (&Refs,),
                                         // ]
        _8 = &(_1.0: std::vec::Vec<isize>); // scope 2 at ui/lambda-infer-unresolved.rs:13:23: 13:30
        _7 = _8;                         // scope 2 at ui/lambda-infer-unresolved.rs:13:23: 13:30
        _6 = <Vec<isize> as Deref>::deref(move _7) -> [return: bb2, unwind: bb7]; // scope 2 at ui/lambda-infer-unresolved.rs:13:23: 13:30
                                         // mir::Constant
                                         // + span: ui/lambda-infer-unresolved.rs:13:23: 13:30
                                         // + literal: Const { ty: for<'a> fn(&'a Vec<isize>) -> &'a <Vec<isize> as Deref>::Target {<Vec<isize> as Deref>::deref}, val: Value(<ZST>) }
    }

    bb2: {
        _5 = _6;                         // scope 2 at ui/lambda-infer-unresolved.rs:13:23: 13:30
        _12 = _5;                        // scope 3 at ui/lambda-infer-unresolved.rs:14:16: 14:23
        _11 = core::slice::<impl [isize]>::len(move _12) -> [return: bb3, unwind: bb7]; // scope 3 at ui/lambda-infer-unresolved.rs:14:16: 14:23
                                         // mir::Constant
                                         // + span: ui/lambda-infer-unresolved.rs:14:18: 14:21
                                         // + literal: Const { ty: for<'a> fn(&'a [isize]) -> usize {core::slice::<impl [isize]>::len}, val: Value(<ZST>) }
    }

    bb3: {
        _10 = &_11;                      // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _28 = const _;                   // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // + literal: Const { ty: &usize, val: Unevaluated(main, [], Some(promoted[0])) }
        _13 = _28;                       // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _9 = (move _10, move _13);       // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _14 = (_9.0: &usize);            // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _15 = (_9.1: &usize);            // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _18 = (*_14);                    // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
        _19 = const 0_usize;             // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
        _17 = Eq(move _18, move _19);    // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
        _16 = Not(move _17);             // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
        switchInt(move _16) -> [0: bb5, otherwise: bb4]; // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    }

    bb4: {
        _20 = const core::panicking::AssertKind::Eq; // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _22 = const core::panicking::AssertKind::Eq; // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _24 = _14;                       // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _23 = _24;                       // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _26 = _15;                       // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _25 = _26;                       // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _27 = Option::<Arguments<'_>>::None; // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
        _21 = core::panicking::assert_failed::<usize, usize>(move _22, move _23, move _25, move _27) -> bb7; // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:53
                                         // + literal: Const { ty: for<'a, 'b, 'c> fn(core::panicking::AssertKind, &'a usize, &'b usize, Option<Arguments<'c>>) -> ! {core::panicking::assert_failed::<usize, usize>}, val: Value(<ZST>) }
    }

    bb5: {
        drop(_1) -> bb6;                 // scope 0 at ui/lambda-infer-unresolved.rs:15:1: 15:2
    }

    bb6: {
        return;                          // scope 0 at ui/lambda-infer-unresolved.rs:15:2: 15:2
    }

    bb7 (cleanup): {
        drop(_1) -> bb8;                 // scope 0 at ui/lambda-infer-unresolved.rs:15:1: 15:2
    }

    bb8 (cleanup): {
        resume;                          // scope 0 at ui/lambda-infer-unresolved.rs:10:1: 15:2
    }
}

promoted[0] in main: &usize = {
    let mut _0: &usize;                  // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _1: usize;                   // in scope 0 at ui/lambda-infer-unresolved.rs:14:25: 14:26

    bb0: {
        _1 = const 0_usize;              // scope 0 at ui/lambda-infer-unresolved.rs:14:25: 14:26
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    }
}

fn main::{closure#0}(_1: &[closure@ui/lambda-infer-unresolved.rs:12:14: 12:16]) -> () {
    debug e => (*((*_1).0: &Refs));      // in scope 0 at ui/lambda-infer-unresolved.rs:11:9: 11:14
    let mut _0: ();                      // return place in scope 0 at ui/lambda-infer-unresolved.rs:12:17: 12:17
    let _2: ();                          // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:62
    let mut _3: std::fmt::Arguments<'_>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _4: &[&str];                 // in scope 0 at ui/lambda-infer-unresolved.rs:12:26: 12:30
    let mut _5: &[&str; 2];              // in scope 0 at ui/lambda-infer-unresolved.rs:12:26: 12:30
    let _6: &[&str; 2];                  // in scope 0 at ui/lambda-infer-unresolved.rs:12:26: 12:30
    let mut _7: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _8: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let _9: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let _10: [core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _11: core::fmt::ArgumentV1<'_>; // in scope 0 at ui/lambda-infer-unresolved.rs:12:32: 12:35
    let mut _12: &isize;                 // in scope 0 at ui/lambda-infer-unresolved.rs:12:32: 12:35
    let _13: &isize;                     // in scope 0 at ui/lambda-infer-unresolved.rs:12:32: 12:35
    let mut _14: &[&str; 2];             // in scope 0 at ui/lambda-infer-unresolved.rs:12:26: 12:30
    let mut _15: &Refs;                  // in scope 0 at ui/lambda-infer-unresolved.rs:12:14: 12:36

    bb0: {
        _14 = const _;                   // scope 0 at ui/lambda-infer-unresolved.rs:12:26: 12:30
                                         // mir::Constant
                                         // + span: ui/lambda-infer-unresolved.rs:12:26: 12:30
                                         // + literal: Const { ty: &[&str; 2], val: Unevaluated(main::{closure#0}, [<closure_kind>, <closure_signature>, <upvars>], Some(promoted[0])) }
        _6 = _14;                        // scope 0 at ui/lambda-infer-unresolved.rs:12:26: 12:30
        _5 = _6;                         // scope 0 at ui/lambda-infer-unresolved.rs:12:26: 12:30
        _4 = move _5 as &[&str] (Pointer(Unsize)); // scope 0 at ui/lambda-infer-unresolved.rs:12:26: 12:30
        _15 = deref_copy ((*_1).0: &Refs); // scope 0 at ui/lambda-infer-unresolved.rs:12:32: 12:35
        _13 = &((*_15).1: isize);        // scope 0 at ui/lambda-infer-unresolved.rs:12:32: 12:35
        _12 = _13;                       // scope 0 at ui/lambda-infer-unresolved.rs:12:32: 12:35
        _11 = core::fmt::ArgumentV1::<'_>::new_display::<isize>(move _12) -> bb1; // scope 0 at ui/lambda-infer-unresolved.rs:12:32: 12:35
                                         // mir::Constant
                                         // + span: ui/lambda-infer-unresolved.rs:12:32: 12:35
                                         // + user_ty: UserType(1)
                                         // + literal: Const { ty: for<'b> fn(&'b isize) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_display::<isize>}, val: Value(<ZST>) }
    }

    bb1: {
        _10 = [move _11];                // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _9 = &_10;                       // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _8 = _9;                         // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _7 = move _8 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _3 = Arguments::<'_>::new_v1(move _4, move _7) -> bb2; // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb2: {
        _2 = _print(move _3) -> bb3;     // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:62
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:27
                                         // + literal: Const { ty: for<'a> fn(Arguments<'a>) {_print}, val: Value(<ZST>) }
    }

    bb3: {
        return;                          // scope 0 at ui/lambda-infer-unresolved.rs:12:36: 12:36
    }
}

promoted[0] in main::{closure#0}: &[&str; 2] = {
    let mut _0: &[&str; 2];              // return place in scope 0 at ui/lambda-infer-unresolved.rs:12:26: 12:30
    let mut _1: [&str; 2];               // in scope 0 at ui/lambda-infer-unresolved.rs:12:26: 12:30

    bb0: {
        _1 = [const "", const "\n"];     // scope 0 at ui/lambda-infer-unresolved.rs:12:26: 12:30
                                         // mir::Constant
                                         // + span: ui/lambda-infer-unresolved.rs:12:26: 12:30
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
                                         // mir::Constant
                                         // + span: ui/lambda-infer-unresolved.rs:12:26: 12:30
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at ui/lambda-infer-unresolved.rs:12:26: 12:30
        return;                          // scope 0 at ui/lambda-infer-unresolved.rs:12:26: 12:30
    }
}
