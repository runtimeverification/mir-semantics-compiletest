// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
S::{constant#0}: usize = {
    let mut _0: usize;                   // return place in scope 0 at ui/rfcs/issue-99876.rs:7:9: 7:21
    let mut _1: ([closure@ui/rfcs/issue-99876.rs:7:10: 7:12], usize); // in scope 0 at ui/rfcs/issue-99876.rs:7:9: 7:19
    let mut _2: [closure@ui/rfcs/issue-99876.rs:7:10: 7:12]; // in scope 0 at ui/rfcs/issue-99876.rs:7:10: 7:15

    bb0: {
        StorageLive(_1);                 // scope 0 at ui/rfcs/issue-99876.rs:7:9: 7:19
        StorageLive(_2);                 // scope 0 at ui/rfcs/issue-99876.rs:7:10: 7:15
        _2 = [closure@ui/rfcs/issue-99876.rs:7:10: 7:12]; // scope 0 at ui/rfcs/issue-99876.rs:7:10: 7:15
                                         // closure
                                         // + def_id: DefId(0:7 ~ issue_99876[539d]::S::{constant#0}::{closure#0})
                                         // + substs: [
                                         //     i8,
                                         //     extern "rust-call" fn(()),
                                         //     (),
                                         // ]
        _1 = (move _2, const 1_usize);   // scope 0 at ui/rfcs/issue-99876.rs:7:9: 7:19
        StorageDead(_2);                 // scope 0 at ui/rfcs/issue-99876.rs:7:18: 7:19
        _0 = (_1.1: usize);              // scope 0 at ui/rfcs/issue-99876.rs:7:9: 7:21
        StorageDead(_1);                 // scope 0 at ui/rfcs/issue-99876.rs:7:20: 7:21
        return;                          // scope 0 at ui/rfcs/issue-99876.rs:7:9: 7:21
    }
}

fn S::{constant#0}::{closure#0}(_1: &[closure@ui/rfcs/issue-99876.rs:7:10: 7:12]) -> () {
    let mut _0: ();                      // return place in scope 0 at ui/rfcs/issue-99876.rs:7:13: 7:13

    bb0: {
        return;                          // scope 0 at ui/rfcs/issue-99876.rs:7:15: 7:15
    }
}

fn main() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/rfcs/issue-99876.rs:9:11: 9:11

    bb0: {
        return;                          // scope 0 at ui/rfcs/issue-99876.rs:9:13: 9:13
    }
}

fn S(_1: T) -> S<T> {
    let mut _0: S<T>;                    // return place in scope 0 at ui/rfcs/issue-99876.rs:5:1: 5:12

    bb0: {
        _0 = S::<T>(move _1);            // scope 0 at ui/rfcs/issue-99876.rs:5:1: 5:12
        return;                          // scope 0 at ui/rfcs/issue-99876.rs:5:1: 5:12
    }
}

// MIR FOR CTFE
fn S(_1: T) -> S<T> {
    let mut _0: S<T>;                    // return place in scope 0 at ui/rfcs/issue-99876.rs:5:1: 5:12

    bb0: {
        _0 = S::<T>(move _1);            // scope 0 at ui/rfcs/issue-99876.rs:5:1: 5:12
        return;                          // scope 0 at ui/rfcs/issue-99876.rs:5:1: 5:12
    }
}
