// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
fn some_or_wildcard(_1: &Option<i32>, _2: &i32) -> () {
    debug r => _1;                       // in scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:3:21: 3:22
    debug b => _2;                       // in scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:3:38: 3:39
    let mut _0: ();                      // return place in scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:3:47: 3:47
    let mut _3: isize;                   // in scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:5:9: 5:16
    let _4: &i32;                        // in scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:5:14: 5:15
    scope 1 {
    }
    scope 2 {
        debug a => _4;                   // in scope 2 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:5:14: 5:15
    }

    bb0: {
        _3 = discriminant((*_1));        // scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:4:25: 4:26
        switchInt(move _3) -> [1: bb1, otherwise: bb2]; // scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:4:19: 4:26
    }

    bb1: {
        _4 = &(((*_1) as Some).0: i32);  // scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:5:14: 5:15
        goto -> bb2;                     // scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:5:20: 5:21
    }

    bb2: {
        return;                          // scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:8:2: 8:2
    }
}

fn none_or_wildcard(_1: &Option<i32>, _2: &i32) -> () {
    debug r => _1;                       // in scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:10:21: 10:22
    debug b => _2;                       // in scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:10:38: 10:39
    let mut _0: ();                      // return place in scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:10:47: 10:47
    scope 1 {
    }

    bb0: {
        return;                          // scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:15:2: 15:2
    }
}

fn some_or_ref_none(_1: &Option<i32>, _2: &i32) -> () {
    debug r => _1;                       // in scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:17:21: 17:22
    debug b => _2;                       // in scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:17:38: 17:39
    let mut _0: ();                      // return place in scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:17:47: 17:47
    let mut _3: isize;                   // in scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:19:9: 19:16
    let _4: &i32;                        // in scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:19:14: 19:15
    scope 1 {
    }
    scope 2 {
        debug a => _4;                   // in scope 2 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:19:14: 19:15
    }

    bb0: {
        _3 = discriminant((*_1));        // scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:18:25: 18:26
        switchInt(move _3) -> [0: bb3, 1: bb2, otherwise: bb1]; // scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:18:19: 18:26
    }

    bb1: {
        unreachable;                     // scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:18:25: 18:26
    }

    bb2: {
        _4 = &(((*_1) as Some).0: i32);  // scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:19:14: 19:15
        goto -> bb3;                     // scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:19:20: 19:21
    }

    bb3: {
        return;                          // scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:22:2: 22:2
    }
}

fn ref_some_or_none(_1: &Option<i32>, _2: &i32) -> () {
    debug r => _1;                       // in scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:24:21: 24:22
    debug b => _2;                       // in scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:24:38: 24:39
    let mut _0: ();                      // return place in scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:24:47: 24:47
    let mut _3: isize;                   // in scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:26:10: 26:21
    let _4: &i32;                        // in scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:26:15: 26:20
    scope 1 {
    }
    scope 2 {
        debug a => _4;                   // in scope 2 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:26:15: 26:20
    }

    bb0: {
        _3 = discriminant((*_1));        // scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:25:25: 25:26
        switchInt(move _3) -> [0: bb3, 1: bb2, otherwise: bb1]; // scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:25:19: 25:26
    }

    bb1: {
        unreachable;                     // scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:25:25: 25:26
    }

    bb2: {
        _4 = &(((*_1) as Some).0: i32);  // scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:26:15: 26:20
        goto -> bb3;                     // scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:26:25: 26:26
    }

    bb3: {
        return;                          // scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:29:2: 29:2
    }
}

fn some_or_self(_1: &Option<i32>) -> () {
    debug r => _1;                       // in scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:31:17: 31:18
    let mut _0: ();                      // return place in scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:31:34: 31:34
    let mut _2: isize;                   // in scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:33:9: 33:16
    let _3: &i32;                        // in scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:33:14: 33:15
    let _4: &std::option::Option<i32>;   // in scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:37:9: 37:10
    scope 1 {
    }
    scope 2 {
        debug n => _3;                   // in scope 2 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:33:14: 33:15
        scope 3 {
        }
    }
    scope 4 {
        debug x => _4;                   // in scope 4 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:37:9: 37:10
    }

    bb0: {
        _2 = discriminant((*_1));        // scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:32:33: 32:34
        switchInt(move _2) -> [1: bb2, otherwise: bb1]; // scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:32:27: 32:34
    }

    bb1: {
        _4 = _1;                         // scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:37:9: 37:10
        goto -> bb3;                     // scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:37:14: 37:15
    }

    bb2: {
        _3 = &(((*_1) as Some).0: i32);  // scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:33:14: 33:15
        goto -> bb3;                     // scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:36:9: 36:10
    }

    bb3: {
        return;                          // scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:39:2: 39:2
    }
}

fn multiple_deref(_1: &&&&&Option<i32>) -> () {
    debug r => _1;                       // in scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:41:19: 41:20
    let mut _0: ();                      // return place in scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:41:40: 41:40
    let mut _2: isize;                   // in scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:43:9: 43:16
    let _3: &i32;                        // in scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:43:14: 43:15
    let mut _4: &&&&std::option::Option<i32>; // in scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:41:19: 41:20
    let mut _5: &&&std::option::Option<i32>; // in scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:41:19: 41:20
    let mut _6: &&std::option::Option<i32>; // in scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:41:19: 41:20
    let mut _7: &std::option::Option<i32>; // in scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:41:19: 41:20
    let mut _8: &&&&std::option::Option<i32>; // in scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:41:19: 41:20
    let mut _9: &&&std::option::Option<i32>; // in scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:41:19: 41:20
    let mut _10: &&std::option::Option<i32>; // in scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:41:19: 41:20
    let mut _11: &std::option::Option<i32>; // in scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:41:19: 41:20
    scope 1 {
    }
    scope 2 {
        debug a => _3;                   // in scope 2 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:43:14: 43:15
    }

    bb0: {
        _4 = deref_copy (*_1);           // scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:42:24: 42:25
        _5 = deref_copy (*_4);           // scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:42:24: 42:25
        _6 = deref_copy (*_5);           // scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:42:24: 42:25
        _7 = deref_copy (*_6);           // scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:42:24: 42:25
        _2 = discriminant((*_7));        // scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:42:24: 42:25
        switchInt(move _2) -> [0: bb3, 1: bb2, otherwise: bb1]; // scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:42:18: 42:25
    }

    bb1: {
        unreachable;                     // scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:42:24: 42:25
    }

    bb2: {
        _8 = deref_copy (*_1);           // scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:43:14: 43:15
        _9 = deref_copy (*_8);           // scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:43:14: 43:15
        _10 = deref_copy (*_9);          // scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:43:14: 43:15
        _11 = deref_copy (*_10);         // scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:43:14: 43:15
        _3 = &(((*_11) as Some).0: i32); // scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:43:14: 43:15
        goto -> bb3;                     // scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:43:21: 43:22
    }

    bb3: {
        return;                          // scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:46:2: 46:2
    }
}

fn match_with_or() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:48:20: 48:20

    bb0: {
        return;                          // scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:56:2: 56:2
    }
}

fn nested_mixed() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:58:19: 58:19
    let mut _1: (&std::option::Option<i32>, &std::option::Option<i32>); // in scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:59:11: 59:31
    let mut _2: &std::option::Option<i32>; // in scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:59:12: 59:20
    let mut _3: &std::option::Option<i32>; // in scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:59:22: 59:30
    let _4: &i32;                        // in scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:60:15: 60:16
    let mut _5: i32;                     // in scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:60:25: 60:30
    let mut _6: &std::option::Option<i32>; // in scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:59:22: 59:30
    let mut _7: &std::option::Option<i32>; // in scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:59:12: 59:20
    let mut _8: &std::option::Option<i32>; // in scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:59:11: 59:31
    scope 1 {
        debug a => _4;                   // in scope 1 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:60:15: 60:16
        debug b => _5;                   // in scope 1 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:60:25: 60:30
        scope 2 {
            scope 3 {
            }
        }
    }

    bb0: {
        _7 = const _;                    // scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:59:12: 59:20
                                         // mir::Constant
                                         // + span: ui/rfcs/rfc-2005-default-binding-mode/general.rs:59:12: 59:20
                                         // + literal: Const { ty: &Option<i32>, val: Unevaluated(nested_mixed, [], Some(promoted[1])) }
        _2 = _7;                         // scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:59:12: 59:20
        _6 = const _;                    // scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:59:22: 59:30
                                         // mir::Constant
                                         // + span: ui/rfcs/rfc-2005-default-binding-mode/general.rs:59:22: 59:30
                                         // + literal: Const { ty: &Option<i32>, val: Unevaluated(nested_mixed, [], Some(promoted[0])) }
        _3 = _6;                         // scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:59:22: 59:30
        _1 = (move _2, move _3);         // scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:59:11: 59:31
        _8 = deref_copy (_1.0: &std::option::Option<i32>); // scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:60:15: 60:16
        _4 = &(((*_8) as Some).0: i32);  // scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:60:15: 60:16
        _5 = const 6_i32;                // scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:60:25: 60:30
        _5 = const 7_i32;                // scope 2 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:68:13: 68:18
        return;                          // scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:73:2: 73:2
    }
}

promoted[0] in nested_mixed: &Option<i32> = {
    let mut _0: &std::option::Option<i32>; // return place in scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:59:22: 59:30
    let mut _1: std::option::Option<i32>; // in scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:59:23: 59:30

    bb0: {
        _1 = Option::<i32>::Some(const 6_i32); // scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:59:23: 59:30
        _0 = &_1;                        // scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:59:22: 59:30
        return;                          // scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:59:22: 59:30
    }
}

promoted[1] in nested_mixed: &Option<i32> = {
    let mut _0: &std::option::Option<i32>; // return place in scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:59:12: 59:20
    let mut _1: std::option::Option<i32>; // in scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:59:13: 59:20

    bb0: {
        _1 = Option::<i32>::Some(const 5_i32); // scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:59:13: 59:20
        _0 = &_1;                        // scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:59:12: 59:20
        return;                          // scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:59:12: 59:20
    }
}

fn nested_mixed_multiple_deref_1() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:75:36: 75:36
    let _1: (i32, &std::option::Option<i32>); // in scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:76:9: 76:10
    let mut _2: &std::option::Option<i32>; // in scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:76:17: 76:25
    let _4: std::option::Option<(i32, &std::option::Option<i32>)>; // in scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:77:14: 77:21
    let mut _5: (i32, &std::option::Option<i32>); // in scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:77:19: 77:20
    let mut _6: isize;                   // in scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:79:18: 79:25
    let mut _7: isize;                   // in scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:79:9: 79:27
    let mut _10: &std::option::Option<i32>; // in scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:76:17: 76:25
    let mut _11: &std::option::Option<i32>; // in scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:77:9: 77:10
    let mut _12: &std::option::Option<i32>; // in scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:77:9: 77:10
    scope 1 {
        debug x => _1;                   // in scope 1 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:76:9: 76:10
        let _3: &std::option::Option<(i32, &std::option::Option<i32>)>; // in scope 1 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:77:9: 77:10
        scope 2 {
            debug y => _3;               // in scope 2 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:77:9: 77:10
            let _8: &i32;                // in scope 2 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:79:15: 79:16
            let _9: &i32;                // in scope 2 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:79:23: 79:24
            scope 3 {
                debug a => _8;           // in scope 3 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:79:15: 79:16
                debug b => _9;           // in scope 3 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:79:23: 79:24
                scope 4 {
                    scope 5 {
                    }
                }
            }
        }
    }

    bb0: {
        _10 = const _;                   // scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:76:17: 76:25
                                         // mir::Constant
                                         // + span: ui/rfcs/rfc-2005-default-binding-mode/general.rs:76:17: 76:25
                                         // + literal: Const { ty: &Option<i32>, val: Unevaluated(nested_mixed_multiple_deref_1, [], Some(promoted[0])) }
        _2 = _10;                        // scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:76:17: 76:25
        _1 = (const 1_i32, move _2);     // scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:76:13: 76:26
        _5 = _1;                         // scope 1 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:77:19: 77:20
        _4 = Option::<(i32, &Option<i32>)>::Some(move _5); // scope 1 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:77:14: 77:21
        _3 = &_4;                        // scope 1 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:77:13: 77:21
        _7 = discriminant((*_3));        // scope 2 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:78:11: 78:12
        switchInt(move _7) -> [1: bb1, otherwise: bb3]; // scope 2 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:78:5: 78:12
    }

    bb1: {
        _11 = deref_copy ((((*_3) as Some).0: (i32, &std::option::Option<i32>)).1: &std::option::Option<i32>); // scope 2 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:78:11: 78:12
        _6 = discriminant((*_11));       // scope 2 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:78:11: 78:12
        switchInt(move _6) -> [1: bb2, otherwise: bb3]; // scope 2 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:78:5: 78:12
    }

    bb2: {
        _8 = &((((*_3) as Some).0: (i32, &std::option::Option<i32>)).0: i32); // scope 2 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:79:15: 79:16
        _12 = deref_copy ((((*_3) as Some).0: (i32, &std::option::Option<i32>)).1: &std::option::Option<i32>); // scope 2 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:79:23: 79:24
        _9 = &(((*_12) as Some).0: i32); // scope 2 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:79:23: 79:24
        goto -> bb3;                     // scope 2 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:82:9: 82:10
    }

    bb3: {
        return;                          // scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:85:2: 85:2
    }
}

promoted[0] in nested_mixed_multiple_deref_1: &Option<i32> = {
    let mut _0: &std::option::Option<i32>; // return place in scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:76:17: 76:25
    let mut _1: std::option::Option<i32>; // in scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:76:18: 76:25

    bb0: {
        _1 = Option::<i32>::Some(const 5_i32); // scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:76:18: 76:25
        _0 = &_1;                        // scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:76:17: 76:25
        return;                          // scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:76:17: 76:25
    }
}

fn nested_mixed_multiple_deref_2() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:87:36: 87:36
    let _1: &std::option::Option<i32>;   // in scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:88:9: 88:10
    let mut _3: isize;                   // in scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:91:9: 91:16
    let mut _5: &std::option::Option<i32>; // in scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:88:13: 88:21
    let mut _6: &std::option::Option<i32>; // in scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:89:9: 89:10
    let mut _7: &std::option::Option<i32>; // in scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:89:9: 89:10
    scope 1 {
        debug x => _1;                   // in scope 1 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:88:9: 88:10
        let _2: &&std::option::Option<i32>; // in scope 1 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:89:9: 89:10
        scope 2 {
            debug y => _2;               // in scope 2 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:89:9: 89:10
            let _4: &i32;                // in scope 2 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:91:14: 91:15
            scope 3 {
                debug z => _4;           // in scope 3 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:91:14: 91:15
                scope 4 {
                }
            }
        }
    }

    bb0: {
        _5 = const _;                    // scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:88:13: 88:21
                                         // mir::Constant
                                         // + span: ui/rfcs/rfc-2005-default-binding-mode/general.rs:88:13: 88:21
                                         // + literal: Const { ty: &Option<i32>, val: Unevaluated(nested_mixed_multiple_deref_2, [], Some(promoted[0])) }
        _1 = _5;                         // scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:88:13: 88:21
        _2 = &_1;                        // scope 1 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:89:13: 89:15
        _6 = deref_copy (*_2);           // scope 2 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:90:11: 90:12
        _3 = discriminant((*_6));        // scope 2 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:90:11: 90:12
        switchInt(move _3) -> [1: bb1, otherwise: bb2]; // scope 2 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:90:5: 90:12
    }

    bb1: {
        _7 = deref_copy (*_2);           // scope 2 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:91:14: 91:15
        _4 = &(((*_7) as Some).0: i32);  // scope 2 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:91:14: 91:15
        goto -> bb2;                     // scope 2 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:93:9: 93:10
    }

    bb2: {
        return;                          // scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:96:2: 96:2
    }
}

promoted[0] in nested_mixed_multiple_deref_2: &Option<i32> = {
    let mut _0: &std::option::Option<i32>; // return place in scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:88:13: 88:21
    let mut _1: std::option::Option<i32>; // in scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:88:14: 88:21

    bb0: {
        _1 = Option::<i32>::Some(const 5_i32); // scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:88:14: 88:21
        _0 = &_1;                        // scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:88:13: 88:21
        return;                          // scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:88:13: 88:21
    }
}

fn new_mutable_reference() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:98:28: 98:28
    let mut _1: &mut std::option::Option<i32>; // in scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:99:9: 99:14
    let mut _2: std::option::Option<i32>; // in scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:99:22: 99:29
    let mut _3: &mut &mut std::option::Option<i32>; // in scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:100:11: 100:17
    let mut _4: isize;                   // in scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:101:9: 101:16
    let mut _6: &mut &mut std::option::Option<i32>; // in scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:107:11: 107:17
    let mut _7: isize;                   // in scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:108:9: 108:16
    let _9: ();                          // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:62
    let mut _10: std::fmt::Arguments<'_>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _11: &[&str];                // in scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:109:22: 109:26
    let mut _12: &[&str; 2];             // in scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:109:22: 109:26
    let _13: &[&str; 2];                 // in scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:109:22: 109:26
    let mut _14: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _15: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let _16: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let _17: [core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _18: core::fmt::ArgumentV1<'_>; // in scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:109:28: 109:30
    let mut _19: &i32;                   // in scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:109:28: 109:30
    let _20: &i32;                       // in scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:109:28: 109:30
    let mut _22: &mut std::option::Option<i32>; // in scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:100:11: 100:17
    let mut _23: &mut std::option::Option<i32>; // in scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:100:11: 100:17
    let mut _24: &mut std::option::Option<i32>; // in scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:107:11: 107:17
    let mut _25: &mut std::option::Option<i32>; // in scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:107:11: 107:17
    scope 1 {
        debug x => _1;                   // in scope 1 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:99:9: 99:14
        let _5: &mut i32;                // in scope 1 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:101:14: 101:15
        let _8: &mut i32;                // in scope 1 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:108:14: 108:15
        scope 2 {
            debug y => _5;               // in scope 2 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:101:14: 101:15
        }
        scope 3 {
            debug y => _8;               // in scope 3 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:108:14: 108:15
            let mut _21: &[&str; 2];     // in scope 3 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:109:22: 109:26
        }
    }

    bb0: {
        _2 = Option::<i32>::Some(const 5_i32); // scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:99:22: 99:29
        _1 = &mut _2;                    // scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:99:17: 99:29
        _3 = &mut _1;                    // scope 1 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:100:11: 100:17
        _22 = deref_copy (*_3);          // scope 1 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:100:11: 100:17
        _4 = discriminant((*_22));       // scope 1 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:100:11: 100:17
        switchInt(move _4) -> [0: bb3, 1: bb2, otherwise: bb1]; // scope 1 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:100:5: 100:17
    }

    bb1: {
        unreachable;                     // scope 1 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:100:11: 100:17
    }

    bb2: {
        _23 = deref_copy (*_3);          // scope 1 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:101:14: 101:15
        _5 = &mut (((*_23) as Some).0: i32); // scope 1 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:101:14: 101:15
        (*_5) = const 5_i32;             // scope 2 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:102:13: 102:19
        goto -> bb3;                     // scope 1 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:103:9: 103:10
    }

    bb3: {
        _6 = &mut _1;                    // scope 1 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:107:11: 107:17
        _24 = deref_copy (*_6);          // scope 1 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:107:11: 107:17
        _7 = discriminant((*_24));       // scope 1 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:107:11: 107:17
        switchInt(move _7) -> [0: bb8, 1: bb5, otherwise: bb4]; // scope 1 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:107:5: 107:17
    }

    bb4: {
        unreachable;                     // scope 1 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:107:11: 107:17
    }

    bb5: {
        _25 = deref_copy (*_6);          // scope 1 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:108:14: 108:15
        _8 = &mut (((*_25) as Some).0: i32); // scope 1 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:108:14: 108:15
        _21 = const _;                   // scope 3 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:109:22: 109:26
                                         // mir::Constant
                                         // + span: ui/rfcs/rfc-2005-default-binding-mode/general.rs:109:22: 109:26
                                         // + literal: Const { ty: &[&str; 2], val: Unevaluated(new_mutable_reference, [], Some(promoted[0])) }
        _13 = _21;                       // scope 3 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:109:22: 109:26
        _12 = _13;                       // scope 3 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:109:22: 109:26
        _11 = move _12 as &[&str] (Pointer(Unsize)); // scope 3 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:109:22: 109:26
        _20 = &(*_8);                    // scope 3 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:109:28: 109:30
        _19 = _20;                       // scope 3 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:109:28: 109:30
        _18 = core::fmt::ArgumentV1::<'_>::new_display::<i32>(move _19) -> bb6; // scope 3 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:109:28: 109:30
                                         // mir::Constant
                                         // + span: ui/rfcs/rfc-2005-default-binding-mode/general.rs:109:28: 109:30
                                         // + user_ty: UserType(1)
                                         // + literal: Const { ty: for<'b> fn(&'b i32) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_display::<i32>}, val: Value(<ZST>) }
    }

    bb6: {
        _17 = [move _18];                // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _16 = &_17;                      // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _15 = _16;                       // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _14 = move _15 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _10 = Arguments::<'_>::new_v1(move _11, move _14) -> bb7; // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb7: {
        _9 = _print(move _10) -> bb8;    // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:62
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:27
                                         // + literal: Const { ty: for<'a> fn(Arguments<'a>) {_print}, val: Value(<ZST>) }
    }

    bb8: {
        return;                          // scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:113:2: 113:2
    }
}

promoted[0] in new_mutable_reference: &[&str; 2] = {
    let mut _0: &[&str; 2];              // return place in scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:109:22: 109:26
    let mut _1: [&str; 2];               // in scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:109:22: 109:26

    bb0: {
        _1 = [const "", const "\n"];     // scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:109:22: 109:26
                                         // mir::Constant
                                         // + span: ui/rfcs/rfc-2005-default-binding-mode/general.rs:109:22: 109:26
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
                                         // mir::Constant
                                         // + span: ui/rfcs/rfc-2005-default-binding-mode/general.rs:109:22: 109:26
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:109:22: 109:26
        return;                          // scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:109:22: 109:26
    }
}

fn let_implicit_ref_binding() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:115:31: 115:31
    let _1: &i32;                        // in scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:121:13: 121:14
    let mut _2: &let_implicit_ref_binding::Foo; // in scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:121:18: 121:25
    let mut _3: &let_implicit_ref_binding::Foo; // in scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:121:18: 121:25
    scope 1 {
        debug x => _1;                   // in scope 1 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:121:13: 121:14
        scope 2 {
        }
    }

    bb0: {
        _3 = const _;                    // scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:121:18: 121:25
                                         // mir::Constant
                                         // + span: ui/rfcs/rfc-2005-default-binding-mode/general.rs:121:18: 121:25
                                         // + literal: Const { ty: &Foo, val: Unevaluated(let_implicit_ref_binding, [], Some(promoted[0])) }
        _2 = _3;                         // scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:121:18: 121:25
        _1 = &((*_2).0: i32);            // scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:121:13: 121:14
        return;                          // scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:123:2: 123:2
    }
}

promoted[0] in let_implicit_ref_binding: &Foo = {
    let mut _0: &let_implicit_ref_binding::Foo; // return place in scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:121:18: 121:25
    let mut _1: let_implicit_ref_binding::Foo; // in scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:121:19: 121:25

    bb0: {
        _1 = Foo(const 3_i32);           // scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:121:19: 121:25
        _0 = &_1;                        // scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:121:18: 121:25
        return;                          // scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:121:18: 121:25
    }
}

fn explicit_mut_binding() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:125:27: 125:27
    let mut _1: i32;                     // in scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:127:14: 127:19
    let mut _2: &mut std::option::Option<i32>; // in scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:134:11: 134:26
    let mut _3: std::option::Option<i32>; // in scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:134:16: 134:26
    let mut _4: isize;                   // in scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:135:9: 135:16
    let _5: &mut i32;                    // in scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:135:14: 135:15
    let mut _6: (i32, bool);             // in scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:136:13: 136:20
    let mut _7: &mut &mut std::option::Option<i32>; // in scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:142:11: 142:31
    let mut _8: &mut std::option::Option<i32>; // in scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:142:16: 142:31
    let mut _9: std::option::Option<i32>; // in scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:142:21: 142:31
    let mut _10: isize;                  // in scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:143:9: 143:16
    let _11: &mut i32;                   // in scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:143:14: 143:15
    let mut _12: &mut std::option::Option<i32>; // in scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:142:11: 142:31
    let mut _13: &mut std::option::Option<i32>; // in scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:142:11: 142:31
    scope 1 {
        debug n => _1;                   // in scope 1 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:127:14: 127:19
        scope 2 {
        }
    }
    scope 3 {
        debug n => _5;                   // in scope 3 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:135:14: 135:15
        scope 4 {
        }
    }
    scope 5 {
        debug n => _11;                  // in scope 5 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:143:14: 143:15
        scope 6 {
        }
    }

    bb0: {
        _1 = const 5_i32;                // scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:127:14: 127:19
        _1 = const 6_i32;                // scope 1 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:128:13: 128:19
        _3 = Option::<i32>::Some(const 5_i32); // scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:134:16: 134:26
        _2 = &mut _3;                    // scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:134:11: 134:26
        _4 = discriminant((*_2));        // scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:134:11: 134:26
        switchInt(move _4) -> [0: bb4, 1: bb2, otherwise: bb1]; // scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:134:5: 134:26
    }

    bb1: {
        unreachable;                     // scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:134:11: 134:26
    }

    bb2: {
        _5 = &mut (((*_2) as Some).0: i32); // scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:135:14: 135:15
        _6 = CheckedAdd((*_5), const 1_i32); // scope 3 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:136:13: 136:20
        assert(!move (_6.1: bool), "attempt to compute `{} + {}`, which would overflow", (*_5), const 1_i32) -> bb3; // scope 3 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:136:13: 136:20
    }

    bb3: {
        (*_5) = move (_6.0: i32);        // scope 3 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:136:13: 136:20
        goto -> bb4;                     // scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:138:9: 138:10
    }

    bb4: {
        _9 = Option::<i32>::Some(const 5_i32); // scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:142:21: 142:31
        _8 = &mut _9;                    // scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:142:16: 142:31
        _7 = &mut _8;                    // scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:142:11: 142:31
        _12 = deref_copy (*_7);          // scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:142:11: 142:31
        _10 = discriminant((*_12));      // scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:142:11: 142:31
        switchInt(move _10) -> [0: bb7, 1: bb6, otherwise: bb5]; // scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:142:5: 142:31
    }

    bb5: {
        unreachable;                     // scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:142:11: 142:31
    }

    bb6: {
        _13 = deref_copy (*_7);          // scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:143:14: 143:15
        _11 = &mut (((*_13) as Some).0: i32); // scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:143:14: 143:15
        goto -> bb7;                     // scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:145:9: 145:10
    }

    bb7: {
        return;                          // scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:148:2: 148:2
    }
}

promoted[0] in explicit_mut_binding: &Option<i32> = {
    let mut _0: &std::option::Option<i32>; // return place in scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:126:11: 126:22
    let mut _1: std::option::Option<i32>; // in scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:126:12: 126:22

    bb0: {
        _1 = Option::<i32>::Some(const 5_i32); // scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:126:12: 126:22
        _0 = &_1;                        // scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:126:11: 126:22
        return;                          // scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:126:11: 126:22
    }
}

fn tuple_mut_and_mut_mut() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:150:28: 150:28
    let mut _1: (std::option::Option<i32>, &std::option::Option<i32>); // in scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:151:11: 151:36
    let mut _2: std::option::Option<i32>; // in scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:151:12: 151:22
    let mut _3: &std::option::Option<i32>; // in scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:151:24: 151:35
    let _4: i32;                         // in scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:152:15: 152:16
    let _5: &i32;                        // in scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:152:24: 152:25
    let mut _8: (&std::option::Option<i32>, &&std::option::Option<i32>); // in scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:168:11: 168:38
    let mut _9: &std::option::Option<i32>; // in scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:168:12: 168:23
    let mut _10: &&std::option::Option<i32>; // in scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:168:25: 168:37
    let _11: &i32;                       // in scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:169:15: 169:16
    let _12: &i32;                       // in scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:169:24: 169:25
    let mut _13: &mut &mut (std::option::Option<i32>, std::option::Option<i32>); // in scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:176:11: 176:45
    let mut _14: &mut (std::option::Option<i32>, std::option::Option<i32>); // in scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:176:16: 176:45
    let mut _15: (std::option::Option<i32>, std::option::Option<i32>); // in scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:176:21: 176:45
    let mut _16: std::option::Option<i32>; // in scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:176:22: 176:32
    let mut _17: std::option::Option<i32>; // in scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:176:34: 176:44
    let mut _18: isize;                  // in scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:177:19: 177:26
    let mut _19: isize;                  // in scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:177:10: 177:17
    let _20: &mut i32;                   // in scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:177:15: 177:16
    let _21: &mut i32;                   // in scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:177:24: 177:25
    let mut _22: (&mut std::option::Option<i32>, &mut &mut std::option::Option<i32>); // in scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:185:11: 185:50
    let mut _23: &mut std::option::Option<i32>; // in scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:185:12: 185:27
    let mut _24: std::option::Option<i32>; // in scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:185:17: 185:27
    let mut _25: &mut &mut std::option::Option<i32>; // in scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:185:29: 185:49
    let mut _26: &mut std::option::Option<i32>; // in scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:185:34: 185:49
    let mut _27: std::option::Option<i32>; // in scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:185:39: 185:49
    let mut _28: isize;                  // in scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:186:19: 186:26
    let mut _29: isize;                  // in scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:186:10: 186:17
    let _30: &mut i32;                   // in scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:186:15: 186:16
    let _31: &mut i32;                   // in scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:186:24: 186:25
    let mut _32: &&std::option::Option<i32>; // in scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:168:25: 168:37
    let mut _33: &std::option::Option<i32>; // in scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:168:12: 168:23
    let mut _34: &std::option::Option<i32>; // in scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:151:24: 151:35
    let mut _35: &std::option::Option<i32>; // in scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:151:11: 151:36
    let mut _36: &std::option::Option<i32>; // in scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:168:11: 168:38
    let mut _37: &&std::option::Option<i32>; // in scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:168:11: 168:38
    let mut _38: &std::option::Option<i32>; // in scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:168:11: 168:38
    let mut _39: &mut (std::option::Option<i32>, std::option::Option<i32>); // in scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:176:11: 176:45
    let mut _40: &mut (std::option::Option<i32>, std::option::Option<i32>); // in scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:176:11: 176:45
    let mut _41: &mut (std::option::Option<i32>, std::option::Option<i32>); // in scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:176:11: 176:45
    let mut _42: &mut (std::option::Option<i32>, std::option::Option<i32>); // in scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:176:11: 176:45
    let mut _43: &mut std::option::Option<i32>; // in scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:185:11: 185:50
    let mut _44: &mut &mut std::option::Option<i32>; // in scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:185:11: 185:50
    let mut _45: &mut std::option::Option<i32>; // in scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:185:11: 185:50
    let mut _46: &mut std::option::Option<i32>; // in scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:185:11: 185:50
    let mut _47: &mut &mut std::option::Option<i32>; // in scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:185:11: 185:50
    let mut _48: &mut std::option::Option<i32>; // in scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:185:11: 185:50
    scope 1 {
        debug n => _4;                   // in scope 1 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:152:15: 152:16
        debug m => _5;                   // in scope 1 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:152:24: 152:25
        let _6: i32;                     // in scope 1 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:155:17: 155:18
        scope 2 {
            debug r => _6;               // in scope 2 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:155:17: 155:18
            scope 3 {
                let _7: &i32;            // in scope 3 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:157:17: 157:18
                scope 4 {
                    debug q => _7;       // in scope 4 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:157:17: 157:18
                    scope 5 {
                        scope 6 {
                            scope 7 {
                            }
                        }
                    }
                }
            }
        }
    }
    scope 8 {
        debug n => _11;                  // in scope 8 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:169:15: 169:16
        debug m => _12;                  // in scope 8 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:169:24: 169:25
        scope 9 {
            scope 10 {
            }
        }
    }
    scope 11 {
        debug n => _20;                  // in scope 11 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:177:15: 177:16
        debug m => _21;                  // in scope 11 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:177:24: 177:25
        scope 12 {
            scope 13 {
            }
        }
    }
    scope 14 {
        debug n => _30;                  // in scope 14 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:186:15: 186:16
        debug m => _31;                  // in scope 14 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:186:24: 186:25
        scope 15 {
            scope 16 {
            }
        }
    }

    bb0: {
        _2 = Option::<i32>::Some(const 5_i32); // scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:151:12: 151:22
        _34 = const _;                   // scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:151:24: 151:35
                                         // mir::Constant
                                         // + span: ui/rfcs/rfc-2005-default-binding-mode/general.rs:151:24: 151:35
                                         // + literal: Const { ty: &Option<i32>, val: Unevaluated(tuple_mut_and_mut_mut, [], Some(promoted[2])) }
        _3 = _34;                        // scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:151:24: 151:35
        _1 = (move _2, move _3);         // scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:151:11: 151:36
        _4 = const 5_i32;                // scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:152:15: 152:16
        _35 = deref_copy (_1.1: &std::option::Option<i32>); // scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:152:24: 152:25
        _5 = &(((*_35) as Some).0: i32); // scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:152:24: 152:25
        _6 = const 5_i32;                // scope 1 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:155:21: 155:22
        _7 = _5;                         // scope 3 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:157:21: 157:22
        _33 = const _;                   // scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:168:12: 168:23
                                         // mir::Constant
                                         // + span: ui/rfcs/rfc-2005-default-binding-mode/general.rs:168:12: 168:23
                                         // + literal: Const { ty: &Option<i32>, val: Unevaluated(tuple_mut_and_mut_mut, [], Some(promoted[1])) }
        _9 = _33;                        // scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:168:12: 168:23
        _32 = const _;                   // scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:168:25: 168:37
                                         // mir::Constant
                                         // + span: ui/rfcs/rfc-2005-default-binding-mode/general.rs:168:25: 168:37
                                         // + literal: Const { ty: &&Option<i32>, val: Unevaluated(tuple_mut_and_mut_mut, [], Some(promoted[0])) }
        _10 = _32;                       // scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:168:25: 168:37
        _8 = (move _9, move _10);        // scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:168:11: 168:38
        _36 = deref_copy (_8.0: &std::option::Option<i32>); // scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:169:15: 169:16
        _11 = &(((*_36) as Some).0: i32); // scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:169:15: 169:16
        _37 = deref_copy (_8.1: &&std::option::Option<i32>); // scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:169:24: 169:25
        _38 = deref_copy (*_37);         // scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:169:24: 169:25
        _12 = &(((*_38) as Some).0: i32); // scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:169:24: 169:25
        _16 = Option::<i32>::Some(const 5_i32); // scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:176:22: 176:32
        _17 = Option::<i32>::Some(const 5_i32); // scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:176:34: 176:44
        _15 = (move _16, move _17);      // scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:176:21: 176:45
        _14 = &mut _15;                  // scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:176:16: 176:45
        _13 = &mut _14;                  // scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:176:11: 176:45
        _39 = deref_copy (*_13);         // scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:176:11: 176:45
        _19 = discriminant(((*_39).0: std::option::Option<i32>)); // scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:176:11: 176:45
        switchInt(move _19) -> [1: bb1, otherwise: bb3]; // scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:176:5: 176:45
    }

    bb1: {
        _40 = deref_copy (*_13);         // scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:176:11: 176:45
        _18 = discriminant(((*_40).1: std::option::Option<i32>)); // scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:176:11: 176:45
        switchInt(move _18) -> [1: bb2, otherwise: bb3]; // scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:176:5: 176:45
    }

    bb2: {
        _41 = deref_copy (*_13);         // scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:177:15: 177:16
        _20 = &mut ((((*_41).0: std::option::Option<i32>) as Some).0: i32); // scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:177:15: 177:16
        _42 = deref_copy (*_13);         // scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:177:24: 177:25
        _21 = &mut ((((*_42).1: std::option::Option<i32>) as Some).0: i32); // scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:177:24: 177:25
        goto -> bb3;                     // scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:181:9: 181:10
    }

    bb3: {
        _24 = Option::<i32>::Some(const 5_i32); // scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:185:17: 185:27
        _23 = &mut _24;                  // scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:185:12: 185:27
        _27 = Option::<i32>::Some(const 5_i32); // scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:185:39: 185:49
        _26 = &mut _27;                  // scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:185:34: 185:49
        _25 = &mut _26;                  // scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:185:29: 185:49
        _22 = (move _23, move _25);      // scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:185:11: 185:50
        _43 = deref_copy (_22.0: &mut std::option::Option<i32>); // scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:185:11: 185:50
        _29 = discriminant((*_43));      // scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:185:11: 185:50
        switchInt(move _29) -> [1: bb4, otherwise: bb6]; // scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:185:5: 185:50
    }

    bb4: {
        _44 = deref_copy (_22.1: &mut &mut std::option::Option<i32>); // scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:185:11: 185:50
        _45 = deref_copy (*_44);         // scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:185:11: 185:50
        _28 = discriminant((*_45));      // scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:185:11: 185:50
        switchInt(move _28) -> [1: bb5, otherwise: bb6]; // scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:185:5: 185:50
    }

    bb5: {
        _46 = deref_copy (_22.0: &mut std::option::Option<i32>); // scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:186:15: 186:16
        _30 = &mut (((*_46) as Some).0: i32); // scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:186:15: 186:16
        _47 = deref_copy (_22.1: &mut &mut std::option::Option<i32>); // scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:186:24: 186:25
        _48 = deref_copy (*_47);         // scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:186:24: 186:25
        _31 = &mut (((*_48) as Some).0: i32); // scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:186:24: 186:25
        goto -> bb6;                     // scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:189:9: 189:10
    }

    bb6: {
        return;                          // scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:192:2: 192:2
    }
}

promoted[0] in tuple_mut_and_mut_mut: &&Option<i32> = {
    let mut _0: &&std::option::Option<i32>; // return place in scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:168:25: 168:37
    let mut _1: &std::option::Option<i32>; // in scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:168:26: 168:37
    let mut _2: std::option::Option<i32>; // in scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:168:27: 168:37

    bb0: {
        _2 = Option::<i32>::Some(const 5_i32); // scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:168:27: 168:37
        _1 = &_2;                        // scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:168:26: 168:37
        _0 = &_1;                        // scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:168:25: 168:37
        return;                          // scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:168:25: 168:37
    }
}

promoted[1] in tuple_mut_and_mut_mut: &Option<i32> = {
    let mut _0: &std::option::Option<i32>; // return place in scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:168:12: 168:23
    let mut _1: std::option::Option<i32>; // in scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:168:13: 168:23

    bb0: {
        _1 = Option::<i32>::Some(const 5_i32); // scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:168:13: 168:23
        _0 = &_1;                        // scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:168:12: 168:23
        return;                          // scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:168:12: 168:23
    }
}

promoted[2] in tuple_mut_and_mut_mut: &Option<i32> = {
    let mut _0: &std::option::Option<i32>; // return place in scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:151:24: 151:35
    let mut _1: std::option::Option<i32>; // in scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:151:25: 151:35

    bb0: {
        _1 = Option::<i32>::Some(const 5_i32); // scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:151:25: 151:35
        _0 = &_1;                        // scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:151:24: 151:35
        return;                          // scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:151:24: 151:35
    }
}

fn min_mir_embedded_type() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:194:28: 194:28
    let mut _1: (u8, &&std::option::Option<i32>); // in scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:197:11: 197:30
    let mut _2: &&std::option::Option<i32>; // in scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:197:17: 197:29
    let _3: &i32;                        // in scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:198:18: 198:19
    let mut _4: &&std::option::Option<i32>; // in scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:197:17: 197:29
    let mut _5: &&std::option::Option<i32>; // in scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:197:11: 197:30
    let mut _6: &std::option::Option<i32>; // in scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:197:11: 197:30
    scope 1 {
        debug m => _3;                   // in scope 1 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:198:18: 198:19
        scope 2 {
        }
    }

    bb0: {
        _4 = const _;                    // scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:197:17: 197:29
                                         // mir::Constant
                                         // + span: ui/rfcs/rfc-2005-default-binding-mode/general.rs:197:17: 197:29
                                         // + literal: Const { ty: &&Option<i32>, val: Unevaluated(min_mir_embedded_type, [], Some(promoted[0])) }
        _2 = _4;                         // scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:197:17: 197:29
        _1 = (const 0_u8, move _2);      // scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:197:11: 197:30
        _5 = deref_copy (_1.1: &&std::option::Option<i32>); // scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:198:18: 198:19
        _6 = deref_copy (*_5);           // scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:198:18: 198:19
        _3 = &(((*_6) as Some).0: i32);  // scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:198:18: 198:19
        return;                          // scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:203:2: 203:2
    }
}

promoted[0] in min_mir_embedded_type: &&Option<i32> = {
    let mut _0: &&std::option::Option<i32>; // return place in scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:197:17: 197:29
    let mut _1: &std::option::Option<i32>; // in scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:197:18: 197:29
    let mut _2: std::option::Option<i32>; // in scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:197:19: 197:29

    bb0: {
        _2 = Option::<i32>::Some(const 5_i32); // scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:197:19: 197:29
        _1 = &_2;                        // scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:197:18: 197:29
        _0 = &_1;                        // scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:197:17: 197:29
        return;                          // scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:197:17: 197:29
    }
}

fn no_autoderef() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:205:19: 205:19
    let _1: &i32;                        // in scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:207:9: 207:10
    let _2: ();                          // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:62
    let mut _3: std::fmt::Arguments<'_>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _4: &[&str];                 // in scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:208:14: 208:18
    let mut _5: &[&str; 2];              // in scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:208:14: 208:18
    let _6: &[&str; 2];                  // in scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:208:14: 208:18
    let mut _7: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _8: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let _9: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let _10: [core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _11: core::fmt::ArgumentV1<'_>; // in scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:208:20: 208:22
    let mut _12: &i32;                   // in scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:208:20: 208:22
    let _13: &i32;                       // in scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:208:20: 208:22
    let mut _14: (&i32, &i32);           // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _15: &i32;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let mut _16: &i32;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let _17: i32;                        // in scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:215:19: 218:6
    let mut _18: &str;                   // in scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:215:25: 215:30
    let mut _19: bool;                   // in scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:216:9: 216:10
    let mut _22: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    let mut _23: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
    let mut _24: i32;                    // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
    let mut _25: i32;                    // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
    let _27: !;                          // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
    let mut _28: core::panicking::AssertKind; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
    let mut _29: &i32;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let _30: &i32;                       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let mut _31: &i32;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let _32: &i32;                       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let mut _33: std::option::Option<std::fmt::Arguments<'_>>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
    let mut _37: &i32;                   // in scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:207:13: 207:15
    scope 1 {
        debug x => _1;                   // in scope 1 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:207:9: 207:10
        let mut _36: &[&str; 2];         // in scope 1 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:208:14: 208:18
        scope 2 {
            let _20: &i32;               // in scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
            let _21: &i32;               // in scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
            let _34: i32;                // in scope 2 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:221:10: 221:11
            let mut _35: &i32;           // in scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
            scope 3 {
                debug left_val => _20;   // in scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
                debug right_val => _21;  // in scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
                let _26: core::panicking::AssertKind; // in scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                scope 4 {
                    debug kind => _26;   // in scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                }
            }
            scope 5 {
                debug x => _34;          // in scope 5 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:221:10: 221:11
            }
        }
    }

    bb0: {
        _37 = const _;                   // scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:207:13: 207:15
                                         // mir::Constant
                                         // + span: ui/rfcs/rfc-2005-default-binding-mode/general.rs:207:13: 207:15
                                         // + literal: Const { ty: &i32, val: Unevaluated(no_autoderef, [], Some(promoted[4])) }
        _1 = _37;                        // scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:207:13: 207:15
        _36 = const _;                   // scope 1 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:208:14: 208:18
                                         // mir::Constant
                                         // + span: ui/rfcs/rfc-2005-default-binding-mode/general.rs:208:14: 208:18
                                         // + literal: Const { ty: &[&str; 2], val: Unevaluated(no_autoderef, [], Some(promoted[3])) }
        _6 = _36;                        // scope 1 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:208:14: 208:18
        _5 = _6;                         // scope 1 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:208:14: 208:18
        _4 = move _5 as &[&str] (Pointer(Unsize)); // scope 1 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:208:14: 208:18
        _13 = _1;                        // scope 1 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:208:20: 208:22
        _12 = _13;                       // scope 1 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:208:20: 208:22
        _11 = core::fmt::ArgumentV1::<'_>::new_display::<i32>(move _12) -> bb1; // scope 1 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:208:20: 208:22
                                         // mir::Constant
                                         // + span: ui/rfcs/rfc-2005-default-binding-mode/general.rs:208:20: 208:22
                                         // + user_ty: UserType(1)
                                         // + literal: Const { ty: for<'b> fn(&'b i32) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_display::<i32>}, val: Value(<ZST>) }
    }

    bb1: {
        _10 = [move _11];                // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _9 = &_10;                       // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _8 = _9;                         // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _7 = move _8 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _3 = Arguments::<'_>::new_v1(move _4, move _7) -> bb2; // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb2: {
        _2 = _print(move _3) -> bb3;     // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:62
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:27
                                         // + literal: Const { ty: for<'a> fn(Arguments<'a>) {_print}, val: Value(<ZST>) }
    }

    bb3: {
        _35 = const _;                   // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
                                         // + literal: Const { ty: &i32, val: Unevaluated(no_autoderef, [], Some(promoted[1])) }
        _15 = _35;                       // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _18 = const "foo";               // scope 2 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:215:25: 215:30
                                         // mir::Constant
                                         // + span: ui/rfcs/rfc-2005-default-binding-mode/general.rs:215:25: 215:30
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _19 = <str as PartialEq>::eq(_18, const "foo") -> bb4; // scope 2 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:216:9: 216:10
                                         // mir::Constant
                                         // + span: ui/rfcs/rfc-2005-default-binding-mode/general.rs:216:9: 216:10
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a str, &'b str) -> bool {<str as PartialEq>::eq}, val: Value(<ZST>) }
                                         // mir::Constant
                                         // + span: ui/rfcs/rfc-2005-default-binding-mode/general.rs:216:9: 216:10
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
    }

    bb4: {
        switchInt(move _19) -> [0: bb5, otherwise: bb6]; // scope 2 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:216:9: 216:10
    }

    bb5: {
        _17 = const 1_i32;               // scope 2 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:217:14: 217:15
        goto -> bb7;                     // scope 2 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:217:14: 217:15
    }

    bb6: {
        _17 = const 0_i32;               // scope 2 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:216:14: 216:15
        goto -> bb7;                     // scope 2 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:216:14: 216:15
    }

    bb7: {
        _16 = &_17;                      // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _14 = (move _15, move _16);      // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _20 = (_14.0: &i32);             // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _21 = (_14.1: &i32);             // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _24 = const 0_i32;               // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
        _25 = (*_21);                    // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
        _23 = Eq(move _24, move _25);    // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
        _22 = Not(move _23);             // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
        switchInt(move _22) -> [0: bb9, otherwise: bb8]; // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    }

    bb8: {
        _26 = const core::panicking::AssertKind::Eq; // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _28 = const core::panicking::AssertKind::Eq; // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _30 = _20;                       // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _29 = _30;                       // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _32 = _21;                       // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _31 = _32;                       // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _33 = Option::<Arguments<'_>>::None; // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
        _27 = core::panicking::assert_failed::<i32, i32>(move _28, move _29, move _31, move _33); // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:53
                                         // + literal: Const { ty: for<'a, 'b, 'c> fn(core::panicking::AssertKind, &'a i32, &'b i32, Option<Arguments<'c>>) -> ! {core::panicking::assert_failed::<i32, i32>}, val: Value(<ZST>) }
    }

    bb9: {
        _34 = const 3_i32;               // scope 2 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:221:10: 221:11
        return;                          // scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:222:2: 222:2
    }
}

promoted[0] in no_autoderef: &i32 = {
    let mut _0: &i32;                    // return place in scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:221:14: 221:16
    let mut _1: i32;                     // in scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:221:15: 221:16

    bb0: {
        _1 = const 3_i32;                // scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:221:15: 221:16
        _0 = &_1;                        // scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:221:14: 221:16
        return;                          // scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:221:14: 221:16
    }
}

promoted[1] in no_autoderef: &i32 = {
    let mut _0: &i32;                    // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let mut _1: i32;                     // in scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:215:16: 215:17

    bb0: {
        _1 = const 0_i32;                // scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:215:16: 215:17
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    }
}

promoted[2] in no_autoderef: &i32 = {
    let mut _0: &i32;                    // return place in scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:211:13: 211:15
    let mut _1: i32;                     // in scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:211:14: 211:15

    bb0: {
        _1 = const 3_i32;                // scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:211:14: 211:15
        _0 = &_1;                        // scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:211:13: 211:15
        return;                          // scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:211:13: 211:15
    }
}

promoted[3] in no_autoderef: &[&str; 2] = {
    let mut _0: &[&str; 2];              // return place in scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:208:14: 208:18
    let mut _1: [&str; 2];               // in scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:208:14: 208:18

    bb0: {
        _1 = [const "", const "\n"];     // scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:208:14: 208:18
                                         // mir::Constant
                                         // + span: ui/rfcs/rfc-2005-default-binding-mode/general.rs:208:14: 208:18
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
                                         // mir::Constant
                                         // + span: ui/rfcs/rfc-2005-default-binding-mode/general.rs:208:14: 208:18
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:208:14: 208:18
        return;                          // scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:208:14: 208:18
    }
}

promoted[4] in no_autoderef: &i32 = {
    let mut _0: &i32;                    // return place in scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:207:13: 207:15
    let mut _1: i32;                     // in scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:207:14: 207:15

    bb0: {
        _1 = const 3_i32;                // scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:207:14: 207:15
        _0 = &_1;                        // scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:207:13: 207:15
        return;                          // scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:207:13: 207:15
    }
}

const Y: &str = {
    let mut _0: &str;                    // return place in scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:214:14: 214:26

    bb0: {
        _0 = const "foo";                // scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:214:29: 214:34
                                         // mir::Constant
                                         // + span: ui/rfcs/rfc-2005-default-binding-mode/general.rs:214:29: 214:34
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        return;                          // scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:214:5: 214:35
    }
}

fn main() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:224:15: 224:15
    let _1: &std::option::Option<i32>;   // in scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:225:9: 225:10
    let _2: &std::option::Option<i32>;   // in scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:225:27: 225:35
    let _4: ();                          // in scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:228:5: 228:27
    let mut _5: &std::option::Option<i32>; // in scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:228:22: 228:23
    let mut _6: &i32;                    // in scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:228:25: 228:26
    let _7: ();                          // in scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:229:5: 229:27
    let mut _8: &std::option::Option<i32>; // in scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:229:22: 229:23
    let mut _9: &i32;                    // in scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:229:25: 229:26
    let _10: ();                         // in scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:230:5: 230:27
    let mut _11: &std::option::Option<i32>; // in scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:230:22: 230:23
    let mut _12: &i32;                   // in scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:230:25: 230:26
    let _13: ();                         // in scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:231:5: 231:27
    let mut _14: &std::option::Option<i32>; // in scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:231:22: 231:23
    let mut _15: &i32;                   // in scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:231:25: 231:26
    let _16: ();                         // in scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:233:5: 233:20
    let mut _17: &std::option::Option<i32>; // in scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:233:18: 233:19
    let _18: ();                         // in scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:234:5: 234:26
    let mut _19: &&&&&std::option::Option<i32>; // in scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:234:20: 234:25
    let _20: &&&&&std::option::Option<i32>; // in scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:234:20: 234:25
    let _21: &&&&std::option::Option<i32>; // in scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:234:21: 234:25
    let _22: &&&std::option::Option<i32>; // in scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:234:22: 234:25
    let _23: &&std::option::Option<i32>; // in scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:234:23: 234:25
    let _24: ();                         // in scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:235:5: 235:20
    let _25: ();                         // in scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:237:5: 237:19
    let _26: ();                         // in scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:238:5: 238:36
    let _27: ();                         // in scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:239:5: 239:36
    let _28: ();                         // in scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:241:5: 241:28
    let _29: ();                         // in scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:242:5: 242:27
    let _30: ();                         // in scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:243:5: 243:28
    let _31: ();                         // in scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:244:5: 244:28
    let _32: ();                         // in scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:246:5: 246:31
    let _33: ();                         // in scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:248:5: 248:19
    let mut _35: &std::option::Option<i32>; // in scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:225:27: 225:35
    scope 1 {
        debug r => _1;                   // in scope 1 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:225:9: 225:10
        let _3: &i32;                    // in scope 1 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:226:9: 226:10
        let mut _34: &i32;               // in scope 1 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:226:13: 226:18
        scope 2 {
            debug b => _3;               // in scope 2 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:226:9: 226:10
        }
    }

    bb0: {
        _35 = const _;                   // scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:225:27: 225:35
                                         // mir::Constant
                                         // + span: ui/rfcs/rfc-2005-default-binding-mode/general.rs:225:27: 225:35
                                         // + literal: Const { ty: &Option<i32>, val: Unevaluated(main, [], Some(promoted[1])) }
        _2 = _35;                        // scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:225:27: 225:35
        _1 = _2;                         // scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:225:27: 225:35
        _34 = const _;                   // scope 1 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:226:13: 226:18
                                         // mir::Constant
                                         // + span: ui/rfcs/rfc-2005-default-binding-mode/general.rs:226:13: 226:18
                                         // + literal: Const { ty: &i32, val: Unevaluated(main, [], Some(promoted[0])) }
        _3 = _34;                        // scope 1 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:226:13: 226:18
        _5 = _1;                         // scope 2 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:228:22: 228:23
        _6 = _3;                         // scope 2 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:228:25: 228:26
        _4 = none_or_wildcard(move _5, move _6) -> bb1; // scope 2 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:228:5: 228:27
                                         // mir::Constant
                                         // + span: ui/rfcs/rfc-2005-default-binding-mode/general.rs:228:5: 228:21
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a Option<i32>, &'b i32) {none_or_wildcard}, val: Value(<ZST>) }
    }

    bb1: {
        _8 = _1;                         // scope 2 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:229:22: 229:23
        _9 = _3;                         // scope 2 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:229:25: 229:26
        _7 = some_or_wildcard(move _8, move _9) -> bb2; // scope 2 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:229:5: 229:27
                                         // mir::Constant
                                         // + span: ui/rfcs/rfc-2005-default-binding-mode/general.rs:229:5: 229:21
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a Option<i32>, &'b i32) {some_or_wildcard}, val: Value(<ZST>) }
    }

    bb2: {
        _11 = _1;                        // scope 2 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:230:22: 230:23
        _12 = _3;                        // scope 2 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:230:25: 230:26
        _10 = some_or_ref_none(move _11, move _12) -> bb3; // scope 2 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:230:5: 230:27
                                         // mir::Constant
                                         // + span: ui/rfcs/rfc-2005-default-binding-mode/general.rs:230:5: 230:21
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a Option<i32>, &'b i32) {some_or_ref_none}, val: Value(<ZST>) }
    }

    bb3: {
        _14 = _1;                        // scope 2 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:231:22: 231:23
        _15 = _3;                        // scope 2 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:231:25: 231:26
        _13 = ref_some_or_none(move _14, move _15) -> bb4; // scope 2 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:231:5: 231:27
                                         // mir::Constant
                                         // + span: ui/rfcs/rfc-2005-default-binding-mode/general.rs:231:5: 231:21
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a Option<i32>, &'b i32) {ref_some_or_none}, val: Value(<ZST>) }
    }

    bb4: {
        _17 = _1;                        // scope 2 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:233:18: 233:19
        _16 = some_or_self(move _17) -> bb5; // scope 2 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:233:5: 233:20
                                         // mir::Constant
                                         // + span: ui/rfcs/rfc-2005-default-binding-mode/general.rs:233:5: 233:17
                                         // + literal: Const { ty: for<'a> fn(&'a Option<i32>) {some_or_self}, val: Value(<ZST>) }
    }

    bb5: {
        _23 = &_1;                       // scope 2 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:234:23: 234:25
        _22 = &_23;                      // scope 2 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:234:22: 234:25
        _21 = &_22;                      // scope 2 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:234:21: 234:25
        _20 = &_21;                      // scope 2 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:234:20: 234:25
        _19 = _20;                       // scope 2 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:234:20: 234:25
        _18 = multiple_deref(move _19) -> bb6; // scope 2 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:234:5: 234:26
                                         // mir::Constant
                                         // + span: ui/rfcs/rfc-2005-default-binding-mode/general.rs:234:5: 234:19
                                         // + literal: Const { ty: for<'a, 'b, 'c, 'd, 'e> fn(&'a &'b &'c &'d &'e Option<i32>) {multiple_deref}, val: Value(<ZST>) }
    }

    bb6: {
        _24 = match_with_or() -> bb7;    // scope 2 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:235:5: 235:20
                                         // mir::Constant
                                         // + span: ui/rfcs/rfc-2005-default-binding-mode/general.rs:235:5: 235:18
                                         // + literal: Const { ty: fn() {match_with_or}, val: Value(<ZST>) }
    }

    bb7: {
        _25 = nested_mixed() -> bb8;     // scope 2 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:237:5: 237:19
                                         // mir::Constant
                                         // + span: ui/rfcs/rfc-2005-default-binding-mode/general.rs:237:5: 237:17
                                         // + literal: Const { ty: fn() {nested_mixed}, val: Value(<ZST>) }
    }

    bb8: {
        _26 = nested_mixed_multiple_deref_1() -> bb9; // scope 2 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:238:5: 238:36
                                         // mir::Constant
                                         // + span: ui/rfcs/rfc-2005-default-binding-mode/general.rs:238:5: 238:34
                                         // + literal: Const { ty: fn() {nested_mixed_multiple_deref_1}, val: Value(<ZST>) }
    }

    bb9: {
        _27 = nested_mixed_multiple_deref_2() -> bb10; // scope 2 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:239:5: 239:36
                                         // mir::Constant
                                         // + span: ui/rfcs/rfc-2005-default-binding-mode/general.rs:239:5: 239:34
                                         // + literal: Const { ty: fn() {nested_mixed_multiple_deref_2}, val: Value(<ZST>) }
    }

    bb10: {
        _28 = new_mutable_reference() -> bb11; // scope 2 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:241:5: 241:28
                                         // mir::Constant
                                         // + span: ui/rfcs/rfc-2005-default-binding-mode/general.rs:241:5: 241:26
                                         // + literal: Const { ty: fn() {new_mutable_reference}, val: Value(<ZST>) }
    }

    bb11: {
        _29 = explicit_mut_binding() -> bb12; // scope 2 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:242:5: 242:27
                                         // mir::Constant
                                         // + span: ui/rfcs/rfc-2005-default-binding-mode/general.rs:242:5: 242:25
                                         // + literal: Const { ty: fn() {explicit_mut_binding}, val: Value(<ZST>) }
    }

    bb12: {
        _30 = tuple_mut_and_mut_mut() -> bb13; // scope 2 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:243:5: 243:28
                                         // mir::Constant
                                         // + span: ui/rfcs/rfc-2005-default-binding-mode/general.rs:243:5: 243:26
                                         // + literal: Const { ty: fn() {tuple_mut_and_mut_mut}, val: Value(<ZST>) }
    }

    bb13: {
        _31 = min_mir_embedded_type() -> bb14; // scope 2 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:244:5: 244:28
                                         // mir::Constant
                                         // + span: ui/rfcs/rfc-2005-default-binding-mode/general.rs:244:5: 244:26
                                         // + literal: Const { ty: fn() {min_mir_embedded_type}, val: Value(<ZST>) }
    }

    bb14: {
        _32 = let_implicit_ref_binding() -> bb15; // scope 2 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:246:5: 246:31
                                         // mir::Constant
                                         // + span: ui/rfcs/rfc-2005-default-binding-mode/general.rs:246:5: 246:29
                                         // + literal: Const { ty: fn() {let_implicit_ref_binding}, val: Value(<ZST>) }
    }

    bb15: {
        _33 = no_autoderef() -> bb16;    // scope 2 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:248:5: 248:19
                                         // mir::Constant
                                         // + span: ui/rfcs/rfc-2005-default-binding-mode/general.rs:248:5: 248:17
                                         // + literal: Const { ty: fn() {no_autoderef}, val: Value(<ZST>) }
    }

    bb16: {
        return;                          // scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:249:2: 249:2
    }
}

promoted[0] in main: &i32 = {
    let mut _0: &i32;                    // return place in scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:226:13: 226:18
    let mut _1: i32;                     // in scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:226:14: 226:18

    bb0: {
        _1 = const 4_i32;                // scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:226:14: 226:18
        _0 = &_1;                        // scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:226:13: 226:18
        return;                          // scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:226:13: 226:18
    }
}

promoted[1] in main: &Option<i32> = {
    let mut _0: &std::option::Option<i32>; // return place in scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:225:27: 225:35
    let mut _1: std::option::Option<i32>; // in scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:225:28: 225:35

    bb0: {
        _1 = Option::<i32>::Some(const 3_i32); // scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:225:28: 225:35
        _0 = &_1;                        // scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:225:27: 225:35
        return;                          // scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:225:27: 225:35
    }
}

fn Foo(_1: i32) -> Foo {
    let mut _0: let_implicit_ref_binding::Foo; // return place in scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:116:5: 116:15

    bb0: {
        _0 = Foo(move _1);               // scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:116:5: 116:15
        return;                          // scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:116:5: 116:15
    }
}

// MIR FOR CTFE
fn Foo(_1: i32) -> Foo {
    let mut _0: let_implicit_ref_binding::Foo; // return place in scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:116:5: 116:15

    bb0: {
        _0 = Foo(move _1);               // scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:116:5: 116:15
        return;                          // scope 0 at ui/rfcs/rfc-2005-default-binding-mode/general.rs:116:5: 116:15
    }
}
