// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
fn main() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/rfcs/rfc-2005-default-binding-mode/range.rs:2:15: 2:15
    let _1: i32;                         // in scope 0 at ui/rfcs/rfc-2005-default-binding-mode/range.rs:3:9: 3:10
    let mut _2: &&&&i32;                 // in scope 0 at ui/rfcs/rfc-2005-default-binding-mode/range.rs:4:11: 4:16
    let _3: &&&i32;                      // in scope 0 at ui/rfcs/rfc-2005-default-binding-mode/range.rs:4:12: 4:16
    let _4: &&i32;                       // in scope 0 at ui/rfcs/rfc-2005-default-binding-mode/range.rs:4:13: 4:16
    let _5: &i32;                        // in scope 0 at ui/rfcs/rfc-2005-default-binding-mode/range.rs:4:14: 4:16
    let mut _6: bool;                    // in scope 0 at ui/rfcs/rfc-2005-default-binding-mode/range.rs:6:9: 6:16
    let mut _7: bool;                    // in scope 0 at ui/rfcs/rfc-2005-default-binding-mode/range.rs:6:9: 6:16
    let mut _8: bool;                    // in scope 0 at ui/rfcs/rfc-2005-default-binding-mode/range.rs:5:9: 5:16
    let mut _9: bool;                    // in scope 0 at ui/rfcs/rfc-2005-default-binding-mode/range.rs:5:9: 5:16
    let mut _10: !;                      // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/panic.rs:19:9: 19:50
    let mut _11: !;                      // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/panic.rs:19:9: 19:50
    let mut _12: &&&i32;                 // in scope 0 at ui/rfcs/rfc-2005-default-binding-mode/range.rs:4:11: 4:16
    let mut _13: &&i32;                  // in scope 0 at ui/rfcs/rfc-2005-default-binding-mode/range.rs:4:11: 4:16
    let mut _14: &i32;                   // in scope 0 at ui/rfcs/rfc-2005-default-binding-mode/range.rs:4:11: 4:16
    let mut _15: &&&i32;                 // in scope 0 at ui/rfcs/rfc-2005-default-binding-mode/range.rs:4:11: 4:16
    let mut _16: &&i32;                  // in scope 0 at ui/rfcs/rfc-2005-default-binding-mode/range.rs:4:11: 4:16
    let mut _17: &i32;                   // in scope 0 at ui/rfcs/rfc-2005-default-binding-mode/range.rs:4:11: 4:16
    let mut _18: &&&i32;                 // in scope 0 at ui/rfcs/rfc-2005-default-binding-mode/range.rs:4:11: 4:16
    let mut _19: &&i32;                  // in scope 0 at ui/rfcs/rfc-2005-default-binding-mode/range.rs:4:11: 4:16
    let mut _20: &i32;                   // in scope 0 at ui/rfcs/rfc-2005-default-binding-mode/range.rs:4:11: 4:16
    let mut _21: &&&i32;                 // in scope 0 at ui/rfcs/rfc-2005-default-binding-mode/range.rs:4:11: 4:16
    let mut _22: &&i32;                  // in scope 0 at ui/rfcs/rfc-2005-default-binding-mode/range.rs:4:11: 4:16
    let mut _23: &i32;                   // in scope 0 at ui/rfcs/rfc-2005-default-binding-mode/range.rs:4:11: 4:16
    scope 1 {
        debug i => _1;                   // in scope 1 at ui/rfcs/rfc-2005-default-binding-mode/range.rs:3:9: 3:10
    }

    bb0: {
        _1 = const 5_i32;                // scope 0 at ui/rfcs/rfc-2005-default-binding-mode/range.rs:3:13: 3:14
        _5 = &_1;                        // scope 1 at ui/rfcs/rfc-2005-default-binding-mode/range.rs:4:14: 4:16
        _4 = &_5;                        // scope 1 at ui/rfcs/rfc-2005-default-binding-mode/range.rs:4:13: 4:16
        _3 = &_4;                        // scope 1 at ui/rfcs/rfc-2005-default-binding-mode/range.rs:4:12: 4:16
        _2 = &_3;                        // scope 1 at ui/rfcs/rfc-2005-default-binding-mode/range.rs:4:11: 4:16
        _12 = deref_copy (*_2);          // scope 1 at ui/rfcs/rfc-2005-default-binding-mode/range.rs:5:9: 5:16
        _13 = deref_copy (*_12);         // scope 1 at ui/rfcs/rfc-2005-default-binding-mode/range.rs:5:9: 5:16
        _14 = deref_copy (*_13);         // scope 1 at ui/rfcs/rfc-2005-default-binding-mode/range.rs:5:9: 5:16
        _8 = Le(const 1_i32, (*_14));    // scope 1 at ui/rfcs/rfc-2005-default-binding-mode/range.rs:5:9: 5:16
        switchInt(move _8) -> [0: bb2, otherwise: bb1]; // scope 1 at ui/rfcs/rfc-2005-default-binding-mode/range.rs:5:9: 5:16
    }

    bb1: {
        _15 = deref_copy (*_2);          // scope 1 at ui/rfcs/rfc-2005-default-binding-mode/range.rs:5:9: 5:16
        _16 = deref_copy (*_15);         // scope 1 at ui/rfcs/rfc-2005-default-binding-mode/range.rs:5:9: 5:16
        _17 = deref_copy (*_16);         // scope 1 at ui/rfcs/rfc-2005-default-binding-mode/range.rs:5:9: 5:16
        _9 = Le((*_17), const 3_i32);    // scope 1 at ui/rfcs/rfc-2005-default-binding-mode/range.rs:5:9: 5:16
        switchInt(move _9) -> [0: bb2, otherwise: bb5]; // scope 1 at ui/rfcs/rfc-2005-default-binding-mode/range.rs:5:9: 5:16
    }

    bb2: {
        _18 = deref_copy (*_2);          // scope 1 at ui/rfcs/rfc-2005-default-binding-mode/range.rs:6:9: 6:16
        _19 = deref_copy (*_18);         // scope 1 at ui/rfcs/rfc-2005-default-binding-mode/range.rs:6:9: 6:16
        _20 = deref_copy (*_19);         // scope 1 at ui/rfcs/rfc-2005-default-binding-mode/range.rs:6:9: 6:16
        _6 = Le(const 4_i32, (*_20));    // scope 1 at ui/rfcs/rfc-2005-default-binding-mode/range.rs:6:9: 6:16
        switchInt(move _6) -> [0: bb4, otherwise: bb3]; // scope 1 at ui/rfcs/rfc-2005-default-binding-mode/range.rs:6:9: 6:16
    }

    bb3: {
        _21 = deref_copy (*_2);          // scope 1 at ui/rfcs/rfc-2005-default-binding-mode/range.rs:6:9: 6:16
        _22 = deref_copy (*_21);         // scope 1 at ui/rfcs/rfc-2005-default-binding-mode/range.rs:6:9: 6:16
        _23 = deref_copy (*_22);         // scope 1 at ui/rfcs/rfc-2005-default-binding-mode/range.rs:6:9: 6:16
        _7 = Le((*_23), const 8_i32);    // scope 1 at ui/rfcs/rfc-2005-default-binding-mode/range.rs:6:9: 6:16
        switchInt(move _7) -> [0: bb4, otherwise: bb6]; // scope 1 at ui/rfcs/rfc-2005-default-binding-mode/range.rs:6:9: 6:16
    }

    bb4: {
        _11 = begin_panic::<&str>(const "explicit panic"); // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/panic.rs:19:9: 19:50
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/panic.rs:19:9: 19:32
                                         // + literal: Const { ty: fn(&str) -> ! {begin_panic::<&str>}, val: Value(<ZST>) }
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/panic.rs:19:33: 19:49
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
    }

    bb5: {
        _10 = begin_panic::<&str>(const "explicit panic"); // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/panic.rs:19:9: 19:50
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/panic.rs:19:9: 19:32
                                         // + literal: Const { ty: fn(&str) -> ! {begin_panic::<&str>}, val: Value(<ZST>) }
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/panic.rs:19:33: 19:49
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
    }

    bb6: {
        return;                          // scope 0 at ui/rfcs/rfc-2005-default-binding-mode/range.rs:9:2: 9:2
    }
}
