// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
fn main() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/rfcs/rfc-1789-as-cell/from-mut.rs:7:11: 7:11
    let _1: &mut [i32];                  // in scope 0 at ui/rfcs/rfc-1789-as-cell/from-mut.rs:8:9: 8:14
    let mut _2: &mut [i32; 3];           // in scope 0 at ui/rfcs/rfc-1789-as-cell/from-mut.rs:8:29: 8:43
    let mut _3: &mut [i32; 3];           // in scope 0 at ui/rfcs/rfc-1789-as-cell/from-mut.rs:8:29: 8:43
    let mut _4: [i32; 3];                // in scope 0 at ui/rfcs/rfc-1789-as-cell/from-mut.rs:8:34: 8:43
    let _6: &std::cell::Cell<[i32]>;     // in scope 0 at ui/rfcs/rfc-1789-as-cell/from-mut.rs:9:36: 9:57
    let mut _7: &mut [i32];              // in scope 0 at ui/rfcs/rfc-1789-as-cell/from-mut.rs:9:51: 9:56
    let _9: &[std::cell::Cell<i32>];     // in scope 0 at ui/rfcs/rfc-1789-as-cell/from-mut.rs:10:36: 10:66
    let mut _10: &std::cell::Cell<[i32]>; // in scope 0 at ui/rfcs/rfc-1789-as-cell/from-mut.rs:10:36: 10:66
    let mut _11: (&usize, &usize);       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _12: &usize;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let _13: usize;                      // in scope 0 at ui/rfcs/rfc-1789-as-cell/from-mut.rs:12:16: 12:32
    let mut _14: &[std::cell::Cell<i32>]; // in scope 0 at ui/rfcs/rfc-1789-as-cell/from-mut.rs:12:16: 12:32
    let mut _15: &usize;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _18: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    let mut _19: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
    let mut _20: usize;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
    let mut _21: usize;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
    let _23: !;                          // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
    let mut _24: core::panicking::AssertKind; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
    let mut _25: &usize;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let _26: &usize;                     // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let mut _27: &usize;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let _28: &usize;                     // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let mut _29: std::option::Option<std::fmt::Arguments<'_>>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
    let _32: &std::cell::Cell<[i32; 3]>; // in scope 0 at ui/rfcs/rfc-1789-as-cell/from-mut.rs:15:39: 15:65
    let mut _33: &mut [i32; 3];          // in scope 0 at ui/rfcs/rfc-1789-as-cell/from-mut.rs:15:54: 15:64
    let mut _34: &mut [i32; 3];          // in scope 0 at ui/rfcs/rfc-1789-as-cell/from-mut.rs:15:54: 15:64
    let _36: &[std::cell::Cell<i32>; 3]; // in scope 0 at ui/rfcs/rfc-1789-as-cell/from-mut.rs:16:39: 16:69
    let mut _37: &std::cell::Cell<[i32; 3]>; // in scope 0 at ui/rfcs/rfc-1789-as-cell/from-mut.rs:16:39: 16:69
    let _38: ();                         // in scope 0 at ui/rfcs/rfc-1789-as-cell/from-mut.rs:18:5: 18:26
    let mut _39: &std::cell::Cell<i32>;  // in scope 0 at ui/rfcs/rfc-1789-as-cell/from-mut.rs:18:5: 18:26
    let _40: usize;                      // in scope 0 at ui/rfcs/rfc-1789-as-cell/from-mut.rs:18:16: 18:17
    let mut _41: (&[i32; 3], &[i32; 3]); // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _42: &[i32; 3];              // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let mut _43: &[i32; 3];              // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _46: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    let mut _47: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
    let mut _48: &[i32; 3];              // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
    let mut _49: &[i32; 3];              // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
    let _51: !;                          // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
    let mut _52: core::panicking::AssertKind; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
    let mut _53: &[i32; 3];              // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let _54: &[i32; 3];                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let mut _55: &[i32; 3];              // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let _56: &[i32; 3];                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let mut _57: std::option::Option<std::fmt::Arguments<'_>>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
    scope 1 {
        debug slice => _1;               // in scope 1 at ui/rfcs/rfc-1789-as-cell/from-mut.rs:8:9: 8:14
        let _5: &std::cell::Cell<[i32]>; // in scope 1 at ui/rfcs/rfc-1789-as-cell/from-mut.rs:9:9: 9:19
        scope 2 {
            debug cell_slice => _5;      // in scope 2 at ui/rfcs/rfc-1789-as-cell/from-mut.rs:9:9: 9:19
            let _8: &[std::cell::Cell<i32>]; // in scope 2 at ui/rfcs/rfc-1789-as-cell/from-mut.rs:10:9: 10:19
            scope 3 {
                debug slice_cell => _8;  // in scope 3 at ui/rfcs/rfc-1789-as-cell/from-mut.rs:10:9: 10:19
                let _16: &usize;         // in scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
                let _17: &usize;         // in scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
                let mut _30: [i32; 3];   // in scope 3 at ui/rfcs/rfc-1789-as-cell/from-mut.rs:14:9: 14:18
                let mut _59: &usize;     // in scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                scope 4 {
                    debug left_val => _16; // in scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
                    debug right_val => _17; // in scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
                    let _22: core::panicking::AssertKind; // in scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                    scope 5 {
                        debug kind => _22; // in scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                    }
                }
                scope 6 {
                    debug array => _30;  // in scope 6 at ui/rfcs/rfc-1789-as-cell/from-mut.rs:14:9: 14:18
                    let _31: &std::cell::Cell<[i32; 3]>; // in scope 6 at ui/rfcs/rfc-1789-as-cell/from-mut.rs:15:9: 15:19
                    scope 7 {
                        debug cell_array => _31; // in scope 7 at ui/rfcs/rfc-1789-as-cell/from-mut.rs:15:9: 15:19
                        let _35: &[std::cell::Cell<i32>; 3]; // in scope 7 at ui/rfcs/rfc-1789-as-cell/from-mut.rs:16:9: 16:19
                        scope 8 {
                            debug array_cell => _35; // in scope 8 at ui/rfcs/rfc-1789-as-cell/from-mut.rs:16:9: 16:19
                            let _44: &[i32; 3]; // in scope 8 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
                            let _45: &[i32; 3]; // in scope 8 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
                            let mut _58: &[i32; 3]; // in scope 8 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                            scope 9 {
                                debug left_val => _44; // in scope 9 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
                                debug right_val => _45; // in scope 9 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
                                let _50: core::panicking::AssertKind; // in scope 9 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                                scope 10 {
                                    debug kind => _50; // in scope 10 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                                }
                            }
                        }
                    }
                }
            }
        }
    }

    bb0: {
        _4 = [const 1_i32, const 2_i32, const 3_i32]; // scope 0 at ui/rfcs/rfc-1789-as-cell/from-mut.rs:8:34: 8:43
        _3 = &mut _4;                    // scope 0 at ui/rfcs/rfc-1789-as-cell/from-mut.rs:8:29: 8:43
        _2 = &mut (*_3);                 // scope 0 at ui/rfcs/rfc-1789-as-cell/from-mut.rs:8:29: 8:43
        _1 = move _2 as &mut [i32] (Pointer(Unsize)); // scope 0 at ui/rfcs/rfc-1789-as-cell/from-mut.rs:8:29: 8:43
        _7 = &mut (*_1);                 // scope 1 at ui/rfcs/rfc-1789-as-cell/from-mut.rs:9:51: 9:56
        _6 = Cell::<[i32]>::from_mut(move _7) -> bb1; // scope 1 at ui/rfcs/rfc-1789-as-cell/from-mut.rs:9:36: 9:57
                                         // mir::Constant
                                         // + span: ui/rfcs/rfc-1789-as-cell/from-mut.rs:9:36: 9:50
                                         // + user_ty: UserType(3)
                                         // + literal: Const { ty: for<'a> fn(&'a mut [i32]) -> &'a Cell<[i32]> {Cell::<[i32]>::from_mut}, val: Value(<ZST>) }
    }

    bb1: {
        _5 = _6;                         // scope 1 at ui/rfcs/rfc-1789-as-cell/from-mut.rs:9:36: 9:57
        _10 = _5;                        // scope 2 at ui/rfcs/rfc-1789-as-cell/from-mut.rs:10:36: 10:66
        _9 = Cell::<[i32]>::as_slice_of_cells(move _10) -> bb2; // scope 2 at ui/rfcs/rfc-1789-as-cell/from-mut.rs:10:36: 10:66
                                         // mir::Constant
                                         // + span: ui/rfcs/rfc-1789-as-cell/from-mut.rs:10:47: 10:64
                                         // + literal: Const { ty: for<'a> fn(&'a Cell<[i32]>) -> &'a [Cell<i32>] {Cell::<[i32]>::as_slice_of_cells}, val: Value(<ZST>) }
    }

    bb2: {
        _8 = _9;                         // scope 2 at ui/rfcs/rfc-1789-as-cell/from-mut.rs:10:36: 10:66
        _14 = _8;                        // scope 3 at ui/rfcs/rfc-1789-as-cell/from-mut.rs:12:16: 12:32
        _13 = Len((*_14));               // scope 3 at ui/rfcs/rfc-1789-as-cell/from-mut.rs:12:16: 12:32
        _12 = &_13;                      // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _59 = const _;                   // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // + literal: Const { ty: &usize, val: Unevaluated(main, [], Some(promoted[1])) }
        _15 = _59;                       // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _11 = (move _12, move _15);      // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _16 = (_11.0: &usize);           // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _17 = (_11.1: &usize);           // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _20 = (*_16);                    // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
        _21 = const 3_usize;             // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
        _19 = Eq(move _20, move _21);    // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
        _18 = Not(move _19);             // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
        switchInt(move _18) -> [0: bb4, otherwise: bb3]; // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    }

    bb3: {
        _22 = const core::panicking::AssertKind::Eq; // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _24 = const core::panicking::AssertKind::Eq; // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _26 = _16;                       // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _25 = _26;                       // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _28 = _17;                       // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _27 = _28;                       // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _29 = Option::<Arguments<'_>>::None; // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
        _23 = core::panicking::assert_failed::<usize, usize>(move _24, move _25, move _27, move _29); // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:53
                                         // + literal: Const { ty: for<'a, 'b, 'c> fn(core::panicking::AssertKind, &'a usize, &'b usize, Option<Arguments<'c>>) -> ! {core::panicking::assert_failed::<usize, usize>}, val: Value(<ZST>) }
    }

    bb4: {
        _30 = [const 1_i32, const 2_i32, const 3_i32]; // scope 3 at ui/rfcs/rfc-1789-as-cell/from-mut.rs:14:31: 14:40
        _34 = &mut _30;                  // scope 6 at ui/rfcs/rfc-1789-as-cell/from-mut.rs:15:54: 15:64
        _33 = &mut (*_34);               // scope 6 at ui/rfcs/rfc-1789-as-cell/from-mut.rs:15:54: 15:64
        _32 = Cell::<[i32; 3]>::from_mut(move _33) -> bb5; // scope 6 at ui/rfcs/rfc-1789-as-cell/from-mut.rs:15:39: 15:65
                                         // mir::Constant
                                         // + span: ui/rfcs/rfc-1789-as-cell/from-mut.rs:15:39: 15:53
                                         // + user_ty: UserType(10)
                                         // + literal: Const { ty: for<'a> fn(&'a mut [i32; 3]) -> &'a Cell<[i32; 3]> {Cell::<[i32; 3]>::from_mut}, val: Value(<ZST>) }
    }

    bb5: {
        _31 = _32;                       // scope 6 at ui/rfcs/rfc-1789-as-cell/from-mut.rs:15:39: 15:65
        _37 = _31;                       // scope 7 at ui/rfcs/rfc-1789-as-cell/from-mut.rs:16:39: 16:69
        _36 = Cell::<[i32; 3]>::as_array_of_cells(move _37) -> bb6; // scope 7 at ui/rfcs/rfc-1789-as-cell/from-mut.rs:16:39: 16:69
                                         // mir::Constant
                                         // + span: ui/rfcs/rfc-1789-as-cell/from-mut.rs:16:50: 16:67
                                         // + literal: Const { ty: for<'a> fn(&'a Cell<[i32; 3]>) -> &'a [Cell<i32>; 3] {Cell::<[i32; 3]>::as_array_of_cells}, val: Value(<ZST>) }
    }

    bb6: {
        _35 = _36;                       // scope 7 at ui/rfcs/rfc-1789-as-cell/from-mut.rs:16:39: 16:69
        _40 = const 0_usize;             // scope 8 at ui/rfcs/rfc-1789-as-cell/from-mut.rs:18:16: 18:17
        _39 = &(*_35)[_40];              // scope 8 at ui/rfcs/rfc-1789-as-cell/from-mut.rs:18:5: 18:26
        _38 = Cell::<i32>::set(move _39, const 99_i32) -> bb7; // scope 8 at ui/rfcs/rfc-1789-as-cell/from-mut.rs:18:5: 18:26
                                         // mir::Constant
                                         // + span: ui/rfcs/rfc-1789-as-cell/from-mut.rs:18:19: 18:22
                                         // + literal: Const { ty: for<'a> fn(&'a Cell<i32>, i32) {Cell::<i32>::set}, val: Value(<ZST>) }
    }

    bb7: {
        _42 = &_30;                      // scope 8 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _58 = const _;                   // scope 8 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // + literal: Const { ty: &[i32; 3], val: Unevaluated(main, [], Some(promoted[0])) }
        _43 = _58;                       // scope 8 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _41 = (move _42, move _43);      // scope 8 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _44 = (_41.0: &[i32; 3]);        // scope 8 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _45 = (_41.1: &[i32; 3]);        // scope 8 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _48 = _44;                       // scope 9 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
        _49 = _45;                       // scope 9 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
        _47 = <[i32; 3] as PartialEq>::eq(move _48, move _49) -> bb8; // scope 9 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a [i32; 3], &'b [i32; 3]) -> bool {<[i32; 3] as PartialEq>::eq}, val: Value(<ZST>) }
    }

    bb8: {
        _46 = Not(move _47);             // scope 9 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
        switchInt(move _46) -> [0: bb10, otherwise: bb9]; // scope 9 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    }

    bb9: {
        _50 = const core::panicking::AssertKind::Eq; // scope 9 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _52 = const core::panicking::AssertKind::Eq; // scope 10 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _54 = _44;                       // scope 10 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _53 = _54;                       // scope 10 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _56 = _45;                       // scope 10 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _55 = _56;                       // scope 10 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _57 = Option::<Arguments<'_>>::None; // scope 10 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
        _51 = core::panicking::assert_failed::<[i32; 3], [i32; 3]>(move _52, move _53, move _55, move _57); // scope 10 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:53
                                         // + literal: Const { ty: for<'a, 'b, 'c> fn(core::panicking::AssertKind, &'a [i32; 3], &'b [i32; 3], Option<Arguments<'c>>) -> ! {core::panicking::assert_failed::<[i32; 3], [i32; 3]>}, val: Value(<ZST>) }
    }

    bb10: {
        return;                          // scope 0 at ui/rfcs/rfc-1789-as-cell/from-mut.rs:20:2: 20:2
    }
}

promoted[0] in main: &[i32; 3] = {
    let mut _0: &[i32; 3];               // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _1: [i32; 3];                // in scope 0 at ui/rfcs/rfc-1789-as-cell/from-mut.rs:19:23: 19:33

    bb0: {
        _1 = [const 99_i32, const 2_i32, const 3_i32]; // scope 0 at ui/rfcs/rfc-1789-as-cell/from-mut.rs:19:23: 19:33
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    }
}

promoted[1] in main: &usize = {
    let mut _0: &usize;                  // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _1: usize;                   // in scope 0 at ui/rfcs/rfc-1789-as-cell/from-mut.rs:12:34: 12:35

    bb0: {
        _1 = const 3_usize;              // scope 0 at ui/rfcs/rfc-1789-as-cell/from-mut.rs:12:34: 12:35
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    }
}

main::{constant#0}: usize = {
    let mut _0: usize;                   // return place in scope 0 at ui/rfcs/rfc-1789-as-cell/from-mut.rs:14:26: 14:27

    bb0: {
        _0 = const 3_usize;              // scope 0 at ui/rfcs/rfc-1789-as-cell/from-mut.rs:14:26: 14:27
        return;                          // scope 0 at ui/rfcs/rfc-1789-as-cell/from-mut.rs:14:26: 14:27
    }
}

main::{constant#1}: usize = {
    let mut _0: usize;                   // return place in scope 0 at ui/rfcs/rfc-1789-as-cell/from-mut.rs:15:33: 15:34

    bb0: {
        _0 = const 3_usize;              // scope 0 at ui/rfcs/rfc-1789-as-cell/from-mut.rs:15:33: 15:34
        return;                          // scope 0 at ui/rfcs/rfc-1789-as-cell/from-mut.rs:15:33: 15:34
    }
}

main::{constant#2}: usize = {
    let mut _0: usize;                   // return place in scope 0 at ui/rfcs/rfc-1789-as-cell/from-mut.rs:16:34: 16:35

    bb0: {
        _0 = const 3_usize;              // scope 0 at ui/rfcs/rfc-1789-as-cell/from-mut.rs:16:34: 16:35
        return;                          // scope 0 at ui/rfcs/rfc-1789-as-cell/from-mut.rs:16:34: 16:35
    }
}
