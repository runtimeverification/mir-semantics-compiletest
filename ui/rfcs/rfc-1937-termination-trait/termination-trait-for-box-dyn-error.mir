// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
fn main() -> Result<(), Box<dyn std::error::Error>> {
    let mut _0: std::result::Result<(), std::boxed::Box<dyn std::error::Error>>; // return place in scope 0 at ui/rfcs/rfc-1937-termination-trait/termination-trait-for-box-dyn-error.rs:4:14: 4:40
    let mut _1: ();                      // in scope 0 at ui/rfcs/rfc-1937-termination-trait/termination-trait-for-box-dyn-error.rs:5:8: 5:10

    bb0: {
        _0 = Result::<(), Box<dyn std::error::Error>>::Ok(move _1); // scope 0 at ui/rfcs/rfc-1937-termination-trait/termination-trait-for-box-dyn-error.rs:5:5: 5:11
        return;                          // scope 0 at ui/rfcs/rfc-1937-termination-trait/termination-trait-for-box-dyn-error.rs:6:2: 6:2
    }
}
