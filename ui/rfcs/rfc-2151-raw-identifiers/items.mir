// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
fn <impl at ui/rfcs/rfc-2151-raw-identifiers/items.rs:2:10: 2:15>::fmt(_1: &IntWrapper, _2: &mut Formatter<'_>) -> Result<(), std::fmt::Error> {
    debug self => _1;                    // in scope 0 at ui/rfcs/rfc-2151-raw-identifiers/items.rs:2:10: 2:15
    debug f => _2;                       // in scope 0 at ui/rfcs/rfc-2151-raw-identifiers/items.rs:2:10: 2:15
    let mut _0: std::result::Result<(), std::fmt::Error>; // return place in scope 0 at ui/rfcs/rfc-2151-raw-identifiers/items.rs:2:10: 2:15
    let mut _3: &mut std::fmt::Formatter<'_>; // in scope 0 at ui/rfcs/rfc-2151-raw-identifiers/items.rs:2:10: 2:15
    let mut _4: &str;                    // in scope 0 at ui/rfcs/rfc-2151-raw-identifiers/items.rs:2:10: 2:15
    let _5: &str;                        // in scope 0 at ui/rfcs/rfc-2151-raw-identifiers/items.rs:2:10: 2:15
    let mut _6: &dyn std::fmt::Debug;    // in scope 0 at ui/rfcs/rfc-2151-raw-identifiers/items.rs:3:19: 3:22
    let mut _7: &&u32;                   // in scope 0 at ui/rfcs/rfc-2151-raw-identifiers/items.rs:3:19: 3:22
    let _8: &&u32;                       // in scope 0 at ui/rfcs/rfc-2151-raw-identifiers/items.rs:3:19: 3:22
    let _9: &u32;                        // in scope 0 at ui/rfcs/rfc-2151-raw-identifiers/items.rs:3:19: 3:22

    bb0: {
        _3 = &mut (*_2);                 // scope 0 at ui/rfcs/rfc-2151-raw-identifiers/items.rs:2:10: 2:15
        _5 = const "IntWrapper";         // scope 0 at ui/rfcs/rfc-2151-raw-identifiers/items.rs:2:10: 2:15
                                         // mir::Constant
                                         // + span: ui/rfcs/rfc-2151-raw-identifiers/items.rs:2:10: 2:15
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _4 = _5;                         // scope 0 at ui/rfcs/rfc-2151-raw-identifiers/items.rs:2:10: 2:15
        _9 = &((*_1).0: u32);            // scope 0 at ui/rfcs/rfc-2151-raw-identifiers/items.rs:3:19: 3:22
        _8 = &_9;                        // scope 0 at ui/rfcs/rfc-2151-raw-identifiers/items.rs:3:19: 3:22
        _7 = _8;                         // scope 0 at ui/rfcs/rfc-2151-raw-identifiers/items.rs:3:19: 3:22
        _6 = move _7 as &dyn std::fmt::Debug (Pointer(Unsize)); // scope 0 at ui/rfcs/rfc-2151-raw-identifiers/items.rs:3:19: 3:22
        _0 = Formatter::<'_>::debug_tuple_field1_finish(move _3, move _4, move _6) -> bb1; // scope 0 at ui/rfcs/rfc-2151-raw-identifiers/items.rs:2:10: 2:15
                                         // mir::Constant
                                         // + span: ui/rfcs/rfc-2151-raw-identifiers/items.rs:2:10: 2:15
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: for<'b, 'a, 'c> fn(&'b mut Formatter<'_>, &'a str, &'c (dyn Debug + 'c)) -> Result<(), std::fmt::Error> {Formatter::<'_>::debug_tuple_field1_finish}, val: Value(<ZST>) }
    }

    bb1: {
        return;                          // scope 0 at ui/rfcs/rfc-2151-raw-identifiers/items.rs:2:15: 2:15
    }
}

fn <impl at ui/rfcs/rfc-2151-raw-identifiers/items.rs:2:17: 2:26>::eq(_1: &IntWrapper, _2: &IntWrapper) -> bool {
    debug self => _1;                    // in scope 0 at ui/rfcs/rfc-2151-raw-identifiers/items.rs:2:17: 2:26
    debug other => _2;                   // in scope 0 at ui/rfcs/rfc-2151-raw-identifiers/items.rs:2:17: 2:26
    let mut _0: bool;                    // return place in scope 0 at ui/rfcs/rfc-2151-raw-identifiers/items.rs:2:17: 2:26
    let mut _3: u32;                     // in scope 0 at ui/rfcs/rfc-2151-raw-identifiers/items.rs:3:19: 3:22
    let mut _4: u32;                     // in scope 0 at ui/rfcs/rfc-2151-raw-identifiers/items.rs:3:19: 3:22

    bb0: {
        _3 = ((*_1).0: u32);             // scope 0 at ui/rfcs/rfc-2151-raw-identifiers/items.rs:3:19: 3:22
        _4 = ((*_2).0: u32);             // scope 0 at ui/rfcs/rfc-2151-raw-identifiers/items.rs:3:19: 3:22
        _0 = Eq(move _3, move _4);       // scope 0 at ui/rfcs/rfc-2151-raw-identifiers/items.rs:3:19: 3:22
        return;                          // scope 0 at ui/rfcs/rfc-2151-raw-identifiers/items.rs:2:26: 2:26
    }
}

fn <impl at ui/rfcs/rfc-2151-raw-identifiers/items.rs:2:28: 2:30>::assert_receiver_is_total_eq(_1: &IntWrapper) -> () {
    debug self => _1;                    // in scope 0 at ui/rfcs/rfc-2151-raw-identifiers/items.rs:2:28: 2:30
    let mut _0: ();                      // return place in scope 0 at ui/rfcs/rfc-2151-raw-identifiers/items.rs:2:28: 2:30
    scope 1 {
    }

    bb0: {
        return;                          // scope 0 at ui/rfcs/rfc-2151-raw-identifiers/items.rs:2:30: 2:30
    }
}

fn <impl at ui/rfcs/rfc-2151-raw-identifiers/items.rs:5:10: 5:15>::fmt(_1: &HasKeywordField, _2: &mut Formatter<'_>) -> Result<(), std::fmt::Error> {
    debug self => _1;                    // in scope 0 at ui/rfcs/rfc-2151-raw-identifiers/items.rs:5:10: 5:15
    debug f => _2;                       // in scope 0 at ui/rfcs/rfc-2151-raw-identifiers/items.rs:5:10: 5:15
    let mut _0: std::result::Result<(), std::fmt::Error>; // return place in scope 0 at ui/rfcs/rfc-2151-raw-identifiers/items.rs:5:10: 5:15
    let mut _3: &mut std::fmt::Formatter<'_>; // in scope 0 at ui/rfcs/rfc-2151-raw-identifiers/items.rs:5:10: 5:15
    let mut _4: &str;                    // in scope 0 at ui/rfcs/rfc-2151-raw-identifiers/items.rs:5:10: 5:15
    let _5: &str;                        // in scope 0 at ui/rfcs/rfc-2151-raw-identifiers/items.rs:5:10: 5:15
    let mut _6: &str;                    // in scope 0 at ui/rfcs/rfc-2151-raw-identifiers/items.rs:7:5: 7:18
    let _7: &str;                        // in scope 0 at ui/rfcs/rfc-2151-raw-identifiers/items.rs:7:5: 7:18
    let mut _8: &dyn std::fmt::Debug;    // in scope 0 at ui/rfcs/rfc-2151-raw-identifiers/items.rs:7:5: 7:18
    let mut _9: &&u32;                   // in scope 0 at ui/rfcs/rfc-2151-raw-identifiers/items.rs:7:5: 7:18
    let _10: &&u32;                      // in scope 0 at ui/rfcs/rfc-2151-raw-identifiers/items.rs:7:5: 7:18
    let _11: &u32;                       // in scope 0 at ui/rfcs/rfc-2151-raw-identifiers/items.rs:7:5: 7:18

    bb0: {
        _3 = &mut (*_2);                 // scope 0 at ui/rfcs/rfc-2151-raw-identifiers/items.rs:5:10: 5:15
        _5 = const "HasKeywordField";    // scope 0 at ui/rfcs/rfc-2151-raw-identifiers/items.rs:5:10: 5:15
                                         // mir::Constant
                                         // + span: ui/rfcs/rfc-2151-raw-identifiers/items.rs:5:10: 5:15
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _4 = _5;                         // scope 0 at ui/rfcs/rfc-2151-raw-identifiers/items.rs:5:10: 5:15
        _7 = const "struct";             // scope 0 at ui/rfcs/rfc-2151-raw-identifiers/items.rs:7:5: 7:18
                                         // mir::Constant
                                         // + span: ui/rfcs/rfc-2151-raw-identifiers/items.rs:7:5: 7:18
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _6 = _7;                         // scope 0 at ui/rfcs/rfc-2151-raw-identifiers/items.rs:7:5: 7:18
        _11 = &((*_1).0: u32);           // scope 0 at ui/rfcs/rfc-2151-raw-identifiers/items.rs:7:5: 7:18
        _10 = &_11;                      // scope 0 at ui/rfcs/rfc-2151-raw-identifiers/items.rs:7:5: 7:18
        _9 = _10;                        // scope 0 at ui/rfcs/rfc-2151-raw-identifiers/items.rs:7:5: 7:18
        _8 = move _9 as &dyn std::fmt::Debug (Pointer(Unsize)); // scope 0 at ui/rfcs/rfc-2151-raw-identifiers/items.rs:7:5: 7:18
        _0 = Formatter::<'_>::debug_struct_field1_finish(move _3, move _4, move _6, move _8) -> bb1; // scope 0 at ui/rfcs/rfc-2151-raw-identifiers/items.rs:5:10: 5:15
                                         // mir::Constant
                                         // + span: ui/rfcs/rfc-2151-raw-identifiers/items.rs:5:10: 5:15
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: for<'b, 'a, 'c, 'd> fn(&'b mut Formatter<'_>, &'a str, &'c str, &'d (dyn Debug + 'd)) -> Result<(), std::fmt::Error> {Formatter::<'_>::debug_struct_field1_finish}, val: Value(<ZST>) }
    }

    bb1: {
        return;                          // scope 0 at ui/rfcs/rfc-2151-raw-identifiers/items.rs:5:15: 5:15
    }
}

fn <impl at ui/rfcs/rfc-2151-raw-identifiers/items.rs:5:17: 5:20>::cmp(_1: &HasKeywordField, _2: &HasKeywordField) -> std::cmp::Ordering {
    debug self => _1;                    // in scope 0 at ui/rfcs/rfc-2151-raw-identifiers/items.rs:5:17: 5:20
    debug other => _2;                   // in scope 0 at ui/rfcs/rfc-2151-raw-identifiers/items.rs:5:17: 5:20
    let mut _0: std::cmp::Ordering;      // return place in scope 0 at ui/rfcs/rfc-2151-raw-identifiers/items.rs:5:17: 5:20
    let mut _3: &u32;                    // in scope 0 at ui/rfcs/rfc-2151-raw-identifiers/items.rs:7:5: 7:18
    let _4: &u32;                        // in scope 0 at ui/rfcs/rfc-2151-raw-identifiers/items.rs:7:5: 7:18
    let mut _5: &u32;                    // in scope 0 at ui/rfcs/rfc-2151-raw-identifiers/items.rs:7:5: 7:18
    let _6: &u32;                        // in scope 0 at ui/rfcs/rfc-2151-raw-identifiers/items.rs:7:5: 7:18

    bb0: {
        _4 = &((*_1).0: u32);            // scope 0 at ui/rfcs/rfc-2151-raw-identifiers/items.rs:7:5: 7:18
        _3 = _4;                         // scope 0 at ui/rfcs/rfc-2151-raw-identifiers/items.rs:7:5: 7:18
        _6 = &((*_2).0: u32);            // scope 0 at ui/rfcs/rfc-2151-raw-identifiers/items.rs:7:5: 7:18
        _5 = _6;                         // scope 0 at ui/rfcs/rfc-2151-raw-identifiers/items.rs:7:5: 7:18
        _0 = <u32 as Ord>::cmp(move _3, move _5) -> bb1; // scope 0 at ui/rfcs/rfc-2151-raw-identifiers/items.rs:7:5: 7:18
                                         // mir::Constant
                                         // + span: ui/rfcs/rfc-2151-raw-identifiers/items.rs:7:5: 7:18
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a u32, &'b u32) -> std::cmp::Ordering {<u32 as Ord>::cmp}, val: Value(<ZST>) }
    }

    bb1: {
        return;                          // scope 0 at ui/rfcs/rfc-2151-raw-identifiers/items.rs:5:20: 5:20
    }
}

fn <impl at ui/rfcs/rfc-2151-raw-identifiers/items.rs:5:22: 5:32>::partial_cmp(_1: &HasKeywordField, _2: &HasKeywordField) -> Option<std::cmp::Ordering> {
    debug self => _1;                    // in scope 0 at ui/rfcs/rfc-2151-raw-identifiers/items.rs:5:22: 5:32
    debug other => _2;                   // in scope 0 at ui/rfcs/rfc-2151-raw-identifiers/items.rs:5:22: 5:32
    let mut _0: std::option::Option<std::cmp::Ordering>; // return place in scope 0 at ui/rfcs/rfc-2151-raw-identifiers/items.rs:5:22: 5:32
    let mut _3: &u32;                    // in scope 0 at ui/rfcs/rfc-2151-raw-identifiers/items.rs:7:5: 7:18
    let _4: &u32;                        // in scope 0 at ui/rfcs/rfc-2151-raw-identifiers/items.rs:7:5: 7:18
    let mut _5: &u32;                    // in scope 0 at ui/rfcs/rfc-2151-raw-identifiers/items.rs:7:5: 7:18
    let _6: &u32;                        // in scope 0 at ui/rfcs/rfc-2151-raw-identifiers/items.rs:7:5: 7:18

    bb0: {
        _4 = &((*_1).0: u32);            // scope 0 at ui/rfcs/rfc-2151-raw-identifiers/items.rs:7:5: 7:18
        _3 = _4;                         // scope 0 at ui/rfcs/rfc-2151-raw-identifiers/items.rs:7:5: 7:18
        _6 = &((*_2).0: u32);            // scope 0 at ui/rfcs/rfc-2151-raw-identifiers/items.rs:7:5: 7:18
        _5 = _6;                         // scope 0 at ui/rfcs/rfc-2151-raw-identifiers/items.rs:7:5: 7:18
        _0 = <u32 as PartialOrd>::partial_cmp(move _3, move _5) -> bb1; // scope 0 at ui/rfcs/rfc-2151-raw-identifiers/items.rs:7:5: 7:18
                                         // mir::Constant
                                         // + span: ui/rfcs/rfc-2151-raw-identifiers/items.rs:7:5: 7:18
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a u32, &'b u32) -> Option<std::cmp::Ordering> {<u32 as PartialOrd>::partial_cmp}, val: Value(<ZST>) }
    }

    bb1: {
        return;                          // scope 0 at ui/rfcs/rfc-2151-raw-identifiers/items.rs:5:32: 5:32
    }
}

fn <impl at ui/rfcs/rfc-2151-raw-identifiers/items.rs:5:34: 5:43>::eq(_1: &HasKeywordField, _2: &HasKeywordField) -> bool {
    debug self => _1;                    // in scope 0 at ui/rfcs/rfc-2151-raw-identifiers/items.rs:5:34: 5:43
    debug other => _2;                   // in scope 0 at ui/rfcs/rfc-2151-raw-identifiers/items.rs:5:34: 5:43
    let mut _0: bool;                    // return place in scope 0 at ui/rfcs/rfc-2151-raw-identifiers/items.rs:5:34: 5:43
    let mut _3: u32;                     // in scope 0 at ui/rfcs/rfc-2151-raw-identifiers/items.rs:7:5: 7:18
    let mut _4: u32;                     // in scope 0 at ui/rfcs/rfc-2151-raw-identifiers/items.rs:7:5: 7:18

    bb0: {
        _3 = ((*_1).0: u32);             // scope 0 at ui/rfcs/rfc-2151-raw-identifiers/items.rs:7:5: 7:18
        _4 = ((*_2).0: u32);             // scope 0 at ui/rfcs/rfc-2151-raw-identifiers/items.rs:7:5: 7:18
        _0 = Eq(move _3, move _4);       // scope 0 at ui/rfcs/rfc-2151-raw-identifiers/items.rs:7:5: 7:18
        return;                          // scope 0 at ui/rfcs/rfc-2151-raw-identifiers/items.rs:5:43: 5:43
    }
}

fn <impl at ui/rfcs/rfc-2151-raw-identifiers/items.rs:5:45: 5:47>::assert_receiver_is_total_eq(_1: &HasKeywordField) -> () {
    debug self => _1;                    // in scope 0 at ui/rfcs/rfc-2151-raw-identifiers/items.rs:5:45: 5:47
    let mut _0: ();                      // return place in scope 0 at ui/rfcs/rfc-2151-raw-identifiers/items.rs:5:45: 5:47
    scope 1 {
    }

    bb0: {
        return;                          // scope 0 at ui/rfcs/rfc-2151-raw-identifiers/items.rs:5:47: 5:47
    }
}

fn <impl at ui/rfcs/rfc-2151-raw-identifiers/items.rs:5:49: 5:53>::hash(_1: &HasKeywordField, _2: &mut __H) -> () {
    debug self => _1;                    // in scope 0 at ui/rfcs/rfc-2151-raw-identifiers/items.rs:5:49: 5:53
    debug state => _2;                   // in scope 0 at ui/rfcs/rfc-2151-raw-identifiers/items.rs:5:49: 5:53
    let mut _0: ();                      // return place in scope 0 at ui/rfcs/rfc-2151-raw-identifiers/items.rs:5:49: 5:53
    let mut _3: &u32;                    // in scope 0 at ui/rfcs/rfc-2151-raw-identifiers/items.rs:7:5: 7:18
    let _4: &u32;                        // in scope 0 at ui/rfcs/rfc-2151-raw-identifiers/items.rs:7:5: 7:18
    let mut _5: &mut __H;                // in scope 0 at ui/rfcs/rfc-2151-raw-identifiers/items.rs:5:49: 5:53

    bb0: {
        _4 = &((*_1).0: u32);            // scope 0 at ui/rfcs/rfc-2151-raw-identifiers/items.rs:7:5: 7:18
        _3 = _4;                         // scope 0 at ui/rfcs/rfc-2151-raw-identifiers/items.rs:7:5: 7:18
        _5 = &mut (*_2);                 // scope 0 at ui/rfcs/rfc-2151-raw-identifiers/items.rs:5:49: 5:53
        _0 = <u32 as Hash>::hash::<__H>(move _3, move _5) -> bb1; // scope 0 at ui/rfcs/rfc-2151-raw-identifiers/items.rs:7:5: 7:18
                                         // mir::Constant
                                         // + span: ui/rfcs/rfc-2151-raw-identifiers/items.rs:7:5: 7:18
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a u32, &'b mut __H) {<u32 as Hash>::hash::<__H>}, val: Value(<ZST>) }
    }

    bb1: {
        return;                          // scope 0 at ui/rfcs/rfc-2151-raw-identifiers/items.rs:5:53: 5:53
    }
}

fn <impl at ui/rfcs/rfc-2151-raw-identifiers/items.rs:5:61: 5:66>::clone(_1: &HasKeywordField) -> HasKeywordField {
    debug self => _1;                    // in scope 0 at ui/rfcs/rfc-2151-raw-identifiers/items.rs:5:61: 5:66
    let mut _0: HasKeywordField;         // return place in scope 0 at ui/rfcs/rfc-2151-raw-identifiers/items.rs:5:61: 5:66
    scope 1 {
    }

    bb0: {
        _0 = (*_1);                      // scope 1 at ui/rfcs/rfc-2151-raw-identifiers/items.rs:5:61: 5:66
        return;                          // scope 0 at ui/rfcs/rfc-2151-raw-identifiers/items.rs:5:66: 5:66
    }
}

fn <impl at ui/rfcs/rfc-2151-raw-identifiers/items.rs:5:68: 5:75>::default() -> HasKeywordField {
    let mut _0: HasKeywordField;         // return place in scope 0 at ui/rfcs/rfc-2151-raw-identifiers/items.rs:5:68: 5:75
    let mut _1: u32;                     // in scope 0 at ui/rfcs/rfc-2151-raw-identifiers/items.rs:7:5: 7:18

    bb0: {
        _1 = <u32 as Default>::default() -> bb1; // scope 0 at ui/rfcs/rfc-2151-raw-identifiers/items.rs:7:5: 7:18
                                         // mir::Constant
                                         // + span: ui/rfcs/rfc-2151-raw-identifiers/items.rs:7:5: 7:18
                                         // + literal: Const { ty: fn() -> u32 {<u32 as Default>::default}, val: Value(<ZST>) }
    }

    bb1: {
        _0 = HasKeywordField { struct: move _1 }; // scope 0 at ui/rfcs/rfc-2151-raw-identifiers/items.rs:5:68: 5:75
        return;                          // scope 0 at ui/rfcs/rfc-2151-raw-identifiers/items.rs:5:75: 5:75
    }
}

fn <impl at ui/rfcs/rfc-2151-raw-identifiers/items.rs:15:1: 15:28>::r#trait(_1: &Generic<u32>) -> u32 {
    debug self => _1;                    // in scope 0 at ui/rfcs/rfc-2151-raw-identifiers/items.rs:16:16: 16:21
    let mut _0: u32;                     // return place in scope 0 at ui/rfcs/rfc-2151-raw-identifiers/items.rs:16:26: 16:29

    bb0: {
        _0 = ((*_1).0: u32);             // scope 0 at ui/rfcs/rfc-2151-raw-identifiers/items.rs:17:9: 17:15
        return;                          // scope 0 at ui/rfcs/rfc-2151-raw-identifiers/items.rs:18:6: 18:6
    }
}

fn main() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/rfcs/rfc-2151-raw-identifiers/items.rs:21:15: 21:15
    let mut _1: (&IntWrapper, &IntWrapper); // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _2: &IntWrapper;             // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let mut _3: &IntWrapper;             // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let _4: &IntWrapper;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
    let _5: &IntWrapper;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
    let mut _6: bool;                    // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    let mut _7: bool;                    // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
    let mut _8: &IntWrapper;             // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
    let mut _9: &IntWrapper;             // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
    let _11: !;                          // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
    let mut _12: core::panicking::AssertKind; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
    let mut _13: &IntWrapper;            // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let _14: &IntWrapper;                // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let mut _15: &IntWrapper;            // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let _16: &IntWrapper;                // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let mut _17: std::option::Option<std::fmt::Arguments<'_>>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
    let mut _18: IntWrapper;             // in scope 0 at ui/rfcs/rfc-2151-raw-identifiers/items.rs:24:11: 24:24
    let _19: u32;                        // in scope 0 at ui/rfcs/rfc-2151-raw-identifiers/items.rs:25:22: 25:30
    let mut _20: (&u32, &u32);           // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _21: &u32;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let mut _22: &u32;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _25: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    let mut _26: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
    let mut _27: u32;                    // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
    let mut _28: u32;                    // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
    let _30: !;                          // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
    let mut _31: core::panicking::AssertKind; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
    let mut _32: &u32;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let _33: &u32;                       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let mut _34: &u32;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let _35: &u32;                       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let mut _36: std::option::Option<std::fmt::Arguments<'_>>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
    let mut _37: (&&str, &std::string::String); // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _38: &&str;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let mut _39: &std::string::String;   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let _40: std::string::String;        // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:117:23: 120:6
    let _41: std::string::String;        // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:13: 118:16
    let mut _42: std::fmt::Arguments<'_>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
    let mut _43: &[&str];                // in scope 0 at ui/rfcs/rfc-2151-raw-identifiers/items.rs:28:57: 28:63
    let mut _44: &[&str; 1];             // in scope 0 at ui/rfcs/rfc-2151-raw-identifiers/items.rs:28:57: 28:63
    let _45: &[&str; 1];                 // in scope 0 at ui/rfcs/rfc-2151-raw-identifiers/items.rs:28:57: 28:63
    let mut _46: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
    let mut _47: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
    let _48: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
    let _49: [core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
    let mut _50: core::fmt::ArgumentV1<'_>; // in scope 0 at ui/rfcs/rfc-2151-raw-identifiers/items.rs:28:65: 28:96
    let mut _51: &HasKeywordField;       // in scope 0 at ui/rfcs/rfc-2151-raw-identifiers/items.rs:28:65: 28:96
    let _52: &HasKeywordField;           // in scope 0 at ui/rfcs/rfc-2151-raw-identifiers/items.rs:28:65: 28:96
    let _53: &&str;                      // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
    let _54: &std::string::String;       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
    let mut _55: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    let mut _56: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
    let mut _57: &&str;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
    let mut _58: &std::string::String;   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
    let _60: !;                          // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
    let mut _61: core::panicking::AssertKind; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
    let mut _62: &&str;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let _63: &&str;                      // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let mut _64: &std::string::String;   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let _65: &std::string::String;       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let mut _66: std::option::Option<std::fmt::Arguments<'_>>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
    let mut _67: (&i32, &i32);           // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _68: &i32;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let mut _69: &i32;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let _70: &i32;                       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
    let _71: &i32;                       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
    let mut _72: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    let mut _73: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
    let mut _74: i32;                    // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
    let mut _75: i32;                    // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
    let _77: !;                          // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
    let mut _78: core::panicking::AssertKind; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
    let mut _79: &i32;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let _80: &i32;                       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let mut _81: &i32;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let _82: &i32;                       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let mut _83: std::option::Option<std::fmt::Arguments<'_>>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
    let mut _84: (&u32, &u32);           // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _85: &u32;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let mut _86: &u32;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let _87: u32;                        // in scope 0 at ui/rfcs/rfc-2151-raw-identifiers/items.rs:31:19: 31:39
    let mut _88: &Generic<u32>;          // in scope 0 at ui/rfcs/rfc-2151-raw-identifiers/items.rs:31:19: 31:39
    let _89: &u32;                       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
    let _90: &u32;                       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
    let mut _91: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    let mut _92: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
    let mut _93: u32;                    // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
    let mut _94: u32;                    // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
    let _96: !;                          // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
    let mut _97: core::panicking::AssertKind; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
    let mut _98: &u32;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let _99: &u32;                       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let mut _100: &u32;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let _101: &u32;                      // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let mut _102: std::option::Option<std::fmt::Arguments<'_>>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
    let mut _103: &Generic<u32>;         // in scope 0 at ui/rfcs/rfc-2151-raw-identifiers/items.rs:31:19: 31:39
    let mut _104: &u32;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let mut _105: &Generic<i32>;         // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _106: &i32;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let mut _107: &HasKeywordField;      // in scope 0 at ui/rfcs/rfc-2151-raw-identifiers/items.rs:28:65: 28:96
    let mut _108: &[&str; 1];            // in scope 0 at ui/rfcs/rfc-2151-raw-identifiers/items.rs:28:57: 28:63
    let mut _109: &&str;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let mut _111: &IntWrapper;           // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _112: &IntWrapper;           // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    scope 1 {
        debug left_val => _4;            // in scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        debug right_val => _5;           // in scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        let _10: core::panicking::AssertKind; // in scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
        scope 2 {
            debug kind => _10;           // in scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
        }
    }
    scope 3 {
        debug struct => _19;             // in scope 3 at ui/rfcs/rfc-2151-raw-identifiers/items.rs:25:22: 25:30
        let _23: &u32;                   // in scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        let _24: &u32;                   // in scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        let mut _110: &u32;              // in scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        scope 4 {
            debug left_val => _23;       // in scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
            debug right_val => _24;      // in scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
            let _29: core::panicking::AssertKind; // in scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
            scope 5 {
                debug kind => _29;       // in scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
            }
        }
    }
    scope 6 {
        debug res => _41;                // in scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:13: 118:16
    }
    scope 7 {
        debug left_val => _53;           // in scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        debug right_val => _54;          // in scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        let _59: core::panicking::AssertKind; // in scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
        scope 8 {
            debug kind => _59;           // in scope 8 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
        }
    }
    scope 9 {
        debug left_val => _70;           // in scope 9 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        debug right_val => _71;          // in scope 9 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        let _76: core::panicking::AssertKind; // in scope 9 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
        scope 10 {
            debug kind => _76;           // in scope 10 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
        }
    }
    scope 11 {
        debug left_val => _89;           // in scope 11 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        debug right_val => _90;          // in scope 11 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        let _95: core::panicking::AssertKind; // in scope 11 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
        scope 12 {
            debug kind => _95;           // in scope 12 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
        }
    }

    bb0: {
        _112 = const _;                  // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
                                         // + literal: Const { ty: &IntWrapper, val: Unevaluated(main, [], Some(promoted[9])) }
        _2 = _112;                       // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _111 = const _;                  // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // + literal: Const { ty: &IntWrapper, val: Unevaluated(main, [], Some(promoted[8])) }
        _3 = _111;                       // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _1 = (move _2, move _3);         // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _4 = (_1.0: &IntWrapper);        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _5 = (_1.1: &IntWrapper);        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _8 = _4;                         // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
        _9 = _5;                         // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
        _7 = <IntWrapper as PartialEq>::eq(move _8, move _9) -> bb1; // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a IntWrapper, &'b IntWrapper) -> bool {<IntWrapper as PartialEq>::eq}, val: Value(<ZST>) }
    }

    bb1: {
        _6 = Not(move _7);               // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
        switchInt(move _6) -> [0: bb3, otherwise: bb2]; // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    }

    bb2: {
        _10 = const core::panicking::AssertKind::Eq; // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _12 = const core::panicking::AssertKind::Eq; // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _14 = _4;                        // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _13 = _14;                       // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _16 = _5;                        // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _15 = _16;                       // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _17 = Option::<Arguments<'_>>::None; // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
        _11 = core::panicking::assert_failed::<IntWrapper, IntWrapper>(move _12, move _13, move _15, move _17); // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:53
                                         // + literal: Const { ty: for<'a, 'b, 'c> fn(core::panicking::AssertKind, &'a IntWrapper, &'b IntWrapper, Option<Arguments<'c>>) -> ! {core::panicking::assert_failed::<IntWrapper, IntWrapper>}, val: Value(<ZST>) }
    }

    bb3: {
        _18 = const IntWrapper(2_u32);   // scope 0 at ui/rfcs/rfc-2151-raw-identifiers/items.rs:24:11: 24:24
                                         // mir::Constant
                                         // + span: ui/rfcs/rfc-2151-raw-identifiers/items.rs:24:11: 24:24
                                         // + literal: Const { ty: IntWrapper, val: Value(Scalar(0x00000002)) }
        _19 = (_18.0: u32);              // scope 0 at ui/rfcs/rfc-2151-raw-identifiers/items.rs:25:22: 25:30
        _110 = const _;                  // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
                                         // + literal: Const { ty: &u32, val: Unevaluated(main, [], Some(promoted[7])) }
        _21 = _110;                      // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _22 = &_19;                      // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _20 = (move _21, move _22);      // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _23 = (_20.0: &u32);             // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _24 = (_20.1: &u32);             // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _27 = const 2_u32;               // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
        _28 = (*_24);                    // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
        _26 = Eq(move _27, move _28);    // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
        _25 = Not(move _26);             // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
        switchInt(move _25) -> [0: bb5, otherwise: bb4]; // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    }

    bb4: {
        _29 = const core::panicking::AssertKind::Eq; // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _31 = const core::panicking::AssertKind::Eq; // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _33 = _23;                       // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _32 = _33;                       // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _35 = _24;                       // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _34 = _35;                       // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _36 = Option::<Arguments<'_>>::None; // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
        _30 = core::panicking::assert_failed::<u32, u32>(move _31, move _32, move _34, move _36); // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:53
                                         // + literal: Const { ty: for<'a, 'b, 'c> fn(core::panicking::AssertKind, &'a u32, &'b u32, Option<Arguments<'c>>) -> ! {core::panicking::assert_failed::<u32, u32>}, val: Value(<ZST>) }
    }

    bb5: {
        _109 = const _;                  // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
                                         // + literal: Const { ty: &&str, val: Unevaluated(main, [], Some(promoted[6])) }
        _38 = _109;                      // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _108 = const _;                  // scope 0 at ui/rfcs/rfc-2151-raw-identifiers/items.rs:28:57: 28:63
                                         // mir::Constant
                                         // + span: ui/rfcs/rfc-2151-raw-identifiers/items.rs:28:57: 28:63
                                         // + literal: Const { ty: &[&str; 1], val: Unevaluated(main, [], Some(promoted[5])) }
        _45 = _108;                      // scope 0 at ui/rfcs/rfc-2151-raw-identifiers/items.rs:28:57: 28:63
        _44 = _45;                       // scope 0 at ui/rfcs/rfc-2151-raw-identifiers/items.rs:28:57: 28:63
        _43 = move _44 as &[&str] (Pointer(Unsize)); // scope 0 at ui/rfcs/rfc-2151-raw-identifiers/items.rs:28:57: 28:63
        _107 = const _;                  // scope 0 at ui/rfcs/rfc-2151-raw-identifiers/items.rs:28:65: 28:96
                                         // mir::Constant
                                         // + span: ui/rfcs/rfc-2151-raw-identifiers/items.rs:28:65: 28:96
                                         // + literal: Const { ty: &HasKeywordField, val: Unevaluated(main, [], Some(promoted[4])) }
        _52 = _107;                      // scope 0 at ui/rfcs/rfc-2151-raw-identifiers/items.rs:28:65: 28:96
        _51 = _52;                       // scope 0 at ui/rfcs/rfc-2151-raw-identifiers/items.rs:28:65: 28:96
        _50 = core::fmt::ArgumentV1::<'_>::new_debug::<HasKeywordField>(move _51) -> bb6; // scope 0 at ui/rfcs/rfc-2151-raw-identifiers/items.rs:28:65: 28:96
                                         // mir::Constant
                                         // + span: ui/rfcs/rfc-2151-raw-identifiers/items.rs:28:65: 28:96
                                         // + user_ty: UserType(1)
                                         // + literal: Const { ty: for<'b> fn(&'b HasKeywordField) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_debug::<HasKeywordField>}, val: Value(<ZST>) }
    }

    bb6: {
        _49 = [move _50];                // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
        _48 = &_49;                      // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
        _47 = _48;                       // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
        _46 = move _47 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
        _42 = Arguments::<'_>::new_v1(move _43, move _46) -> bb7; // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb7: {
        _41 = format(move _42) -> bb8;   // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:19: 118:80
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:19: 118:38
                                         // + literal: Const { ty: for<'a> fn(Arguments<'a>) -> String {format}, val: Value(<ZST>) }
    }

    bb8: {
        _40 = move _41;                  // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:119:9: 119:12
        _39 = &_40;                      // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _37 = (move _38, move _39);      // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _53 = (_37.0: &&str);            // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _54 = (_37.1: &std::string::String); // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _57 = _53;                       // scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
        _58 = _54;                       // scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
        _56 = <&str as PartialEq<String>>::eq(move _57, move _58) -> [return: bb9, unwind: bb18]; // scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a &str, &'b String) -> bool {<&str as PartialEq<String>>::eq}, val: Value(<ZST>) }
    }

    bb9: {
        _55 = Not(move _56);             // scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
        switchInt(move _55) -> [0: bb11, otherwise: bb10]; // scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    }

    bb10: {
        _59 = const core::panicking::AssertKind::Eq; // scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _61 = const core::panicking::AssertKind::Eq; // scope 8 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _63 = _53;                       // scope 8 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _62 = _63;                       // scope 8 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _65 = _54;                       // scope 8 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _64 = _65;                       // scope 8 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _66 = Option::<Arguments<'_>>::None; // scope 8 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
        _60 = core::panicking::assert_failed::<&str, String>(move _61, move _62, move _64, move _66) -> bb18; // scope 8 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:53
                                         // + literal: Const { ty: for<'a, 'b, 'c> fn(core::panicking::AssertKind, &'a &str, &'b String, Option<Arguments<'c>>) -> ! {core::panicking::assert_failed::<&str, String>}, val: Value(<ZST>) }
    }

    bb11: {
        drop(_40) -> bb12;               // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:48:9: 48:10
    }

    bb12: {
        _106 = const _;                  // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
                                         // + literal: Const { ty: &i32, val: Unevaluated(main, [], Some(promoted[3])) }
        _68 = _106;                      // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _105 = const _;                  // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // + literal: Const { ty: &Generic<i32>, val: Unevaluated(main, [], Some(promoted[2])) }
        _69 = &((*_105).0: i32);         // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _67 = (move _68, move _69);      // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _70 = (_67.0: &i32);             // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _71 = (_67.1: &i32);             // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _74 = const 4_i32;               // scope 9 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
        _75 = (*_71);                    // scope 9 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
        _73 = Eq(move _74, move _75);    // scope 9 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
        _72 = Not(move _73);             // scope 9 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
        switchInt(move _72) -> [0: bb14, otherwise: bb13]; // scope 9 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    }

    bb13: {
        _76 = const core::panicking::AssertKind::Eq; // scope 9 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _78 = const core::panicking::AssertKind::Eq; // scope 10 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _80 = _70;                       // scope 10 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _79 = _80;                       // scope 10 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _82 = _71;                       // scope 10 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _81 = _82;                       // scope 10 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _83 = Option::<Arguments<'_>>::None; // scope 10 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
        _77 = core::panicking::assert_failed::<i32, i32>(move _78, move _79, move _81, move _83); // scope 10 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:53
                                         // + literal: Const { ty: for<'a, 'b, 'c> fn(core::panicking::AssertKind, &'a i32, &'b i32, Option<Arguments<'c>>) -> ! {core::panicking::assert_failed::<i32, i32>}, val: Value(<ZST>) }
    }

    bb14: {
        _104 = const _;                  // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
                                         // + literal: Const { ty: &u32, val: Unevaluated(main, [], Some(promoted[1])) }
        _85 = _104;                      // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _103 = const _;                  // scope 0 at ui/rfcs/rfc-2151-raw-identifiers/items.rs:31:19: 31:39
                                         // mir::Constant
                                         // + span: ui/rfcs/rfc-2151-raw-identifiers/items.rs:31:19: 31:39
                                         // + literal: Const { ty: &Generic<u32>, val: Unevaluated(main, [], Some(promoted[0])) }
        _88 = _103;                      // scope 0 at ui/rfcs/rfc-2151-raw-identifiers/items.rs:31:19: 31:39
        _87 = <Generic<u32> as Trait>::r#trait(move _88) -> bb15; // scope 0 at ui/rfcs/rfc-2151-raw-identifiers/items.rs:31:19: 31:39
                                         // mir::Constant
                                         // + span: ui/rfcs/rfc-2151-raw-identifiers/items.rs:31:30: 31:37
                                         // + literal: Const { ty: for<'a> fn(&'a Generic<u32>) -> u32 {<Generic<u32> as Trait>::r#trait}, val: Value(<ZST>) }
    }

    bb15: {
        _86 = &_87;                      // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _84 = (move _85, move _86);      // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _89 = (_84.0: &u32);             // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _90 = (_84.1: &u32);             // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _93 = const 5_u32;               // scope 11 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
        _94 = (*_90);                    // scope 11 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
        _92 = Eq(move _93, move _94);    // scope 11 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
        _91 = Not(move _92);             // scope 11 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
        switchInt(move _91) -> [0: bb17, otherwise: bb16]; // scope 11 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    }

    bb16: {
        _95 = const core::panicking::AssertKind::Eq; // scope 11 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _97 = const core::panicking::AssertKind::Eq; // scope 12 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _99 = _89;                       // scope 12 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _98 = _99;                       // scope 12 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _101 = _90;                      // scope 12 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _100 = _101;                     // scope 12 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _102 = Option::<Arguments<'_>>::None; // scope 12 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
        _96 = core::panicking::assert_failed::<u32, u32>(move _97, move _98, move _100, move _102); // scope 12 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:53
                                         // + literal: Const { ty: for<'a, 'b, 'c> fn(core::panicking::AssertKind, &'a u32, &'b u32, Option<Arguments<'c>>) -> ! {core::panicking::assert_failed::<u32, u32>}, val: Value(<ZST>) }
    }

    bb17: {
        return;                          // scope 0 at ui/rfcs/rfc-2151-raw-identifiers/items.rs:32:2: 32:2
    }

    bb18 (cleanup): {
        drop(_40) -> bb19;               // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:48:9: 48:10
    }

    bb19 (cleanup): {
        resume;                          // scope 0 at ui/rfcs/rfc-2151-raw-identifiers/items.rs:21:1: 32:2
    }
}

promoted[0] in main: &Generic<u32> = {
    let mut _0: &Generic<u32>;           // return place in scope 0 at ui/rfcs/rfc-2151-raw-identifiers/items.rs:31:19: 31:39
    let mut _1: Generic<u32>;            // in scope 0 at ui/rfcs/rfc-2151-raw-identifiers/items.rs:31:19: 31:29

    bb0: {
        _1 = Generic::<u32>(const 5_u32); // scope 0 at ui/rfcs/rfc-2151-raw-identifiers/items.rs:31:19: 31:29
        _0 = &_1;                        // scope 0 at ui/rfcs/rfc-2151-raw-identifiers/items.rs:31:19: 31:39
        return;                          // scope 0 at ui/rfcs/rfc-2151-raw-identifiers/items.rs:31:19: 31:39
    }
}

promoted[1] in main: &u32 = {
    let mut _0: &u32;                    // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let mut _1: u32;                     // in scope 0 at ui/rfcs/rfc-2151-raw-identifiers/items.rs:31:16: 31:17

    bb0: {
        _1 = const 5_u32;                // scope 0 at ui/rfcs/rfc-2151-raw-identifiers/items.rs:31:16: 31:17
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    }
}

promoted[2] in main: &Generic<i32> = {
    let mut _0: &Generic<i32>;           // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _1: Generic<i32>;            // in scope 0 at ui/rfcs/rfc-2151-raw-identifiers/items.rs:30:19: 30:29

    bb0: {
        _1 = Generic::<i32>(const 4_i32); // scope 0 at ui/rfcs/rfc-2151-raw-identifiers/items.rs:30:19: 30:29
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    }
}

promoted[3] in main: &i32 = {
    let mut _0: &i32;                    // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let mut _1: i32;                     // in scope 0 at ui/rfcs/rfc-2151-raw-identifiers/items.rs:30:16: 30:17

    bb0: {
        _1 = const 4_i32;                // scope 0 at ui/rfcs/rfc-2151-raw-identifiers/items.rs:30:16: 30:17
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    }
}

promoted[4] in main: &HasKeywordField = {
    let mut _0: &HasKeywordField;        // return place in scope 0 at ui/rfcs/rfc-2151-raw-identifiers/items.rs:28:65: 28:96
    let mut _1: HasKeywordField;         // in scope 0 at ui/rfcs/rfc-2151-raw-identifiers/items.rs:28:65: 28:96

    bb0: {
        _1 = HasKeywordField { struct: const 3_u32 }; // scope 0 at ui/rfcs/rfc-2151-raw-identifiers/items.rs:28:65: 28:96
        _0 = &_1;                        // scope 0 at ui/rfcs/rfc-2151-raw-identifiers/items.rs:28:65: 28:96
        return;                          // scope 0 at ui/rfcs/rfc-2151-raw-identifiers/items.rs:28:65: 28:96
    }
}

promoted[5] in main: &[&str; 1] = {
    let mut _0: &[&str; 1];              // return place in scope 0 at ui/rfcs/rfc-2151-raw-identifiers/items.rs:28:57: 28:63
    let mut _1: [&str; 1];               // in scope 0 at ui/rfcs/rfc-2151-raw-identifiers/items.rs:28:57: 28:63

    bb0: {
        _1 = [const ""];                 // scope 0 at ui/rfcs/rfc-2151-raw-identifiers/items.rs:28:57: 28:63
                                         // mir::Constant
                                         // + span: ui/rfcs/rfc-2151-raw-identifiers/items.rs:28:57: 28:63
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at ui/rfcs/rfc-2151-raw-identifiers/items.rs:28:57: 28:63
        return;                          // scope 0 at ui/rfcs/rfc-2151-raw-identifiers/items.rs:28:57: 28:63
    }
}

promoted[6] in main: &&str = {
    let mut _0: &&str;                   // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let mut _1: &str;                    // in scope 0 at ui/rfcs/rfc-2151-raw-identifiers/items.rs:28:16: 28:47

    bb0: {
        _1 = const "HasKeywordField { struct: 3 }"; // scope 0 at ui/rfcs/rfc-2151-raw-identifiers/items.rs:28:16: 28:47
                                         // mir::Constant
                                         // + span: ui/rfcs/rfc-2151-raw-identifiers/items.rs:28:16: 28:47
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    }
}

promoted[7] in main: &u32 = {
    let mut _0: &u32;                    // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let mut _1: u32;                     // in scope 0 at ui/rfcs/rfc-2151-raw-identifiers/items.rs:25:46: 25:47

    bb0: {
        _1 = const 2_u32;                // scope 0 at ui/rfcs/rfc-2151-raw-identifiers/items.rs:25:46: 25:47
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    }
}

promoted[8] in main: &IntWrapper = {
    let mut _0: &IntWrapper;             // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _1: IntWrapper;              // in scope 0 at ui/rfcs/rfc-2151-raw-identifiers/items.rs:22:31: 22:46

    bb0: {
        _1 = IntWrapper(const 1_u32);    // scope 0 at ui/rfcs/rfc-2151-raw-identifiers/items.rs:22:31: 22:46
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    }
}

promoted[9] in main: &IntWrapper = {
    let mut _0: &IntWrapper;             // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let mut _1: IntWrapper;              // in scope 0 at ui/rfcs/rfc-2151-raw-identifiers/items.rs:22:16: 22:29

    bb0: {
        _1 = IntWrapper(const 1_u32);    // scope 0 at ui/rfcs/rfc-2151-raw-identifiers/items.rs:22:16: 22:29
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    }
}

fn IntWrapper(_1: u32) -> IntWrapper {
    let mut _0: IntWrapper;              // return place in scope 0 at ui/rfcs/rfc-2151-raw-identifiers/items.rs:3:1: 3:18

    bb0: {
        _0 = IntWrapper(move _1);        // scope 0 at ui/rfcs/rfc-2151-raw-identifiers/items.rs:3:1: 3:18
        return;                          // scope 0 at ui/rfcs/rfc-2151-raw-identifiers/items.rs:3:1: 3:18
    }
}

// MIR FOR CTFE
fn IntWrapper(_1: u32) -> IntWrapper {
    let mut _0: IntWrapper;              // return place in scope 0 at ui/rfcs/rfc-2151-raw-identifiers/items.rs:3:1: 3:18

    bb0: {
        _0 = IntWrapper(move _1);        // scope 0 at ui/rfcs/rfc-2151-raw-identifiers/items.rs:3:1: 3:18
        return;                          // scope 0 at ui/rfcs/rfc-2151-raw-identifiers/items.rs:3:1: 3:18
    }
}

fn Generic(_1: T) -> Generic<T> {
    let mut _0: Generic<T>;              // return place in scope 0 at ui/rfcs/rfc-2151-raw-identifiers/items.rs:10:1: 10:20

    bb0: {
        _0 = Generic::<T>(move _1);      // scope 0 at ui/rfcs/rfc-2151-raw-identifiers/items.rs:10:1: 10:20
        return;                          // scope 0 at ui/rfcs/rfc-2151-raw-identifiers/items.rs:10:1: 10:20
    }
}

// MIR FOR CTFE
fn Generic(_1: T) -> Generic<T> {
    let mut _0: Generic<T>;              // return place in scope 0 at ui/rfcs/rfc-2151-raw-identifiers/items.rs:10:1: 10:20

    bb0: {
        _0 = Generic::<T>(move _1);      // scope 0 at ui/rfcs/rfc-2151-raw-identifiers/items.rs:10:1: 10:20
        return;                          // scope 0 at ui/rfcs/rfc-2151-raw-identifiers/items.rs:10:1: 10:20
    }
}
