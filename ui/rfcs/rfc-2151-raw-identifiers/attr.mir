// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
fn <impl at ui/rfcs/rfc-2151-raw-identifiers/attr.rs:9:12: 9:19>::fmt(_1: &Test2, _2: &mut Formatter<'_>) -> Result<(), std::fmt::Error> {
    debug self => _1;                    // in scope 0 at ui/rfcs/rfc-2151-raw-identifiers/attr.rs:9:12: 9:19
    debug f => _2;                       // in scope 0 at ui/rfcs/rfc-2151-raw-identifiers/attr.rs:9:12: 9:19
    let mut _0: std::result::Result<(), std::fmt::Error>; // return place in scope 0 at ui/rfcs/rfc-2151-raw-identifiers/attr.rs:9:12: 9:19
    let mut _3: &mut std::fmt::Formatter<'_>; // in scope 0 at ui/rfcs/rfc-2151-raw-identifiers/attr.rs:9:12: 9:19
    let mut _4: &str;                    // in scope 0 at ui/rfcs/rfc-2151-raw-identifiers/attr.rs:9:12: 9:19
    let _5: &str;                        // in scope 0 at ui/rfcs/rfc-2151-raw-identifiers/attr.rs:9:12: 9:19
    let mut _6: &dyn std::fmt::Debug;    // in scope 0 at ui/rfcs/rfc-2151-raw-identifiers/attr.rs:10:51: 10:54
    let mut _7: &&u32;                   // in scope 0 at ui/rfcs/rfc-2151-raw-identifiers/attr.rs:10:51: 10:54
    let _8: &&u32;                       // in scope 0 at ui/rfcs/rfc-2151-raw-identifiers/attr.rs:10:51: 10:54
    let _9: &u32;                        // in scope 0 at ui/rfcs/rfc-2151-raw-identifiers/attr.rs:10:51: 10:54

    bb0: {
        _3 = &mut (*_2);                 // scope 0 at ui/rfcs/rfc-2151-raw-identifiers/attr.rs:9:12: 9:19
        _5 = const "Test2";              // scope 0 at ui/rfcs/rfc-2151-raw-identifiers/attr.rs:9:12: 9:19
                                         // mir::Constant
                                         // + span: ui/rfcs/rfc-2151-raw-identifiers/attr.rs:9:12: 9:19
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _4 = _5;                         // scope 0 at ui/rfcs/rfc-2151-raw-identifiers/attr.rs:9:12: 9:19
        _9 = &((*_1).0: u32);            // scope 0 at ui/rfcs/rfc-2151-raw-identifiers/attr.rs:10:51: 10:54
        _8 = &_9;                        // scope 0 at ui/rfcs/rfc-2151-raw-identifiers/attr.rs:10:51: 10:54
        _7 = _8;                         // scope 0 at ui/rfcs/rfc-2151-raw-identifiers/attr.rs:10:51: 10:54
        _6 = move _7 as &dyn std::fmt::Debug (Pointer(Unsize)); // scope 0 at ui/rfcs/rfc-2151-raw-identifiers/attr.rs:10:51: 10:54
        _0 = Formatter::<'_>::debug_tuple_field1_finish(move _3, move _4, move _6) -> bb1; // scope 0 at ui/rfcs/rfc-2151-raw-identifiers/attr.rs:9:12: 9:19
                                         // mir::Constant
                                         // + span: ui/rfcs/rfc-2151-raw-identifiers/attr.rs:9:12: 9:19
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: for<'b, 'a, 'c> fn(&'b mut Formatter<'_>, &'a str, &'c (dyn Debug + 'c)) -> Result<(), std::fmt::Error> {Formatter::<'_>::debug_tuple_field1_finish}, val: Value(<ZST>) }
    }

    bb1: {
        return;                          // scope 0 at ui/rfcs/rfc-2151-raw-identifiers/attr.rs:9:19: 9:19
    }
}

fn main() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/rfcs/rfc-2151-raw-identifiers/attr.rs:12:15: 12:15
    let mut _1: (&usize, &usize);        // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _2: &usize;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let mut _3: &usize;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let _4: &usize;                      // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
    let _5: &usize;                      // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
    let mut _7: (&&str, &std::string::String); // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _8: &&str;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let mut _9: &std::string::String;    // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let _10: std::string::String;        // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:117:23: 120:6
    let _11: std::string::String;        // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:13: 118:16
    let mut _12: std::fmt::Arguments<'_>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
    let mut _13: &[&str];                // in scope 0 at ui/rfcs/rfc-2151-raw-identifiers/attr.rs:14:38: 14:44
    let mut _14: &[&str; 1];             // in scope 0 at ui/rfcs/rfc-2151-raw-identifiers/attr.rs:14:38: 14:44
    let _15: &[&str; 1];                 // in scope 0 at ui/rfcs/rfc-2151-raw-identifiers/attr.rs:14:38: 14:44
    let mut _16: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
    let mut _17: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
    let _18: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
    let _19: [core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
    let mut _20: core::fmt::ArgumentV1<'_>; // in scope 0 at ui/rfcs/rfc-2151-raw-identifiers/attr.rs:14:46: 14:56
    let mut _21: &Test2;                 // in scope 0 at ui/rfcs/rfc-2151-raw-identifiers/attr.rs:14:46: 14:56
    let _22: &Test2;                     // in scope 0 at ui/rfcs/rfc-2151-raw-identifiers/attr.rs:14:46: 14:56
    let _23: &&str;                      // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
    let _24: &std::string::String;       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
    let mut _25: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    let mut _26: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
    let mut _27: &&str;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
    let mut _28: &std::string::String;   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
    let _30: !;                          // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
    let mut _31: core::panicking::AssertKind; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
    let mut _32: &&str;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let _33: &&str;                      // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let mut _34: &std::string::String;   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let _35: &std::string::String;       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let mut _36: std::option::Option<std::fmt::Arguments<'_>>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
    let mut _37: &Test2;                 // in scope 0 at ui/rfcs/rfc-2151-raw-identifiers/attr.rs:14:46: 14:56
    let mut _38: &[&str; 1];             // in scope 0 at ui/rfcs/rfc-2151-raw-identifiers/attr.rs:14:38: 14:44
    let mut _39: &&str;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let mut _40: &usize;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _41: &usize;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    scope 1 {
        debug left_val => _4;            // in scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        debug right_val => _5;           // in scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        let _6: core::panicking::AssertKind; // in scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
        scope 2 {
            debug kind => _6;            // in scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
        }
    }
    scope 3 {
        debug res => _11;                // in scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:13: 118:16
    }
    scope 4 {
        debug left_val => _23;           // in scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        debug right_val => _24;          // in scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        let _29: core::panicking::AssertKind; // in scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
        scope 5 {
            debug kind => _29;           // in scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
        }
    }

    bb0: {
        _41 = const _;                   // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
                                         // + literal: Const { ty: &usize, val: Unevaluated(main, [], Some(promoted[4])) }
        _2 = _41;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _40 = const _;                   // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // + literal: Const { ty: &usize, val: Unevaluated(main, [], Some(promoted[3])) }
        _3 = _40;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _1 = (move _2, move _3);         // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _4 = (_1.0: &usize);             // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _5 = (_1.1: &usize);             // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _39 = const _;                   // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
                                         // + literal: Const { ty: &&str, val: Unevaluated(main, [], Some(promoted[2])) }
        _8 = _39;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _38 = const _;                   // scope 0 at ui/rfcs/rfc-2151-raw-identifiers/attr.rs:14:38: 14:44
                                         // mir::Constant
                                         // + span: ui/rfcs/rfc-2151-raw-identifiers/attr.rs:14:38: 14:44
                                         // + literal: Const { ty: &[&str; 1], val: Unevaluated(main, [], Some(promoted[1])) }
        _15 = _38;                       // scope 0 at ui/rfcs/rfc-2151-raw-identifiers/attr.rs:14:38: 14:44
        _14 = _15;                       // scope 0 at ui/rfcs/rfc-2151-raw-identifiers/attr.rs:14:38: 14:44
        _13 = move _14 as &[&str] (Pointer(Unsize)); // scope 0 at ui/rfcs/rfc-2151-raw-identifiers/attr.rs:14:38: 14:44
        _37 = const _;                   // scope 0 at ui/rfcs/rfc-2151-raw-identifiers/attr.rs:14:46: 14:56
                                         // mir::Constant
                                         // + span: ui/rfcs/rfc-2151-raw-identifiers/attr.rs:14:46: 14:56
                                         // + literal: Const { ty: &Test2, val: Unevaluated(main, [], Some(promoted[0])) }
        _22 = _37;                       // scope 0 at ui/rfcs/rfc-2151-raw-identifiers/attr.rs:14:46: 14:56
        _21 = _22;                       // scope 0 at ui/rfcs/rfc-2151-raw-identifiers/attr.rs:14:46: 14:56
        _20 = core::fmt::ArgumentV1::<'_>::new_debug::<Test2>(move _21) -> bb1; // scope 0 at ui/rfcs/rfc-2151-raw-identifiers/attr.rs:14:46: 14:56
                                         // mir::Constant
                                         // + span: ui/rfcs/rfc-2151-raw-identifiers/attr.rs:14:46: 14:56
                                         // + user_ty: UserType(1)
                                         // + literal: Const { ty: for<'b> fn(&'b Test2) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_debug::<Test2>}, val: Value(<ZST>) }
    }

    bb1: {
        _19 = [move _20];                // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
        _18 = &_19;                      // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
        _17 = _18;                       // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
        _16 = move _17 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
        _12 = Arguments::<'_>::new_v1(move _13, move _16) -> bb2; // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb2: {
        _11 = format(move _12) -> bb3;   // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:19: 118:80
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:19: 118:38
                                         // + literal: Const { ty: for<'a> fn(Arguments<'a>) -> String {format}, val: Value(<ZST>) }
    }

    bb3: {
        _10 = move _11;                  // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:119:9: 119:12
        _9 = &_10;                       // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _7 = (move _8, move _9);         // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _23 = (_7.0: &&str);             // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _24 = (_7.1: &std::string::String); // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _27 = _23;                       // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
        _28 = _24;                       // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
        _26 = <&str as PartialEq<String>>::eq(move _27, move _28) -> [return: bb4, unwind: bb8]; // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a &str, &'b String) -> bool {<&str as PartialEq<String>>::eq}, val: Value(<ZST>) }
    }

    bb4: {
        _25 = Not(move _26);             // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
        switchInt(move _25) -> [0: bb6, otherwise: bb5]; // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    }

    bb5: {
        _29 = const core::panicking::AssertKind::Eq; // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _31 = const core::panicking::AssertKind::Eq; // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _33 = _23;                       // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _32 = _33;                       // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _35 = _24;                       // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _34 = _35;                       // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _36 = Option::<Arguments<'_>>::None; // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
        _30 = core::panicking::assert_failed::<&str, String>(move _31, move _32, move _34, move _36) -> bb8; // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:53
                                         // + literal: Const { ty: for<'a, 'b, 'c> fn(core::panicking::AssertKind, &'a &str, &'b String, Option<Arguments<'c>>) -> ! {core::panicking::assert_failed::<&str, String>}, val: Value(<ZST>) }
    }

    bb6: {
        drop(_10) -> bb7;                // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:48:9: 48:10
    }

    bb7: {
        return;                          // scope 0 at ui/rfcs/rfc-2151-raw-identifiers/attr.rs:15:2: 15:2
    }

    bb8 (cleanup): {
        drop(_10) -> bb9;                // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:48:9: 48:10
    }

    bb9 (cleanup): {
        resume;                          // scope 0 at ui/rfcs/rfc-2151-raw-identifiers/attr.rs:12:1: 15:2
    }
}

promoted[0] in main: &Test2 = {
    let mut _0: &Test2;                  // return place in scope 0 at ui/rfcs/rfc-2151-raw-identifiers/attr.rs:14:46: 14:56
    let mut _1: Test2;                   // in scope 0 at ui/rfcs/rfc-2151-raw-identifiers/attr.rs:14:46: 14:56

    bb0: {
        _1 = Test2(const 123_u32);       // scope 0 at ui/rfcs/rfc-2151-raw-identifiers/attr.rs:14:46: 14:56
        _0 = &_1;                        // scope 0 at ui/rfcs/rfc-2151-raw-identifiers/attr.rs:14:46: 14:56
        return;                          // scope 0 at ui/rfcs/rfc-2151-raw-identifiers/attr.rs:14:46: 14:56
    }
}

promoted[1] in main: &[&str; 1] = {
    let mut _0: &[&str; 1];              // return place in scope 0 at ui/rfcs/rfc-2151-raw-identifiers/attr.rs:14:38: 14:44
    let mut _1: [&str; 1];               // in scope 0 at ui/rfcs/rfc-2151-raw-identifiers/attr.rs:14:38: 14:44

    bb0: {
        _1 = [const ""];                 // scope 0 at ui/rfcs/rfc-2151-raw-identifiers/attr.rs:14:38: 14:44
                                         // mir::Constant
                                         // + span: ui/rfcs/rfc-2151-raw-identifiers/attr.rs:14:38: 14:44
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at ui/rfcs/rfc-2151-raw-identifiers/attr.rs:14:38: 14:44
        return;                          // scope 0 at ui/rfcs/rfc-2151-raw-identifiers/attr.rs:14:38: 14:44
    }
}

promoted[2] in main: &&str = {
    let mut _0: &&str;                   // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let mut _1: &str;                    // in scope 0 at ui/rfcs/rfc-2151-raw-identifiers/attr.rs:14:16: 14:28

    bb0: {
        _1 = const "Test2(123)";         // scope 0 at ui/rfcs/rfc-2151-raw-identifiers/attr.rs:14:16: 14:28
                                         // mir::Constant
                                         // + span: ui/rfcs/rfc-2151-raw-identifiers/attr.rs:14:16: 14:28
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    }
}

promoted[3] in main: &usize = {
    let mut _0: &usize;                  // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _1: usize;                   // in scope 0 at ui/rfcs/rfc-2151-raw-identifiers/attr.rs:13:40: 13:41

    bb0: {
        _1 = const 9_usize;              // scope 0 at ui/rfcs/rfc-2151-raw-identifiers/attr.rs:13:40: 13:41
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    }
}

promoted[4] in main: &usize = {
    let mut _0: &usize;                  // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let mut _1: usize;                   // in scope 0 at ui/rfcs/rfc-2151-raw-identifiers/attr.rs:13:16: 13:38

    bb0: {
        _1 = std::mem::size_of::<Test>() -> bb1; // scope 0 at ui/rfcs/rfc-2151-raw-identifiers/attr.rs:13:16: 13:38
                                         // mir::Constant
                                         // + span: ui/rfcs/rfc-2151-raw-identifiers/attr.rs:13:16: 13:36
                                         // + literal: Const { ty: fn() -> usize {std::mem::size_of::<Test>}, val: Value(<ZST>) }
    }

    bb1: {
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    }
}

fn Test2(_1: u32) -> Test2 {
    let mut _0: Test2;                   // return place in scope 0 at ui/rfcs/rfc-2151-raw-identifiers/attr.rs:10:1: 10:13

    bb0: {
        _0 = Test2(move _1);             // scope 0 at ui/rfcs/rfc-2151-raw-identifiers/attr.rs:10:1: 10:13
        return;                          // scope 0 at ui/rfcs/rfc-2151-raw-identifiers/attr.rs:10:1: 10:13
    }
}

// MIR FOR CTFE
fn Test2(_1: u32) -> Test2 {
    let mut _0: Test2;                   // return place in scope 0 at ui/rfcs/rfc-2151-raw-identifiers/attr.rs:10:1: 10:13

    bb0: {
        _0 = Test2(move _1);             // scope 0 at ui/rfcs/rfc-2151-raw-identifiers/attr.rs:10:1: 10:13
        return;                          // scope 0 at ui/rfcs/rfc-2151-raw-identifiers/attr.rs:10:1: 10:13
    }
}
