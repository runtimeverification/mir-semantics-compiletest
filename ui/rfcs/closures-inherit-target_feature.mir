// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
fn also_use_avx() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/rfcs/closures-inherit-target_feature.rs:11:19: 11:19
    let _1: ();                          // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:62
    let mut _2: std::fmt::Arguments<'_>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _3: &[&str];                 // in scope 0 at ui/rfcs/closures-inherit-target_feature.rs:12:14: 12:30
    let mut _4: &[&str; 1];              // in scope 0 at ui/rfcs/closures-inherit-target_feature.rs:12:14: 12:30
    let _5: &[&str; 1];                  // in scope 0 at ui/rfcs/closures-inherit-target_feature.rs:12:14: 12:30
    let mut _6: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _7: &[core::fmt::ArgumentV1<'_>; 0]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let _8: &[core::fmt::ArgumentV1<'_>; 0]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _9: &[core::fmt::ArgumentV1<'_>; 0]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _10: &[&str; 1];             // in scope 0 at ui/rfcs/closures-inherit-target_feature.rs:12:14: 12:30

    bb0: {
        _10 = const _;                   // scope 0 at ui/rfcs/closures-inherit-target_feature.rs:12:14: 12:30
                                         // mir::Constant
                                         // + span: ui/rfcs/closures-inherit-target_feature.rs:12:14: 12:30
                                         // + literal: Const { ty: &[&str; 1], val: Unevaluated(also_use_avx, [], Some(promoted[1])) }
        _5 = _10;                        // scope 0 at ui/rfcs/closures-inherit-target_feature.rs:12:14: 12:30
        _4 = _5;                         // scope 0 at ui/rfcs/closures-inherit-target_feature.rs:12:14: 12:30
        _3 = move _4 as &[&str] (Pointer(Unsize)); // scope 0 at ui/rfcs/closures-inherit-target_feature.rs:12:14: 12:30
        _9 = const _;                    // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // + literal: Const { ty: &[core::fmt::ArgumentV1<'_>; 0], val: Unevaluated(also_use_avx, [], Some(promoted[0])) }
        _8 = _9;                         // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _7 = _8;                         // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _6 = move _7 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _2 = Arguments::<'_>::new_v1(move _3, move _6) -> bb1; // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb1: {
        _1 = _print(move _2) -> bb2;     // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:62
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:27
                                         // + literal: Const { ty: for<'a> fn(Arguments<'a>) {_print}, val: Value(<ZST>) }
    }

    bb2: {
        return;                          // scope 0 at ui/rfcs/closures-inherit-target_feature.rs:13:2: 13:2
    }
}

promoted[0] in also_use_avx: &[core::fmt::ArgumentV1<'_>; 0] = {
    let mut _0: &[core::fmt::ArgumentV1<'_>; 0]; // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _1: [core::fmt::ArgumentV1<'_>; 0]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61

    bb0: {
        _1 = [];                         // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    }
}

promoted[1] in also_use_avx: &[&str; 1] = {
    let mut _0: &[&str; 1];              // return place in scope 0 at ui/rfcs/closures-inherit-target_feature.rs:12:14: 12:30
    let mut _1: [&str; 1];               // in scope 0 at ui/rfcs/closures-inherit-target_feature.rs:12:14: 12:30

    bb0: {
        _1 = [const "Hello from AVX\n"]; // scope 0 at ui/rfcs/closures-inherit-target_feature.rs:12:14: 12:30
                                         // mir::Constant
                                         // + span: ui/rfcs/closures-inherit-target_feature.rs:12:14: 12:30
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at ui/rfcs/closures-inherit-target_feature.rs:12:14: 12:30
        return;                          // scope 0 at ui/rfcs/closures-inherit-target_feature.rs:12:14: 12:30
    }
}

fn use_avx() -> Box<dyn Fn()> {
    let mut _0: std::boxed::Box<dyn std::ops::Fn()>; // return place in scope 0 at ui/rfcs/closures-inherit-target_feature.rs:16:17: 16:30
    let mut _1: std::boxed::Box<dyn std::ops::Fn()>; // in scope 0 at ui/rfcs/closures-inherit-target_feature.rs:17:5: 17:32
    let mut _2: std::boxed::Box<[closure@ui/rfcs/closures-inherit-target_feature.rs:17:14: 17:16]>; // in scope 0 at ui/rfcs/closures-inherit-target_feature.rs:17:5: 17:32
    let mut _3: [closure@ui/rfcs/closures-inherit-target_feature.rs:17:14: 17:16]; // in scope 0 at ui/rfcs/closures-inherit-target_feature.rs:17:14: 17:31

    bb0: {
        _2 = Box::<[closure@ui/rfcs/closures-inherit-target_feature.rs:17:14: 17:16]>::new(move _3) -> bb1; // scope 0 at ui/rfcs/closures-inherit-target_feature.rs:17:5: 17:32
                                         // mir::Constant
                                         // + span: ui/rfcs/closures-inherit-target_feature.rs:17:5: 17:13
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: fn([closure@ui/rfcs/closures-inherit-target_feature.rs:17:14: 17:16]) -> Box<[closure@ui/rfcs/closures-inherit-target_feature.rs:17:14: 17:16]> {Box::<[closure@ui/rfcs/closures-inherit-target_feature.rs:17:14: 17:16]>::new}, val: Value(<ZST>) }
    }

    bb1: {
        _1 = move _2 as std::boxed::Box<dyn std::ops::Fn()> (Pointer(Unsize)); // scope 0 at ui/rfcs/closures-inherit-target_feature.rs:17:5: 17:32
        _0 = move _1 as std::boxed::Box<dyn std::ops::Fn()> (Pointer(Unsize)); // scope 0 at ui/rfcs/closures-inherit-target_feature.rs:17:5: 17:32
        return;                          // scope 0 at ui/rfcs/closures-inherit-target_feature.rs:18:2: 18:2
    }
}

fn use_avx::{closure#0}(_1: &[closure@ui/rfcs/closures-inherit-target_feature.rs:17:14: 17:16]) -> () {
    let mut _0: ();                      // return place in scope 0 at ui/rfcs/closures-inherit-target_feature.rs:17:17: 17:17

    bb0: {
        _0 = also_use_avx() -> bb1;      // scope 0 at ui/rfcs/closures-inherit-target_feature.rs:17:17: 17:31
                                         // mir::Constant
                                         // + span: ui/rfcs/closures-inherit-target_feature.rs:17:17: 17:29
                                         // + literal: Const { ty: fn() {also_use_avx}, val: Value(<ZST>) }
    }

    bb1: {
        return;                          // scope 0 at ui/rfcs/closures-inherit-target_feature.rs:17:31: 17:31
    }
}

fn main() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/rfcs/closures-inherit-target_feature.rs:20:11: 20:11

    bb0: {
        return;                          // scope 0 at ui/rfcs/closures-inherit-target_feature.rs:20:13: 20:13
    }
}
