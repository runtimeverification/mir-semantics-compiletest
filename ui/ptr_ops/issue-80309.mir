// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
fn foo(_1: *const i8) -> i8 {
    debug x => _1;                       // in scope 0 at ui/ptr_ops/issue-80309.rs:6:19: 6:20
    let mut _0: i8;                      // return place in scope 0 at ui/ptr_ops/issue-80309.rs:6:36: 6:38
    let mut _2: *const i8;               // in scope 0 at ui/ptr_ops/issue-80309.rs:7:6: 7:49
    let mut _3: *const i8;               // in scope 0 at ui/ptr_ops/issue-80309.rs:7:6: 7:28
    let mut _4: *const i8;               // in scope 0 at ui/ptr_ops/issue-80309.rs:7:6: 7:7
    let mut _5: usize;                   // in scope 0 at ui/ptr_ops/issue-80309.rs:7:21: 7:27
    let mut _6: usize;                   // in scope 0 at ui/ptr_ops/issue-80309.rs:7:21: 7:27
    let mut _7: *const i8;               // in scope 0 at ui/ptr_ops/issue-80309.rs:7:21: 7:22
    let mut _8: usize;                   // in scope 0 at ui/ptr_ops/issue-80309.rs:7:42: 7:48
    let mut _9: usize;                   // in scope 0 at ui/ptr_ops/issue-80309.rs:7:42: 7:48
    let mut _10: *const i8;              // in scope 0 at ui/ptr_ops/issue-80309.rs:7:42: 7:43

    bb0: {
        _4 = _1;                         // scope 0 at ui/ptr_ops/issue-80309.rs:7:6: 7:7
        _7 = _1;                         // scope 0 at ui/ptr_ops/issue-80309.rs:7:21: 7:22
        _6 = move _7 as usize (PointerExposeAddress); // scope 0 at ui/ptr_ops/issue-80309.rs:7:21: 7:27
        _5 = _6;                         // scope 0 at ui/ptr_ops/issue-80309.rs:7:21: 7:27
        _3 = ptr::const_ptr::<impl *const i8>::wrapping_sub(move _4, move _5) -> bb1; // scope 0 at ui/ptr_ops/issue-80309.rs:7:6: 7:28
                                         // mir::Constant
                                         // + span: ui/ptr_ops/issue-80309.rs:7:8: 7:20
                                         // + literal: Const { ty: fn(*const i8, usize) -> *const i8 {ptr::const_ptr::<impl *const i8>::wrapping_sub}, val: Value(<ZST>) }
    }

    bb1: {
        _10 = _1;                        // scope 0 at ui/ptr_ops/issue-80309.rs:7:42: 7:43
        _9 = move _10 as usize (PointerExposeAddress); // scope 0 at ui/ptr_ops/issue-80309.rs:7:42: 7:48
        _8 = _9;                         // scope 0 at ui/ptr_ops/issue-80309.rs:7:42: 7:48
        _2 = ptr::const_ptr::<impl *const i8>::wrapping_add(move _3, move _8) -> bb2; // scope 0 at ui/ptr_ops/issue-80309.rs:7:6: 7:49
                                         // mir::Constant
                                         // + span: ui/ptr_ops/issue-80309.rs:7:29: 7:41
                                         // + literal: Const { ty: fn(*const i8, usize) -> *const i8 {ptr::const_ptr::<impl *const i8>::wrapping_add}, val: Value(<ZST>) }
    }

    bb2: {
        _0 = (*_2);                      // scope 0 at ui/ptr_ops/issue-80309.rs:7:5: 7:49
        return;                          // scope 0 at ui/ptr_ops/issue-80309.rs:8:2: 8:2
    }
}

fn main() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/ptr_ops/issue-80309.rs:10:11: 10:11
    let _1: i8;                          // in scope 0 at ui/ptr_ops/issue-80309.rs:11:9: 11:10
    let _2: ();                          // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:62
    let mut _3: std::fmt::Arguments<'_>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _4: &[&str];                 // in scope 0 at ui/ptr_ops/issue-80309.rs:12:14: 12:18
    let mut _5: &[&str; 2];              // in scope 0 at ui/ptr_ops/issue-80309.rs:12:14: 12:18
    let _6: &[&str; 2];                  // in scope 0 at ui/ptr_ops/issue-80309.rs:12:14: 12:18
    let mut _7: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _8: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let _9: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let _10: [core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _11: core::fmt::ArgumentV1<'_>; // in scope 0 at ui/ptr_ops/issue-80309.rs:12:20: 12:38
    let mut _12: &i8;                    // in scope 0 at ui/ptr_ops/issue-80309.rs:12:20: 12:38
    let _13: &i8;                        // in scope 0 at ui/ptr_ops/issue-80309.rs:12:20: 12:38
    let _14: i8;                         // in scope 0 at ui/ptr_ops/issue-80309.rs:12:20: 12:38
    let mut _15: *const i8;              // in scope 0 at ui/ptr_ops/issue-80309.rs:12:33: 12:35
    let _16: &i8;                        // in scope 0 at ui/ptr_ops/issue-80309.rs:12:33: 12:35
    scope 1 {
        debug x => _1;                   // in scope 1 at ui/ptr_ops/issue-80309.rs:11:9: 11:10
        let mut _17: &[&str; 2];         // in scope 1 at ui/ptr_ops/issue-80309.rs:12:14: 12:18
        scope 2 {
        }
    }

    bb0: {
        _1 = const 42_i8;                // scope 0 at ui/ptr_ops/issue-80309.rs:11:13: 11:15
        _17 = const _;                   // scope 1 at ui/ptr_ops/issue-80309.rs:12:14: 12:18
                                         // mir::Constant
                                         // + span: ui/ptr_ops/issue-80309.rs:12:14: 12:18
                                         // + literal: Const { ty: &[&str; 2], val: Unevaluated(main, [], Some(promoted[0])) }
        _6 = _17;                        // scope 1 at ui/ptr_ops/issue-80309.rs:12:14: 12:18
        _5 = _6;                         // scope 1 at ui/ptr_ops/issue-80309.rs:12:14: 12:18
        _4 = move _5 as &[&str] (Pointer(Unsize)); // scope 1 at ui/ptr_ops/issue-80309.rs:12:14: 12:18
        _16 = &_1;                       // scope 2 at ui/ptr_ops/issue-80309.rs:12:33: 12:35
        _15 = &raw const (*_16);         // scope 2 at ui/ptr_ops/issue-80309.rs:12:33: 12:35
        _14 = foo(move _15) -> bb1;      // scope 2 at ui/ptr_ops/issue-80309.rs:12:29: 12:36
                                         // mir::Constant
                                         // + span: ui/ptr_ops/issue-80309.rs:12:29: 12:32
                                         // + literal: Const { ty: unsafe fn(*const i8) -> i8 {foo}, val: Value(<ZST>) }
    }

    bb1: {
        _13 = &_14;                      // scope 1 at ui/ptr_ops/issue-80309.rs:12:20: 12:38
        _12 = _13;                       // scope 1 at ui/ptr_ops/issue-80309.rs:12:20: 12:38
        _11 = core::fmt::ArgumentV1::<'_>::new_display::<i8>(move _12) -> bb2; // scope 1 at ui/ptr_ops/issue-80309.rs:12:20: 12:38
                                         // mir::Constant
                                         // + span: ui/ptr_ops/issue-80309.rs:12:20: 12:38
                                         // + user_ty: UserType(1)
                                         // + literal: Const { ty: for<'b> fn(&'b i8) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_display::<i8>}, val: Value(<ZST>) }
    }

    bb2: {
        _10 = [move _11];                // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _9 = &_10;                       // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _8 = _9;                         // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _7 = move _8 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _3 = Arguments::<'_>::new_v1(move _4, move _7) -> bb3; // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb3: {
        _2 = _print(move _3) -> bb4;     // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:62
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:27
                                         // + literal: Const { ty: for<'a> fn(Arguments<'a>) {_print}, val: Value(<ZST>) }
    }

    bb4: {
        return;                          // scope 0 at ui/ptr_ops/issue-80309.rs:13:2: 13:2
    }
}

promoted[0] in main: &[&str; 2] = {
    let mut _0: &[&str; 2];              // return place in scope 0 at ui/ptr_ops/issue-80309.rs:12:14: 12:18
    let mut _1: [&str; 2];               // in scope 0 at ui/ptr_ops/issue-80309.rs:12:14: 12:18

    bb0: {
        _1 = [const "", const "\n"];     // scope 0 at ui/ptr_ops/issue-80309.rs:12:14: 12:18
                                         // mir::Constant
                                         // + span: ui/ptr_ops/issue-80309.rs:12:14: 12:18
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
                                         // mir::Constant
                                         // + span: ui/ptr_ops/issue-80309.rs:12:14: 12:18
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at ui/ptr_ops/issue-80309.rs:12:14: 12:18
        return;                          // scope 0 at ui/ptr_ops/issue-80309.rs:12:14: 12:18
    }
}
