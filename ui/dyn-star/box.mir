// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
fn make_dyn_star() -> dyn* std::fmt::Display {
    let mut _0: dyn* std::fmt::Display;  // return place in scope 0 at ui/dyn-star/box.rs:10:5: 10:33
    let mut _1: std::boxed::Box<i32>;    // in scope 0 at ui/dyn-star/box.rs:10:5: 10:17

    bb0: {
        _1 = Box::<i32>::new(const 42_i32) -> bb1; // scope 0 at ui/dyn-star/box.rs:10:5: 10:17
                                         // mir::Constant
                                         // + span: ui/dyn-star/box.rs:10:5: 10:13
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: fn(i32) -> Box<i32> {Box::<i32>::new}, val: Value(<ZST>) }
    }

    bb1: {
        _0 = move _1 as dyn* std::fmt::Display (DynStar); // scope 0 at ui/dyn-star/box.rs:10:5: 10:17
        return;                          // scope 0 at ui/dyn-star/box.rs:11:2: 11:2
    }
}

fn main() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/dyn-star/box.rs:13:11: 13:11
    let _1: dyn* std::fmt::Display;      // in scope 0 at ui/dyn-star/box.rs:14:9: 14:10
    let _2: ();                          // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:62
    let mut _3: std::fmt::Arguments<'_>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _4: &[&str];                 // in scope 0 at ui/dyn-star/box.rs:16:14: 16:19
    let mut _5: &[&str; 2];              // in scope 0 at ui/dyn-star/box.rs:16:14: 16:19
    let _6: &[&str; 2];                  // in scope 0 at ui/dyn-star/box.rs:16:14: 16:19
    let mut _7: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _8: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let _9: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let _10: [core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _11: core::fmt::ArgumentV1<'_>; // in scope 0 at ui/dyn-star/box.rs:16:16: 16:17
    let mut _12: &dyn* std::fmt::Display; // in scope 0 at ui/dyn-star/box.rs:16:16: 16:17
    let _13: &dyn* std::fmt::Display;    // in scope 0 at ui/dyn-star/box.rs:16:16: 16:17
    scope 1 {
        debug x => _1;                   // in scope 1 at ui/dyn-star/box.rs:14:9: 14:10
        let mut _14: &[&str; 2];         // in scope 1 at ui/dyn-star/box.rs:16:14: 16:19
    }

    bb0: {
        _1 = make_dyn_star() -> bb1;     // scope 0 at ui/dyn-star/box.rs:14:13: 14:28
                                         // mir::Constant
                                         // + span: ui/dyn-star/box.rs:14:13: 14:26
                                         // + literal: Const { ty: fn() -> (dyn* std::fmt::Display + 'static) {make_dyn_star}, val: Value(<ZST>) }
    }

    bb1: {
        _14 = const _;                   // scope 1 at ui/dyn-star/box.rs:16:14: 16:19
                                         // mir::Constant
                                         // + span: ui/dyn-star/box.rs:16:14: 16:19
                                         // + literal: Const { ty: &[&str; 2], val: Unevaluated(main, [], Some(promoted[0])) }
        _6 = _14;                        // scope 1 at ui/dyn-star/box.rs:16:14: 16:19
        _5 = _6;                         // scope 1 at ui/dyn-star/box.rs:16:14: 16:19
        _4 = move _5 as &[&str] (Pointer(Unsize)); // scope 1 at ui/dyn-star/box.rs:16:14: 16:19
        _13 = &_1;                       // scope 1 at ui/dyn-star/box.rs:16:16: 16:17
        _12 = _13;                       // scope 1 at ui/dyn-star/box.rs:16:16: 16:17
        _11 = core::fmt::ArgumentV1::<'_>::new_display::<dyn* std::fmt::Display>(move _12) -> [return: bb2, unwind: bb6]; // scope 1 at ui/dyn-star/box.rs:16:16: 16:17
                                         // mir::Constant
                                         // + span: ui/dyn-star/box.rs:16:16: 16:17
                                         // + user_ty: UserType(1)
                                         // + literal: Const { ty: for<'b> fn(&'b dyn* std::fmt::Display) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_display::<dyn* std::fmt::Display>}, val: Value(<ZST>) }
    }

    bb2: {
        _10 = [move _11];                // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _9 = &_10;                       // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _8 = _9;                         // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _7 = move _8 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _3 = Arguments::<'_>::new_v1(move _4, move _7) -> [return: bb3, unwind: bb6]; // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb3: {
        _2 = _print(move _3) -> [return: bb4, unwind: bb6]; // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:62
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:27
                                         // + literal: Const { ty: for<'a> fn(Arguments<'a>) {_print}, val: Value(<ZST>) }
    }

    bb4: {
        drop(_1) -> bb5;                 // scope 0 at ui/dyn-star/box.rs:17:1: 17:2
    }

    bb5: {
        return;                          // scope 0 at ui/dyn-star/box.rs:17:2: 17:2
    }

    bb6 (cleanup): {
        drop(_1) -> bb7;                 // scope 0 at ui/dyn-star/box.rs:17:1: 17:2
    }

    bb7 (cleanup): {
        resume;                          // scope 0 at ui/dyn-star/box.rs:13:1: 17:2
    }
}

promoted[0] in main: &[&str; 2] = {
    let mut _0: &[&str; 2];              // return place in scope 0 at ui/dyn-star/box.rs:16:14: 16:19
    let mut _1: [&str; 2];               // in scope 0 at ui/dyn-star/box.rs:16:14: 16:19

    bb0: {
        _1 = [const "", const "\n"];     // scope 0 at ui/dyn-star/box.rs:16:14: 16:19
                                         // mir::Constant
                                         // + span: ui/dyn-star/box.rs:16:14: 16:19
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
                                         // mir::Constant
                                         // + span: ui/dyn-star/box.rs:16:14: 16:19
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at ui/dyn-star/box.rs:16:14: 16:19
        return;                          // scope 0 at ui/dyn-star/box.rs:16:14: 16:19
    }
}
