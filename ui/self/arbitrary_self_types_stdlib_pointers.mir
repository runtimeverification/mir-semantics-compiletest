// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
fn <impl at ui/self/arbitrary_self_types_stdlib_pointers.rs:19:1: 19:19>::by_rc(_1: Rc<i64>) -> i64 {
    debug self => _1;                    // in scope 0 at ui/self/arbitrary_self_types_stdlib_pointers.rs:20:14: 20:18
    let mut _0: i64;                     // return place in scope 0 at ui/self/arbitrary_self_types_stdlib_pointers.rs:20:33: 20:36
    let mut _2: &i64;                    // in scope 0 at ui/self/arbitrary_self_types_stdlib_pointers.rs:21:9: 21:14
    let mut _3: &std::rc::Rc<i64>;       // in scope 0 at ui/self/arbitrary_self_types_stdlib_pointers.rs:21:10: 21:14

    bb0: {
        _3 = &_1;                        // scope 0 at ui/self/arbitrary_self_types_stdlib_pointers.rs:21:10: 21:14
        _2 = <Rc<i64> as Deref>::deref(move _3) -> [return: bb1, unwind: bb3]; // scope 0 at ui/self/arbitrary_self_types_stdlib_pointers.rs:21:9: 21:14
                                         // mir::Constant
                                         // + span: ui/self/arbitrary_self_types_stdlib_pointers.rs:21:9: 21:14
                                         // + literal: Const { ty: for<'a> fn(&'a Rc<i64>) -> &'a <Rc<i64> as Deref>::Target {<Rc<i64> as Deref>::deref}, val: Value(<ZST>) }
    }

    bb1: {
        _0 = (*_2);                      // scope 0 at ui/self/arbitrary_self_types_stdlib_pointers.rs:21:9: 21:14
        drop(_1) -> bb2;                 // scope 0 at ui/self/arbitrary_self_types_stdlib_pointers.rs:22:5: 22:6
    }

    bb2: {
        return;                          // scope 0 at ui/self/arbitrary_self_types_stdlib_pointers.rs:22:6: 22:6
    }

    bb3 (cleanup): {
        drop(_1) -> bb4;                 // scope 0 at ui/self/arbitrary_self_types_stdlib_pointers.rs:22:5: 22:6
    }

    bb4 (cleanup): {
        resume;                          // scope 0 at ui/self/arbitrary_self_types_stdlib_pointers.rs:20:5: 22:6
    }
}

fn <impl at ui/self/arbitrary_self_types_stdlib_pointers.rs:19:1: 19:19>::by_arc(_1: Arc<i64>) -> i64 {
    debug self => _1;                    // in scope 0 at ui/self/arbitrary_self_types_stdlib_pointers.rs:23:15: 23:19
    let mut _0: i64;                     // return place in scope 0 at ui/self/arbitrary_self_types_stdlib_pointers.rs:23:35: 23:38
    let mut _2: &i64;                    // in scope 0 at ui/self/arbitrary_self_types_stdlib_pointers.rs:24:9: 24:14
    let mut _3: &std::sync::Arc<i64>;    // in scope 0 at ui/self/arbitrary_self_types_stdlib_pointers.rs:24:10: 24:14

    bb0: {
        _3 = &_1;                        // scope 0 at ui/self/arbitrary_self_types_stdlib_pointers.rs:24:10: 24:14
        _2 = <Arc<i64> as Deref>::deref(move _3) -> [return: bb1, unwind: bb3]; // scope 0 at ui/self/arbitrary_self_types_stdlib_pointers.rs:24:9: 24:14
                                         // mir::Constant
                                         // + span: ui/self/arbitrary_self_types_stdlib_pointers.rs:24:9: 24:14
                                         // + literal: Const { ty: for<'a> fn(&'a Arc<i64>) -> &'a <Arc<i64> as Deref>::Target {<Arc<i64> as Deref>::deref}, val: Value(<ZST>) }
    }

    bb1: {
        _0 = (*_2);                      // scope 0 at ui/self/arbitrary_self_types_stdlib_pointers.rs:24:9: 24:14
        drop(_1) -> bb2;                 // scope 0 at ui/self/arbitrary_self_types_stdlib_pointers.rs:25:5: 25:6
    }

    bb2: {
        return;                          // scope 0 at ui/self/arbitrary_self_types_stdlib_pointers.rs:25:6: 25:6
    }

    bb3 (cleanup): {
        drop(_1) -> bb4;                 // scope 0 at ui/self/arbitrary_self_types_stdlib_pointers.rs:25:5: 25:6
    }

    bb4 (cleanup): {
        resume;                          // scope 0 at ui/self/arbitrary_self_types_stdlib_pointers.rs:23:5: 25:6
    }
}

fn <impl at ui/self/arbitrary_self_types_stdlib_pointers.rs:19:1: 19:19>::by_pin_mut(_1: Pin<&mut i64>) -> i64 {
    debug self => _1;                    // in scope 0 at ui/self/arbitrary_self_types_stdlib_pointers.rs:26:19: 26:23
    let mut _0: i64;                     // return place in scope 0 at ui/self/arbitrary_self_types_stdlib_pointers.rs:26:44: 26:47
    let mut _2: &i64;                    // in scope 0 at ui/self/arbitrary_self_types_stdlib_pointers.rs:27:9: 27:14
    let mut _3: &std::pin::Pin<&mut i64>; // in scope 0 at ui/self/arbitrary_self_types_stdlib_pointers.rs:27:10: 27:14

    bb0: {
        _3 = &_1;                        // scope 0 at ui/self/arbitrary_self_types_stdlib_pointers.rs:27:10: 27:14
        _2 = <Pin<&mut i64> as Deref>::deref(move _3) -> bb1; // scope 0 at ui/self/arbitrary_self_types_stdlib_pointers.rs:27:9: 27:14
                                         // mir::Constant
                                         // + span: ui/self/arbitrary_self_types_stdlib_pointers.rs:27:9: 27:14
                                         // + literal: Const { ty: for<'a> fn(&'a Pin<&mut i64>) -> &'a <Pin<&mut i64> as Deref>::Target {<Pin<&mut i64> as Deref>::deref}, val: Value(<ZST>) }
    }

    bb1: {
        _0 = (*_2);                      // scope 0 at ui/self/arbitrary_self_types_stdlib_pointers.rs:27:9: 27:14
        return;                          // scope 0 at ui/self/arbitrary_self_types_stdlib_pointers.rs:28:6: 28:6
    }
}

fn <impl at ui/self/arbitrary_self_types_stdlib_pointers.rs:19:1: 19:19>::by_pin_box(_1: Pin<Box<i64>>) -> i64 {
    debug self => _1;                    // in scope 0 at ui/self/arbitrary_self_types_stdlib_pointers.rs:29:19: 29:23
    let mut _0: i64;                     // return place in scope 0 at ui/self/arbitrary_self_types_stdlib_pointers.rs:29:44: 29:47
    let mut _2: &i64;                    // in scope 0 at ui/self/arbitrary_self_types_stdlib_pointers.rs:30:9: 30:14
    let mut _3: &std::pin::Pin<std::boxed::Box<i64>>; // in scope 0 at ui/self/arbitrary_self_types_stdlib_pointers.rs:30:10: 30:14

    bb0: {
        _3 = &_1;                        // scope 0 at ui/self/arbitrary_self_types_stdlib_pointers.rs:30:10: 30:14
        _2 = <Pin<Box<i64>> as Deref>::deref(move _3) -> [return: bb1, unwind: bb3]; // scope 0 at ui/self/arbitrary_self_types_stdlib_pointers.rs:30:9: 30:14
                                         // mir::Constant
                                         // + span: ui/self/arbitrary_self_types_stdlib_pointers.rs:30:9: 30:14
                                         // + literal: Const { ty: for<'a> fn(&'a Pin<Box<i64>>) -> &'a <Pin<Box<i64>> as Deref>::Target {<Pin<Box<i64>> as Deref>::deref}, val: Value(<ZST>) }
    }

    bb1: {
        _0 = (*_2);                      // scope 0 at ui/self/arbitrary_self_types_stdlib_pointers.rs:30:9: 30:14
        drop(_1) -> bb2;                 // scope 0 at ui/self/arbitrary_self_types_stdlib_pointers.rs:31:5: 31:6
    }

    bb2: {
        return;                          // scope 0 at ui/self/arbitrary_self_types_stdlib_pointers.rs:31:6: 31:6
    }

    bb3 (cleanup): {
        drop(_1) -> bb4;                 // scope 0 at ui/self/arbitrary_self_types_stdlib_pointers.rs:31:5: 31:6
    }

    bb4 (cleanup): {
        resume;                          // scope 0 at ui/self/arbitrary_self_types_stdlib_pointers.rs:29:5: 31:6
    }
}

fn <impl at ui/self/arbitrary_self_types_stdlib_pointers.rs:19:1: 19:19>::by_pin_pin_pin_ref(_1: Pin<Pin<Pin<&i64>>>) -> i64 {
    debug self => _1;                    // in scope 0 at ui/self/arbitrary_self_types_stdlib_pointers.rs:32:27: 32:31
    let mut _0: i64;                     // return place in scope 0 at ui/self/arbitrary_self_types_stdlib_pointers.rs:32:58: 32:61
    let mut _2: &i64;                    // in scope 0 at ui/self/arbitrary_self_types_stdlib_pointers.rs:33:9: 33:14
    let mut _3: &std::pin::Pin<std::pin::Pin<std::pin::Pin<&i64>>>; // in scope 0 at ui/self/arbitrary_self_types_stdlib_pointers.rs:33:10: 33:14

    bb0: {
        _3 = &_1;                        // scope 0 at ui/self/arbitrary_self_types_stdlib_pointers.rs:33:10: 33:14
        _2 = <Pin<Pin<Pin<&i64>>> as Deref>::deref(move _3) -> bb1; // scope 0 at ui/self/arbitrary_self_types_stdlib_pointers.rs:33:9: 33:14
                                         // mir::Constant
                                         // + span: ui/self/arbitrary_self_types_stdlib_pointers.rs:33:9: 33:14
                                         // + literal: Const { ty: for<'a> fn(&'a Pin<Pin<Pin<&i64>>>) -> &'a <Pin<Pin<Pin<&i64>>> as Deref>::Target {<Pin<Pin<Pin<&i64>>> as Deref>::deref}, val: Value(<ZST>) }
    }

    bb1: {
        _0 = (*_2);                      // scope 0 at ui/self/arbitrary_self_types_stdlib_pointers.rs:33:9: 33:14
        return;                          // scope 0 at ui/self/arbitrary_self_types_stdlib_pointers.rs:34:6: 34:6
    }
}

fn main() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/self/arbitrary_self_types_stdlib_pointers.rs:37:11: 37:11
    let _1: std::rc::Rc<dyn Trait>;      // in scope 0 at ui/self/arbitrary_self_types_stdlib_pointers.rs:38:9: 38:11
    let mut _2: std::rc::Rc<dyn Trait>;  // in scope 0 at ui/self/arbitrary_self_types_stdlib_pointers.rs:38:14: 38:44
    let mut _3: std::rc::Rc<i64>;        // in scope 0 at ui/self/arbitrary_self_types_stdlib_pointers.rs:38:14: 38:27
    let mut _4: (&i64, &i64);            // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _5: &i64;                    // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let mut _6: &i64;                    // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let _7: i64;                         // in scope 0 at ui/self/arbitrary_self_types_stdlib_pointers.rs:39:19: 39:29
    let mut _8: std::rc::Rc<dyn Trait>;  // in scope 0 at ui/self/arbitrary_self_types_stdlib_pointers.rs:39:19: 39:21
    let mut _11: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    let mut _12: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
    let mut _13: i64;                    // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
    let mut _14: i64;                    // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
    let _16: !;                          // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
    let mut _17: core::panicking::AssertKind; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
    let mut _18: &i64;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let _19: &i64;                       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let mut _20: &i64;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let _21: &i64;                       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let mut _22: std::option::Option<std::fmt::Arguments<'_>>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
    let mut _24: std::sync::Arc<dyn Trait>; // in scope 0 at ui/self/arbitrary_self_types_stdlib_pointers.rs:41:15: 41:47
    let mut _25: std::sync::Arc<i64>;    // in scope 0 at ui/self/arbitrary_self_types_stdlib_pointers.rs:41:15: 41:29
    let mut _26: (&i64, &i64);           // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _27: &i64;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let mut _28: &i64;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let _29: i64;                        // in scope 0 at ui/self/arbitrary_self_types_stdlib_pointers.rs:42:19: 42:31
    let mut _30: std::sync::Arc<dyn Trait>; // in scope 0 at ui/self/arbitrary_self_types_stdlib_pointers.rs:42:19: 42:22
    let mut _33: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    let mut _34: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
    let mut _35: i64;                    // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
    let mut _36: i64;                    // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
    let _38: !;                          // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
    let mut _39: core::panicking::AssertKind; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
    let mut _40: &i64;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let _41: &i64;                       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let mut _42: &i64;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let _43: &i64;                       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let mut _44: std::option::Option<std::fmt::Arguments<'_>>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
    let mut _47: std::pin::Pin<&mut dyn Trait>; // in scope 0 at ui/self/arbitrary_self_types_stdlib_pointers.rs:45:19: 45:62
    let mut _48: std::pin::Pin<&mut i64>; // in scope 0 at ui/self/arbitrary_self_types_stdlib_pointers.rs:45:19: 45:39
    let mut _49: &mut i64;               // in scope 0 at ui/self/arbitrary_self_types_stdlib_pointers.rs:45:28: 45:38
    let mut _50: (&i64, &i64);           // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _51: &i64;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let mut _52: &i64;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let _53: i64;                        // in scope 0 at ui/self/arbitrary_self_types_stdlib_pointers.rs:46:19: 46:39
    let mut _54: std::pin::Pin<&mut dyn Trait>; // in scope 0 at ui/self/arbitrary_self_types_stdlib_pointers.rs:46:19: 46:26
    let mut _57: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    let mut _58: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
    let mut _59: i64;                    // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
    let mut _60: i64;                    // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
    let _62: !;                          // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
    let mut _63: core::panicking::AssertKind; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
    let mut _64: &i64;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let _65: &i64;                       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let mut _66: &i64;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let _67: &i64;                       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let mut _68: std::option::Option<std::fmt::Arguments<'_>>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
    let mut _70: std::pin::Pin<std::boxed::Box<dyn Trait>>; // in scope 0 at ui/self/arbitrary_self_types_stdlib_pointers.rs:48:19: 48:85
    let mut _71: std::pin::Pin<std::boxed::Box<i64>>; // in scope 0 at ui/self/arbitrary_self_types_stdlib_pointers.rs:48:19: 48:62
    let mut _72: std::boxed::Box<i64>;   // in scope 0 at ui/self/arbitrary_self_types_stdlib_pointers.rs:48:47: 48:61
    let mut _73: (&i64, &i64);           // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _74: &i64;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let mut _75: &i64;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let _76: i64;                        // in scope 0 at ui/self/arbitrary_self_types_stdlib_pointers.rs:49:19: 49:39
    let mut _77: std::pin::Pin<std::boxed::Box<dyn Trait>>; // in scope 0 at ui/self/arbitrary_self_types_stdlib_pointers.rs:49:19: 49:26
    let mut _80: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    let mut _81: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
    let mut _82: i64;                    // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
    let mut _83: i64;                    // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
    let _85: !;                          // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
    let mut _86: core::panicking::AssertKind; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
    let mut _87: &i64;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let _88: &i64;                       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let mut _89: &i64;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let _90: &i64;                       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let mut _91: std::option::Option<std::fmt::Arguments<'_>>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
    let mut _94: std::pin::Pin<std::pin::Pin<std::pin::Pin<&dyn Trait>>>; // in scope 0 at ui/self/arbitrary_self_types_stdlib_pointers.rs:52:27: 52:92
    let mut _95: std::pin::Pin<std::pin::Pin<std::pin::Pin<&i64>>>; // in scope 0 at ui/self/arbitrary_self_types_stdlib_pointers.rs:52:27: 52:63
    let mut _96: std::pin::Pin<std::pin::Pin<&i64>>; // in scope 0 at ui/self/arbitrary_self_types_stdlib_pointers.rs:52:36: 52:62
    let mut _97: std::pin::Pin<&i64>;    // in scope 0 at ui/self/arbitrary_self_types_stdlib_pointers.rs:52:45: 52:61
    let mut _98: &i64;                   // in scope 0 at ui/self/arbitrary_self_types_stdlib_pointers.rs:52:54: 52:60
    let mut _99: (&i64, &i64);           // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _100: &i64;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let mut _101: &i64;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let _102: i64;                       // in scope 0 at ui/self/arbitrary_self_types_stdlib_pointers.rs:53:19: 53:55
    let mut _103: std::pin::Pin<std::pin::Pin<std::pin::Pin<&dyn Trait>>>; // in scope 0 at ui/self/arbitrary_self_types_stdlib_pointers.rs:53:19: 53:34
    let mut _106: bool;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    let mut _107: bool;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
    let mut _108: i64;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
    let mut _109: i64;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
    let _111: !;                         // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
    let mut _112: core::panicking::AssertKind; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
    let mut _113: &i64;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let _114: &i64;                      // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let mut _115: &i64;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let _116: &i64;                      // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let mut _117: std::option::Option<std::fmt::Arguments<'_>>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
    scope 1 {
        debug rc => _1;                  // in scope 1 at ui/self/arbitrary_self_types_stdlib_pointers.rs:38:9: 38:11
        let _9: &i64;                    // in scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        let _10: &i64;                   // in scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        let _23: std::sync::Arc<dyn Trait>; // in scope 1 at ui/self/arbitrary_self_types_stdlib_pointers.rs:41:9: 41:12
        let mut _122: &i64;              // in scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        scope 2 {
            debug left_val => _9;        // in scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
            debug right_val => _10;      // in scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
            let _15: core::panicking::AssertKind; // in scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
            scope 3 {
                debug kind => _15;       // in scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
            }
        }
        scope 4 {
            debug arc => _23;            // in scope 4 at ui/self/arbitrary_self_types_stdlib_pointers.rs:41:9: 41:12
            let _31: &i64;               // in scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
            let _32: &i64;               // in scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
            let mut _45: i64;            // in scope 4 at ui/self/arbitrary_self_types_stdlib_pointers.rs:44:9: 44:18
            let mut _121: &i64;          // in scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
            scope 5 {
                debug left_val => _31;   // in scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
                debug right_val => _32;  // in scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
                let _37: core::panicking::AssertKind; // in scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                scope 6 {
                    debug kind => _37;   // in scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                }
            }
            scope 7 {
                debug value => _45;      // in scope 7 at ui/self/arbitrary_self_types_stdlib_pointers.rs:44:9: 44:18
                let _46: std::pin::Pin<&mut dyn Trait>; // in scope 7 at ui/self/arbitrary_self_types_stdlib_pointers.rs:45:9: 45:16
                scope 8 {
                    debug pin_mut => _46; // in scope 8 at ui/self/arbitrary_self_types_stdlib_pointers.rs:45:9: 45:16
                    let _55: &i64;       // in scope 8 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
                    let _56: &i64;       // in scope 8 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
                    let _69: std::pin::Pin<std::boxed::Box<dyn Trait>>; // in scope 8 at ui/self/arbitrary_self_types_stdlib_pointers.rs:48:9: 48:16
                    let mut _120: &i64;  // in scope 8 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
                    scope 9 {
                        debug left_val => _55; // in scope 9 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
                        debug right_val => _56; // in scope 9 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
                        let _61: core::panicking::AssertKind; // in scope 9 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                        scope 10 {
                            debug kind => _61; // in scope 10 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                        }
                    }
                    scope 11 {
                        debug pin_box => _69; // in scope 11 at ui/self/arbitrary_self_types_stdlib_pointers.rs:48:9: 48:16
                        let _78: &i64;   // in scope 11 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
                        let _79: &i64;   // in scope 11 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
                        let _92: i64;    // in scope 11 at ui/self/arbitrary_self_types_stdlib_pointers.rs:51:9: 51:14
                        let mut _119: &i64; // in scope 11 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
                        scope 12 {
                            debug left_val => _78; // in scope 12 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
                            debug right_val => _79; // in scope 12 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
                            let _84: core::panicking::AssertKind; // in scope 12 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                            scope 13 {
                                debug kind => _84; // in scope 13 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                            }
                        }
                        scope 14 {
                            debug value => _92; // in scope 14 at ui/self/arbitrary_self_types_stdlib_pointers.rs:51:9: 51:14
                            let _93: std::pin::Pin<std::pin::Pin<std::pin::Pin<&dyn Trait>>>; // in scope 14 at ui/self/arbitrary_self_types_stdlib_pointers.rs:52:9: 52:24
                            scope 15 {
                                debug pin_pin_pin_ref => _93; // in scope 15 at ui/self/arbitrary_self_types_stdlib_pointers.rs:52:9: 52:24
                                let _104: &i64; // in scope 15 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
                                let _105: &i64; // in scope 15 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
                                let mut _118: &i64; // in scope 15 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
                                scope 16 {
                                    debug left_val => _104; // in scope 16 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
                                    debug right_val => _105; // in scope 16 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
                                    let _110: core::panicking::AssertKind; // in scope 16 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                                    scope 17 {
                                        debug kind => _110; // in scope 17 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    }

    bb0: {
        _3 = Rc::<i64>::new(const 1_i64) -> bb1; // scope 0 at ui/self/arbitrary_self_types_stdlib_pointers.rs:38:14: 38:27
                                         // mir::Constant
                                         // + span: ui/self/arbitrary_self_types_stdlib_pointers.rs:38:14: 38:21
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: fn(i64) -> Rc<i64> {Rc::<i64>::new}, val: Value(<ZST>) }
    }

    bb1: {
        _2 = move _3 as std::rc::Rc<dyn Trait> (Pointer(Unsize)); // scope 0 at ui/self/arbitrary_self_types_stdlib_pointers.rs:38:14: 38:27
        _1 = move _2;                    // scope 0 at ui/self/arbitrary_self_types_stdlib_pointers.rs:38:14: 38:44
        _122 = const _;                  // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
                                         // + literal: Const { ty: &i64, val: Unevaluated(main, [], Some(promoted[4])) }
        _5 = _122;                       // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _8 = move _1;                    // scope 1 at ui/self/arbitrary_self_types_stdlib_pointers.rs:39:19: 39:21
        _7 = <dyn Trait as Trait>::by_rc(move _8) -> bb2; // scope 1 at ui/self/arbitrary_self_types_stdlib_pointers.rs:39:19: 39:29
                                         // mir::Constant
                                         // + span: ui/self/arbitrary_self_types_stdlib_pointers.rs:39:22: 39:27
                                         // + literal: Const { ty: fn(Rc<dyn Trait>) -> i64 {<dyn Trait as Trait>::by_rc}, val: Value(<ZST>) }
    }

    bb2: {
        _6 = &_7;                        // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _4 = (move _5, move _6);         // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _9 = (_4.0: &i64);               // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _10 = (_4.1: &i64);              // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _13 = const 1_i64;               // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
        _14 = (*_10);                    // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
        _12 = Eq(move _13, move _14);    // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
        _11 = Not(move _12);             // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
        switchInt(move _11) -> [0: bb4, otherwise: bb3]; // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    }

    bb3: {
        _15 = const core::panicking::AssertKind::Eq; // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _17 = const core::panicking::AssertKind::Eq; // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _19 = _9;                        // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _18 = _19;                       // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _21 = _10;                       // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _20 = _21;                       // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _22 = Option::<Arguments<'_>>::None; // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
        _16 = core::panicking::assert_failed::<i64, i64>(move _17, move _18, move _20, move _22); // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:53
                                         // + literal: Const { ty: for<'a, 'b, 'c> fn(core::panicking::AssertKind, &'a i64, &'b i64, Option<Arguments<'c>>) -> ! {core::panicking::assert_failed::<i64, i64>}, val: Value(<ZST>) }
    }

    bb4: {
        _25 = Arc::<i64>::new(const 2_i64) -> bb5; // scope 1 at ui/self/arbitrary_self_types_stdlib_pointers.rs:41:15: 41:29
                                         // mir::Constant
                                         // + span: ui/self/arbitrary_self_types_stdlib_pointers.rs:41:15: 41:23
                                         // + user_ty: UserType(2)
                                         // + literal: Const { ty: fn(i64) -> Arc<i64> {Arc::<i64>::new}, val: Value(<ZST>) }
    }

    bb5: {
        _24 = move _25 as std::sync::Arc<dyn Trait> (Pointer(Unsize)); // scope 1 at ui/self/arbitrary_self_types_stdlib_pointers.rs:41:15: 41:29
        _23 = move _24;                  // scope 1 at ui/self/arbitrary_self_types_stdlib_pointers.rs:41:15: 41:47
        _121 = const _;                  // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
                                         // + literal: Const { ty: &i64, val: Unevaluated(main, [], Some(promoted[3])) }
        _27 = _121;                      // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _30 = move _23;                  // scope 4 at ui/self/arbitrary_self_types_stdlib_pointers.rs:42:19: 42:22
        _29 = <dyn Trait as Trait>::by_arc(move _30) -> bb6; // scope 4 at ui/self/arbitrary_self_types_stdlib_pointers.rs:42:19: 42:31
                                         // mir::Constant
                                         // + span: ui/self/arbitrary_self_types_stdlib_pointers.rs:42:23: 42:29
                                         // + literal: Const { ty: fn(Arc<dyn Trait>) -> i64 {<dyn Trait as Trait>::by_arc}, val: Value(<ZST>) }
    }

    bb6: {
        _28 = &_29;                      // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _26 = (move _27, move _28);      // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _31 = (_26.0: &i64);             // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _32 = (_26.1: &i64);             // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _35 = const 2_i64;               // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
        _36 = (*_32);                    // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
        _34 = Eq(move _35, move _36);    // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
        _33 = Not(move _34);             // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
        switchInt(move _33) -> [0: bb8, otherwise: bb7]; // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    }

    bb7: {
        _37 = const core::panicking::AssertKind::Eq; // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _39 = const core::panicking::AssertKind::Eq; // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _41 = _31;                       // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _40 = _41;                       // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _43 = _32;                       // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _42 = _43;                       // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _44 = Option::<Arguments<'_>>::None; // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
        _38 = core::panicking::assert_failed::<i64, i64>(move _39, move _40, move _42, move _44); // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:53
                                         // + literal: Const { ty: for<'a, 'b, 'c> fn(core::panicking::AssertKind, &'a i64, &'b i64, Option<Arguments<'c>>) -> ! {core::panicking::assert_failed::<i64, i64>}, val: Value(<ZST>) }
    }

    bb8: {
        _45 = const 3_i64;               // scope 4 at ui/self/arbitrary_self_types_stdlib_pointers.rs:44:21: 44:25
        _49 = &mut _45;                  // scope 7 at ui/self/arbitrary_self_types_stdlib_pointers.rs:45:28: 45:38
        _48 = Pin::<&mut i64>::new(move _49) -> bb9; // scope 7 at ui/self/arbitrary_self_types_stdlib_pointers.rs:45:19: 45:39
                                         // mir::Constant
                                         // + span: ui/self/arbitrary_self_types_stdlib_pointers.rs:45:19: 45:27
                                         // + user_ty: UserType(4)
                                         // + literal: Const { ty: fn(&mut i64) -> Pin<&mut i64> {Pin::<&mut i64>::new}, val: Value(<ZST>) }
    }

    bb9: {
        _47 = move _48 as std::pin::Pin<&mut dyn Trait> (Pointer(Unsize)); // scope 7 at ui/self/arbitrary_self_types_stdlib_pointers.rs:45:19: 45:39
        _46 = move _47;                  // scope 7 at ui/self/arbitrary_self_types_stdlib_pointers.rs:45:19: 45:62
        _120 = const _;                  // scope 8 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
                                         // + literal: Const { ty: &i64, val: Unevaluated(main, [], Some(promoted[2])) }
        _51 = _120;                      // scope 8 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _54 = move _46;                  // scope 8 at ui/self/arbitrary_self_types_stdlib_pointers.rs:46:19: 46:26
        _53 = <dyn Trait as Trait>::by_pin_mut(move _54) -> bb10; // scope 8 at ui/self/arbitrary_self_types_stdlib_pointers.rs:46:19: 46:39
                                         // mir::Constant
                                         // + span: ui/self/arbitrary_self_types_stdlib_pointers.rs:46:27: 46:37
                                         // + literal: Const { ty: for<'a> fn(Pin<&'a mut dyn Trait>) -> i64 {<dyn Trait as Trait>::by_pin_mut}, val: Value(<ZST>) }
    }

    bb10: {
        _52 = &_53;                      // scope 8 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _50 = (move _51, move _52);      // scope 8 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _55 = (_50.0: &i64);             // scope 8 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _56 = (_50.1: &i64);             // scope 8 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _59 = const 3_i64;               // scope 9 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
        _60 = (*_56);                    // scope 9 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
        _58 = Eq(move _59, move _60);    // scope 9 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
        _57 = Not(move _58);             // scope 9 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
        switchInt(move _57) -> [0: bb12, otherwise: bb11]; // scope 9 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    }

    bb11: {
        _61 = const core::panicking::AssertKind::Eq; // scope 9 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _63 = const core::panicking::AssertKind::Eq; // scope 10 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _65 = _55;                       // scope 10 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _64 = _65;                       // scope 10 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _67 = _56;                       // scope 10 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _66 = _67;                       // scope 10 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _68 = Option::<Arguments<'_>>::None; // scope 10 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
        _62 = core::panicking::assert_failed::<i64, i64>(move _63, move _64, move _66, move _68); // scope 10 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:53
                                         // + literal: Const { ty: for<'a, 'b, 'c> fn(core::panicking::AssertKind, &'a i64, &'b i64, Option<Arguments<'c>>) -> ! {core::panicking::assert_failed::<i64, i64>}, val: Value(<ZST>) }
    }

    bb12: {
        _72 = Box::<i64>::new(const 4_i64) -> bb13; // scope 8 at ui/self/arbitrary_self_types_stdlib_pointers.rs:48:47: 48:61
                                         // mir::Constant
                                         // + span: ui/self/arbitrary_self_types_stdlib_pointers.rs:48:47: 48:55
                                         // + user_ty: UserType(7)
                                         // + literal: Const { ty: fn(i64) -> Box<i64> {Box::<i64>::new}, val: Value(<ZST>) }
    }

    bb13: {
        _71 = <Box<i64> as Into<Pin<Box<i64>>>>::into(move _72) -> bb14; // scope 8 at ui/self/arbitrary_self_types_stdlib_pointers.rs:48:19: 48:62
                                         // mir::Constant
                                         // + span: ui/self/arbitrary_self_types_stdlib_pointers.rs:48:19: 48:46
                                         // + user_ty: UserType(6)
                                         // + literal: Const { ty: fn(Box<i64>) -> Pin<Box<i64>> {<Box<i64> as Into<Pin<Box<i64>>>>::into}, val: Value(<ZST>) }
    }

    bb14: {
        _70 = move _71 as std::pin::Pin<std::boxed::Box<dyn Trait>> (Pointer(Unsize)); // scope 8 at ui/self/arbitrary_self_types_stdlib_pointers.rs:48:19: 48:62
        _69 = move _70;                  // scope 8 at ui/self/arbitrary_self_types_stdlib_pointers.rs:48:19: 48:85
        _119 = const _;                  // scope 11 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
                                         // + literal: Const { ty: &i64, val: Unevaluated(main, [], Some(promoted[1])) }
        _74 = _119;                      // scope 11 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _77 = move _69;                  // scope 11 at ui/self/arbitrary_self_types_stdlib_pointers.rs:49:19: 49:26
        _76 = <dyn Trait as Trait>::by_pin_box(move _77) -> bb15; // scope 11 at ui/self/arbitrary_self_types_stdlib_pointers.rs:49:19: 49:39
                                         // mir::Constant
                                         // + span: ui/self/arbitrary_self_types_stdlib_pointers.rs:49:27: 49:37
                                         // + literal: Const { ty: fn(Pin<Box<dyn Trait>>) -> i64 {<dyn Trait as Trait>::by_pin_box}, val: Value(<ZST>) }
    }

    bb15: {
        _75 = &_76;                      // scope 11 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _73 = (move _74, move _75);      // scope 11 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _78 = (_73.0: &i64);             // scope 11 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _79 = (_73.1: &i64);             // scope 11 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _82 = const 4_i64;               // scope 12 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
        _83 = (*_79);                    // scope 12 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
        _81 = Eq(move _82, move _83);    // scope 12 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
        _80 = Not(move _81);             // scope 12 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
        switchInt(move _80) -> [0: bb17, otherwise: bb16]; // scope 12 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    }

    bb16: {
        _84 = const core::panicking::AssertKind::Eq; // scope 12 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _86 = const core::panicking::AssertKind::Eq; // scope 13 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _88 = _78;                       // scope 13 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _87 = _88;                       // scope 13 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _90 = _79;                       // scope 13 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _89 = _90;                       // scope 13 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _91 = Option::<Arguments<'_>>::None; // scope 13 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
        _85 = core::panicking::assert_failed::<i64, i64>(move _86, move _87, move _89, move _91); // scope 13 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:53
                                         // + literal: Const { ty: for<'a, 'b, 'c> fn(core::panicking::AssertKind, &'a i64, &'b i64, Option<Arguments<'c>>) -> ! {core::panicking::assert_failed::<i64, i64>}, val: Value(<ZST>) }
    }

    bb17: {
        _92 = const 5_i64;               // scope 11 at ui/self/arbitrary_self_types_stdlib_pointers.rs:51:17: 51:21
        _98 = &_92;                      // scope 14 at ui/self/arbitrary_self_types_stdlib_pointers.rs:52:54: 52:60
        _97 = Pin::<&i64>::new(move _98) -> bb18; // scope 14 at ui/self/arbitrary_self_types_stdlib_pointers.rs:52:45: 52:61
                                         // mir::Constant
                                         // + span: ui/self/arbitrary_self_types_stdlib_pointers.rs:52:45: 52:53
                                         // + user_ty: UserType(11)
                                         // + literal: Const { ty: fn(&i64) -> Pin<&i64> {Pin::<&i64>::new}, val: Value(<ZST>) }
    }

    bb18: {
        _96 = Pin::<Pin<&i64>>::new(move _97) -> bb19; // scope 14 at ui/self/arbitrary_self_types_stdlib_pointers.rs:52:36: 52:62
                                         // mir::Constant
                                         // + span: ui/self/arbitrary_self_types_stdlib_pointers.rs:52:36: 52:44
                                         // + user_ty: UserType(10)
                                         // + literal: Const { ty: fn(Pin<&i64>) -> Pin<Pin<&i64>> {Pin::<Pin<&i64>>::new}, val: Value(<ZST>) }
    }

    bb19: {
        _95 = Pin::<Pin<Pin<&i64>>>::new(move _96) -> bb20; // scope 14 at ui/self/arbitrary_self_types_stdlib_pointers.rs:52:27: 52:63
                                         // mir::Constant
                                         // + span: ui/self/arbitrary_self_types_stdlib_pointers.rs:52:27: 52:35
                                         // + user_ty: UserType(9)
                                         // + literal: Const { ty: fn(Pin<Pin<&i64>>) -> Pin<Pin<Pin<&i64>>> {Pin::<Pin<Pin<&i64>>>::new}, val: Value(<ZST>) }
    }

    bb20: {
        _94 = move _95 as std::pin::Pin<std::pin::Pin<std::pin::Pin<&dyn Trait>>> (Pointer(Unsize)); // scope 14 at ui/self/arbitrary_self_types_stdlib_pointers.rs:52:27: 52:63
        _93 = _94;                       // scope 14 at ui/self/arbitrary_self_types_stdlib_pointers.rs:52:27: 52:92
        _118 = const _;                  // scope 15 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
                                         // + literal: Const { ty: &i64, val: Unevaluated(main, [], Some(promoted[0])) }
        _100 = _118;                     // scope 15 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _103 = _93;                      // scope 15 at ui/self/arbitrary_self_types_stdlib_pointers.rs:53:19: 53:34
        _102 = <dyn Trait as Trait>::by_pin_pin_pin_ref(move _103) -> bb21; // scope 15 at ui/self/arbitrary_self_types_stdlib_pointers.rs:53:19: 53:55
                                         // mir::Constant
                                         // + span: ui/self/arbitrary_self_types_stdlib_pointers.rs:53:35: 53:53
                                         // + literal: Const { ty: for<'a> fn(Pin<Pin<Pin<&'a dyn Trait>>>) -> i64 {<dyn Trait as Trait>::by_pin_pin_pin_ref}, val: Value(<ZST>) }
    }

    bb21: {
        _101 = &_102;                    // scope 15 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _99 = (move _100, move _101);    // scope 15 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _104 = (_99.0: &i64);            // scope 15 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _105 = (_99.1: &i64);            // scope 15 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _108 = const 5_i64;              // scope 16 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
        _109 = (*_105);                  // scope 16 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
        _107 = Eq(move _108, move _109); // scope 16 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
        _106 = Not(move _107);           // scope 16 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
        switchInt(move _106) -> [0: bb23, otherwise: bb22]; // scope 16 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    }

    bb22: {
        _110 = const core::panicking::AssertKind::Eq; // scope 16 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _112 = const core::panicking::AssertKind::Eq; // scope 17 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _114 = _104;                     // scope 17 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _113 = _114;                     // scope 17 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _116 = _105;                     // scope 17 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _115 = _116;                     // scope 17 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _117 = Option::<Arguments<'_>>::None; // scope 17 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
        _111 = core::panicking::assert_failed::<i64, i64>(move _112, move _113, move _115, move _117); // scope 17 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:53
                                         // + literal: Const { ty: for<'a, 'b, 'c> fn(core::panicking::AssertKind, &'a i64, &'b i64, Option<Arguments<'c>>) -> ! {core::panicking::assert_failed::<i64, i64>}, val: Value(<ZST>) }
    }

    bb23: {
        return;                          // scope 0 at ui/self/arbitrary_self_types_stdlib_pointers.rs:54:2: 54:2
    }
}

promoted[0] in main: &i64 = {
    let mut _0: &i64;                    // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let mut _1: i64;                     // in scope 0 at ui/self/arbitrary_self_types_stdlib_pointers.rs:53:16: 53:17

    bb0: {
        _1 = const 5_i64;                // scope 0 at ui/self/arbitrary_self_types_stdlib_pointers.rs:53:16: 53:17
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    }
}

promoted[1] in main: &i64 = {
    let mut _0: &i64;                    // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let mut _1: i64;                     // in scope 0 at ui/self/arbitrary_self_types_stdlib_pointers.rs:49:16: 49:17

    bb0: {
        _1 = const 4_i64;                // scope 0 at ui/self/arbitrary_self_types_stdlib_pointers.rs:49:16: 49:17
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    }
}

promoted[2] in main: &i64 = {
    let mut _0: &i64;                    // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let mut _1: i64;                     // in scope 0 at ui/self/arbitrary_self_types_stdlib_pointers.rs:46:16: 46:17

    bb0: {
        _1 = const 3_i64;                // scope 0 at ui/self/arbitrary_self_types_stdlib_pointers.rs:46:16: 46:17
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    }
}

promoted[3] in main: &i64 = {
    let mut _0: &i64;                    // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let mut _1: i64;                     // in scope 0 at ui/self/arbitrary_self_types_stdlib_pointers.rs:42:16: 42:17

    bb0: {
        _1 = const 2_i64;                // scope 0 at ui/self/arbitrary_self_types_stdlib_pointers.rs:42:16: 42:17
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    }
}

promoted[4] in main: &i64 = {
    let mut _0: &i64;                    // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let mut _1: i64;                     // in scope 0 at ui/self/arbitrary_self_types_stdlib_pointers.rs:39:16: 39:17

    bb0: {
        _1 = const 1_i64;                // scope 0 at ui/self/arbitrary_self_types_stdlib_pointers.rs:39:16: 39:17
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    }
}
