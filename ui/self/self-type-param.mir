// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
fn <impl at ui/self/self-type-param.rs:13:1: 13:19>::f(_1: &S) -> S {
    debug self => _1;                    // in scope 0 at ui/self/self-type-param.rs:14:10: 14:15
    let mut _0: S;                       // return place in scope 0 at ui/self/self-type-param.rs:14:20: 14:21

    bb0: {
        _0 = const S {{ x: 3_isize }};   // scope 0 at ui/self/self-type-param.rs:15:9: 15:19
                                         // mir::Constant
                                         // + span: ui/self/self-type-param.rs:15:9: 15:19
                                         // + literal: Const { ty: S, val: Value(Scalar(0x0000000000000003)) }
        return;                          // scope 0 at ui/self/self-type-param.rs:16:6: 16:6
    }
}

fn main() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/self/self-type-param.rs:19:15: 19:15

    bb0: {
        return;                          // scope 0 at ui/self/self-type-param.rs:19:17: 19:17
    }
}
