// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
fn <impl at ui/self/ufcs-explicit-self.rs:4:16: 4:21>::clone(_1: &Foo) -> Foo {
    debug self => _1;                    // in scope 0 at ui/self/ufcs-explicit-self.rs:4:16: 4:21
    let mut _0: Foo;                     // return place in scope 0 at ui/self/ufcs-explicit-self.rs:4:16: 4:21
    scope 1 {
    }

    bb0: {
        _0 = (*_1);                      // scope 1 at ui/self/ufcs-explicit-self.rs:4:16: 4:21
        return;                          // scope 0 at ui/self/ufcs-explicit-self.rs:4:21: 4:21
    }
}

fn <impl at ui/self/ufcs-explicit-self.rs:9:1: 9:9>::foo(_1: Foo, _2: isize) -> isize {
    debug self => _1;                    // in scope 0 at ui/self/ufcs-explicit-self.rs:10:12: 10:16
    debug x => _2;                       // in scope 0 at ui/self/ufcs-explicit-self.rs:10:23: 10:24
    let mut _0: isize;                   // return place in scope 0 at ui/self/ufcs-explicit-self.rs:10:36: 10:41
    let mut _3: isize;                   // in scope 0 at ui/self/ufcs-explicit-self.rs:11:9: 11:15
    let mut _4: isize;                   // in scope 0 at ui/self/ufcs-explicit-self.rs:11:18: 11:19
    let mut _5: (isize, bool);           // in scope 0 at ui/self/ufcs-explicit-self.rs:11:9: 11:19

    bb0: {
        _3 = (_1.0: isize);              // scope 0 at ui/self/ufcs-explicit-self.rs:11:9: 11:15
        _4 = _2;                         // scope 0 at ui/self/ufcs-explicit-self.rs:11:18: 11:19
        _5 = CheckedAdd(_3, _4);         // scope 0 at ui/self/ufcs-explicit-self.rs:11:9: 11:19
        assert(!move (_5.1: bool), "attempt to compute `{} + {}`, which would overflow", move _3, move _4) -> bb1; // scope 0 at ui/self/ufcs-explicit-self.rs:11:9: 11:19
    }

    bb1: {
        _0 = move (_5.0: isize);         // scope 0 at ui/self/ufcs-explicit-self.rs:11:9: 11:19
        return;                          // scope 0 at ui/self/ufcs-explicit-self.rs:12:6: 12:6
    }
}

fn <impl at ui/self/ufcs-explicit-self.rs:9:1: 9:9>::bar(_1: &Foo, _2: isize) -> isize {
    debug self => _1;                    // in scope 0 at ui/self/ufcs-explicit-self.rs:13:12: 13:16
    debug x => _2;                       // in scope 0 at ui/self/ufcs-explicit-self.rs:13:24: 13:25
    let mut _0: isize;                   // return place in scope 0 at ui/self/ufcs-explicit-self.rs:13:37: 13:42
    let mut _3: isize;                   // in scope 0 at ui/self/ufcs-explicit-self.rs:14:9: 14:15
    let mut _4: isize;                   // in scope 0 at ui/self/ufcs-explicit-self.rs:14:18: 14:19
    let mut _5: (isize, bool);           // in scope 0 at ui/self/ufcs-explicit-self.rs:14:9: 14:19

    bb0: {
        _3 = ((*_1).0: isize);           // scope 0 at ui/self/ufcs-explicit-self.rs:14:9: 14:15
        _4 = _2;                         // scope 0 at ui/self/ufcs-explicit-self.rs:14:18: 14:19
        _5 = CheckedAdd(_3, _4);         // scope 0 at ui/self/ufcs-explicit-self.rs:14:9: 14:19
        assert(!move (_5.1: bool), "attempt to compute `{} + {}`, which would overflow", move _3, move _4) -> bb1; // scope 0 at ui/self/ufcs-explicit-self.rs:14:9: 14:19
    }

    bb1: {
        _0 = move (_5.0: isize);         // scope 0 at ui/self/ufcs-explicit-self.rs:14:9: 14:19
        return;                          // scope 0 at ui/self/ufcs-explicit-self.rs:15:6: 15:6
    }
}

fn <impl at ui/self/ufcs-explicit-self.rs:9:1: 9:9>::baz(_1: Box<Foo>, _2: isize) -> isize {
    debug self => _1;                    // in scope 0 at ui/self/ufcs-explicit-self.rs:16:12: 16:16
    debug x => _2;                       // in scope 0 at ui/self/ufcs-explicit-self.rs:16:28: 16:29
    let mut _0: isize;                   // return place in scope 0 at ui/self/ufcs-explicit-self.rs:16:41: 16:46
    let mut _3: isize;                   // in scope 0 at ui/self/ufcs-explicit-self.rs:17:9: 17:15
    let mut _4: isize;                   // in scope 0 at ui/self/ufcs-explicit-self.rs:17:18: 17:19
    let mut _5: (isize, bool);           // in scope 0 at ui/self/ufcs-explicit-self.rs:17:9: 17:19
    let mut _6: *const Foo;              // in scope 0 at ui/self/ufcs-explicit-self.rs:16:12: 16:16

    bb0: {
        _6 = (((_1.0: std::ptr::Unique<Foo>).0: std::ptr::NonNull<Foo>).0: *const Foo); // scope 0 at ui/self/ufcs-explicit-self.rs:17:9: 17:15
        _3 = ((*_6).0: isize);           // scope 0 at ui/self/ufcs-explicit-self.rs:17:9: 17:15
        _4 = _2;                         // scope 0 at ui/self/ufcs-explicit-self.rs:17:18: 17:19
        _5 = CheckedAdd(_3, _4);         // scope 0 at ui/self/ufcs-explicit-self.rs:17:9: 17:19
        assert(!move (_5.1: bool), "attempt to compute `{} + {}`, which would overflow", move _3, move _4) -> [success: bb1, unwind: bb3]; // scope 0 at ui/self/ufcs-explicit-self.rs:17:9: 17:19
    }

    bb1: {
        _0 = move (_5.0: isize);         // scope 0 at ui/self/ufcs-explicit-self.rs:17:9: 17:19
        drop(_1) -> bb2;                 // scope 0 at ui/self/ufcs-explicit-self.rs:18:5: 18:6
    }

    bb2: {
        return;                          // scope 0 at ui/self/ufcs-explicit-self.rs:18:6: 18:6
    }

    bb3 (cleanup): {
        drop(_1) -> bb4;                 // scope 0 at ui/self/ufcs-explicit-self.rs:18:5: 18:6
    }

    bb4 (cleanup): {
        resume;                          // scope 0 at ui/self/ufcs-explicit-self.rs:16:5: 18:6
    }
}

fn <impl at ui/self/ufcs-explicit-self.rs:21:16: 21:21>::clone(_1: &Bar<T>) -> Bar<T> {
    debug self => _1;                    // in scope 0 at ui/self/ufcs-explicit-self.rs:21:16: 21:21
    let mut _0: Bar<T>;                  // return place in scope 0 at ui/self/ufcs-explicit-self.rs:21:16: 21:21
    let mut _2: T;                       // in scope 0 at ui/self/ufcs-explicit-self.rs:23:5: 23:9
    let mut _3: &T;                      // in scope 0 at ui/self/ufcs-explicit-self.rs:23:5: 23:9
    let _4: &T;                          // in scope 0 at ui/self/ufcs-explicit-self.rs:23:5: 23:9

    bb0: {
        _4 = &((*_1).0: T);              // scope 0 at ui/self/ufcs-explicit-self.rs:23:5: 23:9
        _3 = _4;                         // scope 0 at ui/self/ufcs-explicit-self.rs:23:5: 23:9
        _2 = <T as Clone>::clone(move _3) -> bb1; // scope 0 at ui/self/ufcs-explicit-self.rs:23:5: 23:9
                                         // mir::Constant
                                         // + span: ui/self/ufcs-explicit-self.rs:23:5: 23:9
                                         // + literal: Const { ty: for<'a> fn(&'a T) -> T {<T as Clone>::clone}, val: Value(<ZST>) }
    }

    bb1: {
        _0 = Bar::<T> { f: move _2 };    // scope 0 at ui/self/ufcs-explicit-self.rs:21:16: 21:21
        return;                          // scope 0 at ui/self/ufcs-explicit-self.rs:21:21: 21:21
    }
}

fn <impl at ui/self/ufcs-explicit-self.rs:26:1: 26:15>::foo(_1: Bar<T>, _2: isize) -> isize {
    debug self => _1;                    // in scope 0 at ui/self/ufcs-explicit-self.rs:27:12: 27:16
    debug x => _2;                       // in scope 0 at ui/self/ufcs-explicit-self.rs:27:26: 27:27
    let mut _0: isize;                   // return place in scope 0 at ui/self/ufcs-explicit-self.rs:27:39: 27:44

    bb0: {
        _0 = _2;                         // scope 0 at ui/self/ufcs-explicit-self.rs:28:9: 28:10
        drop(_1) -> bb1;                 // scope 0 at ui/self/ufcs-explicit-self.rs:29:5: 29:6
    }

    bb1: {
        return;                          // scope 0 at ui/self/ufcs-explicit-self.rs:29:6: 29:6
    }
}

fn <impl at ui/self/ufcs-explicit-self.rs:26:1: 26:15>::bar(_1: &Bar<T>, _2: isize) -> isize {
    debug self => _1;                    // in scope 0 at ui/self/ufcs-explicit-self.rs:30:16: 30:20
    debug x => _2;                       // in scope 0 at ui/self/ufcs-explicit-self.rs:30:34: 30:35
    let mut _0: isize;                   // return place in scope 0 at ui/self/ufcs-explicit-self.rs:30:47: 30:52

    bb0: {
        _0 = _2;                         // scope 0 at ui/self/ufcs-explicit-self.rs:31:9: 31:10
        return;                          // scope 0 at ui/self/ufcs-explicit-self.rs:32:6: 32:6
    }
}

fn <impl at ui/self/ufcs-explicit-self.rs:26:1: 26:15>::baz(_1: Bar<T>, _2: isize) -> isize {
    debug self => _1;                    // in scope 0 at ui/self/ufcs-explicit-self.rs:33:12: 33:16
    debug x => _2;                       // in scope 0 at ui/self/ufcs-explicit-self.rs:33:26: 33:27
    let mut _0: isize;                   // return place in scope 0 at ui/self/ufcs-explicit-self.rs:33:39: 33:44

    bb0: {
        _0 = _2;                         // scope 0 at ui/self/ufcs-explicit-self.rs:34:9: 34:10
        drop(_1) -> bb1;                 // scope 0 at ui/self/ufcs-explicit-self.rs:35:5: 35:6
    }

    bb1: {
        return;                          // scope 0 at ui/self/ufcs-explicit-self.rs:35:6: 35:6
    }
}

fn main() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/self/ufcs-explicit-self.rs:38:11: 38:11
    let _1: std::boxed::Box<Foo>;        // in scope 0 at ui/self/ufcs-explicit-self.rs:39:9: 39:12
    let mut _2: Foo;                     // in scope 0 at ui/self/ufcs-explicit-self.rs:39:32: 41:6
    let _3: ();                          // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:62
    let mut _4: std::fmt::Arguments<'_>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _5: &[&str];                 // in scope 0 at ui/self/ufcs-explicit-self.rs:42:14: 42:24
    let mut _6: &[&str; 4];              // in scope 0 at ui/self/ufcs-explicit-self.rs:42:14: 42:24
    let _7: &[&str; 4];                  // in scope 0 at ui/self/ufcs-explicit-self.rs:42:14: 42:24
    let mut _8: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _9: &[core::fmt::ArgumentV1<'_>; 3]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let _10: &[core::fmt::ArgumentV1<'_>; 3]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let _11: [core::fmt::ArgumentV1<'_>; 3]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _12: core::fmt::ArgumentV1<'_>; // in scope 0 at ui/self/ufcs-explicit-self.rs:42:26: 42:36
    let mut _13: &isize;                 // in scope 0 at ui/self/ufcs-explicit-self.rs:42:26: 42:36
    let _14: &isize;                     // in scope 0 at ui/self/ufcs-explicit-self.rs:42:26: 42:36
    let _15: isize;                      // in scope 0 at ui/self/ufcs-explicit-self.rs:42:26: 42:36
    let mut _16: Foo;                    // in scope 0 at ui/self/ufcs-explicit-self.rs:42:26: 42:36
    let mut _17: core::fmt::ArgumentV1<'_>; // in scope 0 at ui/self/ufcs-explicit-self.rs:42:38: 42:48
    let mut _18: &isize;                 // in scope 0 at ui/self/ufcs-explicit-self.rs:42:38: 42:48
    let _19: &isize;                     // in scope 0 at ui/self/ufcs-explicit-self.rs:42:38: 42:48
    let _20: isize;                      // in scope 0 at ui/self/ufcs-explicit-self.rs:42:38: 42:48
    let mut _21: &Foo;                   // in scope 0 at ui/self/ufcs-explicit-self.rs:42:38: 42:48
    let mut _22: core::fmt::ArgumentV1<'_>; // in scope 0 at ui/self/ufcs-explicit-self.rs:42:50: 42:60
    let mut _23: &isize;                 // in scope 0 at ui/self/ufcs-explicit-self.rs:42:50: 42:60
    let _24: &isize;                     // in scope 0 at ui/self/ufcs-explicit-self.rs:42:50: 42:60
    let _25: isize;                      // in scope 0 at ui/self/ufcs-explicit-self.rs:42:50: 42:60
    let mut _26: std::boxed::Box<Foo>;   // in scope 0 at ui/self/ufcs-explicit-self.rs:42:50: 42:53
    let mut _28: Bar<isize>;             // in scope 0 at ui/self/ufcs-explicit-self.rs:43:32: 45:6
    let _29: ();                         // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:62
    let mut _30: std::fmt::Arguments<'_>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _31: &[&str];                // in scope 0 at ui/self/ufcs-explicit-self.rs:46:14: 46:24
    let mut _32: &[&str; 4];             // in scope 0 at ui/self/ufcs-explicit-self.rs:46:14: 46:24
    let _33: &[&str; 4];                 // in scope 0 at ui/self/ufcs-explicit-self.rs:46:14: 46:24
    let mut _34: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _35: &[core::fmt::ArgumentV1<'_>; 3]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let _36: &[core::fmt::ArgumentV1<'_>; 3]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let _37: [core::fmt::ArgumentV1<'_>; 3]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _38: core::fmt::ArgumentV1<'_>; // in scope 0 at ui/self/ufcs-explicit-self.rs:46:26: 46:36
    let mut _39: &isize;                 // in scope 0 at ui/self/ufcs-explicit-self.rs:46:26: 46:36
    let _40: &isize;                     // in scope 0 at ui/self/ufcs-explicit-self.rs:46:26: 46:36
    let _41: isize;                      // in scope 0 at ui/self/ufcs-explicit-self.rs:46:26: 46:36
    let mut _42: Bar<isize>;             // in scope 0 at ui/self/ufcs-explicit-self.rs:46:26: 46:36
    let mut _43: core::fmt::ArgumentV1<'_>; // in scope 0 at ui/self/ufcs-explicit-self.rs:46:38: 46:48
    let mut _44: &isize;                 // in scope 0 at ui/self/ufcs-explicit-self.rs:46:38: 46:48
    let _45: &isize;                     // in scope 0 at ui/self/ufcs-explicit-self.rs:46:38: 46:48
    let _46: isize;                      // in scope 0 at ui/self/ufcs-explicit-self.rs:46:38: 46:48
    let mut _47: &Bar<isize>;            // in scope 0 at ui/self/ufcs-explicit-self.rs:46:38: 46:48
    let mut _48: core::fmt::ArgumentV1<'_>; // in scope 0 at ui/self/ufcs-explicit-self.rs:46:50: 46:60
    let mut _49: &isize;                 // in scope 0 at ui/self/ufcs-explicit-self.rs:46:50: 46:60
    let _50: &isize;                     // in scope 0 at ui/self/ufcs-explicit-self.rs:46:50: 46:60
    let _51: isize;                      // in scope 0 at ui/self/ufcs-explicit-self.rs:46:50: 46:60
    let mut _52: Bar<isize>;             // in scope 0 at ui/self/ufcs-explicit-self.rs:46:50: 46:60
    let _54: ();                         // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:62
    let mut _55: std::fmt::Arguments<'_>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _56: &[&str];                // in scope 0 at ui/self/ufcs-explicit-self.rs:48:14: 48:24
    let mut _57: &[&str; 4];             // in scope 0 at ui/self/ufcs-explicit-self.rs:48:14: 48:24
    let _58: &[&str; 4];                 // in scope 0 at ui/self/ufcs-explicit-self.rs:48:14: 48:24
    let mut _59: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _60: &[core::fmt::ArgumentV1<'_>; 3]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let _61: &[core::fmt::ArgumentV1<'_>; 3]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let _62: [core::fmt::ArgumentV1<'_>; 3]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _63: core::fmt::ArgumentV1<'_>; // in scope 0 at ui/self/ufcs-explicit-self.rs:48:26: 48:36
    let mut _64: &isize;                 // in scope 0 at ui/self/ufcs-explicit-self.rs:48:26: 48:36
    let _65: &isize;                     // in scope 0 at ui/self/ufcs-explicit-self.rs:48:26: 48:36
    let _66: isize;                      // in scope 0 at ui/self/ufcs-explicit-self.rs:48:26: 48:36
    let mut _67: Bar<isize>;             // in scope 0 at ui/self/ufcs-explicit-self.rs:48:26: 48:36
    let mut _68: core::fmt::ArgumentV1<'_>; // in scope 0 at ui/self/ufcs-explicit-self.rs:48:38: 48:48
    let mut _69: &isize;                 // in scope 0 at ui/self/ufcs-explicit-self.rs:48:38: 48:48
    let _70: &isize;                     // in scope 0 at ui/self/ufcs-explicit-self.rs:48:38: 48:48
    let _71: isize;                      // in scope 0 at ui/self/ufcs-explicit-self.rs:48:38: 48:48
    let mut _72: &Bar<isize>;            // in scope 0 at ui/self/ufcs-explicit-self.rs:48:38: 48:48
    let mut _73: core::fmt::ArgumentV1<'_>; // in scope 0 at ui/self/ufcs-explicit-self.rs:48:50: 48:60
    let mut _74: &isize;                 // in scope 0 at ui/self/ufcs-explicit-self.rs:48:50: 48:60
    let _75: &isize;                     // in scope 0 at ui/self/ufcs-explicit-self.rs:48:50: 48:60
    let _76: isize;                      // in scope 0 at ui/self/ufcs-explicit-self.rs:48:50: 48:60
    let mut _77: Bar<isize>;             // in scope 0 at ui/self/ufcs-explicit-self.rs:48:50: 48:60
    let mut _81: bool;                   // in scope 0 at ui/self/ufcs-explicit-self.rs:49:1: 49:2
    let mut _82: bool;                   // in scope 0 at ui/self/ufcs-explicit-self.rs:49:1: 49:2
    let mut _83: *const Foo;             // in scope 0 at ui/self/ufcs-explicit-self.rs:39:9: 39:12
    let mut _84: *const Foo;             // in scope 0 at ui/self/ufcs-explicit-self.rs:39:9: 39:12
    let mut _85: *const Bar<isize>;      // in scope 0 at ui/self/ufcs-explicit-self.rs:43:9: 43:12
    let mut _86: *const Bar<isize>;      // in scope 0 at ui/self/ufcs-explicit-self.rs:43:9: 43:12
    let mut _87: *const Bar<isize>;      // in scope 0 at ui/self/ufcs-explicit-self.rs:43:9: 43:12
    let mut _88: *const Bar<isize>;      // in scope 0 at ui/self/ufcs-explicit-self.rs:47:9: 47:12
    let mut _89: *const Bar<isize>;      // in scope 0 at ui/self/ufcs-explicit-self.rs:47:9: 47:12
    let mut _90: *const Bar<isize>;      // in scope 0 at ui/self/ufcs-explicit-self.rs:47:9: 47:12
    scope 1 {
        debug foo => _1;                 // in scope 1 at ui/self/ufcs-explicit-self.rs:39:9: 39:12
        let _27: std::boxed::Box<Bar<isize>>; // in scope 1 at ui/self/ufcs-explicit-self.rs:43:9: 43:12
        let mut _80: &[&str; 4];         // in scope 1 at ui/self/ufcs-explicit-self.rs:42:14: 42:24
        scope 2 {
            debug bar => _27;            // in scope 2 at ui/self/ufcs-explicit-self.rs:43:9: 43:12
            let _53: std::boxed::Box<Bar<isize>>; // in scope 2 at ui/self/ufcs-explicit-self.rs:47:9: 47:12
            let mut _79: &[&str; 4];     // in scope 2 at ui/self/ufcs-explicit-self.rs:46:14: 46:24
            scope 3 {
                debug bar => _53;        // in scope 3 at ui/self/ufcs-explicit-self.rs:47:9: 47:12
                let mut _78: &[&str; 4]; // in scope 3 at ui/self/ufcs-explicit-self.rs:48:14: 48:24
            }
        }
    }

    bb0: {
        _81 = const false;               // scope 0 at ui/self/ufcs-explicit-self.rs:39:9: 39:12
        _82 = const false;               // scope 0 at ui/self/ufcs-explicit-self.rs:39:9: 39:12
        _2 = const Foo {{ f: 1_isize }}; // scope 0 at ui/self/ufcs-explicit-self.rs:39:32: 41:6
                                         // mir::Constant
                                         // + span: ui/self/ufcs-explicit-self.rs:39:32: 41:6
                                         // + literal: Const { ty: Foo, val: Value(Scalar(0x0000000000000001)) }
        _82 = const true;                // scope 0 at ui/self/ufcs-explicit-self.rs:39:23: 41:7
        _1 = Box::<Foo>::new(move _2) -> bb1; // scope 0 at ui/self/ufcs-explicit-self.rs:39:23: 41:7
                                         // mir::Constant
                                         // + span: ui/self/ufcs-explicit-self.rs:39:23: 39:31
                                         // + user_ty: UserType(1)
                                         // + literal: Const { ty: fn(Foo) -> Box<Foo> {Box::<Foo>::new}, val: Value(<ZST>) }
    }

    bb1: {
        _80 = const _;                   // scope 1 at ui/self/ufcs-explicit-self.rs:42:14: 42:24
                                         // mir::Constant
                                         // + span: ui/self/ufcs-explicit-self.rs:42:14: 42:24
                                         // + literal: Const { ty: &[&str; 4], val: Unevaluated(main, [], Some(promoted[2])) }
        _7 = _80;                        // scope 1 at ui/self/ufcs-explicit-self.rs:42:14: 42:24
        _6 = _7;                         // scope 1 at ui/self/ufcs-explicit-self.rs:42:14: 42:24
        _5 = move _6 as &[&str] (Pointer(Unsize)); // scope 1 at ui/self/ufcs-explicit-self.rs:42:14: 42:24
        _83 = (((_1.0: std::ptr::Unique<Foo>).0: std::ptr::NonNull<Foo>).0: *const Foo); // scope 1 at ui/self/ufcs-explicit-self.rs:42:26: 42:36
        _16 = (*_83);                    // scope 1 at ui/self/ufcs-explicit-self.rs:42:26: 42:36
        _15 = Foo::foo(move _16, const 2_isize) -> [return: bb2, unwind: bb33]; // scope 1 at ui/self/ufcs-explicit-self.rs:42:26: 42:36
                                         // mir::Constant
                                         // + span: ui/self/ufcs-explicit-self.rs:42:30: 42:33
                                         // + literal: Const { ty: fn(Foo, isize) -> isize {Foo::foo}, val: Value(<ZST>) }
    }

    bb2: {
        _14 = &_15;                      // scope 1 at ui/self/ufcs-explicit-self.rs:42:26: 42:36
        _13 = _14;                       // scope 1 at ui/self/ufcs-explicit-self.rs:42:26: 42:36
        _12 = core::fmt::ArgumentV1::<'_>::new_display::<isize>(move _13) -> [return: bb3, unwind: bb33]; // scope 1 at ui/self/ufcs-explicit-self.rs:42:26: 42:36
                                         // mir::Constant
                                         // + span: ui/self/ufcs-explicit-self.rs:42:26: 42:36
                                         // + user_ty: UserType(4)
                                         // + literal: Const { ty: for<'b> fn(&'b isize) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_display::<isize>}, val: Value(<ZST>) }
    }

    bb3: {
        _84 = (((_1.0: std::ptr::Unique<Foo>).0: std::ptr::NonNull<Foo>).0: *const Foo); // scope 1 at ui/self/ufcs-explicit-self.rs:42:38: 42:48
        _21 = &(*_84);                   // scope 1 at ui/self/ufcs-explicit-self.rs:42:38: 42:48
        _20 = Foo::bar(move _21, const 2_isize) -> [return: bb4, unwind: bb33]; // scope 1 at ui/self/ufcs-explicit-self.rs:42:38: 42:48
                                         // mir::Constant
                                         // + span: ui/self/ufcs-explicit-self.rs:42:42: 42:45
                                         // + literal: Const { ty: for<'a> fn(&'a Foo, isize) -> isize {Foo::bar}, val: Value(<ZST>) }
    }

    bb4: {
        _19 = &_20;                      // scope 1 at ui/self/ufcs-explicit-self.rs:42:38: 42:48
        _18 = _19;                       // scope 1 at ui/self/ufcs-explicit-self.rs:42:38: 42:48
        _17 = core::fmt::ArgumentV1::<'_>::new_display::<isize>(move _18) -> [return: bb5, unwind: bb33]; // scope 1 at ui/self/ufcs-explicit-self.rs:42:38: 42:48
                                         // mir::Constant
                                         // + span: ui/self/ufcs-explicit-self.rs:42:38: 42:48
                                         // + user_ty: UserType(5)
                                         // + literal: Const { ty: for<'b> fn(&'b isize) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_display::<isize>}, val: Value(<ZST>) }
    }

    bb5: {
        _82 = const false;               // scope 1 at ui/self/ufcs-explicit-self.rs:42:50: 42:53
        _26 = move _1;                   // scope 1 at ui/self/ufcs-explicit-self.rs:42:50: 42:53
        _25 = Foo::baz(move _26, const 2_isize) -> [return: bb6, unwind: bb33]; // scope 1 at ui/self/ufcs-explicit-self.rs:42:50: 42:60
                                         // mir::Constant
                                         // + span: ui/self/ufcs-explicit-self.rs:42:54: 42:57
                                         // + literal: Const { ty: fn(Box<Foo>, isize) -> isize {Foo::baz}, val: Value(<ZST>) }
    }

    bb6: {
        _24 = &_25;                      // scope 1 at ui/self/ufcs-explicit-self.rs:42:50: 42:60
        _23 = _24;                       // scope 1 at ui/self/ufcs-explicit-self.rs:42:50: 42:60
        _22 = core::fmt::ArgumentV1::<'_>::new_display::<isize>(move _23) -> [return: bb7, unwind: bb33]; // scope 1 at ui/self/ufcs-explicit-self.rs:42:50: 42:60
                                         // mir::Constant
                                         // + span: ui/self/ufcs-explicit-self.rs:42:50: 42:60
                                         // + user_ty: UserType(6)
                                         // + literal: Const { ty: for<'b> fn(&'b isize) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_display::<isize>}, val: Value(<ZST>) }
    }

    bb7: {
        _11 = [move _12, move _17, move _22]; // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _10 = &_11;                      // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _9 = _10;                        // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _8 = move _9 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _4 = Arguments::<'_>::new_v1(move _5, move _8) -> [return: bb8, unwind: bb33]; // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // + user_ty: UserType(3)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb8: {
        _3 = _print(move _4) -> [return: bb9, unwind: bb33]; // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:62
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:27
                                         // + literal: Const { ty: for<'a> fn(Arguments<'a>) {_print}, val: Value(<ZST>) }
    }

    bb9: {
        _28 = const Bar::<isize> {{ f: 1_isize }}; // scope 1 at ui/self/ufcs-explicit-self.rs:43:32: 45:6
                                         // mir::Constant
                                         // + span: ui/self/ufcs-explicit-self.rs:43:32: 45:6
                                         // + literal: Const { ty: Bar<isize>, val: Value(Scalar(0x0000000000000001)) }
        _27 = Box::<Bar<isize>>::new(move _28) -> [return: bb10, unwind: bb33]; // scope 1 at ui/self/ufcs-explicit-self.rs:43:23: 45:7
                                         // mir::Constant
                                         // + span: ui/self/ufcs-explicit-self.rs:43:23: 43:31
                                         // + user_ty: UserType(8)
                                         // + literal: Const { ty: fn(Bar<isize>) -> Box<Bar<isize>> {Box::<Bar<isize>>::new}, val: Value(<ZST>) }
    }

    bb10: {
        _81 = const true;                // scope 1 at ui/self/ufcs-explicit-self.rs:45:6: 45:7
        _79 = const _;                   // scope 2 at ui/self/ufcs-explicit-self.rs:46:14: 46:24
                                         // mir::Constant
                                         // + span: ui/self/ufcs-explicit-self.rs:46:14: 46:24
                                         // + literal: Const { ty: &[&str; 4], val: Unevaluated(main, [], Some(promoted[1])) }
        _33 = _79;                       // scope 2 at ui/self/ufcs-explicit-self.rs:46:14: 46:24
        _32 = _33;                       // scope 2 at ui/self/ufcs-explicit-self.rs:46:14: 46:24
        _31 = move _32 as &[&str] (Pointer(Unsize)); // scope 2 at ui/self/ufcs-explicit-self.rs:46:14: 46:24
        _85 = (((_27.0: std::ptr::Unique<Bar<isize>>).0: std::ptr::NonNull<Bar<isize>>).0: *const Bar<isize>); // scope 2 at ui/self/ufcs-explicit-self.rs:46:26: 46:36
        _42 = (*_85);                    // scope 2 at ui/self/ufcs-explicit-self.rs:46:26: 46:36
        _41 = Bar::<isize>::foo(move _42, const 2_isize) -> [return: bb11, unwind: bb31]; // scope 2 at ui/self/ufcs-explicit-self.rs:46:26: 46:36
                                         // mir::Constant
                                         // + span: ui/self/ufcs-explicit-self.rs:46:30: 46:33
                                         // + literal: Const { ty: fn(Bar<isize>, isize) -> isize {Bar::<isize>::foo}, val: Value(<ZST>) }
    }

    bb11: {
        _40 = &_41;                      // scope 2 at ui/self/ufcs-explicit-self.rs:46:26: 46:36
        _39 = _40;                       // scope 2 at ui/self/ufcs-explicit-self.rs:46:26: 46:36
        _38 = core::fmt::ArgumentV1::<'_>::new_display::<isize>(move _39) -> [return: bb12, unwind: bb31]; // scope 2 at ui/self/ufcs-explicit-self.rs:46:26: 46:36
                                         // mir::Constant
                                         // + span: ui/self/ufcs-explicit-self.rs:46:26: 46:36
                                         // + user_ty: UserType(11)
                                         // + literal: Const { ty: for<'b> fn(&'b isize) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_display::<isize>}, val: Value(<ZST>) }
    }

    bb12: {
        _86 = (((_27.0: std::ptr::Unique<Bar<isize>>).0: std::ptr::NonNull<Bar<isize>>).0: *const Bar<isize>); // scope 2 at ui/self/ufcs-explicit-self.rs:46:38: 46:48
        _47 = &(*_86);                   // scope 2 at ui/self/ufcs-explicit-self.rs:46:38: 46:48
        _46 = Bar::<isize>::bar(move _47, const 2_isize) -> [return: bb13, unwind: bb31]; // scope 2 at ui/self/ufcs-explicit-self.rs:46:38: 46:48
                                         // mir::Constant
                                         // + span: ui/self/ufcs-explicit-self.rs:46:42: 46:45
                                         // + literal: Const { ty: for<'a> fn(&'a Bar<isize>, isize) -> isize {Bar::<isize>::bar}, val: Value(<ZST>) }
    }

    bb13: {
        _45 = &_46;                      // scope 2 at ui/self/ufcs-explicit-self.rs:46:38: 46:48
        _44 = _45;                       // scope 2 at ui/self/ufcs-explicit-self.rs:46:38: 46:48
        _43 = core::fmt::ArgumentV1::<'_>::new_display::<isize>(move _44) -> [return: bb14, unwind: bb31]; // scope 2 at ui/self/ufcs-explicit-self.rs:46:38: 46:48
                                         // mir::Constant
                                         // + span: ui/self/ufcs-explicit-self.rs:46:38: 46:48
                                         // + user_ty: UserType(12)
                                         // + literal: Const { ty: for<'b> fn(&'b isize) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_display::<isize>}, val: Value(<ZST>) }
    }

    bb14: {
        _87 = (((_27.0: std::ptr::Unique<Bar<isize>>).0: std::ptr::NonNull<Bar<isize>>).0: *const Bar<isize>); // scope 2 at ui/self/ufcs-explicit-self.rs:46:50: 46:60
        _52 = (*_87);                    // scope 2 at ui/self/ufcs-explicit-self.rs:46:50: 46:60
        _51 = Bar::<isize>::baz(move _52, const 2_isize) -> [return: bb15, unwind: bb31]; // scope 2 at ui/self/ufcs-explicit-self.rs:46:50: 46:60
                                         // mir::Constant
                                         // + span: ui/self/ufcs-explicit-self.rs:46:54: 46:57
                                         // + literal: Const { ty: fn(Bar<isize>, isize) -> isize {Bar::<isize>::baz}, val: Value(<ZST>) }
    }

    bb15: {
        _50 = &_51;                      // scope 2 at ui/self/ufcs-explicit-self.rs:46:50: 46:60
        _49 = _50;                       // scope 2 at ui/self/ufcs-explicit-self.rs:46:50: 46:60
        _48 = core::fmt::ArgumentV1::<'_>::new_display::<isize>(move _49) -> [return: bb16, unwind: bb31]; // scope 2 at ui/self/ufcs-explicit-self.rs:46:50: 46:60
                                         // mir::Constant
                                         // + span: ui/self/ufcs-explicit-self.rs:46:50: 46:60
                                         // + user_ty: UserType(13)
                                         // + literal: Const { ty: for<'b> fn(&'b isize) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_display::<isize>}, val: Value(<ZST>) }
    }

    bb16: {
        _37 = [move _38, move _43, move _48]; // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _36 = &_37;                      // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _35 = _36;                       // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _34 = move _35 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _30 = Arguments::<'_>::new_v1(move _31, move _34) -> [return: bb17, unwind: bb31]; // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // + user_ty: UserType(10)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb17: {
        _29 = _print(move _30) -> [return: bb18, unwind: bb31]; // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:62
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:27
                                         // + literal: Const { ty: for<'a> fn(Arguments<'a>) {_print}, val: Value(<ZST>) }
    }

    bb18: {
        _81 = const false;               // scope 2 at ui/self/ufcs-explicit-self.rs:47:32: 47:35
        _53 = move _27;                  // scope 2 at ui/self/ufcs-explicit-self.rs:47:32: 47:35
        _78 = const _;                   // scope 3 at ui/self/ufcs-explicit-self.rs:48:14: 48:24
                                         // mir::Constant
                                         // + span: ui/self/ufcs-explicit-self.rs:48:14: 48:24
                                         // + literal: Const { ty: &[&str; 4], val: Unevaluated(main, [], Some(promoted[0])) }
        _58 = _78;                       // scope 3 at ui/self/ufcs-explicit-self.rs:48:14: 48:24
        _57 = _58;                       // scope 3 at ui/self/ufcs-explicit-self.rs:48:14: 48:24
        _56 = move _57 as &[&str] (Pointer(Unsize)); // scope 3 at ui/self/ufcs-explicit-self.rs:48:14: 48:24
        _88 = (((_53.0: std::ptr::Unique<Bar<isize>>).0: std::ptr::NonNull<Bar<isize>>).0: *const Bar<isize>); // scope 3 at ui/self/ufcs-explicit-self.rs:48:26: 48:36
        _67 = (*_88);                    // scope 3 at ui/self/ufcs-explicit-self.rs:48:26: 48:36
        _66 = Bar::<isize>::foo(move _67, const 2_isize) -> [return: bb19, unwind: bb28]; // scope 3 at ui/self/ufcs-explicit-self.rs:48:26: 48:36
                                         // mir::Constant
                                         // + span: ui/self/ufcs-explicit-self.rs:48:30: 48:33
                                         // + literal: Const { ty: fn(Bar<isize>, isize) -> isize {Bar::<isize>::foo}, val: Value(<ZST>) }
    }

    bb19: {
        _65 = &_66;                      // scope 3 at ui/self/ufcs-explicit-self.rs:48:26: 48:36
        _64 = _65;                       // scope 3 at ui/self/ufcs-explicit-self.rs:48:26: 48:36
        _63 = core::fmt::ArgumentV1::<'_>::new_display::<isize>(move _64) -> [return: bb20, unwind: bb28]; // scope 3 at ui/self/ufcs-explicit-self.rs:48:26: 48:36
                                         // mir::Constant
                                         // + span: ui/self/ufcs-explicit-self.rs:48:26: 48:36
                                         // + user_ty: UserType(17)
                                         // + literal: Const { ty: for<'b> fn(&'b isize) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_display::<isize>}, val: Value(<ZST>) }
    }

    bb20: {
        _89 = (((_53.0: std::ptr::Unique<Bar<isize>>).0: std::ptr::NonNull<Bar<isize>>).0: *const Bar<isize>); // scope 3 at ui/self/ufcs-explicit-self.rs:48:38: 48:48
        _72 = &(*_89);                   // scope 3 at ui/self/ufcs-explicit-self.rs:48:38: 48:48
        _71 = Bar::<isize>::bar(move _72, const 2_isize) -> [return: bb21, unwind: bb28]; // scope 3 at ui/self/ufcs-explicit-self.rs:48:38: 48:48
                                         // mir::Constant
                                         // + span: ui/self/ufcs-explicit-self.rs:48:42: 48:45
                                         // + literal: Const { ty: for<'a> fn(&'a Bar<isize>, isize) -> isize {Bar::<isize>::bar}, val: Value(<ZST>) }
    }

    bb21: {
        _70 = &_71;                      // scope 3 at ui/self/ufcs-explicit-self.rs:48:38: 48:48
        _69 = _70;                       // scope 3 at ui/self/ufcs-explicit-self.rs:48:38: 48:48
        _68 = core::fmt::ArgumentV1::<'_>::new_display::<isize>(move _69) -> [return: bb22, unwind: bb28]; // scope 3 at ui/self/ufcs-explicit-self.rs:48:38: 48:48
                                         // mir::Constant
                                         // + span: ui/self/ufcs-explicit-self.rs:48:38: 48:48
                                         // + user_ty: UserType(18)
                                         // + literal: Const { ty: for<'b> fn(&'b isize) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_display::<isize>}, val: Value(<ZST>) }
    }

    bb22: {
        _90 = (((_53.0: std::ptr::Unique<Bar<isize>>).0: std::ptr::NonNull<Bar<isize>>).0: *const Bar<isize>); // scope 3 at ui/self/ufcs-explicit-self.rs:48:50: 48:60
        _77 = (*_90);                    // scope 3 at ui/self/ufcs-explicit-self.rs:48:50: 48:60
        _76 = Bar::<isize>::baz(move _77, const 2_isize) -> [return: bb23, unwind: bb28]; // scope 3 at ui/self/ufcs-explicit-self.rs:48:50: 48:60
                                         // mir::Constant
                                         // + span: ui/self/ufcs-explicit-self.rs:48:54: 48:57
                                         // + literal: Const { ty: fn(Bar<isize>, isize) -> isize {Bar::<isize>::baz}, val: Value(<ZST>) }
    }

    bb23: {
        _75 = &_76;                      // scope 3 at ui/self/ufcs-explicit-self.rs:48:50: 48:60
        _74 = _75;                       // scope 3 at ui/self/ufcs-explicit-self.rs:48:50: 48:60
        _73 = core::fmt::ArgumentV1::<'_>::new_display::<isize>(move _74) -> [return: bb24, unwind: bb28]; // scope 3 at ui/self/ufcs-explicit-self.rs:48:50: 48:60
                                         // mir::Constant
                                         // + span: ui/self/ufcs-explicit-self.rs:48:50: 48:60
                                         // + user_ty: UserType(19)
                                         // + literal: Const { ty: for<'b> fn(&'b isize) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_display::<isize>}, val: Value(<ZST>) }
    }

    bb24: {
        _62 = [move _63, move _68, move _73]; // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _61 = &_62;                      // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _60 = _61;                       // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _59 = move _60 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _55 = Arguments::<'_>::new_v1(move _56, move _59) -> [return: bb25, unwind: bb28]; // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // + user_ty: UserType(16)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb25: {
        _54 = _print(move _55) -> [return: bb26, unwind: bb28]; // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:62
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:27
                                         // + literal: Const { ty: for<'a> fn(Arguments<'a>) {_print}, val: Value(<ZST>) }
    }

    bb26: {
        drop(_53) -> [return: bb27, unwind: bb31]; // scope 2 at ui/self/ufcs-explicit-self.rs:49:1: 49:2
    }

    bb27: {
        _81 = const false;               // scope 1 at ui/self/ufcs-explicit-self.rs:49:1: 49:2
        _82 = const false;               // scope 0 at ui/self/ufcs-explicit-self.rs:49:1: 49:2
        return;                          // scope 0 at ui/self/ufcs-explicit-self.rs:49:2: 49:2
    }

    bb28 (cleanup): {
        drop(_53) -> bb31;               // scope 2 at ui/self/ufcs-explicit-self.rs:49:1: 49:2
    }

    bb29 (cleanup): {
        resume;                          // scope 0 at ui/self/ufcs-explicit-self.rs:38:1: 49:2
    }

    bb30 (cleanup): {
        drop(_27) -> bb33;               // scope 1 at ui/self/ufcs-explicit-self.rs:49:1: 49:2
    }

    bb31 (cleanup): {
        switchInt(_81) -> [0: bb33, otherwise: bb30]; // scope 1 at ui/self/ufcs-explicit-self.rs:49:1: 49:2
    }

    bb32 (cleanup): {
        drop(_1) -> bb29;                // scope 0 at ui/self/ufcs-explicit-self.rs:49:1: 49:2
    }

    bb33 (cleanup): {
        switchInt(_82) -> [0: bb29, otherwise: bb32]; // scope 0 at ui/self/ufcs-explicit-self.rs:49:1: 49:2
    }
}

promoted[0] in main: &[&str; 4] = {
    let mut _0: &[&str; 4];              // return place in scope 0 at ui/self/ufcs-explicit-self.rs:48:14: 48:24
    let mut _1: [&str; 4];               // in scope 0 at ui/self/ufcs-explicit-self.rs:48:14: 48:24

    bb0: {
        _1 = [const "", const " ", const " ", const "\n"]; // scope 0 at ui/self/ufcs-explicit-self.rs:48:14: 48:24
                                         // mir::Constant
                                         // + span: ui/self/ufcs-explicit-self.rs:48:14: 48:24
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
                                         // mir::Constant
                                         // + span: ui/self/ufcs-explicit-self.rs:48:14: 48:24
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
                                         // mir::Constant
                                         // + span: ui/self/ufcs-explicit-self.rs:48:14: 48:24
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
                                         // mir::Constant
                                         // + span: ui/self/ufcs-explicit-self.rs:48:14: 48:24
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at ui/self/ufcs-explicit-self.rs:48:14: 48:24
        return;                          // scope 0 at ui/self/ufcs-explicit-self.rs:48:14: 48:24
    }
}

promoted[1] in main: &[&str; 4] = {
    let mut _0: &[&str; 4];              // return place in scope 0 at ui/self/ufcs-explicit-self.rs:46:14: 46:24
    let mut _1: [&str; 4];               // in scope 0 at ui/self/ufcs-explicit-self.rs:46:14: 46:24

    bb0: {
        _1 = [const "", const " ", const " ", const "\n"]; // scope 0 at ui/self/ufcs-explicit-self.rs:46:14: 46:24
                                         // mir::Constant
                                         // + span: ui/self/ufcs-explicit-self.rs:46:14: 46:24
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
                                         // mir::Constant
                                         // + span: ui/self/ufcs-explicit-self.rs:46:14: 46:24
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
                                         // mir::Constant
                                         // + span: ui/self/ufcs-explicit-self.rs:46:14: 46:24
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
                                         // mir::Constant
                                         // + span: ui/self/ufcs-explicit-self.rs:46:14: 46:24
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at ui/self/ufcs-explicit-self.rs:46:14: 46:24
        return;                          // scope 0 at ui/self/ufcs-explicit-self.rs:46:14: 46:24
    }
}

promoted[2] in main: &[&str; 4] = {
    let mut _0: &[&str; 4];              // return place in scope 0 at ui/self/ufcs-explicit-self.rs:42:14: 42:24
    let mut _1: [&str; 4];               // in scope 0 at ui/self/ufcs-explicit-self.rs:42:14: 42:24

    bb0: {
        _1 = [const "", const " ", const " ", const "\n"]; // scope 0 at ui/self/ufcs-explicit-self.rs:42:14: 42:24
                                         // mir::Constant
                                         // + span: ui/self/ufcs-explicit-self.rs:42:14: 42:24
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
                                         // mir::Constant
                                         // + span: ui/self/ufcs-explicit-self.rs:42:14: 42:24
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
                                         // mir::Constant
                                         // + span: ui/self/ufcs-explicit-self.rs:42:14: 42:24
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
                                         // mir::Constant
                                         // + span: ui/self/ufcs-explicit-self.rs:42:14: 42:24
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at ui/self/ufcs-explicit-self.rs:42:14: 42:24
        return;                          // scope 0 at ui/self/ufcs-explicit-self.rs:42:14: 42:24
    }
}
