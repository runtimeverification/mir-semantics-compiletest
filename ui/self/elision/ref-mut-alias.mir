// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
fn <impl at ui/self/elision/ref-mut-alias.rs:11:1: 11:12>::ref_Alias(_1: &mut Struct, _2: &u32) -> &u32 {
    debug self => _1;                    // in scope 0 at ui/self/elision/ref-mut-alias.rs:14:18: 14:22
    debug f => _2;                       // in scope 0 at ui/self/elision/ref-mut-alias.rs:14:36: 14:37
    let mut _0: &u32;                    // return place in scope 0 at ui/self/elision/ref-mut-alias.rs:14:48: 14:52

    bb0: {
        _0 = _2;                         // scope 0 at ui/self/elision/ref-mut-alias.rs:15:9: 15:10
        return;                          // scope 0 at ui/self/elision/ref-mut-alias.rs:16:6: 16:6
    }
}

fn <impl at ui/self/elision/ref-mut-alias.rs:11:1: 11:12>::box_ref_Alias(_1: Box<&mut Struct>, _2: &u32) -> &u32 {
    debug self => _1;                    // in scope 0 at ui/self/elision/ref-mut-alias.rs:18:22: 18:26
    debug f => _2;                       // in scope 0 at ui/self/elision/ref-mut-alias.rs:18:45: 18:46
    let mut _0: &u32;                    // return place in scope 0 at ui/self/elision/ref-mut-alias.rs:18:57: 18:61

    bb0: {
        _0 = _2;                         // scope 0 at ui/self/elision/ref-mut-alias.rs:19:9: 19:10
        drop(_1) -> bb1;                 // scope 0 at ui/self/elision/ref-mut-alias.rs:20:5: 20:6
    }

    bb1: {
        return;                          // scope 0 at ui/self/elision/ref-mut-alias.rs:20:6: 20:6
    }
}

fn <impl at ui/self/elision/ref-mut-alias.rs:11:1: 11:12>::pin_ref_Alias(_1: Pin<&mut Struct>, _2: &u32) -> &u32 {
    debug self => _1;                    // in scope 0 at ui/self/elision/ref-mut-alias.rs:22:22: 22:26
    debug f => _2;                       // in scope 0 at ui/self/elision/ref-mut-alias.rs:22:45: 22:46
    let mut _0: &u32;                    // return place in scope 0 at ui/self/elision/ref-mut-alias.rs:22:57: 22:61

    bb0: {
        _0 = _2;                         // scope 0 at ui/self/elision/ref-mut-alias.rs:23:9: 23:10
        return;                          // scope 0 at ui/self/elision/ref-mut-alias.rs:24:6: 24:6
    }
}

fn <impl at ui/self/elision/ref-mut-alias.rs:11:1: 11:12>::box_box_ref_Alias(_1: Box<Box<&mut Struct>>, _2: &u32) -> &u32 {
    debug self => _1;                    // in scope 0 at ui/self/elision/ref-mut-alias.rs:26:26: 26:30
    debug f => _2;                       // in scope 0 at ui/self/elision/ref-mut-alias.rs:26:54: 26:55
    let mut _0: &u32;                    // return place in scope 0 at ui/self/elision/ref-mut-alias.rs:26:66: 26:70

    bb0: {
        _0 = _2;                         // scope 0 at ui/self/elision/ref-mut-alias.rs:27:9: 27:10
        drop(_1) -> bb1;                 // scope 0 at ui/self/elision/ref-mut-alias.rs:28:5: 28:6
    }

    bb1: {
        return;                          // scope 0 at ui/self/elision/ref-mut-alias.rs:28:6: 28:6
    }
}

fn <impl at ui/self/elision/ref-mut-alias.rs:11:1: 11:12>::box_pin_ref_Alias(_1: Box<Pin<&mut Struct>>, _2: &u32) -> &u32 {
    debug self => _1;                    // in scope 0 at ui/self/elision/ref-mut-alias.rs:30:26: 30:30
    debug f => _2;                       // in scope 0 at ui/self/elision/ref-mut-alias.rs:30:54: 30:55
    let mut _0: &u32;                    // return place in scope 0 at ui/self/elision/ref-mut-alias.rs:30:66: 30:70

    bb0: {
        _0 = _2;                         // scope 0 at ui/self/elision/ref-mut-alias.rs:31:9: 31:10
        drop(_1) -> bb1;                 // scope 0 at ui/self/elision/ref-mut-alias.rs:32:5: 32:6
    }

    bb1: {
        return;                          // scope 0 at ui/self/elision/ref-mut-alias.rs:32:6: 32:6
    }
}

fn main() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/self/elision/ref-mut-alias.rs:35:11: 35:11

    bb0: {
        return;                          // scope 0 at ui/self/elision/ref-mut-alias.rs:35:14: 35:14
    }
}
