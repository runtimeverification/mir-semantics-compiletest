// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
fn <impl at ui/self/elision/self.rs:9:1: 9:12>::take_self(_1: Struct, _2: &u32) -> &u32 {
    debug self => _1;                    // in scope 0 at ui/self/elision/self.rs:10:18: 10:22
    debug f => _2;                       // in scope 0 at ui/self/elision/self.rs:10:24: 10:25
    let mut _0: &u32;                    // return place in scope 0 at ui/self/elision/self.rs:10:36: 10:40

    bb0: {
        _0 = _2;                         // scope 0 at ui/self/elision/self.rs:11:9: 11:10
        return;                          // scope 0 at ui/self/elision/self.rs:12:6: 12:6
    }
}

fn <impl at ui/self/elision/self.rs:9:1: 9:12>::take_Self(_1: Struct, _2: &u32) -> &u32 {
    debug self => _1;                    // in scope 0 at ui/self/elision/self.rs:14:18: 14:22
    debug f => _2;                       // in scope 0 at ui/self/elision/self.rs:14:30: 14:31
    let mut _0: &u32;                    // return place in scope 0 at ui/self/elision/self.rs:14:42: 14:46

    bb0: {
        _0 = _2;                         // scope 0 at ui/self/elision/self.rs:15:9: 15:10
        return;                          // scope 0 at ui/self/elision/self.rs:16:6: 16:6
    }
}

fn <impl at ui/self/elision/self.rs:9:1: 9:12>::take_Box_Self(_1: Box<Struct>, _2: &u32) -> &u32 {
    debug self => _1;                    // in scope 0 at ui/self/elision/self.rs:18:22: 18:26
    debug f => _2;                       // in scope 0 at ui/self/elision/self.rs:18:39: 18:40
    let mut _0: &u32;                    // return place in scope 0 at ui/self/elision/self.rs:18:51: 18:55

    bb0: {
        _0 = _2;                         // scope 0 at ui/self/elision/self.rs:19:9: 19:10
        drop(_1) -> bb1;                 // scope 0 at ui/self/elision/self.rs:20:5: 20:6
    }

    bb1: {
        return;                          // scope 0 at ui/self/elision/self.rs:20:6: 20:6
    }
}

fn <impl at ui/self/elision/self.rs:9:1: 9:12>::take_Box_Box_Self(_1: Box<Box<Struct>>, _2: &u32) -> &u32 {
    debug self => _1;                    // in scope 0 at ui/self/elision/self.rs:22:26: 22:30
    debug f => _2;                       // in scope 0 at ui/self/elision/self.rs:22:48: 22:49
    let mut _0: &u32;                    // return place in scope 0 at ui/self/elision/self.rs:22:60: 22:64

    bb0: {
        _0 = _2;                         // scope 0 at ui/self/elision/self.rs:23:9: 23:10
        drop(_1) -> bb1;                 // scope 0 at ui/self/elision/self.rs:24:5: 24:6
    }

    bb1: {
        return;                          // scope 0 at ui/self/elision/self.rs:24:6: 24:6
    }
}

fn <impl at ui/self/elision/self.rs:9:1: 9:12>::take_Rc_Self(_1: Rc<Struct>, _2: &u32) -> &u32 {
    debug self => _1;                    // in scope 0 at ui/self/elision/self.rs:26:21: 26:25
    debug f => _2;                       // in scope 0 at ui/self/elision/self.rs:26:37: 26:38
    let mut _0: &u32;                    // return place in scope 0 at ui/self/elision/self.rs:26:49: 26:53

    bb0: {
        _0 = _2;                         // scope 0 at ui/self/elision/self.rs:27:9: 27:10
        drop(_1) -> bb1;                 // scope 0 at ui/self/elision/self.rs:28:5: 28:6
    }

    bb1: {
        return;                          // scope 0 at ui/self/elision/self.rs:28:6: 28:6
    }
}

fn <impl at ui/self/elision/self.rs:9:1: 9:12>::take_Box_Rc_Self(_1: Box<Rc<Struct>>, _2: &u32) -> &u32 {
    debug self => _1;                    // in scope 0 at ui/self/elision/self.rs:30:25: 30:29
    debug f => _2;                       // in scope 0 at ui/self/elision/self.rs:30:46: 30:47
    let mut _0: &u32;                    // return place in scope 0 at ui/self/elision/self.rs:30:58: 30:62

    bb0: {
        _0 = _2;                         // scope 0 at ui/self/elision/self.rs:31:9: 31:10
        drop(_1) -> bb1;                 // scope 0 at ui/self/elision/self.rs:32:5: 32:6
    }

    bb1: {
        return;                          // scope 0 at ui/self/elision/self.rs:32:6: 32:6
    }
}

fn main() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/self/elision/self.rs:35:11: 35:11

    bb0: {
        return;                          // scope 0 at ui/self/elision/self.rs:35:14: 35:14
    }
}
