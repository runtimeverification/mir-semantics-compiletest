// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
fn <impl at ui/self/elision/lt-alias.rs:11:1: 11:19>::take_self(_1: Struct<'_>, _2: &u32) -> &u32 {
    debug self => _1;                    // in scope 0 at ui/self/elision/lt-alias.rs:12:18: 12:22
    debug f => _2;                       // in scope 0 at ui/self/elision/lt-alias.rs:12:24: 12:25
    let mut _0: &u32;                    // return place in scope 0 at ui/self/elision/lt-alias.rs:12:36: 12:40

    bb0: {
        _0 = _2;                         // scope 0 at ui/self/elision/lt-alias.rs:13:9: 13:10
        return;                          // scope 0 at ui/self/elision/lt-alias.rs:14:6: 14:6
    }
}

fn <impl at ui/self/elision/lt-alias.rs:11:1: 11:19>::take_Alias(_1: Struct<'_>, _2: &u32) -> &u32 {
    debug self => _1;                    // in scope 0 at ui/self/elision/lt-alias.rs:16:19: 16:23
    debug f => _2;                       // in scope 0 at ui/self/elision/lt-alias.rs:16:36: 16:37
    let mut _0: &u32;                    // return place in scope 0 at ui/self/elision/lt-alias.rs:16:48: 16:52

    bb0: {
        _0 = _2;                         // scope 0 at ui/self/elision/lt-alias.rs:17:9: 17:10
        return;                          // scope 0 at ui/self/elision/lt-alias.rs:18:6: 18:6
    }
}

fn <impl at ui/self/elision/lt-alias.rs:11:1: 11:19>::take_Box_Alias(_1: Box<Struct<'_>>, _2: &u32) -> &u32 {
    debug self => _1;                    // in scope 0 at ui/self/elision/lt-alias.rs:20:23: 20:27
    debug f => _2;                       // in scope 0 at ui/self/elision/lt-alias.rs:20:45: 20:46
    let mut _0: &u32;                    // return place in scope 0 at ui/self/elision/lt-alias.rs:20:57: 20:61

    bb0: {
        _0 = _2;                         // scope 0 at ui/self/elision/lt-alias.rs:21:9: 21:10
        drop(_1) -> bb1;                 // scope 0 at ui/self/elision/lt-alias.rs:22:5: 22:6
    }

    bb1: {
        return;                          // scope 0 at ui/self/elision/lt-alias.rs:22:6: 22:6
    }
}

fn <impl at ui/self/elision/lt-alias.rs:11:1: 11:19>::take_Box_Box_Alias(_1: Box<Box<Struct<'_>>>, _2: &u32) -> &u32 {
    debug self => _1;                    // in scope 0 at ui/self/elision/lt-alias.rs:24:27: 24:31
    debug f => _2;                       // in scope 0 at ui/self/elision/lt-alias.rs:24:54: 24:55
    let mut _0: &u32;                    // return place in scope 0 at ui/self/elision/lt-alias.rs:24:66: 24:70

    bb0: {
        _0 = _2;                         // scope 0 at ui/self/elision/lt-alias.rs:25:9: 25:10
        drop(_1) -> bb1;                 // scope 0 at ui/self/elision/lt-alias.rs:26:5: 26:6
    }

    bb1: {
        return;                          // scope 0 at ui/self/elision/lt-alias.rs:26:6: 26:6
    }
}

fn <impl at ui/self/elision/lt-alias.rs:11:1: 11:19>::take_Rc_Alias(_1: Rc<Struct<'_>>, _2: &u32) -> &u32 {
    debug self => _1;                    // in scope 0 at ui/self/elision/lt-alias.rs:28:22: 28:26
    debug f => _2;                       // in scope 0 at ui/self/elision/lt-alias.rs:28:43: 28:44
    let mut _0: &u32;                    // return place in scope 0 at ui/self/elision/lt-alias.rs:28:55: 28:59

    bb0: {
        _0 = _2;                         // scope 0 at ui/self/elision/lt-alias.rs:29:9: 29:10
        drop(_1) -> bb1;                 // scope 0 at ui/self/elision/lt-alias.rs:30:5: 30:6
    }

    bb1: {
        return;                          // scope 0 at ui/self/elision/lt-alias.rs:30:6: 30:6
    }
}

fn <impl at ui/self/elision/lt-alias.rs:11:1: 11:19>::take_Box_Rc_Alias(_1: Box<Rc<Struct<'_>>>, _2: &u32) -> &u32 {
    debug self => _1;                    // in scope 0 at ui/self/elision/lt-alias.rs:32:26: 32:30
    debug f => _2;                       // in scope 0 at ui/self/elision/lt-alias.rs:32:52: 32:53
    let mut _0: &u32;                    // return place in scope 0 at ui/self/elision/lt-alias.rs:32:64: 32:68

    bb0: {
        _0 = _2;                         // scope 0 at ui/self/elision/lt-alias.rs:33:9: 33:10
        drop(_1) -> bb1;                 // scope 0 at ui/self/elision/lt-alias.rs:34:5: 34:6
    }

    bb1: {
        return;                          // scope 0 at ui/self/elision/lt-alias.rs:34:6: 34:6
    }
}

fn main() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/self/elision/lt-alias.rs:37:11: 37:11

    bb0: {
        return;                          // scope 0 at ui/self/elision/lt-alias.rs:37:14: 37:14
    }
}
