// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
fn <impl at ui/self/elision/lt-struct.rs:9:1: 9:20>::take_self(_1: Struct<'_>, _2: &u32) -> &u32 {
    debug self => _1;                    // in scope 0 at ui/self/elision/lt-struct.rs:10:18: 10:22
    debug f => _2;                       // in scope 0 at ui/self/elision/lt-struct.rs:10:24: 10:25
    let mut _0: &u32;                    // return place in scope 0 at ui/self/elision/lt-struct.rs:10:36: 10:40

    bb0: {
        _0 = _2;                         // scope 0 at ui/self/elision/lt-struct.rs:11:9: 11:10
        return;                          // scope 0 at ui/self/elision/lt-struct.rs:12:6: 12:6
    }
}

fn <impl at ui/self/elision/lt-struct.rs:9:1: 9:20>::take_Struct(_1: Struct<'_>, _2: &u32) -> &u32 {
    debug self => _1;                    // in scope 0 at ui/self/elision/lt-struct.rs:14:20: 14:24
    debug f => _2;                       // in scope 0 at ui/self/elision/lt-struct.rs:14:38: 14:39
    let mut _0: &u32;                    // return place in scope 0 at ui/self/elision/lt-struct.rs:14:50: 14:54

    bb0: {
        _0 = _2;                         // scope 0 at ui/self/elision/lt-struct.rs:15:9: 15:10
        return;                          // scope 0 at ui/self/elision/lt-struct.rs:16:6: 16:6
    }
}

fn <impl at ui/self/elision/lt-struct.rs:9:1: 9:20>::take_Box_Struct(_1: Box<Struct<'_>>, _2: &u32) -> &u32 {
    debug self => _1;                    // in scope 0 at ui/self/elision/lt-struct.rs:18:24: 18:28
    debug f => _2;                       // in scope 0 at ui/self/elision/lt-struct.rs:18:47: 18:48
    let mut _0: &u32;                    // return place in scope 0 at ui/self/elision/lt-struct.rs:18:59: 18:63

    bb0: {
        _0 = _2;                         // scope 0 at ui/self/elision/lt-struct.rs:19:9: 19:10
        drop(_1) -> bb1;                 // scope 0 at ui/self/elision/lt-struct.rs:20:5: 20:6
    }

    bb1: {
        return;                          // scope 0 at ui/self/elision/lt-struct.rs:20:6: 20:6
    }
}

fn <impl at ui/self/elision/lt-struct.rs:9:1: 9:20>::take_Box_Box_Struct(_1: Box<Box<Struct<'_>>>, _2: &u32) -> &u32 {
    debug self => _1;                    // in scope 0 at ui/self/elision/lt-struct.rs:22:28: 22:32
    debug f => _2;                       // in scope 0 at ui/self/elision/lt-struct.rs:22:56: 22:57
    let mut _0: &u32;                    // return place in scope 0 at ui/self/elision/lt-struct.rs:22:68: 22:72

    bb0: {
        _0 = _2;                         // scope 0 at ui/self/elision/lt-struct.rs:23:9: 23:10
        drop(_1) -> bb1;                 // scope 0 at ui/self/elision/lt-struct.rs:24:5: 24:6
    }

    bb1: {
        return;                          // scope 0 at ui/self/elision/lt-struct.rs:24:6: 24:6
    }
}

fn <impl at ui/self/elision/lt-struct.rs:9:1: 9:20>::take_Rc_Struct(_1: Rc<Struct<'_>>, _2: &u32) -> &u32 {
    debug self => _1;                    // in scope 0 at ui/self/elision/lt-struct.rs:26:23: 26:27
    debug f => _2;                       // in scope 0 at ui/self/elision/lt-struct.rs:26:45: 26:46
    let mut _0: &u32;                    // return place in scope 0 at ui/self/elision/lt-struct.rs:26:57: 26:61

    bb0: {
        _0 = _2;                         // scope 0 at ui/self/elision/lt-struct.rs:27:9: 27:10
        drop(_1) -> bb1;                 // scope 0 at ui/self/elision/lt-struct.rs:28:5: 28:6
    }

    bb1: {
        return;                          // scope 0 at ui/self/elision/lt-struct.rs:28:6: 28:6
    }
}

fn <impl at ui/self/elision/lt-struct.rs:9:1: 9:20>::take_Box_Rc_Struct(_1: Box<Rc<Struct<'_>>>, _2: &u32) -> &u32 {
    debug self => _1;                    // in scope 0 at ui/self/elision/lt-struct.rs:30:27: 30:31
    debug f => _2;                       // in scope 0 at ui/self/elision/lt-struct.rs:30:54: 30:55
    let mut _0: &u32;                    // return place in scope 0 at ui/self/elision/lt-struct.rs:30:66: 30:70

    bb0: {
        _0 = _2;                         // scope 0 at ui/self/elision/lt-struct.rs:31:9: 31:10
        drop(_1) -> bb1;                 // scope 0 at ui/self/elision/lt-struct.rs:32:5: 32:6
    }

    bb1: {
        return;                          // scope 0 at ui/self/elision/lt-struct.rs:32:6: 32:6
    }
}

fn main() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/self/elision/lt-struct.rs:35:11: 35:11

    bb0: {
        return;                          // scope 0 at ui/self/elision/lt-struct.rs:35:14: 35:14
    }
}
