// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
fn <impl at ui/self/elision/assoc.rs:17:1: 17:12>::assoc(_1: Struct, _2: &u32) -> &u32 {
    debug self => _1;                    // in scope 0 at ui/self/elision/assoc.rs:18:14: 18:18
    debug f => _2;                       // in scope 0 at ui/self/elision/assoc.rs:18:50: 18:51
    let mut _0: &u32;                    // return place in scope 0 at ui/self/elision/assoc.rs:18:62: 18:66

    bb0: {
        _0 = _2;                         // scope 0 at ui/self/elision/assoc.rs:19:9: 19:10
        return;                          // scope 0 at ui/self/elision/assoc.rs:20:6: 20:6
    }
}

fn <impl at ui/self/elision/assoc.rs:17:1: 17:12>::box_AssocType(_1: Box<Struct>, _2: &u32) -> &u32 {
    debug self => _1;                    // in scope 0 at ui/self/elision/assoc.rs:22:22: 22:26
    debug f => _2;                       // in scope 0 at ui/self/elision/assoc.rs:22:63: 22:64
    let mut _0: &u32;                    // return place in scope 0 at ui/self/elision/assoc.rs:22:75: 22:79

    bb0: {
        _0 = _2;                         // scope 0 at ui/self/elision/assoc.rs:23:9: 23:10
        drop(_1) -> bb1;                 // scope 0 at ui/self/elision/assoc.rs:24:5: 24:6
    }

    bb1: {
        return;                          // scope 0 at ui/self/elision/assoc.rs:24:6: 24:6
    }
}

fn <impl at ui/self/elision/assoc.rs:17:1: 17:12>::rc_AssocType(_1: Rc<Struct>, _2: &u32) -> &u32 {
    debug self => _1;                    // in scope 0 at ui/self/elision/assoc.rs:26:21: 26:25
    debug f => _2;                       // in scope 0 at ui/self/elision/assoc.rs:26:61: 26:62
    let mut _0: &u32;                    // return place in scope 0 at ui/self/elision/assoc.rs:26:73: 26:77

    bb0: {
        _0 = _2;                         // scope 0 at ui/self/elision/assoc.rs:27:9: 27:10
        drop(_1) -> bb1;                 // scope 0 at ui/self/elision/assoc.rs:28:5: 28:6
    }

    bb1: {
        return;                          // scope 0 at ui/self/elision/assoc.rs:28:6: 28:6
    }
}

fn <impl at ui/self/elision/assoc.rs:17:1: 17:12>::box_box_AssocType(_1: Box<Box<Struct>>, _2: &u32) -> &u32 {
    debug self => _1;                    // in scope 0 at ui/self/elision/assoc.rs:30:26: 30:30
    debug f => _2;                       // in scope 0 at ui/self/elision/assoc.rs:30:72: 30:73
    let mut _0: &u32;                    // return place in scope 0 at ui/self/elision/assoc.rs:30:84: 30:88

    bb0: {
        _0 = _2;                         // scope 0 at ui/self/elision/assoc.rs:31:9: 31:10
        drop(_1) -> bb1;                 // scope 0 at ui/self/elision/assoc.rs:32:5: 32:6
    }

    bb1: {
        return;                          // scope 0 at ui/self/elision/assoc.rs:32:6: 32:6
    }
}

fn <impl at ui/self/elision/assoc.rs:17:1: 17:12>::box_rc_AssocType(_1: Box<Rc<Struct>>, _2: &u32) -> &u32 {
    debug self => _1;                    // in scope 0 at ui/self/elision/assoc.rs:34:25: 34:29
    debug f => _2;                       // in scope 0 at ui/self/elision/assoc.rs:34:70: 34:71
    let mut _0: &u32;                    // return place in scope 0 at ui/self/elision/assoc.rs:34:82: 34:86

    bb0: {
        _0 = _2;                         // scope 0 at ui/self/elision/assoc.rs:35:9: 35:10
        drop(_1) -> bb1;                 // scope 0 at ui/self/elision/assoc.rs:36:5: 36:6
    }

    bb1: {
        return;                          // scope 0 at ui/self/elision/assoc.rs:36:6: 36:6
    }
}

fn main() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/self/elision/assoc.rs:39:11: 39:11

    bb0: {
        return;                          // scope 0 at ui/self/elision/assoc.rs:39:14: 39:14
    }
}
