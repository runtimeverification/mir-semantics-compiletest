// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
fn <impl at ui/self/elision/struct.rs:9:1: 9:12>::ref_Struct(_1: Struct, _2: &u32) -> &u32 {
    debug self => _1;                    // in scope 0 at ui/self/elision/struct.rs:10:19: 10:23
    debug f => _2;                       // in scope 0 at ui/self/elision/struct.rs:10:33: 10:34
    let mut _0: &u32;                    // return place in scope 0 at ui/self/elision/struct.rs:10:45: 10:49

    bb0: {
        _0 = _2;                         // scope 0 at ui/self/elision/struct.rs:11:9: 11:10
        return;                          // scope 0 at ui/self/elision/struct.rs:12:6: 12:6
    }
}

fn <impl at ui/self/elision/struct.rs:9:1: 9:12>::box_Struct(_1: Box<Struct>, _2: &u32) -> &u32 {
    debug self => _1;                    // in scope 0 at ui/self/elision/struct.rs:14:19: 14:23
    debug f => _2;                       // in scope 0 at ui/self/elision/struct.rs:14:38: 14:39
    let mut _0: &u32;                    // return place in scope 0 at ui/self/elision/struct.rs:14:50: 14:54

    bb0: {
        _0 = _2;                         // scope 0 at ui/self/elision/struct.rs:15:9: 15:10
        drop(_1) -> bb1;                 // scope 0 at ui/self/elision/struct.rs:16:5: 16:6
    }

    bb1: {
        return;                          // scope 0 at ui/self/elision/struct.rs:16:6: 16:6
    }
}

fn <impl at ui/self/elision/struct.rs:9:1: 9:12>::rc_Struct(_1: Rc<Struct>, _2: &u32) -> &u32 {
    debug self => _1;                    // in scope 0 at ui/self/elision/struct.rs:18:18: 18:22
    debug f => _2;                       // in scope 0 at ui/self/elision/struct.rs:18:36: 18:37
    let mut _0: &u32;                    // return place in scope 0 at ui/self/elision/struct.rs:18:48: 18:52

    bb0: {
        _0 = _2;                         // scope 0 at ui/self/elision/struct.rs:19:9: 19:10
        drop(_1) -> bb1;                 // scope 0 at ui/self/elision/struct.rs:20:5: 20:6
    }

    bb1: {
        return;                          // scope 0 at ui/self/elision/struct.rs:20:6: 20:6
    }
}

fn <impl at ui/self/elision/struct.rs:9:1: 9:12>::box_box_Struct(_1: Box<Box<Struct>>, _2: &u32) -> &u32 {
    debug self => _1;                    // in scope 0 at ui/self/elision/struct.rs:22:23: 22:27
    debug f => _2;                       // in scope 0 at ui/self/elision/struct.rs:22:47: 22:48
    let mut _0: &u32;                    // return place in scope 0 at ui/self/elision/struct.rs:22:59: 22:63

    bb0: {
        _0 = _2;                         // scope 0 at ui/self/elision/struct.rs:23:9: 23:10
        drop(_1) -> bb1;                 // scope 0 at ui/self/elision/struct.rs:24:5: 24:6
    }

    bb1: {
        return;                          // scope 0 at ui/self/elision/struct.rs:24:6: 24:6
    }
}

fn <impl at ui/self/elision/struct.rs:9:1: 9:12>::box_rc_Struct(_1: Box<Rc<Struct>>, _2: &u32) -> &u32 {
    debug self => _1;                    // in scope 0 at ui/self/elision/struct.rs:26:22: 26:26
    debug f => _2;                       // in scope 0 at ui/self/elision/struct.rs:26:45: 26:46
    let mut _0: &u32;                    // return place in scope 0 at ui/self/elision/struct.rs:26:57: 26:61

    bb0: {
        _0 = _2;                         // scope 0 at ui/self/elision/struct.rs:27:9: 27:10
        drop(_1) -> bb1;                 // scope 0 at ui/self/elision/struct.rs:28:5: 28:6
    }

    bb1: {
        return;                          // scope 0 at ui/self/elision/struct.rs:28:6: 28:6
    }
}

fn main() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/self/elision/struct.rs:31:11: 31:11

    bb0: {
        return;                          // scope 0 at ui/self/elision/struct.rs:31:14: 31:14
    }
}
