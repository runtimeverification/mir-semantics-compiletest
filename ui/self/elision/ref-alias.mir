// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
fn <impl at ui/self/elision/ref-alias.rs:11:1: 11:12>::ref_Alias(_1: &Struct, _2: &u32) -> &u32 {
    debug self => _1;                    // in scope 0 at ui/self/elision/ref-alias.rs:17:18: 17:22
    debug f => _2;                       // in scope 0 at ui/self/elision/ref-alias.rs:17:32: 17:33
    let mut _0: &u32;                    // return place in scope 0 at ui/self/elision/ref-alias.rs:17:44: 17:48

    bb0: {
        _0 = _2;                         // scope 0 at ui/self/elision/ref-alias.rs:18:9: 18:10
        return;                          // scope 0 at ui/self/elision/ref-alias.rs:19:6: 19:6
    }
}

fn <impl at ui/self/elision/ref-alias.rs:11:1: 11:12>::box_ref_Alias(_1: Box<&Struct>, _2: &u32) -> &u32 {
    debug self => _1;                    // in scope 0 at ui/self/elision/ref-alias.rs:21:22: 21:26
    debug f => _2;                       // in scope 0 at ui/self/elision/ref-alias.rs:21:41: 21:42
    let mut _0: &u32;                    // return place in scope 0 at ui/self/elision/ref-alias.rs:21:53: 21:57

    bb0: {
        _0 = _2;                         // scope 0 at ui/self/elision/ref-alias.rs:22:9: 22:10
        drop(_1) -> bb1;                 // scope 0 at ui/self/elision/ref-alias.rs:23:5: 23:6
    }

    bb1: {
        return;                          // scope 0 at ui/self/elision/ref-alias.rs:23:6: 23:6
    }
}

fn <impl at ui/self/elision/ref-alias.rs:11:1: 11:12>::pin_ref_Alias(_1: Pin<&Struct>, _2: &u32) -> &u32 {
    debug self => _1;                    // in scope 0 at ui/self/elision/ref-alias.rs:25:22: 25:26
    debug f => _2;                       // in scope 0 at ui/self/elision/ref-alias.rs:25:41: 25:42
    let mut _0: &u32;                    // return place in scope 0 at ui/self/elision/ref-alias.rs:25:53: 25:57

    bb0: {
        _0 = _2;                         // scope 0 at ui/self/elision/ref-alias.rs:26:9: 26:10
        return;                          // scope 0 at ui/self/elision/ref-alias.rs:27:6: 27:6
    }
}

fn <impl at ui/self/elision/ref-alias.rs:11:1: 11:12>::box_box_ref_Alias(_1: Box<Box<&Struct>>, _2: &u32) -> &u32 {
    debug self => _1;                    // in scope 0 at ui/self/elision/ref-alias.rs:29:26: 29:30
    debug f => _2;                       // in scope 0 at ui/self/elision/ref-alias.rs:29:50: 29:51
    let mut _0: &u32;                    // return place in scope 0 at ui/self/elision/ref-alias.rs:29:62: 29:66

    bb0: {
        _0 = _2;                         // scope 0 at ui/self/elision/ref-alias.rs:30:9: 30:10
        drop(_1) -> bb1;                 // scope 0 at ui/self/elision/ref-alias.rs:31:5: 31:6
    }

    bb1: {
        return;                          // scope 0 at ui/self/elision/ref-alias.rs:31:6: 31:6
    }
}

fn <impl at ui/self/elision/ref-alias.rs:11:1: 11:12>::box_pin_ref_Alias(_1: Box<Pin<&Struct>>, _2: &u32) -> &u32 {
    debug self => _1;                    // in scope 0 at ui/self/elision/ref-alias.rs:33:26: 33:30
    debug f => _2;                       // in scope 0 at ui/self/elision/ref-alias.rs:33:50: 33:51
    let mut _0: &u32;                    // return place in scope 0 at ui/self/elision/ref-alias.rs:33:62: 33:66

    bb0: {
        _0 = _2;                         // scope 0 at ui/self/elision/ref-alias.rs:34:9: 34:10
        drop(_1) -> bb1;                 // scope 0 at ui/self/elision/ref-alias.rs:35:5: 35:6
    }

    bb1: {
        return;                          // scope 0 at ui/self/elision/ref-alias.rs:35:6: 35:6
    }
}

fn main() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/self/elision/ref-alias.rs:38:11: 38:11

    bb0: {
        return;                          // scope 0 at ui/self/elision/ref-alias.rs:38:14: 38:14
    }
}
