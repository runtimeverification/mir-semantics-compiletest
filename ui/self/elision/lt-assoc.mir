// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
fn <impl at ui/self/elision/lt-assoc.rs:17:1: 17:20>::take_self(_1: Struct<'_>, _2: &u32) -> &u32 {
    debug self => _1;                    // in scope 0 at ui/self/elision/lt-assoc.rs:18:18: 18:22
    debug f => _2;                       // in scope 0 at ui/self/elision/lt-assoc.rs:18:24: 18:25
    let mut _0: &u32;                    // return place in scope 0 at ui/self/elision/lt-assoc.rs:18:36: 18:40

    bb0: {
        _0 = _2;                         // scope 0 at ui/self/elision/lt-assoc.rs:19:9: 19:10
        return;                          // scope 0 at ui/self/elision/lt-assoc.rs:20:6: 20:6
    }
}

fn <impl at ui/self/elision/lt-assoc.rs:17:1: 17:20>::take_AssocType(_1: Struct<'_>, _2: &u32) -> &u32 {
    debug self => _1;                    // in scope 0 at ui/self/elision/lt-assoc.rs:22:23: 22:27
    debug f => _2;                       // in scope 0 at ui/self/elision/lt-assoc.rs:22:63: 22:64
    let mut _0: &u32;                    // return place in scope 0 at ui/self/elision/lt-assoc.rs:22:75: 22:79

    bb0: {
        _0 = _2;                         // scope 0 at ui/self/elision/lt-assoc.rs:23:9: 23:10
        return;                          // scope 0 at ui/self/elision/lt-assoc.rs:24:6: 24:6
    }
}

fn <impl at ui/self/elision/lt-assoc.rs:17:1: 17:20>::take_Box_AssocType(_1: Box<Struct<'_>>, _2: &u32) -> &u32 {
    debug self => _1;                    // in scope 0 at ui/self/elision/lt-assoc.rs:26:27: 26:31
    debug f => _2;                       // in scope 0 at ui/self/elision/lt-assoc.rs:26:72: 26:73
    let mut _0: &u32;                    // return place in scope 0 at ui/self/elision/lt-assoc.rs:26:84: 26:88

    bb0: {
        _0 = _2;                         // scope 0 at ui/self/elision/lt-assoc.rs:27:9: 27:10
        drop(_1) -> bb1;                 // scope 0 at ui/self/elision/lt-assoc.rs:28:5: 28:6
    }

    bb1: {
        return;                          // scope 0 at ui/self/elision/lt-assoc.rs:28:6: 28:6
    }
}

fn <impl at ui/self/elision/lt-assoc.rs:17:1: 17:20>::take_Box_Box_AssocType(_1: Box<Box<Struct<'_>>>, _2: &u32) -> &u32 {
    debug self => _1;                    // in scope 0 at ui/self/elision/lt-assoc.rs:30:31: 30:35
    debug f => _2;                       // in scope 0 at ui/self/elision/lt-assoc.rs:30:81: 30:82
    let mut _0: &u32;                    // return place in scope 0 at ui/self/elision/lt-assoc.rs:30:93: 30:97

    bb0: {
        _0 = _2;                         // scope 0 at ui/self/elision/lt-assoc.rs:31:9: 31:10
        drop(_1) -> bb1;                 // scope 0 at ui/self/elision/lt-assoc.rs:32:5: 32:6
    }

    bb1: {
        return;                          // scope 0 at ui/self/elision/lt-assoc.rs:32:6: 32:6
    }
}

fn <impl at ui/self/elision/lt-assoc.rs:17:1: 17:20>::take_Rc_AssocType(_1: Rc<Struct<'_>>, _2: &u32) -> &u32 {
    debug self => _1;                    // in scope 0 at ui/self/elision/lt-assoc.rs:34:26: 34:30
    debug f => _2;                       // in scope 0 at ui/self/elision/lt-assoc.rs:34:70: 34:71
    let mut _0: &u32;                    // return place in scope 0 at ui/self/elision/lt-assoc.rs:34:82: 34:86

    bb0: {
        _0 = _2;                         // scope 0 at ui/self/elision/lt-assoc.rs:35:9: 35:10
        drop(_1) -> bb1;                 // scope 0 at ui/self/elision/lt-assoc.rs:36:5: 36:6
    }

    bb1: {
        return;                          // scope 0 at ui/self/elision/lt-assoc.rs:36:6: 36:6
    }
}

fn <impl at ui/self/elision/lt-assoc.rs:17:1: 17:20>::take_Box_Rc_AssocType(_1: Box<Rc<Struct<'_>>>, _2: &u32) -> &u32 {
    debug self => _1;                    // in scope 0 at ui/self/elision/lt-assoc.rs:38:30: 38:34
    debug f => _2;                       // in scope 0 at ui/self/elision/lt-assoc.rs:38:79: 38:80
    let mut _0: &u32;                    // return place in scope 0 at ui/self/elision/lt-assoc.rs:38:91: 38:95

    bb0: {
        _0 = _2;                         // scope 0 at ui/self/elision/lt-assoc.rs:39:9: 39:10
        drop(_1) -> bb1;                 // scope 0 at ui/self/elision/lt-assoc.rs:40:5: 40:6
    }

    bb1: {
        return;                          // scope 0 at ui/self/elision/lt-assoc.rs:40:6: 40:6
    }
}

fn main() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/self/elision/lt-assoc.rs:43:11: 43:11

    bb0: {
        return;                          // scope 0 at ui/self/elision/lt-assoc.rs:43:14: 43:14
    }
}
