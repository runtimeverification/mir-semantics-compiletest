// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
fn <impl at ui/self/elision/lt-self.rs:12:1: 12:20>::take_self(_1: Struct<'_>, _2: &u32) -> &u32 {
    debug self => _1;                    // in scope 0 at ui/self/elision/lt-self.rs:13:18: 13:22
    debug f => _2;                       // in scope 0 at ui/self/elision/lt-self.rs:13:24: 13:25
    let mut _0: &u32;                    // return place in scope 0 at ui/self/elision/lt-self.rs:13:36: 13:40

    bb0: {
        _0 = _2;                         // scope 0 at ui/self/elision/lt-self.rs:14:9: 14:10
        return;                          // scope 0 at ui/self/elision/lt-self.rs:15:6: 15:6
    }
}

fn <impl at ui/self/elision/lt-self.rs:12:1: 12:20>::take_Self(_1: Struct<'_>, _2: &u32) -> &u32 {
    debug self => _1;                    // in scope 0 at ui/self/elision/lt-self.rs:17:18: 17:22
    debug f => _2;                       // in scope 0 at ui/self/elision/lt-self.rs:17:30: 17:31
    let mut _0: &u32;                    // return place in scope 0 at ui/self/elision/lt-self.rs:17:42: 17:46

    bb0: {
        _0 = _2;                         // scope 0 at ui/self/elision/lt-self.rs:18:9: 18:10
        return;                          // scope 0 at ui/self/elision/lt-self.rs:19:6: 19:6
    }
}

fn <impl at ui/self/elision/lt-self.rs:12:1: 12:20>::take_Box_Self(_1: Box<Struct<'_>>, _2: &u32) -> &u32 {
    debug self => _1;                    // in scope 0 at ui/self/elision/lt-self.rs:21:22: 21:26
    debug f => _2;                       // in scope 0 at ui/self/elision/lt-self.rs:21:39: 21:40
    let mut _0: &u32;                    // return place in scope 0 at ui/self/elision/lt-self.rs:21:51: 21:55

    bb0: {
        _0 = _2;                         // scope 0 at ui/self/elision/lt-self.rs:22:9: 22:10
        drop(_1) -> bb1;                 // scope 0 at ui/self/elision/lt-self.rs:23:5: 23:6
    }

    bb1: {
        return;                          // scope 0 at ui/self/elision/lt-self.rs:23:6: 23:6
    }
}

fn <impl at ui/self/elision/lt-self.rs:12:1: 12:20>::take_Box_Box_Self(_1: Box<Box<Struct<'_>>>, _2: &u32) -> &u32 {
    debug self => _1;                    // in scope 0 at ui/self/elision/lt-self.rs:25:26: 25:30
    debug f => _2;                       // in scope 0 at ui/self/elision/lt-self.rs:25:48: 25:49
    let mut _0: &u32;                    // return place in scope 0 at ui/self/elision/lt-self.rs:25:60: 25:64

    bb0: {
        _0 = _2;                         // scope 0 at ui/self/elision/lt-self.rs:26:9: 26:10
        drop(_1) -> bb1;                 // scope 0 at ui/self/elision/lt-self.rs:27:5: 27:6
    }

    bb1: {
        return;                          // scope 0 at ui/self/elision/lt-self.rs:27:6: 27:6
    }
}

fn <impl at ui/self/elision/lt-self.rs:12:1: 12:20>::take_Rc_Self(_1: Rc<Struct<'_>>, _2: &u32) -> &u32 {
    debug self => _1;                    // in scope 0 at ui/self/elision/lt-self.rs:29:21: 29:25
    debug f => _2;                       // in scope 0 at ui/self/elision/lt-self.rs:29:37: 29:38
    let mut _0: &u32;                    // return place in scope 0 at ui/self/elision/lt-self.rs:29:49: 29:53

    bb0: {
        _0 = _2;                         // scope 0 at ui/self/elision/lt-self.rs:30:9: 30:10
        drop(_1) -> bb1;                 // scope 0 at ui/self/elision/lt-self.rs:31:5: 31:6
    }

    bb1: {
        return;                          // scope 0 at ui/self/elision/lt-self.rs:31:6: 31:6
    }
}

fn <impl at ui/self/elision/lt-self.rs:12:1: 12:20>::take_Box_Rc_Self(_1: Box<Rc<Struct<'_>>>, _2: &u32) -> &u32 {
    debug self => _1;                    // in scope 0 at ui/self/elision/lt-self.rs:33:25: 33:29
    debug f => _2;                       // in scope 0 at ui/self/elision/lt-self.rs:33:46: 33:47
    let mut _0: &u32;                    // return place in scope 0 at ui/self/elision/lt-self.rs:33:58: 33:62

    bb0: {
        _0 = _2;                         // scope 0 at ui/self/elision/lt-self.rs:34:9: 34:10
        drop(_1) -> bb1;                 // scope 0 at ui/self/elision/lt-self.rs:35:5: 35:6
    }

    bb1: {
        return;                          // scope 0 at ui/self/elision/lt-self.rs:35:6: 35:6
    }
}

fn main() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/self/elision/lt-self.rs:48:11: 48:11

    bb0: {
        return;                          // scope 0 at ui/self/elision/lt-self.rs:48:14: 48:14
    }
}
