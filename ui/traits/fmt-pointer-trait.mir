// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
fn main() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/traits/fmt-pointer-trait.rs:6:11: 6:11
    let _1: *const u8;                   // in scope 0 at ui/traits/fmt-pointer-trait.rs:7:9: 7:10
    let mut _5: std::string::String;     // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:117:23: 120:6
    let mut _7: std::fmt::Arguments<'_>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
    let mut _8: &[&str];                 // in scope 0 at ui/traits/fmt-pointer-trait.rs:12:21: 12:35
    let mut _9: &[&str; 3];              // in scope 0 at ui/traits/fmt-pointer-trait.rs:12:21: 12:35
    let _10: &[&str; 3];                 // in scope 0 at ui/traits/fmt-pointer-trait.rs:12:21: 12:35
    let mut _11: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
    let mut _12: &[core::fmt::ArgumentV1<'_>; 3]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
    let _13: &[core::fmt::ArgumentV1<'_>; 3]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
    let _14: [core::fmt::ArgumentV1<'_>; 3]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
    let mut _15: core::fmt::ArgumentV1<'_>; // in scope 0 at ui/traits/fmt-pointer-trait.rs:13:21: 13:23
    let mut _16: &std::rc::Rc<usize>;    // in scope 0 at ui/traits/fmt-pointer-trait.rs:13:21: 13:23
    let _17: &std::rc::Rc<usize>;        // in scope 0 at ui/traits/fmt-pointer-trait.rs:13:21: 13:23
    let mut _18: core::fmt::ArgumentV1<'_>; // in scope 0 at ui/traits/fmt-pointer-trait.rs:13:25: 13:28
    let mut _19: &std::sync::Arc<usize>; // in scope 0 at ui/traits/fmt-pointer-trait.rs:13:25: 13:28
    let _20: &std::sync::Arc<usize>;     // in scope 0 at ui/traits/fmt-pointer-trait.rs:13:25: 13:28
    let mut _21: core::fmt::ArgumentV1<'_>; // in scope 0 at ui/traits/fmt-pointer-trait.rs:13:30: 13:31
    let mut _22: &std::boxed::Box<&str>; // in scope 0 at ui/traits/fmt-pointer-trait.rs:13:30: 13:31
    let _23: &std::boxed::Box<&str>;     // in scope 0 at ui/traits/fmt-pointer-trait.rs:13:30: 13:31
    let mut _28: (&std::string::String, &&str); // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _29: &std::string::String;   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let _30: std::string::String;        // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:117:23: 120:6
    let mut _32: std::fmt::Arguments<'_>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
    let mut _33: &[&str];                // in scope 0 at ui/traits/fmt-pointer-trait.rs:19:28: 19:35
    let mut _34: &[&str; 1];             // in scope 0 at ui/traits/fmt-pointer-trait.rs:19:28: 19:35
    let _35: &[&str; 1];                 // in scope 0 at ui/traits/fmt-pointer-trait.rs:19:28: 19:35
    let mut _36: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
    let mut _37: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
    let _38: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
    let _39: [core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
    let mut _40: core::fmt::ArgumentV1<'_>; // in scope 0 at ui/traits/fmt-pointer-trait.rs:19:37: 19:38
    let mut _41: &*const u8;             // in scope 0 at ui/traits/fmt-pointer-trait.rs:19:37: 19:38
    let _42: &*const u8;                 // in scope 0 at ui/traits/fmt-pointer-trait.rs:19:37: 19:38
    let mut _43: &[std::fmt::rt::v1::Argument]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
    let mut _44: &[std::fmt::rt::v1::Argument; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
    let _45: &[std::fmt::rt::v1::Argument; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
    let _46: [std::fmt::rt::v1::Argument; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
    let mut _47: std::fmt::rt::v1::Argument; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
    let mut _48: std::fmt::rt::v1::Alignment; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
    let mut _49: std::fmt::rt::v1::Count; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
    let mut _50: std::fmt::rt::v1::Count; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
    let mut _51: core::fmt::UnsafeArg;   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
    let mut _52: &&str;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _55: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    let mut _56: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
    let mut _57: &std::string::String;   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
    let mut _58: &&str;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
    let _60: !;                          // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
    let mut _61: core::panicking::AssertKind; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
    let mut _62: &std::string::String;   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let _63: &std::string::String;       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let mut _64: &&str;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let _65: &&str;                      // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let mut _66: std::option::Option<std::fmt::Arguments<'_>>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
    let mut _67: (&std::string::String, &&str); // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _68: &std::string::String;   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let _69: std::string::String;        // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:117:23: 120:6
    let mut _71: std::fmt::Arguments<'_>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
    let mut _72: &[&str];                // in scope 0 at ui/traits/fmt-pointer-trait.rs:22:24: 22:30
    let mut _73: &[&str; 1];             // in scope 0 at ui/traits/fmt-pointer-trait.rs:22:24: 22:30
    let _74: &[&str; 1];                 // in scope 0 at ui/traits/fmt-pointer-trait.rs:22:24: 22:30
    let mut _75: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
    let mut _76: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
    let _77: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
    let _78: [core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
    let mut _79: core::fmt::ArgumentV1<'_>; // in scope 0 at ui/traits/fmt-pointer-trait.rs:22:32: 22:33
    let mut _80: &*const u8;             // in scope 0 at ui/traits/fmt-pointer-trait.rs:22:32: 22:33
    let _81: &*const u8;                 // in scope 0 at ui/traits/fmt-pointer-trait.rs:22:32: 22:33
    let mut _82: &&str;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _85: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    let mut _86: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
    let mut _87: &std::string::String;   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
    let mut _88: &&str;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
    let _90: !;                          // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
    let mut _91: core::panicking::AssertKind; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
    let mut _92: &std::string::String;   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let _93: &std::string::String;       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let mut _94: &&str;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let _95: &&str;                      // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let mut _96: std::option::Option<std::fmt::Arguments<'_>>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
    scope 1 {
        debug p => _1;                   // in scope 1 at ui/traits/fmt-pointer-trait.rs:7:9: 7:10
        let _2: std::rc::Rc<usize>;      // in scope 1 at ui/traits/fmt-pointer-trait.rs:8:9: 8:11
        scope 2 {
            debug rc => _2;              // in scope 2 at ui/traits/fmt-pointer-trait.rs:8:9: 8:11
            let _3: std::sync::Arc<usize>; // in scope 2 at ui/traits/fmt-pointer-trait.rs:9:9: 9:12
            scope 3 {
                debug arc => _3;         // in scope 3 at ui/traits/fmt-pointer-trait.rs:9:9: 9:12
                let _4: std::boxed::Box<&str>; // in scope 3 at ui/traits/fmt-pointer-trait.rs:10:9: 10:10
                scope 4 {
                    debug b => _4;       // in scope 4 at ui/traits/fmt-pointer-trait.rs:10:9: 10:10
                    let _6: std::string::String; // in scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:13: 118:16
                    let mut _101: &[&str; 3]; // in scope 4 at ui/traits/fmt-pointer-trait.rs:12:21: 12:35
                    scope 5 {
                        let _24: std::string::String; // in scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:13: 118:16
                        let _25: &std::string::String; // in scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
                        let _26: &&str;  // in scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
                        let _31: std::string::String; // in scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:13: 118:16
                        let _53: &std::string::String; // in scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
                        let _54: &&str;  // in scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
                        let _70: std::string::String; // in scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:13: 118:16
                        let _83: &std::string::String; // in scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
                        let _84: &&str;  // in scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
                        let mut _97: &&str; // in scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                        let mut _98: &[&str; 1]; // in scope 5 at ui/traits/fmt-pointer-trait.rs:22:24: 22:30
                        let mut _99: &&str; // in scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                        let mut _100: &[&str; 1]; // in scope 5 at ui/traits/fmt-pointer-trait.rs:19:28: 19:35
                        scope 7 {
                            debug res => _24; // in scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:13: 118:16
                        }
                        scope 8 {
                        }
                        scope 9 {
                            debug left_val => _25; // in scope 9 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
                            debug right_val => _26; // in scope 9 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
                            let _27: core::panicking::AssertKind; // in scope 9 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                            scope 10 {
                                debug kind => _27; // in scope 10 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                            }
                        }
                        scope 11 {
                            debug res => _31; // in scope 11 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:13: 118:16
                        }
                        scope 12 {
                        }
                        scope 13 {
                            debug left_val => _53; // in scope 13 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
                            debug right_val => _54; // in scope 13 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
                            let _59: core::panicking::AssertKind; // in scope 13 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                            scope 14 {
                                debug kind => _59; // in scope 14 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                            }
                        }
                        scope 15 {
                            debug res => _70; // in scope 15 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:13: 118:16
                        }
                        scope 16 {
                            debug left_val => _83; // in scope 16 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
                            debug right_val => _84; // in scope 16 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
                            let _89: core::panicking::AssertKind; // in scope 16 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                            scope 17 {
                                debug kind => _89; // in scope 17 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                            }
                        }
                    }
                    scope 6 {
                        debug res => _6; // in scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:13: 118:16
                    }
                }
            }
        }
    }

    bb0: {
        _1 = null::<u8>() -> bb1;        // scope 0 at ui/traits/fmt-pointer-trait.rs:7:24: 7:35
                                         // mir::Constant
                                         // + span: ui/traits/fmt-pointer-trait.rs:7:24: 7:33
                                         // + literal: Const { ty: fn() -> *const u8 {null::<u8>}, val: Value(<ZST>) }
    }

    bb1: {
        _2 = Rc::<usize>::new(const 1_usize) -> bb2; // scope 1 at ui/traits/fmt-pointer-trait.rs:8:14: 8:29
                                         // mir::Constant
                                         // + span: ui/traits/fmt-pointer-trait.rs:8:14: 8:21
                                         // + user_ty: UserType(2)
                                         // + literal: Const { ty: fn(usize) -> Rc<usize> {Rc::<usize>::new}, val: Value(<ZST>) }
    }

    bb2: {
        _3 = Arc::<usize>::new(const 1_usize) -> [return: bb3, unwind: bb34]; // scope 2 at ui/traits/fmt-pointer-trait.rs:9:15: 9:31
                                         // mir::Constant
                                         // + span: ui/traits/fmt-pointer-trait.rs:9:15: 9:23
                                         // + user_ty: UserType(3)
                                         // + literal: Const { ty: fn(usize) -> Arc<usize> {Arc::<usize>::new}, val: Value(<ZST>) }
    }

    bb3: {
        _4 = Box::<&str>::new(const "hi") -> [return: bb4, unwind: bb33]; // scope 3 at ui/traits/fmt-pointer-trait.rs:10:13: 10:27
                                         // mir::Constant
                                         // + span: ui/traits/fmt-pointer-trait.rs:10:13: 10:21
                                         // + user_ty: UserType(4)
                                         // + literal: Const { ty: fn(&str) -> Box<&str> {Box::<&str>::new}, val: Value(<ZST>) }
                                         // mir::Constant
                                         // + span: ui/traits/fmt-pointer-trait.rs:10:22: 10:26
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
    }

    bb4: {
        _101 = const _;                  // scope 4 at ui/traits/fmt-pointer-trait.rs:12:21: 12:35
                                         // mir::Constant
                                         // + span: ui/traits/fmt-pointer-trait.rs:12:21: 12:35
                                         // + literal: Const { ty: &[&str; 3], val: Unevaluated(main, [], Some(promoted[6])) }
        _10 = _101;                      // scope 4 at ui/traits/fmt-pointer-trait.rs:12:21: 12:35
        _9 = _10;                        // scope 4 at ui/traits/fmt-pointer-trait.rs:12:21: 12:35
        _8 = move _9 as &[&str] (Pointer(Unsize)); // scope 4 at ui/traits/fmt-pointer-trait.rs:12:21: 12:35
        _17 = &_2;                       // scope 4 at ui/traits/fmt-pointer-trait.rs:13:21: 13:23
        _16 = _17;                       // scope 4 at ui/traits/fmt-pointer-trait.rs:13:21: 13:23
        _15 = core::fmt::ArgumentV1::<'_>::new_pointer::<Rc<usize>>(move _16) -> [return: bb5, unwind: bb32]; // scope 4 at ui/traits/fmt-pointer-trait.rs:13:21: 13:23
                                         // mir::Constant
                                         // + span: ui/traits/fmt-pointer-trait.rs:13:21: 13:23
                                         // + user_ty: UserType(6)
                                         // + literal: Const { ty: for<'b> fn(&'b Rc<usize>) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_pointer::<Rc<usize>>}, val: Value(<ZST>) }
    }

    bb5: {
        _20 = &_3;                       // scope 4 at ui/traits/fmt-pointer-trait.rs:13:25: 13:28
        _19 = _20;                       // scope 4 at ui/traits/fmt-pointer-trait.rs:13:25: 13:28
        _18 = core::fmt::ArgumentV1::<'_>::new_pointer::<Arc<usize>>(move _19) -> [return: bb6, unwind: bb32]; // scope 4 at ui/traits/fmt-pointer-trait.rs:13:25: 13:28
                                         // mir::Constant
                                         // + span: ui/traits/fmt-pointer-trait.rs:13:25: 13:28
                                         // + user_ty: UserType(7)
                                         // + literal: Const { ty: for<'b> fn(&'b Arc<usize>) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_pointer::<Arc<usize>>}, val: Value(<ZST>) }
    }

    bb6: {
        _23 = &_4;                       // scope 4 at ui/traits/fmt-pointer-trait.rs:13:30: 13:31
        _22 = _23;                       // scope 4 at ui/traits/fmt-pointer-trait.rs:13:30: 13:31
        _21 = core::fmt::ArgumentV1::<'_>::new_pointer::<Box<&str>>(move _22) -> [return: bb7, unwind: bb32]; // scope 4 at ui/traits/fmt-pointer-trait.rs:13:30: 13:31
                                         // mir::Constant
                                         // + span: ui/traits/fmt-pointer-trait.rs:13:30: 13:31
                                         // + user_ty: UserType(8)
                                         // + literal: Const { ty: for<'b> fn(&'b Box<&str>) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_pointer::<Box<&str>>}, val: Value(<ZST>) }
    }

    bb7: {
        _14 = [move _15, move _18, move _21]; // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
        _13 = &_14;                      // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
        _12 = _13;                       // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
        _11 = move _12 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
        _7 = Arguments::<'_>::new_v1(move _8, move _11) -> [return: bb8, unwind: bb32]; // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
                                         // + user_ty: UserType(5)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb8: {
        _6 = format(move _7) -> [return: bb9, unwind: bb32]; // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:19: 118:80
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:19: 118:38
                                         // + literal: Const { ty: for<'a> fn(Arguments<'a>) -> String {format}, val: Value(<ZST>) }
    }

    bb9: {
        _5 = move _6;                    // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:119:9: 119:12
        drop(_5) -> [return: bb10, unwind: bb32]; // scope 4 at ui/traits/fmt-pointer-trait.rs:13:32: 13:33
    }

    bb10: {
        _100 = const _;                  // scope 5 at ui/traits/fmt-pointer-trait.rs:19:28: 19:35
                                         // mir::Constant
                                         // + span: ui/traits/fmt-pointer-trait.rs:19:28: 19:35
                                         // + literal: Const { ty: &[&str; 1], val: Unevaluated(main, [], Some(promoted[3])) }
        _35 = _100;                      // scope 5 at ui/traits/fmt-pointer-trait.rs:19:28: 19:35
        _34 = _35;                       // scope 5 at ui/traits/fmt-pointer-trait.rs:19:28: 19:35
        _33 = move _34 as &[&str] (Pointer(Unsize)); // scope 5 at ui/traits/fmt-pointer-trait.rs:19:28: 19:35
        _42 = &_1;                       // scope 5 at ui/traits/fmt-pointer-trait.rs:19:37: 19:38
        _41 = _42;                       // scope 5 at ui/traits/fmt-pointer-trait.rs:19:37: 19:38
        _40 = core::fmt::ArgumentV1::<'_>::new_pointer::<*const u8>(move _41) -> [return: bb11, unwind: bb32]; // scope 5 at ui/traits/fmt-pointer-trait.rs:19:37: 19:38
                                         // mir::Constant
                                         // + span: ui/traits/fmt-pointer-trait.rs:19:37: 19:38
                                         // + user_ty: UserType(12)
                                         // + literal: Const { ty: for<'b> fn(&'b *const u8) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_pointer::<*const u8>}, val: Value(<ZST>) }
    }

    bb11: {
        _39 = [move _40];                // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
        _38 = &_39;                      // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
        _37 = _38;                       // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
        _36 = move _37 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
        _48 = const std::fmt::rt::v1::Alignment::Unknown; // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
                                         // + literal: Const { ty: std::fmt::rt::v1::Alignment, val: Value(Scalar(0x03)) }
        _49 = Implied;                   // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
        _50 = Implied;                   // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
        _47 = Argument::new(const 0_usize, const ' ', move _48, const 4_u32, move _49, move _50) -> [return: bb12, unwind: bb32]; // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
                                         // + literal: Const { ty: fn(usize, char, std::fmt::rt::v1::Alignment, u32, Count, Count) -> Argument {Argument::new}, val: Value(<ZST>) }
    }

    bb12: {
        _46 = [move _47];                // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
        _45 = &_46;                      // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
        _44 = _45;                       // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
        _43 = move _44 as &[std::fmt::rt::v1::Argument] (Pointer(Unsize)); // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
        _51 = core::fmt::UnsafeArg::new() -> [return: bb13, unwind: bb32]; // scope 12 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
                                         // + literal: Const { ty: unsafe fn() -> core::fmt::UnsafeArg {core::fmt::UnsafeArg::new}, val: Value(<ZST>) }
    }

    bb13: {
        _32 = Arguments::<'_>::new_v1_formatted(move _33, move _36, move _43, move _51) -> [return: bb14, unwind: bb32]; // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
                                         // + user_ty: UserType(11)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>], &[Argument], core::fmt::UnsafeArg) -> Arguments<'_> {Arguments::<'_>::new_v1_formatted}, val: Value(<ZST>) }
    }

    bb14: {
        _31 = format(move _32) -> [return: bb15, unwind: bb32]; // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:19: 118:80
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:19: 118:38
                                         // + literal: Const { ty: for<'a> fn(Arguments<'a>) -> String {format}, val: Value(<ZST>) }
    }

    bb15: {
        _30 = move _31;                  // scope 11 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:119:9: 119:12
        _29 = &_30;                      // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _99 = const _;                   // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // + literal: Const { ty: &&str, val: Unevaluated(main, [], Some(promoted[2])) }
        _52 = _99;                       // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _28 = (move _29, move _52);      // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _53 = (_28.0: &std::string::String); // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _54 = (_28.1: &&str);            // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _57 = _53;                       // scope 13 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
        _58 = _54;                       // scope 13 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
        _56 = <String as PartialEq<&str>>::eq(move _57, move _58) -> [return: bb16, unwind: bb31]; // scope 13 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a String, &'b &str) -> bool {<String as PartialEq<&str>>::eq}, val: Value(<ZST>) }
    }

    bb16: {
        _55 = Not(move _56);             // scope 13 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
        switchInt(move _55) -> [0: bb18, otherwise: bb17]; // scope 13 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    }

    bb17: {
        _59 = const core::panicking::AssertKind::Eq; // scope 13 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _61 = const core::panicking::AssertKind::Eq; // scope 14 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _63 = _53;                       // scope 14 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _62 = _63;                       // scope 14 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _65 = _54;                       // scope 14 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _64 = _65;                       // scope 14 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _66 = Option::<Arguments<'_>>::None; // scope 14 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
        _60 = core::panicking::assert_failed::<String, &str>(move _61, move _62, move _64, move _66) -> bb31; // scope 14 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:53
                                         // + literal: Const { ty: for<'a, 'b, 'c> fn(core::panicking::AssertKind, &'a String, &'b &str, Option<Arguments<'c>>) -> ! {core::panicking::assert_failed::<String, &str>}, val: Value(<ZST>) }
    }

    bb18: {
        drop(_30) -> [return: bb19, unwind: bb32]; // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:48:9: 48:10
    }

    bb19: {
        _98 = const _;                   // scope 5 at ui/traits/fmt-pointer-trait.rs:22:24: 22:30
                                         // mir::Constant
                                         // + span: ui/traits/fmt-pointer-trait.rs:22:24: 22:30
                                         // + literal: Const { ty: &[&str; 1], val: Unevaluated(main, [], Some(promoted[1])) }
        _74 = _98;                       // scope 5 at ui/traits/fmt-pointer-trait.rs:22:24: 22:30
        _73 = _74;                       // scope 5 at ui/traits/fmt-pointer-trait.rs:22:24: 22:30
        _72 = move _73 as &[&str] (Pointer(Unsize)); // scope 5 at ui/traits/fmt-pointer-trait.rs:22:24: 22:30
        _81 = &_1;                       // scope 5 at ui/traits/fmt-pointer-trait.rs:22:32: 22:33
        _80 = _81;                       // scope 5 at ui/traits/fmt-pointer-trait.rs:22:32: 22:33
        _79 = core::fmt::ArgumentV1::<'_>::new_pointer::<*const u8>(move _80) -> [return: bb20, unwind: bb32]; // scope 5 at ui/traits/fmt-pointer-trait.rs:22:32: 22:33
                                         // mir::Constant
                                         // + span: ui/traits/fmt-pointer-trait.rs:22:32: 22:33
                                         // + user_ty: UserType(14)
                                         // + literal: Const { ty: for<'b> fn(&'b *const u8) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_pointer::<*const u8>}, val: Value(<ZST>) }
    }

    bb20: {
        _78 = [move _79];                // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
        _77 = &_78;                      // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
        _76 = _77;                       // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
        _75 = move _76 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
        _71 = Arguments::<'_>::new_v1(move _72, move _75) -> [return: bb21, unwind: bb32]; // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
                                         // + user_ty: UserType(13)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb21: {
        _70 = format(move _71) -> [return: bb22, unwind: bb32]; // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:19: 118:80
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:19: 118:38
                                         // + literal: Const { ty: for<'a> fn(Arguments<'a>) -> String {format}, val: Value(<ZST>) }
    }

    bb22: {
        _69 = move _70;                  // scope 15 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:119:9: 119:12
        _68 = &_69;                      // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _97 = const _;                   // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // + literal: Const { ty: &&str, val: Unevaluated(main, [], Some(promoted[0])) }
        _82 = _97;                       // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _67 = (move _68, move _82);      // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _83 = (_67.0: &std::string::String); // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _84 = (_67.1: &&str);            // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _87 = _83;                       // scope 16 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
        _88 = _84;                       // scope 16 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
        _86 = <String as PartialEq<&str>>::eq(move _87, move _88) -> [return: bb23, unwind: bb30]; // scope 16 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a String, &'b &str) -> bool {<String as PartialEq<&str>>::eq}, val: Value(<ZST>) }
    }

    bb23: {
        _85 = Not(move _86);             // scope 16 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
        switchInt(move _85) -> [0: bb25, otherwise: bb24]; // scope 16 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    }

    bb24: {
        _89 = const core::panicking::AssertKind::Eq; // scope 16 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _91 = const core::panicking::AssertKind::Eq; // scope 17 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _93 = _83;                       // scope 17 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _92 = _93;                       // scope 17 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _95 = _84;                       // scope 17 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _94 = _95;                       // scope 17 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _96 = Option::<Arguments<'_>>::None; // scope 17 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
        _90 = core::panicking::assert_failed::<String, &str>(move _91, move _92, move _94, move _96) -> bb30; // scope 17 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:53
                                         // + literal: Const { ty: for<'a, 'b, 'c> fn(core::panicking::AssertKind, &'a String, &'b &str, Option<Arguments<'c>>) -> ! {core::panicking::assert_failed::<String, &str>}, val: Value(<ZST>) }
    }

    bb25: {
        drop(_69) -> [return: bb26, unwind: bb32]; // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:48:9: 48:10
    }

    bb26: {
        drop(_4) -> [return: bb27, unwind: bb33]; // scope 3 at ui/traits/fmt-pointer-trait.rs:24:1: 24:2
    }

    bb27: {
        drop(_3) -> [return: bb28, unwind: bb34]; // scope 2 at ui/traits/fmt-pointer-trait.rs:24:1: 24:2
    }

    bb28: {
        drop(_2) -> bb29;                // scope 1 at ui/traits/fmt-pointer-trait.rs:24:1: 24:2
    }

    bb29: {
        return;                          // scope 0 at ui/traits/fmt-pointer-trait.rs:24:2: 24:2
    }

    bb30 (cleanup): {
        drop(_69) -> bb32;               // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:48:9: 48:10
    }

    bb31 (cleanup): {
        drop(_30) -> bb32;               // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:48:9: 48:10
    }

    bb32 (cleanup): {
        drop(_4) -> bb33;                // scope 3 at ui/traits/fmt-pointer-trait.rs:24:1: 24:2
    }

    bb33 (cleanup): {
        drop(_3) -> bb34;                // scope 2 at ui/traits/fmt-pointer-trait.rs:24:1: 24:2
    }

    bb34 (cleanup): {
        drop(_2) -> bb35;                // scope 1 at ui/traits/fmt-pointer-trait.rs:24:1: 24:2
    }

    bb35 (cleanup): {
        resume;                          // scope 0 at ui/traits/fmt-pointer-trait.rs:6:1: 24:2
    }
}

promoted[0] in main: &&str = {
    let mut _0: &&str;                   // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _1: &str;                    // in scope 0 at ui/traits/fmt-pointer-trait.rs:23:16: 23:21

    bb0: {
        _1 = const "0x0";                // scope 0 at ui/traits/fmt-pointer-trait.rs:23:16: 23:21
                                         // mir::Constant
                                         // + span: ui/traits/fmt-pointer-trait.rs:23:16: 23:21
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    }
}

promoted[1] in main: &[&str; 1] = {
    let mut _0: &[&str; 1];              // return place in scope 0 at ui/traits/fmt-pointer-trait.rs:22:24: 22:30
    let mut _1: [&str; 1];               // in scope 0 at ui/traits/fmt-pointer-trait.rs:22:24: 22:30

    bb0: {
        _1 = [const ""];                 // scope 0 at ui/traits/fmt-pointer-trait.rs:22:24: 22:30
                                         // mir::Constant
                                         // + span: ui/traits/fmt-pointer-trait.rs:22:24: 22:30
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at ui/traits/fmt-pointer-trait.rs:22:24: 22:30
        return;                          // scope 0 at ui/traits/fmt-pointer-trait.rs:22:24: 22:30
    }
}

promoted[2] in main: &&str = {
    let mut _0: &&str;                   // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _1: &str;                    // in scope 0 at ui/traits/fmt-pointer-trait.rs:20:20: 20:40

    bb0: {
        _1 = const "0x0000000000000000"; // scope 0 at ui/traits/fmt-pointer-trait.rs:20:20: 20:40
                                         // mir::Constant
                                         // + span: ui/traits/fmt-pointer-trait.rs:20:20: 20:40
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    }
}

promoted[3] in main: &[&str; 1] = {
    let mut _0: &[&str; 1];              // return place in scope 0 at ui/traits/fmt-pointer-trait.rs:19:28: 19:35
    let mut _1: [&str; 1];               // in scope 0 at ui/traits/fmt-pointer-trait.rs:19:28: 19:35

    bb0: {
        _1 = [const ""];                 // scope 0 at ui/traits/fmt-pointer-trait.rs:19:28: 19:35
                                         // mir::Constant
                                         // + span: ui/traits/fmt-pointer-trait.rs:19:28: 19:35
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at ui/traits/fmt-pointer-trait.rs:19:28: 19:35
        return;                          // scope 0 at ui/traits/fmt-pointer-trait.rs:19:28: 19:35
    }
}

promoted[4] in main: &&str = {
    let mut _0: &&str;                   // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _1: &str;                    // in scope 0 at ui/traits/fmt-pointer-trait.rs:17:20: 17:32

    bb0: {
        _1 = const "0x00000000";         // scope 0 at ui/traits/fmt-pointer-trait.rs:17:20: 17:32
                                         // mir::Constant
                                         // + span: ui/traits/fmt-pointer-trait.rs:17:20: 17:32
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    }
}

promoted[5] in main: &[&str; 1] = {
    let mut _0: &[&str; 1];              // return place in scope 0 at ui/traits/fmt-pointer-trait.rs:16:28: 16:35
    let mut _1: [&str; 1];               // in scope 0 at ui/traits/fmt-pointer-trait.rs:16:28: 16:35

    bb0: {
        _1 = [const ""];                 // scope 0 at ui/traits/fmt-pointer-trait.rs:16:28: 16:35
                                         // mir::Constant
                                         // + span: ui/traits/fmt-pointer-trait.rs:16:28: 16:35
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at ui/traits/fmt-pointer-trait.rs:16:28: 16:35
        return;                          // scope 0 at ui/traits/fmt-pointer-trait.rs:16:28: 16:35
    }
}

promoted[6] in main: &[&str; 3] = {
    let mut _0: &[&str; 3];              // return place in scope 0 at ui/traits/fmt-pointer-trait.rs:12:21: 12:35
    let mut _1: [&str; 3];               // in scope 0 at ui/traits/fmt-pointer-trait.rs:12:21: 12:35

    bb0: {
        _1 = [const "", const "", const ""]; // scope 0 at ui/traits/fmt-pointer-trait.rs:12:21: 12:35
                                         // mir::Constant
                                         // + span: ui/traits/fmt-pointer-trait.rs:12:21: 12:35
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
                                         // mir::Constant
                                         // + span: ui/traits/fmt-pointer-trait.rs:12:21: 12:35
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
                                         // mir::Constant
                                         // + span: ui/traits/fmt-pointer-trait.rs:12:21: 12:35
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at ui/traits/fmt-pointer-trait.rs:12:21: 12:35
        return;                          // scope 0 at ui/traits/fmt-pointer-trait.rs:12:21: 12:35
    }
}
