// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
fn main() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/traits/alias/syntax.rs:24:11: 24:11

    bb0: {
        return;                          // scope 0 at ui/traits/alias/syntax.rs:24:13: 24:13
    }
}

fn The(_1: T) -> The<T> {
    let mut _0: The<T>;                  // return place in scope 0 at ui/traits/alias/syntax.rs:15:1: 15:14

    bb0: {
        _0 = The::<T>(move _1);          // scope 0 at ui/traits/alias/syntax.rs:15:1: 15:14
        return;                          // scope 0 at ui/traits/alias/syntax.rs:15:1: 15:14
    }
}

// MIR FOR CTFE
fn The(_1: T) -> The<T> {
    let mut _0: The<T>;                  // return place in scope 0 at ui/traits/alias/syntax.rs:15:1: 15:14

    bb0: {
        _0 = The::<T>(move _1);          // scope 0 at ui/traits/alias/syntax.rs:15:1: 15:14
        return;                          // scope 0 at ui/traits/alias/syntax.rs:15:1: 15:14
    }
}

fn Fore(_1: T) -> Fore<T> {
    let mut _0: Fore<T>;                 // return place in scope 0 at ui/traits/alias/syntax.rs:17:1: 17:15

    bb0: {
        _0 = Fore::<T>(move _1);         // scope 0 at ui/traits/alias/syntax.rs:17:1: 17:15
        return;                          // scope 0 at ui/traits/alias/syntax.rs:17:1: 17:15
    }
}

// MIR FOR CTFE
fn Fore(_1: T) -> Fore<T> {
    let mut _0: Fore<T>;                 // return place in scope 0 at ui/traits/alias/syntax.rs:17:1: 17:15

    bb0: {
        _0 = Fore::<T>(move _1);         // scope 0 at ui/traits/alias/syntax.rs:17:1: 17:15
        return;                          // scope 0 at ui/traits/alias/syntax.rs:17:1: 17:15
    }
}
