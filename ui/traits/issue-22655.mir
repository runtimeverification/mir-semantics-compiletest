// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
fn is_send() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/traits/issue-22655.rs:19:23: 19:23

    bb0: {
        return;                          // scope 0 at ui/traits/issue-22655.rs:19:25: 19:25
    }
}

fn main() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/traits/issue-22655.rs:21:11: 21:11
    let _1: ();                          // in scope 0 at ui/traits/issue-22655.rs:22:5: 22:35

    bb0: {
        _1 = is_send::<Node<&()>>() -> bb1; // scope 0 at ui/traits/issue-22655.rs:22:5: 22:35
                                         // mir::Constant
                                         // + span: ui/traits/issue-22655.rs:22:5: 22:33
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: fn() {is_send::<Node<&()>>}, val: Value(<ZST>) }
    }

    bb1: {
        return;                          // scope 0 at ui/traits/issue-22655.rs:23:2: 23:2
    }
}
