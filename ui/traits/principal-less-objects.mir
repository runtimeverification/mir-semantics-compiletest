// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
SetOnDrop::1::{constant#0}: usize = {
    let mut _0: usize;                   // return place in scope 0 at ui/traits/principal-less-objects.rs:10:81: 10:83

    bb0: {
        _0 = const 64_usize;             // scope 0 at ui/traits/principal-less-objects.rs:10:81: 10:83
        return;                          // scope 0 at ui/traits/principal-less-objects.rs:10:81: 10:83
    }
}

fn <impl at ui/traits/principal-less-objects.rs:11:1: 11:32>::drop(_1: &mut SetOnDrop<'_>) -> () {
    debug self => _1;                    // in scope 0 at ui/traits/principal-less-objects.rs:12:13: 12:22
    let mut _0: ();                      // return place in scope 0 at ui/traits/principal-less-objects.rs:12:24: 12:24
    let _2: ();                          // in scope 0 at ui/traits/principal-less-objects.rs:13:9: 13:76
    let mut _3: &std::sync::atomic::AtomicUsize; // in scope 0 at ui/traits/principal-less-objects.rs:13:9: 13:76
    let mut _4: usize;                   // in scope 0 at ui/traits/principal-less-objects.rs:13:22: 13:56
    let mut _5: usize;                   // in scope 0 at ui/traits/principal-less-objects.rs:13:22: 13:52
    let mut _6: &std::sync::atomic::AtomicUsize; // in scope 0 at ui/traits/principal-less-objects.rs:13:22: 13:52
    let mut _7: std::sync::atomic::Ordering; // in scope 0 at ui/traits/principal-less-objects.rs:13:34: 13:51
    let mut _8: (usize, bool);           // in scope 0 at ui/traits/principal-less-objects.rs:13:22: 13:56
    let mut _9: std::sync::atomic::Ordering; // in scope 0 at ui/traits/principal-less-objects.rs:13:58: 13:75
    let mut _10: &std::sync::atomic::AtomicUsize; // in scope 0 at ui/traits/principal-less-objects.rs:12:13: 12:22
    let mut _11: &std::sync::atomic::AtomicUsize; // in scope 0 at ui/traits/principal-less-objects.rs:12:13: 12:22

    bb0: {
        _10 = deref_copy ((*_1).0: &std::sync::atomic::AtomicUsize); // scope 0 at ui/traits/principal-less-objects.rs:13:9: 13:76
        _3 = _10;                        // scope 0 at ui/traits/principal-less-objects.rs:13:9: 13:76
        _11 = deref_copy ((*_1).0: &std::sync::atomic::AtomicUsize); // scope 0 at ui/traits/principal-less-objects.rs:13:22: 13:52
        _6 = _11;                        // scope 0 at ui/traits/principal-less-objects.rs:13:22: 13:52
        _7 = const Relaxed;              // scope 0 at ui/traits/principal-less-objects.rs:13:34: 13:51
                                         // mir::Constant
                                         // + span: ui/traits/principal-less-objects.rs:13:34: 13:51
                                         // + literal: Const { ty: std::sync::atomic::Ordering, val: Value(Scalar(0x00)) }
        _5 = AtomicUsize::load(move _6, move _7) -> bb1; // scope 0 at ui/traits/principal-less-objects.rs:13:22: 13:52
                                         // mir::Constant
                                         // + span: ui/traits/principal-less-objects.rs:13:29: 13:33
                                         // + literal: Const { ty: for<'a> fn(&'a AtomicUsize, std::sync::atomic::Ordering) -> usize {AtomicUsize::load}, val: Value(<ZST>) }
    }

    bb1: {
        _8 = CheckedAdd(_5, const 1_usize); // scope 0 at ui/traits/principal-less-objects.rs:13:22: 13:56
        assert(!move (_8.1: bool), "attempt to compute `{} + {}`, which would overflow", move _5, const 1_usize) -> bb2; // scope 0 at ui/traits/principal-less-objects.rs:13:22: 13:56
    }

    bb2: {
        _4 = move (_8.0: usize);         // scope 0 at ui/traits/principal-less-objects.rs:13:22: 13:56
        _9 = const Relaxed;              // scope 0 at ui/traits/principal-less-objects.rs:13:58: 13:75
                                         // mir::Constant
                                         // + span: ui/traits/principal-less-objects.rs:13:58: 13:75
                                         // + literal: Const { ty: std::sync::atomic::Ordering, val: Value(Scalar(0x00)) }
        _2 = AtomicUsize::store(move _3, move _4, move _9) -> bb3; // scope 0 at ui/traits/principal-less-objects.rs:13:9: 13:76
                                         // mir::Constant
                                         // + span: ui/traits/principal-less-objects.rs:13:16: 13:21
                                         // + literal: Const { ty: for<'a> fn(&'a AtomicUsize, usize, std::sync::atomic::Ordering) {AtomicUsize::store}, val: Value(<ZST>) }
    }

    bb3: {
        return;                          // scope 0 at ui/traits/principal-less-objects.rs:14:6: 14:6
    }
}

fn assert_types_eq() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/traits/principal-less-objects.rs:19:44: 19:44

    bb0: {
        return;                          // scope 0 at ui/traits/principal-less-objects.rs:19:65: 19:65
    }
}

fn main() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/traits/principal-less-objects.rs:21:11: 21:11
    let _1: ();                          // in scope 0 at ui/traits/principal-less-objects.rs:23:5: 23:51
    let _2: ();                          // in scope 0 at ui/traits/principal-less-objects.rs:24:5: 24:58
    let _3: ();                          // in scope 0 at ui/traits/principal-less-objects.rs:25:5: 25:65
    let _4: std::sync::atomic::AtomicUsize; // in scope 0 at ui/traits/principal-less-objects.rs:31:9: 31:10
    let mut _6: std::boxed::Box<SetOnDrop<'_>>; // in scope 0 at ui/traits/principal-less-objects.rs:33:32: 33:64
    let mut _7: SetOnDrop<'_>;           // in scope 0 at ui/traits/principal-less-objects.rs:33:41: 33:63
    let mut _8: &std::sync::atomic::AtomicUsize; // in scope 0 at ui/traits/principal-less-objects.rs:33:51: 33:53
    let _9: &std::sync::atomic::AtomicUsize; // in scope 0 at ui/traits/principal-less-objects.rs:33:51: 33:53
    let mut _10: [u8; 64];               // in scope 0 at ui/traits/principal-less-objects.rs:33:55: 33:62
    let mut _11: (&usize, &usize);       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _12: &usize;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let _13: usize;                      // in scope 0 at ui/traits/principal-less-objects.rs:35:20: 35:41
    let mut _14: &dyn std::marker::Sync; // in scope 0 at ui/traits/principal-less-objects.rs:35:37: 35:40
    let _15: &dyn std::marker::Sync;     // in scope 0 at ui/traits/principal-less-objects.rs:35:37: 35:40
    let mut _16: &usize;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _19: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    let mut _20: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
    let mut _21: usize;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
    let mut _22: usize;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
    let _24: !;                          // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
    let mut _25: core::panicking::AssertKind; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
    let mut _26: &usize;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let _27: &usize;                     // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let mut _28: &usize;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let _29: &usize;                     // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let mut _30: std::option::Option<std::fmt::Arguments<'_>>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
    let mut _31: (&usize, &usize);       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _32: &usize;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let _33: usize;                      // in scope 0 at ui/traits/principal-less-objects.rs:37:20: 37:42
    let mut _34: &dyn std::marker::Sync; // in scope 0 at ui/traits/principal-less-objects.rs:37:38: 37:41
    let _35: &dyn std::marker::Sync;     // in scope 0 at ui/traits/principal-less-objects.rs:37:38: 37:41
    let mut _36: &usize;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _39: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    let mut _40: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
    let mut _41: usize;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
    let mut _42: usize;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
    let _44: !;                          // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
    let mut _45: core::panicking::AssertKind; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
    let mut _46: &usize;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let _47: &usize;                     // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let mut _48: &usize;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let _49: &usize;                     // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let mut _50: std::option::Option<std::fmt::Arguments<'_>>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
    let mut _51: (&usize, &usize);       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _52: &usize;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let _53: usize;                      // in scope 0 at ui/traits/principal-less-objects.rs:39:20: 39:45
    let mut _54: &std::sync::atomic::AtomicUsize; // in scope 0 at ui/traits/principal-less-objects.rs:39:20: 39:45
    let mut _55: std::sync::atomic::Ordering; // in scope 0 at ui/traits/principal-less-objects.rs:39:27: 39:44
    let mut _56: &usize;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _59: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    let mut _60: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
    let mut _61: usize;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
    let mut _62: usize;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
    let _64: !;                          // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
    let mut _65: core::panicking::AssertKind; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
    let mut _66: &usize;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let _67: &usize;                     // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let mut _68: &usize;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let _69: &usize;                     // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let mut _70: std::option::Option<std::fmt::Arguments<'_>>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
    let mut _71: (&usize, &usize);       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _72: &usize;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let _73: usize;                      // in scope 0 at ui/traits/principal-less-objects.rs:41:16: 41:41
    let mut _74: &std::sync::atomic::AtomicUsize; // in scope 0 at ui/traits/principal-less-objects.rs:41:16: 41:41
    let mut _75: std::sync::atomic::Ordering; // in scope 0 at ui/traits/principal-less-objects.rs:41:23: 41:40
    let mut _76: &usize;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _79: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    let mut _80: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
    let mut _81: usize;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
    let mut _82: usize;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
    let _84: !;                          // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
    let mut _85: core::panicking::AssertKind; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
    let mut _86: &usize;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let _87: &usize;                     // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let mut _88: &usize;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let _89: &usize;                     // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let mut _90: std::option::Option<std::fmt::Arguments<'_>>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
    let mut _95: *const dyn std::marker::Sync; // in scope 0 at ui/traits/principal-less-objects.rs:33:13: 33:14
    let mut _96: *const dyn std::marker::Sync; // in scope 0 at ui/traits/principal-less-objects.rs:33:13: 33:14
    scope 1 {
        debug c => _4;                   // in scope 1 at ui/traits/principal-less-objects.rs:31:9: 31:10
        let _5: std::boxed::Box<dyn std::marker::Sync>; // in scope 1 at ui/traits/principal-less-objects.rs:33:13: 33:14
        let _77: &usize;                 // in scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        let _78: &usize;                 // in scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        let mut _91: &usize;             // in scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        scope 2 {
            debug d => _5;               // in scope 2 at ui/traits/principal-less-objects.rs:33:13: 33:14
            let _17: &usize;             // in scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
            let _18: &usize;             // in scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
            let _37: &usize;             // in scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
            let _38: &usize;             // in scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
            let _57: &usize;             // in scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
            let _58: &usize;             // in scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
            let mut _92: &usize;         // in scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
            let mut _93: &usize;         // in scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
            let mut _94: &usize;         // in scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
            scope 3 {
                debug left_val => _17;   // in scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
                debug right_val => _18;  // in scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
                let _23: core::panicking::AssertKind; // in scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                scope 4 {
                    debug kind => _23;   // in scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                }
            }
            scope 5 {
                debug left_val => _37;   // in scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
                debug right_val => _38;  // in scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
                let _43: core::panicking::AssertKind; // in scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                scope 6 {
                    debug kind => _43;   // in scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                }
            }
            scope 7 {
                debug left_val => _57;   // in scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
                debug right_val => _58;  // in scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
                let _63: core::panicking::AssertKind; // in scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                scope 8 {
                    debug kind => _63;   // in scope 8 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                }
            }
        }
        scope 9 {
            debug left_val => _77;       // in scope 9 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
            debug right_val => _78;      // in scope 9 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
            let _83: core::panicking::AssertKind; // in scope 9 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
            scope 10 {
                debug kind => _83;       // in scope 10 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
            }
        }
    }

    bb0: {
        _1 = assert_types_eq::<dyn Sync, dyn Sync>() -> bb1; // scope 0 at ui/traits/principal-less-objects.rs:23:5: 23:51
                                         // mir::Constant
                                         // + span: ui/traits/principal-less-objects.rs:23:5: 23:49
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: fn() {assert_types_eq::<dyn Sync, dyn Sync>}, val: Value(<ZST>) }
    }

    bb1: {
        _2 = assert_types_eq::<dyn Send + Sync, dyn Send + Sync>() -> bb2; // scope 0 at ui/traits/principal-less-objects.rs:24:5: 24:58
                                         // mir::Constant
                                         // + span: ui/traits/principal-less-objects.rs:24:5: 24:56
                                         // + user_ty: UserType(1)
                                         // + literal: Const { ty: fn() {assert_types_eq::<dyn Send + Sync, dyn Send + Sync>}, val: Value(<ZST>) }
    }

    bb2: {
        _3 = assert_types_eq::<dyn Send + Sync, dyn Send + Sync>() -> bb3; // scope 0 at ui/traits/principal-less-objects.rs:25:5: 25:65
                                         // mir::Constant
                                         // + span: ui/traits/principal-less-objects.rs:25:5: 25:63
                                         // + user_ty: UserType(2)
                                         // + literal: Const { ty: fn() {assert_types_eq::<dyn Send + Sync, dyn Send + Sync>}, val: Value(<ZST>) }
    }

    bb3: {
        _4 = AtomicUsize::new(const 0_usize) -> bb4; // scope 0 at ui/traits/principal-less-objects.rs:31:13: 31:32
                                         // mir::Constant
                                         // + span: ui/traits/principal-less-objects.rs:31:13: 31:29
                                         // + literal: Const { ty: fn(usize) -> AtomicUsize {AtomicUsize::new}, val: Value(<ZST>) }
    }

    bb4: {
        _9 = &_4;                        // scope 1 at ui/traits/principal-less-objects.rs:33:51: 33:53
        _8 = _9;                         // scope 1 at ui/traits/principal-less-objects.rs:33:51: 33:53
        _10 = [const 0_u8; 64];          // scope 1 at ui/traits/principal-less-objects.rs:33:55: 33:62
        _7 = SetOnDrop::<'_>(move _8, move _10); // scope 1 at ui/traits/principal-less-objects.rs:33:41: 33:63
        _6 = Box::<SetOnDrop<'_>>::new(move _7) -> bb5; // scope 1 at ui/traits/principal-less-objects.rs:33:32: 33:64
                                         // mir::Constant
                                         // + span: ui/traits/principal-less-objects.rs:33:32: 33:40
                                         // + user_ty: UserType(4)
                                         // + literal: Const { ty: fn(SetOnDrop<'_>) -> Box<SetOnDrop<'_>> {Box::<SetOnDrop<'_>>::new}, val: Value(<ZST>) }
    }

    bb5: {
        _5 = move _6 as std::boxed::Box<dyn std::marker::Sync> (Pointer(Unsize)); // scope 1 at ui/traits/principal-less-objects.rs:33:32: 33:64
        _95 = (((_5.0: std::ptr::Unique<dyn std::marker::Sync>).0: std::ptr::NonNull<dyn std::marker::Sync>).0: *const dyn std::marker::Sync); // scope 2 at ui/traits/principal-less-objects.rs:35:37: 35:40
        _15 = &(*_95);                   // scope 2 at ui/traits/principal-less-objects.rs:35:37: 35:40
        _14 = _15;                       // scope 2 at ui/traits/principal-less-objects.rs:35:37: 35:40
        _13 = std::mem::size_of_val::<dyn Sync>(move _14) -> [return: bb6, unwind: bb19]; // scope 2 at ui/traits/principal-less-objects.rs:35:20: 35:41
                                         // mir::Constant
                                         // + span: ui/traits/principal-less-objects.rs:35:20: 35:36
                                         // + literal: Const { ty: for<'a> fn(&'a dyn Sync) -> usize {std::mem::size_of_val::<dyn Sync>}, val: Value(<ZST>) }
    }

    bb6: {
        _12 = &_13;                      // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _94 = const _;                   // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // + literal: Const { ty: &usize, val: Unevaluated(main, [], Some(promoted[3])) }
        _16 = _94;                       // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _11 = (move _12, move _16);      // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _17 = (_11.0: &usize);           // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _18 = (_11.1: &usize);           // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _21 = (*_17);                    // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
        _22 = const 72_usize;            // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
        _20 = Eq(move _21, move _22);    // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
        _19 = Not(move _20);             // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
        switchInt(move _19) -> [0: bb8, otherwise: bb7]; // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    }

    bb7: {
        _23 = const core::panicking::AssertKind::Eq; // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _25 = const core::panicking::AssertKind::Eq; // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _27 = _17;                       // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _26 = _27;                       // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _29 = _18;                       // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _28 = _29;                       // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _30 = Option::<Arguments<'_>>::None; // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
        _24 = core::panicking::assert_failed::<usize, usize>(move _25, move _26, move _28, move _30) -> bb19; // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:53
                                         // + literal: Const { ty: for<'a, 'b, 'c> fn(core::panicking::AssertKind, &'a usize, &'b usize, Option<Arguments<'c>>) -> ! {core::panicking::assert_failed::<usize, usize>}, val: Value(<ZST>) }
    }

    bb8: {
        _96 = (((_5.0: std::ptr::Unique<dyn std::marker::Sync>).0: std::ptr::NonNull<dyn std::marker::Sync>).0: *const dyn std::marker::Sync); // scope 2 at ui/traits/principal-less-objects.rs:37:38: 37:41
        _35 = &(*_96);                   // scope 2 at ui/traits/principal-less-objects.rs:37:38: 37:41
        _34 = _35;                       // scope 2 at ui/traits/principal-less-objects.rs:37:38: 37:41
        _33 = align_of_val::<dyn Sync>(move _34) -> [return: bb9, unwind: bb19]; // scope 2 at ui/traits/principal-less-objects.rs:37:20: 37:42
                                         // mir::Constant
                                         // + span: ui/traits/principal-less-objects.rs:37:20: 37:37
                                         // + literal: Const { ty: for<'a> fn(&'a dyn Sync) -> usize {align_of_val::<dyn Sync>}, val: Value(<ZST>) }
    }

    bb9: {
        _32 = &_33;                      // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _93 = const _;                   // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // + literal: Const { ty: &usize, val: Unevaluated(main, [], Some(promoted[2])) }
        _36 = _93;                       // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _31 = (move _32, move _36);      // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _37 = (_31.0: &usize);           // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _38 = (_31.1: &usize);           // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _41 = (*_37);                    // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
        _42 = const 8_usize;             // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
        _40 = Eq(move _41, move _42);    // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
        _39 = Not(move _40);             // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
        switchInt(move _39) -> [0: bb11, otherwise: bb10]; // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    }

    bb10: {
        _43 = const core::panicking::AssertKind::Eq; // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _45 = const core::panicking::AssertKind::Eq; // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _47 = _37;                       // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _46 = _47;                       // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _49 = _38;                       // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _48 = _49;                       // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _50 = Option::<Arguments<'_>>::None; // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
        _44 = core::panicking::assert_failed::<usize, usize>(move _45, move _46, move _48, move _50) -> bb19; // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:53
                                         // + literal: Const { ty: for<'a, 'b, 'c> fn(core::panicking::AssertKind, &'a usize, &'b usize, Option<Arguments<'c>>) -> ! {core::panicking::assert_failed::<usize, usize>}, val: Value(<ZST>) }
    }

    bb11: {
        _54 = &_4;                       // scope 2 at ui/traits/principal-less-objects.rs:39:20: 39:45
        _55 = const Relaxed;             // scope 2 at ui/traits/principal-less-objects.rs:39:27: 39:44
                                         // mir::Constant
                                         // + span: ui/traits/principal-less-objects.rs:39:27: 39:44
                                         // + literal: Const { ty: std::sync::atomic::Ordering, val: Value(Scalar(0x00)) }
        _53 = AtomicUsize::load(move _54, move _55) -> [return: bb12, unwind: bb19]; // scope 2 at ui/traits/principal-less-objects.rs:39:20: 39:45
                                         // mir::Constant
                                         // + span: ui/traits/principal-less-objects.rs:39:22: 39:26
                                         // + literal: Const { ty: for<'a> fn(&'a AtomicUsize, std::sync::atomic::Ordering) -> usize {AtomicUsize::load}, val: Value(<ZST>) }
    }

    bb12: {
        _52 = &_53;                      // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _92 = const _;                   // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // + literal: Const { ty: &usize, val: Unevaluated(main, [], Some(promoted[1])) }
        _56 = _92;                       // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _51 = (move _52, move _56);      // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _57 = (_51.0: &usize);           // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _58 = (_51.1: &usize);           // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _61 = (*_57);                    // scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
        _62 = const 0_usize;             // scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
        _60 = Eq(move _61, move _62);    // scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
        _59 = Not(move _60);             // scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
        switchInt(move _59) -> [0: bb14, otherwise: bb13]; // scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    }

    bb13: {
        _63 = const core::panicking::AssertKind::Eq; // scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _65 = const core::panicking::AssertKind::Eq; // scope 8 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _67 = _57;                       // scope 8 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _66 = _67;                       // scope 8 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _69 = _58;                       // scope 8 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _68 = _69;                       // scope 8 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _70 = Option::<Arguments<'_>>::None; // scope 8 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
        _64 = core::panicking::assert_failed::<usize, usize>(move _65, move _66, move _68, move _70) -> bb19; // scope 8 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:53
                                         // + literal: Const { ty: for<'a, 'b, 'c> fn(core::panicking::AssertKind, &'a usize, &'b usize, Option<Arguments<'c>>) -> ! {core::panicking::assert_failed::<usize, usize>}, val: Value(<ZST>) }
    }

    bb14: {
        drop(_5) -> bb15;                // scope 1 at ui/traits/principal-less-objects.rs:40:5: 40:6
    }

    bb15: {
        _74 = &_4;                       // scope 1 at ui/traits/principal-less-objects.rs:41:16: 41:41
        _75 = const Relaxed;             // scope 1 at ui/traits/principal-less-objects.rs:41:23: 41:40
                                         // mir::Constant
                                         // + span: ui/traits/principal-less-objects.rs:41:23: 41:40
                                         // + literal: Const { ty: std::sync::atomic::Ordering, val: Value(Scalar(0x00)) }
        _73 = AtomicUsize::load(move _74, move _75) -> bb16; // scope 1 at ui/traits/principal-less-objects.rs:41:16: 41:41
                                         // mir::Constant
                                         // + span: ui/traits/principal-less-objects.rs:41:18: 41:22
                                         // + literal: Const { ty: for<'a> fn(&'a AtomicUsize, std::sync::atomic::Ordering) -> usize {AtomicUsize::load}, val: Value(<ZST>) }
    }

    bb16: {
        _72 = &_73;                      // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _91 = const _;                   // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // + literal: Const { ty: &usize, val: Unevaluated(main, [], Some(promoted[0])) }
        _76 = _91;                       // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _71 = (move _72, move _76);      // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _77 = (_71.0: &usize);           // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _78 = (_71.1: &usize);           // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _81 = (*_77);                    // scope 9 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
        _82 = const 1_usize;             // scope 9 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
        _80 = Eq(move _81, move _82);    // scope 9 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
        _79 = Not(move _80);             // scope 9 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
        switchInt(move _79) -> [0: bb18, otherwise: bb17]; // scope 9 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    }

    bb17: {
        _83 = const core::panicking::AssertKind::Eq; // scope 9 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _85 = const core::panicking::AssertKind::Eq; // scope 10 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _87 = _77;                       // scope 10 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _86 = _87;                       // scope 10 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _89 = _78;                       // scope 10 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _88 = _89;                       // scope 10 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _90 = Option::<Arguments<'_>>::None; // scope 10 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
        _84 = core::panicking::assert_failed::<usize, usize>(move _85, move _86, move _88, move _90); // scope 10 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:53
                                         // + literal: Const { ty: for<'a, 'b, 'c> fn(core::panicking::AssertKind, &'a usize, &'b usize, Option<Arguments<'c>>) -> ! {core::panicking::assert_failed::<usize, usize>}, val: Value(<ZST>) }
    }

    bb18: {
        return;                          // scope 0 at ui/traits/principal-less-objects.rs:42:2: 42:2
    }

    bb19 (cleanup): {
        drop(_5) -> bb20;                // scope 1 at ui/traits/principal-less-objects.rs:40:5: 40:6
    }

    bb20 (cleanup): {
        resume;                          // scope 0 at ui/traits/principal-less-objects.rs:21:1: 42:2
    }
}

promoted[0] in main: &usize = {
    let mut _0: &usize;                  // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _1: usize;                   // in scope 0 at ui/traits/principal-less-objects.rs:41:43: 41:44

    bb0: {
        _1 = const 1_usize;              // scope 0 at ui/traits/principal-less-objects.rs:41:43: 41:44
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    }
}

promoted[1] in main: &usize = {
    let mut _0: &usize;                  // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _1: usize;                   // in scope 0 at ui/traits/principal-less-objects.rs:39:47: 39:48

    bb0: {
        _1 = const 0_usize;              // scope 0 at ui/traits/principal-less-objects.rs:39:47: 39:48
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    }
}

promoted[2] in main: &usize = {
    let mut _0: &usize;                  // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _1: usize;                   // in scope 0 at ui/traits/principal-less-objects.rs:38:20: 38:48

    bb0: {
        _1 = align_of::<SetOnDrop<'_>>() -> bb1; // scope 0 at ui/traits/principal-less-objects.rs:38:20: 38:48
                                         // mir::Constant
                                         // + span: ui/traits/principal-less-objects.rs:38:20: 38:46
                                         // + user_ty: UserType(7)
                                         // + literal: Const { ty: fn() -> usize {align_of::<SetOnDrop<'_>>}, val: Value(<ZST>) }
    }

    bb1: {
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    }
}

promoted[3] in main: &usize = {
    let mut _0: &usize;                  // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _1: usize;                   // in scope 0 at ui/traits/principal-less-objects.rs:36:20: 36:47

    bb0: {
        _1 = std::mem::size_of::<SetOnDrop<'_>>() -> bb1; // scope 0 at ui/traits/principal-less-objects.rs:36:20: 36:47
                                         // mir::Constant
                                         // + span: ui/traits/principal-less-objects.rs:36:20: 36:45
                                         // + user_ty: UserType(6)
                                         // + literal: Const { ty: fn() -> usize {std::mem::size_of::<SetOnDrop<'_>>}, val: Value(<ZST>) }
    }

    bb1: {
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    }
}

main::{constant#0}: usize = {
    let mut _0: usize;                   // return place in scope 0 at ui/traits/principal-less-objects.rs:33:59: 33:61

    bb0: {
        _0 = const 64_usize;             // scope 0 at ui/traits/principal-less-objects.rs:33:59: 33:61
        return;                          // scope 0 at ui/traits/principal-less-objects.rs:33:59: 33:61
    }
}

fn SetOnDrop(_1: &AtomicUsize, _2: [u8; 64]) -> SetOnDrop<'_> {
    let mut _0: SetOnDrop<'_>;           // return place in scope 0 at ui/traits/principal-less-objects.rs:10:1: 10:21

    bb0: {
        _0 = SetOnDrop::<'_>(move _1, move _2); // scope 0 at ui/traits/principal-less-objects.rs:10:1: 10:21
        return;                          // scope 0 at ui/traits/principal-less-objects.rs:10:1: 10:21
    }
}

// MIR FOR CTFE
fn SetOnDrop(_1: &AtomicUsize, _2: [u8; 64]) -> SetOnDrop<'_> {
    let mut _0: SetOnDrop<'_>;           // return place in scope 0 at ui/traits/principal-less-objects.rs:10:1: 10:21

    bb0: {
        _0 = SetOnDrop::<'_>(move _1, move _2); // scope 0 at ui/traits/principal-less-objects.rs:10:1: 10:21
        return;                          // scope 0 at ui/traits/principal-less-objects.rs:10:1: 10:21
    }
}
