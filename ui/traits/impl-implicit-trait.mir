// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
fn <impl at ui/traits/impl-implicit-trait.rs:12:1: 12:19>::foo(_1: &option_<T>) -> bool {
    debug self => _1;                    // in scope 0 at ui/traits/impl-implicit-trait.rs:13:16: 13:21
    let mut _0: bool;                    // return place in scope 0 at ui/traits/impl-implicit-trait.rs:13:26: 13:30

    bb0: {
        _0 = const true;                 // scope 0 at ui/traits/impl-implicit-trait.rs:13:33: 13:37
        return;                          // scope 0 at ui/traits/impl-implicit-trait.rs:13:39: 13:39
    }
}

fn <impl at ui/traits/impl-implicit-trait.rs:21:1: 21:14>::foo(_1: &option__) -> bool {
    debug self => _1;                    // in scope 0 at ui/traits/impl-implicit-trait.rs:22:16: 22:21
    let mut _0: bool;                    // return place in scope 0 at ui/traits/impl-implicit-trait.rs:22:26: 22:30

    bb0: {
        _0 = const true;                 // scope 0 at ui/traits/impl-implicit-trait.rs:22:33: 22:37
        return;                          // scope 0 at ui/traits/impl-implicit-trait.rs:22:39: 22:39
    }
}

fn main() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/traits/impl-implicit-trait.rs:25:15: 25:15

    bb0: {
        return;                          // scope 0 at ui/traits/impl-implicit-trait.rs:26:2: 26:2
    }
}

fn option_::some_(_1: T) -> option_<T> {
    let mut _0: option_<T>;              // return place in scope 0 at ui/traits/impl-implicit-trait.rs:9:5: 9:10

    bb0: {
        _0 = option_::<T>::some_(move _1); // scope 0 at ui/traits/impl-implicit-trait.rs:9:5: 9:10
        return;                          // scope 0 at ui/traits/impl-implicit-trait.rs:9:5: 9:10
    }
}

// MIR FOR CTFE
fn option_::some_(_1: T) -> option_<T> {
    let mut _0: option_<T>;              // return place in scope 0 at ui/traits/impl-implicit-trait.rs:9:5: 9:10

    bb0: {
        _0 = option_::<T>::some_(move _1); // scope 0 at ui/traits/impl-implicit-trait.rs:9:5: 9:10
        return;                          // scope 0 at ui/traits/impl-implicit-trait.rs:9:5: 9:10
    }
}

fn option__::some__(_1: isize) -> option__ {
    let mut _0: option__;                // return place in scope 0 at ui/traits/impl-implicit-trait.rs:18:5: 18:11

    bb0: {
        _0 = option__::some__(move _1);  // scope 0 at ui/traits/impl-implicit-trait.rs:18:5: 18:11
        return;                          // scope 0 at ui/traits/impl-implicit-trait.rs:18:5: 18:11
    }
}

// MIR FOR CTFE
fn option__::some__(_1: isize) -> option__ {
    let mut _0: option__;                // return place in scope 0 at ui/traits/impl-implicit-trait.rs:18:5: 18:11

    bb0: {
        _0 = option__::some__(move _1);  // scope 0 at ui/traits/impl-implicit-trait.rs:18:5: 18:11
        return;                          // scope 0 at ui/traits/impl-implicit-trait.rs:18:5: 18:11
    }
}
