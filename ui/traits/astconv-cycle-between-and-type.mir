// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
fn Trait1::dumb(_1: &Self) -> () {
    debug self => _1;                    // in scope 0 at ui/traits/astconv-cycle-between-and-type.rs:12:13: 12:18
    let mut _0: ();                      // return place in scope 0 at ui/traits/astconv-cycle-between-and-type.rs:12:20: 12:20

    bb0: {
        return;                          // scope 0 at ui/traits/astconv-cycle-between-and-type.rs:12:23: 12:23
    }
}

fn Trait2::dumber(_1: &Self, _2: A) -> () {
    debug self => _1;                    // in scope 0 at ui/traits/astconv-cycle-between-and-type.rs:16:15: 16:20
    let mut _0: ();                      // return place in scope 0 at ui/traits/astconv-cycle-between-and-type.rs:16:28: 16:28

    bb0: {
        drop(_2) -> bb1;                 // scope 0 at ui/traits/astconv-cycle-between-and-type.rs:16:30: 16:31
    }

    bb1: {
        return;                          // scope 0 at ui/traits/astconv-cycle-between-and-type.rs:16:31: 16:31
    }
}

fn main() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/traits/astconv-cycle-between-and-type.rs:29:11: 29:11

    bb0: {
        return;                          // scope 0 at ui/traits/astconv-cycle-between-and-type.rs:29:14: 29:14
    }
}
