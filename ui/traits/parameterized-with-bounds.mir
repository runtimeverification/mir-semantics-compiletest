// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
fn foo1(_1: &dyn A<T> + Send) -> () {
    let mut _0: ();                      // return place in scope 0 at ui/traits/parameterized-with-bounds.rs:15:35: 15:35

    bb0: {
        return;                          // scope 0 at ui/traits/parameterized-with-bounds.rs:15:37: 15:37
    }
}

fn foo2(_1: Box<dyn A<T> + Send + Sync>) -> () {
    let mut _0: ();                      // return place in scope 0 at ui/traits/parameterized-with-bounds.rs:16:44: 16:44

    bb0: {
        drop(_1) -> bb1;                 // scope 0 at ui/traits/parameterized-with-bounds.rs:16:45: 16:46
    }

    bb1: {
        return;                          // scope 0 at ui/traits/parameterized-with-bounds.rs:16:46: 16:46
    }
}

fn foo3(_1: Box<dyn B<isize, usize>>) -> () {
    let mut _0: ();                      // return place in scope 0 at ui/traits/parameterized-with-bounds.rs:17:51: 17:51

    bb0: {
        drop(_1) -> bb1;                 // scope 0 at ui/traits/parameterized-with-bounds.rs:17:52: 17:53
    }

    bb1: {
        return;                          // scope 0 at ui/traits/parameterized-with-bounds.rs:17:53: 17:53
    }
}

fn foo4(_1: Box<dyn C<'_, T> + Send>) -> () {
    let mut _0: ();                      // return place in scope 0 at ui/traits/parameterized-with-bounds.rs:18:55: 18:55

    bb0: {
        drop(_1) -> bb1;                 // scope 0 at ui/traits/parameterized-with-bounds.rs:18:56: 18:57
    }

    bb1: {
        return;                          // scope 0 at ui/traits/parameterized-with-bounds.rs:18:57: 18:57
    }
}

fn foo5(_1: Box<dyn D<'_, T> + Send>) -> () {
    let mut _0: ();                      // return place in scope 0 at ui/traits/parameterized-with-bounds.rs:19:60: 19:60

    bb0: {
        drop(_1) -> bb1;                 // scope 0 at ui/traits/parameterized-with-bounds.rs:19:61: 19:62
    }

    bb1: {
        return;                          // scope 0 at ui/traits/parameterized-with-bounds.rs:19:62: 19:62
    }
}

fn main() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/traits/parameterized-with-bounds.rs:21:15: 21:15

    bb0: {
        return;                          // scope 0 at ui/traits/parameterized-with-bounds.rs:21:17: 21:17
    }
}
