// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
fn <impl at ui/traits/inheritance/call-bound-inherited2.rs:10:1: 10:15>::f(_1: &A) -> isize {
    debug self => _1;                    // in scope 0 at ui/traits/inheritance/call-bound-inherited2.rs:10:23: 10:28
    let mut _0: isize;                   // return place in scope 0 at ui/traits/inheritance/call-bound-inherited2.rs:10:33: 10:38

    bb0: {
        _0 = const 10_isize;             // scope 0 at ui/traits/inheritance/call-bound-inherited2.rs:10:41: 10:43
        return;                          // scope 0 at ui/traits/inheritance/call-bound-inherited2.rs:10:45: 10:45
    }
}

fn <impl at ui/traits/inheritance/call-bound-inherited2.rs:11:1: 11:15>::g(_1: &A) -> isize {
    debug self => _1;                    // in scope 0 at ui/traits/inheritance/call-bound-inherited2.rs:11:23: 11:28
    let mut _0: isize;                   // return place in scope 0 at ui/traits/inheritance/call-bound-inherited2.rs:11:33: 11:38

    bb0: {
        _0 = const 20_isize;             // scope 0 at ui/traits/inheritance/call-bound-inherited2.rs:11:41: 11:43
        return;                          // scope 0 at ui/traits/inheritance/call-bound-inherited2.rs:11:45: 11:45
    }
}

fn <impl at ui/traits/inheritance/call-bound-inherited2.rs:12:1: 12:15>::h(_1: &A) -> isize {
    debug self => _1;                    // in scope 0 at ui/traits/inheritance/call-bound-inherited2.rs:12:23: 12:28
    let mut _0: isize;                   // return place in scope 0 at ui/traits/inheritance/call-bound-inherited2.rs:12:33: 12:38

    bb0: {
        _0 = const 30_isize;             // scope 0 at ui/traits/inheritance/call-bound-inherited2.rs:12:41: 12:43
        return;                          // scope 0 at ui/traits/inheritance/call-bound-inherited2.rs:12:45: 12:45
    }
}

fn gg(_1: &T) -> isize {
    debug a => _1;                       // in scope 0 at ui/traits/inheritance/call-bound-inherited2.rs:16:14: 16:15
    let mut _0: isize;                   // return place in scope 0 at ui/traits/inheritance/call-bound-inherited2.rs:16:24: 16:29
    let mut _2: &T;                      // in scope 0 at ui/traits/inheritance/call-bound-inherited2.rs:17:5: 17:10

    bb0: {
        _2 = _1;                         // scope 0 at ui/traits/inheritance/call-bound-inherited2.rs:17:5: 17:10
        _0 = <T as Foo>::f(move _2) -> bb1; // scope 0 at ui/traits/inheritance/call-bound-inherited2.rs:17:5: 17:10
                                         // mir::Constant
                                         // + span: ui/traits/inheritance/call-bound-inherited2.rs:17:7: 17:8
                                         // + literal: Const { ty: for<'a> fn(&'a T) -> isize {<T as Foo>::f}, val: Value(<ZST>) }
    }

    bb1: {
        return;                          // scope 0 at ui/traits/inheritance/call-bound-inherited2.rs:18:2: 18:2
    }
}

fn main() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/traits/inheritance/call-bound-inherited2.rs:20:15: 20:15
    let _1: &A;                          // in scope 0 at ui/traits/inheritance/call-bound-inherited2.rs:21:9: 21:10
    let mut _2: (&isize, &isize);        // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _3: &isize;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let _4: isize;                       // in scope 0 at ui/traits/inheritance/call-bound-inherited2.rs:22:16: 22:21
    let mut _5: &A;                      // in scope 0 at ui/traits/inheritance/call-bound-inherited2.rs:22:19: 22:20
    let mut _6: &isize;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _9: bool;                    // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    let mut _10: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
    let mut _11: isize;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
    let mut _12: isize;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
    let _14: !;                          // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
    let mut _15: core::panicking::AssertKind; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
    let mut _16: &isize;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let _17: &isize;                     // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let mut _18: &isize;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let _19: &isize;                     // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let mut _20: std::option::Option<std::fmt::Arguments<'_>>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
    let mut _22: &A;                     // in scope 0 at ui/traits/inheritance/call-bound-inherited2.rs:21:13: 21:24
    scope 1 {
        debug a => _1;                   // in scope 1 at ui/traits/inheritance/call-bound-inherited2.rs:21:9: 21:10
        let _7: &isize;                  // in scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        let _8: &isize;                  // in scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        let mut _21: &isize;             // in scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        scope 2 {
            debug left_val => _7;        // in scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
            debug right_val => _8;       // in scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
            let _13: core::panicking::AssertKind; // in scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
            scope 3 {
                debug kind => _13;       // in scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
            }
        }
    }

    bb0: {
        _22 = const _;                   // scope 0 at ui/traits/inheritance/call-bound-inherited2.rs:21:13: 21:24
                                         // mir::Constant
                                         // + span: ui/traits/inheritance/call-bound-inherited2.rs:21:13: 21:24
                                         // + literal: Const { ty: &A, val: Unevaluated(main, [], Some(promoted[1])) }
        _1 = _22;                        // scope 0 at ui/traits/inheritance/call-bound-inherited2.rs:21:13: 21:24
        _5 = _1;                         // scope 1 at ui/traits/inheritance/call-bound-inherited2.rs:22:19: 22:20
        _4 = gg::<A>(move _5) -> bb1;    // scope 1 at ui/traits/inheritance/call-bound-inherited2.rs:22:16: 22:21
                                         // mir::Constant
                                         // + span: ui/traits/inheritance/call-bound-inherited2.rs:22:16: 22:18
                                         // + literal: Const { ty: for<'a> fn(&'a A) -> isize {gg::<A>}, val: Value(<ZST>) }
    }

    bb1: {
        _3 = &_4;                        // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _21 = const _;                   // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // + literal: Const { ty: &isize, val: Unevaluated(main, [], Some(promoted[0])) }
        _6 = _21;                        // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _2 = (move _3, move _6);         // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _7 = (_2.0: &isize);             // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _8 = (_2.1: &isize);             // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _11 = (*_7);                     // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
        _12 = const 10_isize;            // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
        _10 = Eq(move _11, move _12);    // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
        _9 = Not(move _10);              // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
        switchInt(move _9) -> [0: bb3, otherwise: bb2]; // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    }

    bb2: {
        _13 = const core::panicking::AssertKind::Eq; // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _15 = const core::panicking::AssertKind::Eq; // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _17 = _7;                        // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _16 = _17;                       // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _19 = _8;                        // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _18 = _19;                       // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _20 = Option::<Arguments<'_>>::None; // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
        _14 = core::panicking::assert_failed::<isize, isize>(move _15, move _16, move _18, move _20); // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:53
                                         // + literal: Const { ty: for<'a, 'b, 'c> fn(core::panicking::AssertKind, &'a isize, &'b isize, Option<Arguments<'c>>) -> ! {core::panicking::assert_failed::<isize, isize>}, val: Value(<ZST>) }
    }

    bb3: {
        return;                          // scope 0 at ui/traits/inheritance/call-bound-inherited2.rs:23:2: 23:2
    }
}

promoted[0] in main: &isize = {
    let mut _0: &isize;                  // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _1: isize;                   // in scope 0 at ui/traits/inheritance/call-bound-inherited2.rs:22:23: 22:25

    bb0: {
        _1 = const 10_isize;             // scope 0 at ui/traits/inheritance/call-bound-inherited2.rs:22:23: 22:25
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    }
}

promoted[1] in main: &A = {
    let mut _0: &A;                      // return place in scope 0 at ui/traits/inheritance/call-bound-inherited2.rs:21:13: 21:24
    let mut _1: A;                       // in scope 0 at ui/traits/inheritance/call-bound-inherited2.rs:21:14: 21:24

    bb0: {
        _1 = A { x: const 3_isize };     // scope 0 at ui/traits/inheritance/call-bound-inherited2.rs:21:14: 21:24
        _0 = &_1;                        // scope 0 at ui/traits/inheritance/call-bound-inherited2.rs:21:13: 21:24
        return;                          // scope 0 at ui/traits/inheritance/call-bound-inherited2.rs:21:13: 21:24
    }
}
