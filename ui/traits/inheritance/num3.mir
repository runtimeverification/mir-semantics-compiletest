// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
fn <impl at ui/traits/inheritance/num3.rs:9:1: 9:21>::from(_1: i32) -> Option<f32> {
    debug i => _1;                       // in scope 0 at ui/traits/inheritance/num3.rs:10:13: 10:14
    let mut _0: std::option::Option<f32>; // return place in scope 0 at ui/traits/inheritance/num3.rs:10:24: 10:35
    let mut _2: f32;                     // in scope 0 at ui/traits/inheritance/num3.rs:10:43: 10:51
    let mut _3: i32;                     // in scope 0 at ui/traits/inheritance/num3.rs:10:43: 10:44

    bb0: {
        _3 = _1;                         // scope 0 at ui/traits/inheritance/num3.rs:10:43: 10:44
        _2 = move _3 as f32 (IntToFloat); // scope 0 at ui/traits/inheritance/num3.rs:10:43: 10:51
        _0 = Option::<f32>::Some(move _2); // scope 0 at ui/traits/inheritance/num3.rs:10:38: 10:52
        return;                          // scope 0 at ui/traits/inheritance/num3.rs:10:54: 10:54
    }
}

fn num_eq_one(_1: T) -> () {
    debug n => _1;                       // in scope 0 at ui/traits/inheritance/num3.rs:13:26: 13:27
    let mut _0: ();                      // return place in scope 0 at ui/traits/inheritance/num3.rs:13:32: 13:32
    let _2: ();                          // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:62
    let mut _3: std::fmt::Arguments<'_>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _4: &[&str];                 // in scope 0 at ui/traits/inheritance/num3.rs:14:14: 14:18
    let mut _5: &[&str; 2];              // in scope 0 at ui/traits/inheritance/num3.rs:14:14: 14:18
    let _6: &[&str; 2];                  // in scope 0 at ui/traits/inheritance/num3.rs:14:14: 14:18
    let mut _7: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _8: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let _9: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let _10: [core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _11: core::fmt::ArgumentV1<'_>; // in scope 0 at ui/traits/inheritance/num3.rs:14:20: 14:50
    let mut _12: &bool;                  // in scope 0 at ui/traits/inheritance/num3.rs:14:20: 14:50
    let _13: &bool;                      // in scope 0 at ui/traits/inheritance/num3.rs:14:20: 14:50
    let _14: bool;                       // in scope 0 at ui/traits/inheritance/num3.rs:14:20: 14:50
    let mut _15: &T;                     // in scope 0 at ui/traits/inheritance/num3.rs:14:20: 14:21
    let mut _16: &T;                     // in scope 0 at ui/traits/inheritance/num3.rs:14:25: 14:50
    let _17: T;                          // in scope 0 at ui/traits/inheritance/num3.rs:14:25: 14:50
    let mut _18: std::option::Option<T>; // in scope 0 at ui/traits/inheritance/num3.rs:14:25: 14:41
    let mut _19: &[&str; 2];             // in scope 0 at ui/traits/inheritance/num3.rs:14:14: 14:18

    bb0: {
        _19 = const _;                   // scope 0 at ui/traits/inheritance/num3.rs:14:14: 14:18
                                         // mir::Constant
                                         // + span: ui/traits/inheritance/num3.rs:14:14: 14:18
                                         // + literal: Const { ty: &[&str; 2], val: Unevaluated(num_eq_one, [T], Some(promoted[0])) }
        _6 = _19;                        // scope 0 at ui/traits/inheritance/num3.rs:14:14: 14:18
        _5 = _6;                         // scope 0 at ui/traits/inheritance/num3.rs:14:14: 14:18
        _4 = move _5 as &[&str] (Pointer(Unsize)); // scope 0 at ui/traits/inheritance/num3.rs:14:14: 14:18
        _15 = &_1;                       // scope 0 at ui/traits/inheritance/num3.rs:14:20: 14:21
        _18 = <T as NumCast>::from(const 1_i32) -> [return: bb1, unwind: bb10]; // scope 0 at ui/traits/inheritance/num3.rs:14:25: 14:41
                                         // mir::Constant
                                         // + span: ui/traits/inheritance/num3.rs:14:25: 14:38
                                         // + literal: Const { ty: fn(i32) -> Option<T> {<T as NumCast>::from}, val: Value(<ZST>) }
    }

    bb1: {
        _17 = Option::<T>::unwrap(move _18) -> [return: bb2, unwind: bb10]; // scope 0 at ui/traits/inheritance/num3.rs:14:25: 14:50
                                         // mir::Constant
                                         // + span: ui/traits/inheritance/num3.rs:14:42: 14:48
                                         // + literal: Const { ty: fn(Option<T>) -> T {Option::<T>::unwrap}, val: Value(<ZST>) }
    }

    bb2: {
        _16 = &_17;                      // scope 0 at ui/traits/inheritance/num3.rs:14:25: 14:50
        _14 = <T as PartialEq>::eq(move _15, move _16) -> [return: bb3, unwind: bb9]; // scope 0 at ui/traits/inheritance/num3.rs:14:20: 14:50
                                         // mir::Constant
                                         // + span: ui/traits/inheritance/num3.rs:14:20: 14:50
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a T, &'b T) -> bool {<T as PartialEq>::eq}, val: Value(<ZST>) }
    }

    bb3: {
        _13 = &_14;                      // scope 0 at ui/traits/inheritance/num3.rs:14:20: 14:50
        _12 = _13;                       // scope 0 at ui/traits/inheritance/num3.rs:14:20: 14:50
        _11 = core::fmt::ArgumentV1::<'_>::new_display::<bool>(move _12) -> [return: bb4, unwind: bb9]; // scope 0 at ui/traits/inheritance/num3.rs:14:20: 14:50
                                         // mir::Constant
                                         // + span: ui/traits/inheritance/num3.rs:14:20: 14:50
                                         // + user_ty: UserType(1)
                                         // + literal: Const { ty: for<'b> fn(&'b bool) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_display::<bool>}, val: Value(<ZST>) }
    }

    bb4: {
        _10 = [move _11];                // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _9 = &_10;                       // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _8 = _9;                         // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _7 = move _8 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _3 = Arguments::<'_>::new_v1(move _4, move _7) -> [return: bb5, unwind: bb9]; // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb5: {
        _2 = _print(move _3) -> [return: bb6, unwind: bb9]; // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:62
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:27
                                         // + literal: Const { ty: for<'a> fn(Arguments<'a>) {_print}, val: Value(<ZST>) }
    }

    bb6: {
        drop(_17) -> [return: bb7, unwind: bb10]; // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:62: 137:63
    }

    bb7: {
        drop(_1) -> bb8;                 // scope 0 at ui/traits/inheritance/num3.rs:15:1: 15:2
    }

    bb8: {
        return;                          // scope 0 at ui/traits/inheritance/num3.rs:15:2: 15:2
    }

    bb9 (cleanup): {
        drop(_17) -> bb10;               // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:62: 137:63
    }

    bb10 (cleanup): {
        drop(_1) -> bb11;                // scope 0 at ui/traits/inheritance/num3.rs:15:1: 15:2
    }

    bb11 (cleanup): {
        resume;                          // scope 0 at ui/traits/inheritance/num3.rs:13:1: 15:2
    }
}

promoted[0] in num_eq_one: &[&str; 2] = {
    let mut _0: &[&str; 2];              // return place in scope 0 at ui/traits/inheritance/num3.rs:14:14: 14:18
    let mut _1: [&str; 2];               // in scope 0 at ui/traits/inheritance/num3.rs:14:14: 14:18

    bb0: {
        _1 = [const "", const "\n"];     // scope 0 at ui/traits/inheritance/num3.rs:14:14: 14:18
                                         // mir::Constant
                                         // + span: ui/traits/inheritance/num3.rs:14:14: 14:18
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
                                         // mir::Constant
                                         // + span: ui/traits/inheritance/num3.rs:14:14: 14:18
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at ui/traits/inheritance/num3.rs:14:14: 14:18
        return;                          // scope 0 at ui/traits/inheritance/num3.rs:14:14: 14:18
    }
}

fn main() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/traits/inheritance/num3.rs:17:15: 17:15
    let _1: ();                          // in scope 0 at ui/traits/inheritance/num3.rs:18:5: 18:21

    bb0: {
        _1 = num_eq_one::<f32>(const 1f32) -> bb1; // scope 0 at ui/traits/inheritance/num3.rs:18:5: 18:21
                                         // mir::Constant
                                         // + span: ui/traits/inheritance/num3.rs:18:5: 18:15
                                         // + literal: Const { ty: fn(f32) {num_eq_one::<f32>}, val: Value(<ZST>) }
    }

    bb1: {
        return;                          // scope 0 at ui/traits/inheritance/num3.rs:19:2: 19:2
    }
}
