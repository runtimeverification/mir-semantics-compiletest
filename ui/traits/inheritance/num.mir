// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
fn greater_than_one(_1: &T) -> bool {
    debug n => _1;                       // in scope 0 at ui/traits/inheritance/num.rs:10:32: 10:33
    let mut _0: bool;                    // return place in scope 0 at ui/traits/inheritance/num.rs:10:42: 10:46

    bb0: {
        goto -> bb1;                     // scope 0 at ui/traits/inheritance/num.rs:10:49: 10:56
    }

    bb1: {
        goto -> bb1;                     // scope 0 at ui/traits/inheritance/num.rs:10:49: 10:56
    }
}

fn greater_than_one_float(_1: &T) -> bool {
    debug n => _1;                       // in scope 0 at ui/traits/inheritance/num.rs:11:40: 11:41
    let mut _0: bool;                    // return place in scope 0 at ui/traits/inheritance/num.rs:11:50: 11:54

    bb0: {
        goto -> bb1;                     // scope 0 at ui/traits/inheritance/num.rs:11:57: 11:64
    }

    bb1: {
        goto -> bb1;                     // scope 0 at ui/traits/inheritance/num.rs:11:57: 11:64
    }
}

fn main() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/traits/inheritance/num.rs:13:15: 13:15

    bb0: {
        return;                          // scope 0 at ui/traits/inheritance/num.rs:13:17: 13:17
    }
}
