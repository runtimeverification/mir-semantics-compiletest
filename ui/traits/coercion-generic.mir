// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
fn <impl at ui/traits/coercion-generic.rs:7:16: 7:21>::clone(_1: &Struct) -> Struct {
    debug self => _1;                    // in scope 0 at ui/traits/coercion-generic.rs:7:16: 7:21
    let mut _0: Struct;                  // return place in scope 0 at ui/traits/coercion-generic.rs:7:16: 7:21
    scope 1 {
    }

    bb0: {
        _0 = (*_1);                      // scope 1 at ui/traits/coercion-generic.rs:7:16: 7:21
        return;                          // scope 0 at ui/traits/coercion-generic.rs:7:21: 7:21
    }
}

fn <impl at ui/traits/coercion-generic.rs:13:1: 13:36>::f(_1: &Struct, _2: &str) -> () {
    debug self => _1;                    // in scope 0 at ui/traits/coercion-generic.rs:14:10: 14:15
    debug x => _2;                       // in scope 0 at ui/traits/coercion-generic.rs:14:17: 14:18
    let mut _0: ();                      // return place in scope 0 at ui/traits/coercion-generic.rs:14:34: 14:34
    let _3: ();                          // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:62
    let mut _4: std::fmt::Arguments<'_>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _5: &[&str];                 // in scope 0 at ui/traits/coercion-generic.rs:15:18: 15:27
    let mut _6: &[&str; 2];              // in scope 0 at ui/traits/coercion-generic.rs:15:18: 15:27
    let _7: &[&str; 2];                  // in scope 0 at ui/traits/coercion-generic.rs:15:18: 15:27
    let mut _8: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _9: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let _10: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let _11: [core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _12: core::fmt::ArgumentV1<'_>; // in scope 0 at ui/traits/coercion-generic.rs:15:29: 15:30
    let mut _13: &&str;                  // in scope 0 at ui/traits/coercion-generic.rs:15:29: 15:30
    let _14: &&str;                      // in scope 0 at ui/traits/coercion-generic.rs:15:29: 15:30
    let mut _15: &[&str; 2];             // in scope 0 at ui/traits/coercion-generic.rs:15:18: 15:27

    bb0: {
        _15 = const _;                   // scope 0 at ui/traits/coercion-generic.rs:15:18: 15:27
                                         // mir::Constant
                                         // + span: ui/traits/coercion-generic.rs:15:18: 15:27
                                         // + literal: Const { ty: &[&str; 2], val: Unevaluated(<Struct as Trait<&'static str>>::f, [], Some(promoted[0])) }
        _7 = _15;                        // scope 0 at ui/traits/coercion-generic.rs:15:18: 15:27
        _6 = _7;                         // scope 0 at ui/traits/coercion-generic.rs:15:18: 15:27
        _5 = move _6 as &[&str] (Pointer(Unsize)); // scope 0 at ui/traits/coercion-generic.rs:15:18: 15:27
        _14 = &_2;                       // scope 0 at ui/traits/coercion-generic.rs:15:29: 15:30
        _13 = _14;                       // scope 0 at ui/traits/coercion-generic.rs:15:29: 15:30
        _12 = core::fmt::ArgumentV1::<'_>::new_display::<&str>(move _13) -> bb1; // scope 0 at ui/traits/coercion-generic.rs:15:29: 15:30
                                         // mir::Constant
                                         // + span: ui/traits/coercion-generic.rs:15:29: 15:30
                                         // + user_ty: UserType(1)
                                         // + literal: Const { ty: for<'b> fn(&'b &str) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_display::<&str>}, val: Value(<ZST>) }
    }

    bb1: {
        _11 = [move _12];                // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _10 = &_11;                      // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _9 = _10;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _8 = move _9 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _4 = Arguments::<'_>::new_v1(move _5, move _8) -> bb2; // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb2: {
        _3 = _print(move _4) -> bb3;     // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:62
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:27
                                         // + literal: Const { ty: for<'a> fn(Arguments<'a>) {_print}, val: Value(<ZST>) }
    }

    bb3: {
        return;                          // scope 0 at ui/traits/coercion-generic.rs:16:6: 16:6
    }
}

promoted[0] in <impl at ui/traits/coercion-generic.rs:13:1: 13:36>::f: &[&str; 2] = {
    let mut _0: &[&str; 2];              // return place in scope 0 at ui/traits/coercion-generic.rs:15:18: 15:27
    let mut _1: [&str; 2];               // in scope 0 at ui/traits/coercion-generic.rs:15:18: 15:27

    bb0: {
        _1 = [const "Hi, ", const "!\n"]; // scope 0 at ui/traits/coercion-generic.rs:15:18: 15:27
                                         // mir::Constant
                                         // + span: ui/traits/coercion-generic.rs:15:18: 15:27
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
                                         // mir::Constant
                                         // + span: ui/traits/coercion-generic.rs:15:18: 15:27
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at ui/traits/coercion-generic.rs:15:18: 15:27
        return;                          // scope 0 at ui/traits/coercion-generic.rs:15:18: 15:27
    }
}

fn main() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/traits/coercion-generic.rs:19:15: 19:15
    let _1: Struct;                      // in scope 0 at ui/traits/coercion-generic.rs:20:9: 20:10
    let mut _3: std::boxed::Box<Struct>; // in scope 0 at ui/traits/coercion-generic.rs:21:43: 21:54
    let mut _4: Struct;                  // in scope 0 at ui/traits/coercion-generic.rs:21:52: 21:53
    let _5: ();                          // in scope 0 at ui/traits/coercion-generic.rs:22:5: 22:16
    let mut _6: &dyn Trait<&str>;        // in scope 0 at ui/traits/coercion-generic.rs:22:5: 22:16
    let mut _8: &Struct;                 // in scope 0 at ui/traits/coercion-generic.rs:23:39: 23:41
    let _9: &Struct;                     // in scope 0 at ui/traits/coercion-generic.rs:23:39: 23:41
    let _10: ();                         // in scope 0 at ui/traits/coercion-generic.rs:24:5: 24:15
    let mut _11: &dyn Trait<&str>;       // in scope 0 at ui/traits/coercion-generic.rs:24:5: 24:15
    let mut _12: *const dyn Trait<&str>; // in scope 0 at ui/traits/coercion-generic.rs:21:9: 21:10
    scope 1 {
        debug a => _1;                   // in scope 1 at ui/traits/coercion-generic.rs:20:9: 20:10
        let _2: std::boxed::Box<dyn Trait<&str>>; // in scope 1 at ui/traits/coercion-generic.rs:21:9: 21:10
        scope 2 {
            debug b => _2;               // in scope 2 at ui/traits/coercion-generic.rs:21:9: 21:10
            let _7: &dyn Trait<&str>;    // in scope 2 at ui/traits/coercion-generic.rs:23:9: 23:10
            scope 3 {
                debug c => _7;           // in scope 3 at ui/traits/coercion-generic.rs:23:9: 23:10
            }
        }
    }

    bb0: {
        _1 = Struct { x: const 1_isize, y: const 2_isize }; // scope 0 at ui/traits/coercion-generic.rs:20:13: 20:34
        _4 = _1;                         // scope 1 at ui/traits/coercion-generic.rs:21:52: 21:53
        _3 = Box::<Struct>::new(move _4) -> bb1; // scope 1 at ui/traits/coercion-generic.rs:21:43: 21:54
                                         // mir::Constant
                                         // + span: ui/traits/coercion-generic.rs:21:43: 21:51
                                         // + user_ty: UserType(1)
                                         // + literal: Const { ty: fn(Struct) -> Box<Struct> {Box::<Struct>::new}, val: Value(<ZST>) }
    }

    bb1: {
        _2 = move _3 as std::boxed::Box<dyn Trait<&str>> (Pointer(Unsize)); // scope 1 at ui/traits/coercion-generic.rs:21:43: 21:54
        _12 = (((_2.0: std::ptr::Unique<dyn Trait<&str>>).0: std::ptr::NonNull<dyn Trait<&str>>).0: *const dyn Trait<&str>); // scope 2 at ui/traits/coercion-generic.rs:22:5: 22:16
        _6 = &(*_12);                    // scope 2 at ui/traits/coercion-generic.rs:22:5: 22:16
        _5 = <dyn Trait<&str> as Trait<&str>>::f(move _6, const "Mary") -> [return: bb2, unwind: bb5]; // scope 2 at ui/traits/coercion-generic.rs:22:5: 22:16
                                         // mir::Constant
                                         // + span: ui/traits/coercion-generic.rs:22:7: 22:8
                                         // + literal: Const { ty: for<'a> fn(&'a dyn Trait<&str>, &str) {<dyn Trait<&str> as Trait<&str>>::f}, val: Value(<ZST>) }
                                         // mir::Constant
                                         // + span: ui/traits/coercion-generic.rs:22:9: 22:15
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
    }

    bb2: {
        _9 = &_1;                        // scope 2 at ui/traits/coercion-generic.rs:23:39: 23:41
        _8 = _9;                         // scope 2 at ui/traits/coercion-generic.rs:23:39: 23:41
        _7 = move _8 as &dyn Trait<&str> (Pointer(Unsize)); // scope 2 at ui/traits/coercion-generic.rs:23:39: 23:41
        _11 = _7;                        // scope 3 at ui/traits/coercion-generic.rs:24:5: 24:15
        _10 = <dyn Trait<&str> as Trait<&str>>::f(move _11, const "Joe") -> [return: bb3, unwind: bb5]; // scope 3 at ui/traits/coercion-generic.rs:24:5: 24:15
                                         // mir::Constant
                                         // + span: ui/traits/coercion-generic.rs:24:7: 24:8
                                         // + literal: Const { ty: for<'a> fn(&'a dyn Trait<&str>, &str) {<dyn Trait<&str> as Trait<&str>>::f}, val: Value(<ZST>) }
                                         // mir::Constant
                                         // + span: ui/traits/coercion-generic.rs:24:9: 24:14
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
    }

    bb3: {
        drop(_2) -> bb4;                 // scope 1 at ui/traits/coercion-generic.rs:25:1: 25:2
    }

    bb4: {
        return;                          // scope 0 at ui/traits/coercion-generic.rs:25:2: 25:2
    }

    bb5 (cleanup): {
        drop(_2) -> bb6;                 // scope 1 at ui/traits/coercion-generic.rs:25:1: 25:2
    }

    bb6 (cleanup): {
        resume;                          // scope 0 at ui/traits/coercion-generic.rs:19:1: 25:2
    }
}
