// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
static BYTE: u8 = {
    let mut _0: u8;                      // return place in scope 0 at ui/traits/dyn-trait.rs:6:14: 6:16

    bb0: {
        _0 = const 33_u8;                // scope 0 at ui/traits/dyn-trait.rs:6:19: 6:21
        return;                          // scope 0 at ui/traits/dyn-trait.rs:6:1: 6:22
    }
}

fn main() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/traits/dyn-trait.rs:8:11: 8:11
    let _1: &dyn std::fmt::Display;      // in scope 0 at ui/traits/dyn-trait.rs:9:9: 9:10
    let mut _2: &u8;                     // in scope 0 at ui/traits/dyn-trait.rs:9:39: 9:44
    let _3: &u8;                         // in scope 0 at ui/traits/dyn-trait.rs:9:39: 9:44
    let _4: &u8;                         // in scope 0 at ui/traits/dyn-trait.rs:9:40: 9:44
    let mut _6: std::boxed::Box<u8>;     // in scope 0 at ui/traits/dyn-trait.rs:10:41: 10:55
    let mut _7: u8;                      // in scope 0 at ui/traits/dyn-trait.rs:10:50: 10:54
    let mut _10: std::fmt::Arguments<'_>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
    let mut _11: &[&str];                // in scope 0 at ui/traits/dyn-trait.rs:13:24: 13:28
    let mut _12: &[&str; 1];             // in scope 0 at ui/traits/dyn-trait.rs:13:24: 13:28
    let _13: &[&str; 1];                 // in scope 0 at ui/traits/dyn-trait.rs:13:24: 13:28
    let mut _14: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
    let mut _15: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
    let _16: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
    let _17: [core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
    let mut _18: core::fmt::ArgumentV1<'_>; // in scope 0 at ui/traits/dyn-trait.rs:13:30: 13:31
    let mut _19: &&dyn std::fmt::Display; // in scope 0 at ui/traits/dyn-trait.rs:13:30: 13:31
    let _20: &&dyn std::fmt::Display;    // in scope 0 at ui/traits/dyn-trait.rs:13:30: 13:31
    let mut _23: std::fmt::Arguments<'_>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
    let mut _24: &[&str];                // in scope 0 at ui/traits/dyn-trait.rs:14:24: 14:28
    let mut _25: &[&str; 1];             // in scope 0 at ui/traits/dyn-trait.rs:14:24: 14:28
    let _26: &[&str; 1];                 // in scope 0 at ui/traits/dyn-trait.rs:14:24: 14:28
    let mut _27: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
    let mut _28: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
    let _29: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
    let _30: [core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
    let mut _31: core::fmt::ArgumentV1<'_>; // in scope 0 at ui/traits/dyn-trait.rs:14:30: 14:31
    let mut _32: &std::boxed::Box<dyn std::fmt::Display>; // in scope 0 at ui/traits/dyn-trait.rs:14:30: 14:31
    let _33: &std::boxed::Box<dyn std::fmt::Display>; // in scope 0 at ui/traits/dyn-trait.rs:14:30: 14:31
    let mut _34: (&std::string::String, &&str); // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _35: &std::string::String;   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let mut _36: &&str;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _39: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    let mut _40: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
    let mut _41: &std::string::String;   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
    let mut _42: &&str;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
    let _44: !;                          // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
    let mut _45: core::panicking::AssertKind; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
    let mut _46: &std::string::String;   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let _47: &std::string::String;       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let mut _48: &&str;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let _49: &&str;                      // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let mut _50: std::option::Option<std::fmt::Arguments<'_>>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
    let mut _51: (&std::string::String, &&str); // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _52: &std::string::String;   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let mut _53: &&str;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _56: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    let mut _57: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
    let mut _58: &std::string::String;   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
    let mut _59: &&str;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
    let _61: !;                          // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
    let mut _62: core::panicking::AssertKind; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
    let mut _63: &std::string::String;   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let _64: &std::string::String;       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let mut _65: &&str;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let _66: &&str;                      // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let mut _67: std::option::Option<std::fmt::Arguments<'_>>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
    scope 1 {
        debug x => _1;                   // in scope 1 at ui/traits/dyn-trait.rs:9:9: 9:10
        let _5: std::boxed::Box<dyn std::fmt::Display>; // in scope 1 at ui/traits/dyn-trait.rs:10:9: 10:10
        scope 2 {
            debug y => _5;               // in scope 2 at ui/traits/dyn-trait.rs:10:9: 10:10
            scope 3 {
                scope 4 {
                    let _8: std::string::String; // in scope 4 at ui/traits/dyn-trait.rs:13:9: 13:13
                    let _9: std::string::String; // in scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:13: 118:16
                    let mut _71: &[&str; 1]; // in scope 4 at ui/traits/dyn-trait.rs:13:24: 13:28
                    scope 5 {
                        debug xstr => _8; // in scope 5 at ui/traits/dyn-trait.rs:13:9: 13:13
                        let _21: std::string::String; // in scope 5 at ui/traits/dyn-trait.rs:14:9: 14:13
                        let _22: std::string::String; // in scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:13: 118:16
                        let mut _70: &[&str; 1]; // in scope 5 at ui/traits/dyn-trait.rs:14:24: 14:28
                        scope 7 {
                            debug ystr => _21; // in scope 7 at ui/traits/dyn-trait.rs:14:9: 14:13
                            let _37: &std::string::String; // in scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
                            let _38: &&str; // in scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
                            let _54: &std::string::String; // in scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
                            let _55: &&str; // in scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
                            let mut _68: &&str; // in scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                            let mut _69: &&str; // in scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                            scope 9 {
                                debug left_val => _37; // in scope 9 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
                                debug right_val => _38; // in scope 9 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
                                let _43: core::panicking::AssertKind; // in scope 9 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                                scope 10 {
                                    debug kind => _43; // in scope 10 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                                }
                            }
                            scope 11 {
                                debug left_val => _54; // in scope 11 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
                                debug right_val => _55; // in scope 11 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
                                let _60: core::panicking::AssertKind; // in scope 11 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                                scope 12 {
                                    debug kind => _60; // in scope 12 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                                }
                            }
                        }
                        scope 8 {
                            debug res => _22; // in scope 8 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:13: 118:16
                        }
                    }
                    scope 6 {
                        debug res => _9; // in scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:13: 118:16
                    }
                }
            }
        }
    }

    bb0: {
        _4 = const {alloc1: &u8};        // scope 0 at ui/traits/dyn-trait.rs:9:40: 9:44
                                         // mir::Constant
                                         // + span: ui/traits/dyn-trait.rs:9:40: 9:44
                                         // + literal: Const { ty: &u8, val: Value(Scalar(alloc1)) }
        _3 = _4;                         // scope 0 at ui/traits/dyn-trait.rs:9:39: 9:44
        _2 = _3;                         // scope 0 at ui/traits/dyn-trait.rs:9:39: 9:44
        _1 = move _2 as &dyn std::fmt::Display (Pointer(Unsize)); // scope 0 at ui/traits/dyn-trait.rs:9:39: 9:44
        _7 = const 33_u8;                // scope 1 at ui/traits/dyn-trait.rs:10:50: 10:54
        _6 = Box::<u8>::new(move _7) -> bb1; // scope 1 at ui/traits/dyn-trait.rs:10:41: 10:55
                                         // mir::Constant
                                         // + span: ui/traits/dyn-trait.rs:10:41: 10:49
                                         // + user_ty: UserType(3)
                                         // + literal: Const { ty: fn(u8) -> Box<u8> {Box::<u8>::new}, val: Value(<ZST>) }
    }

    bb1: {
        _5 = move _6 as std::boxed::Box<dyn std::fmt::Display> (Pointer(Unsize)); // scope 1 at ui/traits/dyn-trait.rs:10:41: 10:55
        _71 = const _;                   // scope 4 at ui/traits/dyn-trait.rs:13:24: 13:28
                                         // mir::Constant
                                         // + span: ui/traits/dyn-trait.rs:13:24: 13:28
                                         // + literal: Const { ty: &[&str; 1], val: Unevaluated(main, [], Some(promoted[3])) }
        _13 = _71;                       // scope 4 at ui/traits/dyn-trait.rs:13:24: 13:28
        _12 = _13;                       // scope 4 at ui/traits/dyn-trait.rs:13:24: 13:28
        _11 = move _12 as &[&str] (Pointer(Unsize)); // scope 4 at ui/traits/dyn-trait.rs:13:24: 13:28
        _20 = &_1;                       // scope 4 at ui/traits/dyn-trait.rs:13:30: 13:31
        _19 = _20;                       // scope 4 at ui/traits/dyn-trait.rs:13:30: 13:31
        _18 = core::fmt::ArgumentV1::<'_>::new_display::<&dyn std::fmt::Display>(move _19) -> [return: bb2, unwind: bb19]; // scope 4 at ui/traits/dyn-trait.rs:13:30: 13:31
                                         // mir::Constant
                                         // + span: ui/traits/dyn-trait.rs:13:30: 13:31
                                         // + user_ty: UserType(10)
                                         // + literal: Const { ty: for<'b> fn(&'b &dyn std::fmt::Display) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_display::<&dyn std::fmt::Display>}, val: Value(<ZST>) }
    }

    bb2: {
        _17 = [move _18];                // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
        _16 = &_17;                      // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
        _15 = _16;                       // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
        _14 = move _15 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
        _10 = Arguments::<'_>::new_v1(move _11, move _14) -> [return: bb3, unwind: bb19]; // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
                                         // + user_ty: UserType(9)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb3: {
        _9 = format(move _10) -> [return: bb4, unwind: bb19]; // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:19: 118:80
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:19: 118:38
                                         // + literal: Const { ty: for<'a> fn(Arguments<'a>) -> String {format}, val: Value(<ZST>) }
    }

    bb4: {
        _8 = move _9;                    // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:119:9: 119:12
        _70 = const _;                   // scope 5 at ui/traits/dyn-trait.rs:14:24: 14:28
                                         // mir::Constant
                                         // + span: ui/traits/dyn-trait.rs:14:24: 14:28
                                         // + literal: Const { ty: &[&str; 1], val: Unevaluated(main, [], Some(promoted[2])) }
        _26 = _70;                       // scope 5 at ui/traits/dyn-trait.rs:14:24: 14:28
        _25 = _26;                       // scope 5 at ui/traits/dyn-trait.rs:14:24: 14:28
        _24 = move _25 as &[&str] (Pointer(Unsize)); // scope 5 at ui/traits/dyn-trait.rs:14:24: 14:28
        _33 = &_5;                       // scope 5 at ui/traits/dyn-trait.rs:14:30: 14:31
        _32 = _33;                       // scope 5 at ui/traits/dyn-trait.rs:14:30: 14:31
        _31 = core::fmt::ArgumentV1::<'_>::new_display::<Box<dyn std::fmt::Display>>(move _32) -> [return: bb5, unwind: bb18]; // scope 5 at ui/traits/dyn-trait.rs:14:30: 14:31
                                         // mir::Constant
                                         // + span: ui/traits/dyn-trait.rs:14:30: 14:31
                                         // + user_ty: UserType(12)
                                         // + literal: Const { ty: for<'b> fn(&'b Box<dyn std::fmt::Display>) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_display::<Box<dyn std::fmt::Display>>}, val: Value(<ZST>) }
    }

    bb5: {
        _30 = [move _31];                // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
        _29 = &_30;                      // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
        _28 = _29;                       // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
        _27 = move _28 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
        _23 = Arguments::<'_>::new_v1(move _24, move _27) -> [return: bb6, unwind: bb18]; // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
                                         // + user_ty: UserType(11)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb6: {
        _22 = format(move _23) -> [return: bb7, unwind: bb18]; // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:19: 118:80
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:19: 118:38
                                         // + literal: Const { ty: for<'a> fn(Arguments<'a>) -> String {format}, val: Value(<ZST>) }
    }

    bb7: {
        _21 = move _22;                  // scope 8 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:119:9: 119:12
        _35 = &_8;                       // scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _69 = const _;                   // scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // + literal: Const { ty: &&str, val: Unevaluated(main, [], Some(promoted[1])) }
        _36 = _69;                       // scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _34 = (move _35, move _36);      // scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _37 = (_34.0: &std::string::String); // scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _38 = (_34.1: &&str);            // scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _41 = _37;                       // scope 9 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
        _42 = _38;                       // scope 9 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
        _40 = <String as PartialEq<&str>>::eq(move _41, move _42) -> [return: bb8, unwind: bb17]; // scope 9 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a String, &'b &str) -> bool {<String as PartialEq<&str>>::eq}, val: Value(<ZST>) }
    }

    bb8: {
        _39 = Not(move _40);             // scope 9 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
        switchInt(move _39) -> [0: bb10, otherwise: bb9]; // scope 9 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    }

    bb9: {
        _43 = const core::panicking::AssertKind::Eq; // scope 9 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _45 = const core::panicking::AssertKind::Eq; // scope 10 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _47 = _37;                       // scope 10 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _46 = _47;                       // scope 10 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _49 = _38;                       // scope 10 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _48 = _49;                       // scope 10 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _50 = Option::<Arguments<'_>>::None; // scope 10 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
        _44 = core::panicking::assert_failed::<String, &str>(move _45, move _46, move _48, move _50) -> bb17; // scope 10 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:53
                                         // + literal: Const { ty: for<'a, 'b, 'c> fn(core::panicking::AssertKind, &'a String, &'b &str, Option<Arguments<'c>>) -> ! {core::panicking::assert_failed::<String, &str>}, val: Value(<ZST>) }
    }

    bb10: {
        _52 = &_21;                      // scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _68 = const _;                   // scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // + literal: Const { ty: &&str, val: Unevaluated(main, [], Some(promoted[0])) }
        _53 = _68;                       // scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _51 = (move _52, move _53);      // scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _54 = (_51.0: &std::string::String); // scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _55 = (_51.1: &&str);            // scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _58 = _54;                       // scope 11 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
        _59 = _55;                       // scope 11 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
        _57 = <String as PartialEq<&str>>::eq(move _58, move _59) -> [return: bb11, unwind: bb17]; // scope 11 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a String, &'b &str) -> bool {<String as PartialEq<&str>>::eq}, val: Value(<ZST>) }
    }

    bb11: {
        _56 = Not(move _57);             // scope 11 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
        switchInt(move _56) -> [0: bb13, otherwise: bb12]; // scope 11 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    }

    bb12: {
        _60 = const core::panicking::AssertKind::Eq; // scope 11 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _62 = const core::panicking::AssertKind::Eq; // scope 12 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _64 = _54;                       // scope 12 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _63 = _64;                       // scope 12 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _66 = _55;                       // scope 12 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _65 = _66;                       // scope 12 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _67 = Option::<Arguments<'_>>::None; // scope 12 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
        _61 = core::panicking::assert_failed::<String, &str>(move _62, move _63, move _65, move _67) -> bb17; // scope 12 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:53
                                         // + literal: Const { ty: for<'a, 'b, 'c> fn(core::panicking::AssertKind, &'a String, &'b &str, Option<Arguments<'c>>) -> ! {core::panicking::assert_failed::<String, &str>}, val: Value(<ZST>) }
    }

    bb13: {
        drop(_21) -> [return: bb14, unwind: bb18]; // scope 5 at ui/traits/dyn-trait.rs:17:1: 17:2
    }

    bb14: {
        drop(_8) -> [return: bb15, unwind: bb19]; // scope 4 at ui/traits/dyn-trait.rs:17:1: 17:2
    }

    bb15: {
        drop(_5) -> bb16;                // scope 1 at ui/traits/dyn-trait.rs:17:1: 17:2
    }

    bb16: {
        return;                          // scope 0 at ui/traits/dyn-trait.rs:17:2: 17:2
    }

    bb17 (cleanup): {
        drop(_21) -> bb18;               // scope 5 at ui/traits/dyn-trait.rs:17:1: 17:2
    }

    bb18 (cleanup): {
        drop(_8) -> bb19;                // scope 4 at ui/traits/dyn-trait.rs:17:1: 17:2
    }

    bb19 (cleanup): {
        drop(_5) -> bb20;                // scope 1 at ui/traits/dyn-trait.rs:17:1: 17:2
    }

    bb20 (cleanup): {
        resume;                          // scope 0 at ui/traits/dyn-trait.rs:8:1: 17:2
    }
}

alloc1 (static: BYTE, size: 1, align: 1) {
    21                                              │ !
}

promoted[0] in main: &&str = {
    let mut _0: &&str;                   // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _1: &str;                    // in scope 0 at ui/traits/dyn-trait.rs:16:22: 16:26

    bb0: {
        _1 = const "33";                 // scope 0 at ui/traits/dyn-trait.rs:16:22: 16:26
                                         // mir::Constant
                                         // + span: ui/traits/dyn-trait.rs:16:22: 16:26
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    }
}

promoted[1] in main: &&str = {
    let mut _0: &&str;                   // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _1: &str;                    // in scope 0 at ui/traits/dyn-trait.rs:15:22: 15:26

    bb0: {
        _1 = const "33";                 // scope 0 at ui/traits/dyn-trait.rs:15:22: 15:26
                                         // mir::Constant
                                         // + span: ui/traits/dyn-trait.rs:15:22: 15:26
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    }
}

promoted[2] in main: &[&str; 1] = {
    let mut _0: &[&str; 1];              // return place in scope 0 at ui/traits/dyn-trait.rs:14:24: 14:28
    let mut _1: [&str; 1];               // in scope 0 at ui/traits/dyn-trait.rs:14:24: 14:28

    bb0: {
        _1 = [const ""];                 // scope 0 at ui/traits/dyn-trait.rs:14:24: 14:28
                                         // mir::Constant
                                         // + span: ui/traits/dyn-trait.rs:14:24: 14:28
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at ui/traits/dyn-trait.rs:14:24: 14:28
        return;                          // scope 0 at ui/traits/dyn-trait.rs:14:24: 14:28
    }
}

promoted[3] in main: &[&str; 1] = {
    let mut _0: &[&str; 1];              // return place in scope 0 at ui/traits/dyn-trait.rs:13:24: 13:28
    let mut _1: [&str; 1];               // in scope 0 at ui/traits/dyn-trait.rs:13:24: 13:28

    bb0: {
        _1 = [const ""];                 // scope 0 at ui/traits/dyn-trait.rs:13:24: 13:28
                                         // mir::Constant
                                         // + span: ui/traits/dyn-trait.rs:13:24: 13:28
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at ui/traits/dyn-trait.rs:13:24: 13:28
        return;                          // scope 0 at ui/traits/dyn-trait.rs:13:24: 13:28
    }
}
