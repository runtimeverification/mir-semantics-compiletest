// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
U::0::{constant#0}: usize = {
    let mut _0: usize;                   // return place in scope 0 at ui/traits/copy-guessing.rs:9:15: 9:19

    bb0: {
        _0 = const 1337_usize;           // scope 0 at ui/traits/copy-guessing.rs:9:15: 9:19
        return;                          // scope 0 at ui/traits/copy-guessing.rs:9:15: 9:19
    }
}

fn <impl at ui/traits/copy-guessing.rs:12:1: 12:31>::clone(_1: &S<'_, T>) -> S<'_, T> {
    debug self => _1;                    // in scope 0 at ui/traits/copy-guessing.rs:12:43: 12:48
    let mut _0: S<'_, T>;                // return place in scope 0 at ui/traits/copy-guessing.rs:12:53: 12:57
    let mut _2: &T;                      // in scope 0 at ui/traits/copy-guessing.rs:12:62: 12:68
    let mut _3: &T;                      // in scope 0 at ui/traits/copy-guessing.rs:12:43: 12:48

    bb0: {
        _3 = deref_copy ((*_1).0: &T);   // scope 0 at ui/traits/copy-guessing.rs:12:62: 12:68
        _2 = _3;                         // scope 0 at ui/traits/copy-guessing.rs:12:62: 12:68
        _0 = S::<'_, T>(move _2);        // scope 0 at ui/traits/copy-guessing.rs:12:60: 12:69
        return;                          // scope 0 at ui/traits/copy-guessing.rs:12:71: 12:71
    }
}

fn assert_impls_fn(_1: &T) -> () {
    let mut _0: ();                      // return place in scope 0 at ui/traits/copy-guessing.rs:16:40: 16:40

    bb0: {
        return;                          // scope 0 at ui/traits/copy-guessing.rs:16:42: 16:42
    }
}

fn main() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/traits/copy-guessing.rs:18:11: 18:11
    let _1: std::option::Option<U>;      // in scope 0 at ui/traits/copy-guessing.rs:19:9: 19:10
    let mut _3: &std::option::Option<U>; // in scope 0 at ui/traits/copy-guessing.rs:20:15: 20:17
    let _4: &std::option::Option<U>;     // in scope 0 at ui/traits/copy-guessing.rs:20:15: 20:17
    let mut _6: &S<'_, std::option::Option<U>>; // in scope 0 at ui/traits/copy-guessing.rs:21:13: 25:6
    let _7: ();                          // in scope 0 at ui/traits/copy-guessing.rs:26:5: 26:24
    let mut _8: &[closure@ui/traits/copy-guessing.rs:21:13: 21:15]; // in scope 0 at ui/traits/copy-guessing.rs:26:21: 26:23
    let _9: &[closure@ui/traits/copy-guessing.rs:21:13: 21:15]; // in scope 0 at ui/traits/copy-guessing.rs:26:21: 26:23
    let mut _10: (&usize, &usize);       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _11: &usize;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let _12: usize;                      // in scope 0 at ui/traits/copy-guessing.rs:27:16: 27:19
    let mut _13: &[closure@ui/traits/copy-guessing.rs:21:13: 21:15]; // in scope 0 at ui/traits/copy-guessing.rs:27:16: 27:17
    let mut _14: ();                     // in scope 0 at ui/traits/copy-guessing.rs:27:16: 27:19
    let mut _15: &usize;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _18: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    let mut _19: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
    let mut _20: usize;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
    let mut _21: usize;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
    let _23: !;                          // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
    let mut _24: core::panicking::AssertKind; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
    let mut _25: &usize;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let _26: &usize;                     // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let mut _27: &usize;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let _28: &usize;                     // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let mut _29: std::option::Option<std::fmt::Arguments<'_>>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
    let mut _30: (&usize, &usize);       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _31: &usize;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let _32: usize;                      // in scope 0 at ui/traits/copy-guessing.rs:29:16: 37:9
    let mut _33: &[closure@ui/traits/copy-guessing.rs:29:17: 29:19]; // in scope 0 at ui/traits/copy-guessing.rs:29:16: 37:7
    let mut _34: ();                     // in scope 0 at ui/traits/copy-guessing.rs:29:16: 37:9
    let mut _35: &usize;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _38: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    let mut _39: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
    let mut _40: usize;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
    let mut _41: usize;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
    let _43: !;                          // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
    let mut _44: core::panicking::AssertKind; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
    let mut _45: &usize;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let _46: &usize;                     // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let mut _47: &usize;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let _48: &usize;                     // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let mut _49: std::option::Option<std::fmt::Arguments<'_>>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
    scope 1 {
        debug n => _1;                   // in scope 1 at ui/traits/copy-guessing.rs:19:9: 19:10
        let _2: S<'_, std::option::Option<U>>; // in scope 1 at ui/traits/copy-guessing.rs:20:9: 20:10
        scope 2 {
            debug e => _2;               // in scope 2 at ui/traits/copy-guessing.rs:20:9: 20:10
            let _5: [closure@ui/traits/copy-guessing.rs:21:13: 21:15]; // in scope 2 at ui/traits/copy-guessing.rs:21:9: 21:10
            scope 3 {
                debug f => _5;           // in scope 3 at ui/traits/copy-guessing.rs:21:9: 21:10
                let _16: &usize;         // in scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
                let _17: &usize;         // in scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
                let _36: &usize;         // in scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
                let _37: &usize;         // in scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
                let mut _50: &usize;     // in scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                let mut _51: &[closure@ui/traits/copy-guessing.rs:29:17: 29:19]; // in scope 3 at ui/traits/copy-guessing.rs:29:16: 37:7
                let mut _52: &usize;     // in scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                scope 4 {
                    debug left_val => _16; // in scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
                    debug right_val => _17; // in scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
                    let _22: core::panicking::AssertKind; // in scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                    scope 5 {
                        debug kind => _22; // in scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                    }
                }
                scope 6 {
                    debug left_val => _36; // in scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
                    debug right_val => _37; // in scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
                    let _42: core::panicking::AssertKind; // in scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                    scope 7 {
                        debug kind => _42; // in scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                    }
                }
            }
        }
    }

    bb0: {
        _1 = Option::<U>::None;          // scope 0 at ui/traits/copy-guessing.rs:19:13: 19:17
        _4 = &_1;                        // scope 1 at ui/traits/copy-guessing.rs:20:15: 20:17
        _3 = _4;                         // scope 1 at ui/traits/copy-guessing.rs:20:15: 20:17
        _2 = S::<'_, Option<U>>(move _3); // scope 1 at ui/traits/copy-guessing.rs:20:13: 20:18
        _6 = &_2;                        // scope 2 at ui/traits/copy-guessing.rs:21:13: 25:6
        _5 = [closure@ui/traits/copy-guessing.rs:21:13: 21:15] { e: move _6 }; // scope 2 at ui/traits/copy-guessing.rs:21:13: 25:6
                                         // closure
                                         // + def_id: DefId(0:23 ~ copy_guessing[776a]::main::{closure#0})
                                         // + substs: [
                                         //     i8,
                                         //     extern "rust-call" fn(()) -> usize,
                                         //     (&S<'_, std::option::Option<U>>,),
                                         // ]
        _9 = &_5;                        // scope 3 at ui/traits/copy-guessing.rs:26:21: 26:23
        _8 = _9;                         // scope 3 at ui/traits/copy-guessing.rs:26:21: 26:23
        _7 = assert_impls_fn::<usize, [closure@ui/traits/copy-guessing.rs:21:13: 21:15]>(move _8) -> bb1; // scope 3 at ui/traits/copy-guessing.rs:26:5: 26:24
                                         // mir::Constant
                                         // + span: ui/traits/copy-guessing.rs:26:5: 26:20
                                         // + literal: Const { ty: for<'a> fn(&'a [closure@ui/traits/copy-guessing.rs:21:13: 21:15]) {assert_impls_fn::<usize, [closure@ui/traits/copy-guessing.rs:21:13: 21:15]>}, val: Value(<ZST>) }
    }

    bb1: {
        _13 = &_5;                       // scope 3 at ui/traits/copy-guessing.rs:27:16: 27:17
        _12 = <[closure@ui/traits/copy-guessing.rs:21:13: 21:15] as Fn<()>>::call(move _13, move _14) -> bb2; // scope 3 at ui/traits/copy-guessing.rs:27:16: 27:19
                                         // mir::Constant
                                         // + span: ui/traits/copy-guessing.rs:27:16: 27:17
                                         // + literal: Const { ty: for<'a> extern "rust-call" fn(&'a [closure@ui/traits/copy-guessing.rs:21:13: 21:15], ()) -> <[closure@ui/traits/copy-guessing.rs:21:13: 21:15] as FnOnce<()>>::Output {<[closure@ui/traits/copy-guessing.rs:21:13: 21:15] as Fn<()>>::call}, val: Value(<ZST>) }
    }

    bb2: {
        _11 = &_12;                      // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _52 = const _;                   // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // + literal: Const { ty: &usize, val: Unevaluated(main, [], Some(promoted[2])) }
        _15 = _52;                       // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _10 = (move _11, move _15);      // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _16 = (_10.0: &usize);           // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _17 = (_10.1: &usize);           // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _20 = (*_16);                    // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
        _21 = const 1338_usize;          // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
        _19 = Eq(move _20, move _21);    // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
        _18 = Not(move _19);             // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
        switchInt(move _18) -> [0: bb4, otherwise: bb3]; // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    }

    bb3: {
        _22 = const core::panicking::AssertKind::Eq; // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _24 = const core::panicking::AssertKind::Eq; // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _26 = _16;                       // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _25 = _26;                       // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _28 = _17;                       // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _27 = _28;                       // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _29 = Option::<Arguments<'_>>::None; // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
        _23 = core::panicking::assert_failed::<usize, usize>(move _24, move _25, move _27, move _29); // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:53
                                         // + literal: Const { ty: for<'a, 'b, 'c> fn(core::panicking::AssertKind, &'a usize, &'b usize, Option<Arguments<'c>>) -> ! {core::panicking::assert_failed::<usize, usize>}, val: Value(<ZST>) }
    }

    bb4: {
        _51 = const _;                   // scope 3 at ui/traits/copy-guessing.rs:29:16: 37:7
                                         // mir::Constant
                                         // + span: ui/traits/copy-guessing.rs:29:16: 37:7
                                         // + literal: Const { ty: &[closure@ui/traits/copy-guessing.rs:29:17: 29:19], val: Unevaluated(main, [], Some(promoted[1])) }
        _33 = _51;                       // scope 3 at ui/traits/copy-guessing.rs:29:16: 37:7
        _32 = <[closure@ui/traits/copy-guessing.rs:29:17: 29:19] as Fn<()>>::call(move _33, move _34) -> bb5; // scope 3 at ui/traits/copy-guessing.rs:29:16: 37:9
                                         // mir::Constant
                                         // + span: ui/traits/copy-guessing.rs:29:16: 37:7
                                         // + literal: Const { ty: for<'a> extern "rust-call" fn(&'a [closure@ui/traits/copy-guessing.rs:29:17: 29:19], ()) -> <[closure@ui/traits/copy-guessing.rs:29:17: 29:19] as FnOnce<()>>::Output {<[closure@ui/traits/copy-guessing.rs:29:17: 29:19] as Fn<()>>::call}, val: Value(<ZST>) }
    }

    bb5: {
        _31 = &_32;                      // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _50 = const _;                   // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // + literal: Const { ty: &usize, val: Unevaluated(main, [], Some(promoted[0])) }
        _35 = _50;                       // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _30 = (move _31, move _35);      // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _36 = (_30.0: &usize);           // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _37 = (_30.1: &usize);           // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _40 = (*_36);                    // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
        _41 = const 1338_usize;          // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
        _39 = Eq(move _40, move _41);    // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
        _38 = Not(move _39);             // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
        switchInt(move _38) -> [0: bb7, otherwise: bb6]; // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    }

    bb6: {
        _42 = const core::panicking::AssertKind::Eq; // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _44 = const core::panicking::AssertKind::Eq; // scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _46 = _36;                       // scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _45 = _46;                       // scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _48 = _37;                       // scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _47 = _48;                       // scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _49 = Option::<Arguments<'_>>::None; // scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
        _43 = core::panicking::assert_failed::<usize, usize>(move _44, move _45, move _47, move _49); // scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:53
                                         // + literal: Const { ty: for<'a, 'b, 'c> fn(core::panicking::AssertKind, &'a usize, &'b usize, Option<Arguments<'c>>) -> ! {core::panicking::assert_failed::<usize, usize>}, val: Value(<ZST>) }
    }

    bb7: {
        return;                          // scope 0 at ui/traits/copy-guessing.rs:38:2: 38:2
    }
}

promoted[0] in main: &usize = {
    let mut _0: &usize;                  // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _1: usize;                   // in scope 0 at ui/traits/copy-guessing.rs:37:11: 37:17
    let mut _2: (usize, bool);           // in scope 0 at ui/traits/copy-guessing.rs:37:11: 37:17

    bb0: {
        _2 = CheckedAdd(const 1337_usize, const 1_usize); // scope 0 at ui/traits/copy-guessing.rs:37:11: 37:17
        _1 = move (_2.0: usize);         // scope 0 at ui/traits/copy-guessing.rs:37:11: 37:17
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    }
}

promoted[1] in main: &[closure@ui/traits/copy-guessing.rs:29:17: 29:19] = {
    let mut _0: &[closure@ui/traits/copy-guessing.rs:29:17: 29:19]; // return place in scope 0 at ui/traits/copy-guessing.rs:29:16: 37:7
    let mut _1: [closure@ui/traits/copy-guessing.rs:29:17: 29:19]; // in scope 0 at ui/traits/copy-guessing.rs:29:16: 37:7

    bb0: {
        _1 = [closure@ui/traits/copy-guessing.rs:29:17: 29:19]; // scope 0 at ui/traits/copy-guessing.rs:29:16: 37:7
                                         // closure
                                         // + def_id: DefId(0:24 ~ copy_guessing[776a]::main::{closure#1})
                                         // + substs: [
                                         //     i8,
                                         //     extern "rust-call" fn(()) -> usize,
                                         //     (),
                                         // ]
        _0 = &_1;                        // scope 0 at ui/traits/copy-guessing.rs:29:16: 37:7
        return;                          // scope 0 at ui/traits/copy-guessing.rs:29:16: 37:7
    }
}

promoted[2] in main: &usize = {
    let mut _0: &usize;                  // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _1: usize;                   // in scope 0 at ui/traits/copy-guessing.rs:27:21: 27:27
    let mut _2: (usize, bool);           // in scope 0 at ui/traits/copy-guessing.rs:27:21: 27:27

    bb0: {
        _2 = CheckedAdd(const 1337_usize, const 1_usize); // scope 0 at ui/traits/copy-guessing.rs:27:21: 27:27
        _1 = move (_2.0: usize);         // scope 0 at ui/traits/copy-guessing.rs:27:21: 27:27
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    }
}

fn main::{closure#0}(_1: &[closure@ui/traits/copy-guessing.rs:21:13: 21:15]) -> usize {
    debug e => (*((*_1).0: &S<'_, std::option::Option<U>>)); // in scope 0 at ui/traits/copy-guessing.rs:20:9: 20:10
    let mut _0: usize;                   // return place in scope 0 at ui/traits/copy-guessing.rs:21:16: 21:16
    let _2: ();                          // in scope 0 at ui/traits/copy-guessing.rs:23:9: 23:16
    let mut _3: S<'_, std::option::Option<U>>; // in scope 0 at ui/traits/copy-guessing.rs:23:14: 23:15
    let mut _4: &std::option::Option<U>; // in scope 0 at ui/traits/copy-guessing.rs:24:26: 24:29
    let mut _5: &S<'_, std::option::Option<U>>; // in scope 0 at ui/traits/copy-guessing.rs:21:13: 25:6
    let mut _6: &S<'_, std::option::Option<U>>; // in scope 0 at ui/traits/copy-guessing.rs:21:13: 25:6
    let mut _7: &std::option::Option<U>; // in scope 0 at ui/traits/copy-guessing.rs:21:13: 25:6

    bb0: {
        _5 = deref_copy ((*_1).0: &S<'_, std::option::Option<U>>); // scope 0 at ui/traits/copy-guessing.rs:23:14: 23:15
        _3 = (*_5);                      // scope 0 at ui/traits/copy-guessing.rs:23:14: 23:15
        _2 = std::mem::drop::<S<'_, Option<U>>>(move _3) -> bb1; // scope 0 at ui/traits/copy-guessing.rs:23:9: 23:16
                                         // mir::Constant
                                         // + span: ui/traits/copy-guessing.rs:23:9: 23:13
                                         // + literal: Const { ty: fn(S<'_, Option<U>>) {std::mem::drop::<S<'_, Option<U>>>}, val: Value(<ZST>) }
    }

    bb1: {
        _6 = deref_copy ((*_1).0: &S<'_, std::option::Option<U>>); // scope 0 at ui/traits/copy-guessing.rs:24:26: 24:29
        _7 = deref_copy ((*_6).0: &std::option::Option<U>); // scope 0 at ui/traits/copy-guessing.rs:24:26: 24:29
        _4 = _7;                         // scope 0 at ui/traits/copy-guessing.rs:24:26: 24:29
        _0 = std::mem::size_of_val::<Option<U>>(move _4) -> bb2; // scope 0 at ui/traits/copy-guessing.rs:24:9: 24:30
                                         // mir::Constant
                                         // + span: ui/traits/copy-guessing.rs:24:9: 24:25
                                         // + literal: Const { ty: for<'a> fn(&'a Option<U>) -> usize {std::mem::size_of_val::<Option<U>>}, val: Value(<ZST>) }
    }

    bb2: {
        return;                          // scope 0 at ui/traits/copy-guessing.rs:25:6: 25:6
    }
}

fn main::{closure#1}(_1: &[closure@ui/traits/copy-guessing.rs:29:17: 29:19]) -> usize {
    let _2: std::option::Option<U>;      // in scope 0 at ui/traits/copy-guessing.rs:32:13: 32:14
    let mut _4: &std::option::Option<U>; // in scope 0 at ui/traits/copy-guessing.rs:33:19: 33:21
    let _5: &std::option::Option<U>;     // in scope 0 at ui/traits/copy-guessing.rs:33:19: 33:21
    let mut _6: &std::option::Option<U>; // in scope 0 at ui/traits/copy-guessing.rs:34:36: 34:39
    let _7: ();                          // in scope 0 at ui/traits/copy-guessing.rs:35:9: 35:16
    let mut _8: S<'_, std::option::Option<U>>; // in scope 0 at ui/traits/copy-guessing.rs:35:14: 35:15
    let mut _9: &std::option::Option<U>; // in scope 0 at ui/traits/copy-guessing.rs:33:13: 33:14
    scope 1 {
        debug n => _2;                   // in scope 1 at ui/traits/copy-guessing.rs:32:13: 32:14
        let _3: S<'_, std::option::Option<U>>; // in scope 1 at ui/traits/copy-guessing.rs:33:13: 33:14
        scope 2 {
            debug e => _3;               // in scope 2 at ui/traits/copy-guessing.rs:33:13: 33:14
            let mut _0: usize;           // return place in scope 2 at ui/traits/copy-guessing.rs:34:13: 34:16
            scope 3 {
                debug ret => _0;         // in scope 3 at ui/traits/copy-guessing.rs:34:13: 34:16
            }
        }
    }

    bb0: {
        _2 = Option::<U>::None;          // scope 0 at ui/traits/copy-guessing.rs:32:17: 32:21
        _5 = &_2;                        // scope 1 at ui/traits/copy-guessing.rs:33:19: 33:21
        _4 = _5;                         // scope 1 at ui/traits/copy-guessing.rs:33:19: 33:21
        _3 = S::<'_, Option<U>>(move _4); // scope 1 at ui/traits/copy-guessing.rs:33:17: 33:22
        _9 = deref_copy (_3.0: &std::option::Option<U>); // scope 2 at ui/traits/copy-guessing.rs:34:36: 34:39
        _6 = _9;                         // scope 2 at ui/traits/copy-guessing.rs:34:36: 34:39
        _0 = std::mem::size_of_val::<Option<U>>(move _6) -> bb1; // scope 2 at ui/traits/copy-guessing.rs:34:19: 34:40
                                         // mir::Constant
                                         // + span: ui/traits/copy-guessing.rs:34:19: 34:35
                                         // + literal: Const { ty: for<'a> fn(&'a Option<U>) -> usize {std::mem::size_of_val::<Option<U>>}, val: Value(<ZST>) }
    }

    bb1: {
        _8 = _3;                         // scope 3 at ui/traits/copy-guessing.rs:35:14: 35:15
        _7 = std::mem::drop::<S<'_, Option<U>>>(move _8) -> bb2; // scope 3 at ui/traits/copy-guessing.rs:35:9: 35:16
                                         // mir::Constant
                                         // + span: ui/traits/copy-guessing.rs:35:9: 35:13
                                         // + literal: Const { ty: fn(S<'_, Option<U>>) {std::mem::drop::<S<'_, Option<U>>>}, val: Value(<ZST>) }
    }

    bb2: {
        return;                          // scope 0 at ui/traits/copy-guessing.rs:37:7: 37:7
    }
}

fn U(_1: [u8; 1337]) -> U {
    let mut _0: U;                       // return place in scope 0 at ui/traits/copy-guessing.rs:9:1: 9:9

    bb0: {
        _0 = U(move _1);                 // scope 0 at ui/traits/copy-guessing.rs:9:1: 9:9
        return;                          // scope 0 at ui/traits/copy-guessing.rs:9:1: 9:9
    }
}

// MIR FOR CTFE
fn U(_1: [u8; 1337]) -> U {
    let mut _0: U;                       // return place in scope 0 at ui/traits/copy-guessing.rs:9:1: 9:9

    bb0: {
        _0 = U(move _1);                 // scope 0 at ui/traits/copy-guessing.rs:9:1: 9:9
        return;                          // scope 0 at ui/traits/copy-guessing.rs:9:1: 9:9
    }
}

fn S(_1: &T) -> S<'_, T> {
    let mut _0: S<'_, T>;                // return place in scope 0 at ui/traits/copy-guessing.rs:11:1: 11:18

    bb0: {
        _0 = S::<'_, T>(move _1);        // scope 0 at ui/traits/copy-guessing.rs:11:1: 11:18
        return;                          // scope 0 at ui/traits/copy-guessing.rs:11:1: 11:18
    }
}

// MIR FOR CTFE
fn S(_1: &T) -> S<'_, T> {
    let mut _0: S<'_, T>;                // return place in scope 0 at ui/traits/copy-guessing.rs:11:1: 11:18

    bb0: {
        _0 = S::<'_, T>(move _1);        // scope 0 at ui/traits/copy-guessing.rs:11:1: 11:18
        return;                          // scope 0 at ui/traits/copy-guessing.rs:11:1: 11:18
    }
}
