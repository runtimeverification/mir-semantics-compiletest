// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
fn main() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/traits/syntax-polarity.rs:21:11: 21:11

    bb0: {
        return;                          // scope 0 at ui/traits/syntax-polarity.rs:21:13: 21:13
    }
}

fn TestType2(_1: T) -> TestType2<T> {
    let mut _0: TestType2<T>;            // return place in scope 0 at ui/traits/syntax-polarity.rs:15:1: 15:20

    bb0: {
        _0 = TestType2::<T>(move _1);    // scope 0 at ui/traits/syntax-polarity.rs:15:1: 15:20
        return;                          // scope 0 at ui/traits/syntax-polarity.rs:15:1: 15:20
    }
}

// MIR FOR CTFE
fn TestType2(_1: T) -> TestType2<T> {
    let mut _0: TestType2<T>;            // return place in scope 0 at ui/traits/syntax-polarity.rs:15:1: 15:20

    bb0: {
        _0 = TestType2::<T>(move _1);    // scope 0 at ui/traits/syntax-polarity.rs:15:1: 15:20
        return;                          // scope 0 at ui/traits/syntax-polarity.rs:15:1: 15:20
    }
}
