// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
fn <impl at ui/traits/monomorphized-callees-with-ty-params-3314.rs:11:1: 11:28>::serialize(_1: &isize, _2: S) -> () {
    debug self => _1;                    // in scope 0 at ui/traits/monomorphized-callees-with-ty-params-3314.rs:12:32: 12:37
    debug _s => _2;                      // in scope 0 at ui/traits/monomorphized-callees-with-ty-params-3314.rs:12:39: 12:41
    let mut _0: ();                      // return place in scope 0 at ui/traits/monomorphized-callees-with-ty-params-3314.rs:12:46: 12:46

    bb0: {
        drop(_2) -> bb1;                 // scope 0 at ui/traits/monomorphized-callees-with-ty-params-3314.rs:12:48: 12:49
    }

    bb1: {
        return;                          // scope 0 at ui/traits/monomorphized-callees-with-ty-params-3314.rs:12:49: 12:49
    }
}

fn <impl at ui/traits/monomorphized-callees-with-ty-params-3314.rs:17:1: 17:43>::serialize(_1: &F<A>, _2: S) -> () {
    debug self => _1;                    // in scope 0 at ui/traits/monomorphized-callees-with-ty-params-3314.rs:18:32: 18:37
    debug s => _2;                       // in scope 0 at ui/traits/monomorphized-callees-with-ty-params-3314.rs:18:39: 18:40
    let mut _0: ();                      // return place in scope 0 at ui/traits/monomorphized-callees-with-ty-params-3314.rs:18:45: 18:45
    let _3: ();                          // in scope 0 at ui/traits/monomorphized-callees-with-ty-params-3314.rs:19:9: 19:28
    let mut _4: &A;                      // in scope 0 at ui/traits/monomorphized-callees-with-ty-params-3314.rs:19:9: 19:28
    let mut _5: S;                       // in scope 0 at ui/traits/monomorphized-callees-with-ty-params-3314.rs:19:26: 19:27

    bb0: {
        _4 = &((*_1).0: A);              // scope 0 at ui/traits/monomorphized-callees-with-ty-params-3314.rs:19:9: 19:28
        _5 = move _2;                    // scope 0 at ui/traits/monomorphized-callees-with-ty-params-3314.rs:19:26: 19:27
        _3 = <A as Serializable>::serialize::<S>(move _4, move _5) -> bb1; // scope 0 at ui/traits/monomorphized-callees-with-ty-params-3314.rs:19:9: 19:28
                                         // mir::Constant
                                         // + span: ui/traits/monomorphized-callees-with-ty-params-3314.rs:19:16: 19:25
                                         // + literal: Const { ty: for<'a> fn(&'a A, S) {<A as Serializable>::serialize::<S>}, val: Value(<ZST>) }
    }

    bb1: {
        return;                          // scope 0 at ui/traits/monomorphized-callees-with-ty-params-3314.rs:20:6: 20:6
    }
}

fn main() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/traits/monomorphized-callees-with-ty-params-3314.rs:26:15: 26:15
    let _1: F<isize>;                    // in scope 0 at ui/traits/monomorphized-callees-with-ty-params-3314.rs:27:9: 27:12
    let _2: ();                          // in scope 0 at ui/traits/monomorphized-callees-with-ty-params-3314.rs:28:5: 28:21
    let mut _3: &F<isize>;               // in scope 0 at ui/traits/monomorphized-callees-with-ty-params-3314.rs:28:5: 28:21
    let mut _5: F<isize>;                // in scope 0 at ui/traits/monomorphized-callees-with-ty-params-3314.rs:30:22: 30:31
    let _6: ();                          // in scope 0 at ui/traits/monomorphized-callees-with-ty-params-3314.rs:31:5: 31:21
    let mut _7: &F<F<isize>>;            // in scope 0 at ui/traits/monomorphized-callees-with-ty-params-3314.rs:31:5: 31:21
    scope 1 {
        debug foo => _1;                 // in scope 1 at ui/traits/monomorphized-callees-with-ty-params-3314.rs:27:9: 27:12
        let _4: F<F<isize>>;             // in scope 1 at ui/traits/monomorphized-callees-with-ty-params-3314.rs:30:9: 30:12
        scope 2 {
            debug bar => _4;             // in scope 2 at ui/traits/monomorphized-callees-with-ty-params-3314.rs:30:9: 30:12
        }
    }

    bb0: {
        _1 = F::<isize> { a: const 1_isize }; // scope 0 at ui/traits/monomorphized-callees-with-ty-params-3314.rs:27:15: 27:25
        _3 = &_1;                        // scope 1 at ui/traits/monomorphized-callees-with-ty-params-3314.rs:28:5: 28:21
        _2 = <F<isize> as Serializable>::serialize::<isize>(move _3, const 1_isize) -> bb1; // scope 1 at ui/traits/monomorphized-callees-with-ty-params-3314.rs:28:5: 28:21
                                         // mir::Constant
                                         // + span: ui/traits/monomorphized-callees-with-ty-params-3314.rs:28:9: 28:18
                                         // + literal: Const { ty: for<'a> fn(&'a F<isize>, isize) {<F<isize> as Serializable>::serialize::<isize>}, val: Value(<ZST>) }
    }

    bb1: {
        _5 = const F::<isize> {{ a: 1_isize }}; // scope 1 at ui/traits/monomorphized-callees-with-ty-params-3314.rs:30:22: 30:31
                                         // mir::Constant
                                         // + span: ui/traits/monomorphized-callees-with-ty-params-3314.rs:30:22: 30:31
                                         // + literal: Const { ty: F<isize>, val: Value(Scalar(0x0000000000000001)) }
        _4 = F::<F<isize>> { a: move _5 }; // scope 1 at ui/traits/monomorphized-callees-with-ty-params-3314.rs:30:15: 30:33
        _7 = &_4;                        // scope 2 at ui/traits/monomorphized-callees-with-ty-params-3314.rs:31:5: 31:21
        _6 = <F<F<isize>> as Serializable>::serialize::<isize>(move _7, const 2_isize) -> bb2; // scope 2 at ui/traits/monomorphized-callees-with-ty-params-3314.rs:31:5: 31:21
                                         // mir::Constant
                                         // + span: ui/traits/monomorphized-callees-with-ty-params-3314.rs:31:9: 31:18
                                         // + literal: Const { ty: for<'a> fn(&'a F<F<isize>>, isize) {<F<F<isize>> as Serializable>::serialize::<isize>}, val: Value(<ZST>) }
    }

    bb2: {
        return;                          // scope 0 at ui/traits/monomorphized-callees-with-ty-params-3314.rs:32:2: 32:2
    }
}
