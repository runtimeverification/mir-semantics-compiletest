// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
fn <impl at ui/traits/issue-72455.rs:8:1: 8:51>::err_eprint_and_ignore(_1: Result<O, E>) -> Option<O> {
    debug self => _1;                    // in scope 0 at ui/traits/issue-72455.rs:13:30: 13:34
    let mut _0: std::option::Option<O>;  // return place in scope 0 at ui/traits/issue-72455.rs:13:39: 13:48
    let mut _2: isize;                   // in scope 0 at ui/traits/issue-72455.rs:18:13: 18:19
    let _3: E;                           // in scope 0 at ui/traits/issue-72455.rs:18:17: 18:18
    let _4: ();                          // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:209:9: 209:63
    let mut _5: std::fmt::Arguments<'_>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:209:29: 209:62
    let mut _6: &[&str];                 // in scope 0 at ui/traits/issue-72455.rs:19:27: 19:31
    let mut _7: &[&str; 2];              // in scope 0 at ui/traits/issue-72455.rs:19:27: 19:31
    let _8: &[&str; 2];                  // in scope 0 at ui/traits/issue-72455.rs:19:27: 19:31
    let mut _9: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:209:29: 209:62
    let mut _10: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:209:29: 209:62
    let _11: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:209:29: 209:62
    let _12: [core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:209:29: 209:62
    let mut _13: core::fmt::ArgumentV1<'_>; // in scope 0 at ui/traits/issue-72455.rs:19:33: 19:34
    let mut _14: &E;                     // in scope 0 at ui/traits/issue-72455.rs:19:33: 19:34
    let _15: &E;                         // in scope 0 at ui/traits/issue-72455.rs:19:33: 19:34
    let _16: O;                          // in scope 0 at ui/traits/issue-72455.rs:22:16: 22:17
    let mut _17: O;                      // in scope 0 at ui/traits/issue-72455.rs:22:27: 22:28
    scope 1 {
        debug e => _3;                   // in scope 1 at ui/traits/issue-72455.rs:18:17: 18:18
        let mut _18: &[&str; 2];         // in scope 1 at ui/traits/issue-72455.rs:19:27: 19:31
    }
    scope 2 {
        debug o => _16;                  // in scope 2 at ui/traits/issue-72455.rs:22:16: 22:17
    }

    bb0: {
        _2 = discriminant(_1);           // scope 0 at ui/traits/issue-72455.rs:17:15: 17:19
        switchInt(move _2) -> [0: bb1, 1: bb3, otherwise: bb2]; // scope 0 at ui/traits/issue-72455.rs:17:9: 17:19
    }

    bb1: {
        _16 = move ((_1 as Ok).0: O);    // scope 0 at ui/traits/issue-72455.rs:22:16: 22:17
        _17 = move _16;                  // scope 2 at ui/traits/issue-72455.rs:22:27: 22:28
        _0 = Option::<O>::Some(move _17); // scope 2 at ui/traits/issue-72455.rs:22:22: 22:29
        goto -> bb8;                     // scope 0 at ui/traits/issue-72455.rs:22:28: 22:29
    }

    bb2: {
        unreachable;                     // scope 0 at ui/traits/issue-72455.rs:17:15: 17:19
    }

    bb3: {
        _3 = move ((_1 as Err).0: E);    // scope 0 at ui/traits/issue-72455.rs:18:17: 18:18
        _18 = const _;                   // scope 1 at ui/traits/issue-72455.rs:19:27: 19:31
                                         // mir::Constant
                                         // + span: ui/traits/issue-72455.rs:19:27: 19:31
                                         // + literal: Const { ty: &[&str; 2], val: Unevaluated(<Result<O, E> as ResultExt>::err_eprint_and_ignore, [O, E], Some(promoted[0])) }
        _8 = _18;                        // scope 1 at ui/traits/issue-72455.rs:19:27: 19:31
        _7 = _8;                         // scope 1 at ui/traits/issue-72455.rs:19:27: 19:31
        _6 = move _7 as &[&str] (Pointer(Unsize)); // scope 1 at ui/traits/issue-72455.rs:19:27: 19:31
        _15 = &_3;                       // scope 1 at ui/traits/issue-72455.rs:19:33: 19:34
        _14 = _15;                       // scope 1 at ui/traits/issue-72455.rs:19:33: 19:34
        _13 = core::fmt::ArgumentV1::<'_>::new_display::<E>(move _14) -> [return: bb4, unwind: bb7]; // scope 1 at ui/traits/issue-72455.rs:19:33: 19:34
                                         // mir::Constant
                                         // + span: ui/traits/issue-72455.rs:19:33: 19:34
                                         // + user_ty: UserType(1)
                                         // + literal: Const { ty: for<'b> fn(&'b E) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_display::<E>}, val: Value(<ZST>) }
    }

    bb4: {
        _12 = [move _13];                // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:209:29: 209:62
        _11 = &_12;                      // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:209:29: 209:62
        _10 = _11;                       // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:209:29: 209:62
        _9 = move _10 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:209:29: 209:62
        _5 = Arguments::<'_>::new_v1(move _6, move _9) -> [return: bb5, unwind: bb7]; // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:209:29: 209:62
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:209:29: 209:62
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb5: {
        _4 = _eprint(move _5) -> [return: bb6, unwind: bb7]; // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:209:9: 209:63
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:209:9: 209:28
                                         // + literal: Const { ty: for<'a> fn(Arguments<'a>) {_eprint}, val: Value(<ZST>) }
    }

    bb6: {
        _0 = Option::<O>::None;          // scope 1 at ui/traits/issue-72455.rs:20:17: 20:21
        drop(_3) -> bb8;                 // scope 0 at ui/traits/issue-72455.rs:21:13: 21:14
    }

    bb7 (cleanup): {
        drop(_3) -> bb9;                 // scope 0 at ui/traits/issue-72455.rs:21:13: 21:14
    }

    bb8: {
        return;                          // scope 0 at ui/traits/issue-72455.rs:24:6: 24:6
    }

    bb9 (cleanup): {
        resume;                          // scope 0 at ui/traits/issue-72455.rs:13:5: 24:6
    }
}

promoted[0] in <impl at ui/traits/issue-72455.rs:8:1: 8:51>::err_eprint_and_ignore: &[&str; 2] = {
    let mut _0: &[&str; 2];              // return place in scope 0 at ui/traits/issue-72455.rs:19:27: 19:31
    let mut _1: [&str; 2];               // in scope 0 at ui/traits/issue-72455.rs:19:27: 19:31

    bb0: {
        _1 = [const "", const "\n"];     // scope 0 at ui/traits/issue-72455.rs:19:27: 19:31
                                         // mir::Constant
                                         // + span: ui/traits/issue-72455.rs:19:27: 19:31
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
                                         // mir::Constant
                                         // + span: ui/traits/issue-72455.rs:19:27: 19:31
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at ui/traits/issue-72455.rs:19:27: 19:31
        return;                          // scope 0 at ui/traits/issue-72455.rs:19:27: 19:31
    }
}

fn main() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/traits/issue-72455.rs:27:11: 27:11

    bb0: {
        return;                          // scope 0 at ui/traits/issue-72455.rs:27:13: 27:13
    }
}
