// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
fn Speak::hi(_1: &Self) -> String {
    debug self => _1;                    // in scope 0 at ui/traits/bug-7183-generics.rs:5:11: 5:16
    let mut _0: std::string::String;     // return place in scope 0 at ui/traits/bug-7183-generics.rs:5:21: 5:27
    let mut _2: &Self;                   // in scope 0 at ui/traits/bug-7183-generics.rs:5:36: 5:40

    bb0: {
        _2 = _1;                         // scope 0 at ui/traits/bug-7183-generics.rs:5:36: 5:40
        _0 = hello::<Self>(move _2) -> bb1; // scope 0 at ui/traits/bug-7183-generics.rs:5:30: 5:41
                                         // mir::Constant
                                         // + span: ui/traits/bug-7183-generics.rs:5:30: 5:35
                                         // + literal: Const { ty: for<'a> fn(&'a Self) -> String {hello::<Self>}, val: Value(<ZST>) }
    }

    bb1: {
        return;                          // scope 0 at ui/traits/bug-7183-generics.rs:5:43: 5:43
    }
}

fn hello(_1: &S) -> String {
    debug s => _1;                       // in scope 0 at ui/traits/bug-7183-generics.rs:8:19: 8:20
    let mut _0: std::string::String;     // return place in scope 0 at ui/traits/bug-7183-generics.rs:8:28: 8:34
    let mut _2: &S;                      // in scope 0 at ui/traits/bug-7183-generics.rs:9:5: 9:19
    let mut _3: &str;                    // in scope 0 at ui/traits/bug-7183-generics.rs:9:11: 9:18
    let _4: &str;                        // in scope 0 at ui/traits/bug-7183-generics.rs:9:11: 9:18

    bb0: {
        _2 = _1;                         // scope 0 at ui/traits/bug-7183-generics.rs:9:5: 9:19
        _4 = const "hello";              // scope 0 at ui/traits/bug-7183-generics.rs:9:11: 9:18
                                         // mir::Constant
                                         // + span: ui/traits/bug-7183-generics.rs:9:11: 9:18
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _3 = _4;                         // scope 0 at ui/traits/bug-7183-generics.rs:9:11: 9:18
        _0 = <S as Speak>::say(move _2, move _3) -> bb1; // scope 0 at ui/traits/bug-7183-generics.rs:9:5: 9:19
                                         // mir::Constant
                                         // + span: ui/traits/bug-7183-generics.rs:9:7: 9:10
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a S, &'b str) -> String {<S as Speak>::say}, val: Value(<ZST>) }
    }

    bb1: {
        return;                          // scope 0 at ui/traits/bug-7183-generics.rs:10:2: 10:2
    }
}

fn <impl at ui/traits/bug-7183-generics.rs:12:1: 12:21>::say(_1: &isize, _2: &str) -> String {
    debug self => _1;                    // in scope 0 at ui/traits/bug-7183-generics.rs:13:12: 13:17
    debug s => _2;                       // in scope 0 at ui/traits/bug-7183-generics.rs:13:19: 13:20
    let mut _0: std::string::String;     // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:13: 118:16
    let mut _3: std::fmt::Arguments<'_>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
    let mut _4: &[&str];                 // in scope 0 at ui/traits/bug-7183-generics.rs:14:17: 14:25
    let mut _5: &[&str; 2];              // in scope 0 at ui/traits/bug-7183-generics.rs:14:17: 14:25
    let _6: &[&str; 2];                  // in scope 0 at ui/traits/bug-7183-generics.rs:14:17: 14:25
    let mut _7: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
    let mut _8: &[core::fmt::ArgumentV1<'_>; 2]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
    let _9: &[core::fmt::ArgumentV1<'_>; 2]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
    let _10: [core::fmt::ArgumentV1<'_>; 2]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
    let mut _11: core::fmt::ArgumentV1<'_>; // in scope 0 at ui/traits/bug-7183-generics.rs:14:27: 14:28
    let mut _12: &&str;                  // in scope 0 at ui/traits/bug-7183-generics.rs:14:27: 14:28
    let _13: &&str;                      // in scope 0 at ui/traits/bug-7183-generics.rs:14:27: 14:28
    let mut _14: core::fmt::ArgumentV1<'_>; // in scope 0 at ui/traits/bug-7183-generics.rs:14:30: 14:35
    let mut _15: &isize;                 // in scope 0 at ui/traits/bug-7183-generics.rs:14:30: 14:35
    let _16: &isize;                     // in scope 0 at ui/traits/bug-7183-generics.rs:14:30: 14:35
    let mut _17: &[&str; 2];             // in scope 0 at ui/traits/bug-7183-generics.rs:14:17: 14:25
    scope 1 {
        debug res => _0;                 // in scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:13: 118:16
    }

    bb0: {
        _17 = const _;                   // scope 0 at ui/traits/bug-7183-generics.rs:14:17: 14:25
                                         // mir::Constant
                                         // + span: ui/traits/bug-7183-generics.rs:14:17: 14:25
                                         // + literal: Const { ty: &[&str; 2], val: Unevaluated(<isize as Speak>::say, [], Some(promoted[0])) }
        _6 = _17;                        // scope 0 at ui/traits/bug-7183-generics.rs:14:17: 14:25
        _5 = _6;                         // scope 0 at ui/traits/bug-7183-generics.rs:14:17: 14:25
        _4 = move _5 as &[&str] (Pointer(Unsize)); // scope 0 at ui/traits/bug-7183-generics.rs:14:17: 14:25
        _13 = &_2;                       // scope 0 at ui/traits/bug-7183-generics.rs:14:27: 14:28
        _12 = _13;                       // scope 0 at ui/traits/bug-7183-generics.rs:14:27: 14:28
        _11 = core::fmt::ArgumentV1::<'_>::new_display::<&str>(move _12) -> bb1; // scope 0 at ui/traits/bug-7183-generics.rs:14:27: 14:28
                                         // mir::Constant
                                         // + span: ui/traits/bug-7183-generics.rs:14:27: 14:28
                                         // + user_ty: UserType(1)
                                         // + literal: Const { ty: for<'b> fn(&'b &str) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_display::<&str>}, val: Value(<ZST>) }
    }

    bb1: {
        _16 = _1;                        // scope 0 at ui/traits/bug-7183-generics.rs:14:30: 14:35
        _15 = _16;                       // scope 0 at ui/traits/bug-7183-generics.rs:14:30: 14:35
        _14 = core::fmt::ArgumentV1::<'_>::new_display::<isize>(move _15) -> bb2; // scope 0 at ui/traits/bug-7183-generics.rs:14:30: 14:35
                                         // mir::Constant
                                         // + span: ui/traits/bug-7183-generics.rs:14:30: 14:35
                                         // + user_ty: UserType(2)
                                         // + literal: Const { ty: for<'b> fn(&'b isize) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_display::<isize>}, val: Value(<ZST>) }
    }

    bb2: {
        _10 = [move _11, move _14];      // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
        _9 = &_10;                       // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
        _8 = _9;                         // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
        _7 = move _8 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
        _3 = Arguments::<'_>::new_v1(move _4, move _7) -> bb3; // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb3: {
        _0 = format(move _3) -> bb4;     // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:19: 118:80
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:19: 118:38
                                         // + literal: Const { ty: for<'a> fn(Arguments<'a>) -> String {format}, val: Value(<ZST>) }
    }

    bb4: {
        return;                          // scope 0 at ui/traits/bug-7183-generics.rs:15:6: 15:6
    }
}

promoted[0] in <impl at ui/traits/bug-7183-generics.rs:12:1: 12:21>::say: &[&str; 2] = {
    let mut _0: &[&str; 2];              // return place in scope 0 at ui/traits/bug-7183-generics.rs:14:17: 14:25
    let mut _1: [&str; 2];               // in scope 0 at ui/traits/bug-7183-generics.rs:14:17: 14:25

    bb0: {
        _1 = [const "", const ": "];     // scope 0 at ui/traits/bug-7183-generics.rs:14:17: 14:25
                                         // mir::Constant
                                         // + span: ui/traits/bug-7183-generics.rs:14:17: 14:25
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
                                         // mir::Constant
                                         // + span: ui/traits/bug-7183-generics.rs:14:17: 14:25
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at ui/traits/bug-7183-generics.rs:14:17: 14:25
        return;                          // scope 0 at ui/traits/bug-7183-generics.rs:14:17: 14:25
    }
}

fn <impl at ui/traits/bug-7183-generics.rs:18:1: 18:35>::say(_1: &Option<T>, _2: &str) -> String {
    debug self => _1;                    // in scope 0 at ui/traits/bug-7183-generics.rs:19:12: 19:17
    debug s => _2;                       // in scope 0 at ui/traits/bug-7183-generics.rs:19:19: 19:20
    let mut _0: std::string::String;     // return place in scope 0 at ui/traits/bug-7183-generics.rs:19:30: 19:36
    let mut _3: isize;                   // in scope 0 at ui/traits/bug-7183-generics.rs:21:13: 21:17
    let _4: std::string::String;         // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:13: 118:16
    let mut _5: std::fmt::Arguments<'_>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
    let mut _6: &[&str];                 // in scope 0 at ui/traits/bug-7183-generics.rs:21:29: 21:40
    let mut _7: &[&str; 2];              // in scope 0 at ui/traits/bug-7183-generics.rs:21:29: 21:40
    let _8: &[&str; 2];                  // in scope 0 at ui/traits/bug-7183-generics.rs:21:29: 21:40
    let mut _9: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
    let mut _10: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
    let _11: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
    let _12: [core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
    let mut _13: core::fmt::ArgumentV1<'_>; // in scope 0 at ui/traits/bug-7183-generics.rs:21:42: 21:43
    let mut _14: &&str;                  // in scope 0 at ui/traits/bug-7183-generics.rs:21:42: 21:43
    let _15: &&str;                      // in scope 0 at ui/traits/bug-7183-generics.rs:21:42: 21:43
    let _16: &T;                         // in scope 0 at ui/traits/bug-7183-generics.rs:22:18: 22:23
    let mut _18: std::fmt::Arguments<'_>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
    let mut _19: &[&str];                // in scope 0 at ui/traits/bug-7183-generics.rs:22:38: 22:52
    let mut _20: &[&str; 1];             // in scope 0 at ui/traits/bug-7183-generics.rs:22:38: 22:52
    let _21: &[&str; 1];                 // in scope 0 at ui/traits/bug-7183-generics.rs:22:38: 22:52
    let mut _22: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
    let mut _23: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
    let _24: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
    let _25: [core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
    let mut _26: core::fmt::ArgumentV1<'_>; // in scope 0 at ui/traits/bug-7183-generics.rs:22:54: 22:62
    let mut _27: &std::string::String;   // in scope 0 at ui/traits/bug-7183-generics.rs:22:54: 22:62
    let _28: &std::string::String;       // in scope 0 at ui/traits/bug-7183-generics.rs:22:54: 22:62
    let _29: std::string::String;        // in scope 0 at ui/traits/bug-7183-generics.rs:22:54: 22:62
    let mut _30: &T;                     // in scope 0 at ui/traits/bug-7183-generics.rs:22:54: 22:62
    let mut _31: &str;                   // in scope 0 at ui/traits/bug-7183-generics.rs:22:60: 22:61
    let mut _32: &[&str; 2];             // in scope 0 at ui/traits/bug-7183-generics.rs:21:29: 21:40
    scope 1 {
        debug res => _4;                 // in scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:13: 118:16
    }
    scope 2 {
        debug x => _16;                  // in scope 2 at ui/traits/bug-7183-generics.rs:22:18: 22:23
        let _17: std::string::String;    // in scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:13: 118:16
        let mut _33: &[&str; 1];         // in scope 2 at ui/traits/bug-7183-generics.rs:22:38: 22:52
        scope 3 {
            debug res => _17;            // in scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:13: 118:16
        }
    }

    bb0: {
        _3 = discriminant((*_1));        // scope 0 at ui/traits/bug-7183-generics.rs:20:15: 20:20
        switchInt(move _3) -> [0: bb3, 1: bb1, otherwise: bb2]; // scope 0 at ui/traits/bug-7183-generics.rs:20:9: 20:20
    }

    bb1: {
        _16 = &(((*_1) as Some).0: T);   // scope 0 at ui/traits/bug-7183-generics.rs:22:18: 22:23
        _33 = const _;                   // scope 2 at ui/traits/bug-7183-generics.rs:22:38: 22:52
                                         // mir::Constant
                                         // + span: ui/traits/bug-7183-generics.rs:22:38: 22:52
                                         // + literal: Const { ty: &[&str; 1], val: Unevaluated(<Option<T> as Speak>::say, [T], Some(promoted[1])) }
        _21 = _33;                       // scope 2 at ui/traits/bug-7183-generics.rs:22:38: 22:52
        _20 = _21;                       // scope 2 at ui/traits/bug-7183-generics.rs:22:38: 22:52
        _19 = move _20 as &[&str] (Pointer(Unsize)); // scope 2 at ui/traits/bug-7183-generics.rs:22:38: 22:52
        _30 = _16;                       // scope 2 at ui/traits/bug-7183-generics.rs:22:54: 22:62
        _31 = _2;                        // scope 2 at ui/traits/bug-7183-generics.rs:22:60: 22:61
        _29 = <T as Speak>::say(move _30, move _31) -> bb7; // scope 2 at ui/traits/bug-7183-generics.rs:22:54: 22:62
                                         // mir::Constant
                                         // + span: ui/traits/bug-7183-generics.rs:22:56: 22:59
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a T, &'b str) -> String {<T as Speak>::say}, val: Value(<ZST>) }
    }

    bb2: {
        unreachable;                     // scope 0 at ui/traits/bug-7183-generics.rs:20:15: 20:20
    }

    bb3: {
        _32 = const _;                   // scope 0 at ui/traits/bug-7183-generics.rs:21:29: 21:40
                                         // mir::Constant
                                         // + span: ui/traits/bug-7183-generics.rs:21:29: 21:40
                                         // + literal: Const { ty: &[&str; 2], val: Unevaluated(<Option<T> as Speak>::say, [T], Some(promoted[0])) }
        _8 = _32;                        // scope 0 at ui/traits/bug-7183-generics.rs:21:29: 21:40
        _7 = _8;                         // scope 0 at ui/traits/bug-7183-generics.rs:21:29: 21:40
        _6 = move _7 as &[&str] (Pointer(Unsize)); // scope 0 at ui/traits/bug-7183-generics.rs:21:29: 21:40
        _15 = &_2;                       // scope 0 at ui/traits/bug-7183-generics.rs:21:42: 21:43
        _14 = _15;                       // scope 0 at ui/traits/bug-7183-generics.rs:21:42: 21:43
        _13 = core::fmt::ArgumentV1::<'_>::new_display::<&str>(move _14) -> bb4; // scope 0 at ui/traits/bug-7183-generics.rs:21:42: 21:43
                                         // mir::Constant
                                         // + span: ui/traits/bug-7183-generics.rs:21:42: 21:43
                                         // + user_ty: UserType(1)
                                         // + literal: Const { ty: for<'b> fn(&'b &str) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_display::<&str>}, val: Value(<ZST>) }
    }

    bb4: {
        _12 = [move _13];                // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
        _11 = &_12;                      // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
        _10 = _11;                       // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
        _9 = move _10 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
        _5 = Arguments::<'_>::new_v1(move _6, move _9) -> bb5; // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb5: {
        _4 = format(move _5) -> bb6;     // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:19: 118:80
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:19: 118:38
                                         // + literal: Const { ty: for<'a> fn(Arguments<'a>) -> String {format}, val: Value(<ZST>) }
    }

    bb6: {
        _0 = move _4;                    // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:119:9: 119:12
        goto -> bb12;                    // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:120:5: 120:6
    }

    bb7: {
        _28 = &_29;                      // scope 2 at ui/traits/bug-7183-generics.rs:22:54: 22:62
        _27 = _28;                       // scope 2 at ui/traits/bug-7183-generics.rs:22:54: 22:62
        _26 = core::fmt::ArgumentV1::<'_>::new_display::<String>(move _27) -> [return: bb8, unwind: bb14]; // scope 2 at ui/traits/bug-7183-generics.rs:22:54: 22:62
                                         // mir::Constant
                                         // + span: ui/traits/bug-7183-generics.rs:22:54: 22:62
                                         // + user_ty: UserType(3)
                                         // + literal: Const { ty: for<'b> fn(&'b String) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_display::<String>}, val: Value(<ZST>) }
    }

    bb8: {
        _25 = [move _26];                // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
        _24 = &_25;                      // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
        _23 = _24;                       // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
        _22 = move _23 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
        _18 = Arguments::<'_>::new_v1(move _19, move _22) -> [return: bb9, unwind: bb14]; // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
                                         // + user_ty: UserType(2)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb9: {
        _17 = format(move _18) -> [return: bb10, unwind: bb14]; // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:19: 118:80
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:19: 118:38
                                         // + literal: Const { ty: for<'a> fn(Arguments<'a>) -> String {format}, val: Value(<ZST>) }
    }

    bb10: {
        drop(_29) -> [return: bb11, unwind: bb13]; // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:80: 118:81
    }

    bb11: {
        _0 = move _17;                   // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:119:9: 119:12
        goto -> bb12;                    // scope 0 at ui/traits/bug-7183-generics.rs:22:64: 22:65
    }

    bb12: {
        return;                          // scope 0 at ui/traits/bug-7183-generics.rs:24:6: 24:6
    }

    bb13 (cleanup): {
        drop(_17) -> bb15;               // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:120:5: 120:6
    }

    bb14 (cleanup): {
        drop(_29) -> bb15;               // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:80: 118:81
    }

    bb15 (cleanup): {
        resume;                          // scope 0 at ui/traits/bug-7183-generics.rs:19:5: 24:6
    }
}

promoted[0] in <impl at ui/traits/bug-7183-generics.rs:18:1: 18:35>::say: &[&str; 2] = {
    let mut _0: &[&str; 2];              // return place in scope 0 at ui/traits/bug-7183-generics.rs:21:29: 21:40
    let mut _1: [&str; 2];               // in scope 0 at ui/traits/bug-7183-generics.rs:21:29: 21:40

    bb0: {
        _1 = [const "", const " - none"]; // scope 0 at ui/traits/bug-7183-generics.rs:21:29: 21:40
                                         // mir::Constant
                                         // + span: ui/traits/bug-7183-generics.rs:21:29: 21:40
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
                                         // mir::Constant
                                         // + span: ui/traits/bug-7183-generics.rs:21:29: 21:40
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at ui/traits/bug-7183-generics.rs:21:29: 21:40
        return;                          // scope 0 at ui/traits/bug-7183-generics.rs:21:29: 21:40
    }
}

promoted[1] in <impl at ui/traits/bug-7183-generics.rs:18:1: 18:35>::say: &[&str; 1] = {
    let mut _0: &[&str; 1];              // return place in scope 0 at ui/traits/bug-7183-generics.rs:22:38: 22:52
    let mut _1: [&str; 1];               // in scope 0 at ui/traits/bug-7183-generics.rs:22:38: 22:52

    bb0: {
        _1 = [const "something!"];       // scope 0 at ui/traits/bug-7183-generics.rs:22:38: 22:52
                                         // mir::Constant
                                         // + span: ui/traits/bug-7183-generics.rs:22:38: 22:52
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at ui/traits/bug-7183-generics.rs:22:38: 22:52
        return;                          // scope 0 at ui/traits/bug-7183-generics.rs:22:38: 22:52
    }
}

fn main() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/traits/bug-7183-generics.rs:28:15: 28:15
    let mut _1: (&std::string::String, &std::string::String); // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _2: &std::string::String;    // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let _3: std::string::String;         // in scope 0 at ui/traits/bug-7183-generics.rs:29:16: 29:22
    let mut _4: &isize;                  // in scope 0 at ui/traits/bug-7183-generics.rs:29:16: 29:22
    let mut _5: &std::string::String;    // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let _6: std::string::String;         // in scope 0 at ui/traits/bug-7183-generics.rs:29:24: 29:46
    let mut _7: &str;                    // in scope 0 at ui/traits/bug-7183-generics.rs:29:24: 29:46
    let _8: &str;                        // in scope 0 at ui/traits/bug-7183-generics.rs:29:24: 29:34
    let _9: &std::string::String;        // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
    let _10: &std::string::String;       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
    let mut _11: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    let mut _12: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
    let mut _13: &std::string::String;   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
    let mut _14: &std::string::String;   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
    let _16: !;                          // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
    let mut _17: core::panicking::AssertKind; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
    let mut _18: &std::string::String;   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let _19: &std::string::String;       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let mut _20: &std::string::String;   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let _21: &std::string::String;       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let mut _22: std::option::Option<std::fmt::Arguments<'_>>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
    let mut _23: (&std::string::String, &std::string::String); // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _24: &std::string::String;   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let _25: std::string::String;        // in scope 0 at ui/traits/bug-7183-generics.rs:30:16: 30:34
    let mut _26: &std::option::Option<std::option::Option<isize>>; // in scope 0 at ui/traits/bug-7183-generics.rs:30:16: 30:34
    let mut _27: &std::string::String;   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let _28: std::string::String;        // in scope 0 at ui/traits/bug-7183-generics.rs:31:16: 31:58
    let mut _29: &str;                   // in scope 0 at ui/traits/bug-7183-generics.rs:31:16: 31:58
    let _30: &str;                       // in scope 0 at ui/traits/bug-7183-generics.rs:31:16: 31:46
    let _31: &std::string::String;       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
    let _32: &std::string::String;       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
    let mut _33: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    let mut _34: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
    let mut _35: &std::string::String;   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
    let mut _36: &std::string::String;   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
    let _38: !;                          // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
    let mut _39: core::panicking::AssertKind; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
    let mut _40: &std::string::String;   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let _41: &std::string::String;       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let mut _42: &std::string::String;   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let _43: &std::string::String;       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let mut _44: std::option::Option<std::fmt::Arguments<'_>>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
    let mut _45: (&std::string::String, &std::string::String); // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _46: &std::string::String;   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let _47: std::string::String;        // in scope 0 at ui/traits/bug-7183-generics.rs:32:16: 32:34
    let mut _48: &std::option::Option<isize>; // in scope 0 at ui/traits/bug-7183-generics.rs:32:16: 32:34
    let mut _49: &std::string::String;   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let _50: std::string::String;        // in scope 0 at ui/traits/bug-7183-generics.rs:32:36: 32:62
    let mut _51: &str;                   // in scope 0 at ui/traits/bug-7183-generics.rs:32:36: 32:62
    let _52: &str;                       // in scope 0 at ui/traits/bug-7183-generics.rs:32:36: 32:50
    let _53: &std::string::String;       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
    let _54: &std::string::String;       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
    let mut _55: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    let mut _56: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
    let mut _57: &std::string::String;   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
    let mut _58: &std::string::String;   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
    let _60: !;                          // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
    let mut _61: core::panicking::AssertKind; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
    let mut _62: &std::string::String;   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let _63: &std::string::String;       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let mut _64: &std::string::String;   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let _65: &std::string::String;       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let mut _66: std::option::Option<std::fmt::Arguments<'_>>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
    let mut _67: (&std::string::String, &std::string::String); // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _68: &std::string::String;   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let _69: std::string::String;        // in scope 0 at ui/traits/bug-7183-generics.rs:34:16: 34:40
    let mut _70: &std::option::Option<std::option::Option<isize>>; // in scope 0 at ui/traits/bug-7183-generics.rs:34:16: 34:40
    let mut _71: &std::string::String;   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let _72: std::string::String;        // in scope 0 at ui/traits/bug-7183-generics.rs:34:42: 34:78
    let mut _73: &str;                   // in scope 0 at ui/traits/bug-7183-generics.rs:34:42: 34:78
    let _74: &str;                       // in scope 0 at ui/traits/bug-7183-generics.rs:34:42: 34:66
    let _75: &std::string::String;       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
    let _76: &std::string::String;       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
    let mut _77: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    let mut _78: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
    let mut _79: &std::string::String;   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
    let mut _80: &std::string::String;   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
    let _82: !;                          // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
    let mut _83: core::panicking::AssertKind; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
    let mut _84: &std::string::String;   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let _85: &std::string::String;       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let mut _86: &std::string::String;   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let _87: &std::string::String;       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let mut _88: std::option::Option<std::fmt::Arguments<'_>>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
    let mut _89: (&std::string::String, &std::string::String); // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _90: &std::string::String;   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let _91: std::string::String;        // in scope 0 at ui/traits/bug-7183-generics.rs:35:16: 35:28
    let mut _92: &std::option::Option<isize>; // in scope 0 at ui/traits/bug-7183-generics.rs:35:16: 35:28
    let mut _93: &std::string::String;   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let _94: std::string::String;        // in scope 0 at ui/traits/bug-7183-generics.rs:35:30: 35:62
    let mut _95: &str;                   // in scope 0 at ui/traits/bug-7183-generics.rs:35:30: 35:62
    let _96: &str;                       // in scope 0 at ui/traits/bug-7183-generics.rs:35:30: 35:50
    let _97: &std::string::String;       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
    let _98: &std::string::String;       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
    let mut _99: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    let mut _100: bool;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
    let mut _101: &std::string::String;  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
    let mut _102: &std::string::String;  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
    let _104: !;                         // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
    let mut _105: core::panicking::AssertKind; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
    let mut _106: &std::string::String;  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let _107: &std::string::String;      // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let mut _108: &std::string::String;  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let _109: &std::string::String;      // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let mut _110: std::option::Option<std::fmt::Arguments<'_>>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
    let mut _111: &std::option::Option<isize>; // in scope 0 at ui/traits/bug-7183-generics.rs:35:16: 35:28
    let mut _112: &std::option::Option<std::option::Option<isize>>; // in scope 0 at ui/traits/bug-7183-generics.rs:34:16: 34:40
    let mut _113: &std::option::Option<isize>; // in scope 0 at ui/traits/bug-7183-generics.rs:32:16: 32:34
    let mut _114: &std::option::Option<std::option::Option<isize>>; // in scope 0 at ui/traits/bug-7183-generics.rs:30:16: 30:34
    let mut _115: &isize;                // in scope 0 at ui/traits/bug-7183-generics.rs:29:16: 29:22
    scope 1 {
        debug left_val => _9;            // in scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        debug right_val => _10;          // in scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        let _15: core::panicking::AssertKind; // in scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
        scope 2 {
            debug kind => _15;           // in scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
        }
    }
    scope 3 {
        debug left_val => _31;           // in scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        debug right_val => _32;          // in scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        let _37: core::panicking::AssertKind; // in scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
        scope 4 {
            debug kind => _37;           // in scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
        }
    }
    scope 5 {
        debug left_val => _53;           // in scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        debug right_val => _54;          // in scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        let _59: core::panicking::AssertKind; // in scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
        scope 6 {
            debug kind => _59;           // in scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
        }
    }
    scope 7 {
        debug left_val => _75;           // in scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        debug right_val => _76;          // in scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        let _81: core::panicking::AssertKind; // in scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
        scope 8 {
            debug kind => _81;           // in scope 8 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
        }
    }
    scope 9 {
        debug left_val => _97;           // in scope 9 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        debug right_val => _98;          // in scope 9 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        let _103: core::panicking::AssertKind; // in scope 9 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
        scope 10 {
            debug kind => _103;          // in scope 10 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
        }
    }

    bb0: {
        _115 = const _;                  // scope 0 at ui/traits/bug-7183-generics.rs:29:16: 29:22
                                         // mir::Constant
                                         // + span: ui/traits/bug-7183-generics.rs:29:16: 29:22
                                         // + literal: Const { ty: &isize, val: Unevaluated(main, [], Some(promoted[4])) }
        _4 = _115;                       // scope 0 at ui/traits/bug-7183-generics.rs:29:16: 29:22
        _3 = <isize as Speak>::hi(move _4) -> bb1; // scope 0 at ui/traits/bug-7183-generics.rs:29:16: 29:22
                                         // mir::Constant
                                         // + span: ui/traits/bug-7183-generics.rs:29:18: 29:20
                                         // + literal: Const { ty: for<'a> fn(&'a isize) -> String {<isize as Speak>::hi}, val: Value(<ZST>) }
    }

    bb1: {
        _2 = &_3;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _8 = const "hello: 3";           // scope 0 at ui/traits/bug-7183-generics.rs:29:24: 29:34
                                         // mir::Constant
                                         // + span: ui/traits/bug-7183-generics.rs:29:24: 29:34
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _7 = _8;                         // scope 0 at ui/traits/bug-7183-generics.rs:29:24: 29:46
        _6 = <str as ToString>::to_string(move _7) -> [return: bb2, unwind: bb45]; // scope 0 at ui/traits/bug-7183-generics.rs:29:24: 29:46
                                         // mir::Constant
                                         // + span: ui/traits/bug-7183-generics.rs:29:35: 29:44
                                         // + literal: Const { ty: for<'a> fn(&'a str) -> String {<str as ToString>::to_string}, val: Value(<ZST>) }
    }

    bb2: {
        _5 = &_6;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _1 = (move _2, move _5);         // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _9 = (_1.0: &std::string::String); // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _10 = (_1.1: &std::string::String); // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _13 = _9;                        // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
        _14 = _10;                       // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
        _12 = <String as PartialEq>::eq(move _13, move _14) -> [return: bb3, unwind: bb44]; // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a String, &'b String) -> bool {<String as PartialEq>::eq}, val: Value(<ZST>) }
    }

    bb3: {
        _11 = Not(move _12);             // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
        switchInt(move _11) -> [0: bb5, otherwise: bb4]; // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    }

    bb4: {
        _15 = const core::panicking::AssertKind::Eq; // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _17 = const core::panicking::AssertKind::Eq; // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _19 = _9;                        // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _18 = _19;                       // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _21 = _10;                       // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _20 = _21;                       // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _22 = Option::<Arguments<'_>>::None; // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
        _16 = core::panicking::assert_failed::<String, String>(move _17, move _18, move _20, move _22) -> bb44; // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:53
                                         // + literal: Const { ty: for<'a, 'b, 'c> fn(core::panicking::AssertKind, &'a String, &'b String, Option<Arguments<'c>>) -> ! {core::panicking::assert_failed::<String, String>}, val: Value(<ZST>) }
    }

    bb5: {
        drop(_6) -> [return: bb6, unwind: bb45]; // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:48:9: 48:10
    }

    bb6: {
        drop(_3) -> bb7;                 // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:48:9: 48:10
    }

    bb7: {
        _114 = const _;                  // scope 0 at ui/traits/bug-7183-generics.rs:30:16: 30:34
                                         // mir::Constant
                                         // + span: ui/traits/bug-7183-generics.rs:30:16: 30:34
                                         // + literal: Const { ty: &Option<Option<isize>>, val: Unevaluated(main, [], Some(promoted[3])) }
        _26 = _114;                      // scope 0 at ui/traits/bug-7183-generics.rs:30:16: 30:34
        _25 = <Option<Option<isize>> as Speak>::hi(move _26) -> bb8; // scope 0 at ui/traits/bug-7183-generics.rs:30:16: 30:34
                                         // mir::Constant
                                         // + span: ui/traits/bug-7183-generics.rs:30:30: 30:32
                                         // + literal: Const { ty: for<'a> fn(&'a Option<Option<isize>>) -> String {<Option<Option<isize>> as Speak>::hi}, val: Value(<ZST>) }
    }

    bb8: {
        _24 = &_25;                      // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _30 = const "something!something!hello: 3"; // scope 0 at ui/traits/bug-7183-generics.rs:31:16: 31:46
                                         // mir::Constant
                                         // + span: ui/traits/bug-7183-generics.rs:31:16: 31:46
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _29 = _30;                       // scope 0 at ui/traits/bug-7183-generics.rs:31:16: 31:58
        _28 = <str as ToString>::to_string(move _29) -> [return: bb9, unwind: bb43]; // scope 0 at ui/traits/bug-7183-generics.rs:31:16: 31:58
                                         // mir::Constant
                                         // + span: ui/traits/bug-7183-generics.rs:31:47: 31:56
                                         // + literal: Const { ty: for<'a> fn(&'a str) -> String {<str as ToString>::to_string}, val: Value(<ZST>) }
    }

    bb9: {
        _27 = &_28;                      // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _23 = (move _24, move _27);      // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _31 = (_23.0: &std::string::String); // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _32 = (_23.1: &std::string::String); // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _35 = _31;                       // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
        _36 = _32;                       // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
        _34 = <String as PartialEq>::eq(move _35, move _36) -> [return: bb10, unwind: bb42]; // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a String, &'b String) -> bool {<String as PartialEq>::eq}, val: Value(<ZST>) }
    }

    bb10: {
        _33 = Not(move _34);             // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
        switchInt(move _33) -> [0: bb12, otherwise: bb11]; // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    }

    bb11: {
        _37 = const core::panicking::AssertKind::Eq; // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _39 = const core::panicking::AssertKind::Eq; // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _41 = _31;                       // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _40 = _41;                       // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _43 = _32;                       // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _42 = _43;                       // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _44 = Option::<Arguments<'_>>::None; // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
        _38 = core::panicking::assert_failed::<String, String>(move _39, move _40, move _42, move _44) -> bb42; // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:53
                                         // + literal: Const { ty: for<'a, 'b, 'c> fn(core::panicking::AssertKind, &'a String, &'b String, Option<Arguments<'c>>) -> ! {core::panicking::assert_failed::<String, String>}, val: Value(<ZST>) }
    }

    bb12: {
        drop(_28) -> [return: bb13, unwind: bb43]; // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:48:9: 48:10
    }

    bb13: {
        drop(_25) -> bb14;               // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:48:9: 48:10
    }

    bb14: {
        _113 = const _;                  // scope 0 at ui/traits/bug-7183-generics.rs:32:16: 32:34
                                         // mir::Constant
                                         // + span: ui/traits/bug-7183-generics.rs:32:16: 32:34
                                         // + literal: Const { ty: &Option<isize>, val: Unevaluated(main, [], Some(promoted[2])) }
        _48 = _113;                      // scope 0 at ui/traits/bug-7183-generics.rs:32:16: 32:34
        _47 = <Option<isize> as Speak>::hi(move _48) -> bb15; // scope 0 at ui/traits/bug-7183-generics.rs:32:16: 32:34
                                         // mir::Constant
                                         // + span: ui/traits/bug-7183-generics.rs:32:30: 32:32
                                         // + literal: Const { ty: for<'a> fn(&'a Option<isize>) -> String {<Option<isize> as Speak>::hi}, val: Value(<ZST>) }
    }

    bb15: {
        _46 = &_47;                      // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _52 = const "hello - none";      // scope 0 at ui/traits/bug-7183-generics.rs:32:36: 32:50
                                         // mir::Constant
                                         // + span: ui/traits/bug-7183-generics.rs:32:36: 32:50
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _51 = _52;                       // scope 0 at ui/traits/bug-7183-generics.rs:32:36: 32:62
        _50 = <str as ToString>::to_string(move _51) -> [return: bb16, unwind: bb41]; // scope 0 at ui/traits/bug-7183-generics.rs:32:36: 32:62
                                         // mir::Constant
                                         // + span: ui/traits/bug-7183-generics.rs:32:51: 32:60
                                         // + literal: Const { ty: for<'a> fn(&'a str) -> String {<str as ToString>::to_string}, val: Value(<ZST>) }
    }

    bb16: {
        _49 = &_50;                      // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _45 = (move _46, move _49);      // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _53 = (_45.0: &std::string::String); // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _54 = (_45.1: &std::string::String); // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _57 = _53;                       // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
        _58 = _54;                       // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
        _56 = <String as PartialEq>::eq(move _57, move _58) -> [return: bb17, unwind: bb40]; // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a String, &'b String) -> bool {<String as PartialEq>::eq}, val: Value(<ZST>) }
    }

    bb17: {
        _55 = Not(move _56);             // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
        switchInt(move _55) -> [0: bb19, otherwise: bb18]; // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    }

    bb18: {
        _59 = const core::panicking::AssertKind::Eq; // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _61 = const core::panicking::AssertKind::Eq; // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _63 = _53;                       // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _62 = _63;                       // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _65 = _54;                       // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _64 = _65;                       // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _66 = Option::<Arguments<'_>>::None; // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
        _60 = core::panicking::assert_failed::<String, String>(move _61, move _62, move _64, move _66) -> bb40; // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:53
                                         // + literal: Const { ty: for<'a, 'b, 'c> fn(core::panicking::AssertKind, &'a String, &'b String, Option<Arguments<'c>>) -> ! {core::panicking::assert_failed::<String, String>}, val: Value(<ZST>) }
    }

    bb19: {
        drop(_50) -> [return: bb20, unwind: bb41]; // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:48:9: 48:10
    }

    bb20: {
        drop(_47) -> bb21;               // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:48:9: 48:10
    }

    bb21: {
        _112 = const _;                  // scope 0 at ui/traits/bug-7183-generics.rs:34:16: 34:40
                                         // mir::Constant
                                         // + span: ui/traits/bug-7183-generics.rs:34:16: 34:40
                                         // + literal: Const { ty: &Option<Option<isize>>, val: Unevaluated(main, [], Some(promoted[1])) }
        _70 = _112;                      // scope 0 at ui/traits/bug-7183-generics.rs:34:16: 34:40
        _69 = <Option<Option<isize>> as Speak>::hi(move _70) -> bb22; // scope 0 at ui/traits/bug-7183-generics.rs:34:16: 34:40
                                         // mir::Constant
                                         // + span: ui/traits/bug-7183-generics.rs:34:36: 34:38
                                         // + literal: Const { ty: for<'a> fn(&'a Option<Option<isize>>) -> String {<Option<Option<isize>> as Speak>::hi}, val: Value(<ZST>) }
    }

    bb22: {
        _68 = &_69;                      // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _74 = const "something!hello - none"; // scope 0 at ui/traits/bug-7183-generics.rs:34:42: 34:66
                                         // mir::Constant
                                         // + span: ui/traits/bug-7183-generics.rs:34:42: 34:66
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _73 = _74;                       // scope 0 at ui/traits/bug-7183-generics.rs:34:42: 34:78
        _72 = <str as ToString>::to_string(move _73) -> [return: bb23, unwind: bb39]; // scope 0 at ui/traits/bug-7183-generics.rs:34:42: 34:78
                                         // mir::Constant
                                         // + span: ui/traits/bug-7183-generics.rs:34:67: 34:76
                                         // + literal: Const { ty: for<'a> fn(&'a str) -> String {<str as ToString>::to_string}, val: Value(<ZST>) }
    }

    bb23: {
        _71 = &_72;                      // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _67 = (move _68, move _71);      // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _75 = (_67.0: &std::string::String); // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _76 = (_67.1: &std::string::String); // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _79 = _75;                       // scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
        _80 = _76;                       // scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
        _78 = <String as PartialEq>::eq(move _79, move _80) -> [return: bb24, unwind: bb38]; // scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a String, &'b String) -> bool {<String as PartialEq>::eq}, val: Value(<ZST>) }
    }

    bb24: {
        _77 = Not(move _78);             // scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
        switchInt(move _77) -> [0: bb26, otherwise: bb25]; // scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    }

    bb25: {
        _81 = const core::panicking::AssertKind::Eq; // scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _83 = const core::panicking::AssertKind::Eq; // scope 8 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _85 = _75;                       // scope 8 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _84 = _85;                       // scope 8 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _87 = _76;                       // scope 8 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _86 = _87;                       // scope 8 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _88 = Option::<Arguments<'_>>::None; // scope 8 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
        _82 = core::panicking::assert_failed::<String, String>(move _83, move _84, move _86, move _88) -> bb38; // scope 8 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:53
                                         // + literal: Const { ty: for<'a, 'b, 'c> fn(core::panicking::AssertKind, &'a String, &'b String, Option<Arguments<'c>>) -> ! {core::panicking::assert_failed::<String, String>}, val: Value(<ZST>) }
    }

    bb26: {
        drop(_72) -> [return: bb27, unwind: bb39]; // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:48:9: 48:10
    }

    bb27: {
        drop(_69) -> bb28;               // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:48:9: 48:10
    }

    bb28: {
        _111 = const _;                  // scope 0 at ui/traits/bug-7183-generics.rs:35:16: 35:28
                                         // mir::Constant
                                         // + span: ui/traits/bug-7183-generics.rs:35:16: 35:28
                                         // + literal: Const { ty: &Option<isize>, val: Unevaluated(main, [], Some(promoted[0])) }
        _92 = _111;                      // scope 0 at ui/traits/bug-7183-generics.rs:35:16: 35:28
        _91 = <Option<isize> as Speak>::hi(move _92) -> bb29; // scope 0 at ui/traits/bug-7183-generics.rs:35:16: 35:28
                                         // mir::Constant
                                         // + span: ui/traits/bug-7183-generics.rs:35:24: 35:26
                                         // + literal: Const { ty: for<'a> fn(&'a Option<isize>) -> String {<Option<isize> as Speak>::hi}, val: Value(<ZST>) }
    }

    bb29: {
        _90 = &_91;                      // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _96 = const "something!hello: 3"; // scope 0 at ui/traits/bug-7183-generics.rs:35:30: 35:50
                                         // mir::Constant
                                         // + span: ui/traits/bug-7183-generics.rs:35:30: 35:50
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _95 = _96;                       // scope 0 at ui/traits/bug-7183-generics.rs:35:30: 35:62
        _94 = <str as ToString>::to_string(move _95) -> [return: bb30, unwind: bb37]; // scope 0 at ui/traits/bug-7183-generics.rs:35:30: 35:62
                                         // mir::Constant
                                         // + span: ui/traits/bug-7183-generics.rs:35:51: 35:60
                                         // + literal: Const { ty: for<'a> fn(&'a str) -> String {<str as ToString>::to_string}, val: Value(<ZST>) }
    }

    bb30: {
        _93 = &_94;                      // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _89 = (move _90, move _93);      // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _97 = (_89.0: &std::string::String); // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _98 = (_89.1: &std::string::String); // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _101 = _97;                      // scope 9 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
        _102 = _98;                      // scope 9 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
        _100 = <String as PartialEq>::eq(move _101, move _102) -> [return: bb31, unwind: bb36]; // scope 9 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a String, &'b String) -> bool {<String as PartialEq>::eq}, val: Value(<ZST>) }
    }

    bb31: {
        _99 = Not(move _100);            // scope 9 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
        switchInt(move _99) -> [0: bb33, otherwise: bb32]; // scope 9 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    }

    bb32: {
        _103 = const core::panicking::AssertKind::Eq; // scope 9 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _105 = const core::panicking::AssertKind::Eq; // scope 10 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _107 = _97;                      // scope 10 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _106 = _107;                     // scope 10 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _109 = _98;                      // scope 10 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _108 = _109;                     // scope 10 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _110 = Option::<Arguments<'_>>::None; // scope 10 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
        _104 = core::panicking::assert_failed::<String, String>(move _105, move _106, move _108, move _110) -> bb36; // scope 10 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:53
                                         // + literal: Const { ty: for<'a, 'b, 'c> fn(core::panicking::AssertKind, &'a String, &'b String, Option<Arguments<'c>>) -> ! {core::panicking::assert_failed::<String, String>}, val: Value(<ZST>) }
    }

    bb33: {
        drop(_94) -> [return: bb34, unwind: bb37]; // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:48:9: 48:10
    }

    bb34: {
        drop(_91) -> bb35;               // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:48:9: 48:10
    }

    bb35: {
        return;                          // scope 0 at ui/traits/bug-7183-generics.rs:36:2: 36:2
    }

    bb36 (cleanup): {
        drop(_94) -> bb37;               // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:48:9: 48:10
    }

    bb37 (cleanup): {
        drop(_91) -> bb46;               // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:48:9: 48:10
    }

    bb38 (cleanup): {
        drop(_72) -> bb39;               // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:48:9: 48:10
    }

    bb39 (cleanup): {
        drop(_69) -> bb46;               // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:48:9: 48:10
    }

    bb40 (cleanup): {
        drop(_50) -> bb41;               // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:48:9: 48:10
    }

    bb41 (cleanup): {
        drop(_47) -> bb46;               // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:48:9: 48:10
    }

    bb42 (cleanup): {
        drop(_28) -> bb43;               // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:48:9: 48:10
    }

    bb43 (cleanup): {
        drop(_25) -> bb46;               // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:48:9: 48:10
    }

    bb44 (cleanup): {
        drop(_6) -> bb45;                // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:48:9: 48:10
    }

    bb45 (cleanup): {
        drop(_3) -> bb46;                // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:48:9: 48:10
    }

    bb46 (cleanup): {
        resume;                          // scope 0 at ui/traits/bug-7183-generics.rs:28:1: 36:2
    }
}

promoted[0] in main: &Option<isize> = {
    let mut _0: &std::option::Option<isize>; // return place in scope 0 at ui/traits/bug-7183-generics.rs:35:16: 35:28
    let mut _1: std::option::Option<isize>; // in scope 0 at ui/traits/bug-7183-generics.rs:35:16: 35:23

    bb0: {
        _1 = Option::<isize>::Some(const 3_isize); // scope 0 at ui/traits/bug-7183-generics.rs:35:16: 35:23
        _0 = &_1;                        // scope 0 at ui/traits/bug-7183-generics.rs:35:16: 35:28
        return;                          // scope 0 at ui/traits/bug-7183-generics.rs:35:16: 35:28
    }
}

promoted[1] in main: &Option<Option<isize>> = {
    let mut _0: &std::option::Option<std::option::Option<isize>>; // return place in scope 0 at ui/traits/bug-7183-generics.rs:34:16: 34:40
    let mut _1: std::option::Option<std::option::Option<isize>>; // in scope 0 at ui/traits/bug-7183-generics.rs:34:16: 34:35
    let mut _2: std::option::Option<isize>; // in scope 0 at ui/traits/bug-7183-generics.rs:34:21: 34:34

    bb0: {
        _2 = Option::<isize>::None;      // scope 0 at ui/traits/bug-7183-generics.rs:34:21: 34:34
        _1 = Option::<Option<isize>>::Some(move _2); // scope 0 at ui/traits/bug-7183-generics.rs:34:16: 34:35
        _0 = &_1;                        // scope 0 at ui/traits/bug-7183-generics.rs:34:16: 34:40
        return;                          // scope 0 at ui/traits/bug-7183-generics.rs:34:16: 34:40
    }
}

promoted[2] in main: &Option<isize> = {
    let mut _0: &std::option::Option<isize>; // return place in scope 0 at ui/traits/bug-7183-generics.rs:32:16: 32:34
    let mut _1: std::option::Option<isize>; // in scope 0 at ui/traits/bug-7183-generics.rs:32:16: 32:29

    bb0: {
        _1 = Option::<isize>::None;      // scope 0 at ui/traits/bug-7183-generics.rs:32:16: 32:29
        _0 = &_1;                        // scope 0 at ui/traits/bug-7183-generics.rs:32:16: 32:34
        return;                          // scope 0 at ui/traits/bug-7183-generics.rs:32:16: 32:34
    }
}

promoted[3] in main: &Option<Option<isize>> = {
    let mut _0: &std::option::Option<std::option::Option<isize>>; // return place in scope 0 at ui/traits/bug-7183-generics.rs:30:16: 30:34
    let mut _1: std::option::Option<std::option::Option<isize>>; // in scope 0 at ui/traits/bug-7183-generics.rs:30:16: 30:29
    let mut _2: std::option::Option<isize>; // in scope 0 at ui/traits/bug-7183-generics.rs:30:21: 30:28

    bb0: {
        _2 = Option::<isize>::Some(const 3_isize); // scope 0 at ui/traits/bug-7183-generics.rs:30:21: 30:28
        _1 = Option::<Option<isize>>::Some(move _2); // scope 0 at ui/traits/bug-7183-generics.rs:30:16: 30:29
        _0 = &_1;                        // scope 0 at ui/traits/bug-7183-generics.rs:30:16: 30:34
        return;                          // scope 0 at ui/traits/bug-7183-generics.rs:30:16: 30:34
    }
}

promoted[4] in main: &isize = {
    let mut _0: &isize;                  // return place in scope 0 at ui/traits/bug-7183-generics.rs:29:16: 29:22
    let mut _1: isize;                   // in scope 0 at ui/traits/bug-7183-generics.rs:29:16: 29:17

    bb0: {
        _1 = const 3_isize;              // scope 0 at ui/traits/bug-7183-generics.rs:29:16: 29:17
        _0 = &_1;                        // scope 0 at ui/traits/bug-7183-generics.rs:29:16: 29:22
        return;                          // scope 0 at ui/traits/bug-7183-generics.rs:29:16: 29:22
    }
}
