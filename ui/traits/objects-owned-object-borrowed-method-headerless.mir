// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
fn <impl at ui/traits/objects-owned-object-borrowed-method-headerless.rs:14:1: 14:28>::foo(_1: &BarStruct) -> usize {
    debug self => _1;                    // in scope 0 at ui/traits/objects-owned-object-borrowed-method-headerless.rs:15:12: 15:17
    let mut _0: usize;                   // return place in scope 0 at ui/traits/objects-owned-object-borrowed-method-headerless.rs:15:22: 15:27

    bb0: {
        _0 = ((*_1).0: usize);           // scope 0 at ui/traits/objects-owned-object-borrowed-method-headerless.rs:16:9: 16:15
        return;                          // scope 0 at ui/traits/objects-owned-object-borrowed-method-headerless.rs:17:6: 17:6
    }
}

fn main() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/traits/objects-owned-object-borrowed-method-headerless.rs:20:15: 20:15
    let _1: std::vec::Vec<std::boxed::Box<dyn FooTrait>>; // in scope 0 at ui/traits/objects-owned-object-borrowed-method-headerless.rs:21:9: 21:13
    let mut _2: std::boxed::Box<[std::boxed::Box<dyn FooTrait>]>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
    let mut _3: std::boxed::Box<[std::boxed::Box<dyn FooTrait>; 3]>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
    let mut _4: usize;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
    let mut _5: usize;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
    let mut _6: *mut u8;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
    let mut _7: std::boxed::Box<[std::boxed::Box<dyn FooTrait>; 3]>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
    let mut _8: std::boxed::Box<dyn FooTrait>; // in scope 0 at ui/traits/objects-owned-object-borrowed-method-headerless.rs:22:9: 22:57
    let mut _9: std::boxed::Box<dyn FooTrait>; // in scope 0 at ui/traits/objects-owned-object-borrowed-method-headerless.rs:22:9: 22:57
    let mut _10: std::boxed::Box<dyn FooTrait>; // in scope 0 at ui/traits/objects-owned-object-borrowed-method-headerless.rs:22:9: 22:57
    let mut _11: std::boxed::Box<BarStruct>; // in scope 0 at ui/traits/objects-owned-object-borrowed-method-headerless.rs:22:9: 22:36
    let mut _12: BarStruct;              // in scope 0 at ui/traits/objects-owned-object-borrowed-method-headerless.rs:22:18: 22:35
    let mut _13: std::boxed::Box<dyn FooTrait>; // in scope 0 at ui/traits/objects-owned-object-borrowed-method-headerless.rs:23:9: 23:57
    let mut _14: std::boxed::Box<dyn FooTrait>; // in scope 0 at ui/traits/objects-owned-object-borrowed-method-headerless.rs:23:9: 23:57
    let mut _15: std::boxed::Box<dyn FooTrait>; // in scope 0 at ui/traits/objects-owned-object-borrowed-method-headerless.rs:23:9: 23:57
    let mut _16: std::boxed::Box<BarStruct>; // in scope 0 at ui/traits/objects-owned-object-borrowed-method-headerless.rs:23:9: 23:36
    let mut _17: BarStruct;              // in scope 0 at ui/traits/objects-owned-object-borrowed-method-headerless.rs:23:18: 23:35
    let mut _18: std::boxed::Box<dyn FooTrait>; // in scope 0 at ui/traits/objects-owned-object-borrowed-method-headerless.rs:24:9: 24:57
    let mut _19: std::boxed::Box<dyn FooTrait>; // in scope 0 at ui/traits/objects-owned-object-borrowed-method-headerless.rs:24:9: 24:57
    let mut _20: std::boxed::Box<dyn FooTrait>; // in scope 0 at ui/traits/objects-owned-object-borrowed-method-headerless.rs:24:9: 24:57
    let mut _21: std::boxed::Box<BarStruct>; // in scope 0 at ui/traits/objects-owned-object-borrowed-method-headerless.rs:24:9: 24:36
    let mut _22: BarStruct;              // in scope 0 at ui/traits/objects-owned-object-borrowed-method-headerless.rs:24:18: 24:35
    let mut _23: std::ops::Range<usize>; // in scope 0 at ui/traits/objects-owned-object-borrowed-method-headerless.rs:27:14: 27:27
    let mut _24: std::ops::Range<usize>; // in scope 0 at ui/traits/objects-owned-object-borrowed-method-headerless.rs:27:14: 27:27
    let mut _25: usize;                  // in scope 0 at ui/traits/objects-owned-object-borrowed-method-headerless.rs:27:17: 27:27
    let mut _26: &std::vec::Vec<std::boxed::Box<dyn FooTrait>>; // in scope 0 at ui/traits/objects-owned-object-borrowed-method-headerless.rs:27:17: 27:27
    let mut _28: std::option::Option<usize>; // in scope 0 at ui/traits/objects-owned-object-borrowed-method-headerless.rs:27:14: 27:27
    let mut _29: &mut std::ops::Range<usize>; // in scope 0 at ui/traits/objects-owned-object-borrowed-method-headerless.rs:27:14: 27:27
    let mut _30: &mut std::ops::Range<usize>; // in scope 0 at ui/traits/objects-owned-object-borrowed-method-headerless.rs:27:14: 27:27
    let mut _31: isize;                  // in scope 0 at ui/traits/objects-owned-object-borrowed-method-headerless.rs:27:5: 29:6
    let mut _33: (&usize, &usize);       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _34: &usize;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let mut _35: &usize;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let _36: usize;                      // in scope 0 at ui/traits/objects-owned-object-borrowed-method-headerless.rs:28:23: 28:36
    let mut _37: &dyn FooTrait;          // in scope 0 at ui/traits/objects-owned-object-borrowed-method-headerless.rs:28:23: 28:36
    let _38: &std::boxed::Box<dyn FooTrait>; // in scope 0 at ui/traits/objects-owned-object-borrowed-method-headerless.rs:28:23: 28:30
    let mut _39: &std::vec::Vec<std::boxed::Box<dyn FooTrait>>; // in scope 0 at ui/traits/objects-owned-object-borrowed-method-headerless.rs:28:23: 28:27
    let mut _40: usize;                  // in scope 0 at ui/traits/objects-owned-object-borrowed-method-headerless.rs:28:28: 28:29
    let mut _43: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    let mut _44: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
    let mut _45: usize;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
    let mut _46: usize;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
    let _48: !;                          // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
    let mut _49: core::panicking::AssertKind; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
    let mut _50: &usize;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let _51: &usize;                     // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let mut _52: &usize;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let _53: &usize;                     // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let mut _54: std::option::Option<std::fmt::Arguments<'_>>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
    let mut _55: std::boxed::Box<dyn FooTrait>; // in scope 0 at ui/traits/objects-owned-object-borrowed-method-headerless.rs:28:23: 28:30
    let mut _56: ();                     // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:46: 52:47
    let mut _57: ();                     // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:46: 52:47
    let mut _58: ();                     // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:46: 52:47
    let mut _59: *const [std::boxed::Box<dyn FooTrait>; 3]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
    let mut _60: *const dyn FooTrait;    // in scope 0 at ui/traits/objects-owned-object-borrowed-method-headerless.rs:28:23: 28:30
    scope 1 {
        debug foos => _1;                // in scope 1 at ui/traits/objects-owned-object-borrowed-method-headerless.rs:21:9: 21:13
        let mut _27: std::ops::Range<usize>; // in scope 1 at ui/traits/objects-owned-object-borrowed-method-headerless.rs:27:14: 27:27
        scope 3 {
            debug iter => _27;           // in scope 3 at ui/traits/objects-owned-object-borrowed-method-headerless.rs:27:14: 27:27
            let _32: usize;              // in scope 3 at ui/traits/objects-owned-object-borrowed-method-headerless.rs:27:9: 27:10
            scope 4 {
                debug i => _32;          // in scope 4 at ui/traits/objects-owned-object-borrowed-method-headerless.rs:27:9: 27:10
                let _41: &usize;         // in scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
                let _42: &usize;         // in scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
                scope 5 {
                    debug left_val => _41; // in scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
                    debug right_val => _42; // in scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
                    let _47: core::panicking::AssertKind; // in scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                    scope 6 {
                        debug kind => _47; // in scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                    }
                }
            }
        }
    }
    scope 2 {
    }

    bb0: {
        _4 = const 48_usize;             // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
        _5 = const 8_usize;              // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
        _6 = alloc::alloc::exchange_malloc(move _4, move _5) -> bb1; // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
                                         // + literal: Const { ty: unsafe fn(usize, usize) -> *mut u8 {alloc::alloc::exchange_malloc}, val: Value(<ZST>) }
    }

    bb1: {
        _7 = ShallowInitBox(move _6, [std::boxed::Box<dyn FooTrait>; 3]); // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
        _12 = const BarStruct {{ x: 0_usize }}; // scope 0 at ui/traits/objects-owned-object-borrowed-method-headerless.rs:22:18: 22:35
                                         // mir::Constant
                                         // + span: ui/traits/objects-owned-object-borrowed-method-headerless.rs:22:18: 22:35
                                         // + literal: Const { ty: BarStruct, val: Value(Scalar(0x0000000000000000)) }
        _11 = Box::<BarStruct>::new(move _12) -> [return: bb2, unwind: bb24]; // scope 0 at ui/traits/objects-owned-object-borrowed-method-headerless.rs:22:9: 22:36
                                         // mir::Constant
                                         // + span: ui/traits/objects-owned-object-borrowed-method-headerless.rs:22:9: 22:17
                                         // + user_ty: UserType(2)
                                         // + literal: Const { ty: fn(BarStruct) -> Box<BarStruct> {Box::<BarStruct>::new}, val: Value(<ZST>) }
    }

    bb2: {
        _10 = move _11 as std::boxed::Box<dyn FooTrait> (Pointer(Unsize)); // scope 0 at ui/traits/objects-owned-object-borrowed-method-headerless.rs:22:9: 22:36
        _9 = move _10;                   // scope 0 at ui/traits/objects-owned-object-borrowed-method-headerless.rs:22:9: 22:57
        _8 = move _9 as std::boxed::Box<dyn FooTrait> (Pointer(Unsize)); // scope 0 at ui/traits/objects-owned-object-borrowed-method-headerless.rs:22:9: 22:57
        _17 = const BarStruct {{ x: 1_usize }}; // scope 0 at ui/traits/objects-owned-object-borrowed-method-headerless.rs:23:18: 23:35
                                         // mir::Constant
                                         // + span: ui/traits/objects-owned-object-borrowed-method-headerless.rs:23:18: 23:35
                                         // + literal: Const { ty: BarStruct, val: Value(Scalar(0x0000000000000001)) }
        _16 = Box::<BarStruct>::new(move _17) -> [return: bb3, unwind: bb20]; // scope 0 at ui/traits/objects-owned-object-borrowed-method-headerless.rs:23:9: 23:36
                                         // mir::Constant
                                         // + span: ui/traits/objects-owned-object-borrowed-method-headerless.rs:23:9: 23:17
                                         // + user_ty: UserType(4)
                                         // + literal: Const { ty: fn(BarStruct) -> Box<BarStruct> {Box::<BarStruct>::new}, val: Value(<ZST>) }
    }

    bb3: {
        _15 = move _16 as std::boxed::Box<dyn FooTrait> (Pointer(Unsize)); // scope 0 at ui/traits/objects-owned-object-borrowed-method-headerless.rs:23:9: 23:36
        _14 = move _15;                  // scope 0 at ui/traits/objects-owned-object-borrowed-method-headerless.rs:23:9: 23:57
        _13 = move _14 as std::boxed::Box<dyn FooTrait> (Pointer(Unsize)); // scope 0 at ui/traits/objects-owned-object-borrowed-method-headerless.rs:23:9: 23:57
        _22 = const BarStruct {{ x: 2_usize }}; // scope 0 at ui/traits/objects-owned-object-borrowed-method-headerless.rs:24:18: 24:35
                                         // mir::Constant
                                         // + span: ui/traits/objects-owned-object-borrowed-method-headerless.rs:24:18: 24:35
                                         // + literal: Const { ty: BarStruct, val: Value(Scalar(0x0000000000000002)) }
        _21 = Box::<BarStruct>::new(move _22) -> [return: bb4, unwind: bb18]; // scope 0 at ui/traits/objects-owned-object-borrowed-method-headerless.rs:24:9: 24:36
                                         // mir::Constant
                                         // + span: ui/traits/objects-owned-object-borrowed-method-headerless.rs:24:9: 24:17
                                         // + user_ty: UserType(6)
                                         // + literal: Const { ty: fn(BarStruct) -> Box<BarStruct> {Box::<BarStruct>::new}, val: Value(<ZST>) }
    }

    bb4: {
        _20 = move _21 as std::boxed::Box<dyn FooTrait> (Pointer(Unsize)); // scope 0 at ui/traits/objects-owned-object-borrowed-method-headerless.rs:24:9: 24:36
        _19 = move _20;                  // scope 0 at ui/traits/objects-owned-object-borrowed-method-headerless.rs:24:9: 24:57
        _18 = move _19 as std::boxed::Box<dyn FooTrait> (Pointer(Unsize)); // scope 0 at ui/traits/objects-owned-object-borrowed-method-headerless.rs:24:9: 24:57
        _59 = (((_7.0: std::ptr::Unique<[std::boxed::Box<dyn FooTrait>; 3]>).0: std::ptr::NonNull<[std::boxed::Box<dyn FooTrait>; 3]>).0: *const [std::boxed::Box<dyn FooTrait>; 3]); // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:37: 52:46
        (*_59) = [move _8, move _13, move _18]; // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:37: 52:46
        _3 = move _7;                    // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
        _2 = move _3 as std::boxed::Box<[std::boxed::Box<dyn FooTrait>]> (Pointer(Unsize)); // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:13: 52:47
        _1 = slice::<impl [Box<dyn FooTrait>]>::into_vec::<std::alloc::Global>(move _2) -> bb5; // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:50:36: 53:10
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:50:36: 50:51
                                         // + user_ty: UserType(1)
                                         // + literal: Const { ty: fn(Box<[Box<dyn FooTrait>]>) -> Vec<Box<dyn FooTrait>> {slice::<impl [Box<dyn FooTrait>]>::into_vec::<std::alloc::Global>}, val: Value(<ZST>) }
    }

    bb5: {
        _26 = &_1;                       // scope 1 at ui/traits/objects-owned-object-borrowed-method-headerless.rs:27:17: 27:27
        _25 = Vec::<Box<dyn FooTrait>>::len(move _26) -> [return: bb6, unwind: bb17]; // scope 1 at ui/traits/objects-owned-object-borrowed-method-headerless.rs:27:17: 27:27
                                         // mir::Constant
                                         // + span: ui/traits/objects-owned-object-borrowed-method-headerless.rs:27:22: 27:25
                                         // + literal: Const { ty: for<'a> fn(&'a Vec<Box<dyn FooTrait>>) -> usize {Vec::<Box<dyn FooTrait>>::len}, val: Value(<ZST>) }
    }

    bb6: {
        _24 = std::ops::Range::<usize> { start: const 0_usize, end: move _25 }; // scope 1 at ui/traits/objects-owned-object-borrowed-method-headerless.rs:27:14: 27:27
        _23 = <std::ops::Range<usize> as IntoIterator>::into_iter(move _24) -> [return: bb7, unwind: bb17]; // scope 1 at ui/traits/objects-owned-object-borrowed-method-headerless.rs:27:14: 27:27
                                         // mir::Constant
                                         // + span: ui/traits/objects-owned-object-borrowed-method-headerless.rs:27:14: 27:27
                                         // + literal: Const { ty: fn(std::ops::Range<usize>) -> <std::ops::Range<usize> as IntoIterator>::IntoIter {<std::ops::Range<usize> as IntoIterator>::into_iter}, val: Value(<ZST>) }
    }

    bb7: {
        _27 = move _23;                  // scope 1 at ui/traits/objects-owned-object-borrowed-method-headerless.rs:27:14: 27:27
        goto -> bb8;                     // scope 3 at ui/traits/objects-owned-object-borrowed-method-headerless.rs:27:5: 29:6
    }

    bb8: {
        _30 = &mut _27;                  // scope 3 at ui/traits/objects-owned-object-borrowed-method-headerless.rs:27:14: 27:27
        _29 = &mut (*_30);               // scope 3 at ui/traits/objects-owned-object-borrowed-method-headerless.rs:27:14: 27:27
        _28 = <std::ops::Range<usize> as Iterator>::next(move _29) -> [return: bb9, unwind: bb17]; // scope 3 at ui/traits/objects-owned-object-borrowed-method-headerless.rs:27:14: 27:27
                                         // mir::Constant
                                         // + span: ui/traits/objects-owned-object-borrowed-method-headerless.rs:27:14: 27:27
                                         // + literal: Const { ty: for<'a> fn(&'a mut std::ops::Range<usize>) -> Option<<std::ops::Range<usize> as Iterator>::Item> {<std::ops::Range<usize> as Iterator>::next}, val: Value(<ZST>) }
    }

    bb9: {
        _31 = discriminant(_28);         // scope 3 at ui/traits/objects-owned-object-borrowed-method-headerless.rs:27:14: 27:27
        switchInt(move _31) -> [0: bb12, 1: bb10, otherwise: bb11]; // scope 3 at ui/traits/objects-owned-object-borrowed-method-headerless.rs:27:14: 27:27
    }

    bb10: {
        _32 = ((_28 as Some).0: usize);  // scope 3 at ui/traits/objects-owned-object-borrowed-method-headerless.rs:27:9: 27:10
        _34 = &_32;                      // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _39 = &_1;                       // scope 4 at ui/traits/objects-owned-object-borrowed-method-headerless.rs:28:23: 28:27
        _40 = _32;                       // scope 4 at ui/traits/objects-owned-object-borrowed-method-headerless.rs:28:28: 28:29
        _38 = <Vec<Box<dyn FooTrait>> as Index<usize>>::index(move _39, move _40) -> [return: bb13, unwind: bb17]; // scope 4 at ui/traits/objects-owned-object-borrowed-method-headerless.rs:28:23: 28:30
                                         // mir::Constant
                                         // + span: ui/traits/objects-owned-object-borrowed-method-headerless.rs:28:23: 28:30
                                         // + literal: Const { ty: for<'a> fn(&'a Vec<Box<dyn FooTrait>>, usize) -> &'a <Vec<Box<dyn FooTrait>> as Index<usize>>::Output {<Vec<Box<dyn FooTrait>> as Index<usize>>::index}, val: Value(<ZST>) }
    }

    bb11: {
        unreachable;                     // scope 3 at ui/traits/objects-owned-object-borrowed-method-headerless.rs:27:14: 27:27
    }

    bb12: {
        drop(_1) -> bb16;                // scope 0 at ui/traits/objects-owned-object-borrowed-method-headerless.rs:30:1: 30:2
    }

    bb13: {
        _55 = deref_copy (*_38);         // scope 4 at ui/traits/objects-owned-object-borrowed-method-headerless.rs:28:23: 28:36
        _60 = (((_55.0: std::ptr::Unique<dyn FooTrait>).0: std::ptr::NonNull<dyn FooTrait>).0: *const dyn FooTrait); // scope 4 at ui/traits/objects-owned-object-borrowed-method-headerless.rs:28:23: 28:36
        _37 = &(*_60);                   // scope 4 at ui/traits/objects-owned-object-borrowed-method-headerless.rs:28:23: 28:36
        _36 = <dyn FooTrait as FooTrait>::foo(move _37) -> [return: bb14, unwind: bb17]; // scope 4 at ui/traits/objects-owned-object-borrowed-method-headerless.rs:28:23: 28:36
                                         // mir::Constant
                                         // + span: ui/traits/objects-owned-object-borrowed-method-headerless.rs:28:31: 28:34
                                         // + literal: Const { ty: for<'a> fn(&'a dyn FooTrait) -> usize {<dyn FooTrait as FooTrait>::foo}, val: Value(<ZST>) }
    }

    bb14: {
        _35 = &_36;                      // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _33 = (move _34, move _35);      // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _41 = (_33.0: &usize);           // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _42 = (_33.1: &usize);           // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _45 = (*_41);                    // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
        _46 = (*_42);                    // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
        _44 = Eq(move _45, move _46);    // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
        _43 = Not(move _44);             // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
        switchInt(move _43) -> [0: bb8, otherwise: bb15]; // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    }

    bb15: {
        _47 = const core::panicking::AssertKind::Eq; // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _49 = const core::panicking::AssertKind::Eq; // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _51 = _41;                       // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _50 = _51;                       // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _53 = _42;                       // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _52 = _53;                       // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _54 = Option::<Arguments<'_>>::None; // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
        _48 = core::panicking::assert_failed::<usize, usize>(move _49, move _50, move _52, move _54) -> bb17; // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:53
                                         // + literal: Const { ty: for<'a, 'b, 'c> fn(core::panicking::AssertKind, &'a usize, &'b usize, Option<Arguments<'c>>) -> ! {core::panicking::assert_failed::<usize, usize>}, val: Value(<ZST>) }
    }

    bb16: {
        return;                          // scope 0 at ui/traits/objects-owned-object-borrowed-method-headerless.rs:30:2: 30:2
    }

    bb17 (cleanup): {
        drop(_1) -> bb21;                // scope 0 at ui/traits/objects-owned-object-borrowed-method-headerless.rs:30:1: 30:2
    }

    bb18 (cleanup): {
        drop(_13) -> bb19;               // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:45: 52:46
    }

    bb19 (cleanup): {
        drop(_8) -> bb22;                // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:45: 52:46
    }

    bb20 (cleanup): {
        drop(_8) -> bb23;                // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:45: 52:46
    }

    bb21 (cleanup): {
        resume;                          // scope 0 at ui/traits/objects-owned-object-borrowed-method-headerless.rs:20:1: 30:2
    }

    bb22 (cleanup): {
        _56 = alloc::alloc::box_free::<[Box<dyn FooTrait>; 3], std::alloc::Global>(move (_7.0: std::ptr::Unique<[std::boxed::Box<dyn FooTrait>; 3]>), move (_7.1: std::alloc::Global)) -> bb21; // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:46: 52:47
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:46: 52:47
                                         // + literal: Const { ty: unsafe fn(Unique<[Box<dyn FooTrait>; 3]>, std::alloc::Global) {alloc::alloc::box_free::<[Box<dyn FooTrait>; 3], std::alloc::Global>}, val: Value(<ZST>) }
    }

    bb23 (cleanup): {
        _57 = alloc::alloc::box_free::<[Box<dyn FooTrait>; 3], std::alloc::Global>(move (_7.0: std::ptr::Unique<[std::boxed::Box<dyn FooTrait>; 3]>), move (_7.1: std::alloc::Global)) -> bb21; // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:46: 52:47
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:46: 52:47
                                         // + literal: Const { ty: unsafe fn(Unique<[Box<dyn FooTrait>; 3]>, std::alloc::Global) {alloc::alloc::box_free::<[Box<dyn FooTrait>; 3], std::alloc::Global>}, val: Value(<ZST>) }
    }

    bb24 (cleanup): {
        _58 = alloc::alloc::box_free::<[Box<dyn FooTrait>; 3], std::alloc::Global>(move (_7.0: std::ptr::Unique<[std::boxed::Box<dyn FooTrait>; 3]>), move (_7.1: std::alloc::Global)) -> bb21; // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:46: 52:47
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:52:46: 52:47
                                         // + literal: Const { ty: unsafe fn(Unique<[Box<dyn FooTrait>; 3]>, std::alloc::Global) {alloc::alloc::box_free::<[Box<dyn FooTrait>; 3], std::alloc::Global>}, val: Value(<ZST>) }
    }
}
