// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
fn main() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/traits/pointee-deduction.rs:19:11: 19:11
    let mut _1: std::alloc::Layout;      // in scope 0 at ui/traits/pointee-deduction.rs:21:13: 21:42
    scope 1 {
        scope 2 {
        }
    }

    bb0: {
        _1 = Layout::new::<Wrapper2<()>>() -> bb1; // scope 1 at ui/traits/pointee-deduction.rs:21:13: 21:42
                                         // mir::Constant
                                         // + span: ui/traits/pointee-deduction.rs:21:13: 21:40
                                         // + literal: Const { ty: fn() -> Layout {Layout::new::<Wrapper2<()>>}, val: Value(<ZST>) }
    }

    bb1: {
        return;                          // scope 0 at ui/traits/pointee-deduction.rs:22:2: 22:2
    }
}

fn Wrapper1(_1: <T as Foo>::Bar) -> Wrapper1<T> {
    let mut _0: Wrapper1<T>;             // return place in scope 0 at ui/traits/pointee-deduction.rs:16:1: 16:24

    bb0: {
        _0 = Wrapper1::<T>(move _1);     // scope 0 at ui/traits/pointee-deduction.rs:16:1: 16:24
        return;                          // scope 0 at ui/traits/pointee-deduction.rs:16:1: 16:24
    }
}

// MIR FOR CTFE
fn Wrapper1(_1: <T as Foo>::Bar) -> Wrapper1<T> {
    let mut _0: Wrapper1<T>;             // return place in scope 0 at ui/traits/pointee-deduction.rs:16:1: 16:24

    bb0: {
        _0 = Wrapper1::<T>(move _1);     // scope 0 at ui/traits/pointee-deduction.rs:16:1: 16:24
        return;                          // scope 0 at ui/traits/pointee-deduction.rs:16:1: 16:24
    }
}

fn Wrapper2(_1: ()) -> Wrapper2<T> {
    let mut _0: Wrapper2<T>;             // return place in scope 0 at ui/traits/pointee-deduction.rs:17:1: 17:24

    bb0: {
        _0 = Wrapper2::<T>(move _1);     // scope 0 at ui/traits/pointee-deduction.rs:17:1: 17:24
        return;                          // scope 0 at ui/traits/pointee-deduction.rs:17:1: 17:24
    }
}

// MIR FOR CTFE
fn Wrapper2(_1: ()) -> Wrapper2<T> {
    let mut _0: Wrapper2<T>;             // return place in scope 0 at ui/traits/pointee-deduction.rs:17:1: 17:24

    bb0: {
        _0 = Wrapper2::<T>(move _1);     // scope 0 at ui/traits/pointee-deduction.rs:17:1: 17:24
        return;                          // scope 0 at ui/traits/pointee-deduction.rs:17:1: 17:24
    }
}
