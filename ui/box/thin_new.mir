// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
fn main() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/box/thin_new.rs:7:11: 7:11
    let _1: std::boxed::ThinBox<dyn std::error::Error>; // in scope 0 at ui/box/thin_new.rs:8:9: 8:19
    let mut _2: Foo;                     // in scope 0 at ui/box/thin_new.rs:8:62: 8:65
    let mut _3: (&usize, &usize);        // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _4: &usize;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let mut _5: &usize;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let _6: usize;                       // in scope 0 at ui/box/thin_new.rs:9:46: 9:75
    let mut _7: &std::boxed::ThinBox<dyn std::error::Error>; // in scope 0 at ui/box/thin_new.rs:9:63: 9:74
    let _8: &std::boxed::ThinBox<dyn std::error::Error>; // in scope 0 at ui/box/thin_new.rs:9:63: 9:74
    let mut _11: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    let mut _12: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
    let mut _13: usize;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
    let mut _14: usize;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
    let _16: !;                          // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
    let mut _17: core::panicking::AssertKind; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
    let mut _18: &usize;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let _19: &usize;                     // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let mut _20: &usize;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let _21: &usize;                     // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let mut _22: std::option::Option<std::fmt::Arguments<'_>>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
    let _23: ();                         // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:62
    let mut _24: std::fmt::Arguments<'_>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _25: &[&str];                // in scope 0 at ui/box/thin_new.rs:10:14: 10:20
    let mut _26: &[&str; 2];             // in scope 0 at ui/box/thin_new.rs:10:14: 10:20
    let _27: &[&str; 2];                 // in scope 0 at ui/box/thin_new.rs:10:14: 10:20
    let mut _28: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _29: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let _30: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let _31: [core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _32: core::fmt::ArgumentV1<'_>; // in scope 0 at ui/box/thin_new.rs:10:22: 10:32
    let mut _33: &std::boxed::ThinBox<dyn std::error::Error>; // in scope 0 at ui/box/thin_new.rs:10:22: 10:32
    let _34: &std::boxed::ThinBox<dyn std::error::Error>; // in scope 0 at ui/box/thin_new.rs:10:22: 10:32
    let mut _36: (&usize, &usize);       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _37: &usize;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let mut _38: &usize;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let _39: usize;                      // in scope 0 at ui/box/thin_new.rs:13:46: 13:69
    let mut _40: &std::boxed::ThinBox<i32>; // in scope 0 at ui/box/thin_new.rs:13:63: 13:68
    let _41: &std::boxed::ThinBox<i32>;  // in scope 0 at ui/box/thin_new.rs:13:63: 13:68
    let mut _44: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    let mut _45: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
    let mut _46: usize;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
    let mut _47: usize;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
    let _49: !;                          // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
    let mut _50: core::panicking::AssertKind; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
    let mut _51: &usize;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let _52: &usize;                     // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let mut _53: &usize;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let _54: &usize;                     // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let mut _55: std::option::Option<std::fmt::Arguments<'_>>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
    let _56: ();                         // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:62
    let mut _57: std::fmt::Arguments<'_>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _58: &[&str];                // in scope 0 at ui/box/thin_new.rs:14:14: 14:20
    let mut _59: &[&str; 2];             // in scope 0 at ui/box/thin_new.rs:14:14: 14:20
    let _60: &[&str; 2];                 // in scope 0 at ui/box/thin_new.rs:14:14: 14:20
    let mut _61: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _62: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let _63: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let _64: [core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _65: core::fmt::ArgumentV1<'_>; // in scope 0 at ui/box/thin_new.rs:14:22: 14:26
    let mut _66: &std::boxed::ThinBox<i32>; // in scope 0 at ui/box/thin_new.rs:14:22: 14:26
    let _67: &std::boxed::ThinBox<i32>;  // in scope 0 at ui/box/thin_new.rs:14:22: 14:26
    let mut _69: [i32; 4];               // in scope 0 at ui/box/thin_new.rs:16:51: 16:63
    let mut _70: (&usize, &usize);       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _71: &usize;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let mut _72: &usize;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let _73: usize;                      // in scope 0 at ui/box/thin_new.rs:17:46: 17:75
    let mut _74: &std::boxed::ThinBox<[i32]>; // in scope 0 at ui/box/thin_new.rs:17:63: 17:74
    let _75: &std::boxed::ThinBox<[i32]>; // in scope 0 at ui/box/thin_new.rs:17:63: 17:74
    let mut _78: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    let mut _79: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
    let mut _80: usize;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
    let mut _81: usize;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
    let _83: !;                          // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
    let mut _84: core::panicking::AssertKind; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
    let mut _85: &usize;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let _86: &usize;                     // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let mut _87: &usize;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let _88: &usize;                     // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let mut _89: std::option::Option<std::fmt::Arguments<'_>>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
    let _90: ();                         // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:62
    let mut _91: std::fmt::Arguments<'_>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _92: &[&str];                // in scope 0 at ui/box/thin_new.rs:18:14: 18:20
    let mut _93: &[&str; 2];             // in scope 0 at ui/box/thin_new.rs:18:14: 18:20
    let _94: &[&str; 2];                 // in scope 0 at ui/box/thin_new.rs:18:14: 18:20
    let mut _95: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _96: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let _97: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let _98: [core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _99: core::fmt::ArgumentV1<'_>; // in scope 0 at ui/box/thin_new.rs:18:22: 18:32
    let mut _100: &std::boxed::ThinBox<[i32]>; // in scope 0 at ui/box/thin_new.rs:18:22: 18:32
    let _101: &std::boxed::ThinBox<[i32]>; // in scope 0 at ui/box/thin_new.rs:18:22: 18:32
    scope 1 {
        debug thin_error => _1;          // in scope 1 at ui/box/thin_new.rs:8:9: 8:19
        let _9: &usize;                  // in scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        let _10: &usize;                 // in scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        let _35: std::boxed::ThinBox<i32>; // in scope 1 at ui/box/thin_new.rs:12:9: 12:13
        let mut _106: &[&str; 2];        // in scope 1 at ui/box/thin_new.rs:10:14: 10:20
        let mut _107: &usize;            // in scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        scope 2 {
            debug left_val => _9;        // in scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
            debug right_val => _10;      // in scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
            let _15: core::panicking::AssertKind; // in scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
            scope 3 {
                debug kind => _15;       // in scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
            }
        }
        scope 4 {
            debug thin => _35;           // in scope 4 at ui/box/thin_new.rs:12:9: 12:13
            let _42: &usize;             // in scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
            let _43: &usize;             // in scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
            let _68: std::boxed::ThinBox<[i32]>; // in scope 4 at ui/box/thin_new.rs:16:9: 16:19
            let mut _104: &[&str; 2];    // in scope 4 at ui/box/thin_new.rs:14:14: 14:20
            let mut _105: &usize;        // in scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
            scope 5 {
                debug left_val => _42;   // in scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
                debug right_val => _43;  // in scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
                let _48: core::panicking::AssertKind; // in scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                scope 6 {
                    debug kind => _48;   // in scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                }
            }
            scope 7 {
                debug thin_slice => _68; // in scope 7 at ui/box/thin_new.rs:16:9: 16:19
                let _76: &usize;         // in scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
                let _77: &usize;         // in scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
                let mut _102: &[&str; 2]; // in scope 7 at ui/box/thin_new.rs:18:14: 18:20
                let mut _103: &usize;    // in scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
                scope 8 {
                    debug left_val => _76; // in scope 8 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
                    debug right_val => _77; // in scope 8 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
                    let _82: core::panicking::AssertKind; // in scope 8 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                    scope 9 {
                        debug kind => _82; // in scope 9 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                    }
                }
            }
        }
    }

    bb0: {
        _1 = ThinBox::<dyn std::error::Error>::new_unsize::<Foo>(move _2) -> bb1; // scope 0 at ui/box/thin_new.rs:8:42: 8:66
                                         // mir::Constant
                                         // + span: ui/box/thin_new.rs:8:42: 8:61
                                         // + user_ty: UserType(1)
                                         // + literal: Const { ty: fn(Foo) -> ThinBox<dyn std::error::Error> {ThinBox::<dyn std::error::Error>::new_unsize::<Foo>}, val: Value(<ZST>) }
    }

    bb1: {
        _107 = const _;                  // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
                                         // + literal: Const { ty: &usize, val: Unevaluated(main, [], Some(promoted[5])) }
        _4 = _107;                       // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _8 = &_1;                        // scope 1 at ui/box/thin_new.rs:9:63: 9:74
        _7 = _8;                         // scope 1 at ui/box/thin_new.rs:9:63: 9:74
        _6 = std::mem::size_of_val::<ThinBox<dyn std::error::Error>>(move _7) -> [return: bb2, unwind: bb27]; // scope 1 at ui/box/thin_new.rs:9:46: 9:75
                                         // mir::Constant
                                         // + span: ui/box/thin_new.rs:9:46: 9:62
                                         // + literal: Const { ty: for<'a> fn(&'a ThinBox<dyn std::error::Error>) -> usize {std::mem::size_of_val::<ThinBox<dyn std::error::Error>>}, val: Value(<ZST>) }
    }

    bb2: {
        _5 = &_6;                        // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _3 = (move _4, move _5);         // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _9 = (_3.0: &usize);             // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _10 = (_3.1: &usize);            // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _13 = const 8_usize;             // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
        _14 = (*_10);                    // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
        _12 = Eq(move _13, move _14);    // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
        _11 = Not(move _12);             // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
        switchInt(move _11) -> [0: bb4, otherwise: bb3]; // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    }

    bb3: {
        _15 = const core::panicking::AssertKind::Eq; // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _17 = const core::panicking::AssertKind::Eq; // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _19 = _9;                        // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _18 = _19;                       // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _21 = _10;                       // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _20 = _21;                       // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _22 = Option::<Arguments<'_>>::None; // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
        _16 = core::panicking::assert_failed::<usize, usize>(move _17, move _18, move _20, move _22) -> bb27; // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:53
                                         // + literal: Const { ty: for<'a, 'b, 'c> fn(core::panicking::AssertKind, &'a usize, &'b usize, Option<Arguments<'c>>) -> ! {core::panicking::assert_failed::<usize, usize>}, val: Value(<ZST>) }
    }

    bb4: {
        _106 = const _;                  // scope 1 at ui/box/thin_new.rs:10:14: 10:20
                                         // mir::Constant
                                         // + span: ui/box/thin_new.rs:10:14: 10:20
                                         // + literal: Const { ty: &[&str; 2], val: Unevaluated(main, [], Some(promoted[4])) }
        _27 = _106;                      // scope 1 at ui/box/thin_new.rs:10:14: 10:20
        _26 = _27;                       // scope 1 at ui/box/thin_new.rs:10:14: 10:20
        _25 = move _26 as &[&str] (Pointer(Unsize)); // scope 1 at ui/box/thin_new.rs:10:14: 10:20
        _34 = &_1;                       // scope 1 at ui/box/thin_new.rs:10:22: 10:32
        _33 = _34;                       // scope 1 at ui/box/thin_new.rs:10:22: 10:32
        _32 = core::fmt::ArgumentV1::<'_>::new_debug::<ThinBox<dyn std::error::Error>>(move _33) -> [return: bb5, unwind: bb27]; // scope 1 at ui/box/thin_new.rs:10:22: 10:32
                                         // mir::Constant
                                         // + span: ui/box/thin_new.rs:10:22: 10:32
                                         // + user_ty: UserType(4)
                                         // + literal: Const { ty: for<'b> fn(&'b ThinBox<dyn std::error::Error>) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_debug::<ThinBox<dyn std::error::Error>>}, val: Value(<ZST>) }
    }

    bb5: {
        _31 = [move _32];                // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _30 = &_31;                      // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _29 = _30;                       // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _28 = move _29 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _24 = Arguments::<'_>::new_v1(move _25, move _28) -> [return: bb6, unwind: bb27]; // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // + user_ty: UserType(3)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb6: {
        _23 = _print(move _24) -> [return: bb7, unwind: bb27]; // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:62
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:27
                                         // + literal: Const { ty: for<'a> fn(Arguments<'a>) {_print}, val: Value(<ZST>) }
    }

    bb7: {
        _35 = ThinBox::<i32>::new(const 42_i32) -> [return: bb8, unwind: bb27]; // scope 1 at ui/box/thin_new.rs:12:16: 12:35
                                         // mir::Constant
                                         // + span: ui/box/thin_new.rs:12:16: 12:28
                                         // + user_ty: UserType(5)
                                         // + literal: Const { ty: fn(i32) -> ThinBox<i32> {ThinBox::<i32>::new}, val: Value(<ZST>) }
    }

    bb8: {
        _105 = const _;                  // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
                                         // + literal: Const { ty: &usize, val: Unevaluated(main, [], Some(promoted[3])) }
        _37 = _105;                      // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _41 = &_35;                      // scope 4 at ui/box/thin_new.rs:13:63: 13:68
        _40 = _41;                       // scope 4 at ui/box/thin_new.rs:13:63: 13:68
        _39 = std::mem::size_of_val::<ThinBox<i32>>(move _40) -> [return: bb9, unwind: bb26]; // scope 4 at ui/box/thin_new.rs:13:46: 13:69
                                         // mir::Constant
                                         // + span: ui/box/thin_new.rs:13:46: 13:62
                                         // + literal: Const { ty: for<'a> fn(&'a ThinBox<i32>) -> usize {std::mem::size_of_val::<ThinBox<i32>>}, val: Value(<ZST>) }
    }

    bb9: {
        _38 = &_39;                      // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _36 = (move _37, move _38);      // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _42 = (_36.0: &usize);           // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _43 = (_36.1: &usize);           // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _46 = const 8_usize;             // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
        _47 = (*_43);                    // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
        _45 = Eq(move _46, move _47);    // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
        _44 = Not(move _45);             // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
        switchInt(move _44) -> [0: bb11, otherwise: bb10]; // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    }

    bb10: {
        _48 = const core::panicking::AssertKind::Eq; // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _50 = const core::panicking::AssertKind::Eq; // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _52 = _42;                       // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _51 = _52;                       // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _54 = _43;                       // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _53 = _54;                       // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _55 = Option::<Arguments<'_>>::None; // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
        _49 = core::panicking::assert_failed::<usize, usize>(move _50, move _51, move _53, move _55) -> bb26; // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:53
                                         // + literal: Const { ty: for<'a, 'b, 'c> fn(core::panicking::AssertKind, &'a usize, &'b usize, Option<Arguments<'c>>) -> ! {core::panicking::assert_failed::<usize, usize>}, val: Value(<ZST>) }
    }

    bb11: {
        _104 = const _;                  // scope 4 at ui/box/thin_new.rs:14:14: 14:20
                                         // mir::Constant
                                         // + span: ui/box/thin_new.rs:14:14: 14:20
                                         // + literal: Const { ty: &[&str; 2], val: Unevaluated(main, [], Some(promoted[2])) }
        _60 = _104;                      // scope 4 at ui/box/thin_new.rs:14:14: 14:20
        _59 = _60;                       // scope 4 at ui/box/thin_new.rs:14:14: 14:20
        _58 = move _59 as &[&str] (Pointer(Unsize)); // scope 4 at ui/box/thin_new.rs:14:14: 14:20
        _67 = &_35;                      // scope 4 at ui/box/thin_new.rs:14:22: 14:26
        _66 = _67;                       // scope 4 at ui/box/thin_new.rs:14:22: 14:26
        _65 = core::fmt::ArgumentV1::<'_>::new_debug::<ThinBox<i32>>(move _66) -> [return: bb12, unwind: bb26]; // scope 4 at ui/box/thin_new.rs:14:22: 14:26
                                         // mir::Constant
                                         // + span: ui/box/thin_new.rs:14:22: 14:26
                                         // + user_ty: UserType(7)
                                         // + literal: Const { ty: for<'b> fn(&'b ThinBox<i32>) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_debug::<ThinBox<i32>>}, val: Value(<ZST>) }
    }

    bb12: {
        _64 = [move _65];                // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _63 = &_64;                      // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _62 = _63;                       // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _61 = move _62 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _57 = Arguments::<'_>::new_v1(move _58, move _61) -> [return: bb13, unwind: bb26]; // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // + user_ty: UserType(6)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb13: {
        _56 = _print(move _57) -> [return: bb14, unwind: bb26]; // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:62
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:27
                                         // + literal: Const { ty: for<'a> fn(Arguments<'a>) {_print}, val: Value(<ZST>) }
    }

    bb14: {
        _69 = [const 1_i32, const 2_i32, const 3_i32, const 4_i32]; // scope 4 at ui/box/thin_new.rs:16:51: 16:63
        _68 = ThinBox::<[i32]>::new_unsize::<[i32; 4]>(move _69) -> [return: bb15, unwind: bb26]; // scope 4 at ui/box/thin_new.rs:16:22: 16:64
                                         // mir::Constant
                                         // + span: ui/box/thin_new.rs:16:22: 16:50
                                         // + user_ty: UserType(8)
                                         // + literal: Const { ty: fn([i32; 4]) -> ThinBox<[i32]> {ThinBox::<[i32]>::new_unsize::<[i32; 4]>}, val: Value(<ZST>) }
    }

    bb15: {
        _103 = const _;                  // scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
                                         // + literal: Const { ty: &usize, val: Unevaluated(main, [], Some(promoted[1])) }
        _71 = _103;                      // scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _75 = &_68;                      // scope 7 at ui/box/thin_new.rs:17:63: 17:74
        _74 = _75;                       // scope 7 at ui/box/thin_new.rs:17:63: 17:74
        _73 = std::mem::size_of_val::<ThinBox<[i32]>>(move _74) -> [return: bb16, unwind: bb25]; // scope 7 at ui/box/thin_new.rs:17:46: 17:75
                                         // mir::Constant
                                         // + span: ui/box/thin_new.rs:17:46: 17:62
                                         // + literal: Const { ty: for<'a> fn(&'a ThinBox<[i32]>) -> usize {std::mem::size_of_val::<ThinBox<[i32]>>}, val: Value(<ZST>) }
    }

    bb16: {
        _72 = &_73;                      // scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _70 = (move _71, move _72);      // scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _76 = (_70.0: &usize);           // scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _77 = (_70.1: &usize);           // scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _80 = const 8_usize;             // scope 8 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
        _81 = (*_77);                    // scope 8 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
        _79 = Eq(move _80, move _81);    // scope 8 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
        _78 = Not(move _79);             // scope 8 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
        switchInt(move _78) -> [0: bb18, otherwise: bb17]; // scope 8 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    }

    bb17: {
        _82 = const core::panicking::AssertKind::Eq; // scope 8 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _84 = const core::panicking::AssertKind::Eq; // scope 9 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _86 = _76;                       // scope 9 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _85 = _86;                       // scope 9 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _88 = _77;                       // scope 9 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _87 = _88;                       // scope 9 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _89 = Option::<Arguments<'_>>::None; // scope 9 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
        _83 = core::panicking::assert_failed::<usize, usize>(move _84, move _85, move _87, move _89) -> bb25; // scope 9 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:53
                                         // + literal: Const { ty: for<'a, 'b, 'c> fn(core::panicking::AssertKind, &'a usize, &'b usize, Option<Arguments<'c>>) -> ! {core::panicking::assert_failed::<usize, usize>}, val: Value(<ZST>) }
    }

    bb18: {
        _102 = const _;                  // scope 7 at ui/box/thin_new.rs:18:14: 18:20
                                         // mir::Constant
                                         // + span: ui/box/thin_new.rs:18:14: 18:20
                                         // + literal: Const { ty: &[&str; 2], val: Unevaluated(main, [], Some(promoted[0])) }
        _94 = _102;                      // scope 7 at ui/box/thin_new.rs:18:14: 18:20
        _93 = _94;                       // scope 7 at ui/box/thin_new.rs:18:14: 18:20
        _92 = move _93 as &[&str] (Pointer(Unsize)); // scope 7 at ui/box/thin_new.rs:18:14: 18:20
        _101 = &_68;                     // scope 7 at ui/box/thin_new.rs:18:22: 18:32
        _100 = _101;                     // scope 7 at ui/box/thin_new.rs:18:22: 18:32
        _99 = core::fmt::ArgumentV1::<'_>::new_debug::<ThinBox<[i32]>>(move _100) -> [return: bb19, unwind: bb25]; // scope 7 at ui/box/thin_new.rs:18:22: 18:32
                                         // mir::Constant
                                         // + span: ui/box/thin_new.rs:18:22: 18:32
                                         // + user_ty: UserType(10)
                                         // + literal: Const { ty: for<'b> fn(&'b ThinBox<[i32]>) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_debug::<ThinBox<[i32]>>}, val: Value(<ZST>) }
    }

    bb19: {
        _98 = [move _99];                // scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _97 = &_98;                      // scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _96 = _97;                       // scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _95 = move _96 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _91 = Arguments::<'_>::new_v1(move _92, move _95) -> [return: bb20, unwind: bb25]; // scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // + user_ty: UserType(9)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb20: {
        _90 = _print(move _91) -> [return: bb21, unwind: bb25]; // scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:62
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:27
                                         // + literal: Const { ty: for<'a> fn(Arguments<'a>) {_print}, val: Value(<ZST>) }
    }

    bb21: {
        drop(_68) -> [return: bb22, unwind: bb26]; // scope 4 at ui/box/thin_new.rs:19:1: 19:2
    }

    bb22: {
        drop(_35) -> [return: bb23, unwind: bb27]; // scope 1 at ui/box/thin_new.rs:19:1: 19:2
    }

    bb23: {
        drop(_1) -> bb24;                // scope 0 at ui/box/thin_new.rs:19:1: 19:2
    }

    bb24: {
        return;                          // scope 0 at ui/box/thin_new.rs:19:2: 19:2
    }

    bb25 (cleanup): {
        drop(_68) -> bb26;               // scope 4 at ui/box/thin_new.rs:19:1: 19:2
    }

    bb26 (cleanup): {
        drop(_35) -> bb27;               // scope 1 at ui/box/thin_new.rs:19:1: 19:2
    }

    bb27 (cleanup): {
        drop(_1) -> bb28;                // scope 0 at ui/box/thin_new.rs:19:1: 19:2
    }

    bb28 (cleanup): {
        resume;                          // scope 0 at ui/box/thin_new.rs:7:1: 19:2
    }
}

promoted[0] in main: &[&str; 2] = {
    let mut _0: &[&str; 2];              // return place in scope 0 at ui/box/thin_new.rs:18:14: 18:20
    let mut _1: [&str; 2];               // in scope 0 at ui/box/thin_new.rs:18:14: 18:20

    bb0: {
        _1 = [const "", const "\n"];     // scope 0 at ui/box/thin_new.rs:18:14: 18:20
                                         // mir::Constant
                                         // + span: ui/box/thin_new.rs:18:14: 18:20
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
                                         // mir::Constant
                                         // + span: ui/box/thin_new.rs:18:14: 18:20
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at ui/box/thin_new.rs:18:14: 18:20
        return;                          // scope 0 at ui/box/thin_new.rs:18:14: 18:20
    }
}

promoted[1] in main: &usize = {
    let mut _0: &usize;                  // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let mut _1: usize;                   // in scope 0 at ui/box/thin_new.rs:17:16: 17:44

    bb0: {
        _1 = std::mem::size_of::<*const i32>() -> bb1; // scope 0 at ui/box/thin_new.rs:17:16: 17:44
                                         // mir::Constant
                                         // + span: ui/box/thin_new.rs:17:16: 17:42
                                         // + literal: Const { ty: fn() -> usize {std::mem::size_of::<*const i32>}, val: Value(<ZST>) }
    }

    bb1: {
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    }
}

promoted[2] in main: &[&str; 2] = {
    let mut _0: &[&str; 2];              // return place in scope 0 at ui/box/thin_new.rs:14:14: 14:20
    let mut _1: [&str; 2];               // in scope 0 at ui/box/thin_new.rs:14:14: 14:20

    bb0: {
        _1 = [const "", const "\n"];     // scope 0 at ui/box/thin_new.rs:14:14: 14:20
                                         // mir::Constant
                                         // + span: ui/box/thin_new.rs:14:14: 14:20
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
                                         // mir::Constant
                                         // + span: ui/box/thin_new.rs:14:14: 14:20
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at ui/box/thin_new.rs:14:14: 14:20
        return;                          // scope 0 at ui/box/thin_new.rs:14:14: 14:20
    }
}

promoted[3] in main: &usize = {
    let mut _0: &usize;                  // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let mut _1: usize;                   // in scope 0 at ui/box/thin_new.rs:13:16: 13:44

    bb0: {
        _1 = std::mem::size_of::<*const i32>() -> bb1; // scope 0 at ui/box/thin_new.rs:13:16: 13:44
                                         // mir::Constant
                                         // + span: ui/box/thin_new.rs:13:16: 13:42
                                         // + literal: Const { ty: fn() -> usize {std::mem::size_of::<*const i32>}, val: Value(<ZST>) }
    }

    bb1: {
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    }
}

promoted[4] in main: &[&str; 2] = {
    let mut _0: &[&str; 2];              // return place in scope 0 at ui/box/thin_new.rs:10:14: 10:20
    let mut _1: [&str; 2];               // in scope 0 at ui/box/thin_new.rs:10:14: 10:20

    bb0: {
        _1 = [const "", const "\n"];     // scope 0 at ui/box/thin_new.rs:10:14: 10:20
                                         // mir::Constant
                                         // + span: ui/box/thin_new.rs:10:14: 10:20
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
                                         // mir::Constant
                                         // + span: ui/box/thin_new.rs:10:14: 10:20
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at ui/box/thin_new.rs:10:14: 10:20
        return;                          // scope 0 at ui/box/thin_new.rs:10:14: 10:20
    }
}

promoted[5] in main: &usize = {
    let mut _0: &usize;                  // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let mut _1: usize;                   // in scope 0 at ui/box/thin_new.rs:9:16: 9:44

    bb0: {
        _1 = std::mem::size_of::<*const i32>() -> bb1; // scope 0 at ui/box/thin_new.rs:9:16: 9:44
                                         // mir::Constant
                                         // + span: ui/box/thin_new.rs:9:16: 9:42
                                         // + literal: Const { ty: fn() -> usize {std::mem::size_of::<*const i32>}, val: Value(<ZST>) }
    }

    bb1: {
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    }
}

fn <impl at ui/box/thin_new.rs:21:10: 21:15>::fmt(_1: &Foo, _2: &mut Formatter<'_>) -> Result<(), std::fmt::Error> {
    debug self => _1;                    // in scope 0 at ui/box/thin_new.rs:21:10: 21:15
    debug f => _2;                       // in scope 0 at ui/box/thin_new.rs:21:10: 21:15
    let mut _0: std::result::Result<(), std::fmt::Error>; // return place in scope 0 at ui/box/thin_new.rs:21:10: 21:15
    let mut _3: &mut std::fmt::Formatter<'_>; // in scope 0 at ui/box/thin_new.rs:21:10: 21:15
    let mut _4: &str;                    // in scope 0 at ui/box/thin_new.rs:21:10: 21:15
    let _5: &str;                        // in scope 0 at ui/box/thin_new.rs:21:10: 21:15

    bb0: {
        _3 = &mut (*_2);                 // scope 0 at ui/box/thin_new.rs:21:10: 21:15
        _5 = const "Foo";                // scope 0 at ui/box/thin_new.rs:21:10: 21:15
                                         // mir::Constant
                                         // + span: ui/box/thin_new.rs:21:10: 21:15
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _4 = _5;                         // scope 0 at ui/box/thin_new.rs:21:10: 21:15
        _0 = Formatter::<'_>::write_str(move _3, move _4) -> bb1; // scope 0 at ui/box/thin_new.rs:21:10: 21:15
                                         // mir::Constant
                                         // + span: ui/box/thin_new.rs:21:10: 21:15
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a mut Formatter<'_>, &'b str) -> Result<(), std::fmt::Error> {Formatter::<'_>::write_str}, val: Value(<ZST>) }
    }

    bb1: {
        return;                          // scope 0 at ui/box/thin_new.rs:21:15: 21:15
    }
}

fn <impl at ui/box/thin_new.rs:24:1: 24:26>::fmt(_1: &Foo, _2: &mut Formatter<'_>) -> Result<(), std::fmt::Error> {
    debug self => _1;                    // in scope 0 at ui/box/thin_new.rs:25:12: 25:17
    debug f => _2;                       // in scope 0 at ui/box/thin_new.rs:25:19: 25:20
    let mut _0: std::result::Result<(), std::fmt::Error>; // return place in scope 0 at ui/box/thin_new.rs:25:50: 25:61
    let mut _3: &mut std::fmt::Formatter<'_>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:520:9: 520:55
    let mut _4: std::fmt::Arguments<'_>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:520:24: 520:54
    let mut _5: &[&str];                 // in scope 0 at ui/box/thin_new.rs:26:19: 26:27
    let mut _6: &[&str; 1];              // in scope 0 at ui/box/thin_new.rs:26:19: 26:27
    let _7: &[&str; 1];                  // in scope 0 at ui/box/thin_new.rs:26:19: 26:27
    let mut _8: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:520:24: 520:54
    let mut _9: &[core::fmt::ArgumentV1<'_>; 0]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:520:24: 520:54
    let _10: &[core::fmt::ArgumentV1<'_>; 0]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:520:24: 520:54
    let mut _11: &[core::fmt::ArgumentV1<'_>; 0]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:520:24: 520:54
    let mut _12: &[&str; 1];             // in scope 0 at ui/box/thin_new.rs:26:19: 26:27

    bb0: {
        _3 = &mut (*_2);                 // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:520:9: 520:55
        _12 = const _;                   // scope 0 at ui/box/thin_new.rs:26:19: 26:27
                                         // mir::Constant
                                         // + span: ui/box/thin_new.rs:26:19: 26:27
                                         // + literal: Const { ty: &[&str; 1], val: Unevaluated(<Foo as std::fmt::Display>::fmt, [], Some(promoted[1])) }
        _7 = _12;                        // scope 0 at ui/box/thin_new.rs:26:19: 26:27
        _6 = _7;                         // scope 0 at ui/box/thin_new.rs:26:19: 26:27
        _5 = move _6 as &[&str] (Pointer(Unsize)); // scope 0 at ui/box/thin_new.rs:26:19: 26:27
        _11 = const _;                   // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:520:24: 520:54
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:520:24: 520:54
                                         // + literal: Const { ty: &[core::fmt::ArgumentV1<'_>; 0], val: Unevaluated(<Foo as std::fmt::Display>::fmt, [], Some(promoted[0])) }
        _10 = _11;                       // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:520:24: 520:54
        _9 = _10;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:520:24: 520:54
        _8 = move _9 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:520:24: 520:54
        _4 = Arguments::<'_>::new_v1(move _5, move _8) -> bb1; // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:520:24: 520:54
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:520:24: 520:54
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb1: {
        _0 = Formatter::<'_>::write_fmt(move _3, move _4) -> bb2; // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:520:9: 520:55
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:520:14: 520:23
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a mut Formatter<'_>, Arguments<'b>) -> Result<(), std::fmt::Error> {Formatter::<'_>::write_fmt}, val: Value(<ZST>) }
    }

    bb2: {
        return;                          // scope 0 at ui/box/thin_new.rs:27:6: 27:6
    }
}

promoted[0] in <impl at ui/box/thin_new.rs:24:1: 24:26>::fmt: &[core::fmt::ArgumentV1<'_>; 0] = {
    let mut _0: &[core::fmt::ArgumentV1<'_>; 0]; // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:520:24: 520:54
    let mut _1: [core::fmt::ArgumentV1<'_>; 0]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:520:24: 520:54

    bb0: {
        _1 = [];                         // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:520:24: 520:54
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:520:24: 520:54
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:520:24: 520:54
    }
}

promoted[1] in <impl at ui/box/thin_new.rs:24:1: 24:26>::fmt: &[&str; 1] = {
    let mut _0: &[&str; 1];              // return place in scope 0 at ui/box/thin_new.rs:26:19: 26:27
    let mut _1: [&str; 1];               // in scope 0 at ui/box/thin_new.rs:26:19: 26:27

    bb0: {
        _1 = [const "boooo!"];           // scope 0 at ui/box/thin_new.rs:26:19: 26:27
                                         // mir::Constant
                                         // + span: ui/box/thin_new.rs:26:19: 26:27
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at ui/box/thin_new.rs:26:19: 26:27
        return;                          // scope 0 at ui/box/thin_new.rs:26:19: 26:27
    }
}
