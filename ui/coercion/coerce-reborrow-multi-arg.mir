// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
fn test(_1: T, _2: T) -> () {
    debug _a => _1;
    debug _b => _2;
    let mut _0: ();

    bb0: {
        drop(_2) -> [return: bb1, unwind: bb3];
    }

    bb1: {
        drop(_1) -> [return: bb2, unwind continue];
    }

    bb2: {
        return;
    }

    bb3 (cleanup): {
        drop(_1) -> [return: bb4, unwind terminate];
    }

    bb4 (cleanup): {
        resume;
    }
}

fn main() -> () {
    let mut _0: ();
    let _1: ();
    let _2: ();
    let mut _3: &i32;
    let _4: &mut i32;
    let mut _5: i32;
    let _6: ();
    let mut _7: &i32;
    let _8: &mut i32;
    let mut _9: i32;
    let _10: ();
    let mut _11: &i32;
    let _12: &mut i32;
    let mut _13: i32;
    let mut _14: &i32;
    let _15: &mut i32;
    let mut _16: i32;
    let mut _17: &i32;
    let mut _18: &i32;
    let mut _19: &i32;
    let mut _20: &i32;

    bb0: {
        _20 = const _;
        _19 = const _;
        _1 = test::<&i32>(_20, _19) -> [return: bb1, unwind continue];
    }

    bb1: {
        _18 = const _;
        _5 = const 7_i32;
        _4 = &mut _5;
        _3 = &(*_4);
        _2 = test::<&i32>(_18, move _3) -> [return: bb2, unwind continue];
    }

    bb2: {
        _9 = const 7_i32;
        _8 = &mut _9;
        _7 = &(*_8);
        _17 = const _;
        _6 = test::<&i32>(move _7, _17) -> [return: bb3, unwind continue];
    }

    bb3: {
        _13 = const 7_i32;
        _12 = &mut _13;
        _11 = &(*_12);
        _16 = const 7_i32;
        _15 = &mut _16;
        _14 = &(*_15);
        _10 = test::<&i32>(move _11, move _14) -> [return: bb4, unwind continue];
    }

    bb4: {
        return;
    }
}

promoted[0] in main: &i32 = {
    let mut _0: &i32;
    let mut _1: i32;

    bb0: {
        _1 = const 7_i32;
        _0 = &_1;
        return;
    }
}

promoted[1] in main: &i32 = {
    let mut _0: &i32;
    let mut _1: i32;

    bb0: {
        _1 = const 7_i32;
        _0 = &_1;
        return;
    }
}

promoted[2] in main: &i32 = {
    let mut _0: &i32;
    let mut _1: i32;

    bb0: {
        _1 = const 7_i32;
        _0 = &_1;
        return;
    }
}

promoted[3] in main: &i32 = {
    let mut _0: &i32;
    let mut _1: i32;

    bb0: {
        _1 = const 7_i32;
        _0 = &_1;
        return;
    }
}
