// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
fn test(_1: T, _2: T) -> () {
    debug _a => _1;                      // in scope 0 at ui/coercion/coerce-reborrow-multi-arg.rs:2:12: 2:14
    debug _b => _2;                      // in scope 0 at ui/coercion/coerce-reborrow-multi-arg.rs:2:19: 2:21
    let mut _0: ();                      // return place in scope 0 at ui/coercion/coerce-reborrow-multi-arg.rs:2:26: 2:26

    bb0: {
        drop(_2) -> [return: bb1, unwind: bb3]; // scope 0 at ui/coercion/coerce-reborrow-multi-arg.rs:2:27: 2:28
    }

    bb1: {
        drop(_1) -> bb2;                 // scope 0 at ui/coercion/coerce-reborrow-multi-arg.rs:2:27: 2:28
    }

    bb2: {
        return;                          // scope 0 at ui/coercion/coerce-reborrow-multi-arg.rs:2:28: 2:28
    }

    bb3 (cleanup): {
        drop(_1) -> bb4;                 // scope 0 at ui/coercion/coerce-reborrow-multi-arg.rs:2:27: 2:28
    }

    bb4 (cleanup): {
        resume;                          // scope 0 at ui/coercion/coerce-reborrow-multi-arg.rs:2:1: 2:28
    }
}

fn main() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/coercion/coerce-reborrow-multi-arg.rs:4:11: 4:11
    let _1: ();                          // in scope 0 at ui/coercion/coerce-reborrow-multi-arg.rs:5:5: 5:17
    let mut _2: &i32;                    // in scope 0 at ui/coercion/coerce-reborrow-multi-arg.rs:5:10: 5:12
    let mut _3: &i32;                    // in scope 0 at ui/coercion/coerce-reborrow-multi-arg.rs:5:14: 5:16
    let _4: &i32;                        // in scope 0 at ui/coercion/coerce-reborrow-multi-arg.rs:5:14: 5:16
    let _5: ();                          // in scope 0 at ui/coercion/coerce-reborrow-multi-arg.rs:6:5: 6:21
    let mut _6: &i32;                    // in scope 0 at ui/coercion/coerce-reborrow-multi-arg.rs:6:10: 6:12
    let mut _7: &i32;                    // in scope 0 at ui/coercion/coerce-reborrow-multi-arg.rs:6:14: 6:20
    let _8: &mut i32;                    // in scope 0 at ui/coercion/coerce-reborrow-multi-arg.rs:6:14: 6:20
    let mut _9: i32;                     // in scope 0 at ui/coercion/coerce-reborrow-multi-arg.rs:6:19: 6:20
    let _10: ();                         // in scope 0 at ui/coercion/coerce-reborrow-multi-arg.rs:7:5: 7:29
    let mut _11: &i32;                   // in scope 0 at ui/coercion/coerce-reborrow-multi-arg.rs:7:18: 7:24
    let _12: &mut i32;                   // in scope 0 at ui/coercion/coerce-reborrow-multi-arg.rs:7:18: 7:24
    let mut _13: i32;                    // in scope 0 at ui/coercion/coerce-reborrow-multi-arg.rs:7:23: 7:24
    let mut _14: &i32;                   // in scope 0 at ui/coercion/coerce-reborrow-multi-arg.rs:7:26: 7:28
    let _15: &i32;                       // in scope 0 at ui/coercion/coerce-reborrow-multi-arg.rs:7:26: 7:28
    let _16: ();                         // in scope 0 at ui/coercion/coerce-reborrow-multi-arg.rs:8:5: 8:33
    let mut _17: &i32;                   // in scope 0 at ui/coercion/coerce-reborrow-multi-arg.rs:8:18: 8:24
    let _18: &mut i32;                   // in scope 0 at ui/coercion/coerce-reborrow-multi-arg.rs:8:18: 8:24
    let mut _19: i32;                    // in scope 0 at ui/coercion/coerce-reborrow-multi-arg.rs:8:23: 8:24
    let mut _20: &i32;                   // in scope 0 at ui/coercion/coerce-reborrow-multi-arg.rs:8:26: 8:32
    let _21: &mut i32;                   // in scope 0 at ui/coercion/coerce-reborrow-multi-arg.rs:8:26: 8:32
    let mut _22: i32;                    // in scope 0 at ui/coercion/coerce-reborrow-multi-arg.rs:8:31: 8:32
    let mut _23: &i32;                   // in scope 0 at ui/coercion/coerce-reborrow-multi-arg.rs:7:26: 7:28
    let mut _24: &i32;                   // in scope 0 at ui/coercion/coerce-reborrow-multi-arg.rs:6:10: 6:12
    let mut _25: &i32;                   // in scope 0 at ui/coercion/coerce-reborrow-multi-arg.rs:5:14: 5:16
    let mut _26: &i32;                   // in scope 0 at ui/coercion/coerce-reborrow-multi-arg.rs:5:10: 5:12

    bb0: {
        _26 = const _;                   // scope 0 at ui/coercion/coerce-reborrow-multi-arg.rs:5:10: 5:12
                                         // mir::Constant
                                         // + span: ui/coercion/coerce-reborrow-multi-arg.rs:5:10: 5:12
                                         // + literal: Const { ty: &i32, val: Unevaluated(main, [], Some(promoted[3])) }
        _2 = _26;                        // scope 0 at ui/coercion/coerce-reborrow-multi-arg.rs:5:10: 5:12
        _25 = const _;                   // scope 0 at ui/coercion/coerce-reborrow-multi-arg.rs:5:14: 5:16
                                         // mir::Constant
                                         // + span: ui/coercion/coerce-reborrow-multi-arg.rs:5:14: 5:16
                                         // + literal: Const { ty: &i32, val: Unevaluated(main, [], Some(promoted[2])) }
        _4 = _25;                        // scope 0 at ui/coercion/coerce-reborrow-multi-arg.rs:5:14: 5:16
        _3 = _4;                         // scope 0 at ui/coercion/coerce-reborrow-multi-arg.rs:5:14: 5:16
        _1 = test::<&i32>(move _2, move _3) -> bb1; // scope 0 at ui/coercion/coerce-reborrow-multi-arg.rs:5:5: 5:17
                                         // mir::Constant
                                         // + span: ui/coercion/coerce-reborrow-multi-arg.rs:5:5: 5:9
                                         // + literal: Const { ty: fn(&i32, &i32) {test::<&i32>}, val: Value(<ZST>) }
    }

    bb1: {
        _24 = const _;                   // scope 0 at ui/coercion/coerce-reborrow-multi-arg.rs:6:10: 6:12
                                         // mir::Constant
                                         // + span: ui/coercion/coerce-reborrow-multi-arg.rs:6:10: 6:12
                                         // + literal: Const { ty: &i32, val: Unevaluated(main, [], Some(promoted[1])) }
        _6 = _24;                        // scope 0 at ui/coercion/coerce-reborrow-multi-arg.rs:6:10: 6:12
        _9 = const 7_i32;                // scope 0 at ui/coercion/coerce-reborrow-multi-arg.rs:6:19: 6:20
        _8 = &mut _9;                    // scope 0 at ui/coercion/coerce-reborrow-multi-arg.rs:6:14: 6:20
        _7 = &(*_8);                     // scope 0 at ui/coercion/coerce-reborrow-multi-arg.rs:6:14: 6:20
        _5 = test::<&i32>(move _6, move _7) -> bb2; // scope 0 at ui/coercion/coerce-reborrow-multi-arg.rs:6:5: 6:21
                                         // mir::Constant
                                         // + span: ui/coercion/coerce-reborrow-multi-arg.rs:6:5: 6:9
                                         // + literal: Const { ty: fn(&i32, &i32) {test::<&i32>}, val: Value(<ZST>) }
    }

    bb2: {
        _13 = const 7_i32;               // scope 0 at ui/coercion/coerce-reborrow-multi-arg.rs:7:23: 7:24
        _12 = &mut _13;                  // scope 0 at ui/coercion/coerce-reborrow-multi-arg.rs:7:18: 7:24
        _11 = &(*_12);                   // scope 0 at ui/coercion/coerce-reborrow-multi-arg.rs:7:18: 7:24
        _23 = const _;                   // scope 0 at ui/coercion/coerce-reborrow-multi-arg.rs:7:26: 7:28
                                         // mir::Constant
                                         // + span: ui/coercion/coerce-reborrow-multi-arg.rs:7:26: 7:28
                                         // + literal: Const { ty: &i32, val: Unevaluated(main, [], Some(promoted[0])) }
        _15 = _23;                       // scope 0 at ui/coercion/coerce-reborrow-multi-arg.rs:7:26: 7:28
        _14 = _15;                       // scope 0 at ui/coercion/coerce-reborrow-multi-arg.rs:7:26: 7:28
        _10 = test::<&i32>(move _11, move _14) -> bb3; // scope 0 at ui/coercion/coerce-reborrow-multi-arg.rs:7:5: 7:29
                                         // mir::Constant
                                         // + span: ui/coercion/coerce-reborrow-multi-arg.rs:7:5: 7:17
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: fn(&i32, &i32) {test::<&i32>}, val: Value(<ZST>) }
    }

    bb3: {
        _19 = const 7_i32;               // scope 0 at ui/coercion/coerce-reborrow-multi-arg.rs:8:23: 8:24
        _18 = &mut _19;                  // scope 0 at ui/coercion/coerce-reborrow-multi-arg.rs:8:18: 8:24
        _17 = &(*_18);                   // scope 0 at ui/coercion/coerce-reborrow-multi-arg.rs:8:18: 8:24
        _22 = const 7_i32;               // scope 0 at ui/coercion/coerce-reborrow-multi-arg.rs:8:31: 8:32
        _21 = &mut _22;                  // scope 0 at ui/coercion/coerce-reborrow-multi-arg.rs:8:26: 8:32
        _20 = &(*_21);                   // scope 0 at ui/coercion/coerce-reborrow-multi-arg.rs:8:26: 8:32
        _16 = test::<&i32>(move _17, move _20) -> bb4; // scope 0 at ui/coercion/coerce-reborrow-multi-arg.rs:8:5: 8:33
                                         // mir::Constant
                                         // + span: ui/coercion/coerce-reborrow-multi-arg.rs:8:5: 8:17
                                         // + user_ty: UserType(1)
                                         // + literal: Const { ty: fn(&i32, &i32) {test::<&i32>}, val: Value(<ZST>) }
    }

    bb4: {
        return;                          // scope 0 at ui/coercion/coerce-reborrow-multi-arg.rs:9:2: 9:2
    }
}

promoted[0] in main: &i32 = {
    let mut _0: &i32;                    // return place in scope 0 at ui/coercion/coerce-reborrow-multi-arg.rs:7:26: 7:28
    let mut _1: i32;                     // in scope 0 at ui/coercion/coerce-reborrow-multi-arg.rs:7:27: 7:28

    bb0: {
        _1 = const 7_i32;                // scope 0 at ui/coercion/coerce-reborrow-multi-arg.rs:7:27: 7:28
        _0 = &_1;                        // scope 0 at ui/coercion/coerce-reborrow-multi-arg.rs:7:26: 7:28
        return;                          // scope 0 at ui/coercion/coerce-reborrow-multi-arg.rs:7:26: 7:28
    }
}

promoted[1] in main: &i32 = {
    let mut _0: &i32;                    // return place in scope 0 at ui/coercion/coerce-reborrow-multi-arg.rs:6:10: 6:12
    let mut _1: i32;                     // in scope 0 at ui/coercion/coerce-reborrow-multi-arg.rs:6:11: 6:12

    bb0: {
        _1 = const 7_i32;                // scope 0 at ui/coercion/coerce-reborrow-multi-arg.rs:6:11: 6:12
        _0 = &_1;                        // scope 0 at ui/coercion/coerce-reborrow-multi-arg.rs:6:10: 6:12
        return;                          // scope 0 at ui/coercion/coerce-reborrow-multi-arg.rs:6:10: 6:12
    }
}

promoted[2] in main: &i32 = {
    let mut _0: &i32;                    // return place in scope 0 at ui/coercion/coerce-reborrow-multi-arg.rs:5:14: 5:16
    let mut _1: i32;                     // in scope 0 at ui/coercion/coerce-reborrow-multi-arg.rs:5:15: 5:16

    bb0: {
        _1 = const 7_i32;                // scope 0 at ui/coercion/coerce-reborrow-multi-arg.rs:5:15: 5:16
        _0 = &_1;                        // scope 0 at ui/coercion/coerce-reborrow-multi-arg.rs:5:14: 5:16
        return;                          // scope 0 at ui/coercion/coerce-reborrow-multi-arg.rs:5:14: 5:16
    }
}

promoted[3] in main: &i32 = {
    let mut _0: &i32;                    // return place in scope 0 at ui/coercion/coerce-reborrow-multi-arg.rs:5:10: 5:12
    let mut _1: i32;                     // in scope 0 at ui/coercion/coerce-reborrow-multi-arg.rs:5:11: 5:12

    bb0: {
        _1 = const 7_i32;                // scope 0 at ui/coercion/coerce-reborrow-multi-arg.rs:5:11: 5:12
        _0 = &_1;                        // scope 0 at ui/coercion/coerce-reborrow-multi-arg.rs:5:10: 5:12
        return;                          // scope 0 at ui/coercion/coerce-reborrow-multi-arg.rs:5:10: 5:12
    }
}
