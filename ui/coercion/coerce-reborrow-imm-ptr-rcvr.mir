// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
fn <impl at ui/coercion/coerce-reborrow-imm-ptr-rcvr.rs:7:1: 7:17>::how_many(_1: &SpeechMaker) -> usize {
    debug self => _1;                    // in scope 0 at ui/coercion/coerce-reborrow-imm-ptr-rcvr.rs:8:21: 8:26
    let mut _0: usize;                   // return place in scope 0 at ui/coercion/coerce-reborrow-imm-ptr-rcvr.rs:8:31: 8:36

    bb0: {
        _0 = ((*_1).0: usize);           // scope 0 at ui/coercion/coerce-reborrow-imm-ptr-rcvr.rs:8:39: 8:52
        return;                          // scope 0 at ui/coercion/coerce-reborrow-imm-ptr-rcvr.rs:8:54: 8:54
    }
}

fn foo(_1: &SpeechMaker) -> usize {
    debug speaker => _1;                 // in scope 0 at ui/coercion/coerce-reborrow-imm-ptr-rcvr.rs:11:8: 11:15
    let mut _0: usize;                   // return place in scope 0 at ui/coercion/coerce-reborrow-imm-ptr-rcvr.rs:11:34: 11:39
    let mut _2: usize;                   // in scope 0 at ui/coercion/coerce-reborrow-imm-ptr-rcvr.rs:12:5: 12:23
    let mut _3: &SpeechMaker;            // in scope 0 at ui/coercion/coerce-reborrow-imm-ptr-rcvr.rs:12:5: 12:23
    let mut _4: (usize, bool);           // in scope 0 at ui/coercion/coerce-reborrow-imm-ptr-rcvr.rs:12:5: 12:28

    bb0: {
        _3 = _1;                         // scope 0 at ui/coercion/coerce-reborrow-imm-ptr-rcvr.rs:12:5: 12:23
        _2 = SpeechMaker::how_many(move _3) -> bb1; // scope 0 at ui/coercion/coerce-reborrow-imm-ptr-rcvr.rs:12:5: 12:23
                                         // mir::Constant
                                         // + span: ui/coercion/coerce-reborrow-imm-ptr-rcvr.rs:12:13: 12:21
                                         // + literal: Const { ty: for<'a> fn(&'a SpeechMaker) -> usize {SpeechMaker::how_many}, val: Value(<ZST>) }
    }

    bb1: {
        _4 = CheckedAdd(_2, const 33_usize); // scope 0 at ui/coercion/coerce-reborrow-imm-ptr-rcvr.rs:12:5: 12:28
        assert(!move (_4.1: bool), "attempt to compute `{} + {}`, which would overflow", move _2, const 33_usize) -> bb2; // scope 0 at ui/coercion/coerce-reborrow-imm-ptr-rcvr.rs:12:5: 12:28
    }

    bb2: {
        _0 = move (_4.0: usize);         // scope 0 at ui/coercion/coerce-reborrow-imm-ptr-rcvr.rs:12:5: 12:28
        return;                          // scope 0 at ui/coercion/coerce-reborrow-imm-ptr-rcvr.rs:13:2: 13:2
    }
}

fn main() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/coercion/coerce-reborrow-imm-ptr-rcvr.rs:15:15: 15:15
    let _1: SpeechMaker;                 // in scope 0 at ui/coercion/coerce-reborrow-imm-ptr-rcvr.rs:16:9: 16:16
    let mut _2: (&usize, &usize);        // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _3: &usize;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let _4: usize;                       // in scope 0 at ui/coercion/coerce-reborrow-imm-ptr-rcvr.rs:17:16: 17:29
    let mut _5: &SpeechMaker;            // in scope 0 at ui/coercion/coerce-reborrow-imm-ptr-rcvr.rs:17:20: 17:28
    let _6: &SpeechMaker;                // in scope 0 at ui/coercion/coerce-reborrow-imm-ptr-rcvr.rs:17:20: 17:28
    let mut _7: &usize;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _10: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    let mut _11: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
    let mut _12: usize;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
    let mut _13: usize;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
    let _15: !;                          // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
    let mut _16: core::panicking::AssertKind; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
    let mut _17: &usize;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let _18: &usize;                     // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let mut _19: &usize;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let _20: &usize;                     // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let mut _21: std::option::Option<std::fmt::Arguments<'_>>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
    scope 1 {
        debug lincoln => _1;             // in scope 1 at ui/coercion/coerce-reborrow-imm-ptr-rcvr.rs:16:9: 16:16
        let _8: &usize;                  // in scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        let _9: &usize;                  // in scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        let mut _22: &usize;             // in scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        scope 2 {
            debug left_val => _8;        // in scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
            debug right_val => _9;       // in scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
            let _14: core::panicking::AssertKind; // in scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
            scope 3 {
                debug kind => _14;       // in scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
            }
        }
    }

    bb0: {
        _1 = SpeechMaker { speeches: const 22_usize }; // scope 0 at ui/coercion/coerce-reborrow-imm-ptr-rcvr.rs:16:19: 16:45
        _6 = &_1;                        // scope 1 at ui/coercion/coerce-reborrow-imm-ptr-rcvr.rs:17:20: 17:28
        _5 = _6;                         // scope 1 at ui/coercion/coerce-reborrow-imm-ptr-rcvr.rs:17:20: 17:28
        _4 = foo(move _5) -> bb1;        // scope 1 at ui/coercion/coerce-reborrow-imm-ptr-rcvr.rs:17:16: 17:29
                                         // mir::Constant
                                         // + span: ui/coercion/coerce-reborrow-imm-ptr-rcvr.rs:17:16: 17:19
                                         // + literal: Const { ty: for<'a> fn(&'a SpeechMaker) -> usize {foo}, val: Value(<ZST>) }
    }

    bb1: {
        _3 = &_4;                        // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _22 = const _;                   // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // + literal: Const { ty: &usize, val: Unevaluated(main, [], Some(promoted[0])) }
        _7 = _22;                        // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _2 = (move _3, move _7);         // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _8 = (_2.0: &usize);             // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _9 = (_2.1: &usize);             // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _12 = (*_8);                     // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
        _13 = const 55_usize;            // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
        _11 = Eq(move _12, move _13);    // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
        _10 = Not(move _11);             // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
        switchInt(move _10) -> [0: bb3, otherwise: bb2]; // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    }

    bb2: {
        _14 = const core::panicking::AssertKind::Eq; // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _16 = const core::panicking::AssertKind::Eq; // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _18 = _8;                        // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _17 = _18;                       // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _20 = _9;                        // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _19 = _20;                       // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _21 = Option::<Arguments<'_>>::None; // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
        _15 = core::panicking::assert_failed::<usize, usize>(move _16, move _17, move _19, move _21); // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:53
                                         // + literal: Const { ty: for<'a, 'b, 'c> fn(core::panicking::AssertKind, &'a usize, &'b usize, Option<Arguments<'c>>) -> ! {core::panicking::assert_failed::<usize, usize>}, val: Value(<ZST>) }
    }

    bb3: {
        return;                          // scope 0 at ui/coercion/coerce-reborrow-imm-ptr-rcvr.rs:18:2: 18:2
    }
}

promoted[0] in main: &usize = {
    let mut _0: &usize;                  // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _1: usize;                   // in scope 0 at ui/coercion/coerce-reborrow-imm-ptr-rcvr.rs:17:31: 17:33

    bb0: {
        _1 = const 55_usize;             // scope 0 at ui/coercion/coerce-reborrow-imm-ptr-rcvr.rs:17:31: 17:33
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    }
}
