// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
fn <impl at ui/unsafe/union_destructure.rs:5:16: 5:21>::clone(_1: &Pie) -> Pie {
    debug self => _1;                    // in scope 0 at ui/unsafe/union_destructure.rs:5:16: 5:21
    let mut _0: Pie;                     // return place in scope 0 at ui/unsafe/union_destructure.rs:5:16: 5:21
    scope 1 {
    }

    bb0: {
        _0 = (*_1);                      // scope 1 at ui/unsafe/union_destructure.rs:5:16: 5:21
        return;                          // scope 0 at ui/unsafe/union_destructure.rs:5:21: 5:21
    }
}

fn main() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/unsafe/union_destructure.rs:18:11: 18:11
    let _1: Foo;                         // in scope 0 at ui/unsafe/union_destructure.rs:19:9: 19:10
    let mut _5: (&i8, &i8);              // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _6: &i8;                     // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let mut _7: &i8;                     // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _10: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    let mut _11: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
    let mut _12: i8;                     // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
    let mut _13: i8;                     // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
    let _15: !;                          // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
    let mut _16: core::panicking::AssertKind; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
    let mut _17: &i8;                    // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let _18: &i8;                        // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let mut _19: &i8;                    // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let _20: &i8;                        // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let mut _21: std::option::Option<std::fmt::Arguments<'_>>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
    scope 1 {
        debug u => _1;                   // in scope 1 at ui/unsafe/union_destructure.rs:19:9: 19:10
        scope 2 {
            let _2: Foo;                 // in scope 2 at ui/unsafe/union_destructure.rs:21:9: 21:10
            scope 3 {
                debug u => _2;           // in scope 3 at ui/unsafe/union_destructure.rs:21:9: 21:10
                scope 4 {
                    let _22: Foo;        // in scope 4 at ui/unsafe/union_destructure.rs:28:9: 28:10
                    scope 5 {
                        let _3: Foo;     // in scope 5 at ui/unsafe/union_destructure.rs:24:13: 24:14
                        scope 6 {
                            debug u => _3; // in scope 6 at ui/unsafe/union_destructure.rs:24:13: 24:14
                            let _4: i8;  // in scope 6 at ui/unsafe/union_destructure.rs:25:20: 25:23
                            scope 7 {
                                debug bar => _4; // in scope 7 at ui/unsafe/union_destructure.rs:25:20: 25:23
                                let _8: &i8; // in scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
                                let _9: &i8; // in scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
                                let mut _26: &i8; // in scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                scope 8 {
                                    debug left_val => _8; // in scope 8 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
                                    debug right_val => _9; // in scope 8 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
                                    let _14: core::panicking::AssertKind; // in scope 8 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                                    scope 9 {
                                        debug kind => _14; // in scope 9 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                                    }
                                }
                            }
                        }
                    }
                    scope 10 {
                        debug u => _22;  // in scope 10 at ui/unsafe/union_destructure.rs:28:9: 28:10
                        let _23: Foo;    // in scope 10 at ui/unsafe/union_destructure.rs:34:9: 34:10
                        scope 11 {
                            debug u => _23; // in scope 11 at ui/unsafe/union_destructure.rs:34:9: 34:10
                            let _24: Foo; // in scope 11 at ui/unsafe/union_destructure.rs:40:9: 40:10
                            scope 12 {
                            }
                            scope 13 {
                                debug u => _24; // in scope 13 at ui/unsafe/union_destructure.rs:40:9: 40:10
                                let _25: Foo; // in scope 13 at ui/unsafe/union_destructure.rs:47:9: 47:10
                                scope 14 {
                                }
                                scope 15 {
                                    debug u => _25; // in scope 15 at ui/unsafe/union_destructure.rs:47:9: 47:10
                                }
                            }
                        }
                    }
                }
            }
        }
    }

    bb0: {
        _1 = Foo { bar: const 5_i8 };    // scope 0 at ui/unsafe/union_destructure.rs:19:13: 19:27
        _2 = Foo { bar: const 6_i8 };    // scope 2 at ui/unsafe/union_destructure.rs:21:13: 21:27
        _3 = Foo { bar: const 7_i8 };    // scope 5 at ui/unsafe/union_destructure.rs:24:17: 24:31
        _4 = (_3.0: i8);                 // scope 6 at ui/unsafe/union_destructure.rs:25:20: 25:23
        _6 = &_4;                        // scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _26 = const _;                   // scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // + literal: Const { ty: &i8, val: Unevaluated(main, [], Some(promoted[0])) }
        _7 = _26;                        // scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _5 = (move _6, move _7);         // scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _8 = (_5.0: &i8);                // scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _9 = (_5.1: &i8);                // scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _12 = (*_8);                     // scope 8 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
        _13 = const 7_i8;                // scope 8 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
        _11 = Eq(move _12, move _13);    // scope 8 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
        _10 = Not(move _11);             // scope 8 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
        switchInt(move _10) -> [0: bb2, otherwise: bb1]; // scope 8 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    }

    bb1: {
        _14 = const core::panicking::AssertKind::Eq; // scope 8 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _16 = const core::panicking::AssertKind::Eq; // scope 9 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _18 = _8;                        // scope 9 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _17 = _18;                       // scope 9 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _20 = _9;                        // scope 9 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _19 = _20;                       // scope 9 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _21 = Option::<Arguments<'_>>::None; // scope 9 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
        _15 = core::panicking::assert_failed::<i8, i8>(move _16, move _17, move _19, move _21); // scope 9 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:53
                                         // + literal: Const { ty: for<'a, 'b, 'c> fn(core::panicking::AssertKind, &'a i8, &'b i8, Option<Arguments<'c>>) -> ! {core::panicking::assert_failed::<i8, i8>}, val: Value(<ZST>) }
    }

    bb2: {
        _22 = Foo { bar: const 8_i8 };   // scope 4 at ui/unsafe/union_destructure.rs:28:13: 28:27
        _23 = Foo { bar: const 9_i8 };   // scope 10 at ui/unsafe/union_destructure.rs:34:13: 34:27
        _24 = Foo { bar: const 10_i8 };  // scope 11 at ui/unsafe/union_destructure.rs:40:13: 40:28
        _25 = Foo { bar: const 11_i8 };  // scope 13 at ui/unsafe/union_destructure.rs:47:13: 47:28
        return;                          // scope 0 at ui/unsafe/union_destructure.rs:51:2: 51:2
    }
}

promoted[0] in main: &i8 = {
    let mut _0: &i8;                     // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _1: i8;                      // in scope 0 at ui/unsafe/union_destructure.rs:26:25: 26:26

    bb0: {
        _1 = const 7_i8;                 // scope 0 at ui/unsafe/union_destructure.rs:26:25: 26:26
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    }
}
