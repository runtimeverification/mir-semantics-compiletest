// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
fn main() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/crate-leading-sep.rs:4:11: 4:11
    let _1: ();                          // in scope 0 at ui/crate-leading-sep.rs:6:5: 6:23

    bb0: {
        _1 = std::mem::drop::<usize>(const 2_usize) -> bb1; // scope 0 at ui/crate-leading-sep.rs:6:5: 6:23
                                         // mir::Constant
                                         // + span: ui/crate-leading-sep.rs:6:5: 6:14
                                         // + literal: Const { ty: fn(usize) {std::mem::drop::<usize>}, val: Value(<ZST>) }
    }

    bb1: {
        return;                          // scope 0 at ui/crate-leading-sep.rs:7:2: 7:2
    }
}
