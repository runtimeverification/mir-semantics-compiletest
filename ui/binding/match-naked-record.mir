// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
fn main() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/binding/match-naked-record.rs:7:15: 7:15
    let _1: X;                           // in scope 0 at ui/binding/match-naked-record.rs:8:9: 8:11
    scope 1 {
        debug _x => _1;                  // in scope 1 at ui/binding/match-naked-record.rs:8:9: 8:11
    }

    bb0: {
        _1 = const X {{ x: 0_isize }};   // scope 0 at ui/binding/match-naked-record.rs:9:12: 11:8
                                         // mir::Constant
                                         // + span: ui/binding/match-naked-record.rs:9:12: 11:8
                                         // + literal: Const { ty: X, val: Value(Scalar(0x0000000000000000)) }
        return;                          // scope 0 at ui/binding/match-naked-record.rs:13:2: 13:2
    }
}
