// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
fn main() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/binding/optional_comma_in_match_arm.rs:6:11: 6:11
    let _1: i32;                         // in scope 0 at ui/binding/optional_comma_in_match_arm.rs:7:9: 7:10
    let _3: &i32;                        // in scope 0 at ui/binding/optional_comma_in_match_arm.rs:31:19: 31:21
    scope 1 {
        debug x => _1;                   // in scope 1 at ui/binding/optional_comma_in_match_arm.rs:7:9: 7:10
        let _2: &i32;                    // in scope 1 at ui/binding/optional_comma_in_match_arm.rs:31:9: 31:10
        scope 2 {
        }
        scope 3 {
        }
        scope 4 {
            debug r => _2;               // in scope 4 at ui/binding/optional_comma_in_match_arm.rs:31:9: 31:10
        }
    }

    bb0: {
        _1 = const 1_i32;                // scope 0 at ui/binding/optional_comma_in_match_arm.rs:7:13: 7:14
        switchInt(_1) -> [1: bb4, 2: bb1, 3: bb2, 4: bb3, 5: bb4, 6: bb4, 7: bb4, otherwise: bb4]; // scope 1 at ui/binding/optional_comma_in_match_arm.rs:9:5: 9:12
    }

    bb1: {
        goto -> bb4;                     // scope 1 at ui/binding/optional_comma_in_match_arm.rs:11:20: 11:24
    }

    bb2: {
        goto -> bb4;                     // scope 1 at ui/binding/optional_comma_in_match_arm.rs:12:17: 12:21
    }

    bb3: {
        goto -> bb4;                     // scope 1 at ui/binding/optional_comma_in_match_arm.rs:13:17: 13:21
    }

    bb4: {
        switchInt(_1) -> [1: bb8, 2: bb5, 3: bb6, 4: bb7, 5: bb8, 6: bb8, 7: bb8, otherwise: bb8]; // scope 1 at ui/binding/optional_comma_in_match_arm.rs:20:5: 20:12
    }

    bb5: {
        goto -> bb8;                     // scope 1 at ui/binding/optional_comma_in_match_arm.rs:22:20: 22:24
    }

    bb6: {
        goto -> bb8;                     // scope 1 at ui/binding/optional_comma_in_match_arm.rs:23:17: 23:21
    }

    bb7: {
        goto -> bb8;                     // scope 1 at ui/binding/optional_comma_in_match_arm.rs:24:17: 24:21
    }

    bb8: {
        _3 = &_1;                        // scope 1 at ui/binding/optional_comma_in_match_arm.rs:31:19: 31:21
        _2 = _3;                         // scope 1 at ui/binding/optional_comma_in_match_arm.rs:31:19: 31:21
        switchInt((*_2)) -> [1: bb9, 2: bb10, otherwise: bb10]; // scope 4 at ui/binding/optional_comma_in_match_arm.rs:33:5: 33:12
    }

    bb9: {
        goto -> bb10;                    // scope 4 at ui/binding/optional_comma_in_match_arm.rs:36:18: 36:22
    }

    bb10: {
        return;                          // scope 0 at ui/binding/optional_comma_in_match_arm.rs:40:2: 40:2
    }
}
