// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
fn foo(_1: usize) -> () {
    debug src => _1;                     // in scope 0 at ui/binding/pattern-bound-var-in-for-each.rs:7:8: 7:11
    let mut _0: ();                      // return place in scope 0 at ui/binding/pattern-bound-var-in-for-each.rs:7:20: 7:20
    let mut _2: std::option::Option<usize>; // in scope 0 at ui/binding/pattern-bound-var-in-for-each.rs:9:11: 9:20
    let mut _3: usize;                   // in scope 0 at ui/binding/pattern-bound-var-in-for-each.rs:9:16: 9:19
    let _4: usize;                       // in scope 0 at ui/binding/pattern-bound-var-in-for-each.rs:10:12: 10:18
    let mut _5: std::ops::Range<usize>;  // in scope 0 at ui/binding/pattern-bound-var-in-for-each.rs:11:19: 11:36
    let mut _6: std::ops::Range<usize>;  // in scope 0 at ui/binding/pattern-bound-var-in-for-each.rs:11:19: 11:36
    let mut _8: std::option::Option<usize>; // in scope 0 at ui/binding/pattern-bound-var-in-for-each.rs:11:19: 11:36
    let mut _9: &mut std::ops::Range<usize>; // in scope 0 at ui/binding/pattern-bound-var-in-for-each.rs:11:19: 11:36
    let mut _10: &mut std::ops::Range<usize>; // in scope 0 at ui/binding/pattern-bound-var-in-for-each.rs:11:19: 11:36
    let mut _11: isize;                  // in scope 0 at ui/binding/pattern-bound-var-in-for-each.rs:11:9: 14:10
    let mut _14: (&usize, &usize);       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _15: &usize;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let mut _16: &usize;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _19: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    let mut _20: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
    let mut _21: usize;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
    let mut _22: usize;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
    let _24: !;                          // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
    let mut _25: core::panicking::AssertKind; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
    let mut _26: &usize;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let _27: &usize;                     // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let mut _28: &usize;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let _29: &usize;                     // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let mut _30: std::option::Option<std::fmt::Arguments<'_>>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
    scope 1 {
        debug src_id => _4;              // in scope 1 at ui/binding/pattern-bound-var-in-for-each.rs:10:12: 10:18
        let mut _7: std::ops::Range<usize>; // in scope 1 at ui/binding/pattern-bound-var-in-for-each.rs:11:19: 11:36
        scope 2 {
            debug iter => _7;            // in scope 2 at ui/binding/pattern-bound-var-in-for-each.rs:11:19: 11:36
            let _12: usize;              // in scope 2 at ui/binding/pattern-bound-var-in-for-each.rs:11:13: 11:15
            scope 3 {
                debug _i => _12;         // in scope 3 at ui/binding/pattern-bound-var-in-for-each.rs:11:13: 11:15
                let _13: usize;          // in scope 3 at ui/binding/pattern-bound-var-in-for-each.rs:12:17: 12:20
                scope 4 {
                    debug yyy => _13;    // in scope 4 at ui/binding/pattern-bound-var-in-for-each.rs:12:17: 12:20
                    let _17: &usize;     // in scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
                    let _18: &usize;     // in scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
                    let mut _31: &usize; // in scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                    scope 5 {
                        debug left_val => _17; // in scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
                        debug right_val => _18; // in scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
                        let _23: core::panicking::AssertKind; // in scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                        scope 6 {
                            debug kind => _23; // in scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                        }
                    }
                }
            }
        }
    }

    bb0: {
        _3 = _1;                         // scope 0 at ui/binding/pattern-bound-var-in-for-each.rs:9:16: 9:19
        _2 = Option::<usize>::Some(move _3); // scope 0 at ui/binding/pattern-bound-var-in-for-each.rs:9:11: 9:20
        _4 = ((_2 as Some).0: usize);    // scope 0 at ui/binding/pattern-bound-var-in-for-each.rs:10:12: 10:18
        _6 = std::ops::Range::<usize> { start: const 0_usize, end: const 10_usize }; // scope 1 at ui/binding/pattern-bound-var-in-for-each.rs:11:19: 11:36
        _5 = <std::ops::Range<usize> as IntoIterator>::into_iter(move _6) -> bb1; // scope 1 at ui/binding/pattern-bound-var-in-for-each.rs:11:19: 11:36
                                         // mir::Constant
                                         // + span: ui/binding/pattern-bound-var-in-for-each.rs:11:19: 11:36
                                         // + literal: Const { ty: fn(std::ops::Range<usize>) -> <std::ops::Range<usize> as IntoIterator>::IntoIter {<std::ops::Range<usize> as IntoIterator>::into_iter}, val: Value(<ZST>) }
    }

    bb1: {
        _7 = move _5;                    // scope 1 at ui/binding/pattern-bound-var-in-for-each.rs:11:19: 11:36
        goto -> bb2;                     // scope 2 at ui/binding/pattern-bound-var-in-for-each.rs:11:9: 14:10
    }

    bb2: {
        _10 = &mut _7;                   // scope 2 at ui/binding/pattern-bound-var-in-for-each.rs:11:19: 11:36
        _9 = &mut (*_10);                // scope 2 at ui/binding/pattern-bound-var-in-for-each.rs:11:19: 11:36
        _8 = <std::ops::Range<usize> as Iterator>::next(move _9) -> bb3; // scope 2 at ui/binding/pattern-bound-var-in-for-each.rs:11:19: 11:36
                                         // mir::Constant
                                         // + span: ui/binding/pattern-bound-var-in-for-each.rs:11:19: 11:36
                                         // + literal: Const { ty: for<'a> fn(&'a mut std::ops::Range<usize>) -> Option<<std::ops::Range<usize> as Iterator>::Item> {<std::ops::Range<usize> as Iterator>::next}, val: Value(<ZST>) }
    }

    bb3: {
        _11 = discriminant(_8);          // scope 2 at ui/binding/pattern-bound-var-in-for-each.rs:11:19: 11:36
        switchInt(move _11) -> [0: bb7, 1: bb4, otherwise: bb5]; // scope 2 at ui/binding/pattern-bound-var-in-for-each.rs:11:19: 11:36
    }

    bb4: {
        _12 = ((_8 as Some).0: usize);   // scope 2 at ui/binding/pattern-bound-var-in-for-each.rs:11:13: 11:15
        _13 = _4;                        // scope 3 at ui/binding/pattern-bound-var-in-for-each.rs:12:23: 12:29
        _15 = &_13;                      // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _31 = const _;                   // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // + literal: Const { ty: &usize, val: Unevaluated(foo, [], Some(promoted[0])) }
        _16 = _31;                       // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _14 = (move _15, move _16);      // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _17 = (_14.0: &usize);           // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _18 = (_14.1: &usize);           // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _21 = (*_17);                    // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
        _22 = const 0_usize;             // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
        _20 = Eq(move _21, move _22);    // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
        _19 = Not(move _20);             // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
        switchInt(move _19) -> [0: bb2, otherwise: bb6]; // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    }

    bb5: {
        unreachable;                     // scope 2 at ui/binding/pattern-bound-var-in-for-each.rs:11:19: 11:36
    }

    bb6: {
        _23 = const core::panicking::AssertKind::Eq; // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _25 = const core::panicking::AssertKind::Eq; // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _27 = _17;                       // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _26 = _27;                       // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _29 = _18;                       // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _28 = _29;                       // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _30 = Option::<Arguments<'_>>::None; // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
        _24 = core::panicking::assert_failed::<usize, usize>(move _25, move _26, move _28, move _30); // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:53
                                         // + literal: Const { ty: for<'a, 'b, 'c> fn(core::panicking::AssertKind, &'a usize, &'b usize, Option<Arguments<'c>>) -> ! {core::panicking::assert_failed::<usize, usize>}, val: Value(<ZST>) }
    }

    bb7: {
        return;                          // scope 0 at ui/binding/pattern-bound-var-in-for-each.rs:18:2: 18:2
    }
}

promoted[0] in foo: &usize = {
    let mut _0: &usize;                  // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _1: usize;                   // in scope 0 at ui/binding/pattern-bound-var-in-for-each.rs:13:29: 13:36

    bb0: {
        _1 = const 0_usize;              // scope 0 at ui/binding/pattern-bound-var-in-for-each.rs:13:29: 13:36
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    }
}

fn main() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/binding/pattern-bound-var-in-for-each.rs:20:15: 20:15
    let _1: ();                          // in scope 0 at ui/binding/pattern-bound-var-in-for-each.rs:20:17: 20:29

    bb0: {
        _1 = foo(const 0_usize) -> bb1;  // scope 0 at ui/binding/pattern-bound-var-in-for-each.rs:20:17: 20:29
                                         // mir::Constant
                                         // + span: ui/binding/pattern-bound-var-in-for-each.rs:20:17: 20:20
                                         // + literal: Const { ty: fn(usize) {foo}, val: Value(<ZST>) }
    }

    bb1: {
        return;                          // scope 0 at ui/binding/pattern-bound-var-in-for-each.rs:20:32: 20:32
    }
}
