// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
fn a() -> isize {
    let mut _0: isize;                   // return place in scope 0 at ui/binding/match-bot-2.rs:5:11: 5:16

    bb0: {
        _0 = const 1_isize;              // scope 0 at ui/binding/match-bot-2.rs:5:32: 5:33
        return;                          // scope 0 at ui/binding/match-bot-2.rs:5:61: 5:61
    }
}

fn main() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/binding/match-bot-2.rs:6:15: 6:15
    let _1: isize;                       // in scope 0 at ui/binding/match-bot-2.rs:6:17: 6:20

    bb0: {
        _1 = a() -> bb1;                 // scope 0 at ui/binding/match-bot-2.rs:6:17: 6:20
                                         // mir::Constant
                                         // + span: ui/binding/match-bot-2.rs:6:17: 6:18
                                         // + literal: Const { ty: fn() -> isize {a}, val: Value(<ZST>) }
    }

    bb1: {
        return;                          // scope 0 at ui/binding/match-bot-2.rs:6:23: 6:23
    }
}
