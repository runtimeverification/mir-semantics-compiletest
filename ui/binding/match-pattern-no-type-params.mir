// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
fn foo(_1: maybe<isize>) -> () {
    debug x => _1;                       // in scope 0 at ui/binding/match-pattern-no-type-params.rs:7:8: 7:9
    let mut _0: ();                      // return place in scope 0 at ui/binding/match-pattern-no-type-params.rs:7:25: 7:25
    let mut _2: isize;                   // in scope 0 at ui/binding/match-pattern-no-type-params.rs:9:9: 9:23
    let _3: ();                          // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:62
    let mut _4: std::fmt::Arguments<'_>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _5: &[&str];                 // in scope 0 at ui/binding/match-pattern-no-type-params.rs:9:38: 9:41
    let mut _6: &[&str; 1];              // in scope 0 at ui/binding/match-pattern-no-type-params.rs:9:38: 9:41
    let _7: &[&str; 1];                  // in scope 0 at ui/binding/match-pattern-no-type-params.rs:9:38: 9:41
    let mut _8: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _9: &[core::fmt::ArgumentV1<'_>; 0]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let _10: &[core::fmt::ArgumentV1<'_>; 0]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let _11: isize;                      // in scope 0 at ui/binding/match-pattern-no-type-params.rs:10:21: 10:23
    let _12: ();                         // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:62
    let mut _13: std::fmt::Arguments<'_>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _14: &[&str];                // in scope 0 at ui/binding/match-pattern-no-type-params.rs:10:39: 10:42
    let mut _15: &[&str; 1];             // in scope 0 at ui/binding/match-pattern-no-type-params.rs:10:39: 10:42
    let _16: &[&str; 1];                 // in scope 0 at ui/binding/match-pattern-no-type-params.rs:10:39: 10:42
    let mut _17: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _18: &[core::fmt::ArgumentV1<'_>; 0]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let _19: &[core::fmt::ArgumentV1<'_>; 0]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _20: &[core::fmt::ArgumentV1<'_>; 0]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _21: &[&str; 1];             // in scope 0 at ui/binding/match-pattern-no-type-params.rs:9:38: 9:41
    scope 1 {
        debug _a => _11;                 // in scope 1 at ui/binding/match-pattern-no-type-params.rs:10:21: 10:23
        let mut _22: &[core::fmt::ArgumentV1<'_>; 0]; // in scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        let mut _23: &[&str; 1];         // in scope 1 at ui/binding/match-pattern-no-type-params.rs:10:39: 10:42
    }

    bb0: {
        _2 = discriminant(_1);           // scope 0 at ui/binding/match-pattern-no-type-params.rs:8:11: 8:12
        switchInt(move _2) -> [0: bb3, 1: bb1, otherwise: bb2]; // scope 0 at ui/binding/match-pattern-no-type-params.rs:8:5: 8:12
    }

    bb1: {
        _11 = ((_1 as just).0: isize);   // scope 0 at ui/binding/match-pattern-no-type-params.rs:10:21: 10:23
        _23 = const _;                   // scope 1 at ui/binding/match-pattern-no-type-params.rs:10:39: 10:42
                                         // mir::Constant
                                         // + span: ui/binding/match-pattern-no-type-params.rs:10:39: 10:42
                                         // + literal: Const { ty: &[&str; 1], val: Unevaluated(foo, [], Some(promoted[3])) }
        _16 = _23;                       // scope 1 at ui/binding/match-pattern-no-type-params.rs:10:39: 10:42
        _15 = _16;                       // scope 1 at ui/binding/match-pattern-no-type-params.rs:10:39: 10:42
        _14 = move _15 as &[&str] (Pointer(Unsize)); // scope 1 at ui/binding/match-pattern-no-type-params.rs:10:39: 10:42
        _22 = const _;                   // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // + literal: Const { ty: &[core::fmt::ArgumentV1<'_>; 0], val: Unevaluated(foo, [], Some(promoted[2])) }
        _19 = _22;                       // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _18 = _19;                       // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _17 = move _18 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _13 = Arguments::<'_>::new_v1(move _14, move _17) -> bb5; // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // + user_ty: UserType(1)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb2: {
        unreachable;                     // scope 0 at ui/binding/match-pattern-no-type-params.rs:8:11: 8:12
    }

    bb3: {
        _21 = const _;                   // scope 0 at ui/binding/match-pattern-no-type-params.rs:9:38: 9:41
                                         // mir::Constant
                                         // + span: ui/binding/match-pattern-no-type-params.rs:9:38: 9:41
                                         // + literal: Const { ty: &[&str; 1], val: Unevaluated(foo, [], Some(promoted[1])) }
        _7 = _21;                        // scope 0 at ui/binding/match-pattern-no-type-params.rs:9:38: 9:41
        _6 = _7;                         // scope 0 at ui/binding/match-pattern-no-type-params.rs:9:38: 9:41
        _5 = move _6 as &[&str] (Pointer(Unsize)); // scope 0 at ui/binding/match-pattern-no-type-params.rs:9:38: 9:41
        _20 = const _;                   // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // + literal: Const { ty: &[core::fmt::ArgumentV1<'_>; 0], val: Unevaluated(foo, [], Some(promoted[0])) }
        _10 = _20;                       // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _9 = _10;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _8 = move _9 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _4 = Arguments::<'_>::new_v1(move _5, move _8) -> bb4; // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb4: {
        _3 = _print(move _4) -> bb6;     // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:62
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:27
                                         // + literal: Const { ty: for<'a> fn(Arguments<'a>) {_print}, val: Value(<ZST>) }
    }

    bb5: {
        _12 = _print(move _13) -> bb6;   // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:62
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:27
                                         // + literal: Const { ty: for<'a> fn(Arguments<'a>) {_print}, val: Value(<ZST>) }
    }

    bb6: {
        return;                          // scope 0 at ui/binding/match-pattern-no-type-params.rs:12:2: 12:2
    }
}

promoted[0] in foo: &[core::fmt::ArgumentV1<'_>; 0] = {
    let mut _0: &[core::fmt::ArgumentV1<'_>; 0]; // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _1: [core::fmt::ArgumentV1<'_>; 0]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61

    bb0: {
        _1 = [];                         // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    }
}

promoted[1] in foo: &[&str; 1] = {
    let mut _0: &[&str; 1];              // return place in scope 0 at ui/binding/match-pattern-no-type-params.rs:9:38: 9:41
    let mut _1: [&str; 1];               // in scope 0 at ui/binding/match-pattern-no-type-params.rs:9:38: 9:41

    bb0: {
        _1 = [const "A\n"];              // scope 0 at ui/binding/match-pattern-no-type-params.rs:9:38: 9:41
                                         // mir::Constant
                                         // + span: ui/binding/match-pattern-no-type-params.rs:9:38: 9:41
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at ui/binding/match-pattern-no-type-params.rs:9:38: 9:41
        return;                          // scope 0 at ui/binding/match-pattern-no-type-params.rs:9:38: 9:41
    }
}

promoted[2] in foo: &[core::fmt::ArgumentV1<'_>; 0] = {
    let mut _0: &[core::fmt::ArgumentV1<'_>; 0]; // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _1: [core::fmt::ArgumentV1<'_>; 0]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61

    bb0: {
        _1 = [];                         // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    }
}

promoted[3] in foo: &[&str; 1] = {
    let mut _0: &[&str; 1];              // return place in scope 0 at ui/binding/match-pattern-no-type-params.rs:10:39: 10:42
    let mut _1: [&str; 1];               // in scope 0 at ui/binding/match-pattern-no-type-params.rs:10:39: 10:42

    bb0: {
        _1 = [const "B\n"];              // scope 0 at ui/binding/match-pattern-no-type-params.rs:10:39: 10:42
                                         // mir::Constant
                                         // + span: ui/binding/match-pattern-no-type-params.rs:10:39: 10:42
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at ui/binding/match-pattern-no-type-params.rs:10:39: 10:42
        return;                          // scope 0 at ui/binding/match-pattern-no-type-params.rs:10:39: 10:42
    }
}

fn main() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/binding/match-pattern-no-type-params.rs:14:15: 14:15

    bb0: {
        return;                          // scope 0 at ui/binding/match-pattern-no-type-params.rs:14:18: 14:18
    }
}

fn maybe::just(_1: T) -> maybe<T> {
    let mut _0: maybe<T>;                // return place in scope 0 at ui/binding/match-pattern-no-type-params.rs:5:26: 5:30

    bb0: {
        _0 = maybe::<T>::just(move _1);  // scope 0 at ui/binding/match-pattern-no-type-params.rs:5:26: 5:30
        return;                          // scope 0 at ui/binding/match-pattern-no-type-params.rs:5:26: 5:30
    }
}

// MIR FOR CTFE
fn maybe::just(_1: T) -> maybe<T> {
    let mut _0: maybe<T>;                // return place in scope 0 at ui/binding/match-pattern-no-type-params.rs:5:26: 5:30

    bb0: {
        _0 = maybe::<T>::just(move _1);  // scope 0 at ui/binding/match-pattern-no-type-params.rs:5:26: 5:30
        return;                          // scope 0 at ui/binding/match-pattern-no-type-params.rs:5:26: 5:30
    }
}
