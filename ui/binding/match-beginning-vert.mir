// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
fn main() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/binding/match-beginning-vert.rs:11:11: 11:11
    let mut _1: std::slice::Iter<'_, Foo>; // in scope 0 at ui/binding/match-beginning-vert.rs:12:16: 12:32
    let mut _2: &[Foo; 5];               // in scope 0 at ui/binding/match-beginning-vert.rs:12:16: 12:32
    let mut _3: std::slice::Iter<'_, Foo>; // in scope 0 at ui/binding/match-beginning-vert.rs:12:16: 12:32
    let mut _4: std::option::Option<&Foo>; // in scope 0 at ui/binding/match-beginning-vert.rs:12:16: 12:32
    let mut _5: &mut std::slice::Iter<'_, Foo>; // in scope 0 at ui/binding/match-beginning-vert.rs:12:16: 12:32
    let mut _6: &mut std::slice::Iter<'_, Foo>; // in scope 0 at ui/binding/match-beginning-vert.rs:12:16: 12:32
    let mut _7: isize;                   // in scope 0 at ui/binding/match-beginning-vert.rs:12:5: 18:6
    let mut _9: isize;                   // in scope 0 at ui/binding/match-beginning-vert.rs:14:15: 14:16
    let _10: ();                         // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:62
    let mut _11: std::fmt::Arguments<'_>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _12: &[&str];                // in scope 0 at ui/binding/match-beginning-vert.rs:14:29: 14:32
    let mut _13: &[&str; 1];             // in scope 0 at ui/binding/match-beginning-vert.rs:14:29: 14:32
    let _14: &[&str; 1];                 // in scope 0 at ui/binding/match-beginning-vert.rs:14:29: 14:32
    let mut _15: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _16: &[core::fmt::ArgumentV1<'_>; 0]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let _17: &[core::fmt::ArgumentV1<'_>; 0]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let _18: ();                         // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:62
    let mut _19: std::fmt::Arguments<'_>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _20: &[&str];                // in scope 0 at ui/binding/match-beginning-vert.rs:15:42: 15:47
    let mut _21: &[&str; 1];             // in scope 0 at ui/binding/match-beginning-vert.rs:15:42: 15:47
    let _22: &[&str; 1];                 // in scope 0 at ui/binding/match-beginning-vert.rs:15:42: 15:47
    let mut _23: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _24: &[core::fmt::ArgumentV1<'_>; 0]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let _25: &[core::fmt::ArgumentV1<'_>; 0]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _30: &[Foo; 5];              // in scope 0 at ui/binding/match-beginning-vert.rs:12:16: 12:32
    scope 1 {
        debug iter => _3;                // in scope 1 at ui/binding/match-beginning-vert.rs:12:16: 12:32
        let _8: &Foo;                    // in scope 1 at ui/binding/match-beginning-vert.rs:12:9: 12:12
        scope 2 {
            debug foo => _8;             // in scope 2 at ui/binding/match-beginning-vert.rs:12:9: 12:12
            let mut _26: &[core::fmt::ArgumentV1<'_>; 0]; // in scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
            let mut _27: &[&str; 1];     // in scope 2 at ui/binding/match-beginning-vert.rs:14:29: 14:32
            let mut _28: &[core::fmt::ArgumentV1<'_>; 0]; // in scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
            let mut _29: &[&str; 1];     // in scope 2 at ui/binding/match-beginning-vert.rs:15:42: 15:47
        }
    }

    bb0: {
        _30 = const _;                   // scope 0 at ui/binding/match-beginning-vert.rs:12:16: 12:32
                                         // mir::Constant
                                         // + span: ui/binding/match-beginning-vert.rs:12:16: 12:32
                                         // + literal: Const { ty: &[Foo; 5], val: Unevaluated(main, [], Some(promoted[4])) }
        _2 = _30;                        // scope 0 at ui/binding/match-beginning-vert.rs:12:16: 12:32
        _1 = <&[Foo; 5] as IntoIterator>::into_iter(move _2) -> bb1; // scope 0 at ui/binding/match-beginning-vert.rs:12:16: 12:32
                                         // mir::Constant
                                         // + span: ui/binding/match-beginning-vert.rs:12:16: 12:32
                                         // + literal: Const { ty: fn(&[Foo; 5]) -> <&[Foo; 5] as IntoIterator>::IntoIter {<&[Foo; 5] as IntoIterator>::into_iter}, val: Value(<ZST>) }
    }

    bb1: {
        _3 = move _1;                    // scope 0 at ui/binding/match-beginning-vert.rs:12:16: 12:32
        goto -> bb2;                     // scope 1 at ui/binding/match-beginning-vert.rs:12:5: 18:6
    }

    bb2: {
        _6 = &mut _3;                    // scope 1 at ui/binding/match-beginning-vert.rs:12:16: 12:32
        _5 = &mut (*_6);                 // scope 1 at ui/binding/match-beginning-vert.rs:12:16: 12:32
        _4 = <std::slice::Iter<'_, Foo> as Iterator>::next(move _5) -> bb3; // scope 1 at ui/binding/match-beginning-vert.rs:12:16: 12:32
                                         // mir::Constant
                                         // + span: ui/binding/match-beginning-vert.rs:12:16: 12:32
                                         // + literal: Const { ty: for<'a> fn(&'a mut std::slice::Iter<'_, Foo>) -> Option<<std::slice::Iter<'_, Foo> as Iterator>::Item> {<std::slice::Iter<'_, Foo> as Iterator>::next}, val: Value(<ZST>) }
    }

    bb3: {
        _7 = discriminant(_4);           // scope 1 at ui/binding/match-beginning-vert.rs:12:16: 12:32
        switchInt(move _7) -> [0: bb6, 1: bb4, otherwise: bb5]; // scope 1 at ui/binding/match-beginning-vert.rs:12:16: 12:32
    }

    bb4: {
        _8 = ((_4 as Some).0: &Foo);     // scope 1 at ui/binding/match-beginning-vert.rs:12:9: 12:12
        _9 = discriminant((*_8));        // scope 2 at ui/binding/match-beginning-vert.rs:13:15: 13:19
        switchInt(move _9) -> [0: bb7, 1: bb10, 2: bb11, otherwise: bb2]; // scope 2 at ui/binding/match-beginning-vert.rs:13:9: 13:19
    }

    bb5: {
        unreachable;                     // scope 1 at ui/binding/match-beginning-vert.rs:12:16: 12:32
    }

    bb6: {
        return;                          // scope 0 at ui/binding/match-beginning-vert.rs:19:2: 19:2
    }

    bb7: {
        _27 = const _;                   // scope 2 at ui/binding/match-beginning-vert.rs:14:29: 14:32
                                         // mir::Constant
                                         // + span: ui/binding/match-beginning-vert.rs:14:29: 14:32
                                         // + literal: Const { ty: &[&str; 1], val: Unevaluated(main, [], Some(promoted[1])) }
        _14 = _27;                       // scope 2 at ui/binding/match-beginning-vert.rs:14:29: 14:32
        _13 = _14;                       // scope 2 at ui/binding/match-beginning-vert.rs:14:29: 14:32
        _12 = move _13 as &[&str] (Pointer(Unsize)); // scope 2 at ui/binding/match-beginning-vert.rs:14:29: 14:32
        _26 = const _;                   // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // + literal: Const { ty: &[core::fmt::ArgumentV1<'_>; 0], val: Unevaluated(main, [], Some(promoted[0])) }
        _17 = _26;                       // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _16 = _17;                       // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _15 = move _16 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _11 = Arguments::<'_>::new_v1(move _12, move _15) -> bb8; // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb8: {
        _10 = _print(move _11) -> bb2;   // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:62
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:27
                                         // + literal: Const { ty: for<'a> fn(Arguments<'a>) {_print}, val: Value(<ZST>) }
    }

    bb9: {
        _29 = const _;                   // scope 2 at ui/binding/match-beginning-vert.rs:15:42: 15:47
                                         // mir::Constant
                                         // + span: ui/binding/match-beginning-vert.rs:15:42: 15:47
                                         // + literal: Const { ty: &[&str; 1], val: Unevaluated(main, [], Some(promoted[3])) }
        _22 = _29;                       // scope 2 at ui/binding/match-beginning-vert.rs:15:42: 15:47
        _21 = _22;                       // scope 2 at ui/binding/match-beginning-vert.rs:15:42: 15:47
        _20 = move _21 as &[&str] (Pointer(Unsize)); // scope 2 at ui/binding/match-beginning-vert.rs:15:42: 15:47
        _28 = const _;                   // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // + literal: Const { ty: &[core::fmt::ArgumentV1<'_>; 0], val: Unevaluated(main, [], Some(promoted[2])) }
        _25 = _28;                       // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _24 = _25;                       // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _23 = move _24 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _19 = Arguments::<'_>::new_v1(move _20, move _23) -> bb12; // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // + user_ty: UserType(1)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb10: {
        goto -> bb9;                     // scope 2 at ui/binding/match-beginning-vert.rs:15:24: 15:29
    }

    bb11: {
        goto -> bb9;                     // scope 2 at ui/binding/match-beginning-vert.rs:15:24: 15:29
    }

    bb12: {
        _18 = _print(move _19) -> bb2;   // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:62
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:27
                                         // + literal: Const { ty: for<'a> fn(Arguments<'a>) {_print}, val: Value(<ZST>) }
    }
}

promoted[0] in main: &[core::fmt::ArgumentV1<'_>; 0] = {
    let mut _0: &[core::fmt::ArgumentV1<'_>; 0]; // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _1: [core::fmt::ArgumentV1<'_>; 0]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61

    bb0: {
        _1 = [];                         // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    }
}

promoted[1] in main: &[&str; 1] = {
    let mut _0: &[&str; 1];              // return place in scope 0 at ui/binding/match-beginning-vert.rs:14:29: 14:32
    let mut _1: [&str; 1];               // in scope 0 at ui/binding/match-beginning-vert.rs:14:29: 14:32

    bb0: {
        _1 = [const "A\n"];              // scope 0 at ui/binding/match-beginning-vert.rs:14:29: 14:32
                                         // mir::Constant
                                         // + span: ui/binding/match-beginning-vert.rs:14:29: 14:32
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at ui/binding/match-beginning-vert.rs:14:29: 14:32
        return;                          // scope 0 at ui/binding/match-beginning-vert.rs:14:29: 14:32
    }
}

promoted[2] in main: &[core::fmt::ArgumentV1<'_>; 0] = {
    let mut _0: &[core::fmt::ArgumentV1<'_>; 0]; // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _1: [core::fmt::ArgumentV1<'_>; 0]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61

    bb0: {
        _1 = [];                         // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    }
}

promoted[3] in main: &[&str; 1] = {
    let mut _0: &[&str; 1];              // return place in scope 0 at ui/binding/match-beginning-vert.rs:15:42: 15:47
    let mut _1: [&str; 1];               // in scope 0 at ui/binding/match-beginning-vert.rs:15:42: 15:47

    bb0: {
        _1 = [const "BC!\n"];            // scope 0 at ui/binding/match-beginning-vert.rs:15:42: 15:47
                                         // mir::Constant
                                         // + span: ui/binding/match-beginning-vert.rs:15:42: 15:47
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at ui/binding/match-beginning-vert.rs:15:42: 15:47
        return;                          // scope 0 at ui/binding/match-beginning-vert.rs:15:42: 15:47
    }
}

promoted[4] in main: &[Foo; 5] = {
    let mut _0: &[Foo; 5];               // return place in scope 0 at ui/binding/match-beginning-vert.rs:12:16: 12:32
    let mut _1: [Foo; 5];                // in scope 0 at ui/binding/match-beginning-vert.rs:12:17: 12:32
    let mut _2: Foo;                     // in scope 0 at ui/binding/match-beginning-vert.rs:12:18: 12:19
    let mut _3: Foo;                     // in scope 0 at ui/binding/match-beginning-vert.rs:12:21: 12:22
    let mut _4: Foo;                     // in scope 0 at ui/binding/match-beginning-vert.rs:12:24: 12:25
    let mut _5: Foo;                     // in scope 0 at ui/binding/match-beginning-vert.rs:12:27: 12:28
    let mut _6: Foo;                     // in scope 0 at ui/binding/match-beginning-vert.rs:12:30: 12:31

    bb0: {
        _2 = Foo::A;                     // scope 0 at ui/binding/match-beginning-vert.rs:12:18: 12:19
        _3 = Foo::B;                     // scope 0 at ui/binding/match-beginning-vert.rs:12:21: 12:22
        _4 = Foo::C;                     // scope 0 at ui/binding/match-beginning-vert.rs:12:24: 12:25
        _5 = Foo::D;                     // scope 0 at ui/binding/match-beginning-vert.rs:12:27: 12:28
        _6 = Foo::E;                     // scope 0 at ui/binding/match-beginning-vert.rs:12:30: 12:31
        _1 = [move _2, move _3, move _4, move _5, move _6]; // scope 0 at ui/binding/match-beginning-vert.rs:12:17: 12:32
        _0 = &_1;                        // scope 0 at ui/binding/match-beginning-vert.rs:12:16: 12:32
        return;                          // scope 0 at ui/binding/match-beginning-vert.rs:12:16: 12:32
    }
}
