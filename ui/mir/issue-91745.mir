// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
fn <impl at ui/mir/issue-91745.rs:12:1: 12:21>::broken(_1: &T) -> () {
    debug self => _1;                    // in scope 0 at ui/mir/issue-91745.rs:14:15: 14:20
    let mut _0: ();                      // return place in scope 0 at ui/mir/issue-91745.rs:14:22: 14:22
    let _2: <() as Foo>::Bar;            // in scope 0 at ui/mir/issue-91745.rs:15:13: 15:15
    scope 1 {
        debug _x => _2;                  // in scope 1 at ui/mir/issue-91745.rs:15:13: 15:15
    }

    bb0: {
        return;                          // scope 0 at ui/mir/issue-91745.rs:16:6: 16:6
    }
}

fn main() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/mir/issue-91745.rs:19:11: 19:11
    let _1: &dyn Broken<Assoc = ()>;     // in scope 0 at ui/mir/issue-91745.rs:20:9: 20:11
    let mut _2: &();                     // in scope 0 at ui/mir/issue-91745.rs:20:37: 20:40
    let _3: &();                         // in scope 0 at ui/mir/issue-91745.rs:20:37: 20:40
    let mut _4: &();                     // in scope 0 at ui/mir/issue-91745.rs:20:37: 20:40
    scope 1 {
        debug _m => _1;                  // in scope 1 at ui/mir/issue-91745.rs:20:9: 20:11
    }

    bb0: {
        _4 = const _;                    // scope 0 at ui/mir/issue-91745.rs:20:37: 20:40
                                         // mir::Constant
                                         // + span: ui/mir/issue-91745.rs:20:37: 20:40
                                         // + literal: Const { ty: &(), val: Unevaluated(main, [], Some(promoted[0])) }
        _3 = _4;                         // scope 0 at ui/mir/issue-91745.rs:20:37: 20:40
        _2 = _3;                         // scope 0 at ui/mir/issue-91745.rs:20:37: 20:40
        _1 = move _2 as &dyn Broken<Assoc = ()> (Pointer(Unsize)); // scope 0 at ui/mir/issue-91745.rs:20:37: 20:40
        return;                          // scope 0 at ui/mir/issue-91745.rs:21:2: 21:2
    }
}

promoted[0] in main: &() = {
    let mut _0: &();                     // return place in scope 0 at ui/mir/issue-91745.rs:20:37: 20:40
    let mut _1: ();                      // in scope 0 at ui/mir/issue-91745.rs:20:38: 20:40

    bb0: {
        _1 = ();                         // scope 0 at ui/mir/issue-91745.rs:20:38: 20:40
        _0 = &_1;                        // scope 0 at ui/mir/issue-91745.rs:20:37: 20:40
        return;                          // scope 0 at ui/mir/issue-91745.rs:20:37: 20:40
    }
}
