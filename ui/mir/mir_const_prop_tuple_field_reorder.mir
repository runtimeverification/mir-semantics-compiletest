// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
fn wrong_index() -> isize {
    let mut _0: isize;                   // return place in scope 0 at ui/mir/mir_const_prop_tuple_field_reorder.rs:16:13: 16:14
    let mut _1: (FooEnum, isize);        // in scope 0 at ui/mir/mir_const_prop_tuple_field_reorder.rs:16:18: 16:51
    let mut _2: (FooEnum, isize);        // in scope 0 at ui/mir/mir_const_prop_tuple_field_reorder.rs:16:21: 16:50
    scope 1 {
        debug b => _0;                   // in scope 1 at ui/mir/mir_const_prop_tuple_field_reorder.rs:16:13: 16:14
    }

    bb0: {
        _2 = const (FooEnum::VariantBar, 4919_isize); // scope 0 at ui/mir/mir_const_prop_tuple_field_reorder.rs:16:21: 16:50
                                         // mir::Constant
                                         // + span: ui/mir/mir_const_prop_tuple_field_reorder.rs:16:21: 16:50
                                         // + literal: Const { ty: (FooEnum, isize), val: Value(ByRef(..)) }
        _1 = id::<(FooEnum, isize)>(move _2) -> bb1; // scope 0 at ui/mir/mir_const_prop_tuple_field_reorder.rs:16:18: 16:51
                                         // mir::Constant
                                         // + span: ui/mir/mir_const_prop_tuple_field_reorder.rs:16:18: 16:20
                                         // + literal: Const { ty: fn((FooEnum, isize)) -> (FooEnum, isize) {id::<(FooEnum, isize)>}, val: Value(<ZST>) }
    }

    bb1: {
        _0 = (_1.1: isize);              // scope 0 at ui/mir/mir_const_prop_tuple_field_reorder.rs:16:13: 16:14
        return;                          // scope 0 at ui/mir/mir_const_prop_tuple_field_reorder.rs:18:2: 18:2
    }
}

fn wrong_index_two() -> isize {
    let mut _0: isize;                   // return place in scope 0 at ui/mir/mir_const_prop_tuple_field_reorder.rs:21:17: 21:18
    let mut _1: ((), (FooEnum, isize));  // in scope 0 at ui/mir/mir_const_prop_tuple_field_reorder.rs:21:23: 21:62
    let mut _2: ((), (FooEnum, isize));  // in scope 0 at ui/mir/mir_const_prop_tuple_field_reorder.rs:21:26: 21:61
    let mut _3: ();                      // in scope 0 at ui/mir/mir_const_prop_tuple_field_reorder.rs:21:27: 21:29
    let mut _4: (FooEnum, isize);        // in scope 0 at ui/mir/mir_const_prop_tuple_field_reorder.rs:21:31: 21:60
    scope 1 {
        debug b => _0;                   // in scope 1 at ui/mir/mir_const_prop_tuple_field_reorder.rs:21:17: 21:18
    }

    bb0: {
        _4 = const (FooEnum::VariantBar, 4920_isize); // scope 0 at ui/mir/mir_const_prop_tuple_field_reorder.rs:21:31: 21:60
                                         // mir::Constant
                                         // + span: ui/mir/mir_const_prop_tuple_field_reorder.rs:21:31: 21:60
                                         // + literal: Const { ty: (FooEnum, isize), val: Value(ByRef(..)) }
        _2 = (move _3, move _4);         // scope 0 at ui/mir/mir_const_prop_tuple_field_reorder.rs:21:26: 21:61
        _1 = id::<((), (FooEnum, isize))>(move _2) -> bb1; // scope 0 at ui/mir/mir_const_prop_tuple_field_reorder.rs:21:23: 21:62
                                         // mir::Constant
                                         // + span: ui/mir/mir_const_prop_tuple_field_reorder.rs:21:23: 21:25
                                         // + literal: Const { ty: fn(((), (FooEnum, isize))) -> ((), (FooEnum, isize)) {id::<((), (FooEnum, isize))>}, val: Value(<ZST>) }
    }

    bb1: {
        _0 = ((_1.1: (FooEnum, isize)).1: isize); // scope 0 at ui/mir/mir_const_prop_tuple_field_reorder.rs:21:17: 21:18
        return;                          // scope 0 at ui/mir/mir_const_prop_tuple_field_reorder.rs:23:2: 23:2
    }
}

fn id(_1: T) -> T {
    debug x => _1;                       // in scope 0 at ui/mir/mir_const_prop_tuple_field_reorder.rs:25:10: 25:11
    let mut _0: T;                       // return place in scope 0 at ui/mir/mir_const_prop_tuple_field_reorder.rs:25:19: 25:20

    bb0: {
        _0 = move _1;                    // scope 0 at ui/mir/mir_const_prop_tuple_field_reorder.rs:26:5: 26:6
        return;                          // scope 0 at ui/mir/mir_const_prop_tuple_field_reorder.rs:27:2: 27:2
    }
}
