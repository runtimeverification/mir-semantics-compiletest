// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
fn evaluate_reborrow_before_assign() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/mir/mir_assign_eval_order.rs:10:38: 10:38
    let mut _1: &i32;                    // in scope 0 at ui/mir/mir_assign_eval_order.rs:11:9: 11:14
    let mut _3: &i32;                    // in scope 0 at ui/mir/mir_assign_eval_order.rs:12:18: 12:20
    let mut _5: &i32;                    // in scope 0 at ui/mir/mir_assign_eval_order.rs:18:27: 18:28
    let mut _6: &mut &i32;               // in scope 0 at ui/mir/mir_assign_eval_order.rs:18:6: 18:24
    let mut _7: &i32;                    // in scope 0 at ui/mir/mir_assign_eval_order.rs:18:12: 18:13
    let mut _8: (&i32, &i32);            // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _9: &i32;                    // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let mut _10: &i32;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _14: (&i32, &i32);           // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _15: &i32;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let mut _16: &i32;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _19: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    let mut _20: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
    let mut _21: i32;                    // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
    let mut _22: i32;                    // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
    let _24: !;                          // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
    let mut _25: core::panicking::AssertKind; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
    let mut _26: &i32;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let _27: &i32;                       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let mut _28: &i32;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let _29: &i32;                       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let mut _30: std::option::Option<std::fmt::Arguments<'_>>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
    let mut _35: &i32;                   // in scope 0 at ui/mir/mir_assign_eval_order.rs:11:17: 11:19
    let mut _36: &i32;                   // in scope 0 at ui/mir/mir_assign_eval_order.rs:12:9: 12:10
    scope 1 {
        debug x => _1;                   // in scope 1 at ui/mir/mir_assign_eval_order.rs:11:9: 11:14
        let _2: &mut &i32;               // in scope 1 at ui/mir/mir_assign_eval_order.rs:12:9: 12:10
        let mut _34: &i32;               // in scope 1 at ui/mir/mir_assign_eval_order.rs:12:18: 12:20
        scope 2 {
            debug y => _2;               // in scope 2 at ui/mir/mir_assign_eval_order.rs:12:9: 12:10
            let _4: &i32;                // in scope 2 at ui/mir/mir_assign_eval_order.rs:13:9: 13:10
            let mut _33: &i32;           // in scope 2 at ui/mir/mir_assign_eval_order.rs:13:13: 13:15
            scope 3 {
                debug z => _4;           // in scope 3 at ui/mir/mir_assign_eval_order.rs:13:9: 13:10
                let _11: &i32;           // in scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
                let _12: &i32;           // in scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
                let _17: &i32;           // in scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
                let _18: &i32;           // in scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
                let mut _31: &i32;       // in scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                let mut _32: &i32;       // in scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                scope 4 {
                    debug left_val => _11; // in scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
                    debug right_val => _12; // in scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
                    let _13: core::panicking::AssertKind; // in scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                    scope 5 {
                        debug kind => _13; // in scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                    }
                }
                scope 6 {
                    debug left_val => _17; // in scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
                    debug right_val => _18; // in scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
                    let _23: core::panicking::AssertKind; // in scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                    scope 7 {
                        debug kind => _23; // in scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                    }
                }
            }
        }
    }

    bb0: {
        _35 = const _;                   // scope 0 at ui/mir/mir_assign_eval_order.rs:11:17: 11:19
                                         // mir::Constant
                                         // + span: ui/mir/mir_assign_eval_order.rs:11:17: 11:19
                                         // + literal: Const { ty: &i32, val: Unevaluated(evaluate_reborrow_before_assign, [], Some(promoted[4])) }
        _1 = _35;                        // scope 0 at ui/mir/mir_assign_eval_order.rs:11:17: 11:19
        _34 = const _;                   // scope 1 at ui/mir/mir_assign_eval_order.rs:12:18: 12:20
                                         // mir::Constant
                                         // + span: ui/mir/mir_assign_eval_order.rs:12:18: 12:20
                                         // + literal: Const { ty: &i32, val: Unevaluated(evaluate_reborrow_before_assign, [], Some(promoted[3])) }
        _3 = _34;                        // scope 1 at ui/mir/mir_assign_eval_order.rs:12:18: 12:20
        _2 = &mut _3;                    // scope 1 at ui/mir/mir_assign_eval_order.rs:12:13: 12:20
        _33 = const _;                   // scope 2 at ui/mir/mir_assign_eval_order.rs:13:13: 13:15
                                         // mir::Constant
                                         // + span: ui/mir/mir_assign_eval_order.rs:13:13: 13:15
                                         // + literal: Const { ty: &i32, val: Unevaluated(evaluate_reborrow_before_assign, [], Some(promoted[2])) }
        _4 = _33;                        // scope 2 at ui/mir/mir_assign_eval_order.rs:13:13: 13:15
        _5 = _1;                         // scope 3 at ui/mir/mir_assign_eval_order.rs:18:27: 18:28
        _7 = _4;                         // scope 3 at ui/mir/mir_assign_eval_order.rs:18:12: 18:13
        _1 = move _7;                    // scope 3 at ui/mir/mir_assign_eval_order.rs:18:8: 18:13
        _6 = &mut (*_2);                 // scope 3 at ui/mir/mir_assign_eval_order.rs:18:15: 18:22
        (*_6) = move _5;                 // scope 3 at ui/mir/mir_assign_eval_order.rs:18:5: 18:28
        _9 = _1;                         // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _32 = const _;                   // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // + literal: Const { ty: &i32, val: Unevaluated(evaluate_reborrow_before_assign, [], Some(promoted[1])) }
        _10 = _32;                       // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _8 = (move _9, move _10);        // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _11 = (_8.0: &i32);              // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _12 = (_8.1: &i32);              // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _36 = deref_copy (*_2);          // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _15 = _36;                       // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _31 = const _;                   // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // + literal: Const { ty: &i32, val: Unevaluated(evaluate_reborrow_before_assign, [], Some(promoted[0])) }
        _16 = _31;                       // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _14 = (move _15, move _16);      // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _17 = (_14.0: &i32);             // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _18 = (_14.1: &i32);             // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _21 = (*_17);                    // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
        _22 = const 1_i32;               // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
        _20 = Eq(move _21, move _22);    // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
        _19 = Not(move _20);             // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
        switchInt(move _19) -> [0: bb2, otherwise: bb1]; // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    }

    bb1: {
        _23 = const core::panicking::AssertKind::Eq; // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _25 = const core::panicking::AssertKind::Eq; // scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _27 = _17;                       // scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _26 = _27;                       // scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _29 = _18;                       // scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _28 = _29;                       // scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _30 = Option::<Arguments<'_>>::None; // scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
        _24 = core::panicking::assert_failed::<i32, i32>(move _25, move _26, move _28, move _30); // scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:53
                                         // + literal: Const { ty: for<'a, 'b, 'c> fn(core::panicking::AssertKind, &'a i32, &'b i32, Option<Arguments<'c>>) -> ! {core::panicking::assert_failed::<i32, i32>}, val: Value(<ZST>) }
    }

    bb2: {
        return;                          // scope 0 at ui/mir/mir_assign_eval_order.rs:21:2: 21:2
    }
}

promoted[0] in evaluate_reborrow_before_assign: &i32 = {
    let mut _0: &i32;                    // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _1: i32;                     // in scope 0 at ui/mir/mir_assign_eval_order.rs:20:21: 20:22

    bb0: {
        _1 = const 1_i32;                // scope 0 at ui/mir/mir_assign_eval_order.rs:20:21: 20:22
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    }
}

promoted[1] in evaluate_reborrow_before_assign: &i32 = {
    let mut _0: &i32;                    // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _1: i32;                     // in scope 0 at ui/mir/mir_assign_eval_order.rs:19:20: 19:21

    bb0: {
        _1 = const 3_i32;                // scope 0 at ui/mir/mir_assign_eval_order.rs:19:20: 19:21
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    }
}

promoted[2] in evaluate_reborrow_before_assign: &i32 = {
    let mut _0: &i32;                    // return place in scope 0 at ui/mir/mir_assign_eval_order.rs:13:13: 13:15
    let mut _1: i32;                     // in scope 0 at ui/mir/mir_assign_eval_order.rs:13:14: 13:15

    bb0: {
        _1 = const 3_i32;                // scope 0 at ui/mir/mir_assign_eval_order.rs:13:14: 13:15
        _0 = &_1;                        // scope 0 at ui/mir/mir_assign_eval_order.rs:13:13: 13:15
        return;                          // scope 0 at ui/mir/mir_assign_eval_order.rs:13:13: 13:15
    }
}

promoted[3] in evaluate_reborrow_before_assign: &i32 = {
    let mut _0: &i32;                    // return place in scope 0 at ui/mir/mir_assign_eval_order.rs:12:18: 12:20
    let mut _1: i32;                     // in scope 0 at ui/mir/mir_assign_eval_order.rs:12:19: 12:20

    bb0: {
        _1 = const 2_i32;                // scope 0 at ui/mir/mir_assign_eval_order.rs:12:19: 12:20
        _0 = &_1;                        // scope 0 at ui/mir/mir_assign_eval_order.rs:12:18: 12:20
        return;                          // scope 0 at ui/mir/mir_assign_eval_order.rs:12:18: 12:20
    }
}

promoted[4] in evaluate_reborrow_before_assign: &i32 = {
    let mut _0: &i32;                    // return place in scope 0 at ui/mir/mir_assign_eval_order.rs:11:17: 11:19
    let mut _1: i32;                     // in scope 0 at ui/mir/mir_assign_eval_order.rs:11:18: 11:19

    bb0: {
        _1 = const 1_i32;                // scope 0 at ui/mir/mir_assign_eval_order.rs:11:18: 11:19
        _0 = &_1;                        // scope 0 at ui/mir/mir_assign_eval_order.rs:11:17: 11:19
        return;                          // scope 0 at ui/mir/mir_assign_eval_order.rs:11:17: 11:19
    }
}

fn evaluate_mut_reborrow_before_assign() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/mir/mir_assign_eval_order.rs:23:42: 23:42
    let mut _1: &mut i32;                // in scope 0 at ui/mir/mir_assign_eval_order.rs:24:9: 24:14
    let mut _2: i32;                     // in scope 0 at ui/mir/mir_assign_eval_order.rs:24:22: 24:23
    let mut _4: &mut i32;                // in scope 0 at ui/mir/mir_assign_eval_order.rs:25:18: 25:24
    let mut _5: i32;                     // in scope 0 at ui/mir/mir_assign_eval_order.rs:25:23: 25:24
    let mut _7: i32;                     // in scope 0 at ui/mir/mir_assign_eval_order.rs:26:18: 26:19
    let mut _8: &mut i32;                // in scope 0 at ui/mir/mir_assign_eval_order.rs:27:27: 27:28
    let mut _9: &mut &mut i32;           // in scope 0 at ui/mir/mir_assign_eval_order.rs:27:6: 27:24
    let mut _10: &mut i32;               // in scope 0 at ui/mir/mir_assign_eval_order.rs:27:12: 27:13
    let mut _11: (&i32, &i32);           // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _12: &i32;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let mut _13: &i32;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _16: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    let mut _17: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
    let mut _18: i32;                    // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
    let mut _19: i32;                    // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
    let _21: !;                          // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
    let mut _22: core::panicking::AssertKind; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
    let mut _23: &i32;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let _24: &i32;                       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let mut _25: &i32;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let _26: &i32;                       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let mut _27: std::option::Option<std::fmt::Arguments<'_>>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
    let mut _28: (&i32, &i32);           // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _29: &i32;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let mut _30: &i32;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _33: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    let mut _34: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
    let mut _35: i32;                    // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
    let mut _36: i32;                    // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
    let _38: !;                          // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
    let mut _39: core::panicking::AssertKind; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
    let mut _40: &i32;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let _41: &i32;                       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let mut _42: &i32;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let _43: &i32;                       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let mut _44: std::option::Option<std::fmt::Arguments<'_>>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
    let mut _47: &mut i32;               // in scope 0 at ui/mir/mir_assign_eval_order.rs:25:9: 25:10
    scope 1 {
        debug x => _1;                   // in scope 1 at ui/mir/mir_assign_eval_order.rs:24:9: 24:14
        let _3: &mut &mut i32;           // in scope 1 at ui/mir/mir_assign_eval_order.rs:25:9: 25:10
        scope 2 {
            debug y => _3;               // in scope 2 at ui/mir/mir_assign_eval_order.rs:25:9: 25:10
            let _6: &mut i32;            // in scope 2 at ui/mir/mir_assign_eval_order.rs:26:9: 26:10
            scope 3 {
                debug z => _6;           // in scope 3 at ui/mir/mir_assign_eval_order.rs:26:9: 26:10
                let _14: &i32;           // in scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
                let _15: &i32;           // in scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
                let _31: &i32;           // in scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
                let _32: &i32;           // in scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
                let mut _45: &i32;       // in scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                let mut _46: &i32;       // in scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                scope 4 {
                    debug left_val => _14; // in scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
                    debug right_val => _15; // in scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
                    let _20: core::panicking::AssertKind; // in scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                    scope 5 {
                        debug kind => _20; // in scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                    }
                }
                scope 6 {
                    debug left_val => _31; // in scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
                    debug right_val => _32; // in scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
                    let _37: core::panicking::AssertKind; // in scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                    scope 7 {
                        debug kind => _37; // in scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                    }
                }
            }
        }
    }

    bb0: {
        _2 = const 1_i32;                // scope 0 at ui/mir/mir_assign_eval_order.rs:24:22: 24:23
        _1 = &mut _2;                    // scope 0 at ui/mir/mir_assign_eval_order.rs:24:17: 24:23
        _5 = const 2_i32;                // scope 1 at ui/mir/mir_assign_eval_order.rs:25:23: 25:24
        _4 = &mut _5;                    // scope 1 at ui/mir/mir_assign_eval_order.rs:25:18: 25:24
        _3 = &mut _4;                    // scope 1 at ui/mir/mir_assign_eval_order.rs:25:13: 25:24
        _7 = const 3_i32;                // scope 2 at ui/mir/mir_assign_eval_order.rs:26:18: 26:19
        _6 = &mut _7;                    // scope 2 at ui/mir/mir_assign_eval_order.rs:26:13: 26:19
        _8 = &mut (*_1);                 // scope 3 at ui/mir/mir_assign_eval_order.rs:27:27: 27:28
        _10 = &mut (*_6);                // scope 3 at ui/mir/mir_assign_eval_order.rs:27:12: 27:13
        _1 = move _10;                   // scope 3 at ui/mir/mir_assign_eval_order.rs:27:8: 27:13
        _9 = &mut (*_3);                 // scope 3 at ui/mir/mir_assign_eval_order.rs:27:15: 27:22
        (*_9) = move _8;                 // scope 3 at ui/mir/mir_assign_eval_order.rs:27:5: 27:28
        _12 = &(*_1);                    // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _46 = const _;                   // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // + literal: Const { ty: &i32, val: Unevaluated(evaluate_mut_reborrow_before_assign, [], Some(promoted[1])) }
        _13 = _46;                       // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _11 = (move _12, move _13);      // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _14 = (_11.0: &i32);             // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _15 = (_11.1: &i32);             // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _18 = (*_14);                    // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
        _19 = const 3_i32;               // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
        _17 = Eq(move _18, move _19);    // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
        _16 = Not(move _17);             // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
        switchInt(move _16) -> [0: bb2, otherwise: bb1]; // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    }

    bb1: {
        _20 = const core::panicking::AssertKind::Eq; // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _22 = const core::panicking::AssertKind::Eq; // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _24 = _14;                       // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _23 = _24;                       // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _26 = _15;                       // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _25 = _26;                       // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _27 = Option::<Arguments<'_>>::None; // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
        _21 = core::panicking::assert_failed::<i32, i32>(move _22, move _23, move _25, move _27); // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:53
                                         // + literal: Const { ty: for<'a, 'b, 'c> fn(core::panicking::AssertKind, &'a i32, &'b i32, Option<Arguments<'c>>) -> ! {core::panicking::assert_failed::<i32, i32>}, val: Value(<ZST>) }
    }

    bb2: {
        _47 = deref_copy (*_3);          // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _29 = &(*_47);                   // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _45 = const _;                   // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // + literal: Const { ty: &i32, val: Unevaluated(evaluate_mut_reborrow_before_assign, [], Some(promoted[0])) }
        _30 = _45;                       // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _28 = (move _29, move _30);      // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _31 = (_28.0: &i32);             // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _32 = (_28.1: &i32);             // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _35 = (*_31);                    // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
        _36 = const 1_i32;               // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
        _34 = Eq(move _35, move _36);    // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
        _33 = Not(move _34);             // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
        switchInt(move _33) -> [0: bb4, otherwise: bb3]; // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    }

    bb3: {
        _37 = const core::panicking::AssertKind::Eq; // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _39 = const core::panicking::AssertKind::Eq; // scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _41 = _31;                       // scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _40 = _41;                       // scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _43 = _32;                       // scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _42 = _43;                       // scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _44 = Option::<Arguments<'_>>::None; // scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
        _38 = core::panicking::assert_failed::<i32, i32>(move _39, move _40, move _42, move _44); // scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:53
                                         // + literal: Const { ty: for<'a, 'b, 'c> fn(core::panicking::AssertKind, &'a i32, &'b i32, Option<Arguments<'c>>) -> ! {core::panicking::assert_failed::<i32, i32>}, val: Value(<ZST>) }
    }

    bb4: {
        return;                          // scope 0 at ui/mir/mir_assign_eval_order.rs:30:2: 30:2
    }
}

promoted[0] in evaluate_mut_reborrow_before_assign: &i32 = {
    let mut _0: &i32;                    // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _1: i32;                     // in scope 0 at ui/mir/mir_assign_eval_order.rs:29:21: 29:22

    bb0: {
        _1 = const 1_i32;                // scope 0 at ui/mir/mir_assign_eval_order.rs:29:21: 29:22
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    }
}

promoted[1] in evaluate_mut_reborrow_before_assign: &i32 = {
    let mut _0: &i32;                    // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _1: i32;                     // in scope 0 at ui/mir/mir_assign_eval_order.rs:28:20: 28:21

    bb0: {
        _1 = const 3_i32;                // scope 0 at ui/mir/mir_assign_eval_order.rs:28:20: 28:21
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    }
}

fn evaluate_ref_to_temp_before_assign_slice() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/mir/mir_assign_eval_order.rs:34:47: 34:47
    let mut _1: &[S];                    // in scope 0 at ui/mir/mir_assign_eval_order.rs:35:9: 35:14
    let _2: &[S];                        // in scope 0 at ui/mir/mir_assign_eval_order.rs:35:18: 35:40
    let mut _3: &[S; 3];                 // in scope 0 at ui/mir/mir_assign_eval_order.rs:35:18: 35:36
    let mut _4: std::ops::RangeFull;     // in scope 0 at ui/mir/mir_assign_eval_order.rs:35:37: 35:39
    let mut _6: &S;                      // in scope 0 at ui/mir/mir_assign_eval_order.rs:36:18: 36:23
    let mut _7: &S;                      // in scope 0 at ui/mir/mir_assign_eval_order.rs:37:45: 37:50
    let _8: &S;                          // in scope 0 at ui/mir/mir_assign_eval_order.rs:37:45: 37:50
    let _9: usize;                       // in scope 0 at ui/mir/mir_assign_eval_order.rs:37:48: 37:49
    let mut _10: usize;                  // in scope 0 at ui/mir/mir_assign_eval_order.rs:37:46: 37:50
    let mut _11: bool;                   // in scope 0 at ui/mir/mir_assign_eval_order.rs:37:46: 37:50
    let mut _12: &mut &S;                // in scope 0 at ui/mir/mir_assign_eval_order.rs:37:6: 37:42
    let mut _13: &[S; 3];                // in scope 0 at ui/mir/mir_assign_eval_order.rs:37:12: 37:31
    let _14: &[S; 3];                    // in scope 0 at ui/mir/mir_assign_eval_order.rs:37:12: 37:31
    let mut _15: (&i32, &i32);           // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _16: &i32;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let mut _17: &i32;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _20: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    let mut _21: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
    let mut _22: i32;                    // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
    let mut _23: i32;                    // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
    let _25: !;                          // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
    let mut _26: core::panicking::AssertKind; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
    let mut _27: &i32;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let _28: &i32;                       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let mut _29: &i32;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let _30: &i32;                       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let mut _31: std::option::Option<std::fmt::Arguments<'_>>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
    let mut _32: (&i32, &i32);           // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _33: &i32;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let mut _34: &i32;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let _35: usize;                      // in scope 0 at ui/mir/mir_assign_eval_order.rs:39:21: 39:22
    let mut _36: usize;                  // in scope 0 at ui/mir/mir_assign_eval_order.rs:39:19: 39:23
    let mut _37: bool;                   // in scope 0 at ui/mir/mir_assign_eval_order.rs:39:19: 39:23
    let mut _40: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    let mut _41: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
    let mut _42: i32;                    // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
    let mut _43: i32;                    // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
    let _45: !;                          // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
    let mut _46: core::panicking::AssertKind; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
    let mut _47: &i32;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let _48: &i32;                       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let mut _49: &i32;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let _50: &i32;                       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let mut _51: std::option::Option<std::fmt::Arguments<'_>>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
    let mut _56: &[S; 3];                // in scope 0 at ui/mir/mir_assign_eval_order.rs:35:18: 35:36
    let mut _57: &S;                     // in scope 0 at ui/mir/mir_assign_eval_order.rs:36:9: 36:10
    scope 1 {
        debug x => _1;                   // in scope 1 at ui/mir/mir_assign_eval_order.rs:35:9: 35:14
        let _5: &mut &S;                 // in scope 1 at ui/mir/mir_assign_eval_order.rs:36:9: 36:10
        let mut _55: &S;                 // in scope 1 at ui/mir/mir_assign_eval_order.rs:36:18: 36:23
        scope 2 {
            debug y => _5;               // in scope 2 at ui/mir/mir_assign_eval_order.rs:36:9: 36:10
            let _18: &i32;               // in scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
            let _19: &i32;               // in scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
            let _38: &i32;               // in scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
            let _39: &i32;               // in scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
            let mut _52: &i32;           // in scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
            let mut _53: &i32;           // in scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
            let mut _54: &[S; 3];        // in scope 2 at ui/mir/mir_assign_eval_order.rs:37:12: 37:31
            scope 3 {
                debug left_val => _18;   // in scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
                debug right_val => _19;  // in scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
                let _24: core::panicking::AssertKind; // in scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                scope 4 {
                    debug kind => _24;   // in scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                }
            }
            scope 5 {
                debug left_val => _38;   // in scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
                debug right_val => _39;  // in scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
                let _44: core::panicking::AssertKind; // in scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                scope 6 {
                    debug kind => _44;   // in scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                }
            }
        }
    }

    bb0: {
        _56 = const _;                   // scope 0 at ui/mir/mir_assign_eval_order.rs:35:18: 35:36
                                         // mir::Constant
                                         // + span: ui/mir/mir_assign_eval_order.rs:35:18: 35:36
                                         // + literal: Const { ty: &[S; 3], val: Unevaluated(evaluate_ref_to_temp_before_assign_slice, [], Some(promoted[4])) }
        _3 = _56;                        // scope 0 at ui/mir/mir_assign_eval_order.rs:35:18: 35:36
        _2 = <[S; 3] as Index<RangeFull>>::index(move _3, move _4) -> bb1; // scope 0 at ui/mir/mir_assign_eval_order.rs:35:18: 35:40
                                         // mir::Constant
                                         // + span: ui/mir/mir_assign_eval_order.rs:35:18: 35:40
                                         // + literal: Const { ty: for<'a> fn(&'a [S; 3], RangeFull) -> &'a <[S; 3] as Index<RangeFull>>::Output {<[S; 3] as Index<RangeFull>>::index}, val: Value(<ZST>) }
    }

    bb1: {
        _1 = _2;                         // scope 0 at ui/mir/mir_assign_eval_order.rs:35:17: 35:40
        _55 = const _;                   // scope 1 at ui/mir/mir_assign_eval_order.rs:36:18: 36:23
                                         // mir::Constant
                                         // + span: ui/mir/mir_assign_eval_order.rs:36:18: 36:23
                                         // + literal: Const { ty: &S, val: Unevaluated(evaluate_ref_to_temp_before_assign_slice, [], Some(promoted[3])) }
        _6 = _55;                        // scope 1 at ui/mir/mir_assign_eval_order.rs:36:18: 36:23
        _5 = &mut _6;                    // scope 1 at ui/mir/mir_assign_eval_order.rs:36:13: 36:23
        _9 = const 2_usize;              // scope 2 at ui/mir/mir_assign_eval_order.rs:37:48: 37:49
        _10 = Len((*_1));                // scope 2 at ui/mir/mir_assign_eval_order.rs:37:46: 37:50
        _11 = Lt(_9, _10);               // scope 2 at ui/mir/mir_assign_eval_order.rs:37:46: 37:50
        assert(move _11, "index out of bounds: the length is {} but the index is {}", move _10, _9) -> bb2; // scope 2 at ui/mir/mir_assign_eval_order.rs:37:46: 37:50
    }

    bb2: {
        _8 = &(*_1)[_9];                 // scope 2 at ui/mir/mir_assign_eval_order.rs:37:45: 37:50
        _7 = _8;                         // scope 2 at ui/mir/mir_assign_eval_order.rs:37:45: 37:50
        _54 = const _;                   // scope 2 at ui/mir/mir_assign_eval_order.rs:37:12: 37:31
                                         // mir::Constant
                                         // + span: ui/mir/mir_assign_eval_order.rs:37:12: 37:31
                                         // + literal: Const { ty: &[S; 3], val: Unevaluated(evaluate_ref_to_temp_before_assign_slice, [], Some(promoted[2])) }
        _14 = _54;                       // scope 2 at ui/mir/mir_assign_eval_order.rs:37:12: 37:31
        _13 = _14;                       // scope 2 at ui/mir/mir_assign_eval_order.rs:37:12: 37:31
        _1 = move _13 as &[S] (Pointer(Unsize)); // scope 2 at ui/mir/mir_assign_eval_order.rs:37:8: 37:31
        _12 = &mut (*_5);                // scope 2 at ui/mir/mir_assign_eval_order.rs:37:33: 37:40
        (*_12) = move _7;                // scope 2 at ui/mir/mir_assign_eval_order.rs:37:5: 37:50
        _53 = const _;                   // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
                                         // + literal: Const { ty: &i32, val: Unevaluated(evaluate_ref_to_temp_before_assign_slice, [], Some(promoted[1])) }
        _16 = _53;                       // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _57 = deref_copy (*_5);          // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _17 = &((*_57).0: i32);          // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _15 = (move _16, move _17);      // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _18 = (_15.0: &i32);             // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _19 = (_15.1: &i32);             // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _22 = const 2_i32;               // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
        _23 = (*_19);                    // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
        _21 = Eq(move _22, move _23);    // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
        _20 = Not(move _21);             // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
        switchInt(move _20) -> [0: bb4, otherwise: bb3]; // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    }

    bb3: {
        _24 = const core::panicking::AssertKind::Eq; // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _26 = const core::panicking::AssertKind::Eq; // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _28 = _18;                       // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _27 = _28;                       // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _30 = _19;                       // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _29 = _30;                       // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _31 = Option::<Arguments<'_>>::None; // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
        _25 = core::panicking::assert_failed::<i32, i32>(move _26, move _27, move _29, move _31); // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:53
                                         // + literal: Const { ty: for<'a, 'b, 'c> fn(core::panicking::AssertKind, &'a i32, &'b i32, Option<Arguments<'c>>) -> ! {core::panicking::assert_failed::<i32, i32>}, val: Value(<ZST>) }
    }

    bb4: {
        _52 = const _;                   // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
                                         // + literal: Const { ty: &i32, val: Unevaluated(evaluate_ref_to_temp_before_assign_slice, [], Some(promoted[0])) }
        _33 = _52;                       // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _35 = const 2_usize;             // scope 2 at ui/mir/mir_assign_eval_order.rs:39:21: 39:22
        _36 = Len((*_1));                // scope 2 at ui/mir/mir_assign_eval_order.rs:39:19: 39:23
        _37 = Lt(_35, _36);              // scope 2 at ui/mir/mir_assign_eval_order.rs:39:19: 39:23
        assert(move _37, "index out of bounds: the length is {} but the index is {}", move _36, _35) -> bb5; // scope 2 at ui/mir/mir_assign_eval_order.rs:39:19: 39:23
    }

    bb5: {
        _34 = &((*_1)[_35].0: i32);      // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _32 = (move _33, move _34);      // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _38 = (_32.0: &i32);             // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _39 = (_32.1: &i32);             // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _42 = const 5_i32;               // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
        _43 = (*_39);                    // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
        _41 = Eq(move _42, move _43);    // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
        _40 = Not(move _41);             // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
        switchInt(move _40) -> [0: bb7, otherwise: bb6]; // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    }

    bb6: {
        _44 = const core::panicking::AssertKind::Eq; // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _46 = const core::panicking::AssertKind::Eq; // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _48 = _38;                       // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _47 = _48;                       // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _50 = _39;                       // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _49 = _50;                       // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _51 = Option::<Arguments<'_>>::None; // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
        _45 = core::panicking::assert_failed::<i32, i32>(move _46, move _47, move _49, move _51); // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:53
                                         // + literal: Const { ty: for<'a, 'b, 'c> fn(core::panicking::AssertKind, &'a i32, &'b i32, Option<Arguments<'c>>) -> ! {core::panicking::assert_failed::<i32, i32>}, val: Value(<ZST>) }
    }

    bb7: {
        return;                          // scope 0 at ui/mir/mir_assign_eval_order.rs:40:2: 40:2
    }
}

promoted[0] in evaluate_ref_to_temp_before_assign_slice: &i32 = {
    let mut _0: &i32;                    // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let mut _1: i32;                     // in scope 0 at ui/mir/mir_assign_eval_order.rs:39:16: 39:17

    bb0: {
        _1 = const 5_i32;                // scope 0 at ui/mir/mir_assign_eval_order.rs:39:16: 39:17
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    }
}

promoted[1] in evaluate_ref_to_temp_before_assign_slice: &i32 = {
    let mut _0: &i32;                    // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let mut _1: i32;                     // in scope 0 at ui/mir/mir_assign_eval_order.rs:38:16: 38:17

    bb0: {
        _1 = const 2_i32;                // scope 0 at ui/mir/mir_assign_eval_order.rs:38:16: 38:17
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    }
}

promoted[2] in evaluate_ref_to_temp_before_assign_slice: &[S; 3] = {
    let mut _0: &[S; 3];                 // return place in scope 0 at ui/mir/mir_assign_eval_order.rs:37:12: 37:31
    let mut _1: [S; 3];                  // in scope 0 at ui/mir/mir_assign_eval_order.rs:37:13: 37:31
    let mut _2: S;                       // in scope 0 at ui/mir/mir_assign_eval_order.rs:37:14: 37:18
    let mut _3: S;                       // in scope 0 at ui/mir/mir_assign_eval_order.rs:37:20: 37:24
    let mut _4: S;                       // in scope 0 at ui/mir/mir_assign_eval_order.rs:37:26: 37:30

    bb0: {
        _2 = S(const 3_i32);             // scope 0 at ui/mir/mir_assign_eval_order.rs:37:14: 37:18
        _3 = S(const 4_i32);             // scope 0 at ui/mir/mir_assign_eval_order.rs:37:20: 37:24
        _4 = S(const 5_i32);             // scope 0 at ui/mir/mir_assign_eval_order.rs:37:26: 37:30
        _1 = [move _2, move _3, move _4]; // scope 0 at ui/mir/mir_assign_eval_order.rs:37:13: 37:31
        _0 = &_1;                        // scope 0 at ui/mir/mir_assign_eval_order.rs:37:12: 37:31
        return;                          // scope 0 at ui/mir/mir_assign_eval_order.rs:37:12: 37:31
    }
}

promoted[3] in evaluate_ref_to_temp_before_assign_slice: &S = {
    let mut _0: &S;                      // return place in scope 0 at ui/mir/mir_assign_eval_order.rs:36:18: 36:23
    let mut _1: S;                       // in scope 0 at ui/mir/mir_assign_eval_order.rs:36:19: 36:23

    bb0: {
        _1 = S(const 7_i32);             // scope 0 at ui/mir/mir_assign_eval_order.rs:36:19: 36:23
        _0 = &_1;                        // scope 0 at ui/mir/mir_assign_eval_order.rs:36:18: 36:23
        return;                          // scope 0 at ui/mir/mir_assign_eval_order.rs:36:18: 36:23
    }
}

promoted[4] in evaluate_ref_to_temp_before_assign_slice: &[S; 3] = {
    let mut _0: &[S; 3];                 // return place in scope 0 at ui/mir/mir_assign_eval_order.rs:35:18: 35:36
    let mut _1: [S; 3];                  // in scope 0 at ui/mir/mir_assign_eval_order.rs:35:18: 35:36
    let mut _2: S;                       // in scope 0 at ui/mir/mir_assign_eval_order.rs:35:19: 35:23
    let mut _3: S;                       // in scope 0 at ui/mir/mir_assign_eval_order.rs:35:25: 35:29
    let mut _4: S;                       // in scope 0 at ui/mir/mir_assign_eval_order.rs:35:31: 35:35

    bb0: {
        _2 = S(const 0_i32);             // scope 0 at ui/mir/mir_assign_eval_order.rs:35:19: 35:23
        _3 = S(const 1_i32);             // scope 0 at ui/mir/mir_assign_eval_order.rs:35:25: 35:29
        _4 = S(const 2_i32);             // scope 0 at ui/mir/mir_assign_eval_order.rs:35:31: 35:35
        _1 = [move _2, move _3, move _4]; // scope 0 at ui/mir/mir_assign_eval_order.rs:35:18: 35:36
        _0 = &_1;                        // scope 0 at ui/mir/mir_assign_eval_order.rs:35:18: 35:36
        return;                          // scope 0 at ui/mir/mir_assign_eval_order.rs:35:18: 35:36
    }
}

fn evaluate_fru_to_temp_before_assign_slice() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/mir/mir_assign_eval_order.rs:44:47: 44:47
    let mut _1: &[S];                    // in scope 0 at ui/mir/mir_assign_eval_order.rs:45:9: 45:14
    let _2: &[S];                        // in scope 0 at ui/mir/mir_assign_eval_order.rs:45:18: 45:40
    let mut _3: &[S; 3];                 // in scope 0 at ui/mir/mir_assign_eval_order.rs:45:18: 45:36
    let mut _4: std::ops::RangeFull;     // in scope 0 at ui/mir/mir_assign_eval_order.rs:45:37: 45:39
    let mut _6: S;                       // in scope 0 at ui/mir/mir_assign_eval_order.rs:46:18: 46:22
    let mut _7: S;                       // in scope 0 at ui/mir/mir_assign_eval_order.rs:47:45: 47:57
    let _8: usize;                       // in scope 0 at ui/mir/mir_assign_eval_order.rs:47:53: 47:54
    let mut _9: usize;                   // in scope 0 at ui/mir/mir_assign_eval_order.rs:47:51: 47:55
    let mut _10: bool;                   // in scope 0 at ui/mir/mir_assign_eval_order.rs:47:51: 47:55
    let mut _11: &mut S;                 // in scope 0 at ui/mir/mir_assign_eval_order.rs:47:6: 47:42
    let mut _12: &[S; 3];                // in scope 0 at ui/mir/mir_assign_eval_order.rs:47:12: 47:31
    let _13: &[S; 3];                    // in scope 0 at ui/mir/mir_assign_eval_order.rs:47:12: 47:31
    let mut _14: (&i32, &i32);           // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _15: &i32;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let mut _16: &i32;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _19: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    let mut _20: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
    let mut _21: i32;                    // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
    let mut _22: i32;                    // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
    let _24: !;                          // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
    let mut _25: core::panicking::AssertKind; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
    let mut _26: &i32;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let _27: &i32;                       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let mut _28: &i32;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let _29: &i32;                       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let mut _30: std::option::Option<std::fmt::Arguments<'_>>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
    let mut _31: (&i32, &i32);           // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _32: &i32;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let mut _33: &i32;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let _34: usize;                      // in scope 0 at ui/mir/mir_assign_eval_order.rs:49:21: 49:22
    let mut _35: usize;                  // in scope 0 at ui/mir/mir_assign_eval_order.rs:49:19: 49:23
    let mut _36: bool;                   // in scope 0 at ui/mir/mir_assign_eval_order.rs:49:19: 49:23
    let mut _39: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    let mut _40: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
    let mut _41: i32;                    // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
    let mut _42: i32;                    // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
    let _44: !;                          // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
    let mut _45: core::panicking::AssertKind; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
    let mut _46: &i32;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let _47: &i32;                       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let mut _48: &i32;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let _49: &i32;                       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let mut _50: std::option::Option<std::fmt::Arguments<'_>>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
    let mut _54: &[S; 3];                // in scope 0 at ui/mir/mir_assign_eval_order.rs:45:18: 45:36
    scope 1 {
        debug x => _1;                   // in scope 1 at ui/mir/mir_assign_eval_order.rs:45:9: 45:14
        let _5: &mut S;                  // in scope 1 at ui/mir/mir_assign_eval_order.rs:46:9: 46:10
        scope 2 {
            debug y => _5;               // in scope 2 at ui/mir/mir_assign_eval_order.rs:46:9: 46:10
            let _17: &i32;               // in scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
            let _18: &i32;               // in scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
            let _37: &i32;               // in scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
            let _38: &i32;               // in scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
            let mut _51: &i32;           // in scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
            let mut _52: &i32;           // in scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
            let mut _53: &[S; 3];        // in scope 2 at ui/mir/mir_assign_eval_order.rs:47:12: 47:31
            scope 3 {
                debug left_val => _17;   // in scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
                debug right_val => _18;  // in scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
                let _23: core::panicking::AssertKind; // in scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                scope 4 {
                    debug kind => _23;   // in scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                }
            }
            scope 5 {
                debug left_val => _37;   // in scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
                debug right_val => _38;  // in scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
                let _43: core::panicking::AssertKind; // in scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                scope 6 {
                    debug kind => _43;   // in scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                }
            }
        }
    }

    bb0: {
        _54 = const _;                   // scope 0 at ui/mir/mir_assign_eval_order.rs:45:18: 45:36
                                         // mir::Constant
                                         // + span: ui/mir/mir_assign_eval_order.rs:45:18: 45:36
                                         // + literal: Const { ty: &[S; 3], val: Unevaluated(evaluate_fru_to_temp_before_assign_slice, [], Some(promoted[3])) }
        _3 = _54;                        // scope 0 at ui/mir/mir_assign_eval_order.rs:45:18: 45:36
        _2 = <[S; 3] as Index<RangeFull>>::index(move _3, move _4) -> bb1; // scope 0 at ui/mir/mir_assign_eval_order.rs:45:18: 45:40
                                         // mir::Constant
                                         // + span: ui/mir/mir_assign_eval_order.rs:45:18: 45:40
                                         // + literal: Const { ty: for<'a> fn(&'a [S; 3], RangeFull) -> &'a <[S; 3] as Index<RangeFull>>::Output {<[S; 3] as Index<RangeFull>>::index}, val: Value(<ZST>) }
    }

    bb1: {
        _1 = _2;                         // scope 0 at ui/mir/mir_assign_eval_order.rs:45:17: 45:40
        _6 = S(const 7_i32);             // scope 1 at ui/mir/mir_assign_eval_order.rs:46:18: 46:22
        _5 = &mut _6;                    // scope 1 at ui/mir/mir_assign_eval_order.rs:46:13: 46:22
        _8 = const 2_usize;              // scope 2 at ui/mir/mir_assign_eval_order.rs:47:53: 47:54
        _9 = Len((*_1));                 // scope 2 at ui/mir/mir_assign_eval_order.rs:47:51: 47:55
        _10 = Lt(_8, _9);                // scope 2 at ui/mir/mir_assign_eval_order.rs:47:51: 47:55
        assert(move _10, "index out of bounds: the length is {} but the index is {}", move _9, _8) -> bb2; // scope 2 at ui/mir/mir_assign_eval_order.rs:47:51: 47:55
    }

    bb2: {
        _7 = S(((*_1)[_8].0: i32));      // scope 2 at ui/mir/mir_assign_eval_order.rs:47:45: 47:57
        _53 = const _;                   // scope 2 at ui/mir/mir_assign_eval_order.rs:47:12: 47:31
                                         // mir::Constant
                                         // + span: ui/mir/mir_assign_eval_order.rs:47:12: 47:31
                                         // + literal: Const { ty: &[S; 3], val: Unevaluated(evaluate_fru_to_temp_before_assign_slice, [], Some(promoted[2])) }
        _13 = _53;                       // scope 2 at ui/mir/mir_assign_eval_order.rs:47:12: 47:31
        _12 = _13;                       // scope 2 at ui/mir/mir_assign_eval_order.rs:47:12: 47:31
        _1 = move _12 as &[S] (Pointer(Unsize)); // scope 2 at ui/mir/mir_assign_eval_order.rs:47:8: 47:31
        _11 = &mut (*_5);                // scope 2 at ui/mir/mir_assign_eval_order.rs:47:33: 47:40
        (*_11) = move _7;                // scope 2 at ui/mir/mir_assign_eval_order.rs:47:5: 47:57
        _52 = const _;                   // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
                                         // + literal: Const { ty: &i32, val: Unevaluated(evaluate_fru_to_temp_before_assign_slice, [], Some(promoted[1])) }
        _15 = _52;                       // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _16 = &((*_5).0: i32);           // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _14 = (move _15, move _16);      // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _17 = (_14.0: &i32);             // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _18 = (_14.1: &i32);             // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _21 = const 2_i32;               // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
        _22 = (*_18);                    // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
        _20 = Eq(move _21, move _22);    // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
        _19 = Not(move _20);             // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
        switchInt(move _19) -> [0: bb4, otherwise: bb3]; // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    }

    bb3: {
        _23 = const core::panicking::AssertKind::Eq; // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _25 = const core::panicking::AssertKind::Eq; // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _27 = _17;                       // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _26 = _27;                       // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _29 = _18;                       // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _28 = _29;                       // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _30 = Option::<Arguments<'_>>::None; // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
        _24 = core::panicking::assert_failed::<i32, i32>(move _25, move _26, move _28, move _30); // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:53
                                         // + literal: Const { ty: for<'a, 'b, 'c> fn(core::panicking::AssertKind, &'a i32, &'b i32, Option<Arguments<'c>>) -> ! {core::panicking::assert_failed::<i32, i32>}, val: Value(<ZST>) }
    }

    bb4: {
        _51 = const _;                   // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
                                         // + literal: Const { ty: &i32, val: Unevaluated(evaluate_fru_to_temp_before_assign_slice, [], Some(promoted[0])) }
        _32 = _51;                       // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _34 = const 2_usize;             // scope 2 at ui/mir/mir_assign_eval_order.rs:49:21: 49:22
        _35 = Len((*_1));                // scope 2 at ui/mir/mir_assign_eval_order.rs:49:19: 49:23
        _36 = Lt(_34, _35);              // scope 2 at ui/mir/mir_assign_eval_order.rs:49:19: 49:23
        assert(move _36, "index out of bounds: the length is {} but the index is {}", move _35, _34) -> bb5; // scope 2 at ui/mir/mir_assign_eval_order.rs:49:19: 49:23
    }

    bb5: {
        _33 = &((*_1)[_34].0: i32);      // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _31 = (move _32, move _33);      // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _37 = (_31.0: &i32);             // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _38 = (_31.1: &i32);             // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _41 = const 5_i32;               // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
        _42 = (*_38);                    // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
        _40 = Eq(move _41, move _42);    // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
        _39 = Not(move _40);             // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
        switchInt(move _39) -> [0: bb7, otherwise: bb6]; // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    }

    bb6: {
        _43 = const core::panicking::AssertKind::Eq; // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _45 = const core::panicking::AssertKind::Eq; // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _47 = _37;                       // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _46 = _47;                       // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _49 = _38;                       // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _48 = _49;                       // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _50 = Option::<Arguments<'_>>::None; // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
        _44 = core::panicking::assert_failed::<i32, i32>(move _45, move _46, move _48, move _50); // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:53
                                         // + literal: Const { ty: for<'a, 'b, 'c> fn(core::panicking::AssertKind, &'a i32, &'b i32, Option<Arguments<'c>>) -> ! {core::panicking::assert_failed::<i32, i32>}, val: Value(<ZST>) }
    }

    bb7: {
        return;                          // scope 0 at ui/mir/mir_assign_eval_order.rs:50:2: 50:2
    }
}

promoted[0] in evaluate_fru_to_temp_before_assign_slice: &i32 = {
    let mut _0: &i32;                    // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let mut _1: i32;                     // in scope 0 at ui/mir/mir_assign_eval_order.rs:49:16: 49:17

    bb0: {
        _1 = const 5_i32;                // scope 0 at ui/mir/mir_assign_eval_order.rs:49:16: 49:17
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    }
}

promoted[1] in evaluate_fru_to_temp_before_assign_slice: &i32 = {
    let mut _0: &i32;                    // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let mut _1: i32;                     // in scope 0 at ui/mir/mir_assign_eval_order.rs:48:16: 48:17

    bb0: {
        _1 = const 2_i32;                // scope 0 at ui/mir/mir_assign_eval_order.rs:48:16: 48:17
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    }
}

promoted[2] in evaluate_fru_to_temp_before_assign_slice: &[S; 3] = {
    let mut _0: &[S; 3];                 // return place in scope 0 at ui/mir/mir_assign_eval_order.rs:47:12: 47:31
    let mut _1: [S; 3];                  // in scope 0 at ui/mir/mir_assign_eval_order.rs:47:13: 47:31
    let mut _2: S;                       // in scope 0 at ui/mir/mir_assign_eval_order.rs:47:14: 47:18
    let mut _3: S;                       // in scope 0 at ui/mir/mir_assign_eval_order.rs:47:20: 47:24
    let mut _4: S;                       // in scope 0 at ui/mir/mir_assign_eval_order.rs:47:26: 47:30

    bb0: {
        _2 = S(const 3_i32);             // scope 0 at ui/mir/mir_assign_eval_order.rs:47:14: 47:18
        _3 = S(const 4_i32);             // scope 0 at ui/mir/mir_assign_eval_order.rs:47:20: 47:24
        _4 = S(const 5_i32);             // scope 0 at ui/mir/mir_assign_eval_order.rs:47:26: 47:30
        _1 = [move _2, move _3, move _4]; // scope 0 at ui/mir/mir_assign_eval_order.rs:47:13: 47:31
        _0 = &_1;                        // scope 0 at ui/mir/mir_assign_eval_order.rs:47:12: 47:31
        return;                          // scope 0 at ui/mir/mir_assign_eval_order.rs:47:12: 47:31
    }
}

promoted[3] in evaluate_fru_to_temp_before_assign_slice: &[S; 3] = {
    let mut _0: &[S; 3];                 // return place in scope 0 at ui/mir/mir_assign_eval_order.rs:45:18: 45:36
    let mut _1: [S; 3];                  // in scope 0 at ui/mir/mir_assign_eval_order.rs:45:18: 45:36
    let mut _2: S;                       // in scope 0 at ui/mir/mir_assign_eval_order.rs:45:19: 45:23
    let mut _3: S;                       // in scope 0 at ui/mir/mir_assign_eval_order.rs:45:25: 45:29
    let mut _4: S;                       // in scope 0 at ui/mir/mir_assign_eval_order.rs:45:31: 45:35

    bb0: {
        _2 = S(const 0_i32);             // scope 0 at ui/mir/mir_assign_eval_order.rs:45:19: 45:23
        _3 = S(const 1_i32);             // scope 0 at ui/mir/mir_assign_eval_order.rs:45:25: 45:29
        _4 = S(const 2_i32);             // scope 0 at ui/mir/mir_assign_eval_order.rs:45:31: 45:35
        _1 = [move _2, move _3, move _4]; // scope 0 at ui/mir/mir_assign_eval_order.rs:45:18: 45:36
        _0 = &_1;                        // scope 0 at ui/mir/mir_assign_eval_order.rs:45:18: 45:36
        return;                          // scope 0 at ui/mir/mir_assign_eval_order.rs:45:18: 45:36
    }
}

fn evaluate_fru_to_temp_before_assign_box() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/mir/mir_assign_eval_order.rs:54:45: 54:45
    let _1: std::boxed::Box<S>;          // in scope 0 at ui/mir/mir_assign_eval_order.rs:55:9: 55:10
    let mut _2: S;                       // in scope 0 at ui/mir/mir_assign_eval_order.rs:55:22: 55:26
    let mut _4: S;                       // in scope 0 at ui/mir/mir_assign_eval_order.rs:56:18: 56:22
    let mut _5: S;                       // in scope 0 at ui/mir/mir_assign_eval_order.rs:57:29: 57:39
    let mut _6: &mut S;                  // in scope 0 at ui/mir/mir_assign_eval_order.rs:57:6: 57:26
    let _7: ();                          // in scope 0 at ui/mir/mir_assign_eval_order.rs:57:8: 57:15
    let mut _8: std::boxed::Box<S>;      // in scope 0 at ui/mir/mir_assign_eval_order.rs:57:13: 57:14
    let mut _9: (&i32, &i32);            // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _10: &i32;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let mut _11: &i32;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _14: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    let mut _15: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
    let mut _16: i32;                    // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
    let mut _17: i32;                    // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
    let _19: !;                          // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
    let mut _20: core::panicking::AssertKind; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
    let mut _21: &i32;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let _22: &i32;                       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let mut _23: &i32;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let _24: &i32;                       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let mut _25: std::option::Option<std::fmt::Arguments<'_>>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
    let mut _27: *const S;               // in scope 0 at ui/mir/mir_assign_eval_order.rs:55:9: 55:10
    scope 1 {
        debug x => _1;                   // in scope 1 at ui/mir/mir_assign_eval_order.rs:55:9: 55:10
        let _3: &mut S;                  // in scope 1 at ui/mir/mir_assign_eval_order.rs:56:9: 56:10
        scope 2 {
            debug y => _3;               // in scope 2 at ui/mir/mir_assign_eval_order.rs:56:9: 56:10
            let _12: &i32;               // in scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
            let _13: &i32;               // in scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
            let mut _26: &i32;           // in scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
            scope 3 {
                debug left_val => _12;   // in scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
                debug right_val => _13;  // in scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
                let _18: core::panicking::AssertKind; // in scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                scope 4 {
                    debug kind => _18;   // in scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                }
            }
        }
    }

    bb0: {
        _2 = const S(0_i32);             // scope 0 at ui/mir/mir_assign_eval_order.rs:55:22: 55:26
                                         // mir::Constant
                                         // + span: ui/mir/mir_assign_eval_order.rs:55:22: 55:26
                                         // + literal: Const { ty: S, val: Value(Scalar(0x00000000)) }
        _1 = Box::<S>::new(move _2) -> bb1; // scope 0 at ui/mir/mir_assign_eval_order.rs:55:13: 55:27
                                         // mir::Constant
                                         // + span: ui/mir/mir_assign_eval_order.rs:55:13: 55:21
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: fn(S) -> Box<S> {Box::<S>::new}, val: Value(<ZST>) }
    }

    bb1: {
        _4 = S(const 1_i32);             // scope 1 at ui/mir/mir_assign_eval_order.rs:56:18: 56:22
        _3 = &mut _4;                    // scope 1 at ui/mir/mir_assign_eval_order.rs:56:13: 56:22
        _27 = (((_1.0: std::ptr::Unique<S>).0: std::ptr::NonNull<S>).0: *const S); // scope 2 at ui/mir/mir_assign_eval_order.rs:57:29: 57:39
        _5 = S(((*_27).0: i32));         // scope 2 at ui/mir/mir_assign_eval_order.rs:57:29: 57:39
        _8 = move _1;                    // scope 2 at ui/mir/mir_assign_eval_order.rs:57:13: 57:14
        _7 = std::mem::drop::<Box<S>>(move _8) -> bb2; // scope 2 at ui/mir/mir_assign_eval_order.rs:57:8: 57:15
                                         // mir::Constant
                                         // + span: ui/mir/mir_assign_eval_order.rs:57:8: 57:12
                                         // + literal: Const { ty: fn(Box<S>) {std::mem::drop::<Box<S>>}, val: Value(<ZST>) }
    }

    bb2: {
        _6 = &mut (*_3);                 // scope 2 at ui/mir/mir_assign_eval_order.rs:57:17: 57:24
        (*_6) = move _5;                 // scope 2 at ui/mir/mir_assign_eval_order.rs:57:5: 57:39
        _26 = const _;                   // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
                                         // + literal: Const { ty: &i32, val: Unevaluated(evaluate_fru_to_temp_before_assign_box, [], Some(promoted[0])) }
        _10 = _26;                       // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _11 = &((*_3).0: i32);           // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _9 = (move _10, move _11);       // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _12 = (_9.0: &i32);              // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _13 = (_9.1: &i32);              // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _16 = const 0_i32;               // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
        _17 = (*_13);                    // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
        _15 = Eq(move _16, move _17);    // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
        _14 = Not(move _15);             // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
        switchInt(move _14) -> [0: bb4, otherwise: bb3]; // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    }

    bb3: {
        _18 = const core::panicking::AssertKind::Eq; // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _20 = const core::panicking::AssertKind::Eq; // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _22 = _12;                       // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _21 = _22;                       // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _24 = _13;                       // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _23 = _24;                       // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _25 = Option::<Arguments<'_>>::None; // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
        _19 = core::panicking::assert_failed::<i32, i32>(move _20, move _21, move _23, move _25); // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:53
                                         // + literal: Const { ty: for<'a, 'b, 'c> fn(core::panicking::AssertKind, &'a i32, &'b i32, Option<Arguments<'c>>) -> ! {core::panicking::assert_failed::<i32, i32>}, val: Value(<ZST>) }
    }

    bb4: {
        return;                          // scope 0 at ui/mir/mir_assign_eval_order.rs:59:2: 59:2
    }
}

promoted[0] in evaluate_fru_to_temp_before_assign_box: &i32 = {
    let mut _0: &i32;                    // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let mut _1: i32;                     // in scope 0 at ui/mir/mir_assign_eval_order.rs:58:16: 58:17

    bb0: {
        _1 = const 0_i32;                // scope 0 at ui/mir/mir_assign_eval_order.rs:58:16: 58:17
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    }
}

fn main() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/mir/mir_assign_eval_order.rs:61:11: 61:11
    let _1: ();                          // in scope 0 at ui/mir/mir_assign_eval_order.rs:62:5: 62:38
    let _2: ();                          // in scope 0 at ui/mir/mir_assign_eval_order.rs:63:5: 63:42
    let _3: ();                          // in scope 0 at ui/mir/mir_assign_eval_order.rs:64:5: 64:47
    let _4: ();                          // in scope 0 at ui/mir/mir_assign_eval_order.rs:65:5: 65:47
    let _5: ();                          // in scope 0 at ui/mir/mir_assign_eval_order.rs:66:5: 66:45

    bb0: {
        _1 = evaluate_reborrow_before_assign() -> bb1; // scope 0 at ui/mir/mir_assign_eval_order.rs:62:5: 62:38
                                         // mir::Constant
                                         // + span: ui/mir/mir_assign_eval_order.rs:62:5: 62:36
                                         // + literal: Const { ty: fn() {evaluate_reborrow_before_assign}, val: Value(<ZST>) }
    }

    bb1: {
        _2 = evaluate_mut_reborrow_before_assign() -> bb2; // scope 0 at ui/mir/mir_assign_eval_order.rs:63:5: 63:42
                                         // mir::Constant
                                         // + span: ui/mir/mir_assign_eval_order.rs:63:5: 63:40
                                         // + literal: Const { ty: fn() {evaluate_mut_reborrow_before_assign}, val: Value(<ZST>) }
    }

    bb2: {
        _3 = evaluate_ref_to_temp_before_assign_slice() -> bb3; // scope 0 at ui/mir/mir_assign_eval_order.rs:64:5: 64:47
                                         // mir::Constant
                                         // + span: ui/mir/mir_assign_eval_order.rs:64:5: 64:45
                                         // + literal: Const { ty: fn() {evaluate_ref_to_temp_before_assign_slice}, val: Value(<ZST>) }
    }

    bb3: {
        _4 = evaluate_fru_to_temp_before_assign_slice() -> bb4; // scope 0 at ui/mir/mir_assign_eval_order.rs:65:5: 65:47
                                         // mir::Constant
                                         // + span: ui/mir/mir_assign_eval_order.rs:65:5: 65:45
                                         // + literal: Const { ty: fn() {evaluate_fru_to_temp_before_assign_slice}, val: Value(<ZST>) }
    }

    bb4: {
        _5 = evaluate_fru_to_temp_before_assign_box() -> bb5; // scope 0 at ui/mir/mir_assign_eval_order.rs:66:5: 66:45
                                         // mir::Constant
                                         // + span: ui/mir/mir_assign_eval_order.rs:66:5: 66:43
                                         // + literal: Const { ty: fn() {evaluate_fru_to_temp_before_assign_box}, val: Value(<ZST>) }
    }

    bb5: {
        return;                          // scope 0 at ui/mir/mir_assign_eval_order.rs:67:2: 67:2
    }
}

fn S(_1: i32) -> S {
    let mut _0: S;                       // return place in scope 0 at ui/mir/mir_assign_eval_order.rs:8:1: 8:9

    bb0: {
        _0 = S(move _1);                 // scope 0 at ui/mir/mir_assign_eval_order.rs:8:1: 8:9
        return;                          // scope 0 at ui/mir/mir_assign_eval_order.rs:8:1: 8:9
    }
}

// MIR FOR CTFE
fn S(_1: i32) -> S {
    let mut _0: S;                       // return place in scope 0 at ui/mir/mir_assign_eval_order.rs:8:1: 8:9

    bb0: {
        _0 = S(move _1);                 // scope 0 at ui/mir/mir_assign_eval_order.rs:8:1: 8:9
        return;                          // scope 0 at ui/mir/mir_assign_eval_order.rs:8:1: 8:9
    }
}
