// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
fn <impl at ui/mir/mir_codegen_calls_diverging_drops.rs:7:1: 7:24>::drop(_1: &mut Droppable) -> () {
    debug self => _1;                    // in scope 0 at ui/mir/mir_codegen_calls_diverging_drops.rs:8:13: 8:22
    let mut _0: ();                      // return place in scope 0 at ui/mir/mir_codegen_calls_diverging_drops.rs:8:24: 8:24
    let _2: ();                          // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:209:9: 209:63
    let mut _3: std::fmt::Arguments<'_>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:209:29: 209:62
    let mut _4: &[&str];                 // in scope 0 at ui/mir/mir_codegen_calls_diverging_drops.rs:9:19: 9:31
    let mut _5: &[&str; 2];              // in scope 0 at ui/mir/mir_codegen_calls_diverging_drops.rs:9:19: 9:31
    let _6: &[&str; 2];                  // in scope 0 at ui/mir/mir_codegen_calls_diverging_drops.rs:9:19: 9:31
    let mut _7: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:209:29: 209:62
    let mut _8: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:209:29: 209:62
    let _9: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:209:29: 209:62
    let _10: [core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:209:29: 209:62
    let mut _11: core::fmt::ArgumentV1<'_>; // in scope 0 at ui/mir/mir_codegen_calls_diverging_drops.rs:9:33: 9:39
    let mut _12: &u8;                    // in scope 0 at ui/mir/mir_codegen_calls_diverging_drops.rs:9:33: 9:39
    let _13: &u8;                        // in scope 0 at ui/mir/mir_codegen_calls_diverging_drops.rs:9:33: 9:39
    let mut _14: &[&str; 2];             // in scope 0 at ui/mir/mir_codegen_calls_diverging_drops.rs:9:19: 9:31

    bb0: {
        _14 = const _;                   // scope 0 at ui/mir/mir_codegen_calls_diverging_drops.rs:9:19: 9:31
                                         // mir::Constant
                                         // + span: ui/mir/mir_codegen_calls_diverging_drops.rs:9:19: 9:31
                                         // + literal: Const { ty: &[&str; 2], val: Unevaluated(<Droppable as Drop>::drop, [], Some(promoted[0])) }
        _6 = _14;                        // scope 0 at ui/mir/mir_codegen_calls_diverging_drops.rs:9:19: 9:31
        _5 = _6;                         // scope 0 at ui/mir/mir_codegen_calls_diverging_drops.rs:9:19: 9:31
        _4 = move _5 as &[&str] (Pointer(Unsize)); // scope 0 at ui/mir/mir_codegen_calls_diverging_drops.rs:9:19: 9:31
        _13 = &((*_1).0: u8);            // scope 0 at ui/mir/mir_codegen_calls_diverging_drops.rs:9:33: 9:39
        _12 = _13;                       // scope 0 at ui/mir/mir_codegen_calls_diverging_drops.rs:9:33: 9:39
        _11 = core::fmt::ArgumentV1::<'_>::new_display::<u8>(move _12) -> bb1; // scope 0 at ui/mir/mir_codegen_calls_diverging_drops.rs:9:33: 9:39
                                         // mir::Constant
                                         // + span: ui/mir/mir_codegen_calls_diverging_drops.rs:9:33: 9:39
                                         // + user_ty: UserType(1)
                                         // + literal: Const { ty: for<'b> fn(&'b u8) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_display::<u8>}, val: Value(<ZST>) }
    }

    bb1: {
        _10 = [move _11];                // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:209:29: 209:62
        _9 = &_10;                       // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:209:29: 209:62
        _8 = _9;                         // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:209:29: 209:62
        _7 = move _8 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:209:29: 209:62
        _3 = Arguments::<'_>::new_v1(move _4, move _7) -> bb2; // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:209:29: 209:62
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:209:29: 209:62
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb2: {
        _2 = _eprint(move _3) -> bb3;    // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:209:9: 209:63
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:209:9: 209:28
                                         // + literal: Const { ty: for<'a> fn(Arguments<'a>) {_eprint}, val: Value(<ZST>) }
    }

    bb3: {
        return;                          // scope 0 at ui/mir/mir_codegen_calls_diverging_drops.rs:10:6: 10:6
    }
}

promoted[0] in <impl at ui/mir/mir_codegen_calls_diverging_drops.rs:7:1: 7:24>::drop: &[&str; 2] = {
    let mut _0: &[&str; 2];              // return place in scope 0 at ui/mir/mir_codegen_calls_diverging_drops.rs:9:19: 9:31
    let mut _1: [&str; 2];               // in scope 0 at ui/mir/mir_codegen_calls_diverging_drops.rs:9:19: 9:31

    bb0: {
        _1 = [const "", const " dropped\n"]; // scope 0 at ui/mir/mir_codegen_calls_diverging_drops.rs:9:19: 9:31
                                         // mir::Constant
                                         // + span: ui/mir/mir_codegen_calls_diverging_drops.rs:9:19: 9:31
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
                                         // mir::Constant
                                         // + span: ui/mir/mir_codegen_calls_diverging_drops.rs:9:19: 9:31
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at ui/mir/mir_codegen_calls_diverging_drops.rs:9:19: 9:31
        return;                          // scope 0 at ui/mir/mir_codegen_calls_diverging_drops.rs:9:19: 9:31
    }
}

fn diverging_fn() -> ! {
    let mut _0: !;                       // return place in scope 0 at ui/mir/mir_codegen_calls_diverging_drops.rs:13:22: 13:23
    let mut _1: !;                       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/panic.rs:22:9: 22:38

    bb0: {
        _1 = begin_panic::<&str>(const "diverging_fn called"); // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/panic.rs:22:9: 22:38
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/panic.rs:22:9: 22:32
                                         // + literal: Const { ty: fn(&str) -> ! {begin_panic::<&str>}, val: Value(<ZST>) }
                                         // mir::Constant
                                         // + span: ui/mir/mir_codegen_calls_diverging_drops.rs:14:12: 14:33
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
    }
}

fn mir(_1: Droppable) -> () {
    debug d => _1;                       // in scope 0 at ui/mir/mir_codegen_calls_diverging_drops.rs:17:8: 17:9
    let mut _0: ();                      // return place in scope 0 at ui/mir/mir_codegen_calls_diverging_drops.rs:17:22: 17:22
    let _2: !;                           // in scope 0 at ui/mir/mir_codegen_calls_diverging_drops.rs:18:5: 18:19

    bb0: {
        _2 = diverging_fn() -> bb1;      // scope 0 at ui/mir/mir_codegen_calls_diverging_drops.rs:18:5: 18:19
                                         // mir::Constant
                                         // + span: ui/mir/mir_codegen_calls_diverging_drops.rs:18:5: 18:17
                                         // + literal: Const { ty: fn() -> ! {diverging_fn}, val: Value(<ZST>) }
    }

    bb1 (cleanup): {
        drop(_1) -> bb2;                 // scope 0 at ui/mir/mir_codegen_calls_diverging_drops.rs:19:1: 19:2
    }

    bb2 (cleanup): {
        resume;                          // scope 0 at ui/mir/mir_codegen_calls_diverging_drops.rs:17:1: 19:2
    }
}

fn main() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/mir/mir_codegen_calls_diverging_drops.rs:21:11: 21:11
    let _1: Droppable;                   // in scope 0 at ui/mir/mir_codegen_calls_diverging_drops.rs:22:9: 22:10
    let _2: ();                          // in scope 0 at ui/mir/mir_codegen_calls_diverging_drops.rs:23:5: 23:11
    let mut _3: Droppable;               // in scope 0 at ui/mir/mir_codegen_calls_diverging_drops.rs:23:9: 23:10
    scope 1 {
        debug d => _1;                   // in scope 1 at ui/mir/mir_codegen_calls_diverging_drops.rs:22:9: 22:10
    }

    bb0: {
        _1 = const Droppable(0_u8);      // scope 0 at ui/mir/mir_codegen_calls_diverging_drops.rs:22:13: 22:25
                                         // mir::Constant
                                         // + span: ui/mir/mir_codegen_calls_diverging_drops.rs:22:13: 22:25
                                         // + literal: Const { ty: Droppable, val: Value(Scalar(0x00)) }
        _3 = const Droppable(0_u8);      // scope 1 at ui/mir/mir_codegen_calls_diverging_drops.rs:23:9: 23:10
                                         // mir::Constant
                                         // + span: ui/mir/mir_codegen_calls_diverging_drops.rs:23:9: 23:10
                                         // + literal: Const { ty: Droppable, val: Value(Scalar(0x00)) }
        _2 = mir(move _3) -> bb1;        // scope 1 at ui/mir/mir_codegen_calls_diverging_drops.rs:23:5: 23:11
                                         // mir::Constant
                                         // + span: ui/mir/mir_codegen_calls_diverging_drops.rs:23:5: 23:8
                                         // + literal: Const { ty: fn(Droppable) {mir}, val: Value(<ZST>) }
    }

    bb1: {
        return;                          // scope 0 at ui/mir/mir_codegen_calls_diverging_drops.rs:24:2: 24:2
    }
}

fn Droppable(_1: u8) -> Droppable {
    let mut _0: Droppable;               // return place in scope 0 at ui/mir/mir_codegen_calls_diverging_drops.rs:6:1: 6:17

    bb0: {
        _0 = Droppable(move _1);         // scope 0 at ui/mir/mir_codegen_calls_diverging_drops.rs:6:1: 6:17
        return;                          // scope 0 at ui/mir/mir_codegen_calls_diverging_drops.rs:6:1: 6:17
    }
}

// MIR FOR CTFE
fn Droppable(_1: u8) -> Droppable {
    let mut _0: Droppable;               // return place in scope 0 at ui/mir/mir_codegen_calls_diverging_drops.rs:6:1: 6:17

    bb0: {
        _0 = Droppable(move _1);         // scope 0 at ui/mir/mir_codegen_calls_diverging_drops.rs:6:1: 6:17
        return;                          // scope 0 at ui/mir/mir_codegen_calls_diverging_drops.rs:6:1: 6:17
    }
}
