// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
fn test1(_1: isize, _2: (i32, i32), _3: &[i32]) -> (isize, (i32, i32), &[i32]) {
    debug a => _1;                       // in scope 0 at ui/mir/mir_codegen_calls.rs:6:10: 6:11
    debug b => _2;                       // in scope 0 at ui/mir/mir_codegen_calls.rs:6:20: 6:21
    debug c => _3;                       // in scope 0 at ui/mir/mir_codegen_calls.rs:6:35: 6:36
    let mut _0: (isize, (i32, i32), &[i32]); // return place in scope 0 at ui/mir/mir_codegen_calls.rs:6:49: 6:76
    let mut _4: isize;                   // in scope 0 at ui/mir/mir_codegen_calls.rs:12:12: 12:13
    let mut _5: (i32, i32);              // in scope 0 at ui/mir/mir_codegen_calls.rs:12:15: 12:16
    let mut _6: &[i32];                  // in scope 0 at ui/mir/mir_codegen_calls.rs:12:18: 12:19

    bb0: {
        _4 = _1;                         // scope 0 at ui/mir/mir_codegen_calls.rs:12:12: 12:13
        _5 = _2;                         // scope 0 at ui/mir/mir_codegen_calls.rs:12:15: 12:16
        _6 = _3;                         // scope 0 at ui/mir/mir_codegen_calls.rs:12:18: 12:19
        _0 = test1::callee(move _4, move _5, move _6) -> bb1; // scope 0 at ui/mir/mir_codegen_calls.rs:12:5: 12:20
                                         // mir::Constant
                                         // + span: ui/mir/mir_codegen_calls.rs:12:5: 12:11
                                         // + literal: Const { ty: for<'a> fn(isize, (i32, i32), &'a [i32]) -> (isize, (i32, i32), &'a [i32]) {test1::callee}, val: Value(<ZST>) }
    }

    bb1: {
        return;                          // scope 0 at ui/mir/mir_codegen_calls.rs:13:2: 13:2
    }
}

fn test1::callee(_1: isize, _2: (i32, i32), _3: &[i32]) -> (isize, (i32, i32), &[i32]) {
    debug a => _1;                       // in scope 0 at ui/mir/mir_codegen_calls.rs:9:15: 9:16
    debug b => _2;                       // in scope 0 at ui/mir/mir_codegen_calls.rs:9:25: 9:26
    debug c => _3;                       // in scope 0 at ui/mir/mir_codegen_calls.rs:9:40: 9:41
    let mut _0: (isize, (i32, i32), &[i32]); // return place in scope 0 at ui/mir/mir_codegen_calls.rs:9:54: 9:81
    let mut _4: isize;                   // in scope 0 at ui/mir/mir_codegen_calls.rs:10:10: 10:11
    let mut _5: (i32, i32);              // in scope 0 at ui/mir/mir_codegen_calls.rs:10:13: 10:14
    let mut _6: &[i32];                  // in scope 0 at ui/mir/mir_codegen_calls.rs:10:16: 10:17

    bb0: {
        _4 = _1;                         // scope 0 at ui/mir/mir_codegen_calls.rs:10:10: 10:11
        _5 = _2;                         // scope 0 at ui/mir/mir_codegen_calls.rs:10:13: 10:14
        _6 = _3;                         // scope 0 at ui/mir/mir_codegen_calls.rs:10:16: 10:17
        _0 = (move _4, move _5, move _6); // scope 0 at ui/mir/mir_codegen_calls.rs:10:9: 10:18
        return;                          // scope 0 at ui/mir/mir_codegen_calls.rs:11:6: 11:6
    }
}

fn test2(_1: isize) -> isize {
    debug a => _1;                       // in scope 0 at ui/mir/mir_codegen_calls.rs:15:10: 15:11
    let mut _0: isize;                   // return place in scope 0 at ui/mir/mir_codegen_calls.rs:15:23: 15:28
    let mut _2: isize;                   // in scope 0 at ui/mir/mir_codegen_calls.rs:21:12: 21:13

    bb0: {
        _2 = _1;                         // scope 0 at ui/mir/mir_codegen_calls.rs:21:12: 21:13
        _0 = test2::callee(move _2) -> bb1; // scope 0 at ui/mir/mir_codegen_calls.rs:21:5: 21:14
                                         // mir::Constant
                                         // + span: ui/mir/mir_codegen_calls.rs:21:5: 21:11
                                         // + literal: Const { ty: fn(isize) -> isize {test2::callee}, val: Value(<ZST>) }
    }

    bb1: {
        return;                          // scope 0 at ui/mir/mir_codegen_calls.rs:22:2: 22:2
    }
}

fn test2::callee(_1: isize) -> isize {
    debug a => _1;                       // in scope 0 at ui/mir/mir_codegen_calls.rs:18:15: 18:16
    let mut _0: isize;                   // return place in scope 0 at ui/mir/mir_codegen_calls.rs:18:28: 18:33

    bb0: {
        _0 = _1;                         // scope 0 at ui/mir/mir_codegen_calls.rs:19:9: 19:10
        return;                          // scope 0 at ui/mir/mir_codegen_calls.rs:20:6: 20:6
    }
}

fn <impl at ui/mir/mir_codegen_calls.rs:24:10: 24:19>::eq(_1: &Foo, _2: &Foo) -> bool {
    debug self => _1;                    // in scope 0 at ui/mir/mir_codegen_calls.rs:24:10: 24:19
    debug other => _2;                   // in scope 0 at ui/mir/mir_codegen_calls.rs:24:10: 24:19
    let mut _0: bool;                    // return place in scope 0 at ui/mir/mir_codegen_calls.rs:24:10: 24:19

    bb0: {
        _0 = const true;                 // scope 0 at ui/mir/mir_codegen_calls.rs:24:10: 24:19
        return;                          // scope 0 at ui/mir/mir_codegen_calls.rs:24:19: 24:19
    }
}

fn <impl at ui/mir/mir_codegen_calls.rs:24:21: 24:23>::assert_receiver_is_total_eq(_1: &Foo) -> () {
    debug self => _1;                    // in scope 0 at ui/mir/mir_codegen_calls.rs:24:21: 24:23
    let mut _0: ();                      // return place in scope 0 at ui/mir/mir_codegen_calls.rs:24:21: 24:23

    bb0: {
        return;                          // scope 0 at ui/mir/mir_codegen_calls.rs:24:23: 24:23
    }
}

fn <impl at ui/mir/mir_codegen_calls.rs:24:25: 24:30>::fmt(_1: &Foo, _2: &mut Formatter<'_>) -> Result<(), std::fmt::Error> {
    debug self => _1;                    // in scope 0 at ui/mir/mir_codegen_calls.rs:24:25: 24:30
    debug f => _2;                       // in scope 0 at ui/mir/mir_codegen_calls.rs:24:25: 24:30
    let mut _0: std::result::Result<(), std::fmt::Error>; // return place in scope 0 at ui/mir/mir_codegen_calls.rs:24:25: 24:30
    let mut _3: &mut std::fmt::Formatter<'_>; // in scope 0 at ui/mir/mir_codegen_calls.rs:24:25: 24:30
    let mut _4: &str;                    // in scope 0 at ui/mir/mir_codegen_calls.rs:24:25: 24:30
    let _5: &str;                        // in scope 0 at ui/mir/mir_codegen_calls.rs:24:25: 24:30

    bb0: {
        _3 = &mut (*_2);                 // scope 0 at ui/mir/mir_codegen_calls.rs:24:25: 24:30
        _5 = const "Foo";                // scope 0 at ui/mir/mir_codegen_calls.rs:24:25: 24:30
                                         // mir::Constant
                                         // + span: ui/mir/mir_codegen_calls.rs:24:25: 24:30
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _4 = _5;                         // scope 0 at ui/mir/mir_codegen_calls.rs:24:25: 24:30
        _0 = Formatter::<'_>::write_str(move _3, move _4) -> bb1; // scope 0 at ui/mir/mir_codegen_calls.rs:24:25: 24:30
                                         // mir::Constant
                                         // + span: ui/mir/mir_codegen_calls.rs:24:25: 24:30
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a mut Formatter<'_>, &'b str) -> Result<(), std::fmt::Error> {Formatter::<'_>::write_str}, val: Value(<ZST>) }
    }

    bb1: {
        return;                          // scope 0 at ui/mir/mir_codegen_calls.rs:24:30: 24:30
    }
}

fn <impl at ui/mir/mir_codegen_calls.rs:26:1: 26:9>::inherent_method(_1: &Foo, _2: isize) -> isize {
    debug self => _1;                    // in scope 0 at ui/mir/mir_codegen_calls.rs:27:24: 27:29
    debug a => _2;                       // in scope 0 at ui/mir/mir_codegen_calls.rs:27:31: 27:32
    let mut _0: isize;                   // return place in scope 0 at ui/mir/mir_codegen_calls.rs:27:44: 27:49

    bb0: {
        _0 = _2;                         // scope 0 at ui/mir/mir_codegen_calls.rs:27:52: 27:53
        return;                          // scope 0 at ui/mir/mir_codegen_calls.rs:27:55: 27:55
    }
}

fn test3(_1: &Foo, _2: isize) -> isize {
    debug x => _1;                       // in scope 0 at ui/mir/mir_codegen_calls.rs:30:10: 30:11
    debug a => _2;                       // in scope 0 at ui/mir/mir_codegen_calls.rs:30:19: 30:20
    let mut _0: isize;                   // return place in scope 0 at ui/mir/mir_codegen_calls.rs:30:32: 30:37
    let mut _3: &Foo;                    // in scope 0 at ui/mir/mir_codegen_calls.rs:32:5: 32:25
    let mut _4: isize;                   // in scope 0 at ui/mir/mir_codegen_calls.rs:32:23: 32:24

    bb0: {
        _3 = _1;                         // scope 0 at ui/mir/mir_codegen_calls.rs:32:5: 32:25
        _4 = _2;                         // scope 0 at ui/mir/mir_codegen_calls.rs:32:23: 32:24
        _0 = Foo::inherent_method(move _3, move _4) -> bb1; // scope 0 at ui/mir/mir_codegen_calls.rs:32:5: 32:25
                                         // mir::Constant
                                         // + span: ui/mir/mir_codegen_calls.rs:32:7: 32:22
                                         // + literal: Const { ty: for<'a> fn(&'a Foo, isize) -> isize {Foo::inherent_method}, val: Value(<ZST>) }
    }

    bb1: {
        return;                          // scope 0 at ui/mir/mir_codegen_calls.rs:33:2: 33:2
    }
}

fn Bar::extension_method(_1: &Self, _2: isize) -> isize {
    debug self => _1;                    // in scope 0 at ui/mir/mir_codegen_calls.rs:36:25: 36:30
    debug a => _2;                       // in scope 0 at ui/mir/mir_codegen_calls.rs:36:32: 36:33
    let mut _0: isize;                   // return place in scope 0 at ui/mir/mir_codegen_calls.rs:36:45: 36:50

    bb0: {
        _0 = _2;                         // scope 0 at ui/mir/mir_codegen_calls.rs:36:53: 36:54
        return;                          // scope 0 at ui/mir/mir_codegen_calls.rs:36:56: 36:56
    }
}

fn test4(_1: &Foo, _2: isize) -> isize {
    debug x => _1;                       // in scope 0 at ui/mir/mir_codegen_calls.rs:40:10: 40:11
    debug a => _2;                       // in scope 0 at ui/mir/mir_codegen_calls.rs:40:19: 40:20
    let mut _0: isize;                   // return place in scope 0 at ui/mir/mir_codegen_calls.rs:40:32: 40:37
    let mut _3: &Foo;                    // in scope 0 at ui/mir/mir_codegen_calls.rs:42:5: 42:26
    let mut _4: isize;                   // in scope 0 at ui/mir/mir_codegen_calls.rs:42:24: 42:25

    bb0: {
        _3 = _1;                         // scope 0 at ui/mir/mir_codegen_calls.rs:42:5: 42:26
        _4 = _2;                         // scope 0 at ui/mir/mir_codegen_calls.rs:42:24: 42:25
        _0 = <Foo as Bar>::extension_method(move _3, move _4) -> bb1; // scope 0 at ui/mir/mir_codegen_calls.rs:42:5: 42:26
                                         // mir::Constant
                                         // + span: ui/mir/mir_codegen_calls.rs:42:7: 42:23
                                         // + literal: Const { ty: for<'a> fn(&'a Foo, isize) -> isize {<Foo as Bar>::extension_method}, val: Value(<ZST>) }
    }

    bb1: {
        return;                          // scope 0 at ui/mir/mir_codegen_calls.rs:43:2: 43:2
    }
}

fn test5(_1: &dyn Bar, _2: isize) -> isize {
    debug x => _1;                       // in scope 0 at ui/mir/mir_codegen_calls.rs:45:10: 45:11
    debug a => _2;                       // in scope 0 at ui/mir/mir_codegen_calls.rs:45:23: 45:24
    let mut _0: isize;                   // return place in scope 0 at ui/mir/mir_codegen_calls.rs:45:36: 45:41
    let mut _3: &dyn Bar;                // in scope 0 at ui/mir/mir_codegen_calls.rs:47:5: 47:26
    let mut _4: isize;                   // in scope 0 at ui/mir/mir_codegen_calls.rs:47:24: 47:25

    bb0: {
        _3 = _1;                         // scope 0 at ui/mir/mir_codegen_calls.rs:47:5: 47:26
        _4 = _2;                         // scope 0 at ui/mir/mir_codegen_calls.rs:47:24: 47:25
        _0 = <dyn Bar as Bar>::extension_method(move _3, move _4) -> bb1; // scope 0 at ui/mir/mir_codegen_calls.rs:47:5: 47:26
                                         // mir::Constant
                                         // + span: ui/mir/mir_codegen_calls.rs:47:7: 47:23
                                         // + literal: Const { ty: for<'a> fn(&'a dyn Bar, isize) -> isize {<dyn Bar as Bar>::extension_method}, val: Value(<ZST>) }
    }

    bb1: {
        return;                          // scope 0 at ui/mir/mir_codegen_calls.rs:48:2: 48:2
    }
}

fn test6(_1: &T, _2: isize) -> isize {
    debug x => _1;                       // in scope 0 at ui/mir/mir_codegen_calls.rs:50:18: 50:19
    debug a => _2;                       // in scope 0 at ui/mir/mir_codegen_calls.rs:50:25: 50:26
    let mut _0: isize;                   // return place in scope 0 at ui/mir/mir_codegen_calls.rs:50:38: 50:43
    let mut _3: &T;                      // in scope 0 at ui/mir/mir_codegen_calls.rs:52:5: 52:26
    let mut _4: isize;                   // in scope 0 at ui/mir/mir_codegen_calls.rs:52:24: 52:25

    bb0: {
        _3 = _1;                         // scope 0 at ui/mir/mir_codegen_calls.rs:52:5: 52:26
        _4 = _2;                         // scope 0 at ui/mir/mir_codegen_calls.rs:52:24: 52:25
        _0 = <T as Bar>::extension_method(move _3, move _4) -> bb1; // scope 0 at ui/mir/mir_codegen_calls.rs:52:5: 52:26
                                         // mir::Constant
                                         // + span: ui/mir/mir_codegen_calls.rs:52:7: 52:23
                                         // + literal: Const { ty: for<'a> fn(&'a T, isize) -> isize {<T as Bar>::extension_method}, val: Value(<ZST>) }
    }

    bb1: {
        return;                          // scope 0 at ui/mir/mir_codegen_calls.rs:53:2: 53:2
    }
}

fn <impl at ui/mir/mir_codegen_calls.rs:58:1: 58:19>::one() -> isize {
    let mut _0: isize;                   // return place in scope 0 at ui/mir/mir_codegen_calls.rs:59:17: 59:22

    bb0: {
        _0 = const 1_isize;              // scope 0 at ui/mir/mir_codegen_calls.rs:59:25: 59:26
        return;                          // scope 0 at ui/mir/mir_codegen_calls.rs:59:28: 59:28
    }
}

fn test7() -> isize {
    let mut _0: isize;                   // return place in scope 0 at ui/mir/mir_codegen_calls.rs:62:15: 62:20

    bb0: {
        _0 = <isize as One>::one() -> bb1; // scope 0 at ui/mir/mir_codegen_calls.rs:64:5: 64:26
                                         // mir::Constant
                                         // + span: ui/mir/mir_codegen_calls.rs:64:5: 64:24
                                         // + literal: Const { ty: fn() -> isize {<isize as One>::one}, val: Value(<ZST>) }
    }

    bb1: {
        return;                          // scope 0 at ui/mir/mir_codegen_calls.rs:65:2: 65:2
    }
}

fn <impl at ui/mir/mir_codegen_calls.rs:68:1: 68:9>::two() -> isize {
    let mut _0: isize;                   // return place in scope 0 at ui/mir/mir_codegen_calls.rs:69:17: 69:22

    bb0: {
        _0 = const 2_isize;              // scope 0 at ui/mir/mir_codegen_calls.rs:69:25: 69:26
        return;                          // scope 0 at ui/mir/mir_codegen_calls.rs:69:28: 69:28
    }
}

fn test8() -> isize {
    let mut _0: isize;                   // return place in scope 0 at ui/mir/mir_codegen_calls.rs:72:15: 72:20

    bb0: {
        _0 = Two::two() -> bb1;          // scope 0 at ui/mir/mir_codegen_calls.rs:74:5: 74:15
                                         // mir::Constant
                                         // + span: ui/mir/mir_codegen_calls.rs:74:5: 74:13
                                         // + literal: Const { ty: fn() -> isize {Two::two}, val: Value(<ZST>) }
    }

    bb1: {
        return;                          // scope 0 at ui/mir/mir_codegen_calls.rs:75:2: 75:2
    }
}

fn simple_extern(_1: u32, _2: (u32, u32)) -> u32 {
    debug x => _1;                       // in scope 0 at ui/mir/mir_codegen_calls.rs:78:29: 78:30
    debug y => _2;                       // in scope 0 at ui/mir/mir_codegen_calls.rs:78:37: 78:38
    let mut _0: u32;                     // return place in scope 0 at ui/mir/mir_codegen_calls.rs:78:55: 78:58
    let mut _3: u32;                     // in scope 0 at ui/mir/mir_codegen_calls.rs:79:5: 79:6
    let mut _4: u32;                     // in scope 0 at ui/mir/mir_codegen_calls.rs:79:9: 79:18
    let mut _5: u32;                     // in scope 0 at ui/mir/mir_codegen_calls.rs:79:9: 79:12
    let mut _6: u32;                     // in scope 0 at ui/mir/mir_codegen_calls.rs:79:15: 79:18
    let mut _7: (u32, bool);             // in scope 0 at ui/mir/mir_codegen_calls.rs:79:9: 79:18
    let mut _8: (u32, bool);             // in scope 0 at ui/mir/mir_codegen_calls.rs:79:5: 79:18

    bb0: {
        _3 = _1;                         // scope 0 at ui/mir/mir_codegen_calls.rs:79:5: 79:6
        _5 = (_2.0: u32);                // scope 0 at ui/mir/mir_codegen_calls.rs:79:9: 79:12
        _6 = (_2.1: u32);                // scope 0 at ui/mir/mir_codegen_calls.rs:79:15: 79:18
        _7 = CheckedMul(_5, _6);         // scope 0 at ui/mir/mir_codegen_calls.rs:79:9: 79:18
        assert(!move (_7.1: bool), "attempt to compute `{} * {}`, which would overflow", move _5, move _6) -> bb1; // scope 0 at ui/mir/mir_codegen_calls.rs:79:9: 79:18
    }

    bb1: {
        _4 = move (_7.0: u32);           // scope 0 at ui/mir/mir_codegen_calls.rs:79:9: 79:18
        _8 = CheckedAdd(_3, _4);         // scope 0 at ui/mir/mir_codegen_calls.rs:79:5: 79:18
        assert(!move (_8.1: bool), "attempt to compute `{} + {}`, which would overflow", move _3, move _4) -> bb2; // scope 0 at ui/mir/mir_codegen_calls.rs:79:5: 79:18
    }

    bb2: {
        _0 = move (_8.0: u32);           // scope 0 at ui/mir/mir_codegen_calls.rs:79:5: 79:18
        return;                          // scope 0 at ui/mir/mir_codegen_calls.rs:80:2: 80:2
    }
}

fn test9() -> u32 {
    let mut _0: u32;                     // return place in scope 0 at ui/mir/mir_codegen_calls.rs:82:15: 82:18
    let mut _1: (u32, u32);              // in scope 0 at ui/mir/mir_codegen_calls.rs:83:23: 83:31

    bb0: {
        _1 = const (42_u32, 43_u32);     // scope 0 at ui/mir/mir_codegen_calls.rs:83:23: 83:31
        _0 = simple_extern(const 41_u32, move _1) -> bb1; // scope 0 at ui/mir/mir_codegen_calls.rs:83:5: 83:32
                                         // mir::Constant
                                         // + span: ui/mir/mir_codegen_calls.rs:83:5: 83:18
                                         // + literal: Const { ty: extern "C" fn(u32, (u32, u32)) -> u32 {simple_extern}, val: Value(<ZST>) }
    }

    bb1: {
        return;                          // scope 0 at ui/mir/mir_codegen_calls.rs:84:2: 84:2
    }
}

fn test_closure(_1: &F, _2: i32, _3: i32) -> i32 {
    debug f => _1;                       // in scope 0 at ui/mir/mir_codegen_calls.rs:86:20: 86:21
    debug x => _2;                       // in scope 0 at ui/mir/mir_codegen_calls.rs:86:27: 86:28
    debug y => _3;                       // in scope 0 at ui/mir/mir_codegen_calls.rs:86:35: 86:36
    let mut _0: i32;                     // return place in scope 0 at ui/mir/mir_codegen_calls.rs:86:46: 86:49
    let mut _4: &F;                      // in scope 0 at ui/mir/mir_codegen_calls.rs:89:5: 89:6
    let mut _5: (i32, i32);              // in scope 0 at ui/mir/mir_codegen_calls.rs:89:5: 89:12
    let mut _6: i32;                     // in scope 0 at ui/mir/mir_codegen_calls.rs:89:7: 89:8
    let mut _7: i32;                     // in scope 0 at ui/mir/mir_codegen_calls.rs:89:10: 89:11

    bb0: {
        _4 = _1;                         // scope 0 at ui/mir/mir_codegen_calls.rs:89:5: 89:6
        _6 = _2;                         // scope 0 at ui/mir/mir_codegen_calls.rs:89:7: 89:8
        _7 = _3;                         // scope 0 at ui/mir/mir_codegen_calls.rs:89:10: 89:11
        _5 = (move _6, move _7);         // scope 0 at ui/mir/mir_codegen_calls.rs:89:5: 89:12
        _0 = <F as Fn<(i32, i32)>>::call(move _4, move _5) -> bb1; // scope 0 at ui/mir/mir_codegen_calls.rs:89:5: 89:12
                                         // mir::Constant
                                         // + span: ui/mir/mir_codegen_calls.rs:89:5: 89:6
                                         // + literal: Const { ty: for<'a> extern "rust-call" fn(&'a F, (i32, i32)) -> <F as FnOnce<(i32, i32)>>::Output {<F as Fn<(i32, i32)>>::call}, val: Value(<ZST>) }
    }

    bb1: {
        return;                          // scope 0 at ui/mir/mir_codegen_calls.rs:90:2: 90:2
    }
}

fn test_fn_object(_1: &dyn Fn(i32, i32) -> i32, _2: i32, _3: i32) -> i32 {
    debug f => _1;                       // in scope 0 at ui/mir/mir_codegen_calls.rs:92:19: 92:20
    debug x => _2;                       // in scope 0 at ui/mir/mir_codegen_calls.rs:92:48: 92:49
    debug y => _3;                       // in scope 0 at ui/mir/mir_codegen_calls.rs:92:56: 92:57
    let mut _0: i32;                     // return place in scope 0 at ui/mir/mir_codegen_calls.rs:92:67: 92:70
    let mut _4: &dyn std::ops::Fn(i32, i32) -> i32; // in scope 0 at ui/mir/mir_codegen_calls.rs:93:5: 93:6
    let mut _5: (i32, i32);              // in scope 0 at ui/mir/mir_codegen_calls.rs:93:5: 93:12
    let mut _6: i32;                     // in scope 0 at ui/mir/mir_codegen_calls.rs:93:7: 93:8
    let mut _7: i32;                     // in scope 0 at ui/mir/mir_codegen_calls.rs:93:10: 93:11

    bb0: {
        _4 = _1;                         // scope 0 at ui/mir/mir_codegen_calls.rs:93:5: 93:6
        _6 = _2;                         // scope 0 at ui/mir/mir_codegen_calls.rs:93:7: 93:8
        _7 = _3;                         // scope 0 at ui/mir/mir_codegen_calls.rs:93:10: 93:11
        _5 = (move _6, move _7);         // scope 0 at ui/mir/mir_codegen_calls.rs:93:5: 93:12
        _0 = <dyn Fn(i32, i32) -> i32 as Fn<(i32, i32)>>::call(move _4, move _5) -> bb1; // scope 0 at ui/mir/mir_codegen_calls.rs:93:5: 93:12
                                         // mir::Constant
                                         // + span: ui/mir/mir_codegen_calls.rs:93:5: 93:6
                                         // + literal: Const { ty: for<'a> extern "rust-call" fn(&'a dyn Fn(i32, i32) -> i32, (i32, i32)) -> <dyn Fn(i32, i32) -> i32 as FnOnce<(i32, i32)>>::Output {<dyn Fn(i32, i32) -> i32 as Fn<(i32, i32)>>::call}, val: Value(<ZST>) }
    }

    bb1: {
        return;                          // scope 0 at ui/mir/mir_codegen_calls.rs:94:2: 94:2
    }
}

fn test_fn_impl(_1: &&dyn Fn(i32, i32) -> i32, _2: i32, _3: i32) -> i32 {
    debug f => _1;                       // in scope 0 at ui/mir/mir_codegen_calls.rs:96:17: 96:18
    debug x => _2;                       // in scope 0 at ui/mir/mir_codegen_calls.rs:96:47: 96:48
    debug y => _3;                       // in scope 0 at ui/mir/mir_codegen_calls.rs:96:55: 96:56
    let mut _0: i32;                     // return place in scope 0 at ui/mir/mir_codegen_calls.rs:96:66: 96:69
    let mut _4: &&dyn std::ops::Fn(i32, i32) -> i32; // in scope 0 at ui/mir/mir_codegen_calls.rs:100:5: 100:6
    let mut _5: (i32, i32);              // in scope 0 at ui/mir/mir_codegen_calls.rs:100:5: 100:12
    let mut _6: i32;                     // in scope 0 at ui/mir/mir_codegen_calls.rs:100:7: 100:8
    let mut _7: i32;                     // in scope 0 at ui/mir/mir_codegen_calls.rs:100:10: 100:11

    bb0: {
        _4 = _1;                         // scope 0 at ui/mir/mir_codegen_calls.rs:100:5: 100:6
        _6 = _2;                         // scope 0 at ui/mir/mir_codegen_calls.rs:100:7: 100:8
        _7 = _3;                         // scope 0 at ui/mir/mir_codegen_calls.rs:100:10: 100:11
        _5 = (move _6, move _7);         // scope 0 at ui/mir/mir_codegen_calls.rs:100:5: 100:12
        _0 = <&dyn Fn(i32, i32) -> i32 as Fn<(i32, i32)>>::call(move _4, move _5) -> bb1; // scope 0 at ui/mir/mir_codegen_calls.rs:100:5: 100:12
                                         // mir::Constant
                                         // + span: ui/mir/mir_codegen_calls.rs:100:5: 100:6
                                         // + literal: Const { ty: for<'a> extern "rust-call" fn(&'a &dyn Fn(i32, i32) -> i32, (i32, i32)) -> <&dyn Fn(i32, i32) -> i32 as FnOnce<(i32, i32)>>::Output {<&dyn Fn(i32, i32) -> i32 as Fn<(i32, i32)>>::call}, val: Value(<ZST>) }
    }

    bb1: {
        return;                          // scope 0 at ui/mir/mir_codegen_calls.rs:101:2: 101:2
    }
}

fn test_fn_direct_call(_1: &F, _2: i32, _3: i32) -> i32 {
    debug f => _1;                       // in scope 0 at ui/mir/mir_codegen_calls.rs:103:27: 103:28
    debug x => _2;                       // in scope 0 at ui/mir/mir_codegen_calls.rs:103:34: 103:35
    debug y => _3;                       // in scope 0 at ui/mir/mir_codegen_calls.rs:103:42: 103:43
    let mut _0: i32;                     // return place in scope 0 at ui/mir/mir_codegen_calls.rs:103:53: 103:56
    let mut _4: &F;                      // in scope 0 at ui/mir/mir_codegen_calls.rs:106:5: 106:19
    let mut _5: (i32, i32);              // in scope 0 at ui/mir/mir_codegen_calls.rs:106:12: 106:18
    let mut _6: i32;                     // in scope 0 at ui/mir/mir_codegen_calls.rs:106:13: 106:14
    let mut _7: i32;                     // in scope 0 at ui/mir/mir_codegen_calls.rs:106:16: 106:17

    bb0: {
        _4 = _1;                         // scope 0 at ui/mir/mir_codegen_calls.rs:106:5: 106:19
        _6 = _2;                         // scope 0 at ui/mir/mir_codegen_calls.rs:106:13: 106:14
        _7 = _3;                         // scope 0 at ui/mir/mir_codegen_calls.rs:106:16: 106:17
        _5 = (move _6, move _7);         // scope 0 at ui/mir/mir_codegen_calls.rs:106:12: 106:18
        _0 = <F as Fn<(i32, i32)>>::call(move _4, move _5) -> bb1; // scope 0 at ui/mir/mir_codegen_calls.rs:106:5: 106:19
                                         // mir::Constant
                                         // + span: ui/mir/mir_codegen_calls.rs:106:7: 106:11
                                         // + literal: Const { ty: for<'a> extern "rust-call" fn(&'a F, (i32, i32)) -> <F as FnOnce<(i32, i32)>>::Output {<F as Fn<(i32, i32)>>::call}, val: Value(<ZST>) }
    }

    bb1: {
        return;                          // scope 0 at ui/mir/mir_codegen_calls.rs:107:2: 107:2
    }
}

fn test_fn_const_call(_1: &F) -> i32 {
    debug f => _1;                       // in scope 0 at ui/mir/mir_codegen_calls.rs:109:26: 109:27
    let mut _0: i32;                     // return place in scope 0 at ui/mir/mir_codegen_calls.rs:109:36: 109:39
    let mut _2: &F;                      // in scope 0 at ui/mir/mir_codegen_calls.rs:112:5: 112:22
    let mut _3: (i32, i32);              // in scope 0 at ui/mir/mir_codegen_calls.rs:112:12: 112:21

    bb0: {
        _2 = _1;                         // scope 0 at ui/mir/mir_codegen_calls.rs:112:5: 112:22
        _3 = const (100_i32, -1_i32);    // scope 0 at ui/mir/mir_codegen_calls.rs:112:12: 112:21
        _0 = <F as Fn<(i32, i32)>>::call(move _2, move _3) -> bb1; // scope 0 at ui/mir/mir_codegen_calls.rs:112:5: 112:22
                                         // mir::Constant
                                         // + span: ui/mir/mir_codegen_calls.rs:112:7: 112:11
                                         // + literal: Const { ty: for<'a> extern "rust-call" fn(&'a F, (i32, i32)) -> <F as FnOnce<(i32, i32)>>::Output {<F as Fn<(i32, i32)>>::call}, val: Value(<ZST>) }
    }

    bb1: {
        return;                          // scope 0 at ui/mir/mir_codegen_calls.rs:113:2: 113:2
    }
}

fn test_fn_nil_call(_1: &F) -> i32 {
    debug f => _1;                       // in scope 0 at ui/mir/mir_codegen_calls.rs:115:24: 115:25
    let mut _0: i32;                     // return place in scope 0 at ui/mir/mir_codegen_calls.rs:115:34: 115:37
    let mut _2: &F;                      // in scope 0 at ui/mir/mir_codegen_calls.rs:118:5: 118:6
    let mut _3: ();                      // in scope 0 at ui/mir/mir_codegen_calls.rs:118:5: 118:8

    bb0: {
        _2 = _1;                         // scope 0 at ui/mir/mir_codegen_calls.rs:118:5: 118:6
        _0 = <F as Fn<()>>::call(move _2, move _3) -> bb1; // scope 0 at ui/mir/mir_codegen_calls.rs:118:5: 118:8
                                         // mir::Constant
                                         // + span: ui/mir/mir_codegen_calls.rs:118:5: 118:6
                                         // + literal: Const { ty: for<'a> extern "rust-call" fn(&'a F, ()) -> <F as FnOnce<()>>::Output {<F as Fn<()>>::call}, val: Value(<ZST>) }
    }

    bb1: {
        return;                          // scope 0 at ui/mir/mir_codegen_calls.rs:119:2: 119:2
    }
}

fn test_fn_transmute_zst(_1: ()) -> [(); 1] {
    debug x => _1;                       // in scope 0 at ui/mir/mir_codegen_calls.rs:121:26: 121:27
    let mut _0: [(); 1];                 // return place in scope 0 at ui/mir/mir_codegen_calls.rs:121:36: 121:43
    let mut _2: [(); 1];                 // in scope 0 at ui/mir/mir_codegen_calls.rs:124:8: 126:6
    let mut _3: ();                      // in scope 0 at ui/mir/mir_codegen_calls.rs:125:29: 125:30
    scope 1 {
    }

    bb0: {
        _2 = transmute::<(), [(); 1]>(move _3) -> bb1; // scope 1 at ui/mir/mir_codegen_calls.rs:125:9: 125:31
                                         // mir::Constant
                                         // + span: ui/mir/mir_codegen_calls.rs:125:9: 125:28
                                         // + literal: Const { ty: unsafe extern "rust-intrinsic" fn(()) -> [(); 1] {transmute::<(), [(); 1]>}, val: Value(<ZST>) }
    }

    bb1: {
        _0 = test_fn_transmute_zst::id::<[(); 1]>(move _2) -> bb2; // scope 0 at ui/mir/mir_codegen_calls.rs:124:5: 126:7
                                         // mir::Constant
                                         // + span: ui/mir/mir_codegen_calls.rs:124:5: 124:7
                                         // + literal: Const { ty: fn([(); 1]) -> [(); 1] {test_fn_transmute_zst::id::<[(); 1]>}, val: Value(<ZST>) }
    }

    bb2: {
        return;                          // scope 0 at ui/mir/mir_codegen_calls.rs:127:2: 127:2
    }
}

test_fn_transmute_zst::{constant#0}: usize = {
    let mut _0: usize;                   // return place in scope 0 at ui/mir/mir_codegen_calls.rs:121:41: 121:42

    bb0: {
        _0 = const 1_usize;              // scope 0 at ui/mir/mir_codegen_calls.rs:121:41: 121:42
        return;                          // scope 0 at ui/mir/mir_codegen_calls.rs:121:41: 121:42
    }
}

fn test_fn_transmute_zst::id(_1: T) -> T {
    debug x => _1;                       // in scope 0 at ui/mir/mir_codegen_calls.rs:122:14: 122:15
    let mut _0: T;                       // return place in scope 0 at ui/mir/mir_codegen_calls.rs:122:23: 122:24

    bb0: {
        _0 = move _1;                    // scope 0 at ui/mir/mir_codegen_calls.rs:122:26: 122:27
        return;                          // scope 0 at ui/mir/mir_codegen_calls.rs:122:28: 122:28
    }
}

fn test_fn_ignored_pair() -> ((), ()) {
    let mut _0: ((), ());                // return place in scope 0 at ui/mir/mir_codegen_calls.rs:129:30: 129:38

    bb0: {
        return;                          // scope 0 at ui/mir/mir_codegen_calls.rs:131:2: 131:2
    }
}

fn test_fn_ignored_pair_0() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/mir/mir_codegen_calls.rs:133:29: 133:29
    let mut _1: ((), ());                // in scope 0 at ui/mir/mir_codegen_calls.rs:134:5: 134:27

    bb0: {
        _1 = test_fn_ignored_pair() -> bb1; // scope 0 at ui/mir/mir_codegen_calls.rs:134:5: 134:27
                                         // mir::Constant
                                         // + span: ui/mir/mir_codegen_calls.rs:134:5: 134:25
                                         // + literal: Const { ty: fn() -> ((), ()) {test_fn_ignored_pair}, val: Value(<ZST>) }
    }

    bb1: {
        return;                          // scope 0 at ui/mir/mir_codegen_calls.rs:135:2: 135:2
    }
}

fn id(_1: T) -> T {
    debug x => _1;                       // in scope 0 at ui/mir/mir_codegen_calls.rs:137:10: 137:11
    let mut _0: T;                       // return place in scope 0 at ui/mir/mir_codegen_calls.rs:137:19: 137:20

    bb0: {
        _0 = move _1;                    // scope 0 at ui/mir/mir_codegen_calls.rs:137:23: 137:24
        return;                          // scope 0 at ui/mir/mir_codegen_calls.rs:137:26: 137:26
    }
}

fn ignored_pair_named() -> (Foo, Foo) {
    let mut _0: (Foo, Foo);              // return place in scope 0 at ui/mir/mir_codegen_calls.rs:139:28: 139:38

    bb0: {
        return;                          // scope 0 at ui/mir/mir_codegen_calls.rs:141:2: 141:2
    }
}

fn test_fn_ignored_pair_named() -> (Foo, Foo) {
    let mut _0: (Foo, Foo);              // return place in scope 0 at ui/mir/mir_codegen_calls.rs:143:36: 143:46
    let mut _1: (Foo, Foo);              // in scope 0 at ui/mir/mir_codegen_calls.rs:144:8: 144:28

    bb0: {
        _1 = ignored_pair_named() -> bb1; // scope 0 at ui/mir/mir_codegen_calls.rs:144:8: 144:28
                                         // mir::Constant
                                         // + span: ui/mir/mir_codegen_calls.rs:144:8: 144:26
                                         // + literal: Const { ty: fn() -> (Foo, Foo) {ignored_pair_named}, val: Value(<ZST>) }
    }

    bb1: {
        _0 = id::<(Foo, Foo)>(move _1) -> bb2; // scope 0 at ui/mir/mir_codegen_calls.rs:144:5: 144:29
                                         // mir::Constant
                                         // + span: ui/mir/mir_codegen_calls.rs:144:5: 144:7
                                         // + literal: Const { ty: fn((Foo, Foo)) -> (Foo, Foo) {id::<(Foo, Foo)>}, val: Value(<ZST>) }
    }

    bb2: {
        return;                          // scope 0 at ui/mir/mir_codegen_calls.rs:145:2: 145:2
    }
}

fn test_fn_nested_pair(_1: &((f32, f32), u32)) -> (f32, f32) {
    debug x => _1;                       // in scope 0 at ui/mir/mir_codegen_calls.rs:147:24: 147:25
    let mut _0: (f32, f32);              // return place in scope 0 at ui/mir/mir_codegen_calls.rs:147:50: 147:60
    let _2: ((f32, f32), u32);           // in scope 0 at ui/mir/mir_codegen_calls.rs:148:9: 148:10
    let mut _4: f32;                     // in scope 0 at ui/mir/mir_codegen_calls.rs:150:6: 150:9
    let mut _5: f32;                     // in scope 0 at ui/mir/mir_codegen_calls.rs:150:11: 150:14
    scope 1 {
        debug y => _2;                   // in scope 1 at ui/mir/mir_codegen_calls.rs:148:9: 148:10
        let _3: (f32, f32);              // in scope 1 at ui/mir/mir_codegen_calls.rs:149:9: 149:10
        scope 2 {
            debug z => _3;               // in scope 2 at ui/mir/mir_codegen_calls.rs:149:9: 149:10
        }
    }

    bb0: {
        _2 = (*_1);                      // scope 0 at ui/mir/mir_codegen_calls.rs:148:13: 148:15
        _3 = (_2.0: (f32, f32));         // scope 1 at ui/mir/mir_codegen_calls.rs:149:13: 149:16
        _4 = (_3.0: f32);                // scope 2 at ui/mir/mir_codegen_calls.rs:150:6: 150:9
        _5 = (_3.1: f32);                // scope 2 at ui/mir/mir_codegen_calls.rs:150:11: 150:14
        _0 = (move _4, move _5);         // scope 2 at ui/mir/mir_codegen_calls.rs:150:5: 150:15
        return;                          // scope 0 at ui/mir/mir_codegen_calls.rs:151:2: 151:2
    }
}

fn test_fn_const_arg_by_ref(_1: [u64; 4]) -> u64 {
    debug a => _1;                       // in scope 0 at ui/mir/mir_codegen_calls.rs:153:29: 153:34
    let mut _0: u64;                     // return place in scope 0 at ui/mir/mir_codegen_calls.rs:153:49: 153:52
    let _2: &mut [u64; 4];               // in scope 0 at ui/mir/mir_codegen_calls.rs:156:9: 156:10
    let mut _3: &mut [u64; 4];           // in scope 0 at ui/mir/mir_codegen_calls.rs:156:29: 156:35
    let mut _4: u64;                     // in scope 0 at ui/mir/mir_codegen_calls.rs:157:13: 157:17
    let _5: usize;                       // in scope 0 at ui/mir/mir_codegen_calls.rs:157:15: 157:16
    let _6: usize;                       // in scope 0 at ui/mir/mir_codegen_calls.rs:157:7: 157:8
    let mut _7: (u64, bool);             // in scope 0 at ui/mir/mir_codegen_calls.rs:157:5: 157:17
    let mut _8: u64;                     // in scope 0 at ui/mir/mir_codegen_calls.rs:158:13: 158:17
    let _9: usize;                       // in scope 0 at ui/mir/mir_codegen_calls.rs:158:15: 158:16
    let _10: usize;                      // in scope 0 at ui/mir/mir_codegen_calls.rs:158:7: 158:8
    let mut _11: (u64, bool);            // in scope 0 at ui/mir/mir_codegen_calls.rs:158:5: 158:17
    let mut _12: u64;                    // in scope 0 at ui/mir/mir_codegen_calls.rs:159:13: 159:17
    let _13: usize;                      // in scope 0 at ui/mir/mir_codegen_calls.rs:159:15: 159:16
    let _14: usize;                      // in scope 0 at ui/mir/mir_codegen_calls.rs:159:7: 159:8
    let mut _15: (u64, bool);            // in scope 0 at ui/mir/mir_codegen_calls.rs:159:5: 159:17
    let _16: usize;                      // in scope 0 at ui/mir/mir_codegen_calls.rs:160:7: 160:8
    scope 1 {
        debug a => _2;                   // in scope 1 at ui/mir/mir_codegen_calls.rs:156:9: 156:10
    }

    bb0: {
        _3 = &mut _1;                    // scope 0 at ui/mir/mir_codegen_calls.rs:156:29: 156:35
        _2 = test::black_box::<&mut [u64; 4]>(move _3) -> bb1; // scope 0 at ui/mir/mir_codegen_calls.rs:156:13: 156:36
                                         // mir::Constant
                                         // + span: ui/mir/mir_codegen_calls.rs:156:13: 156:28
                                         // + literal: Const { ty: fn(&mut [u64; 4]) -> &mut [u64; 4] {test::black_box::<&mut [u64; 4]>}, val: Value(<ZST>) }
    }

    bb1: {
        _5 = const 1_usize;              // scope 1 at ui/mir/mir_codegen_calls.rs:157:15: 157:16
        _4 = (*_2)[_5];                  // scope 1 at ui/mir/mir_codegen_calls.rs:157:13: 157:17
        _6 = const 0_usize;              // scope 1 at ui/mir/mir_codegen_calls.rs:157:7: 157:8
        _7 = CheckedAdd((*_2)[_6], _4);  // scope 1 at ui/mir/mir_codegen_calls.rs:157:5: 157:17
        assert(!move (_7.1: bool), "attempt to compute `{} + {}`, which would overflow", (*_2)[_6], move _4) -> bb2; // scope 1 at ui/mir/mir_codegen_calls.rs:157:5: 157:17
    }

    bb2: {
        (*_2)[_6] = move (_7.0: u64);    // scope 1 at ui/mir/mir_codegen_calls.rs:157:5: 157:17
        _9 = const 2_usize;              // scope 1 at ui/mir/mir_codegen_calls.rs:158:15: 158:16
        _8 = (*_2)[_9];                  // scope 1 at ui/mir/mir_codegen_calls.rs:158:13: 158:17
        _10 = const 0_usize;             // scope 1 at ui/mir/mir_codegen_calls.rs:158:7: 158:8
        _11 = CheckedAdd((*_2)[_10], _8); // scope 1 at ui/mir/mir_codegen_calls.rs:158:5: 158:17
        assert(!move (_11.1: bool), "attempt to compute `{} + {}`, which would overflow", (*_2)[_10], move _8) -> bb3; // scope 1 at ui/mir/mir_codegen_calls.rs:158:5: 158:17
    }

    bb3: {
        (*_2)[_10] = move (_11.0: u64);  // scope 1 at ui/mir/mir_codegen_calls.rs:158:5: 158:17
        _13 = const 3_usize;             // scope 1 at ui/mir/mir_codegen_calls.rs:159:15: 159:16
        _12 = (*_2)[_13];                // scope 1 at ui/mir/mir_codegen_calls.rs:159:13: 159:17
        _14 = const 0_usize;             // scope 1 at ui/mir/mir_codegen_calls.rs:159:7: 159:8
        _15 = CheckedAdd((*_2)[_14], _12); // scope 1 at ui/mir/mir_codegen_calls.rs:159:5: 159:17
        assert(!move (_15.1: bool), "attempt to compute `{} + {}`, which would overflow", (*_2)[_14], move _12) -> bb4; // scope 1 at ui/mir/mir_codegen_calls.rs:159:5: 159:17
    }

    bb4: {
        (*_2)[_14] = move (_15.0: u64);  // scope 1 at ui/mir/mir_codegen_calls.rs:159:5: 159:17
        _16 = const 0_usize;             // scope 1 at ui/mir/mir_codegen_calls.rs:160:7: 160:8
        _0 = (*_2)[_16];                 // scope 1 at ui/mir/mir_codegen_calls.rs:160:5: 160:9
        return;                          // scope 0 at ui/mir/mir_codegen_calls.rs:161:2: 161:2
    }
}

test_fn_const_arg_by_ref::{constant#0}: usize = {
    let mut _0: usize;                   // return place in scope 0 at ui/mir/mir_codegen_calls.rs:153:42: 153:43

    bb0: {
        _0 = const 4_usize;              // scope 0 at ui/mir/mir_codegen_calls.rs:153:42: 153:43
        return;                          // scope 0 at ui/mir/mir_codegen_calls.rs:153:42: 153:43
    }
}

fn main() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/mir/mir_codegen_calls.rs:163:11: 163:11
    let mut _1: (&(isize, (i32, i32), &[i32]), &(isize, (i32, i32), &[i32])); // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _2: &(isize, (i32, i32), &[i32]); // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let _3: (isize, (i32, i32), &[i32]); // in scope 0 at ui/mir/mir_codegen_calls.rs:164:16: 164:44
    let mut _4: (i32, i32);              // in scope 0 at ui/mir/mir_codegen_calls.rs:164:25: 164:31
    let mut _5: &[i32];                  // in scope 0 at ui/mir/mir_codegen_calls.rs:164:33: 164:43
    let mut _6: &[i32; 3];               // in scope 0 at ui/mir/mir_codegen_calls.rs:164:33: 164:43
    let _7: &[i32; 3];                   // in scope 0 at ui/mir/mir_codegen_calls.rs:164:33: 164:43
    let mut _8: &(isize, (i32, i32), &[i32]); // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let _9: (isize, (i32, i32), &[i32]); // in scope 0 at ui/mir/mir_codegen_calls.rs:164:46: 164:73
    let mut _10: (i32, i32);             // in scope 0 at ui/mir/mir_codegen_calls.rs:164:50: 164:56
    let mut _11: &[i32];                 // in scope 0 at ui/mir/mir_codegen_calls.rs:164:58: 164:72
    let _12: &[i32];                     // in scope 0 at ui/mir/mir_codegen_calls.rs:164:59: 164:72
    let mut _13: &[i32; 3];              // in scope 0 at ui/mir/mir_codegen_calls.rs:164:59: 164:68
    let mut _14: std::ops::RangeFull;    // in scope 0 at ui/mir/mir_codegen_calls.rs:164:69: 164:71
    let _15: &(isize, (i32, i32), &[i32]); // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
    let _16: &(isize, (i32, i32), &[i32]); // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
    let mut _17: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    let mut _18: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
    let mut _19: &(isize, (i32, i32), &[i32]); // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
    let mut _20: &(isize, (i32, i32), &[i32]); // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
    let _22: !;                          // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
    let mut _23: core::panicking::AssertKind; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
    let mut _24: &(isize, (i32, i32), &[i32]); // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let _25: &(isize, (i32, i32), &[i32]); // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let mut _26: &(isize, (i32, i32), &[i32]); // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let _27: &(isize, (i32, i32), &[i32]); // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let mut _28: std::option::Option<std::fmt::Arguments<'_>>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
    let mut _29: (&isize, &isize);       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _30: &isize;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let _31: isize;                      // in scope 0 at ui/mir/mir_codegen_calls.rs:165:16: 165:25
    let mut _32: &isize;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let _33: &isize;                     // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
    let _34: &isize;                     // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
    let mut _35: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    let mut _36: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
    let mut _37: isize;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
    let mut _38: isize;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
    let _40: !;                          // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
    let mut _41: core::panicking::AssertKind; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
    let mut _42: &isize;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let _43: &isize;                     // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let mut _44: &isize;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let _45: &isize;                     // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let mut _46: std::option::Option<std::fmt::Arguments<'_>>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
    let mut _47: (&isize, &isize);       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _48: &isize;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let _49: isize;                      // in scope 0 at ui/mir/mir_codegen_calls.rs:166:16: 166:31
    let mut _50: &Foo;                   // in scope 0 at ui/mir/mir_codegen_calls.rs:166:22: 166:26
    let _51: &Foo;                       // in scope 0 at ui/mir/mir_codegen_calls.rs:166:22: 166:26
    let mut _52: &isize;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let _53: &isize;                     // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
    let _54: &isize;                     // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
    let mut _55: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    let mut _56: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
    let mut _57: isize;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
    let mut _58: isize;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
    let _60: !;                          // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
    let mut _61: core::panicking::AssertKind; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
    let mut _62: &isize;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let _63: &isize;                     // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let mut _64: &isize;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let _65: &isize;                     // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let mut _66: std::option::Option<std::fmt::Arguments<'_>>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
    let mut _67: (&isize, &isize);       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _68: &isize;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let _69: isize;                      // in scope 0 at ui/mir/mir_codegen_calls.rs:167:16: 167:32
    let mut _70: &Foo;                   // in scope 0 at ui/mir/mir_codegen_calls.rs:167:22: 167:26
    let _71: &Foo;                       // in scope 0 at ui/mir/mir_codegen_calls.rs:167:22: 167:26
    let mut _72: &isize;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let _73: &isize;                     // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
    let _74: &isize;                     // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
    let mut _75: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    let mut _76: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
    let mut _77: isize;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
    let mut _78: isize;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
    let _80: !;                          // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
    let mut _81: core::panicking::AssertKind; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
    let mut _82: &isize;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let _83: &isize;                     // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let mut _84: &isize;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let _85: &isize;                     // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let mut _86: std::option::Option<std::fmt::Arguments<'_>>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
    let mut _87: (&isize, &isize);       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _88: &isize;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let _89: isize;                      // in scope 0 at ui/mir/mir_codegen_calls.rs:168:16: 168:33
    let mut _90: &dyn Bar;               // in scope 0 at ui/mir/mir_codegen_calls.rs:168:22: 168:26
    let mut _91: &Foo;                   // in scope 0 at ui/mir/mir_codegen_calls.rs:168:22: 168:26
    let _92: &Foo;                       // in scope 0 at ui/mir/mir_codegen_calls.rs:168:22: 168:26
    let mut _93: &isize;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let _94: &isize;                     // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
    let _95: &isize;                     // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
    let mut _96: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    let mut _97: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
    let mut _98: isize;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
    let mut _99: isize;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
    let _101: !;                         // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
    let mut _102: core::panicking::AssertKind; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
    let mut _103: &isize;                // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let _104: &isize;                    // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let mut _105: &isize;                // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let _106: &isize;                    // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let mut _107: std::option::Option<std::fmt::Arguments<'_>>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
    let mut _108: (&isize, &isize);      // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _109: &isize;                // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let _110: isize;                     // in scope 0 at ui/mir/mir_codegen_calls.rs:169:16: 169:34
    let mut _111: &Foo;                  // in scope 0 at ui/mir/mir_codegen_calls.rs:169:22: 169:26
    let _112: &Foo;                      // in scope 0 at ui/mir/mir_codegen_calls.rs:169:22: 169:26
    let mut _113: &isize;                // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let _114: &isize;                    // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
    let _115: &isize;                    // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
    let mut _116: bool;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    let mut _117: bool;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
    let mut _118: isize;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
    let mut _119: isize;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
    let _121: !;                         // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
    let mut _122: core::panicking::AssertKind; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
    let mut _123: &isize;                // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let _124: &isize;                    // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let mut _125: &isize;                // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let _126: &isize;                    // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let mut _127: std::option::Option<std::fmt::Arguments<'_>>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
    let mut _128: (&isize, &isize);      // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _129: &isize;                // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let _130: isize;                     // in scope 0 at ui/mir/mir_codegen_calls.rs:170:16: 170:23
    let mut _131: &isize;                // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let _132: &isize;                    // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
    let _133: &isize;                    // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
    let mut _134: bool;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    let mut _135: bool;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
    let mut _136: isize;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
    let mut _137: isize;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
    let _139: !;                         // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
    let mut _140: core::panicking::AssertKind; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
    let mut _141: &isize;                // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let _142: &isize;                    // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let mut _143: &isize;                // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let _144: &isize;                    // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let mut _145: std::option::Option<std::fmt::Arguments<'_>>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
    let mut _146: (&isize, &isize);      // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _147: &isize;                // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let _148: isize;                     // in scope 0 at ui/mir/mir_codegen_calls.rs:171:16: 171:23
    let mut _149: &isize;                // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let _150: &isize;                    // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
    let _151: &isize;                    // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
    let mut _152: bool;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    let mut _153: bool;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
    let mut _154: isize;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
    let mut _155: isize;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
    let _157: !;                         // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
    let mut _158: core::panicking::AssertKind; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
    let mut _159: &isize;                // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let _160: &isize;                    // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let mut _161: &isize;                // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let _162: &isize;                    // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let mut _163: std::option::Option<std::fmt::Arguments<'_>>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
    let mut _164: (&u32, &u32);          // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _165: &u32;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let _166: u32;                       // in scope 0 at ui/mir/mir_codegen_calls.rs:172:16: 172:23
    let mut _167: &u32;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let _168: &u32;                      // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
    let _169: &u32;                      // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
    let mut _170: bool;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    let mut _171: bool;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
    let mut _172: u32;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
    let mut _173: u32;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
    let _175: !;                         // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
    let mut _176: core::panicking::AssertKind; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
    let mut _177: &u32;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let _178: &u32;                      // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let mut _179: &u32;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let _180: &u32;                      // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let mut _181: std::option::Option<std::fmt::Arguments<'_>>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
    let _182: i32;                       // in scope 0 at ui/mir/mir_codegen_calls.rs:174:9: 174:10
    let mut _184: &i32;                  // in scope 0 at ui/mir/mir_codegen_calls.rs:175:19: 175:53
    let mut _185: (&i32, &i32);          // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _186: &i32;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let _187: i32;                       // in scope 0 at ui/mir/mir_codegen_calls.rs:176:16: 176:44
    let mut _188: &[closure@ui/mir/mir_codegen_calls.rs:175:19: 175:35]; // in scope 0 at ui/mir/mir_codegen_calls.rs:176:35: 176:43
    let _189: &[closure@ui/mir/mir_codegen_calls.rs:175:19: 175:35]; // in scope 0 at ui/mir/mir_codegen_calls.rs:176:35: 176:43
    let mut _190: &i32;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _193: bool;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    let mut _194: bool;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
    let mut _195: i32;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
    let mut _196: i32;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
    let _198: !;                         // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
    let mut _199: core::panicking::AssertKind; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
    let mut _200: &i32;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let _201: &i32;                      // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let mut _202: &i32;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let _203: &i32;                      // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let mut _204: std::option::Option<std::fmt::Arguments<'_>>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
    let mut _205: (&i32, &i32);          // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _206: &i32;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let _207: i32;                       // in scope 0 at ui/mir/mir_codegen_calls.rs:177:16: 177:46
    let mut _208: &[closure@ui/mir/mir_codegen_calls.rs:175:19: 175:35]; // in scope 0 at ui/mir/mir_codegen_calls.rs:177:29: 177:37
    let _209: &[closure@ui/mir/mir_codegen_calls.rs:175:19: 175:35]; // in scope 0 at ui/mir/mir_codegen_calls.rs:177:29: 177:37
    let mut _210: &i32;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _213: bool;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    let mut _214: bool;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
    let mut _215: i32;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
    let mut _216: i32;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
    let _218: !;                         // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
    let mut _219: core::panicking::AssertKind; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
    let mut _220: &i32;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let _221: &i32;                      // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let mut _222: &i32;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let _223: &i32;                      // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let mut _224: std::option::Option<std::fmt::Arguments<'_>>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
    let mut _226: &dyn std::ops::Fn(i32, i32) -> i32; // in scope 0 at ui/mir/mir_codegen_calls.rs:178:27: 178:63
    let mut _227: &[closure@ui/mir/mir_codegen_calls.rs:175:19: 175:35]; // in scope 0 at ui/mir/mir_codegen_calls.rs:178:27: 178:35
    let _228: &[closure@ui/mir/mir_codegen_calls.rs:175:19: 175:35]; // in scope 0 at ui/mir/mir_codegen_calls.rs:178:27: 178:35
    let mut _229: (&i32, &i32);          // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _230: &i32;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let _231: i32;                       // in scope 0 at ui/mir/mir_codegen_calls.rs:179:16: 179:55
    let mut _232: &dyn std::ops::Fn(i32, i32) -> i32; // in scope 0 at ui/mir/mir_codegen_calls.rs:179:31: 179:46
    let mut _233: &dyn std::ops::Fn(i32, i32) -> i32; // in scope 0 at ui/mir/mir_codegen_calls.rs:179:31: 179:46
    let mut _234: &i32;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _237: bool;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    let mut _238: bool;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
    let mut _239: i32;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
    let mut _240: i32;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
    let _242: !;                         // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
    let mut _243: core::panicking::AssertKind; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
    let mut _244: &i32;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let _245: &i32;                      // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let mut _246: &i32;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let _247: &i32;                      // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let mut _248: std::option::Option<std::fmt::Arguments<'_>>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
    let mut _249: (&i32, &i32);          // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _250: &i32;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let _251: i32;                       // in scope 0 at ui/mir/mir_codegen_calls.rs:180:16: 180:54
    let mut _252: &&dyn std::ops::Fn(i32, i32) -> i32; // in scope 0 at ui/mir/mir_codegen_calls.rs:180:29: 180:45
    let _253: &&dyn std::ops::Fn(i32, i32) -> i32; // in scope 0 at ui/mir/mir_codegen_calls.rs:180:29: 180:45
    let mut _254: &i32;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _257: bool;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    let mut _258: bool;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
    let mut _259: i32;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
    let mut _260: i32;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
    let _262: !;                         // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
    let mut _263: core::panicking::AssertKind; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
    let mut _264: &i32;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let _265: &i32;                      // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let mut _266: &i32;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let _267: &i32;                      // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let mut _268: std::option::Option<std::fmt::Arguments<'_>>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
    let mut _269: (&i32, &i32);          // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _270: &i32;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let _271: i32;                       // in scope 0 at ui/mir/mir_codegen_calls.rs:181:16: 181:53
    let mut _272: &[closure@ui/mir/mir_codegen_calls.rs:175:19: 175:35]; // in scope 0 at ui/mir/mir_codegen_calls.rs:181:36: 181:44
    let _273: &[closure@ui/mir/mir_codegen_calls.rs:175:19: 175:35]; // in scope 0 at ui/mir/mir_codegen_calls.rs:181:36: 181:44
    let mut _274: &i32;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _277: bool;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    let mut _278: bool;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
    let mut _279: i32;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
    let mut _280: i32;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
    let _282: !;                         // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
    let mut _283: core::panicking::AssertKind; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
    let mut _284: &i32;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let _285: &i32;                      // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let mut _286: &i32;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let _287: &i32;                      // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let mut _288: std::option::Option<std::fmt::Arguments<'_>>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
    let mut _289: (&i32, &i32);          // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _290: &i32;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let _291: i32;                       // in scope 0 at ui/mir/mir_codegen_calls.rs:183:16: 183:42
    let mut _292: &[closure@ui/mir/mir_codegen_calls.rs:183:35: 183:37]; // in scope 0 at ui/mir/mir_codegen_calls.rs:183:33: 183:41
    let _293: &[closure@ui/mir/mir_codegen_calls.rs:183:35: 183:37]; // in scope 0 at ui/mir/mir_codegen_calls.rs:183:33: 183:41
    let mut _294: &i32;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _297: bool;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    let mut _298: bool;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
    let mut _299: i32;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
    let mut _300: i32;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
    let _302: !;                         // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
    let mut _303: core::panicking::AssertKind; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
    let mut _304: &i32;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let _305: &i32;                      // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let mut _306: &i32;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let _307: &i32;                      // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let mut _308: std::option::Option<std::fmt::Arguments<'_>>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
    let mut _309: (&[(); 1], &[(); 1]);  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _310: &[(); 1];              // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let _311: [(); 1];                   // in scope 0 at ui/mir/mir_codegen_calls.rs:184:16: 184:41
    let mut _312: ();                    // in scope 0 at ui/mir/mir_codegen_calls.rs:184:38: 184:40
    let mut _313: &[(); 1];              // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _316: bool;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    let mut _317: bool;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
    let mut _318: &[(); 1];              // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
    let mut _319: &[(); 1];              // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
    let _321: !;                         // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
    let mut _322: core::panicking::AssertKind; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
    let mut _323: &[(); 1];              // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let _324: &[(); 1];                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let mut _325: &[(); 1];              // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let _326: &[(); 1];                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let mut _327: std::option::Option<std::fmt::Arguments<'_>>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
    let mut _328: (&(), &());            // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _329: &();                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let _330: ();                        // in scope 0 at ui/mir/mir_codegen_calls.rs:186:16: 186:40
    let mut _331: &();                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _334: bool;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    let mut _335: bool;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
    let mut _336: &();                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
    let mut _337: &();                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
    let _339: !;                         // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
    let mut _340: core::panicking::AssertKind; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
    let mut _341: &();                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let _342: &();                       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let mut _343: &();                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let _344: &();                       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let mut _345: std::option::Option<std::fmt::Arguments<'_>>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
    let mut _346: (&(Foo, Foo), &(Foo, Foo)); // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _347: &(Foo, Foo);           // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let _348: (Foo, Foo);                // in scope 0 at ui/mir/mir_codegen_calls.rs:187:16: 187:44
    let mut _349: &(Foo, Foo);           // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _352: bool;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    let mut _353: bool;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
    let mut _354: &(Foo, Foo);           // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
    let mut _355: &(Foo, Foo);           // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
    let _357: !;                         // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
    let mut _358: core::panicking::AssertKind; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
    let mut _359: &(Foo, Foo);           // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let _360: &(Foo, Foo);               // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let mut _361: &(Foo, Foo);           // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let _362: &(Foo, Foo);               // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let mut _363: std::option::Option<std::fmt::Arguments<'_>>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
    let mut _364: (&(f32, f32), &(f32, f32)); // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _365: &(f32, f32);           // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let _366: (f32, f32);                // in scope 0 at ui/mir/mir_codegen_calls.rs:188:16: 188:53
    let mut _367: &((f32, f32), u32);    // in scope 0 at ui/mir/mir_codegen_calls.rs:188:36: 188:52
    let _368: &((f32, f32), u32);        // in scope 0 at ui/mir/mir_codegen_calls.rs:188:36: 188:52
    let mut _369: &(f32, f32);           // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _372: bool;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    let mut _373: bool;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
    let mut _374: &(f32, f32);           // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
    let mut _375: &(f32, f32);           // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
    let _377: !;                         // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
    let mut _378: core::panicking::AssertKind; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
    let mut _379: &(f32, f32);           // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let _380: &(f32, f32);               // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let mut _381: &(f32, f32);           // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let _382: &(f32, f32);               // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let mut _383: std::option::Option<std::fmt::Arguments<'_>>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
    let mut _384: (&u64, &u64);          // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _385: &u64;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let _386: u64;                       // in scope 0 at ui/mir/mir_codegen_calls.rs:191:16: 191:47
    let mut _387: &u64;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _390: bool;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    let mut _391: bool;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
    let mut _392: u64;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
    let mut _393: u64;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
    let _395: !;                         // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
    let mut _396: core::panicking::AssertKind; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
    let mut _397: &u64;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let _398: &u64;                      // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let mut _399: &u64;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let _400: &u64;                      // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let mut _401: std::option::Option<std::fmt::Arguments<'_>>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
    let mut _415: &u32;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _416: &isize;                // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _417: &isize;                // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _418: &isize;                // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _419: &Foo;                  // in scope 0 at ui/mir/mir_codegen_calls.rs:169:22: 169:26
    let mut _420: &isize;                // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _421: &Foo;                  // in scope 0 at ui/mir/mir_codegen_calls.rs:168:22: 168:26
    let mut _422: &isize;                // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _423: &Foo;                  // in scope 0 at ui/mir/mir_codegen_calls.rs:167:22: 167:26
    let mut _424: &isize;                // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _425: &Foo;                  // in scope 0 at ui/mir/mir_codegen_calls.rs:166:22: 166:26
    let mut _426: &isize;                // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _427: &[i32; 3];             // in scope 0 at ui/mir/mir_codegen_calls.rs:164:59: 164:68
    let mut _428: &[i32; 3];             // in scope 0 at ui/mir/mir_codegen_calls.rs:164:33: 164:43
    scope 1 {
        debug left_val => _15;           // in scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        debug right_val => _16;          // in scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        let _21: core::panicking::AssertKind; // in scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
        scope 2 {
            debug kind => _21;           // in scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
        }
    }
    scope 3 {
        debug left_val => _33;           // in scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        debug right_val => _34;          // in scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        let _39: core::panicking::AssertKind; // in scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
        scope 4 {
            debug kind => _39;           // in scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
        }
    }
    scope 5 {
        debug left_val => _53;           // in scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        debug right_val => _54;          // in scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        let _59: core::panicking::AssertKind; // in scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
        scope 6 {
            debug kind => _59;           // in scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
        }
    }
    scope 7 {
        debug left_val => _73;           // in scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        debug right_val => _74;          // in scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        let _79: core::panicking::AssertKind; // in scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
        scope 8 {
            debug kind => _79;           // in scope 8 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
        }
    }
    scope 9 {
        debug left_val => _94;           // in scope 9 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        debug right_val => _95;          // in scope 9 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        let _100: core::panicking::AssertKind; // in scope 9 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
        scope 10 {
            debug kind => _100;          // in scope 10 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
        }
    }
    scope 11 {
        debug left_val => _114;          // in scope 11 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        debug right_val => _115;         // in scope 11 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        let _120: core::panicking::AssertKind; // in scope 11 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
        scope 12 {
            debug kind => _120;          // in scope 12 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
        }
    }
    scope 13 {
        debug left_val => _132;          // in scope 13 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        debug right_val => _133;         // in scope 13 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        let _138: core::panicking::AssertKind; // in scope 13 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
        scope 14 {
            debug kind => _138;          // in scope 14 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
        }
    }
    scope 15 {
        debug left_val => _150;          // in scope 15 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        debug right_val => _151;         // in scope 15 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        let _156: core::panicking::AssertKind; // in scope 15 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
        scope 16 {
            debug kind => _156;          // in scope 16 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
        }
    }
    scope 17 {
        debug left_val => _168;          // in scope 17 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        debug right_val => _169;         // in scope 17 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        let _174: core::panicking::AssertKind; // in scope 17 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
        scope 18 {
            debug kind => _174;          // in scope 18 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
        }
    }
    scope 19 {
        debug r => _182;                 // in scope 19 at ui/mir/mir_codegen_calls.rs:174:9: 174:10
        let _183: [closure@ui/mir/mir_codegen_calls.rs:175:19: 175:35]; // in scope 19 at ui/mir/mir_codegen_calls.rs:175:9: 175:16
        scope 20 {
            debug closure => _183;       // in scope 20 at ui/mir/mir_codegen_calls.rs:175:9: 175:16
            let _191: &i32;              // in scope 20 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
            let _192: &i32;              // in scope 20 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
            let _211: &i32;              // in scope 20 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
            let _212: &i32;              // in scope 20 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
            let _225: &dyn std::ops::Fn(i32, i32) -> i32; // in scope 20 at ui/mir/mir_codegen_calls.rs:178:9: 178:24
            let mut _413: &i32;          // in scope 20 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
            let mut _414: &i32;          // in scope 20 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
            scope 21 {
                debug left_val => _191;  // in scope 21 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
                debug right_val => _192; // in scope 21 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
                let _197: core::panicking::AssertKind; // in scope 21 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                scope 22 {
                    debug kind => _197;  // in scope 22 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                }
            }
            scope 23 {
                debug left_val => _211;  // in scope 23 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
                debug right_val => _212; // in scope 23 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
                let _217: core::panicking::AssertKind; // in scope 23 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                scope 24 {
                    debug kind => _217;  // in scope 24 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                }
            }
            scope 25 {
                debug function_object => _225; // in scope 25 at ui/mir/mir_codegen_calls.rs:178:9: 178:24
                let _235: &i32;          // in scope 25 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
                let _236: &i32;          // in scope 25 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
                let _255: &i32;          // in scope 25 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
                let _256: &i32;          // in scope 25 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
                let _275: &i32;          // in scope 25 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
                let _276: &i32;          // in scope 25 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
                let _295: &i32;          // in scope 25 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
                let _296: &i32;          // in scope 25 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
                let _314: &[(); 1];      // in scope 25 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
                let _315: &[(); 1];      // in scope 25 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
                let _332: &();           // in scope 25 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
                let _333: &();           // in scope 25 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
                let _350: &(Foo, Foo);   // in scope 25 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
                let _351: &(Foo, Foo);   // in scope 25 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
                let _370: &(f32, f32);   // in scope 25 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
                let _371: &(f32, f32);   // in scope 25 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
                let _388: &u64;          // in scope 25 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
                let _389: &u64;          // in scope 25 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
                let mut _402: &u64;      // in scope 25 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                let mut _403: &(f32, f32); // in scope 25 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                let mut _404: &((f32, f32), u32); // in scope 25 at ui/mir/mir_codegen_calls.rs:188:36: 188:52
                let mut _405: &(Foo, Foo); // in scope 25 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                let mut _406: &();       // in scope 25 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                let mut _407: &[(); 1];  // in scope 25 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                let mut _408: &i32;      // in scope 25 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                let mut _409: &[closure@ui/mir/mir_codegen_calls.rs:183:35: 183:37]; // in scope 25 at ui/mir/mir_codegen_calls.rs:183:33: 183:41
                let mut _410: &i32;      // in scope 25 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                let mut _411: &i32;      // in scope 25 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                let mut _412: &i32;      // in scope 25 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                scope 26 {
                    debug left_val => _235; // in scope 26 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
                    debug right_val => _236; // in scope 26 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
                    let _241: core::panicking::AssertKind; // in scope 26 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                    scope 27 {
                        debug kind => _241; // in scope 27 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                    }
                }
                scope 28 {
                    debug left_val => _255; // in scope 28 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
                    debug right_val => _256; // in scope 28 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
                    let _261: core::panicking::AssertKind; // in scope 28 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                    scope 29 {
                        debug kind => _261; // in scope 29 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                    }
                }
                scope 30 {
                    debug left_val => _275; // in scope 30 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
                    debug right_val => _276; // in scope 30 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
                    let _281: core::panicking::AssertKind; // in scope 30 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                    scope 31 {
                        debug kind => _281; // in scope 31 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                    }
                }
                scope 32 {
                    debug left_val => _295; // in scope 32 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
                    debug right_val => _296; // in scope 32 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
                    let _301: core::panicking::AssertKind; // in scope 32 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                    scope 33 {
                        debug kind => _301; // in scope 33 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                    }
                }
                scope 34 {
                    debug left_val => _314; // in scope 34 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
                    debug right_val => _315; // in scope 34 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
                    let _320: core::panicking::AssertKind; // in scope 34 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                    scope 35 {
                        debug kind => _320; // in scope 35 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                    }
                }
                scope 36 {
                    debug left_val => _332; // in scope 36 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
                    debug right_val => _333; // in scope 36 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
                    let _338: core::panicking::AssertKind; // in scope 36 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                    scope 37 {
                        debug kind => _338; // in scope 37 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                    }
                }
                scope 38 {
                    debug left_val => _350; // in scope 38 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
                    debug right_val => _351; // in scope 38 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
                    let _356: core::panicking::AssertKind; // in scope 38 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                    scope 39 {
                        debug kind => _356; // in scope 39 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                    }
                }
                scope 40 {
                    debug left_val => _370; // in scope 40 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
                    debug right_val => _371; // in scope 40 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
                    let _376: core::panicking::AssertKind; // in scope 40 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                    scope 41 {
                        debug kind => _376; // in scope 41 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                    }
                }
                scope 42 {
                    debug left_val => _388; // in scope 42 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
                    debug right_val => _389; // in scope 42 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
                    let _394: core::panicking::AssertKind; // in scope 42 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                    scope 43 {
                        debug kind => _394; // in scope 43 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                    }
                }
            }
        }
    }

    bb0: {
        _4 = const (2_i32, 3_i32);       // scope 0 at ui/mir/mir_codegen_calls.rs:164:25: 164:31
        _428 = const _;                  // scope 0 at ui/mir/mir_codegen_calls.rs:164:33: 164:43
                                         // mir::Constant
                                         // + span: ui/mir/mir_codegen_calls.rs:164:33: 164:43
                                         // + literal: Const { ty: &[i32; 3], val: Unevaluated(main, [], Some(promoted[26])) }
        _7 = _428;                       // scope 0 at ui/mir/mir_codegen_calls.rs:164:33: 164:43
        _6 = _7;                         // scope 0 at ui/mir/mir_codegen_calls.rs:164:33: 164:43
        _5 = move _6 as &[i32] (Pointer(Unsize)); // scope 0 at ui/mir/mir_codegen_calls.rs:164:33: 164:43
        _3 = test1(const 1_isize, move _4, move _5) -> bb1; // scope 0 at ui/mir/mir_codegen_calls.rs:164:16: 164:44
                                         // mir::Constant
                                         // + span: ui/mir/mir_codegen_calls.rs:164:16: 164:21
                                         // + literal: Const { ty: for<'a> fn(isize, (i32, i32), &'a [i32]) -> (isize, (i32, i32), &'a [i32]) {test1}, val: Value(<ZST>) }
    }

    bb1: {
        _2 = &_3;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _10 = const (2_i32, 3_i32);      // scope 0 at ui/mir/mir_codegen_calls.rs:164:50: 164:56
        _427 = const _;                  // scope 0 at ui/mir/mir_codegen_calls.rs:164:59: 164:68
                                         // mir::Constant
                                         // + span: ui/mir/mir_codegen_calls.rs:164:59: 164:68
                                         // + literal: Const { ty: &[i32; 3], val: Unevaluated(main, [], Some(promoted[25])) }
        _13 = _427;                      // scope 0 at ui/mir/mir_codegen_calls.rs:164:59: 164:68
        _12 = <[i32; 3] as Index<RangeFull>>::index(move _13, move _14) -> bb2; // scope 0 at ui/mir/mir_codegen_calls.rs:164:59: 164:72
                                         // mir::Constant
                                         // + span: ui/mir/mir_codegen_calls.rs:164:59: 164:72
                                         // + literal: Const { ty: for<'a> fn(&'a [i32; 3], RangeFull) -> &'a <[i32; 3] as Index<RangeFull>>::Output {<[i32; 3] as Index<RangeFull>>::index}, val: Value(<ZST>) }
    }

    bb2: {
        _11 = _12;                       // scope 0 at ui/mir/mir_codegen_calls.rs:164:58: 164:72
        _9 = (const 1_isize, move _10, move _11); // scope 0 at ui/mir/mir_codegen_calls.rs:164:46: 164:73
        _8 = &_9;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _1 = (move _2, move _8);         // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _15 = (_1.0: &(isize, (i32, i32), &[i32])); // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _16 = (_1.1: &(isize, (i32, i32), &[i32])); // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _19 = _15;                       // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
        _20 = _16;                       // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
        _18 = <(isize, (i32, i32), &[i32]) as PartialEq>::eq(move _19, move _20) -> bb3; // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a (isize, (i32, i32), &[i32]), &'b (isize, (i32, i32), &[i32])) -> bool {<(isize, (i32, i32), &[i32]) as PartialEq>::eq}, val: Value(<ZST>) }
    }

    bb3: {
        _17 = Not(move _18);             // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
        switchInt(move _17) -> [0: bb5, otherwise: bb4]; // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    }

    bb4: {
        _21 = const core::panicking::AssertKind::Eq; // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _23 = const core::panicking::AssertKind::Eq; // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _25 = _15;                       // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _24 = _25;                       // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _27 = _16;                       // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _26 = _27;                       // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _28 = Option::<Arguments<'_>>::None; // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
        _22 = core::panicking::assert_failed::<(isize, (i32, i32), &[i32]), (isize, (i32, i32), &[i32])>(move _23, move _24, move _26, move _28); // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:53
                                         // + literal: Const { ty: for<'a, 'b, 'c> fn(core::panicking::AssertKind, &'a (isize, (i32, i32), &[i32]), &'b (isize, (i32, i32), &[i32]), Option<Arguments<'c>>) -> ! {core::panicking::assert_failed::<(isize, (i32, i32), &[i32]), (isize, (i32, i32), &[i32])>}, val: Value(<ZST>) }
    }

    bb5: {
        _31 = test2(const 98_isize) -> bb6; // scope 0 at ui/mir/mir_codegen_calls.rs:165:16: 165:25
                                         // mir::Constant
                                         // + span: ui/mir/mir_codegen_calls.rs:165:16: 165:21
                                         // + literal: Const { ty: fn(isize) -> isize {test2}, val: Value(<ZST>) }
    }

    bb6: {
        _30 = &_31;                      // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _426 = const _;                  // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // + literal: Const { ty: &isize, val: Unevaluated(main, [], Some(promoted[24])) }
        _32 = _426;                      // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _29 = (move _30, move _32);      // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _33 = (_29.0: &isize);           // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _34 = (_29.1: &isize);           // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _37 = (*_33);                    // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
        _38 = const 98_isize;            // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
        _36 = Eq(move _37, move _38);    // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
        _35 = Not(move _36);             // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
        switchInt(move _35) -> [0: bb8, otherwise: bb7]; // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    }

    bb7: {
        _39 = const core::panicking::AssertKind::Eq; // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _41 = const core::panicking::AssertKind::Eq; // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _43 = _33;                       // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _42 = _43;                       // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _45 = _34;                       // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _44 = _45;                       // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _46 = Option::<Arguments<'_>>::None; // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
        _40 = core::panicking::assert_failed::<isize, isize>(move _41, move _42, move _44, move _46); // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:53
                                         // + literal: Const { ty: for<'a, 'b, 'c> fn(core::panicking::AssertKind, &'a isize, &'b isize, Option<Arguments<'c>>) -> ! {core::panicking::assert_failed::<isize, isize>}, val: Value(<ZST>) }
    }

    bb8: {
        _425 = const _;                  // scope 0 at ui/mir/mir_codegen_calls.rs:166:22: 166:26
                                         // mir::Constant
                                         // + span: ui/mir/mir_codegen_calls.rs:166:22: 166:26
                                         // + literal: Const { ty: &Foo, val: Unevaluated(main, [], Some(promoted[23])) }
        _51 = _425;                      // scope 0 at ui/mir/mir_codegen_calls.rs:166:22: 166:26
        _50 = _51;                       // scope 0 at ui/mir/mir_codegen_calls.rs:166:22: 166:26
        _49 = test3(move _50, const 42_isize) -> bb9; // scope 0 at ui/mir/mir_codegen_calls.rs:166:16: 166:31
                                         // mir::Constant
                                         // + span: ui/mir/mir_codegen_calls.rs:166:16: 166:21
                                         // + literal: Const { ty: for<'a> fn(&'a Foo, isize) -> isize {test3}, val: Value(<ZST>) }
    }

    bb9: {
        _48 = &_49;                      // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _424 = const _;                  // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // + literal: Const { ty: &isize, val: Unevaluated(main, [], Some(promoted[22])) }
        _52 = _424;                      // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _47 = (move _48, move _52);      // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _53 = (_47.0: &isize);           // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _54 = (_47.1: &isize);           // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _57 = (*_53);                    // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
        _58 = const 42_isize;            // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
        _56 = Eq(move _57, move _58);    // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
        _55 = Not(move _56);             // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
        switchInt(move _55) -> [0: bb11, otherwise: bb10]; // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    }

    bb10: {
        _59 = const core::panicking::AssertKind::Eq; // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _61 = const core::panicking::AssertKind::Eq; // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _63 = _53;                       // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _62 = _63;                       // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _65 = _54;                       // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _64 = _65;                       // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _66 = Option::<Arguments<'_>>::None; // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
        _60 = core::panicking::assert_failed::<isize, isize>(move _61, move _62, move _64, move _66); // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:53
                                         // + literal: Const { ty: for<'a, 'b, 'c> fn(core::panicking::AssertKind, &'a isize, &'b isize, Option<Arguments<'c>>) -> ! {core::panicking::assert_failed::<isize, isize>}, val: Value(<ZST>) }
    }

    bb11: {
        _423 = const _;                  // scope 0 at ui/mir/mir_codegen_calls.rs:167:22: 167:26
                                         // mir::Constant
                                         // + span: ui/mir/mir_codegen_calls.rs:167:22: 167:26
                                         // + literal: Const { ty: &Foo, val: Unevaluated(main, [], Some(promoted[21])) }
        _71 = _423;                      // scope 0 at ui/mir/mir_codegen_calls.rs:167:22: 167:26
        _70 = _71;                       // scope 0 at ui/mir/mir_codegen_calls.rs:167:22: 167:26
        _69 = test4(move _70, const 970_isize) -> bb12; // scope 0 at ui/mir/mir_codegen_calls.rs:167:16: 167:32
                                         // mir::Constant
                                         // + span: ui/mir/mir_codegen_calls.rs:167:16: 167:21
                                         // + literal: Const { ty: for<'a> fn(&'a Foo, isize) -> isize {test4}, val: Value(<ZST>) }
    }

    bb12: {
        _68 = &_69;                      // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _422 = const _;                  // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // + literal: Const { ty: &isize, val: Unevaluated(main, [], Some(promoted[20])) }
        _72 = _422;                      // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _67 = (move _68, move _72);      // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _73 = (_67.0: &isize);           // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _74 = (_67.1: &isize);           // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _77 = (*_73);                    // scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
        _78 = const 970_isize;           // scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
        _76 = Eq(move _77, move _78);    // scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
        _75 = Not(move _76);             // scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
        switchInt(move _75) -> [0: bb14, otherwise: bb13]; // scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    }

    bb13: {
        _79 = const core::panicking::AssertKind::Eq; // scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _81 = const core::panicking::AssertKind::Eq; // scope 8 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _83 = _73;                       // scope 8 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _82 = _83;                       // scope 8 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _85 = _74;                       // scope 8 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _84 = _85;                       // scope 8 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _86 = Option::<Arguments<'_>>::None; // scope 8 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
        _80 = core::panicking::assert_failed::<isize, isize>(move _81, move _82, move _84, move _86); // scope 8 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:53
                                         // + literal: Const { ty: for<'a, 'b, 'c> fn(core::panicking::AssertKind, &'a isize, &'b isize, Option<Arguments<'c>>) -> ! {core::panicking::assert_failed::<isize, isize>}, val: Value(<ZST>) }
    }

    bb14: {
        _421 = const _;                  // scope 0 at ui/mir/mir_codegen_calls.rs:168:22: 168:26
                                         // mir::Constant
                                         // + span: ui/mir/mir_codegen_calls.rs:168:22: 168:26
                                         // + literal: Const { ty: &Foo, val: Unevaluated(main, [], Some(promoted[19])) }
        _92 = _421;                      // scope 0 at ui/mir/mir_codegen_calls.rs:168:22: 168:26
        _91 = _92;                       // scope 0 at ui/mir/mir_codegen_calls.rs:168:22: 168:26
        _90 = move _91 as &dyn Bar (Pointer(Unsize)); // scope 0 at ui/mir/mir_codegen_calls.rs:168:22: 168:26
        _89 = test5(move _90, const 8576_isize) -> bb15; // scope 0 at ui/mir/mir_codegen_calls.rs:168:16: 168:33
                                         // mir::Constant
                                         // + span: ui/mir/mir_codegen_calls.rs:168:16: 168:21
                                         // + literal: Const { ty: for<'a> fn(&'a (dyn Bar + 'a), isize) -> isize {test5}, val: Value(<ZST>) }
    }

    bb15: {
        _88 = &_89;                      // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _420 = const _;                  // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // + literal: Const { ty: &isize, val: Unevaluated(main, [], Some(promoted[18])) }
        _93 = _420;                      // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _87 = (move _88, move _93);      // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _94 = (_87.0: &isize);           // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _95 = (_87.1: &isize);           // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _98 = (*_94);                    // scope 9 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
        _99 = const 8576_isize;          // scope 9 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
        _97 = Eq(move _98, move _99);    // scope 9 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
        _96 = Not(move _97);             // scope 9 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
        switchInt(move _96) -> [0: bb17, otherwise: bb16]; // scope 9 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    }

    bb16: {
        _100 = const core::panicking::AssertKind::Eq; // scope 9 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _102 = const core::panicking::AssertKind::Eq; // scope 10 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _104 = _94;                      // scope 10 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _103 = _104;                     // scope 10 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _106 = _95;                      // scope 10 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _105 = _106;                     // scope 10 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _107 = Option::<Arguments<'_>>::None; // scope 10 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
        _101 = core::panicking::assert_failed::<isize, isize>(move _102, move _103, move _105, move _107); // scope 10 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:53
                                         // + literal: Const { ty: for<'a, 'b, 'c> fn(core::panicking::AssertKind, &'a isize, &'b isize, Option<Arguments<'c>>) -> ! {core::panicking::assert_failed::<isize, isize>}, val: Value(<ZST>) }
    }

    bb17: {
        _419 = const _;                  // scope 0 at ui/mir/mir_codegen_calls.rs:169:22: 169:26
                                         // mir::Constant
                                         // + span: ui/mir/mir_codegen_calls.rs:169:22: 169:26
                                         // + literal: Const { ty: &Foo, val: Unevaluated(main, [], Some(promoted[17])) }
        _112 = _419;                     // scope 0 at ui/mir/mir_codegen_calls.rs:169:22: 169:26
        _111 = _112;                     // scope 0 at ui/mir/mir_codegen_calls.rs:169:22: 169:26
        _110 = test6::<Foo>(move _111, const 12367_isize) -> bb18; // scope 0 at ui/mir/mir_codegen_calls.rs:169:16: 169:34
                                         // mir::Constant
                                         // + span: ui/mir/mir_codegen_calls.rs:169:16: 169:21
                                         // + literal: Const { ty: for<'a> fn(&'a Foo, isize) -> isize {test6::<Foo>}, val: Value(<ZST>) }
    }

    bb18: {
        _109 = &_110;                    // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _418 = const _;                  // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // + literal: Const { ty: &isize, val: Unevaluated(main, [], Some(promoted[16])) }
        _113 = _418;                     // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _108 = (move _109, move _113);   // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _114 = (_108.0: &isize);         // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _115 = (_108.1: &isize);         // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _118 = (*_114);                  // scope 11 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
        _119 = const 12367_isize;        // scope 11 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
        _117 = Eq(move _118, move _119); // scope 11 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
        _116 = Not(move _117);           // scope 11 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
        switchInt(move _116) -> [0: bb20, otherwise: bb19]; // scope 11 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    }

    bb19: {
        _120 = const core::panicking::AssertKind::Eq; // scope 11 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _122 = const core::panicking::AssertKind::Eq; // scope 12 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _124 = _114;                     // scope 12 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _123 = _124;                     // scope 12 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _126 = _115;                     // scope 12 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _125 = _126;                     // scope 12 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _127 = Option::<Arguments<'_>>::None; // scope 12 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
        _121 = core::panicking::assert_failed::<isize, isize>(move _122, move _123, move _125, move _127); // scope 12 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:53
                                         // + literal: Const { ty: for<'a, 'b, 'c> fn(core::panicking::AssertKind, &'a isize, &'b isize, Option<Arguments<'c>>) -> ! {core::panicking::assert_failed::<isize, isize>}, val: Value(<ZST>) }
    }

    bb20: {
        _130 = test7() -> bb21;          // scope 0 at ui/mir/mir_codegen_calls.rs:170:16: 170:23
                                         // mir::Constant
                                         // + span: ui/mir/mir_codegen_calls.rs:170:16: 170:21
                                         // + literal: Const { ty: fn() -> isize {test7}, val: Value(<ZST>) }
    }

    bb21: {
        _129 = &_130;                    // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _417 = const _;                  // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // + literal: Const { ty: &isize, val: Unevaluated(main, [], Some(promoted[15])) }
        _131 = _417;                     // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _128 = (move _129, move _131);   // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _132 = (_128.0: &isize);         // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _133 = (_128.1: &isize);         // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _136 = (*_132);                  // scope 13 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
        _137 = const 1_isize;            // scope 13 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
        _135 = Eq(move _136, move _137); // scope 13 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
        _134 = Not(move _135);           // scope 13 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
        switchInt(move _134) -> [0: bb23, otherwise: bb22]; // scope 13 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    }

    bb22: {
        _138 = const core::panicking::AssertKind::Eq; // scope 13 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _140 = const core::panicking::AssertKind::Eq; // scope 14 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _142 = _132;                     // scope 14 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _141 = _142;                     // scope 14 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _144 = _133;                     // scope 14 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _143 = _144;                     // scope 14 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _145 = Option::<Arguments<'_>>::None; // scope 14 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
        _139 = core::panicking::assert_failed::<isize, isize>(move _140, move _141, move _143, move _145); // scope 14 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:53
                                         // + literal: Const { ty: for<'a, 'b, 'c> fn(core::panicking::AssertKind, &'a isize, &'b isize, Option<Arguments<'c>>) -> ! {core::panicking::assert_failed::<isize, isize>}, val: Value(<ZST>) }
    }

    bb23: {
        _148 = test8() -> bb24;          // scope 0 at ui/mir/mir_codegen_calls.rs:171:16: 171:23
                                         // mir::Constant
                                         // + span: ui/mir/mir_codegen_calls.rs:171:16: 171:21
                                         // + literal: Const { ty: fn() -> isize {test8}, val: Value(<ZST>) }
    }

    bb24: {
        _147 = &_148;                    // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _416 = const _;                  // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // + literal: Const { ty: &isize, val: Unevaluated(main, [], Some(promoted[14])) }
        _149 = _416;                     // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _146 = (move _147, move _149);   // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _150 = (_146.0: &isize);         // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _151 = (_146.1: &isize);         // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _154 = (*_150);                  // scope 15 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
        _155 = const 2_isize;            // scope 15 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
        _153 = Eq(move _154, move _155); // scope 15 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
        _152 = Not(move _153);           // scope 15 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
        switchInt(move _152) -> [0: bb26, otherwise: bb25]; // scope 15 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    }

    bb25: {
        _156 = const core::panicking::AssertKind::Eq; // scope 15 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _158 = const core::panicking::AssertKind::Eq; // scope 16 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _160 = _150;                     // scope 16 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _159 = _160;                     // scope 16 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _162 = _151;                     // scope 16 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _161 = _162;                     // scope 16 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _163 = Option::<Arguments<'_>>::None; // scope 16 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
        _157 = core::panicking::assert_failed::<isize, isize>(move _158, move _159, move _161, move _163); // scope 16 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:53
                                         // + literal: Const { ty: for<'a, 'b, 'c> fn(core::panicking::AssertKind, &'a isize, &'b isize, Option<Arguments<'c>>) -> ! {core::panicking::assert_failed::<isize, isize>}, val: Value(<ZST>) }
    }

    bb26: {
        _166 = test9() -> bb27;          // scope 0 at ui/mir/mir_codegen_calls.rs:172:16: 172:23
                                         // mir::Constant
                                         // + span: ui/mir/mir_codegen_calls.rs:172:16: 172:21
                                         // + literal: Const { ty: fn() -> u32 {test9}, val: Value(<ZST>) }
    }

    bb27: {
        _165 = &_166;                    // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _415 = const _;                  // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // + literal: Const { ty: &u32, val: Unevaluated(main, [], Some(promoted[13])) }
        _167 = _415;                     // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _164 = (move _165, move _167);   // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _168 = (_164.0: &u32);           // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _169 = (_164.1: &u32);           // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _172 = (*_168);                  // scope 17 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
        _173 = const 1847_u32;           // scope 17 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
        _171 = Eq(move _172, move _173); // scope 17 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
        _170 = Not(move _171);           // scope 17 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
        switchInt(move _170) -> [0: bb29, otherwise: bb28]; // scope 17 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    }

    bb28: {
        _174 = const core::panicking::AssertKind::Eq; // scope 17 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _176 = const core::panicking::AssertKind::Eq; // scope 18 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _178 = _168;                     // scope 18 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _177 = _178;                     // scope 18 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _180 = _169;                     // scope 18 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _179 = _180;                     // scope 18 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _181 = Option::<Arguments<'_>>::None; // scope 18 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
        _175 = core::panicking::assert_failed::<u32, u32>(move _176, move _177, move _179, move _181); // scope 18 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:53
                                         // + literal: Const { ty: for<'a, 'b, 'c> fn(core::panicking::AssertKind, &'a u32, &'b u32, Option<Arguments<'c>>) -> ! {core::panicking::assert_failed::<u32, u32>}, val: Value(<ZST>) }
    }

    bb29: {
        _182 = const 3_i32;              // scope 0 at ui/mir/mir_codegen_calls.rs:174:13: 174:14
        _184 = &_182;                    // scope 19 at ui/mir/mir_codegen_calls.rs:175:19: 175:53
        _183 = [closure@ui/mir/mir_codegen_calls.rs:175:19: 175:35] { r: move _184 }; // scope 19 at ui/mir/mir_codegen_calls.rs:175:19: 175:53
                                         // closure
                                         // + def_id: DefId(0:55 ~ mir_codegen_calls[3d6e]::main::{closure#0})
                                         // + substs: [
                                         //     i8,
                                         //     extern "rust-call" fn((i32, i32)) -> i32,
                                         //     (&i32,),
                                         // ]
        _189 = &_183;                    // scope 20 at ui/mir/mir_codegen_calls.rs:176:35: 176:43
        _188 = _189;                     // scope 20 at ui/mir/mir_codegen_calls.rs:176:35: 176:43
        _187 = test_fn_const_call::<[closure@ui/mir/mir_codegen_calls.rs:175:19: 175:35]>(move _188) -> bb30; // scope 20 at ui/mir/mir_codegen_calls.rs:176:16: 176:44
                                         // mir::Constant
                                         // + span: ui/mir/mir_codegen_calls.rs:176:16: 176:34
                                         // + literal: Const { ty: for<'a> fn(&'a [closure@ui/mir/mir_codegen_calls.rs:175:19: 175:35]) -> i32 {test_fn_const_call::<[closure@ui/mir/mir_codegen_calls.rs:175:19: 175:35]>}, val: Value(<ZST>) }
    }

    bb30: {
        _186 = &_187;                    // scope 20 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _414 = const _;                  // scope 20 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // + literal: Const { ty: &i32, val: Unevaluated(main, [], Some(promoted[12])) }
        _190 = _414;                     // scope 20 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _185 = (move _186, move _190);   // scope 20 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _191 = (_185.0: &i32);           // scope 20 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _192 = (_185.1: &i32);           // scope 20 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _195 = (*_191);                  // scope 21 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
        _196 = const 294_i32;            // scope 21 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
        _194 = Eq(move _195, move _196); // scope 21 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
        _193 = Not(move _194);           // scope 21 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
        switchInt(move _193) -> [0: bb32, otherwise: bb31]; // scope 21 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    }

    bb31: {
        _197 = const core::panicking::AssertKind::Eq; // scope 21 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _199 = const core::panicking::AssertKind::Eq; // scope 22 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _201 = _191;                     // scope 22 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _200 = _201;                     // scope 22 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _203 = _192;                     // scope 22 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _202 = _203;                     // scope 22 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _204 = Option::<Arguments<'_>>::None; // scope 22 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
        _198 = core::panicking::assert_failed::<i32, i32>(move _199, move _200, move _202, move _204); // scope 22 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:53
                                         // + literal: Const { ty: for<'a, 'b, 'c> fn(core::panicking::AssertKind, &'a i32, &'b i32, Option<Arguments<'c>>) -> ! {core::panicking::assert_failed::<i32, i32>}, val: Value(<ZST>) }
    }

    bb32: {
        _209 = &_183;                    // scope 20 at ui/mir/mir_codegen_calls.rs:177:29: 177:37
        _208 = _209;                     // scope 20 at ui/mir/mir_codegen_calls.rs:177:29: 177:37
        _207 = test_closure::<[closure@ui/mir/mir_codegen_calls.rs:175:19: 175:35]>(move _208, const 100_i32, const 1_i32) -> bb33; // scope 20 at ui/mir/mir_codegen_calls.rs:177:16: 177:46
                                         // mir::Constant
                                         // + span: ui/mir/mir_codegen_calls.rs:177:16: 177:28
                                         // + literal: Const { ty: for<'a> fn(&'a [closure@ui/mir/mir_codegen_calls.rs:175:19: 175:35], i32, i32) -> i32 {test_closure::<[closure@ui/mir/mir_codegen_calls.rs:175:19: 175:35]>}, val: Value(<ZST>) }
    }

    bb33: {
        _206 = &_207;                    // scope 20 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _413 = const _;                  // scope 20 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // + literal: Const { ty: &i32, val: Unevaluated(main, [], Some(promoted[11])) }
        _210 = _413;                     // scope 20 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _205 = (move _206, move _210);   // scope 20 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _211 = (_205.0: &i32);           // scope 20 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _212 = (_205.1: &i32);           // scope 20 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _215 = (*_211);                  // scope 23 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
        _216 = const 306_i32;            // scope 23 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
        _214 = Eq(move _215, move _216); // scope 23 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
        _213 = Not(move _214);           // scope 23 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
        switchInt(move _213) -> [0: bb35, otherwise: bb34]; // scope 23 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    }

    bb34: {
        _217 = const core::panicking::AssertKind::Eq; // scope 23 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _219 = const core::panicking::AssertKind::Eq; // scope 24 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _221 = _211;                     // scope 24 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _220 = _221;                     // scope 24 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _223 = _212;                     // scope 24 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _222 = _223;                     // scope 24 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _224 = Option::<Arguments<'_>>::None; // scope 24 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
        _218 = core::panicking::assert_failed::<i32, i32>(move _219, move _220, move _222, move _224); // scope 24 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:53
                                         // + literal: Const { ty: for<'a, 'b, 'c> fn(core::panicking::AssertKind, &'a i32, &'b i32, Option<Arguments<'c>>) -> ! {core::panicking::assert_failed::<i32, i32>}, val: Value(<ZST>) }
    }

    bb35: {
        _228 = &_183;                    // scope 20 at ui/mir/mir_codegen_calls.rs:178:27: 178:35
        _227 = _228;                     // scope 20 at ui/mir/mir_codegen_calls.rs:178:27: 178:35
        _226 = move _227 as &dyn std::ops::Fn(i32, i32) -> i32 (Pointer(Unsize)); // scope 20 at ui/mir/mir_codegen_calls.rs:178:27: 178:35
        _225 = _226;                     // scope 20 at ui/mir/mir_codegen_calls.rs:178:27: 178:63
        _233 = _225;                     // scope 25 at ui/mir/mir_codegen_calls.rs:179:31: 179:46
        _232 = move _233 as &dyn std::ops::Fn(i32, i32) -> i32 (Pointer(Unsize)); // scope 25 at ui/mir/mir_codegen_calls.rs:179:31: 179:46
        _231 = test_fn_object(move _232, const 100_i32, const 2_i32) -> bb36; // scope 25 at ui/mir/mir_codegen_calls.rs:179:16: 179:55
                                         // mir::Constant
                                         // + span: ui/mir/mir_codegen_calls.rs:179:16: 179:30
                                         // + literal: Const { ty: for<'a> fn(&'a (dyn Fn(i32, i32) -> i32 + 'a), i32, i32) -> i32 {test_fn_object}, val: Value(<ZST>) }
    }

    bb36: {
        _230 = &_231;                    // scope 25 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _412 = const _;                  // scope 25 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // + literal: Const { ty: &i32, val: Unevaluated(main, [], Some(promoted[10])) }
        _234 = _412;                     // scope 25 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _229 = (move _230, move _234);   // scope 25 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _235 = (_229.0: &i32);           // scope 25 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _236 = (_229.1: &i32);           // scope 25 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _239 = (*_235);                  // scope 26 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
        _240 = const 312_i32;            // scope 26 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
        _238 = Eq(move _239, move _240); // scope 26 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
        _237 = Not(move _238);           // scope 26 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
        switchInt(move _237) -> [0: bb38, otherwise: bb37]; // scope 26 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    }

    bb37: {
        _241 = const core::panicking::AssertKind::Eq; // scope 26 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _243 = const core::panicking::AssertKind::Eq; // scope 27 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _245 = _235;                     // scope 27 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _244 = _245;                     // scope 27 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _247 = _236;                     // scope 27 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _246 = _247;                     // scope 27 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _248 = Option::<Arguments<'_>>::None; // scope 27 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
        _242 = core::panicking::assert_failed::<i32, i32>(move _243, move _244, move _246, move _248); // scope 27 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:53
                                         // + literal: Const { ty: for<'a, 'b, 'c> fn(core::panicking::AssertKind, &'a i32, &'b i32, Option<Arguments<'c>>) -> ! {core::panicking::assert_failed::<i32, i32>}, val: Value(<ZST>) }
    }

    bb38: {
        _253 = &_225;                    // scope 25 at ui/mir/mir_codegen_calls.rs:180:29: 180:45
        _252 = _253;                     // scope 25 at ui/mir/mir_codegen_calls.rs:180:29: 180:45
        _251 = test_fn_impl(move _252, const 100_i32, const 3_i32) -> bb39; // scope 25 at ui/mir/mir_codegen_calls.rs:180:16: 180:54
                                         // mir::Constant
                                         // + span: ui/mir/mir_codegen_calls.rs:180:16: 180:28
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a &'b (dyn Fn(i32, i32) -> i32 + 'b), i32, i32) -> i32 {test_fn_impl}, val: Value(<ZST>) }
    }

    bb39: {
        _250 = &_251;                    // scope 25 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _411 = const _;                  // scope 25 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // + literal: Const { ty: &i32, val: Unevaluated(main, [], Some(promoted[9])) }
        _254 = _411;                     // scope 25 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _249 = (move _250, move _254);   // scope 25 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _255 = (_249.0: &i32);           // scope 25 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _256 = (_249.1: &i32);           // scope 25 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _259 = (*_255);                  // scope 28 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
        _260 = const 318_i32;            // scope 28 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
        _258 = Eq(move _259, move _260); // scope 28 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
        _257 = Not(move _258);           // scope 28 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
        switchInt(move _257) -> [0: bb41, otherwise: bb40]; // scope 28 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    }

    bb40: {
        _261 = const core::panicking::AssertKind::Eq; // scope 28 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _263 = const core::panicking::AssertKind::Eq; // scope 29 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _265 = _255;                     // scope 29 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _264 = _265;                     // scope 29 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _267 = _256;                     // scope 29 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _266 = _267;                     // scope 29 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _268 = Option::<Arguments<'_>>::None; // scope 29 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
        _262 = core::panicking::assert_failed::<i32, i32>(move _263, move _264, move _266, move _268); // scope 29 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:53
                                         // + literal: Const { ty: for<'a, 'b, 'c> fn(core::panicking::AssertKind, &'a i32, &'b i32, Option<Arguments<'c>>) -> ! {core::panicking::assert_failed::<i32, i32>}, val: Value(<ZST>) }
    }

    bb41: {
        _273 = &_183;                    // scope 25 at ui/mir/mir_codegen_calls.rs:181:36: 181:44
        _272 = _273;                     // scope 25 at ui/mir/mir_codegen_calls.rs:181:36: 181:44
        _271 = test_fn_direct_call::<[closure@ui/mir/mir_codegen_calls.rs:175:19: 175:35]>(move _272, const 100_i32, const 4_i32) -> bb42; // scope 25 at ui/mir/mir_codegen_calls.rs:181:16: 181:53
                                         // mir::Constant
                                         // + span: ui/mir/mir_codegen_calls.rs:181:16: 181:35
                                         // + literal: Const { ty: for<'a> fn(&'a [closure@ui/mir/mir_codegen_calls.rs:175:19: 175:35], i32, i32) -> i32 {test_fn_direct_call::<[closure@ui/mir/mir_codegen_calls.rs:175:19: 175:35]>}, val: Value(<ZST>) }
    }

    bb42: {
        _270 = &_271;                    // scope 25 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _410 = const _;                  // scope 25 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // + literal: Const { ty: &i32, val: Unevaluated(main, [], Some(promoted[8])) }
        _274 = _410;                     // scope 25 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _269 = (move _270, move _274);   // scope 25 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _275 = (_269.0: &i32);           // scope 25 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _276 = (_269.1: &i32);           // scope 25 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _279 = (*_275);                  // scope 30 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
        _280 = const 324_i32;            // scope 30 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
        _278 = Eq(move _279, move _280); // scope 30 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
        _277 = Not(move _278);           // scope 30 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
        switchInt(move _277) -> [0: bb44, otherwise: bb43]; // scope 30 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    }

    bb43: {
        _281 = const core::panicking::AssertKind::Eq; // scope 30 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _283 = const core::panicking::AssertKind::Eq; // scope 31 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _285 = _275;                     // scope 31 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _284 = _285;                     // scope 31 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _287 = _276;                     // scope 31 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _286 = _287;                     // scope 31 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _288 = Option::<Arguments<'_>>::None; // scope 31 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
        _282 = core::panicking::assert_failed::<i32, i32>(move _283, move _284, move _286, move _288); // scope 31 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:53
                                         // + literal: Const { ty: for<'a, 'b, 'c> fn(core::panicking::AssertKind, &'a i32, &'b i32, Option<Arguments<'c>>) -> ! {core::panicking::assert_failed::<i32, i32>}, val: Value(<ZST>) }
    }

    bb44: {
        _409 = const _;                  // scope 25 at ui/mir/mir_codegen_calls.rs:183:33: 183:41
                                         // mir::Constant
                                         // + span: ui/mir/mir_codegen_calls.rs:183:33: 183:41
                                         // + literal: Const { ty: &[closure@ui/mir/mir_codegen_calls.rs:183:35: 183:37], val: Unevaluated(main, [], Some(promoted[7])) }
        _293 = _409;                     // scope 25 at ui/mir/mir_codegen_calls.rs:183:33: 183:41
        _292 = _293;                     // scope 25 at ui/mir/mir_codegen_calls.rs:183:33: 183:41
        _291 = test_fn_nil_call::<[closure@ui/mir/mir_codegen_calls.rs:183:35: 183:37]>(move _292) -> bb45; // scope 25 at ui/mir/mir_codegen_calls.rs:183:16: 183:42
                                         // mir::Constant
                                         // + span: ui/mir/mir_codegen_calls.rs:183:16: 183:32
                                         // + literal: Const { ty: for<'a> fn(&'a [closure@ui/mir/mir_codegen_calls.rs:183:35: 183:37]) -> i32 {test_fn_nil_call::<[closure@ui/mir/mir_codegen_calls.rs:183:35: 183:37]>}, val: Value(<ZST>) }
    }

    bb45: {
        _290 = &_291;                    // scope 25 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _408 = const _;                  // scope 25 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // + literal: Const { ty: &i32, val: Unevaluated(main, [], Some(promoted[6])) }
        _294 = _408;                     // scope 25 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _289 = (move _290, move _294);   // scope 25 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _295 = (_289.0: &i32);           // scope 25 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _296 = (_289.1: &i32);           // scope 25 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _299 = (*_295);                  // scope 32 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
        _300 = const 42_i32;             // scope 32 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
        _298 = Eq(move _299, move _300); // scope 32 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
        _297 = Not(move _298);           // scope 32 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
        switchInt(move _297) -> [0: bb47, otherwise: bb46]; // scope 32 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    }

    bb46: {
        _301 = const core::panicking::AssertKind::Eq; // scope 32 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _303 = const core::panicking::AssertKind::Eq; // scope 33 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _305 = _295;                     // scope 33 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _304 = _305;                     // scope 33 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _307 = _296;                     // scope 33 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _306 = _307;                     // scope 33 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _308 = Option::<Arguments<'_>>::None; // scope 33 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
        _302 = core::panicking::assert_failed::<i32, i32>(move _303, move _304, move _306, move _308); // scope 33 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:53
                                         // + literal: Const { ty: for<'a, 'b, 'c> fn(core::panicking::AssertKind, &'a i32, &'b i32, Option<Arguments<'c>>) -> ! {core::panicking::assert_failed::<i32, i32>}, val: Value(<ZST>) }
    }

    bb47: {
        _311 = test_fn_transmute_zst(move _312) -> bb48; // scope 25 at ui/mir/mir_codegen_calls.rs:184:16: 184:41
                                         // mir::Constant
                                         // + span: ui/mir/mir_codegen_calls.rs:184:16: 184:37
                                         // + literal: Const { ty: fn(()) -> [(); 1] {test_fn_transmute_zst}, val: Value(<ZST>) }
    }

    bb48: {
        _310 = &_311;                    // scope 25 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _407 = const _;                  // scope 25 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // + literal: Const { ty: &[(); 1], val: Unevaluated(main, [], Some(promoted[5])) }
        _313 = _407;                     // scope 25 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _309 = (move _310, move _313);   // scope 25 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _314 = (_309.0: &[(); 1]);       // scope 25 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _315 = (_309.1: &[(); 1]);       // scope 25 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _318 = _314;                     // scope 34 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
        _319 = _315;                     // scope 34 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
        _317 = <[(); 1] as PartialEq>::eq(move _318, move _319) -> bb49; // scope 34 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a [(); 1], &'b [(); 1]) -> bool {<[(); 1] as PartialEq>::eq}, val: Value(<ZST>) }
    }

    bb49: {
        _316 = Not(move _317);           // scope 34 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
        switchInt(move _316) -> [0: bb51, otherwise: bb50]; // scope 34 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    }

    bb50: {
        _320 = const core::panicking::AssertKind::Eq; // scope 34 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _322 = const core::panicking::AssertKind::Eq; // scope 35 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _324 = _314;                     // scope 35 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _323 = _324;                     // scope 35 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _326 = _315;                     // scope 35 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _325 = _326;                     // scope 35 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _327 = Option::<Arguments<'_>>::None; // scope 35 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
        _321 = core::panicking::assert_failed::<[(); 1], [(); 1]>(move _322, move _323, move _325, move _327); // scope 35 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:53
                                         // + literal: Const { ty: for<'a, 'b, 'c> fn(core::panicking::AssertKind, &'a [(); 1], &'b [(); 1], Option<Arguments<'c>>) -> ! {core::panicking::assert_failed::<[(); 1], [(); 1]>}, val: Value(<ZST>) }
    }

    bb51: {
        _330 = test_fn_ignored_pair_0() -> bb52; // scope 25 at ui/mir/mir_codegen_calls.rs:186:16: 186:40
                                         // mir::Constant
                                         // + span: ui/mir/mir_codegen_calls.rs:186:16: 186:38
                                         // + literal: Const { ty: fn() {test_fn_ignored_pair_0}, val: Value(<ZST>) }
    }

    bb52: {
        _329 = &_330;                    // scope 25 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _406 = const _;                  // scope 25 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // + literal: Const { ty: &(), val: Unevaluated(main, [], Some(promoted[4])) }
        _331 = _406;                     // scope 25 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _328 = (move _329, move _331);   // scope 25 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _332 = (_328.0: &());            // scope 25 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _333 = (_328.1: &());            // scope 25 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _336 = _332;                     // scope 36 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
        _337 = _333;                     // scope 36 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
        _335 = <() as PartialEq>::eq(move _336, move _337) -> bb53; // scope 36 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a (), &'b ()) -> bool {<() as PartialEq>::eq}, val: Value(<ZST>) }
    }

    bb53: {
        _334 = Not(move _335);           // scope 36 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
        switchInt(move _334) -> [0: bb55, otherwise: bb54]; // scope 36 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    }

    bb54: {
        _338 = const core::panicking::AssertKind::Eq; // scope 36 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _340 = const core::panicking::AssertKind::Eq; // scope 37 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _342 = _332;                     // scope 37 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _341 = _342;                     // scope 37 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _344 = _333;                     // scope 37 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _343 = _344;                     // scope 37 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _345 = Option::<Arguments<'_>>::None; // scope 37 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
        _339 = core::panicking::assert_failed::<(), ()>(move _340, move _341, move _343, move _345); // scope 37 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:53
                                         // + literal: Const { ty: for<'a, 'b, 'c> fn(core::panicking::AssertKind, &'a (), &'b (), Option<Arguments<'c>>) -> ! {core::panicking::assert_failed::<(), ()>}, val: Value(<ZST>) }
    }

    bb55: {
        _348 = test_fn_ignored_pair_named() -> bb56; // scope 25 at ui/mir/mir_codegen_calls.rs:187:16: 187:44
                                         // mir::Constant
                                         // + span: ui/mir/mir_codegen_calls.rs:187:16: 187:42
                                         // + literal: Const { ty: fn() -> (Foo, Foo) {test_fn_ignored_pair_named}, val: Value(<ZST>) }
    }

    bb56: {
        _347 = &_348;                    // scope 25 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _405 = const _;                  // scope 25 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // + literal: Const { ty: &(Foo, Foo), val: Unevaluated(main, [], Some(promoted[3])) }
        _349 = _405;                     // scope 25 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _346 = (move _347, move _349);   // scope 25 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _350 = (_346.0: &(Foo, Foo));    // scope 25 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _351 = (_346.1: &(Foo, Foo));    // scope 25 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _354 = _350;                     // scope 38 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
        _355 = _351;                     // scope 38 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
        _353 = <(Foo, Foo) as PartialEq>::eq(move _354, move _355) -> bb57; // scope 38 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a (Foo, Foo), &'b (Foo, Foo)) -> bool {<(Foo, Foo) as PartialEq>::eq}, val: Value(<ZST>) }
    }

    bb57: {
        _352 = Not(move _353);           // scope 38 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
        switchInt(move _352) -> [0: bb59, otherwise: bb58]; // scope 38 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    }

    bb58: {
        _356 = const core::panicking::AssertKind::Eq; // scope 38 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _358 = const core::panicking::AssertKind::Eq; // scope 39 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _360 = _350;                     // scope 39 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _359 = _360;                     // scope 39 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _362 = _351;                     // scope 39 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _361 = _362;                     // scope 39 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _363 = Option::<Arguments<'_>>::None; // scope 39 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
        _357 = core::panicking::assert_failed::<(Foo, Foo), (Foo, Foo)>(move _358, move _359, move _361, move _363); // scope 39 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:53
                                         // + literal: Const { ty: for<'a, 'b, 'c> fn(core::panicking::AssertKind, &'a (Foo, Foo), &'b (Foo, Foo), Option<Arguments<'c>>) -> ! {core::panicking::assert_failed::<(Foo, Foo), (Foo, Foo)>}, val: Value(<ZST>) }
    }

    bb59: {
        _404 = const _;                  // scope 25 at ui/mir/mir_codegen_calls.rs:188:36: 188:52
                                         // mir::Constant
                                         // + span: ui/mir/mir_codegen_calls.rs:188:36: 188:52
                                         // + literal: Const { ty: &((f32, f32), u32), val: Unevaluated(main, [], Some(promoted[2])) }
        _368 = _404;                     // scope 25 at ui/mir/mir_codegen_calls.rs:188:36: 188:52
        _367 = _368;                     // scope 25 at ui/mir/mir_codegen_calls.rs:188:36: 188:52
        _366 = test_fn_nested_pair(move _367) -> bb60; // scope 25 at ui/mir/mir_codegen_calls.rs:188:16: 188:53
                                         // mir::Constant
                                         // + span: ui/mir/mir_codegen_calls.rs:188:16: 188:35
                                         // + literal: Const { ty: for<'a> fn(&'a ((f32, f32), u32)) -> (f32, f32) {test_fn_nested_pair}, val: Value(<ZST>) }
    }

    bb60: {
        _365 = &_366;                    // scope 25 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _403 = const _;                  // scope 25 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // + literal: Const { ty: &(f32, f32), val: Unevaluated(main, [], Some(promoted[1])) }
        _369 = _403;                     // scope 25 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _364 = (move _365, move _369);   // scope 25 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _370 = (_364.0: &(f32, f32));    // scope 25 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _371 = (_364.1: &(f32, f32));    // scope 25 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _374 = _370;                     // scope 40 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
        _375 = _371;                     // scope 40 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
        _373 = <(f32, f32) as PartialEq>::eq(move _374, move _375) -> bb61; // scope 40 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a (f32, f32), &'b (f32, f32)) -> bool {<(f32, f32) as PartialEq>::eq}, val: Value(<ZST>) }
    }

    bb61: {
        _372 = Not(move _373);           // scope 40 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
        switchInt(move _372) -> [0: bb63, otherwise: bb62]; // scope 40 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    }

    bb62: {
        _376 = const core::panicking::AssertKind::Eq; // scope 40 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _378 = const core::panicking::AssertKind::Eq; // scope 41 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _380 = _370;                     // scope 41 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _379 = _380;                     // scope 41 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _382 = _371;                     // scope 41 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _381 = _382;                     // scope 41 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _383 = Option::<Arguments<'_>>::None; // scope 41 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
        _377 = core::panicking::assert_failed::<(f32, f32), (f32, f32)>(move _378, move _379, move _381, move _383); // scope 41 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:53
                                         // + literal: Const { ty: for<'a, 'b, 'c> fn(core::panicking::AssertKind, &'a (f32, f32), &'b (f32, f32), Option<Arguments<'c>>) -> ! {core::panicking::assert_failed::<(f32, f32), (f32, f32)>}, val: Value(<ZST>) }
    }

    bb63: {
        _386 = test_fn_const_arg_by_ref(const _) -> bb64; // scope 25 at ui/mir/mir_codegen_calls.rs:191:16: 191:47
                                         // mir::Constant
                                         // + span: ui/mir/mir_codegen_calls.rs:191:16: 191:40
                                         // + literal: Const { ty: fn([u64; 4]) -> u64 {test_fn_const_arg_by_ref}, val: Value(<ZST>) }
    }

    bb64: {
        _385 = &_386;                    // scope 25 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _402 = const _;                  // scope 25 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // + literal: Const { ty: &u64, val: Unevaluated(main, [], Some(promoted[0])) }
        _387 = _402;                     // scope 25 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _384 = (move _385, move _387);   // scope 25 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _388 = (_384.0: &u64);           // scope 25 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _389 = (_384.1: &u64);           // scope 25 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _392 = (*_388);                  // scope 42 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
        _393 = const 10_u64;             // scope 42 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
        _391 = Eq(move _392, move _393); // scope 42 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
        _390 = Not(move _391);           // scope 42 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
        switchInt(move _390) -> [0: bb66, otherwise: bb65]; // scope 42 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    }

    bb65: {
        _394 = const core::panicking::AssertKind::Eq; // scope 42 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _396 = const core::panicking::AssertKind::Eq; // scope 43 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _398 = _388;                     // scope 43 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _397 = _398;                     // scope 43 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _400 = _389;                     // scope 43 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _399 = _400;                     // scope 43 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _401 = Option::<Arguments<'_>>::None; // scope 43 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
        _395 = core::panicking::assert_failed::<u64, u64>(move _396, move _397, move _399, move _401); // scope 43 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:53
                                         // + literal: Const { ty: for<'a, 'b, 'c> fn(core::panicking::AssertKind, &'a u64, &'b u64, Option<Arguments<'c>>) -> ! {core::panicking::assert_failed::<u64, u64>}, val: Value(<ZST>) }
    }

    bb66: {
        return;                          // scope 0 at ui/mir/mir_codegen_calls.rs:192:2: 192:2
    }
}

promoted[0] in main: &u64 = {
    let mut _0: &u64;                    // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _1: u64;                     // in scope 0 at ui/mir/mir_codegen_calls.rs:191:49: 191:62
    let mut _2: (u64, bool);             // in scope 0 at ui/mir/mir_codegen_calls.rs:191:49: 191:62
    let mut _3: u64;                     // in scope 0 at ui/mir/mir_codegen_calls.rs:191:49: 191:58
    let mut _4: (u64, bool);             // in scope 0 at ui/mir/mir_codegen_calls.rs:191:49: 191:58
    let mut _5: u64;                     // in scope 0 at ui/mir/mir_codegen_calls.rs:191:49: 191:54
    let mut _6: (u64, bool);             // in scope 0 at ui/mir/mir_codegen_calls.rs:191:49: 191:54

    bb0: {
        _6 = CheckedAdd(const 1_u64, const 2_u64); // scope 0 at ui/mir/mir_codegen_calls.rs:191:49: 191:54
        _5 = move (_6.0: u64);           // scope 0 at ui/mir/mir_codegen_calls.rs:191:49: 191:54
        _4 = CheckedAdd(_5, const 3_u64); // scope 0 at ui/mir/mir_codegen_calls.rs:191:49: 191:58
        _3 = move (_4.0: u64);           // scope 0 at ui/mir/mir_codegen_calls.rs:191:49: 191:58
        _2 = CheckedAdd(_3, const 4_u64); // scope 0 at ui/mir/mir_codegen_calls.rs:191:49: 191:62
        _1 = move (_2.0: u64);           // scope 0 at ui/mir/mir_codegen_calls.rs:191:49: 191:62
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    }
}

promoted[1] in main: &(f32, f32) = {
    let mut _0: &(f32, f32);             // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _1: (f32, f32);              // in scope 0 at ui/mir/mir_codegen_calls.rs:188:55: 188:65

    bb0: {
        _1 = (const 1f32, const 2f32);   // scope 0 at ui/mir/mir_codegen_calls.rs:188:55: 188:65
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    }
}

promoted[2] in main: &((f32, f32), u32) = {
    let mut _0: &((f32, f32), u32);      // return place in scope 0 at ui/mir/mir_codegen_calls.rs:188:36: 188:52
    let mut _1: ((f32, f32), u32);       // in scope 0 at ui/mir/mir_codegen_calls.rs:188:37: 188:52
    let mut _2: (f32, f32);              // in scope 0 at ui/mir/mir_codegen_calls.rs:188:38: 188:48

    bb0: {
        _2 = (const 1f32, const 2f32);   // scope 0 at ui/mir/mir_codegen_calls.rs:188:38: 188:48
        _1 = (move _2, const 0_u32);     // scope 0 at ui/mir/mir_codegen_calls.rs:188:37: 188:52
        _0 = &_1;                        // scope 0 at ui/mir/mir_codegen_calls.rs:188:36: 188:52
        return;                          // scope 0 at ui/mir/mir_codegen_calls.rs:188:36: 188:52
    }
}

promoted[3] in main: &(Foo, Foo) = {
    let mut _0: &(Foo, Foo);             // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _1: (Foo, Foo);              // in scope 0 at ui/mir/mir_codegen_calls.rs:187:46: 187:56
    let mut _2: Foo;                     // in scope 0 at ui/mir/mir_codegen_calls.rs:187:47: 187:50
    let mut _3: Foo;                     // in scope 0 at ui/mir/mir_codegen_calls.rs:187:52: 187:55

    bb0: {
        _2 = Foo;                        // scope 0 at ui/mir/mir_codegen_calls.rs:187:47: 187:50
        _3 = Foo;                        // scope 0 at ui/mir/mir_codegen_calls.rs:187:52: 187:55
        _1 = (move _2, move _3);         // scope 0 at ui/mir/mir_codegen_calls.rs:187:46: 187:56
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    }
}

promoted[4] in main: &() = {
    let mut _0: &();                     // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _1: ();                      // in scope 0 at ui/mir/mir_codegen_calls.rs:186:42: 186:44

    bb0: {
        _1 = ();                         // scope 0 at ui/mir/mir_codegen_calls.rs:186:42: 186:44
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    }
}

promoted[5] in main: &[(); 1] = {
    let mut _0: &[(); 1];                // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _1: [(); 1];                 // in scope 0 at ui/mir/mir_codegen_calls.rs:184:43: 184:47
    let mut _2: ();                      // in scope 0 at ui/mir/mir_codegen_calls.rs:184:44: 184:46

    bb0: {
        _2 = ();                         // scope 0 at ui/mir/mir_codegen_calls.rs:184:44: 184:46
        _1 = [move _2];                  // scope 0 at ui/mir/mir_codegen_calls.rs:184:43: 184:47
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    }
}

promoted[6] in main: &i32 = {
    let mut _0: &i32;                    // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _1: i32;                     // in scope 0 at ui/mir/mir_codegen_calls.rs:183:44: 183:46

    bb0: {
        _1 = const 42_i32;               // scope 0 at ui/mir/mir_codegen_calls.rs:183:44: 183:46
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    }
}

promoted[7] in main: &[closure@ui/mir/mir_codegen_calls.rs:183:35: 183:37] = {
    let mut _0: &[closure@ui/mir/mir_codegen_calls.rs:183:35: 183:37]; // return place in scope 0 at ui/mir/mir_codegen_calls.rs:183:33: 183:41
    let mut _1: [closure@ui/mir/mir_codegen_calls.rs:183:35: 183:37]; // in scope 0 at ui/mir/mir_codegen_calls.rs:183:34: 183:41

    bb0: {
        _1 = [closure@ui/mir/mir_codegen_calls.rs:183:35: 183:37]; // scope 0 at ui/mir/mir_codegen_calls.rs:183:34: 183:41
                                         // closure
                                         // + def_id: DefId(0:68 ~ mir_codegen_calls[3d6e]::main::{closure#1})
                                         // + substs: [
                                         //     i8,
                                         //     extern "rust-call" fn(()) -> i32,
                                         //     (),
                                         // ]
        _0 = &_1;                        // scope 0 at ui/mir/mir_codegen_calls.rs:183:33: 183:41
        return;                          // scope 0 at ui/mir/mir_codegen_calls.rs:183:33: 183:41
    }
}

promoted[8] in main: &i32 = {
    let mut _0: &i32;                    // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _1: i32;                     // in scope 0 at ui/mir/mir_codegen_calls.rs:181:55: 181:58

    bb0: {
        _1 = const 324_i32;              // scope 0 at ui/mir/mir_codegen_calls.rs:181:55: 181:58
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    }
}

promoted[9] in main: &i32 = {
    let mut _0: &i32;                    // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _1: i32;                     // in scope 0 at ui/mir/mir_codegen_calls.rs:180:56: 180:59

    bb0: {
        _1 = const 318_i32;              // scope 0 at ui/mir/mir_codegen_calls.rs:180:56: 180:59
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    }
}

promoted[10] in main: &i32 = {
    let mut _0: &i32;                    // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _1: i32;                     // in scope 0 at ui/mir/mir_codegen_calls.rs:179:57: 179:60

    bb0: {
        _1 = const 312_i32;              // scope 0 at ui/mir/mir_codegen_calls.rs:179:57: 179:60
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    }
}

promoted[11] in main: &i32 = {
    let mut _0: &i32;                    // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _1: i32;                     // in scope 0 at ui/mir/mir_codegen_calls.rs:177:48: 177:51

    bb0: {
        _1 = const 306_i32;              // scope 0 at ui/mir/mir_codegen_calls.rs:177:48: 177:51
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    }
}

promoted[12] in main: &i32 = {
    let mut _0: &i32;                    // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _1: i32;                     // in scope 0 at ui/mir/mir_codegen_calls.rs:176:46: 176:49

    bb0: {
        _1 = const 294_i32;              // scope 0 at ui/mir/mir_codegen_calls.rs:176:46: 176:49
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    }
}

promoted[13] in main: &u32 = {
    let mut _0: &u32;                    // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _1: u32;                     // in scope 0 at ui/mir/mir_codegen_calls.rs:172:25: 172:37
    let mut _2: (u32, bool);             // in scope 0 at ui/mir/mir_codegen_calls.rs:172:25: 172:37
    let mut _3: u32;                     // in scope 0 at ui/mir/mir_codegen_calls.rs:172:30: 172:37
    let mut _4: (u32, bool);             // in scope 0 at ui/mir/mir_codegen_calls.rs:172:30: 172:37

    bb0: {
        _4 = CheckedMul(const 42_u32, const 43_u32); // scope 0 at ui/mir/mir_codegen_calls.rs:172:30: 172:37
        _3 = move (_4.0: u32);           // scope 0 at ui/mir/mir_codegen_calls.rs:172:30: 172:37
        _2 = CheckedAdd(const 41_u32, _3); // scope 0 at ui/mir/mir_codegen_calls.rs:172:25: 172:37
        _1 = move (_2.0: u32);           // scope 0 at ui/mir/mir_codegen_calls.rs:172:25: 172:37
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    }
}

promoted[14] in main: &isize = {
    let mut _0: &isize;                  // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _1: isize;                   // in scope 0 at ui/mir/mir_codegen_calls.rs:171:25: 171:26

    bb0: {
        _1 = const 2_isize;              // scope 0 at ui/mir/mir_codegen_calls.rs:171:25: 171:26
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    }
}

promoted[15] in main: &isize = {
    let mut _0: &isize;                  // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _1: isize;                   // in scope 0 at ui/mir/mir_codegen_calls.rs:170:25: 170:26

    bb0: {
        _1 = const 1_isize;              // scope 0 at ui/mir/mir_codegen_calls.rs:170:25: 170:26
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    }
}

promoted[16] in main: &isize = {
    let mut _0: &isize;                  // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _1: isize;                   // in scope 0 at ui/mir/mir_codegen_calls.rs:169:36: 169:41

    bb0: {
        _1 = const 12367_isize;          // scope 0 at ui/mir/mir_codegen_calls.rs:169:36: 169:41
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    }
}

promoted[17] in main: &Foo = {
    let mut _0: &Foo;                    // return place in scope 0 at ui/mir/mir_codegen_calls.rs:169:22: 169:26
    let mut _1: Foo;                     // in scope 0 at ui/mir/mir_codegen_calls.rs:169:23: 169:26

    bb0: {
        _1 = Foo;                        // scope 0 at ui/mir/mir_codegen_calls.rs:169:23: 169:26
        _0 = &_1;                        // scope 0 at ui/mir/mir_codegen_calls.rs:169:22: 169:26
        return;                          // scope 0 at ui/mir/mir_codegen_calls.rs:169:22: 169:26
    }
}

promoted[18] in main: &isize = {
    let mut _0: &isize;                  // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _1: isize;                   // in scope 0 at ui/mir/mir_codegen_calls.rs:168:35: 168:39

    bb0: {
        _1 = const 8576_isize;           // scope 0 at ui/mir/mir_codegen_calls.rs:168:35: 168:39
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    }
}

promoted[19] in main: &Foo = {
    let mut _0: &Foo;                    // return place in scope 0 at ui/mir/mir_codegen_calls.rs:168:22: 168:26
    let mut _1: Foo;                     // in scope 0 at ui/mir/mir_codegen_calls.rs:168:23: 168:26

    bb0: {
        _1 = Foo;                        // scope 0 at ui/mir/mir_codegen_calls.rs:168:23: 168:26
        _0 = &_1;                        // scope 0 at ui/mir/mir_codegen_calls.rs:168:22: 168:26
        return;                          // scope 0 at ui/mir/mir_codegen_calls.rs:168:22: 168:26
    }
}

promoted[20] in main: &isize = {
    let mut _0: &isize;                  // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _1: isize;                   // in scope 0 at ui/mir/mir_codegen_calls.rs:167:34: 167:37

    bb0: {
        _1 = const 970_isize;            // scope 0 at ui/mir/mir_codegen_calls.rs:167:34: 167:37
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    }
}

promoted[21] in main: &Foo = {
    let mut _0: &Foo;                    // return place in scope 0 at ui/mir/mir_codegen_calls.rs:167:22: 167:26
    let mut _1: Foo;                     // in scope 0 at ui/mir/mir_codegen_calls.rs:167:23: 167:26

    bb0: {
        _1 = Foo;                        // scope 0 at ui/mir/mir_codegen_calls.rs:167:23: 167:26
        _0 = &_1;                        // scope 0 at ui/mir/mir_codegen_calls.rs:167:22: 167:26
        return;                          // scope 0 at ui/mir/mir_codegen_calls.rs:167:22: 167:26
    }
}

promoted[22] in main: &isize = {
    let mut _0: &isize;                  // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _1: isize;                   // in scope 0 at ui/mir/mir_codegen_calls.rs:166:33: 166:35

    bb0: {
        _1 = const 42_isize;             // scope 0 at ui/mir/mir_codegen_calls.rs:166:33: 166:35
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    }
}

promoted[23] in main: &Foo = {
    let mut _0: &Foo;                    // return place in scope 0 at ui/mir/mir_codegen_calls.rs:166:22: 166:26
    let mut _1: Foo;                     // in scope 0 at ui/mir/mir_codegen_calls.rs:166:23: 166:26

    bb0: {
        _1 = Foo;                        // scope 0 at ui/mir/mir_codegen_calls.rs:166:23: 166:26
        _0 = &_1;                        // scope 0 at ui/mir/mir_codegen_calls.rs:166:22: 166:26
        return;                          // scope 0 at ui/mir/mir_codegen_calls.rs:166:22: 166:26
    }
}

promoted[24] in main: &isize = {
    let mut _0: &isize;                  // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _1: isize;                   // in scope 0 at ui/mir/mir_codegen_calls.rs:165:27: 165:29

    bb0: {
        _1 = const 98_isize;             // scope 0 at ui/mir/mir_codegen_calls.rs:165:27: 165:29
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    }
}

promoted[25] in main: &[i32; 3] = {
    let mut _0: &[i32; 3];               // return place in scope 0 at ui/mir/mir_codegen_calls.rs:164:59: 164:68
    let mut _1: [i32; 3];                // in scope 0 at ui/mir/mir_codegen_calls.rs:164:59: 164:68

    bb0: {
        _1 = [const 4_i32, const 5_i32, const 6_i32]; // scope 0 at ui/mir/mir_codegen_calls.rs:164:59: 164:68
        _0 = &_1;                        // scope 0 at ui/mir/mir_codegen_calls.rs:164:59: 164:68
        return;                          // scope 0 at ui/mir/mir_codegen_calls.rs:164:59: 164:68
    }
}

promoted[26] in main: &[i32; 3] = {
    let mut _0: &[i32; 3];               // return place in scope 0 at ui/mir/mir_codegen_calls.rs:164:33: 164:43
    let mut _1: [i32; 3];                // in scope 0 at ui/mir/mir_codegen_calls.rs:164:34: 164:43

    bb0: {
        _1 = [const 4_i32, const 5_i32, const 6_i32]; // scope 0 at ui/mir/mir_codegen_calls.rs:164:34: 164:43
        _0 = &_1;                        // scope 0 at ui/mir/mir_codegen_calls.rs:164:33: 164:43
        return;                          // scope 0 at ui/mir/mir_codegen_calls.rs:164:33: 164:43
    }
}

fn main::{closure#0}(_1: &[closure@ui/mir/mir_codegen_calls.rs:175:19: 175:35], _2: i32, _3: i32) -> i32 {
    debug x => _2;                       // in scope 0 at ui/mir/mir_codegen_calls.rs:175:20: 175:21
    debug y => _3;                       // in scope 0 at ui/mir/mir_codegen_calls.rs:175:28: 175:29
    debug r => (*((*_1).0: &i32));       // in scope 0 at ui/mir/mir_codegen_calls.rs:174:9: 174:10
    let mut _0: i32;                     // return place in scope 0 at ui/mir/mir_codegen_calls.rs:175:36: 175:36
    let mut _4: i32;                     // in scope 0 at ui/mir/mir_codegen_calls.rs:175:38: 175:39
    let mut _5: i32;                     // in scope 0 at ui/mir/mir_codegen_calls.rs:175:40: 175:51
    let mut _6: i32;                     // in scope 0 at ui/mir/mir_codegen_calls.rs:175:41: 175:42
    let mut _7: i32;                     // in scope 0 at ui/mir/mir_codegen_calls.rs:175:45: 175:50
    let mut _8: i32;                     // in scope 0 at ui/mir/mir_codegen_calls.rs:175:46: 175:47
    let mut _9: (i32, bool);             // in scope 0 at ui/mir/mir_codegen_calls.rs:175:45: 175:50
    let mut _10: (i32, bool);            // in scope 0 at ui/mir/mir_codegen_calls.rs:175:40: 175:51
    let mut _11: (i32, bool);            // in scope 0 at ui/mir/mir_codegen_calls.rs:175:38: 175:51
    let mut _12: &i32;                   // in scope 0 at ui/mir/mir_codegen_calls.rs:175:19: 175:53

    bb0: {
        _12 = deref_copy ((*_1).0: &i32); // scope 0 at ui/mir/mir_codegen_calls.rs:175:38: 175:39
        _4 = (*_12);                     // scope 0 at ui/mir/mir_codegen_calls.rs:175:38: 175:39
        _6 = _2;                         // scope 0 at ui/mir/mir_codegen_calls.rs:175:41: 175:42
        _8 = _3;                         // scope 0 at ui/mir/mir_codegen_calls.rs:175:46: 175:47
        _9 = CheckedMul(_8, const 2_i32); // scope 0 at ui/mir/mir_codegen_calls.rs:175:45: 175:50
        assert(!move (_9.1: bool), "attempt to compute `{} * {}`, which would overflow", move _8, const 2_i32) -> bb1; // scope 0 at ui/mir/mir_codegen_calls.rs:175:45: 175:50
    }

    bb1: {
        _7 = move (_9.0: i32);           // scope 0 at ui/mir/mir_codegen_calls.rs:175:45: 175:50
        _10 = CheckedAdd(_6, _7);        // scope 0 at ui/mir/mir_codegen_calls.rs:175:40: 175:51
        assert(!move (_10.1: bool), "attempt to compute `{} + {}`, which would overflow", move _6, move _7) -> bb2; // scope 0 at ui/mir/mir_codegen_calls.rs:175:40: 175:51
    }

    bb2: {
        _5 = move (_10.0: i32);          // scope 0 at ui/mir/mir_codegen_calls.rs:175:40: 175:51
        _11 = CheckedMul(_4, _5);        // scope 0 at ui/mir/mir_codegen_calls.rs:175:38: 175:51
        assert(!move (_11.1: bool), "attempt to compute `{} * {}`, which would overflow", move _4, move _5) -> bb3; // scope 0 at ui/mir/mir_codegen_calls.rs:175:38: 175:51
    }

    bb3: {
        _0 = move (_11.0: i32);          // scope 0 at ui/mir/mir_codegen_calls.rs:175:38: 175:51
        return;                          // scope 0 at ui/mir/mir_codegen_calls.rs:175:53: 175:53
    }
}

fn main::{closure#1}(_1: &[closure@ui/mir/mir_codegen_calls.rs:183:35: 183:37]) -> i32 {
    let mut _0: i32;                     // return place in scope 0 at ui/mir/mir_codegen_calls.rs:183:38: 183:38

    bb0: {
        _0 = const 42_i32;               // scope 0 at ui/mir/mir_codegen_calls.rs:183:38: 183:40
        return;                          // scope 0 at ui/mir/mir_codegen_calls.rs:183:41: 183:41
    }
}

const ARRAY: [u64; 4] = {
    let mut _0: [u64; 4];                // return place in scope 0 at ui/mir/mir_codegen_calls.rs:190:18: 190:26

    bb0: {
        _0 = [const 1_u64, const 2_u64, const 3_u64, const 4_u64]; // scope 0 at ui/mir/mir_codegen_calls.rs:190:29: 190:41
        return;                          // scope 0 at ui/mir/mir_codegen_calls.rs:190:5: 190:42
    }
}

ARRAY::{constant#0}: usize = {
    let mut _0: usize;                   // return place in scope 0 at ui/mir/mir_codegen_calls.rs:190:24: 190:25

    bb0: {
        _0 = const 4_usize;              // scope 0 at ui/mir/mir_codegen_calls.rs:190:24: 190:25
        return;                          // scope 0 at ui/mir/mir_codegen_calls.rs:190:24: 190:25
    }
}
