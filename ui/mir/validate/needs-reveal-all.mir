// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
fn bar() -> impl Copy + Id {
    let mut _0: impl std::marker::Copy + Id; // return place in scope 0 at ui/mir/validate/needs-reveal-all.rs:31:13: 31:27

    bb0: {
        _0 = const 0_u32;                // scope 0 at ui/mir/validate/needs-reveal-all.rs:32:5: 32:9
        return;                          // scope 0 at ui/mir/validate/needs-reveal-all.rs:33:2: 33:2
    }
}

fn main() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/mir/validate/needs-reveal-all.rs:40:11: 40:11
    let mut _1: Foo<fn() -> impl std::marker::Copy + Id {bar}>; // in scope 0 at ui/mir/validate/needs-reveal-all.rs:41:9: 41:19
    let mut _2: Foo<fn() -> impl std::marker::Copy + Id {bar}>; // in scope 0 at ui/mir/validate/needs-reveal-all.rs:41:32: 44:6
    let mut _3: std::option::Option<<impl std::marker::Copy + Id as Id>::Assoc>; // in scope 0 at ui/mir/validate/needs-reveal-all.rs:43:16: 43:20
    let mut _5: Foo<fn() -> impl std::marker::Copy + Id>; // in scope 0 at ui/mir/validate/needs-reveal-all.rs:45:28: 48:6
    let mut _6: fn() -> impl std::marker::Copy + Id; // in scope 0 at ui/mir/validate/needs-reveal-all.rs:46:16: 46:32
    let mut _7: fn() -> impl std::marker::Copy + Id; // in scope 0 at ui/mir/validate/needs-reveal-all.rs:46:16: 46:32
    let mut _8: std::option::Option<<impl std::marker::Copy + Id as Id>::Assoc>; // in scope 0 at ui/mir/validate/needs-reveal-all.rs:47:16: 47:20
    let mut _9: std::option::Option<<impl std::marker::Copy + Id as Id>::Assoc>; // in scope 0 at ui/mir/validate/needs-reveal-all.rs:50:20: 50:32
    let _10: Foo<fn() -> impl std::marker::Copy + Id {bar}>; // in scope 0 at ui/mir/validate/needs-reveal-all.rs:51:5: 51:22
    let mut _11: Foo<fn() -> impl std::marker::Copy + Id {bar}>; // in scope 0 at ui/mir/validate/needs-reveal-all.rs:51:15: 51:21
    scope 1 {
        debug fn_def => _1;              // in scope 1 at ui/mir/validate/needs-reveal-all.rs:41:9: 41:19
        let _4: Foo<fn() -> impl std::marker::Copy + Id>; // in scope 1 at ui/mir/validate/needs-reveal-all.rs:45:9: 45:15
        scope 2 {
            debug fn_ptr => _4;          // in scope 2 at ui/mir/validate/needs-reveal-all.rs:45:9: 45:15
        }
    }

    bb0: {
        _3 = Option::<<impl Copy + Id as Id>::Assoc>::None; // scope 0 at ui/mir/validate/needs-reveal-all.rs:43:16: 43:20
        _2 = Foo::<fn() -> impl Copy + Id {bar}> { _func: bar, value: move _3 }; // scope 0 at ui/mir/validate/needs-reveal-all.rs:41:32: 44:6
                                         // mir::Constant
                                         // + span: ui/mir/validate/needs-reveal-all.rs:42:16: 42:19
                                         // + literal: Const { ty: fn() -> impl Copy + Id {bar}, val: Value(<ZST>) }
        _1 = std::hint::black_box::<Foo<fn() -> impl Copy + Id {bar}>>(move _2) -> bb1; // scope 0 at ui/mir/validate/needs-reveal-all.rs:41:22: 44:7
                                         // mir::Constant
                                         // + span: ui/mir/validate/needs-reveal-all.rs:41:22: 41:31
                                         // + literal: Const { ty: fn(Foo<fn() -> impl Copy + Id {bar}>) -> Foo<fn() -> impl Copy + Id {bar}> {std::hint::black_box::<Foo<fn() -> impl Copy + Id {bar}>>}, val: Value(<ZST>) }
    }

    bb1: {
        _7 = bar as fn() -> impl std::marker::Copy + Id (Pointer(ReifyFnPointer)); // scope 1 at ui/mir/validate/needs-reveal-all.rs:46:16: 46:19
                                         // mir::Constant
                                         // + span: ui/mir/validate/needs-reveal-all.rs:46:16: 46:19
                                         // + literal: Const { ty: fn() -> impl Copy + Id {bar}, val: Value(<ZST>) }
        _6 = _7;                         // scope 1 at ui/mir/validate/needs-reveal-all.rs:46:16: 46:32
        _8 = Option::<<impl Copy + Id as Id>::Assoc>::None; // scope 1 at ui/mir/validate/needs-reveal-all.rs:47:16: 47:20
        _5 = Foo::<fn() -> impl Copy + Id> { _func: move _6, value: move _8 }; // scope 1 at ui/mir/validate/needs-reveal-all.rs:45:28: 48:6
        _4 = std::hint::black_box::<Foo<fn() -> impl Copy + Id>>(move _5) -> bb2; // scope 1 at ui/mir/validate/needs-reveal-all.rs:45:18: 48:7
                                         // mir::Constant
                                         // + span: ui/mir/validate/needs-reveal-all.rs:45:18: 45:27
                                         // + literal: Const { ty: fn(Foo<fn() -> impl Copy + Id>) -> Foo<fn() -> impl Copy + Id> {std::hint::black_box::<Foo<fn() -> impl Copy + Id>>}, val: Value(<ZST>) }
    }

    bb2: {
        _9 = move (_4.1: std::option::Option<<impl std::marker::Copy + Id as Id>::Assoc>); // scope 2 at ui/mir/validate/needs-reveal-all.rs:50:20: 50:32
        (_1.1: std::option::Option<<impl std::marker::Copy + Id as Id>::Assoc>) = move _9; // scope 2 at ui/mir/validate/needs-reveal-all.rs:50:5: 50:17
        _11 = move _1;                   // scope 2 at ui/mir/validate/needs-reveal-all.rs:51:15: 51:21
        _10 = std::hint::black_box::<Foo<fn() -> impl Copy + Id {bar}>>(move _11) -> bb3; // scope 2 at ui/mir/validate/needs-reveal-all.rs:51:5: 51:22
                                         // mir::Constant
                                         // + span: ui/mir/validate/needs-reveal-all.rs:51:5: 51:14
                                         // + literal: Const { ty: fn(Foo<fn() -> impl Copy + Id {bar}>) -> Foo<fn() -> impl Copy + Id {bar}> {std::hint::black_box::<Foo<fn() -> impl Copy + Id {bar}>>}, val: Value(<ZST>) }
    }

    bb3: {
        return;                          // scope 0 at ui/mir/validate/needs-reveal-all.rs:52:2: 52:2
    }
}
