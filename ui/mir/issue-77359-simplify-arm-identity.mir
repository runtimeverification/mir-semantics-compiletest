// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
fn <impl at ui/mir/issue-77359-simplify-arm-identity.rs:5:10: 5:15>::fmt(_1: &MyEnum, _2: &mut Formatter<'_>) -> Result<(), std::fmt::Error> {
    debug self => _1;                    // in scope 0 at ui/mir/issue-77359-simplify-arm-identity.rs:5:10: 5:15
    debug f => _2;                       // in scope 0 at ui/mir/issue-77359-simplify-arm-identity.rs:5:10: 5:15
    let mut _0: std::result::Result<(), std::fmt::Error>; // return place in scope 0 at ui/mir/issue-77359-simplify-arm-identity.rs:5:10: 5:15
    let mut _3: isize;                   // in scope 0 at ui/mir/issue-77359-simplify-arm-identity.rs:5:10: 5:15
    let _4: &std::vec::Vec<u8>;          // in scope 0 at ui/mir/issue-77359-simplify-arm-identity.rs:7:14: 7:21
    let mut _5: &mut std::fmt::Formatter<'_>; // in scope 0 at ui/mir/issue-77359-simplify-arm-identity.rs:5:10: 5:15
    let mut _6: &str;                    // in scope 0 at ui/mir/issue-77359-simplify-arm-identity.rs:5:10: 5:15
    let _7: &str;                        // in scope 0 at ui/mir/issue-77359-simplify-arm-identity.rs:5:10: 5:15
    let mut _8: &dyn std::fmt::Debug;    // in scope 0 at ui/mir/issue-77359-simplify-arm-identity.rs:7:14: 7:21
    let mut _9: &&std::vec::Vec<u8>;     // in scope 0 at ui/mir/issue-77359-simplify-arm-identity.rs:7:14: 7:21
    let _10: &&std::vec::Vec<u8>;        // in scope 0 at ui/mir/issue-77359-simplify-arm-identity.rs:7:14: 7:21
    let mut _11: &mut std::fmt::Formatter<'_>; // in scope 0 at ui/mir/issue-77359-simplify-arm-identity.rs:5:10: 5:15
    let mut _12: &str;                   // in scope 0 at ui/mir/issue-77359-simplify-arm-identity.rs:5:10: 5:15
    let _13: &str;                       // in scope 0 at ui/mir/issue-77359-simplify-arm-identity.rs:5:10: 5:15
    let mut _14: &mut std::fmt::Formatter<'_>; // in scope 0 at ui/mir/issue-77359-simplify-arm-identity.rs:5:10: 5:15
    let mut _15: &str;                   // in scope 0 at ui/mir/issue-77359-simplify-arm-identity.rs:5:10: 5:15
    let _16: &str;                       // in scope 0 at ui/mir/issue-77359-simplify-arm-identity.rs:5:10: 5:15
    let mut _17: &mut std::fmt::Formatter<'_>; // in scope 0 at ui/mir/issue-77359-simplify-arm-identity.rs:5:10: 5:15
    let mut _18: &str;                   // in scope 0 at ui/mir/issue-77359-simplify-arm-identity.rs:5:10: 5:15
    let _19: &str;                       // in scope 0 at ui/mir/issue-77359-simplify-arm-identity.rs:5:10: 5:15
    scope 1 {
        debug __self_0 => _4;            // in scope 1 at ui/mir/issue-77359-simplify-arm-identity.rs:7:14: 7:21
    }

    bb0: {
        _3 = discriminant((*_1));        // scope 0 at ui/mir/issue-77359-simplify-arm-identity.rs:5:10: 5:15
        switchInt(move _3) -> [0: bb3, 1: bb4, 2: bb5, 3: bb1, otherwise: bb2]; // scope 0 at ui/mir/issue-77359-simplify-arm-identity.rs:5:10: 5:15
    }

    bb1: {
        _17 = &mut (*_2);                // scope 0 at ui/mir/issue-77359-simplify-arm-identity.rs:5:10: 5:15
        _19 = const "Variant4";          // scope 0 at ui/mir/issue-77359-simplify-arm-identity.rs:5:10: 5:15
                                         // mir::Constant
                                         // + span: ui/mir/issue-77359-simplify-arm-identity.rs:5:10: 5:15
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _18 = _19;                       // scope 0 at ui/mir/issue-77359-simplify-arm-identity.rs:5:10: 5:15
        _0 = Formatter::<'_>::write_str(move _17, move _18) -> bb6; // scope 0 at ui/mir/issue-77359-simplify-arm-identity.rs:5:10: 5:15
                                         // mir::Constant
                                         // + span: ui/mir/issue-77359-simplify-arm-identity.rs:5:10: 5:15
                                         // + user_ty: UserType(3)
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a mut Formatter<'_>, &'b str) -> Result<(), std::fmt::Error> {Formatter::<'_>::write_str}, val: Value(<ZST>) }
    }

    bb2: {
        unreachable;                     // scope 0 at ui/mir/issue-77359-simplify-arm-identity.rs:5:10: 5:15
    }

    bb3: {
        _4 = &(((*_1) as Variant1).0: std::vec::Vec<u8>); // scope 0 at ui/mir/issue-77359-simplify-arm-identity.rs:7:14: 7:21
        _5 = &mut (*_2);                 // scope 1 at ui/mir/issue-77359-simplify-arm-identity.rs:5:10: 5:15
        _7 = const "Variant1";           // scope 1 at ui/mir/issue-77359-simplify-arm-identity.rs:5:10: 5:15
                                         // mir::Constant
                                         // + span: ui/mir/issue-77359-simplify-arm-identity.rs:5:10: 5:15
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _6 = _7;                         // scope 1 at ui/mir/issue-77359-simplify-arm-identity.rs:5:10: 5:15
        _10 = &_4;                       // scope 1 at ui/mir/issue-77359-simplify-arm-identity.rs:7:14: 7:21
        _9 = _10;                        // scope 1 at ui/mir/issue-77359-simplify-arm-identity.rs:7:14: 7:21
        _8 = move _9 as &dyn std::fmt::Debug (Pointer(Unsize)); // scope 1 at ui/mir/issue-77359-simplify-arm-identity.rs:7:14: 7:21
        _0 = Formatter::<'_>::debug_tuple_field1_finish(move _5, move _6, move _8) -> bb6; // scope 1 at ui/mir/issue-77359-simplify-arm-identity.rs:5:10: 5:15
                                         // mir::Constant
                                         // + span: ui/mir/issue-77359-simplify-arm-identity.rs:5:10: 5:15
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: for<'b, 'a, 'c> fn(&'b mut Formatter<'_>, &'a str, &'c (dyn Debug + 'c)) -> Result<(), std::fmt::Error> {Formatter::<'_>::debug_tuple_field1_finish}, val: Value(<ZST>) }
    }

    bb4: {
        _11 = &mut (*_2);                // scope 0 at ui/mir/issue-77359-simplify-arm-identity.rs:5:10: 5:15
        _13 = const "Variant2";          // scope 0 at ui/mir/issue-77359-simplify-arm-identity.rs:5:10: 5:15
                                         // mir::Constant
                                         // + span: ui/mir/issue-77359-simplify-arm-identity.rs:5:10: 5:15
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _12 = _13;                       // scope 0 at ui/mir/issue-77359-simplify-arm-identity.rs:5:10: 5:15
        _0 = Formatter::<'_>::write_str(move _11, move _12) -> bb6; // scope 0 at ui/mir/issue-77359-simplify-arm-identity.rs:5:10: 5:15
                                         // mir::Constant
                                         // + span: ui/mir/issue-77359-simplify-arm-identity.rs:5:10: 5:15
                                         // + user_ty: UserType(1)
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a mut Formatter<'_>, &'b str) -> Result<(), std::fmt::Error> {Formatter::<'_>::write_str}, val: Value(<ZST>) }
    }

    bb5: {
        _14 = &mut (*_2);                // scope 0 at ui/mir/issue-77359-simplify-arm-identity.rs:5:10: 5:15
        _16 = const "Variant3";          // scope 0 at ui/mir/issue-77359-simplify-arm-identity.rs:5:10: 5:15
                                         // mir::Constant
                                         // + span: ui/mir/issue-77359-simplify-arm-identity.rs:5:10: 5:15
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _15 = _16;                       // scope 0 at ui/mir/issue-77359-simplify-arm-identity.rs:5:10: 5:15
        _0 = Formatter::<'_>::write_str(move _14, move _15) -> bb6; // scope 0 at ui/mir/issue-77359-simplify-arm-identity.rs:5:10: 5:15
                                         // mir::Constant
                                         // + span: ui/mir/issue-77359-simplify-arm-identity.rs:5:10: 5:15
                                         // + user_ty: UserType(2)
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a mut Formatter<'_>, &'b str) -> Result<(), std::fmt::Error> {Formatter::<'_>::write_str}, val: Value(<ZST>) }
    }

    bb6: {
        return;                          // scope 0 at ui/mir/issue-77359-simplify-arm-identity.rs:5:15: 5:15
    }
}

fn f(_1: &bool, _2: &bool, _3: bool) -> MyStruct {
    debug arg1 => _1;                    // in scope 0 at ui/mir/issue-77359-simplify-arm-identity.rs:13:6: 13:10
    debug arg2 => _2;                    // in scope 0 at ui/mir/issue-77359-simplify-arm-identity.rs:13:19: 13:23
    debug arg3 => _3;                    // in scope 0 at ui/mir/issue-77359-simplify-arm-identity.rs:13:32: 13:36
    let mut _0: MyStruct;                // return place in scope 0 at ui/mir/issue-77359-simplify-arm-identity.rs:13:47: 13:55
    let mut _4: bool;                    // in scope 0 at ui/mir/issue-77359-simplify-arm-identity.rs:14:8: 14:13
    let _5: ();                          // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:62
    let mut _6: std::fmt::Arguments<'_>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _7: &[&str];                 // in scope 0 at ui/mir/issue-77359-simplify-arm-identity.rs:15:18: 15:24
    let mut _8: &[&str; 2];              // in scope 0 at ui/mir/issue-77359-simplify-arm-identity.rs:15:18: 15:24
    let _9: &[&str; 2];                  // in scope 0 at ui/mir/issue-77359-simplify-arm-identity.rs:15:18: 15:24
    let mut _10: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _11: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let _12: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let _13: [core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _14: core::fmt::ArgumentV1<'_>; // in scope 0 at ui/mir/issue-77359-simplify-arm-identity.rs:15:26: 15:46
    let mut _15: &MyStruct;              // in scope 0 at ui/mir/issue-77359-simplify-arm-identity.rs:15:26: 15:46
    let _16: &MyStruct;                  // in scope 0 at ui/mir/issue-77359-simplify-arm-identity.rs:15:26: 15:46
    let _17: MyStruct;                   // in scope 0 at ui/mir/issue-77359-simplify-arm-identity.rs:15:26: 15:46
    let mut _18: &bool;                  // in scope 0 at ui/mir/issue-77359-simplify-arm-identity.rs:15:28: 15:33
    let _19: &&bool;                     // in scope 0 at ui/mir/issue-77359-simplify-arm-identity.rs:15:28: 15:33
    let mut _20: &bool;                  // in scope 0 at ui/mir/issue-77359-simplify-arm-identity.rs:15:35: 15:39
    let mut _21: bool;                   // in scope 0 at ui/mir/issue-77359-simplify-arm-identity.rs:15:41: 15:45
    let mut _22: std::option::Option<MyEnum>; // in scope 0 at ui/mir/issue-77359-simplify-arm-identity.rs:16:18: 16:22
    let mut _23: std::option::Option<MyEnum>; // in scope 0 at ui/mir/issue-77359-simplify-arm-identity.rs:18:15: 18:63
    let mut _24: bool;                   // in scope 0 at ui/mir/issue-77359-simplify-arm-identity.rs:18:18: 18:22
    let mut _25: MyEnum;                 // in scope 0 at ui/mir/issue-77359-simplify-arm-identity.rs:18:30: 18:46
    let mut _26: isize;                  // in scope 0 at ui/mir/issue-77359-simplify-arm-identity.rs:19:13: 19:20
    let _27: MyEnum;                     // in scope 0 at ui/mir/issue-77359-simplify-arm-identity.rs:19:18: 19:19
    let mut _29: std::option::Option<MyEnum>; // in scope 0 at ui/mir/issue-77359-simplify-arm-identity.rs:21:33: 21:41
    let mut _30: MyEnum;                 // in scope 0 at ui/mir/issue-77359-simplify-arm-identity.rs:21:38: 21:40
    let mut _31: std::option::Option<MyEnum>; // in scope 0 at ui/mir/issue-77359-simplify-arm-identity.rs:23:27: 23:31
    let mut _32: &[&str; 2];             // in scope 0 at ui/mir/issue-77359-simplify-arm-identity.rs:15:18: 15:24
    let mut _33: &bool;                  // in scope 0 at ui/mir/issue-77359-simplify-arm-identity.rs:15:28: 15:33
    scope 1 {
        debug t => _27;                  // in scope 1 at ui/mir/issue-77359-simplify-arm-identity.rs:19:18: 19:19
        let _28: MyEnum;                 // in scope 1 at ui/mir/issue-77359-simplify-arm-identity.rs:20:21: 20:23
        scope 2 {
            debug ah => _28;             // in scope 2 at ui/mir/issue-77359-simplify-arm-identity.rs:20:21: 20:23
        }
    }

    bb0: {
        _4 = (*_1);                      // scope 0 at ui/mir/issue-77359-simplify-arm-identity.rs:14:8: 14:13
        switchInt(move _4) -> [0: bb7, otherwise: bb1]; // scope 0 at ui/mir/issue-77359-simplify-arm-identity.rs:14:8: 14:13
    }

    bb1: {
        _32 = const _;                   // scope 0 at ui/mir/issue-77359-simplify-arm-identity.rs:15:18: 15:24
                                         // mir::Constant
                                         // + span: ui/mir/issue-77359-simplify-arm-identity.rs:15:18: 15:24
                                         // + literal: Const { ty: &[&str; 2], val: Unevaluated(f, [], Some(promoted[0])) }
        _9 = _32;                        // scope 0 at ui/mir/issue-77359-simplify-arm-identity.rs:15:18: 15:24
        _8 = _9;                         // scope 0 at ui/mir/issue-77359-simplify-arm-identity.rs:15:18: 15:24
        _7 = move _8 as &[&str] (Pointer(Unsize)); // scope 0 at ui/mir/issue-77359-simplify-arm-identity.rs:15:18: 15:24
        _19 = &_2;                       // scope 0 at ui/mir/issue-77359-simplify-arm-identity.rs:15:28: 15:33
        _33 = deref_copy (*_19);         // scope 0 at ui/mir/issue-77359-simplify-arm-identity.rs:15:28: 15:33
        _18 = _33;                       // scope 0 at ui/mir/issue-77359-simplify-arm-identity.rs:15:28: 15:33
        _20 = _2;                        // scope 0 at ui/mir/issue-77359-simplify-arm-identity.rs:15:35: 15:39
        _21 = _3;                        // scope 0 at ui/mir/issue-77359-simplify-arm-identity.rs:15:41: 15:45
        _17 = f(move _18, move _20, move _21) -> bb2; // scope 0 at ui/mir/issue-77359-simplify-arm-identity.rs:15:26: 15:46
                                         // mir::Constant
                                         // + span: ui/mir/issue-77359-simplify-arm-identity.rs:15:26: 15:27
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a bool, &'b bool, bool) -> MyStruct {f}, val: Value(<ZST>) }
    }

    bb2: {
        _16 = &_17;                      // scope 0 at ui/mir/issue-77359-simplify-arm-identity.rs:15:26: 15:46
        _15 = _16;                       // scope 0 at ui/mir/issue-77359-simplify-arm-identity.rs:15:26: 15:46
        _14 = core::fmt::ArgumentV1::<'_>::new_debug::<MyStruct>(move _15) -> [return: bb3, unwind: bb14]; // scope 0 at ui/mir/issue-77359-simplify-arm-identity.rs:15:26: 15:46
                                         // mir::Constant
                                         // + span: ui/mir/issue-77359-simplify-arm-identity.rs:15:26: 15:46
                                         // + user_ty: UserType(1)
                                         // + literal: Const { ty: for<'b> fn(&'b MyStruct) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_debug::<MyStruct>}, val: Value(<ZST>) }
    }

    bb3: {
        _13 = [move _14];                // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _12 = &_13;                      // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _11 = _12;                       // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _10 = move _11 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _6 = Arguments::<'_>::new_v1(move _7, move _10) -> [return: bb4, unwind: bb14]; // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb4: {
        _5 = _print(move _6) -> [return: bb5, unwind: bb14]; // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:62
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:27
                                         // + literal: Const { ty: for<'a> fn(Arguments<'a>) {_print}, val: Value(<ZST>) }
    }

    bb5: {
        drop(_17) -> bb6;                // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:62: 137:63
    }

    bb6: {
        _22 = Option::<MyEnum>::None;    // scope 0 at ui/mir/issue-77359-simplify-arm-identity.rs:16:18: 16:22
        _0 = MyStruct(move _22);         // scope 0 at ui/mir/issue-77359-simplify-arm-identity.rs:16:9: 16:23
        goto -> bb13;                    // scope 0 at ui/mir/issue-77359-simplify-arm-identity.rs:14:5: 25:6
    }

    bb7: {
        _24 = _3;                        // scope 0 at ui/mir/issue-77359-simplify-arm-identity.rs:18:18: 18:22
        switchInt(move _24) -> [0: bb9, otherwise: bb8]; // scope 0 at ui/mir/issue-77359-simplify-arm-identity.rs:18:18: 18:22
    }

    bb8: {
        _25 = MyEnum::Variant3;          // scope 0 at ui/mir/issue-77359-simplify-arm-identity.rs:18:30: 18:46
        _23 = Option::<MyEnum>::Some(move _25); // scope 0 at ui/mir/issue-77359-simplify-arm-identity.rs:18:25: 18:47
        goto -> bb10;                    // scope 0 at ui/mir/issue-77359-simplify-arm-identity.rs:18:15: 18:63
    }

    bb9: {
        _23 = Option::<MyEnum>::None;    // scope 0 at ui/mir/issue-77359-simplify-arm-identity.rs:18:57: 18:61
        goto -> bb10;                    // scope 0 at ui/mir/issue-77359-simplify-arm-identity.rs:18:15: 18:63
    }

    bb10: {
        _26 = discriminant(_23);         // scope 0 at ui/mir/issue-77359-simplify-arm-identity.rs:18:15: 18:63
        switchInt(move _26) -> [1: bb12, otherwise: bb11]; // scope 0 at ui/mir/issue-77359-simplify-arm-identity.rs:18:9: 18:63
    }

    bb11: {
        _31 = Option::<MyEnum>::None;    // scope 0 at ui/mir/issue-77359-simplify-arm-identity.rs:23:27: 23:31
        _0 = MyStruct(move _31);         // scope 0 at ui/mir/issue-77359-simplify-arm-identity.rs:23:18: 23:32
        drop(_23) -> bb13;               // scope 0 at ui/mir/issue-77359-simplify-arm-identity.rs:25:5: 25:6
    }

    bb12: {
        _27 = move ((_23 as Some).0: MyEnum); // scope 0 at ui/mir/issue-77359-simplify-arm-identity.rs:19:18: 19:19
        _28 = move _27;                  // scope 1 at ui/mir/issue-77359-simplify-arm-identity.rs:20:26: 20:27
        _30 = move _28;                  // scope 2 at ui/mir/issue-77359-simplify-arm-identity.rs:21:38: 21:40
        _29 = Option::<MyEnum>::Some(move _30); // scope 2 at ui/mir/issue-77359-simplify-arm-identity.rs:21:33: 21:41
        _0 = MyStruct(move _29);         // scope 2 at ui/mir/issue-77359-simplify-arm-identity.rs:21:24: 21:42
        goto -> bb13;                    // scope 0 at ui/mir/issue-77359-simplify-arm-identity.rs:26:2: 26:2
    }

    bb13: {
        return;                          // scope 0 at ui/mir/issue-77359-simplify-arm-identity.rs:26:2: 26:2
    }

    bb14 (cleanup): {
        drop(_17) -> bb15;               // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:62: 137:63
    }

    bb15 (cleanup): {
        resume;                          // scope 0 at ui/mir/issue-77359-simplify-arm-identity.rs:13:1: 26:2
    }
}

promoted[0] in f: &[&str; 2] = {
    let mut _0: &[&str; 2];              // return place in scope 0 at ui/mir/issue-77359-simplify-arm-identity.rs:15:18: 15:24
    let mut _1: [&str; 2];               // in scope 0 at ui/mir/issue-77359-simplify-arm-identity.rs:15:18: 15:24

    bb0: {
        _1 = [const "", const "\n"];     // scope 0 at ui/mir/issue-77359-simplify-arm-identity.rs:15:18: 15:24
                                         // mir::Constant
                                         // + span: ui/mir/issue-77359-simplify-arm-identity.rs:15:18: 15:24
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
                                         // mir::Constant
                                         // + span: ui/mir/issue-77359-simplify-arm-identity.rs:15:18: 15:24
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at ui/mir/issue-77359-simplify-arm-identity.rs:15:18: 15:24
        return;                          // scope 0 at ui/mir/issue-77359-simplify-arm-identity.rs:15:18: 15:24
    }
}

fn <impl at ui/mir/issue-77359-simplify-arm-identity.rs:28:10: 28:15>::fmt(_1: &MyStruct, _2: &mut Formatter<'_>) -> Result<(), std::fmt::Error> {
    debug self => _1;                    // in scope 0 at ui/mir/issue-77359-simplify-arm-identity.rs:28:10: 28:15
    debug f => _2;                       // in scope 0 at ui/mir/issue-77359-simplify-arm-identity.rs:28:10: 28:15
    let mut _0: std::result::Result<(), std::fmt::Error>; // return place in scope 0 at ui/mir/issue-77359-simplify-arm-identity.rs:28:10: 28:15
    let mut _3: &mut std::fmt::Formatter<'_>; // in scope 0 at ui/mir/issue-77359-simplify-arm-identity.rs:28:10: 28:15
    let mut _4: &str;                    // in scope 0 at ui/mir/issue-77359-simplify-arm-identity.rs:28:10: 28:15
    let _5: &str;                        // in scope 0 at ui/mir/issue-77359-simplify-arm-identity.rs:28:10: 28:15
    let mut _6: &dyn std::fmt::Debug;    // in scope 0 at ui/mir/issue-77359-simplify-arm-identity.rs:29:17: 29:31
    let mut _7: &&std::option::Option<MyEnum>; // in scope 0 at ui/mir/issue-77359-simplify-arm-identity.rs:29:17: 29:31
    let _8: &&std::option::Option<MyEnum>; // in scope 0 at ui/mir/issue-77359-simplify-arm-identity.rs:29:17: 29:31
    let _9: &std::option::Option<MyEnum>; // in scope 0 at ui/mir/issue-77359-simplify-arm-identity.rs:29:17: 29:31

    bb0: {
        _3 = &mut (*_2);                 // scope 0 at ui/mir/issue-77359-simplify-arm-identity.rs:28:10: 28:15
        _5 = const "MyStruct";           // scope 0 at ui/mir/issue-77359-simplify-arm-identity.rs:28:10: 28:15
                                         // mir::Constant
                                         // + span: ui/mir/issue-77359-simplify-arm-identity.rs:28:10: 28:15
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _4 = _5;                         // scope 0 at ui/mir/issue-77359-simplify-arm-identity.rs:28:10: 28:15
        _9 = &((*_1).0: std::option::Option<MyEnum>); // scope 0 at ui/mir/issue-77359-simplify-arm-identity.rs:29:17: 29:31
        _8 = &_9;                        // scope 0 at ui/mir/issue-77359-simplify-arm-identity.rs:29:17: 29:31
        _7 = _8;                         // scope 0 at ui/mir/issue-77359-simplify-arm-identity.rs:29:17: 29:31
        _6 = move _7 as &dyn std::fmt::Debug (Pointer(Unsize)); // scope 0 at ui/mir/issue-77359-simplify-arm-identity.rs:29:17: 29:31
        _0 = Formatter::<'_>::debug_tuple_field1_finish(move _3, move _4, move _6) -> bb1; // scope 0 at ui/mir/issue-77359-simplify-arm-identity.rs:28:10: 28:15
                                         // mir::Constant
                                         // + span: ui/mir/issue-77359-simplify-arm-identity.rs:28:10: 28:15
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: for<'b, 'a, 'c> fn(&'b mut Formatter<'_>, &'a str, &'c (dyn Debug + 'c)) -> Result<(), std::fmt::Error> {Formatter::<'_>::debug_tuple_field1_finish}, val: Value(<ZST>) }
    }

    bb1: {
        return;                          // scope 0 at ui/mir/issue-77359-simplify-arm-identity.rs:28:15: 28:15
    }
}

fn main() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/mir/issue-77359-simplify-arm-identity.rs:31:11: 31:11
    let _1: bool;                        // in scope 0 at ui/mir/issue-77359-simplify-arm-identity.rs:32:9: 32:13
    let _3: MyStruct;                    // in scope 0 at ui/mir/issue-77359-simplify-arm-identity.rs:34:5: 34:26
    let mut _4: &bool;                   // in scope 0 at ui/mir/issue-77359-simplify-arm-identity.rs:34:7: 34:12
    let _5: &bool;                       // in scope 0 at ui/mir/issue-77359-simplify-arm-identity.rs:34:7: 34:12
    let mut _6: &bool;                   // in scope 0 at ui/mir/issue-77359-simplify-arm-identity.rs:34:14: 34:19
    let _7: &bool;                       // in scope 0 at ui/mir/issue-77359-simplify-arm-identity.rs:34:14: 34:19
    scope 1 {
        debug arg1 => _1;                // in scope 1 at ui/mir/issue-77359-simplify-arm-identity.rs:32:9: 32:13
        let _2: bool;                    // in scope 1 at ui/mir/issue-77359-simplify-arm-identity.rs:33:9: 33:13
        scope 2 {
            debug arg2 => _2;            // in scope 2 at ui/mir/issue-77359-simplify-arm-identity.rs:33:9: 33:13
        }
    }

    bb0: {
        _1 = const true;                 // scope 0 at ui/mir/issue-77359-simplify-arm-identity.rs:32:16: 32:20
        _2 = const false;                // scope 1 at ui/mir/issue-77359-simplify-arm-identity.rs:33:16: 33:21
        _5 = &_1;                        // scope 2 at ui/mir/issue-77359-simplify-arm-identity.rs:34:7: 34:12
        _4 = _5;                         // scope 2 at ui/mir/issue-77359-simplify-arm-identity.rs:34:7: 34:12
        _7 = &_2;                        // scope 2 at ui/mir/issue-77359-simplify-arm-identity.rs:34:14: 34:19
        _6 = _7;                         // scope 2 at ui/mir/issue-77359-simplify-arm-identity.rs:34:14: 34:19
        _3 = f(move _4, move _6, const true) -> bb1; // scope 2 at ui/mir/issue-77359-simplify-arm-identity.rs:34:5: 34:26
                                         // mir::Constant
                                         // + span: ui/mir/issue-77359-simplify-arm-identity.rs:34:5: 34:6
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a bool, &'b bool, bool) -> MyStruct {f}, val: Value(<ZST>) }
    }

    bb1: {
        drop(_3) -> bb2;                 // scope 2 at ui/mir/issue-77359-simplify-arm-identity.rs:34:26: 34:27
    }

    bb2: {
        return;                          // scope 0 at ui/mir/issue-77359-simplify-arm-identity.rs:35:2: 35:2
    }
}

fn MyEnum::Variant1(_1: Vec<u8>) -> MyEnum {
    let mut _0: MyEnum;                  // return place in scope 0 at ui/mir/issue-77359-simplify-arm-identity.rs:7:5: 7:13

    bb0: {
        _0 = MyEnum::Variant1(move _1);  // scope 0 at ui/mir/issue-77359-simplify-arm-identity.rs:7:5: 7:13
        return;                          // scope 0 at ui/mir/issue-77359-simplify-arm-identity.rs:7:5: 7:13
    }
}

// MIR FOR CTFE
fn MyEnum::Variant1(_1: Vec<u8>) -> MyEnum {
    let mut _0: MyEnum;                  // return place in scope 0 at ui/mir/issue-77359-simplify-arm-identity.rs:7:5: 7:13

    bb0: {
        _0 = MyEnum::Variant1(move _1);  // scope 0 at ui/mir/issue-77359-simplify-arm-identity.rs:7:5: 7:13
        return;                          // scope 0 at ui/mir/issue-77359-simplify-arm-identity.rs:7:5: 7:13
    }
}

fn MyStruct(_1: Option<MyEnum>) -> MyStruct {
    let mut _0: MyStruct;                // return place in scope 0 at ui/mir/issue-77359-simplify-arm-identity.rs:29:1: 29:16

    bb0: {
        _0 = MyStruct(move _1);          // scope 0 at ui/mir/issue-77359-simplify-arm-identity.rs:29:1: 29:16
        return;                          // scope 0 at ui/mir/issue-77359-simplify-arm-identity.rs:29:1: 29:16
    }
}

// MIR FOR CTFE
fn MyStruct(_1: Option<MyEnum>) -> MyStruct {
    let mut _0: MyStruct;                // return place in scope 0 at ui/mir/issue-77359-simplify-arm-identity.rs:29:1: 29:16

    bb0: {
        _0 = MyStruct(move _1);          // scope 0 at ui/mir/issue-77359-simplify-arm-identity.rs:29:1: 29:16
        return;                          // scope 0 at ui/mir/issue-77359-simplify-arm-identity.rs:29:1: 29:16
    }
}
