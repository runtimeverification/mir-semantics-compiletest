// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
fn main() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/zero-sized/zero-sized-linkedlist-push.rs:5:11: 5:11
    let mut _1: std::ops::Range<usize>;  // in scope 0 at ui/zero-sized/zero-sized-linkedlist-push.rs:11:16: 11:20
    let mut _2: std::ops::Range<usize>;  // in scope 0 at ui/zero-sized/zero-sized-linkedlist-push.rs:11:16: 11:20
    let mut _3: std::ops::Range<usize>;  // in scope 0 at ui/zero-sized/zero-sized-linkedlist-push.rs:11:16: 11:20
    let mut _4: std::option::Option<usize>; // in scope 0 at ui/zero-sized/zero-sized-linkedlist-push.rs:11:16: 11:20
    let mut _5: &mut std::ops::Range<usize>; // in scope 0 at ui/zero-sized/zero-sized-linkedlist-push.rs:11:16: 11:20
    let mut _6: &mut std::ops::Range<usize>; // in scope 0 at ui/zero-sized/zero-sized-linkedlist-push.rs:11:16: 11:20
    let mut _7: isize;                   // in scope 0 at ui/zero-sized/zero-sized-linkedlist-push.rs:11:5: 28:6
    let mut _10: (&usize, &usize);       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _11: &usize;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let _12: usize;                      // in scope 0 at ui/zero-sized/zero-sized-linkedlist-push.rs:13:20: 13:32
    let mut _13: &std::collections::LinkedList<()>; // in scope 0 at ui/zero-sized/zero-sized-linkedlist-push.rs:13:20: 13:32
    let mut _14: &usize;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _17: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    let mut _18: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
    let mut _19: usize;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
    let mut _20: usize;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
    let _22: !;                          // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
    let mut _23: core::panicking::AssertKind; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
    let mut _24: &usize;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let _25: &usize;                     // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let mut _26: &usize;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let _27: &usize;                     // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let mut _28: std::option::Option<std::fmt::Arguments<'_>>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
    let mut _29: (&std::option::Option<&()>, &std::option::Option<&()>); // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _30: &std::option::Option<&()>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let _31: std::option::Option<&()>;   // in scope 0 at ui/zero-sized/zero-sized-linkedlist-push.rs:14:20: 14:34
    let mut _32: &std::collections::LinkedList<()>; // in scope 0 at ui/zero-sized/zero-sized-linkedlist-push.rs:14:20: 14:34
    let mut _33: &std::option::Option<&()>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _36: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    let mut _37: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
    let mut _38: &std::option::Option<&()>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
    let mut _39: &std::option::Option<&()>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
    let _41: !;                          // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
    let mut _42: core::panicking::AssertKind; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
    let mut _43: &std::option::Option<&()>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let _44: &std::option::Option<&()>;  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let mut _45: &std::option::Option<&()>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let _46: &std::option::Option<&()>;  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let mut _47: std::option::Option<std::fmt::Arguments<'_>>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
    let mut _48: std::ops::Range<i32>;   // in scope 0 at ui/zero-sized/zero-sized-linkedlist-push.rs:15:21: 15:34
    let mut _49: std::ops::Range<i32>;   // in scope 0 at ui/zero-sized/zero-sized-linkedlist-push.rs:15:21: 15:34
    let mut _50: i32;                    // in scope 0 at ui/zero-sized/zero-sized-linkedlist-push.rs:15:24: 15:34
    let mut _51: usize;                  // in scope 0 at ui/zero-sized/zero-sized-linkedlist-push.rs:15:30: 15:33
    let mut _52: (i32, bool);            // in scope 0 at ui/zero-sized/zero-sized-linkedlist-push.rs:15:24: 15:34
    let mut _54: std::option::Option<i32>; // in scope 0 at ui/zero-sized/zero-sized-linkedlist-push.rs:15:21: 15:34
    let mut _55: &mut std::ops::Range<i32>; // in scope 0 at ui/zero-sized/zero-sized-linkedlist-push.rs:15:21: 15:34
    let mut _56: &mut std::ops::Range<i32>; // in scope 0 at ui/zero-sized/zero-sized-linkedlist-push.rs:15:21: 15:34
    let mut _57: isize;                  // in scope 0 at ui/zero-sized/zero-sized-linkedlist-push.rs:15:9: 27:10
    let mut _59: (&usize, &usize);       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _60: &usize;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let _61: usize;                      // in scope 0 at ui/zero-sized/zero-sized-linkedlist-push.rs:16:24: 16:36
    let mut _62: &std::collections::LinkedList<()>; // in scope 0 at ui/zero-sized/zero-sized-linkedlist-push.rs:16:24: 16:36
    let mut _63: &usize;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _66: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    let mut _67: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
    let mut _68: usize;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
    let mut _69: usize;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
    let _71: !;                          // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
    let mut _72: core::panicking::AssertKind; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
    let mut _73: &usize;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let _74: &usize;                     // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let mut _75: &usize;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let _76: &usize;                     // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let mut _77: std::option::Option<std::fmt::Arguments<'_>>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
    let mut _78: std::ops::Range<usize>; // in scope 0 at ui/zero-sized/zero-sized-linkedlist-push.rs:17:24: 17:30
    let mut _79: std::ops::Range<usize>; // in scope 0 at ui/zero-sized/zero-sized-linkedlist-push.rs:17:24: 17:30
    let mut _80: usize;                  // in scope 0 at ui/zero-sized/zero-sized-linkedlist-push.rs:17:27: 17:30
    let mut _82: std::option::Option<usize>; // in scope 0 at ui/zero-sized/zero-sized-linkedlist-push.rs:17:24: 17:30
    let mut _83: &mut std::ops::Range<usize>; // in scope 0 at ui/zero-sized/zero-sized-linkedlist-push.rs:17:24: 17:30
    let mut _84: &mut std::ops::Range<usize>; // in scope 0 at ui/zero-sized/zero-sized-linkedlist-push.rs:17:24: 17:30
    let mut _85: isize;                  // in scope 0 at ui/zero-sized/zero-sized-linkedlist-push.rs:17:13: 23:14
    let mut _87: i32;                    // in scope 0 at ui/zero-sized/zero-sized-linkedlist-push.rs:18:20: 18:37
    let mut _88: i32;                    // in scope 0 at ui/zero-sized/zero-sized-linkedlist-push.rs:18:20: 18:24
    let mut _89: i32;                    // in scope 0 at ui/zero-sized/zero-sized-linkedlist-push.rs:18:27: 18:37
    let mut _90: usize;                  // in scope 0 at ui/zero-sized/zero-sized-linkedlist-push.rs:18:33: 18:36
    let mut _91: (i32, bool);            // in scope 0 at ui/zero-sized/zero-sized-linkedlist-push.rs:18:27: 18:37
    let _92: ();                         // in scope 0 at ui/zero-sized/zero-sized-linkedlist-push.rs:19:21: 19:42
    let mut _93: &mut std::collections::LinkedList<()>; // in scope 0 at ui/zero-sized/zero-sized-linkedlist-push.rs:19:21: 19:42
    let mut _94: ();                     // in scope 0 at ui/zero-sized/zero-sized-linkedlist-push.rs:19:39: 19:41
    let _95: ();                         // in scope 0 at ui/zero-sized/zero-sized-linkedlist-push.rs:21:21: 21:41
    let mut _96: &mut std::collections::LinkedList<()>; // in scope 0 at ui/zero-sized/zero-sized-linkedlist-push.rs:21:21: 21:41
    let mut _97: ();                     // in scope 0 at ui/zero-sized/zero-sized-linkedlist-push.rs:21:38: 21:40
    let mut _98: (&usize, &usize);       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _99: &usize;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let _100: usize;                     // in scope 0 at ui/zero-sized/zero-sized-linkedlist-push.rs:24:24: 24:36
    let mut _101: &std::collections::LinkedList<()>; // in scope 0 at ui/zero-sized/zero-sized-linkedlist-push.rs:24:24: 24:36
    let mut _102: &usize;                // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _105: bool;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    let mut _106: bool;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
    let mut _107: usize;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
    let mut _108: usize;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
    let _110: !;                         // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
    let mut _111: core::panicking::AssertKind; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
    let mut _112: &usize;                // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let _113: &usize;                    // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let mut _114: &usize;                // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let _115: &usize;                    // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let mut _116: std::option::Option<std::fmt::Arguments<'_>>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
    let mut _117: (&usize, &usize);      // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _118: &usize;                // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let _119: usize;                     // in scope 0 at ui/zero-sized/zero-sized-linkedlist-push.rs:25:24: 25:45
    let mut _120: std::collections::linked_list::Iter<'_, ()>; // in scope 0 at ui/zero-sized/zero-sized-linkedlist-push.rs:25:24: 25:37
    let mut _121: &std::collections::LinkedList<()>; // in scope 0 at ui/zero-sized/zero-sized-linkedlist-push.rs:25:24: 25:37
    let mut _122: &usize;                // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _125: bool;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    let mut _126: bool;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
    let mut _127: usize;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
    let mut _128: usize;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
    let _130: !;                         // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
    let mut _131: core::panicking::AssertKind; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
    let mut _132: &usize;                // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let _133: &usize;                    // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let mut _134: &usize;                // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let _135: &usize;                    // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let mut _136: std::option::Option<std::fmt::Arguments<'_>>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
    let _137: ();                        // in scope 0 at ui/zero-sized/zero-sized-linkedlist-push.rs:26:13: 26:27
    let mut _138: &mut std::collections::LinkedList<()>; // in scope 0 at ui/zero-sized/zero-sized-linkedlist-push.rs:26:13: 26:27
    scope 1 {
        debug iter => _3;                // in scope 1 at ui/zero-sized/zero-sized-linkedlist-push.rs:11:16: 11:20
        let _8: usize;                   // in scope 1 at ui/zero-sized/zero-sized-linkedlist-push.rs:11:9: 11:12
        scope 2 {
            debug len => _8;             // in scope 2 at ui/zero-sized/zero-sized-linkedlist-push.rs:11:9: 11:12
            let mut _9: std::collections::LinkedList<()>; // in scope 2 at ui/zero-sized/zero-sized-linkedlist-push.rs:12:13: 12:23
            scope 3 {
                debug tester => _9;      // in scope 3 at ui/zero-sized/zero-sized-linkedlist-push.rs:12:13: 12:23
                let _15: &usize;         // in scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
                let _16: &usize;         // in scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
                let _34: &std::option::Option<&()>; // in scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
                let _35: &std::option::Option<&()>; // in scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
                let mut _53: std::ops::Range<i32>; // in scope 3 at ui/zero-sized/zero-sized-linkedlist-push.rs:15:21: 15:34
                let mut _140: &std::option::Option<&()>; // in scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                let mut _141: &usize;    // in scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                scope 4 {
                    debug left_val => _15; // in scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
                    debug right_val => _16; // in scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
                    let _21: core::panicking::AssertKind; // in scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                    scope 5 {
                        debug kind => _21; // in scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                    }
                }
                scope 6 {
                    debug left_val => _34; // in scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
                    debug right_val => _35; // in scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
                    let _40: core::panicking::AssertKind; // in scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                    scope 7 {
                        debug kind => _40; // in scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                    }
                }
                scope 8 {
                    debug iter => _53;   // in scope 8 at ui/zero-sized/zero-sized-linkedlist-push.rs:15:21: 15:34
                    let _58: i32;        // in scope 8 at ui/zero-sized/zero-sized-linkedlist-push.rs:15:13: 15:17
                    scope 9 {
                        debug case => _58; // in scope 9 at ui/zero-sized/zero-sized-linkedlist-push.rs:15:13: 15:17
                        let _64: &usize; // in scope 9 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
                        let _65: &usize; // in scope 9 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
                        let mut _81: std::ops::Range<usize>; // in scope 9 at ui/zero-sized/zero-sized-linkedlist-push.rs:17:24: 17:30
                        let _103: &usize; // in scope 9 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
                        let _104: &usize; // in scope 9 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
                        let _123: &usize; // in scope 9 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
                        let _124: &usize; // in scope 9 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
                        let mut _139: &usize; // in scope 9 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                        scope 10 {
                            debug left_val => _64; // in scope 10 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
                            debug right_val => _65; // in scope 10 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
                            let _70: core::panicking::AssertKind; // in scope 10 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                            scope 11 {
                                debug kind => _70; // in scope 11 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                            }
                        }
                        scope 12 {
                            debug iter => _81; // in scope 12 at ui/zero-sized/zero-sized-linkedlist-push.rs:17:24: 17:30
                            let _86: usize; // in scope 12 at ui/zero-sized/zero-sized-linkedlist-push.rs:17:17: 17:20
                            scope 13 {
                                debug bit => _86; // in scope 13 at ui/zero-sized/zero-sized-linkedlist-push.rs:17:17: 17:20
                            }
                        }
                        scope 14 {
                            debug left_val => _103; // in scope 14 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
                            debug right_val => _104; // in scope 14 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
                            let _109: core::panicking::AssertKind; // in scope 14 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                            scope 15 {
                                debug kind => _109; // in scope 15 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                            }
                        }
                        scope 16 {
                            debug left_val => _123; // in scope 16 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
                            debug right_val => _124; // in scope 16 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
                            let _129: core::panicking::AssertKind; // in scope 16 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                            scope 17 {
                                debug kind => _129; // in scope 17 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                            }
                        }
                    }
                }
            }
        }
    }

    bb0: {
        _2 = std::ops::Range::<usize> { start: const 0_usize, end: const _ }; // scope 0 at ui/zero-sized/zero-sized-linkedlist-push.rs:11:16: 11:20
        _1 = <std::ops::Range<usize> as IntoIterator>::into_iter(move _2) -> bb1; // scope 0 at ui/zero-sized/zero-sized-linkedlist-push.rs:11:16: 11:20
                                         // mir::Constant
                                         // + span: ui/zero-sized/zero-sized-linkedlist-push.rs:11:16: 11:20
                                         // + literal: Const { ty: fn(std::ops::Range<usize>) -> <std::ops::Range<usize> as IntoIterator>::IntoIter {<std::ops::Range<usize> as IntoIterator>::into_iter}, val: Value(<ZST>) }
    }

    bb1: {
        _3 = move _1;                    // scope 0 at ui/zero-sized/zero-sized-linkedlist-push.rs:11:16: 11:20
        goto -> bb2;                     // scope 1 at ui/zero-sized/zero-sized-linkedlist-push.rs:11:5: 28:6
    }

    bb2: {
        _6 = &mut _3;                    // scope 1 at ui/zero-sized/zero-sized-linkedlist-push.rs:11:16: 11:20
        _5 = &mut (*_6);                 // scope 1 at ui/zero-sized/zero-sized-linkedlist-push.rs:11:16: 11:20
        _4 = <std::ops::Range<usize> as Iterator>::next(move _5) -> bb3; // scope 1 at ui/zero-sized/zero-sized-linkedlist-push.rs:11:16: 11:20
                                         // mir::Constant
                                         // + span: ui/zero-sized/zero-sized-linkedlist-push.rs:11:16: 11:20
                                         // + literal: Const { ty: for<'a> fn(&'a mut std::ops::Range<usize>) -> Option<<std::ops::Range<usize> as Iterator>::Item> {<std::ops::Range<usize> as Iterator>::next}, val: Value(<ZST>) }
    }

    bb3: {
        _7 = discriminant(_4);           // scope 1 at ui/zero-sized/zero-sized-linkedlist-push.rs:11:16: 11:20
        switchInt(move _7) -> [0: bb6, 1: bb4, otherwise: bb5]; // scope 1 at ui/zero-sized/zero-sized-linkedlist-push.rs:11:16: 11:20
    }

    bb4: {
        _8 = ((_4 as Some).0: usize);    // scope 1 at ui/zero-sized/zero-sized-linkedlist-push.rs:11:9: 11:12
        _9 = LinkedList::<()>::new() -> bb7; // scope 2 at ui/zero-sized/zero-sized-linkedlist-push.rs:12:26: 12:43
                                         // mir::Constant
                                         // + span: ui/zero-sized/zero-sized-linkedlist-push.rs:12:26: 12:41
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: fn() -> LinkedList<()> {LinkedList::<()>::new}, val: Value(<ZST>) }
    }

    bb5: {
        unreachable;                     // scope 1 at ui/zero-sized/zero-sized-linkedlist-push.rs:11:16: 11:20
    }

    bb6: {
        return;                          // scope 0 at ui/zero-sized/zero-sized-linkedlist-push.rs:29:2: 29:2
    }

    bb7: {
        _13 = &_9;                       // scope 3 at ui/zero-sized/zero-sized-linkedlist-push.rs:13:20: 13:32
        _12 = LinkedList::<()>::len(move _13) -> [return: bb8, unwind: bb41]; // scope 3 at ui/zero-sized/zero-sized-linkedlist-push.rs:13:20: 13:32
                                         // mir::Constant
                                         // + span: ui/zero-sized/zero-sized-linkedlist-push.rs:13:27: 13:30
                                         // + literal: Const { ty: for<'a> fn(&'a LinkedList<()>) -> usize {LinkedList::<()>::len}, val: Value(<ZST>) }
    }

    bb8: {
        _11 = &_12;                      // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _141 = const _;                  // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // + literal: Const { ty: &usize, val: Unevaluated(main, [], Some(promoted[2])) }
        _14 = _141;                      // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _10 = (move _11, move _14);      // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _15 = (_10.0: &usize);           // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _16 = (_10.1: &usize);           // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _19 = (*_15);                    // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
        _20 = const 0_usize;             // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
        _18 = Eq(move _19, move _20);    // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
        _17 = Not(move _18);             // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
        switchInt(move _17) -> [0: bb10, otherwise: bb9]; // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    }

    bb9: {
        _21 = const core::panicking::AssertKind::Eq; // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _23 = const core::panicking::AssertKind::Eq; // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _25 = _15;                       // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _24 = _25;                       // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _27 = _16;                       // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _26 = _27;                       // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _28 = Option::<Arguments<'_>>::None; // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
        _22 = core::panicking::assert_failed::<usize, usize>(move _23, move _24, move _26, move _28) -> bb41; // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:53
                                         // + literal: Const { ty: for<'a, 'b, 'c> fn(core::panicking::AssertKind, &'a usize, &'b usize, Option<Arguments<'c>>) -> ! {core::panicking::assert_failed::<usize, usize>}, val: Value(<ZST>) }
    }

    bb10: {
        _32 = &_9;                       // scope 3 at ui/zero-sized/zero-sized-linkedlist-push.rs:14:20: 14:34
        _31 = LinkedList::<()>::front(move _32) -> [return: bb11, unwind: bb41]; // scope 3 at ui/zero-sized/zero-sized-linkedlist-push.rs:14:20: 14:34
                                         // mir::Constant
                                         // + span: ui/zero-sized/zero-sized-linkedlist-push.rs:14:27: 14:32
                                         // + literal: Const { ty: for<'a> fn(&'a LinkedList<()>) -> Option<&'a ()> {LinkedList::<()>::front}, val: Value(<ZST>) }
    }

    bb11: {
        _30 = &_31;                      // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _140 = const _;                  // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // + literal: Const { ty: &Option<&()>, val: Unevaluated(main, [], Some(promoted[1])) }
        _33 = _140;                      // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _29 = (move _30, move _33);      // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _34 = (_29.0: &std::option::Option<&()>); // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _35 = (_29.1: &std::option::Option<&()>); // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _38 = _34;                       // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
        _39 = _35;                       // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
        _37 = <Option<&()> as PartialEq>::eq(move _38, move _39) -> [return: bb12, unwind: bb41]; // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a Option<&()>, &'b Option<&()>) -> bool {<Option<&()> as PartialEq>::eq}, val: Value(<ZST>) }
    }

    bb12: {
        _36 = Not(move _37);             // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
        switchInt(move _36) -> [0: bb14, otherwise: bb13]; // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    }

    bb13: {
        _40 = const core::panicking::AssertKind::Eq; // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _42 = const core::panicking::AssertKind::Eq; // scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _44 = _34;                       // scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _43 = _44;                       // scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _46 = _35;                       // scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _45 = _46;                       // scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _47 = Option::<Arguments<'_>>::None; // scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
        _41 = core::panicking::assert_failed::<Option<&()>, Option<&()>>(move _42, move _43, move _45, move _47) -> bb41; // scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:53
                                         // + literal: Const { ty: for<'a, 'b, 'c> fn(core::panicking::AssertKind, &'a Option<&()>, &'b Option<&()>, Option<Arguments<'c>>) -> ! {core::panicking::assert_failed::<Option<&()>, Option<&()>>}, val: Value(<ZST>) }
    }

    bb14: {
        _51 = _8;                        // scope 3 at ui/zero-sized/zero-sized-linkedlist-push.rs:15:30: 15:33
        _52 = CheckedShl(const 1_i32, _51); // scope 3 at ui/zero-sized/zero-sized-linkedlist-push.rs:15:24: 15:34
        assert(!move (_52.1: bool), "attempt to shift left by `{}`, which would overflow", move _51) -> [success: bb15, unwind: bb41]; // scope 3 at ui/zero-sized/zero-sized-linkedlist-push.rs:15:24: 15:34
    }

    bb15: {
        _50 = move (_52.0: i32);         // scope 3 at ui/zero-sized/zero-sized-linkedlist-push.rs:15:24: 15:34
        _49 = std::ops::Range::<i32> { start: const 0_i32, end: move _50 }; // scope 3 at ui/zero-sized/zero-sized-linkedlist-push.rs:15:21: 15:34
        _48 = <std::ops::Range<i32> as IntoIterator>::into_iter(move _49) -> [return: bb16, unwind: bb41]; // scope 3 at ui/zero-sized/zero-sized-linkedlist-push.rs:15:21: 15:34
                                         // mir::Constant
                                         // + span: ui/zero-sized/zero-sized-linkedlist-push.rs:15:21: 15:34
                                         // + literal: Const { ty: fn(std::ops::Range<i32>) -> <std::ops::Range<i32> as IntoIterator>::IntoIter {<std::ops::Range<i32> as IntoIterator>::into_iter}, val: Value(<ZST>) }
    }

    bb16: {
        _53 = move _48;                  // scope 3 at ui/zero-sized/zero-sized-linkedlist-push.rs:15:21: 15:34
        goto -> bb17;                    // scope 8 at ui/zero-sized/zero-sized-linkedlist-push.rs:15:9: 27:10
    }

    bb17: {
        _56 = &mut _53;                  // scope 8 at ui/zero-sized/zero-sized-linkedlist-push.rs:15:21: 15:34
        _55 = &mut (*_56);               // scope 8 at ui/zero-sized/zero-sized-linkedlist-push.rs:15:21: 15:34
        _54 = <std::ops::Range<i32> as Iterator>::next(move _55) -> [return: bb18, unwind: bb41]; // scope 8 at ui/zero-sized/zero-sized-linkedlist-push.rs:15:21: 15:34
                                         // mir::Constant
                                         // + span: ui/zero-sized/zero-sized-linkedlist-push.rs:15:21: 15:34
                                         // + literal: Const { ty: for<'a> fn(&'a mut std::ops::Range<i32>) -> Option<<std::ops::Range<i32> as Iterator>::Item> {<std::ops::Range<i32> as Iterator>::next}, val: Value(<ZST>) }
    }

    bb18: {
        _57 = discriminant(_54);         // scope 8 at ui/zero-sized/zero-sized-linkedlist-push.rs:15:21: 15:34
        switchInt(move _57) -> [0: bb21, 1: bb19, otherwise: bb20]; // scope 8 at ui/zero-sized/zero-sized-linkedlist-push.rs:15:21: 15:34
    }

    bb19: {
        _58 = ((_54 as Some).0: i32);    // scope 8 at ui/zero-sized/zero-sized-linkedlist-push.rs:15:13: 15:17
        _62 = &_9;                       // scope 9 at ui/zero-sized/zero-sized-linkedlist-push.rs:16:24: 16:36
        _61 = LinkedList::<()>::len(move _62) -> [return: bb22, unwind: bb41]; // scope 9 at ui/zero-sized/zero-sized-linkedlist-push.rs:16:24: 16:36
                                         // mir::Constant
                                         // + span: ui/zero-sized/zero-sized-linkedlist-push.rs:16:31: 16:34
                                         // + literal: Const { ty: for<'a> fn(&'a LinkedList<()>) -> usize {LinkedList::<()>::len}, val: Value(<ZST>) }
    }

    bb20: {
        unreachable;                     // scope 8 at ui/zero-sized/zero-sized-linkedlist-push.rs:15:21: 15:34
    }

    bb21: {
        drop(_9) -> bb2;                 // scope 2 at ui/zero-sized/zero-sized-linkedlist-push.rs:28:5: 28:6
    }

    bb22: {
        _60 = &_61;                      // scope 9 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _139 = const _;                  // scope 9 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // + literal: Const { ty: &usize, val: Unevaluated(main, [], Some(promoted[0])) }
        _63 = _139;                      // scope 9 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _59 = (move _60, move _63);      // scope 9 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _64 = (_59.0: &usize);           // scope 9 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _65 = (_59.1: &usize);           // scope 9 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _68 = (*_64);                    // scope 10 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
        _69 = const 0_usize;             // scope 10 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
        _67 = Eq(move _68, move _69);    // scope 10 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
        _66 = Not(move _67);             // scope 10 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
        switchInt(move _66) -> [0: bb24, otherwise: bb23]; // scope 10 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    }

    bb23: {
        _70 = const core::panicking::AssertKind::Eq; // scope 10 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _72 = const core::panicking::AssertKind::Eq; // scope 11 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _74 = _64;                       // scope 11 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _73 = _74;                       // scope 11 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _76 = _65;                       // scope 11 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _75 = _76;                       // scope 11 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _77 = Option::<Arguments<'_>>::None; // scope 11 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
        _71 = core::panicking::assert_failed::<usize, usize>(move _72, move _73, move _75, move _77) -> bb41; // scope 11 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:53
                                         // + literal: Const { ty: for<'a, 'b, 'c> fn(core::panicking::AssertKind, &'a usize, &'b usize, Option<Arguments<'c>>) -> ! {core::panicking::assert_failed::<usize, usize>}, val: Value(<ZST>) }
    }

    bb24: {
        _80 = _8;                        // scope 9 at ui/zero-sized/zero-sized-linkedlist-push.rs:17:27: 17:30
        _79 = std::ops::Range::<usize> { start: const 0_usize, end: move _80 }; // scope 9 at ui/zero-sized/zero-sized-linkedlist-push.rs:17:24: 17:30
        _78 = <std::ops::Range<usize> as IntoIterator>::into_iter(move _79) -> [return: bb25, unwind: bb41]; // scope 9 at ui/zero-sized/zero-sized-linkedlist-push.rs:17:24: 17:30
                                         // mir::Constant
                                         // + span: ui/zero-sized/zero-sized-linkedlist-push.rs:17:24: 17:30
                                         // + literal: Const { ty: fn(std::ops::Range<usize>) -> <std::ops::Range<usize> as IntoIterator>::IntoIter {<std::ops::Range<usize> as IntoIterator>::into_iter}, val: Value(<ZST>) }
    }

    bb25: {
        _81 = move _78;                  // scope 9 at ui/zero-sized/zero-sized-linkedlist-push.rs:17:24: 17:30
        goto -> bb26;                    // scope 12 at ui/zero-sized/zero-sized-linkedlist-push.rs:17:13: 23:14
    }

    bb26: {
        _84 = &mut _81;                  // scope 12 at ui/zero-sized/zero-sized-linkedlist-push.rs:17:24: 17:30
        _83 = &mut (*_84);               // scope 12 at ui/zero-sized/zero-sized-linkedlist-push.rs:17:24: 17:30
        _82 = <std::ops::Range<usize> as Iterator>::next(move _83) -> [return: bb27, unwind: bb41]; // scope 12 at ui/zero-sized/zero-sized-linkedlist-push.rs:17:24: 17:30
                                         // mir::Constant
                                         // + span: ui/zero-sized/zero-sized-linkedlist-push.rs:17:24: 17:30
                                         // + literal: Const { ty: for<'a> fn(&'a mut std::ops::Range<usize>) -> Option<<std::ops::Range<usize> as Iterator>::Item> {<std::ops::Range<usize> as Iterator>::next}, val: Value(<ZST>) }
    }

    bb27: {
        _85 = discriminant(_82);         // scope 12 at ui/zero-sized/zero-sized-linkedlist-push.rs:17:24: 17:30
        switchInt(move _85) -> [0: bb30, 1: bb28, otherwise: bb29]; // scope 12 at ui/zero-sized/zero-sized-linkedlist-push.rs:17:24: 17:30
    }

    bb28: {
        _86 = ((_82 as Some).0: usize);  // scope 12 at ui/zero-sized/zero-sized-linkedlist-push.rs:17:17: 17:20
        _88 = _58;                       // scope 13 at ui/zero-sized/zero-sized-linkedlist-push.rs:18:20: 18:24
        _90 = _86;                       // scope 13 at ui/zero-sized/zero-sized-linkedlist-push.rs:18:33: 18:36
        _91 = CheckedShl(const 1_i32, _90); // scope 13 at ui/zero-sized/zero-sized-linkedlist-push.rs:18:27: 18:37
        assert(!move (_91.1: bool), "attempt to shift left by `{}`, which would overflow", move _90) -> [success: bb31, unwind: bb41]; // scope 13 at ui/zero-sized/zero-sized-linkedlist-push.rs:18:27: 18:37
    }

    bb29: {
        unreachable;                     // scope 12 at ui/zero-sized/zero-sized-linkedlist-push.rs:17:24: 17:30
    }

    bb30: {
        _101 = &_9;                      // scope 9 at ui/zero-sized/zero-sized-linkedlist-push.rs:24:24: 24:36
        _100 = LinkedList::<()>::len(move _101) -> [return: bb34, unwind: bb41]; // scope 9 at ui/zero-sized/zero-sized-linkedlist-push.rs:24:24: 24:36
                                         // mir::Constant
                                         // + span: ui/zero-sized/zero-sized-linkedlist-push.rs:24:31: 24:34
                                         // + literal: Const { ty: for<'a> fn(&'a LinkedList<()>) -> usize {LinkedList::<()>::len}, val: Value(<ZST>) }
    }

    bb31: {
        _89 = move (_91.0: i32);         // scope 13 at ui/zero-sized/zero-sized-linkedlist-push.rs:18:27: 18:37
        _87 = BitAnd(move _88, move _89); // scope 13 at ui/zero-sized/zero-sized-linkedlist-push.rs:18:20: 18:37
        switchInt(move _87) -> [0: bb33, otherwise: bb32]; // scope 13 at ui/zero-sized/zero-sized-linkedlist-push.rs:18:20: 18:42
    }

    bb32: {
        _93 = &mut _9;                   // scope 13 at ui/zero-sized/zero-sized-linkedlist-push.rs:19:21: 19:42
        _92 = LinkedList::<()>::push_front(move _93, move _94) -> [return: bb43, unwind: bb41]; // scope 13 at ui/zero-sized/zero-sized-linkedlist-push.rs:19:21: 19:42
                                         // mir::Constant
                                         // + span: ui/zero-sized/zero-sized-linkedlist-push.rs:19:28: 19:38
                                         // + literal: Const { ty: for<'a> fn(&'a mut LinkedList<()>, ()) {LinkedList::<()>::push_front}, val: Value(<ZST>) }
    }

    bb33: {
        _96 = &mut _9;                   // scope 13 at ui/zero-sized/zero-sized-linkedlist-push.rs:21:21: 21:41
        _95 = LinkedList::<()>::push_back(move _96, move _97) -> [return: bb44, unwind: bb41]; // scope 13 at ui/zero-sized/zero-sized-linkedlist-push.rs:21:21: 21:41
                                         // mir::Constant
                                         // + span: ui/zero-sized/zero-sized-linkedlist-push.rs:21:28: 21:37
                                         // + literal: Const { ty: for<'a> fn(&'a mut LinkedList<()>, ()) {LinkedList::<()>::push_back}, val: Value(<ZST>) }
    }

    bb34: {
        _99 = &_100;                     // scope 9 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _102 = &_8;                      // scope 9 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _98 = (move _99, move _102);     // scope 9 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _103 = (_98.0: &usize);          // scope 9 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _104 = (_98.1: &usize);          // scope 9 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _107 = (*_103);                  // scope 14 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
        _108 = (*_104);                  // scope 14 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
        _106 = Eq(move _107, move _108); // scope 14 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
        _105 = Not(move _106);           // scope 14 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
        switchInt(move _105) -> [0: bb36, otherwise: bb35]; // scope 14 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    }

    bb35: {
        _109 = const core::panicking::AssertKind::Eq; // scope 14 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _111 = const core::panicking::AssertKind::Eq; // scope 15 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _113 = _103;                     // scope 15 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _112 = _113;                     // scope 15 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _115 = _104;                     // scope 15 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _114 = _115;                     // scope 15 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _116 = Option::<Arguments<'_>>::None; // scope 15 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
        _110 = core::panicking::assert_failed::<usize, usize>(move _111, move _112, move _114, move _116) -> bb41; // scope 15 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:53
                                         // + literal: Const { ty: for<'a, 'b, 'c> fn(core::panicking::AssertKind, &'a usize, &'b usize, Option<Arguments<'c>>) -> ! {core::panicking::assert_failed::<usize, usize>}, val: Value(<ZST>) }
    }

    bb36: {
        _121 = &_9;                      // scope 9 at ui/zero-sized/zero-sized-linkedlist-push.rs:25:24: 25:37
        _120 = LinkedList::<()>::iter(move _121) -> [return: bb37, unwind: bb41]; // scope 9 at ui/zero-sized/zero-sized-linkedlist-push.rs:25:24: 25:37
                                         // mir::Constant
                                         // + span: ui/zero-sized/zero-sized-linkedlist-push.rs:25:31: 25:35
                                         // + literal: Const { ty: for<'a> fn(&'a LinkedList<()>) -> std::collections::linked_list::Iter<'a, ()> {LinkedList::<()>::iter}, val: Value(<ZST>) }
    }

    bb37: {
        _119 = <std::collections::linked_list::Iter<'_, ()> as Iterator>::count(move _120) -> [return: bb38, unwind: bb41]; // scope 9 at ui/zero-sized/zero-sized-linkedlist-push.rs:25:24: 25:45
                                         // mir::Constant
                                         // + span: ui/zero-sized/zero-sized-linkedlist-push.rs:25:38: 25:43
                                         // + literal: Const { ty: fn(std::collections::linked_list::Iter<'_, ()>) -> usize {<std::collections::linked_list::Iter<'_, ()> as Iterator>::count}, val: Value(<ZST>) }
    }

    bb38: {
        _118 = &_119;                    // scope 9 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _122 = &_8;                      // scope 9 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _117 = (move _118, move _122);   // scope 9 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _123 = (_117.0: &usize);         // scope 9 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _124 = (_117.1: &usize);         // scope 9 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _127 = (*_123);                  // scope 16 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
        _128 = (*_124);                  // scope 16 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
        _126 = Eq(move _127, move _128); // scope 16 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
        _125 = Not(move _126);           // scope 16 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
        switchInt(move _125) -> [0: bb40, otherwise: bb39]; // scope 16 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    }

    bb39: {
        _129 = const core::panicking::AssertKind::Eq; // scope 16 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _131 = const core::panicking::AssertKind::Eq; // scope 17 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _133 = _123;                     // scope 17 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _132 = _133;                     // scope 17 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _135 = _124;                     // scope 17 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _134 = _135;                     // scope 17 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _136 = Option::<Arguments<'_>>::None; // scope 17 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
        _130 = core::panicking::assert_failed::<usize, usize>(move _131, move _132, move _134, move _136) -> bb41; // scope 17 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:53
                                         // + literal: Const { ty: for<'a, 'b, 'c> fn(core::panicking::AssertKind, &'a usize, &'b usize, Option<Arguments<'c>>) -> ! {core::panicking::assert_failed::<usize, usize>}, val: Value(<ZST>) }
    }

    bb40: {
        _138 = &mut _9;                  // scope 9 at ui/zero-sized/zero-sized-linkedlist-push.rs:26:13: 26:27
        _137 = LinkedList::<()>::clear(move _138) -> [return: bb45, unwind: bb41]; // scope 9 at ui/zero-sized/zero-sized-linkedlist-push.rs:26:13: 26:27
                                         // mir::Constant
                                         // + span: ui/zero-sized/zero-sized-linkedlist-push.rs:26:20: 26:25
                                         // + literal: Const { ty: for<'a> fn(&'a mut LinkedList<()>) {LinkedList::<()>::clear}, val: Value(<ZST>) }
    }

    bb41 (cleanup): {
        drop(_9) -> bb42;                // scope 2 at ui/zero-sized/zero-sized-linkedlist-push.rs:28:5: 28:6
    }

    bb42 (cleanup): {
        resume;                          // scope 0 at ui/zero-sized/zero-sized-linkedlist-push.rs:5:1: 29:2
    }

    bb43: {
        goto -> bb26;                    // scope 13 at ui/zero-sized/zero-sized-linkedlist-push.rs:19:21: 19:42
    }

    bb44: {
        goto -> bb26;                    // scope 13 at ui/zero-sized/zero-sized-linkedlist-push.rs:21:21: 21:41
    }

    bb45: {
        goto -> bb17;                    // scope 9 at ui/zero-sized/zero-sized-linkedlist-push.rs:26:13: 26:27
    }
}

promoted[0] in main: &usize = {
    let mut _0: &usize;                  // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _1: usize;                   // in scope 0 at ui/zero-sized/zero-sized-linkedlist-push.rs:16:38: 16:39

    bb0: {
        _1 = const 0_usize;              // scope 0 at ui/zero-sized/zero-sized-linkedlist-push.rs:16:38: 16:39
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    }
}

promoted[1] in main: &Option<&()> = {
    let mut _0: &std::option::Option<&()>; // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _1: std::option::Option<&()>; // in scope 0 at ui/zero-sized/zero-sized-linkedlist-push.rs:14:36: 14:40

    bb0: {
        _1 = Option::<&()>::None;        // scope 0 at ui/zero-sized/zero-sized-linkedlist-push.rs:14:36: 14:40
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    }
}

promoted[2] in main: &usize = {
    let mut _0: &usize;                  // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _1: usize;                   // in scope 0 at ui/zero-sized/zero-sized-linkedlist-push.rs:13:34: 13:35

    bb0: {
        _1 = const 0_usize;              // scope 0 at ui/zero-sized/zero-sized-linkedlist-push.rs:13:34: 13:35
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    }
}

const N: usize = {
    let mut _0: usize;                   // return place in scope 0 at ui/zero-sized/zero-sized-linkedlist-push.rs:6:14: 6:19

    bb0: {
        _0 = const 8_usize;              // scope 0 at ui/zero-sized/zero-sized-linkedlist-push.rs:6:22: 6:23
        return;                          // scope 0 at ui/zero-sized/zero-sized-linkedlist-push.rs:6:5: 6:24
    }
}
