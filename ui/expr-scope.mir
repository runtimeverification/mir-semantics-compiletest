// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
fn f() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/expr-scope.rs:6:12: 6:12

    bb0: {
        return;                          // scope 0 at ui/expr-scope.rs:6:15: 6:15
    }
}

fn main() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/expr-scope.rs:7:15: 7:15

    bb0: {
        _0 = f() -> bb1;                 // scope 0 at ui/expr-scope.rs:7:24: 7:29
                                         // mir::Constant
                                         // + span: ui/expr-scope.rs:7:24: 7:27
                                         // + literal: Const { ty: fn() {f}, val: Value(<ZST>) }
    }

    bb1: {
        return;                          // scope 0 at ui/expr-scope.rs:7:32: 7:32
    }
}
