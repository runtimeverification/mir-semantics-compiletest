// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
fn main() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/destructuring-assignment/nested_destructure.rs:10:11: 10:11
    let _1: i32;                         // in scope 0 at ui/destructuring-assignment/nested_destructure.rs:11:10: 11:11
    let _2: i32;                         // in scope 0 at ui/destructuring-assignment/nested_destructure.rs:11:13: 11:14
    let _3: i32;                         // in scope 0 at ui/destructuring-assignment/nested_destructure.rs:11:16: 11:17
    let _4: i32;                         // in scope 0 at ui/destructuring-assignment/nested_destructure.rs:11:19: 11:20
    let mut _9: (&(i32, i32, i32, i32), &(i32, i32, i32, i32)); // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _10: &(i32, i32, i32, i32);  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let _11: (i32, i32, i32, i32);       // in scope 0 at ui/destructuring-assignment/nested_destructure.rs:14:16: 14:28
    let mut _12: i32;                    // in scope 0 at ui/destructuring-assignment/nested_destructure.rs:14:17: 14:18
    let mut _13: i32;                    // in scope 0 at ui/destructuring-assignment/nested_destructure.rs:14:20: 14:21
    let mut _14: i32;                    // in scope 0 at ui/destructuring-assignment/nested_destructure.rs:14:23: 14:24
    let mut _15: i32;                    // in scope 0 at ui/destructuring-assignment/nested_destructure.rs:14:26: 14:27
    let mut _16: &(i32, i32, i32, i32);  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _19: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    let mut _20: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
    let mut _21: &(i32, i32, i32, i32);  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
    let mut _22: &(i32, i32, i32, i32);  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
    let _24: !;                          // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
    let mut _25: core::panicking::AssertKind; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
    let mut _26: &(i32, i32, i32, i32);  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let _27: &(i32, i32, i32, i32);      // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let mut _28: &(i32, i32, i32, i32);  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let _29: &(i32, i32, i32, i32);      // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let mut _30: std::option::Option<std::fmt::Arguments<'_>>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
    scope 1 {
        debug a => _1;                   // in scope 1 at ui/destructuring-assignment/nested_destructure.rs:11:10: 11:11
        debug b => _2;                   // in scope 1 at ui/destructuring-assignment/nested_destructure.rs:11:13: 11:14
        debug c => _3;                   // in scope 1 at ui/destructuring-assignment/nested_destructure.rs:11:16: 11:17
        debug d => _4;                   // in scope 1 at ui/destructuring-assignment/nested_destructure.rs:11:19: 11:20
        let _5: i32;                     // in scope 1 at ui/destructuring-assignment/nested_destructure.rs:12:30: 12:31
        let _6: i32;                     // in scope 1 at ui/destructuring-assignment/nested_destructure.rs:12:33: 12:34
        let _7: i32;                     // in scope 1 at ui/destructuring-assignment/nested_destructure.rs:12:37: 12:38
        let _8: i32;                     // in scope 1 at ui/destructuring-assignment/nested_destructure.rs:12:45: 12:46
        let _17: &(i32, i32, i32, i32);  // in scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        let _18: &(i32, i32, i32, i32);  // in scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        let mut _31: &(i32, i32, i32, i32); // in scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        scope 2 {
            debug lhs => _5;             // in scope 2 at ui/destructuring-assignment/nested_destructure.rs:12:30: 12:31
            debug lhs => _6;             // in scope 2 at ui/destructuring-assignment/nested_destructure.rs:12:33: 12:34
            debug lhs => _7;             // in scope 2 at ui/destructuring-assignment/nested_destructure.rs:12:37: 12:38
            debug lhs => _8;             // in scope 2 at ui/destructuring-assignment/nested_destructure.rs:12:45: 12:46
        }
        scope 3 {
            debug left_val => _17;       // in scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
            debug right_val => _18;      // in scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
            let _23: core::panicking::AssertKind; // in scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
            scope 4 {
                debug kind => _23;       // in scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
            }
        }
        scope 5 {
        }
    }

    bb0: {
        _5 = const 0_i32;                // scope 1 at ui/destructuring-assignment/nested_destructure.rs:12:30: 12:31
        _6 = const 1_i32;                // scope 1 at ui/destructuring-assignment/nested_destructure.rs:12:33: 12:34
        _7 = const 2_i32;                // scope 1 at ui/destructuring-assignment/nested_destructure.rs:12:37: 12:38
        _8 = const 3_i32;                // scope 1 at ui/destructuring-assignment/nested_destructure.rs:12:45: 12:46
        _1 = const 0_i32;                // scope 2 at ui/destructuring-assignment/nested_destructure.rs:12:30: 12:31
        _2 = const 1_i32;                // scope 2 at ui/destructuring-assignment/nested_destructure.rs:12:33: 12:34
        _3 = const 2_i32;                // scope 2 at ui/destructuring-assignment/nested_destructure.rs:12:37: 12:38
        _4 = const 3_i32;                // scope 2 at ui/destructuring-assignment/nested_destructure.rs:12:45: 12:46
        _12 = const 0_i32;               // scope 1 at ui/destructuring-assignment/nested_destructure.rs:14:17: 14:18
        _13 = const 1_i32;               // scope 1 at ui/destructuring-assignment/nested_destructure.rs:14:20: 14:21
        _14 = const 2_i32;               // scope 1 at ui/destructuring-assignment/nested_destructure.rs:14:23: 14:24
        _15 = const 3_i32;               // scope 1 at ui/destructuring-assignment/nested_destructure.rs:14:26: 14:27
        _11 = (move _12, move _13, move _14, move _15); // scope 1 at ui/destructuring-assignment/nested_destructure.rs:14:16: 14:28
        _10 = &_11;                      // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _31 = const _;                   // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // + literal: Const { ty: &(i32, i32, i32, i32), val: Unevaluated(main, [], Some(promoted[0])) }
        _16 = _31;                       // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _9 = (move _10, move _16);       // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _17 = (_9.0: &(i32, i32, i32, i32)); // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _18 = (_9.1: &(i32, i32, i32, i32)); // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _21 = _17;                       // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
        _22 = _18;                       // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
        _20 = <(i32, i32, i32, i32) as PartialEq>::eq(move _21, move _22) -> bb1; // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a (i32, i32, i32, i32), &'b (i32, i32, i32, i32)) -> bool {<(i32, i32, i32, i32) as PartialEq>::eq}, val: Value(<ZST>) }
    }

    bb1: {
        _19 = Not(move _20);             // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
        switchInt(move _19) -> [0: bb3, otherwise: bb2]; // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    }

    bb2: {
        _23 = const core::panicking::AssertKind::Eq; // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _25 = const core::panicking::AssertKind::Eq; // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _27 = _17;                       // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _26 = _27;                       // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _29 = _18;                       // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _28 = _29;                       // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _30 = Option::<Arguments<'_>>::None; // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
        _24 = core::panicking::assert_failed::<(i32, i32, i32, i32), (i32, i32, i32, i32)>(move _25, move _26, move _28, move _30); // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:53
                                         // + literal: Const { ty: for<'a, 'b, 'c> fn(core::panicking::AssertKind, &'a (i32, i32, i32, i32), &'b (i32, i32, i32, i32), Option<Arguments<'c>>) -> ! {core::panicking::assert_failed::<(i32, i32, i32, i32), (i32, i32, i32, i32)>}, val: Value(<ZST>) }
    }

    bb3: {
        return;                          // scope 0 at ui/destructuring-assignment/nested_destructure.rs:18:2: 18:2
    }
}

promoted[0] in main: &(i32, i32, i32, i32) = {
    let mut _0: &(i32, i32, i32, i32);   // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _1: (i32, i32, i32, i32);    // in scope 0 at ui/destructuring-assignment/nested_destructure.rs:14:30: 14:42

    bb0: {
        _1 = (const 0_i32, const 1_i32, const 2_i32, const 3_i32); // scope 0 at ui/destructuring-assignment/nested_destructure.rs:14:30: 14:42
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    }
}

fn TupleStruct(_1: S, _2: T) -> TupleStruct<S, T> {
    let mut _0: TupleStruct<S, T>;       // return place in scope 0 at ui/destructuring-assignment/nested_destructure.rs:8:1: 8:25

    bb0: {
        _0 = TupleStruct::<S, T>(move _1, move _2); // scope 0 at ui/destructuring-assignment/nested_destructure.rs:8:1: 8:25
        return;                          // scope 0 at ui/destructuring-assignment/nested_destructure.rs:8:1: 8:25
    }
}

// MIR FOR CTFE
fn TupleStruct(_1: S, _2: T) -> TupleStruct<S, T> {
    let mut _0: TupleStruct<S, T>;       // return place in scope 0 at ui/destructuring-assignment/nested_destructure.rs:8:1: 8:25

    bb0: {
        _0 = TupleStruct::<S, T>(move _1, move _2); // scope 0 at ui/destructuring-assignment/nested_destructure.rs:8:1: 8:25
        return;                          // scope 0 at ui/destructuring-assignment/nested_destructure.rs:8:1: 8:25
    }
}
