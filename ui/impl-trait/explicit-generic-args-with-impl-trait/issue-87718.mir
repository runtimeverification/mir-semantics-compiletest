// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
fn f(_1: impl AsRef<T>, _2: impl AsRef<T>) -> () {
    let mut _0: ();                      // return place in scope 0 at ui/impl-trait/explicit-generic-args-with-impl-trait/issue-87718.rs:3:53: 3:53

    bb0: {
        drop(_2) -> [return: bb1, unwind: bb3]; // scope 0 at ui/impl-trait/explicit-generic-args-with-impl-trait/issue-87718.rs:3:54: 3:55
    }

    bb1: {
        drop(_1) -> bb2;                 // scope 0 at ui/impl-trait/explicit-generic-args-with-impl-trait/issue-87718.rs:3:54: 3:55
    }

    bb2: {
        return;                          // scope 0 at ui/impl-trait/explicit-generic-args-with-impl-trait/issue-87718.rs:3:55: 3:55
    }

    bb3 (cleanup): {
        drop(_1) -> bb4;                 // scope 0 at ui/impl-trait/explicit-generic-args-with-impl-trait/issue-87718.rs:3:54: 3:55
    }

    bb4 (cleanup): {
        resume;                          // scope 0 at ui/impl-trait/explicit-generic-args-with-impl-trait/issue-87718.rs:3:1: 3:55
    }
}

fn main() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/impl-trait/explicit-generic-args-with-impl-trait/issue-87718.rs:5:11: 5:11
    let _1: ();                          // in scope 0 at ui/impl-trait/explicit-generic-args-with-impl-trait/issue-87718.rs:6:5: 6:25

    bb0: {
        _1 = f::<[u8], &str, &[u8; 1]>(const "a", const b"a") -> bb1; // scope 0 at ui/impl-trait/explicit-generic-args-with-impl-trait/issue-87718.rs:6:5: 6:25
                                         // mir::Constant
                                         // + span: ui/impl-trait/explicit-generic-args-with-impl-trait/issue-87718.rs:6:5: 6:14
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: fn(&str, &[u8; 1]) {f::<[u8], &str, &[u8; 1]>}, val: Value(<ZST>) }
                                         // mir::Constant
                                         // + span: ui/impl-trait/explicit-generic-args-with-impl-trait/issue-87718.rs:6:15: 6:18
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
                                         // mir::Constant
                                         // + span: ui/impl-trait/explicit-generic-args-with-impl-trait/issue-87718.rs:6:20: 6:24
                                         // + literal: Const { ty: &[u8; 1], val: Value(Scalar(alloc1)) }
    }

    bb1: {
        return;                          // scope 0 at ui/impl-trait/explicit-generic-args-with-impl-trait/issue-87718.rs:7:2: 7:2
    }
}

alloc1 (size: 1, align: 1) {
    61                                              â”‚ a
}
