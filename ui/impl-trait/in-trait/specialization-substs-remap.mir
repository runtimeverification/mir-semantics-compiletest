// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
fn <impl at ui/impl-trait/in-trait/specialization-substs-remap.rs:13:1: 13:18>::bar(_1: &U) -> U {
    debug self => _1;
    let mut _0: U;

    bb0: {
        _0 = (*_1);
        return;
    }
}

fn main() -> () {
    let mut _0: ();
    let mut _1: i32;
    let mut _2: &i32;
    scope 1 {
    }

    bb0: {
        _2 = const _;
        _1 = <i32 as Foo>::bar(_2) -> [return: bb1, unwind continue];
    }

    bb1: {
        return;
    }
}

promoted[0] in main: &i32 = {
    let mut _0: &i32;
    let mut _1: i32;

    bb0: {
        _1 = const 1_i32;
        _0 = &_1;
        return;
    }
}
