// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
fn <impl at ui/impl-trait/in-trait/opaque-in-impl.rs:12:1: 12:16>::foo(_1: &()) -> impl Debug {
    debug self => _1;                    // in scope 0 at ui/impl-trait/in-trait/opaque-in-impl.rs:13:12: 13:17
    let mut _0: impl std::fmt::Debug;    // return place in scope 0 at ui/impl-trait/in-trait/opaque-in-impl.rs:13:22: 13:32

    bb0: {
        _0 = const "Hello, world";       // scope 0 at ui/impl-trait/in-trait/opaque-in-impl.rs:14:9: 14:23
                                         // mir::Constant
                                         // + span: ui/impl-trait/in-trait/opaque-in-impl.rs:14:9: 14:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        return;                          // scope 0 at ui/impl-trait/in-trait/opaque-in-impl.rs:15:6: 15:6
    }
}

fn <impl at ui/impl-trait/in-trait/opaque-in-impl.rs:18:1: 18:61>::foo(_1: &PhantomData<T>) -> impl Debug {
    debug self => _1;                    // in scope 0 at ui/impl-trait/in-trait/opaque-in-impl.rs:19:12: 19:17
    let mut _0: impl std::fmt::Debug;    // return place in scope 0 at ui/impl-trait/in-trait/opaque-in-impl.rs:19:22: 19:32

    bb0: {
        _0 = <T as Default>::default() -> bb1; // scope 0 at ui/impl-trait/in-trait/opaque-in-impl.rs:20:9: 20:21
                                         // mir::Constant
                                         // + span: ui/impl-trait/in-trait/opaque-in-impl.rs:20:9: 20:19
                                         // + literal: Const { ty: fn() -> T {<T as Default>::default}, val: Value(<ZST>) }
    }

    bb1: {
        return;                          // scope 0 at ui/impl-trait/in-trait/opaque-in-impl.rs:21:6: 21:6
    }
}

fn <impl at ui/impl-trait/in-trait/opaque-in-impl.rs:28:1: 28:16>::bar(_1: &()) -> String {
    debug self => _1;                    // in scope 0 at ui/impl-trait/in-trait/opaque-in-impl.rs:29:15: 29:20
    let mut _0: std::string::String;     // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:13: 118:16
    let mut _2: std::fmt::Arguments<'_>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
    let mut _3: &[&str];                 // in scope 0 at ui/impl-trait/in-trait/opaque-in-impl.rs:30:17: 30:40
    let mut _4: &[&str; 1];              // in scope 0 at ui/impl-trait/in-trait/opaque-in-impl.rs:30:17: 30:40
    let _5: &[&str; 1];                  // in scope 0 at ui/impl-trait/in-trait/opaque-in-impl.rs:30:17: 30:40
    let mut _6: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
    let mut _7: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
    let _8: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
    let _9: [core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
    let mut _10: core::fmt::ArgumentV1<'_>; // in scope 0 at ui/impl-trait/in-trait/opaque-in-impl.rs:30:42: 30:68
    let mut _11: &&str;                  // in scope 0 at ui/impl-trait/in-trait/opaque-in-impl.rs:30:42: 30:68
    let _12: &&str;                      // in scope 0 at ui/impl-trait/in-trait/opaque-in-impl.rs:30:42: 30:68
    let _13: &str;                       // in scope 0 at ui/impl-trait/in-trait/opaque-in-impl.rs:30:42: 30:68
    let mut _14: &[&str; 1];             // in scope 0 at ui/impl-trait/in-trait/opaque-in-impl.rs:30:17: 30:40
    scope 1 {
        debug res => _0;                 // in scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:13: 118:16
    }

    bb0: {
        _14 = const _;                   // scope 0 at ui/impl-trait/in-trait/opaque-in-impl.rs:30:17: 30:40
                                         // mir::Constant
                                         // + span: ui/impl-trait/in-trait/opaque-in-impl.rs:30:17: 30:40
                                         // + literal: Const { ty: &[&str; 1], val: Unevaluated(<() as Bar>::bar, [T], Some(promoted[0])) }
        _5 = _14;                        // scope 0 at ui/impl-trait/in-trait/opaque-in-impl.rs:30:17: 30:40
        _4 = _5;                         // scope 0 at ui/impl-trait/in-trait/opaque-in-impl.rs:30:17: 30:40
        _3 = move _4 as &[&str] (Pointer(Unsize)); // scope 0 at ui/impl-trait/in-trait/opaque-in-impl.rs:30:17: 30:40
        _13 = std::any::type_name::<T>() -> bb1; // scope 0 at ui/impl-trait/in-trait/opaque-in-impl.rs:30:42: 30:68
                                         // mir::Constant
                                         // + span: ui/impl-trait/in-trait/opaque-in-impl.rs:30:42: 30:66
                                         // + literal: Const { ty: fn() -> &'static str {std::any::type_name::<T>}, val: Value(<ZST>) }
    }

    bb1: {
        _12 = &_13;                      // scope 0 at ui/impl-trait/in-trait/opaque-in-impl.rs:30:42: 30:68
        _11 = _12;                       // scope 0 at ui/impl-trait/in-trait/opaque-in-impl.rs:30:42: 30:68
        _10 = core::fmt::ArgumentV1::<'_>::new_display::<&str>(move _11) -> bb2; // scope 0 at ui/impl-trait/in-trait/opaque-in-impl.rs:30:42: 30:68
                                         // mir::Constant
                                         // + span: ui/impl-trait/in-trait/opaque-in-impl.rs:30:42: 30:68
                                         // + user_ty: UserType(1)
                                         // + literal: Const { ty: for<'b> fn(&'b &str) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_display::<&str>}, val: Value(<ZST>) }
    }

    bb2: {
        _9 = [move _10];                 // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
        _8 = &_9;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
        _7 = _8;                         // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
        _6 = move _7 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
        _2 = Arguments::<'_>::new_v1(move _3, move _6) -> bb3; // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb3: {
        _0 = format(move _2) -> bb4;     // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:19: 118:80
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:19: 118:38
                                         // + literal: Const { ty: for<'a> fn(Arguments<'a>) -> String {format}, val: Value(<ZST>) }
    }

    bb4: {
        return;                          // scope 0 at ui/impl-trait/in-trait/opaque-in-impl.rs:31:6: 31:6
    }
}

promoted[0] in <impl at ui/impl-trait/in-trait/opaque-in-impl.rs:28:1: 28:16>::bar: &[&str; 1] = {
    let mut _0: &[&str; 1];              // return place in scope 0 at ui/impl-trait/in-trait/opaque-in-impl.rs:30:17: 30:40
    let mut _1: [&str; 1];               // in scope 0 at ui/impl-trait/in-trait/opaque-in-impl.rs:30:17: 30:40

    bb0: {
        _1 = [const "Hello with generic "]; // scope 0 at ui/impl-trait/in-trait/opaque-in-impl.rs:30:17: 30:40
                                         // mir::Constant
                                         // + span: ui/impl-trait/in-trait/opaque-in-impl.rs:30:17: 30:40
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at ui/impl-trait/in-trait/opaque-in-impl.rs:30:17: 30:40
        return;                          // scope 0 at ui/impl-trait/in-trait/opaque-in-impl.rs:30:17: 30:40
    }
}

fn <impl at ui/impl-trait/in-trait/opaque-in-impl.rs:38:1: 38:20>::baz(_1: &String) -> impl Debug + '_ {
    debug self => _1;                    // in scope 0 at ui/impl-trait/in-trait/opaque-in-impl.rs:39:12: 39:17
    let mut _0: impl std::fmt::Debug + '_; // return place in scope 0 at ui/impl-trait/in-trait/opaque-in-impl.rs:39:22: 39:37
    let mut _2: &std::string::String;    // in scope 0 at ui/impl-trait/in-trait/opaque-in-impl.rs:40:10: 40:14

    bb0: {
        _2 = _1;                         // scope 0 at ui/impl-trait/in-trait/opaque-in-impl.rs:40:10: 40:14
        _0 = (move _2,);                 // scope 0 at ui/impl-trait/in-trait/opaque-in-impl.rs:40:9: 40:16
        return;                          // scope 0 at ui/impl-trait/in-trait/opaque-in-impl.rs:41:6: 41:6
    }
}

fn main() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/impl-trait/in-trait/opaque-in-impl.rs:44:11: 44:11
    let _1: ();                          // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:62
    let mut _2: std::fmt::Arguments<'_>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _3: &[&str];                 // in scope 0 at ui/impl-trait/in-trait/opaque-in-impl.rs:45:14: 45:20
    let mut _4: &[&str; 2];              // in scope 0 at ui/impl-trait/in-trait/opaque-in-impl.rs:45:14: 45:20
    let _5: &[&str; 2];                  // in scope 0 at ui/impl-trait/in-trait/opaque-in-impl.rs:45:14: 45:20
    let mut _6: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _7: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let _8: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let _9: [core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _10: core::fmt::ArgumentV1<'_>; // in scope 0 at ui/impl-trait/in-trait/opaque-in-impl.rs:45:22: 45:30
    let mut _11: &impl std::fmt::Debug;  // in scope 0 at ui/impl-trait/in-trait/opaque-in-impl.rs:45:22: 45:30
    let _12: &impl std::fmt::Debug;      // in scope 0 at ui/impl-trait/in-trait/opaque-in-impl.rs:45:22: 45:30
    let _13: impl std::fmt::Debug;       // in scope 0 at ui/impl-trait/in-trait/opaque-in-impl.rs:45:22: 45:30
    let mut _14: &();                    // in scope 0 at ui/impl-trait/in-trait/opaque-in-impl.rs:45:22: 45:30
    let _15: ();                         // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:62
    let mut _16: std::fmt::Arguments<'_>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _17: &[&str];                // in scope 0 at ui/impl-trait/in-trait/opaque-in-impl.rs:46:14: 46:20
    let mut _18: &[&str; 2];             // in scope 0 at ui/impl-trait/in-trait/opaque-in-impl.rs:46:14: 46:20
    let _19: &[&str; 2];                 // in scope 0 at ui/impl-trait/in-trait/opaque-in-impl.rs:46:14: 46:20
    let mut _20: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _21: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let _22: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let _23: [core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _24: core::fmt::ArgumentV1<'_>; // in scope 0 at ui/impl-trait/in-trait/opaque-in-impl.rs:46:22: 46:37
    let mut _25: &impl std::fmt::Debug;  // in scope 0 at ui/impl-trait/in-trait/opaque-in-impl.rs:46:22: 46:37
    let _26: &impl std::fmt::Debug;      // in scope 0 at ui/impl-trait/in-trait/opaque-in-impl.rs:46:22: 46:37
    let _27: impl std::fmt::Debug;       // in scope 0 at ui/impl-trait/in-trait/opaque-in-impl.rs:46:22: 46:37
    let mut _28: &();                    // in scope 0 at ui/impl-trait/in-trait/opaque-in-impl.rs:46:22: 46:37
    let _29: ();                         // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:62
    let mut _30: std::fmt::Arguments<'_>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _31: &[&str];                // in scope 0 at ui/impl-trait/in-trait/opaque-in-impl.rs:47:14: 47:20
    let mut _32: &[&str; 2];             // in scope 0 at ui/impl-trait/in-trait/opaque-in-impl.rs:47:14: 47:20
    let _33: &[&str; 2];                 // in scope 0 at ui/impl-trait/in-trait/opaque-in-impl.rs:47:14: 47:20
    let mut _34: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _35: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let _36: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let _37: [core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _38: core::fmt::ArgumentV1<'_>; // in scope 0 at ui/impl-trait/in-trait/opaque-in-impl.rs:47:22: 47:44
    let mut _39: &impl std::fmt::Debug + '_; // in scope 0 at ui/impl-trait/in-trait/opaque-in-impl.rs:47:22: 47:44
    let _40: &impl std::fmt::Debug + '_; // in scope 0 at ui/impl-trait/in-trait/opaque-in-impl.rs:47:22: 47:44
    let _41: impl std::fmt::Debug + '_;  // in scope 0 at ui/impl-trait/in-trait/opaque-in-impl.rs:47:22: 47:44
    let mut _42: &std::string::String;   // in scope 0 at ui/impl-trait/in-trait/opaque-in-impl.rs:47:22: 47:44
    let _43: std::string::String;        // in scope 0 at ui/impl-trait/in-trait/opaque-in-impl.rs:47:22: 47:38
    let mut _44: &str;                   // in scope 0 at ui/impl-trait/in-trait/opaque-in-impl.rs:47:22: 47:38
    let _45: &str;                       // in scope 0 at ui/impl-trait/in-trait/opaque-in-impl.rs:47:22: 47:26
    let mut _46: &[&str; 2];             // in scope 0 at ui/impl-trait/in-trait/opaque-in-impl.rs:47:14: 47:20
    let mut _47: &();                    // in scope 0 at ui/impl-trait/in-trait/opaque-in-impl.rs:46:22: 46:37
    let mut _48: &[&str; 2];             // in scope 0 at ui/impl-trait/in-trait/opaque-in-impl.rs:46:14: 46:20
    let mut _49: &();                    // in scope 0 at ui/impl-trait/in-trait/opaque-in-impl.rs:45:22: 45:30
    let mut _50: &[&str; 2];             // in scope 0 at ui/impl-trait/in-trait/opaque-in-impl.rs:45:14: 45:20

    bb0: {
        _50 = const _;                   // scope 0 at ui/impl-trait/in-trait/opaque-in-impl.rs:45:14: 45:20
                                         // mir::Constant
                                         // + span: ui/impl-trait/in-trait/opaque-in-impl.rs:45:14: 45:20
                                         // + literal: Const { ty: &[&str; 2], val: Unevaluated(main, [], Some(promoted[4])) }
        _5 = _50;                        // scope 0 at ui/impl-trait/in-trait/opaque-in-impl.rs:45:14: 45:20
        _4 = _5;                         // scope 0 at ui/impl-trait/in-trait/opaque-in-impl.rs:45:14: 45:20
        _3 = move _4 as &[&str] (Pointer(Unsize)); // scope 0 at ui/impl-trait/in-trait/opaque-in-impl.rs:45:14: 45:20
        _49 = const _;                   // scope 0 at ui/impl-trait/in-trait/opaque-in-impl.rs:45:22: 45:30
                                         // mir::Constant
                                         // + span: ui/impl-trait/in-trait/opaque-in-impl.rs:45:22: 45:30
                                         // + literal: Const { ty: &(), val: Unevaluated(main, [], Some(promoted[3])) }
        _14 = _49;                       // scope 0 at ui/impl-trait/in-trait/opaque-in-impl.rs:45:22: 45:30
        _13 = <() as Foo>::foo(move _14) -> bb1; // scope 0 at ui/impl-trait/in-trait/opaque-in-impl.rs:45:22: 45:30
                                         // mir::Constant
                                         // + span: ui/impl-trait/in-trait/opaque-in-impl.rs:45:25: 45:28
                                         // + literal: Const { ty: for<'a> fn(&'a ()) -> impl Debug {<() as Foo>::foo}, val: Value(<ZST>) }
    }

    bb1: {
        _12 = &_13;                      // scope 0 at ui/impl-trait/in-trait/opaque-in-impl.rs:45:22: 45:30
        _11 = _12;                       // scope 0 at ui/impl-trait/in-trait/opaque-in-impl.rs:45:22: 45:30
        _10 = core::fmt::ArgumentV1::<'_>::new_debug::<impl Debug>(move _11) -> bb2; // scope 0 at ui/impl-trait/in-trait/opaque-in-impl.rs:45:22: 45:30
                                         // mir::Constant
                                         // + span: ui/impl-trait/in-trait/opaque-in-impl.rs:45:22: 45:30
                                         // + user_ty: UserType(1)
                                         // + literal: Const { ty: for<'b> fn(&'b impl Debug) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_debug::<impl Debug>}, val: Value(<ZST>) }
    }

    bb2: {
        _9 = [move _10];                 // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _8 = &_9;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _7 = _8;                         // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _6 = move _7 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _2 = Arguments::<'_>::new_v1(move _3, move _6) -> bb3; // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb3: {
        _1 = _print(move _2) -> bb4;     // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:62
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:27
                                         // + literal: Const { ty: for<'a> fn(Arguments<'a>) {_print}, val: Value(<ZST>) }
    }

    bb4: {
        _48 = const _;                   // scope 0 at ui/impl-trait/in-trait/opaque-in-impl.rs:46:14: 46:20
                                         // mir::Constant
                                         // + span: ui/impl-trait/in-trait/opaque-in-impl.rs:46:14: 46:20
                                         // + literal: Const { ty: &[&str; 2], val: Unevaluated(main, [], Some(promoted[2])) }
        _19 = _48;                       // scope 0 at ui/impl-trait/in-trait/opaque-in-impl.rs:46:14: 46:20
        _18 = _19;                       // scope 0 at ui/impl-trait/in-trait/opaque-in-impl.rs:46:14: 46:20
        _17 = move _18 as &[&str] (Pointer(Unsize)); // scope 0 at ui/impl-trait/in-trait/opaque-in-impl.rs:46:14: 46:20
        _47 = const _;                   // scope 0 at ui/impl-trait/in-trait/opaque-in-impl.rs:46:22: 46:37
                                         // mir::Constant
                                         // + span: ui/impl-trait/in-trait/opaque-in-impl.rs:46:22: 46:37
                                         // + literal: Const { ty: &(), val: Unevaluated(main, [], Some(promoted[1])) }
        _28 = _47;                       // scope 0 at ui/impl-trait/in-trait/opaque-in-impl.rs:46:22: 46:37
        _27 = <() as Bar>::bar::<u64>(move _28) -> bb5; // scope 0 at ui/impl-trait/in-trait/opaque-in-impl.rs:46:22: 46:37
                                         // mir::Constant
                                         // + span: ui/impl-trait/in-trait/opaque-in-impl.rs:46:25: 46:28
                                         // + user_ty: UserType(4)
                                         // + literal: Const { ty: for<'a> fn(&'a ()) -> impl Debug {<() as Bar>::bar::<u64>}, val: Value(<ZST>) }
    }

    bb5: {
        _26 = &_27;                      // scope 0 at ui/impl-trait/in-trait/opaque-in-impl.rs:46:22: 46:37
        _25 = _26;                       // scope 0 at ui/impl-trait/in-trait/opaque-in-impl.rs:46:22: 46:37
        _24 = core::fmt::ArgumentV1::<'_>::new_debug::<impl Debug>(move _25) -> [return: bb6, unwind: bb17]; // scope 0 at ui/impl-trait/in-trait/opaque-in-impl.rs:46:22: 46:37
                                         // mir::Constant
                                         // + span: ui/impl-trait/in-trait/opaque-in-impl.rs:46:22: 46:37
                                         // + user_ty: UserType(3)
                                         // + literal: Const { ty: for<'b> fn(&'b impl Debug) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_debug::<impl Debug>}, val: Value(<ZST>) }
    }

    bb6: {
        _23 = [move _24];                // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _22 = &_23;                      // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _21 = _22;                       // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _20 = move _21 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _16 = Arguments::<'_>::new_v1(move _17, move _20) -> [return: bb7, unwind: bb17]; // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // + user_ty: UserType(2)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb7: {
        _15 = _print(move _16) -> [return: bb8, unwind: bb17]; // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:62
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:27
                                         // + literal: Const { ty: for<'a> fn(Arguments<'a>) {_print}, val: Value(<ZST>) }
    }

    bb8: {
        drop(_27) -> bb9;                // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:62: 137:63
    }

    bb9: {
        _46 = const _;                   // scope 0 at ui/impl-trait/in-trait/opaque-in-impl.rs:47:14: 47:20
                                         // mir::Constant
                                         // + span: ui/impl-trait/in-trait/opaque-in-impl.rs:47:14: 47:20
                                         // + literal: Const { ty: &[&str; 2], val: Unevaluated(main, [], Some(promoted[0])) }
        _33 = _46;                       // scope 0 at ui/impl-trait/in-trait/opaque-in-impl.rs:47:14: 47:20
        _32 = _33;                       // scope 0 at ui/impl-trait/in-trait/opaque-in-impl.rs:47:14: 47:20
        _31 = move _32 as &[&str] (Pointer(Unsize)); // scope 0 at ui/impl-trait/in-trait/opaque-in-impl.rs:47:14: 47:20
        _45 = const "hi";                // scope 0 at ui/impl-trait/in-trait/opaque-in-impl.rs:47:22: 47:26
                                         // mir::Constant
                                         // + span: ui/impl-trait/in-trait/opaque-in-impl.rs:47:22: 47:26
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _44 = _45;                       // scope 0 at ui/impl-trait/in-trait/opaque-in-impl.rs:47:22: 47:38
        _43 = <str as ToString>::to_string(move _44) -> bb10; // scope 0 at ui/impl-trait/in-trait/opaque-in-impl.rs:47:22: 47:38
                                         // mir::Constant
                                         // + span: ui/impl-trait/in-trait/opaque-in-impl.rs:47:27: 47:36
                                         // + literal: Const { ty: for<'a> fn(&'a str) -> String {<str as ToString>::to_string}, val: Value(<ZST>) }
    }

    bb10: {
        _42 = &_43;                      // scope 0 at ui/impl-trait/in-trait/opaque-in-impl.rs:47:22: 47:44
        _41 = <String as Baz>::baz(move _42) -> [return: bb11, unwind: bb16]; // scope 0 at ui/impl-trait/in-trait/opaque-in-impl.rs:47:22: 47:44
                                         // mir::Constant
                                         // + span: ui/impl-trait/in-trait/opaque-in-impl.rs:47:39: 47:42
                                         // + literal: Const { ty: for<'a> fn(&'a String) -> impl Debug + 'a {<String as Baz>::baz}, val: Value(<ZST>) }
    }

    bb11: {
        _40 = &_41;                      // scope 0 at ui/impl-trait/in-trait/opaque-in-impl.rs:47:22: 47:44
        _39 = _40;                       // scope 0 at ui/impl-trait/in-trait/opaque-in-impl.rs:47:22: 47:44
        _38 = core::fmt::ArgumentV1::<'_>::new_debug::<impl Debug + '_>(move _39) -> [return: bb12, unwind: bb16]; // scope 0 at ui/impl-trait/in-trait/opaque-in-impl.rs:47:22: 47:44
                                         // mir::Constant
                                         // + span: ui/impl-trait/in-trait/opaque-in-impl.rs:47:22: 47:44
                                         // + user_ty: UserType(6)
                                         // + literal: Const { ty: for<'b> fn(&'b impl Debug + '_) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_debug::<impl Debug + '_>}, val: Value(<ZST>) }
    }

    bb12: {
        _37 = [move _38];                // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _36 = &_37;                      // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _35 = _36;                       // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _34 = move _35 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _30 = Arguments::<'_>::new_v1(move _31, move _34) -> [return: bb13, unwind: bb16]; // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // + user_ty: UserType(5)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb13: {
        _29 = _print(move _30) -> [return: bb14, unwind: bb16]; // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:62
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:27
                                         // + literal: Const { ty: for<'a> fn(Arguments<'a>) {_print}, val: Value(<ZST>) }
    }

    bb14: {
        drop(_43) -> bb15;               // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:62: 137:63
    }

    bb15: {
        return;                          // scope 0 at ui/impl-trait/in-trait/opaque-in-impl.rs:48:2: 48:2
    }

    bb16 (cleanup): {
        drop(_43) -> bb18;               // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:62: 137:63
    }

    bb17 (cleanup): {
        drop(_27) -> bb18;               // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:62: 137:63
    }

    bb18 (cleanup): {
        resume;                          // scope 0 at ui/impl-trait/in-trait/opaque-in-impl.rs:44:1: 48:2
    }
}

promoted[0] in main: &[&str; 2] = {
    let mut _0: &[&str; 2];              // return place in scope 0 at ui/impl-trait/in-trait/opaque-in-impl.rs:47:14: 47:20
    let mut _1: [&str; 2];               // in scope 0 at ui/impl-trait/in-trait/opaque-in-impl.rs:47:14: 47:20

    bb0: {
        _1 = [const "", const "\n"];     // scope 0 at ui/impl-trait/in-trait/opaque-in-impl.rs:47:14: 47:20
                                         // mir::Constant
                                         // + span: ui/impl-trait/in-trait/opaque-in-impl.rs:47:14: 47:20
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
                                         // mir::Constant
                                         // + span: ui/impl-trait/in-trait/opaque-in-impl.rs:47:14: 47:20
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at ui/impl-trait/in-trait/opaque-in-impl.rs:47:14: 47:20
        return;                          // scope 0 at ui/impl-trait/in-trait/opaque-in-impl.rs:47:14: 47:20
    }
}

promoted[1] in main: &() = {
    let mut _0: &();                     // return place in scope 0 at ui/impl-trait/in-trait/opaque-in-impl.rs:46:22: 46:37
    let mut _1: ();                      // in scope 0 at ui/impl-trait/in-trait/opaque-in-impl.rs:46:22: 46:24

    bb0: {
        _1 = ();                         // scope 0 at ui/impl-trait/in-trait/opaque-in-impl.rs:46:22: 46:24
        _0 = &_1;                        // scope 0 at ui/impl-trait/in-trait/opaque-in-impl.rs:46:22: 46:37
        return;                          // scope 0 at ui/impl-trait/in-trait/opaque-in-impl.rs:46:22: 46:37
    }
}

promoted[2] in main: &[&str; 2] = {
    let mut _0: &[&str; 2];              // return place in scope 0 at ui/impl-trait/in-trait/opaque-in-impl.rs:46:14: 46:20
    let mut _1: [&str; 2];               // in scope 0 at ui/impl-trait/in-trait/opaque-in-impl.rs:46:14: 46:20

    bb0: {
        _1 = [const "", const "\n"];     // scope 0 at ui/impl-trait/in-trait/opaque-in-impl.rs:46:14: 46:20
                                         // mir::Constant
                                         // + span: ui/impl-trait/in-trait/opaque-in-impl.rs:46:14: 46:20
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
                                         // mir::Constant
                                         // + span: ui/impl-trait/in-trait/opaque-in-impl.rs:46:14: 46:20
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at ui/impl-trait/in-trait/opaque-in-impl.rs:46:14: 46:20
        return;                          // scope 0 at ui/impl-trait/in-trait/opaque-in-impl.rs:46:14: 46:20
    }
}

promoted[3] in main: &() = {
    let mut _0: &();                     // return place in scope 0 at ui/impl-trait/in-trait/opaque-in-impl.rs:45:22: 45:30
    let mut _1: ();                      // in scope 0 at ui/impl-trait/in-trait/opaque-in-impl.rs:45:22: 45:24

    bb0: {
        _1 = ();                         // scope 0 at ui/impl-trait/in-trait/opaque-in-impl.rs:45:22: 45:24
        _0 = &_1;                        // scope 0 at ui/impl-trait/in-trait/opaque-in-impl.rs:45:22: 45:30
        return;                          // scope 0 at ui/impl-trait/in-trait/opaque-in-impl.rs:45:22: 45:30
    }
}

promoted[4] in main: &[&str; 2] = {
    let mut _0: &[&str; 2];              // return place in scope 0 at ui/impl-trait/in-trait/opaque-in-impl.rs:45:14: 45:20
    let mut _1: [&str; 2];               // in scope 0 at ui/impl-trait/in-trait/opaque-in-impl.rs:45:14: 45:20

    bb0: {
        _1 = [const "", const "\n"];     // scope 0 at ui/impl-trait/in-trait/opaque-in-impl.rs:45:14: 45:20
                                         // mir::Constant
                                         // + span: ui/impl-trait/in-trait/opaque-in-impl.rs:45:14: 45:20
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
                                         // mir::Constant
                                         // + span: ui/impl-trait/in-trait/opaque-in-impl.rs:45:14: 45:20
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at ui/impl-trait/in-trait/opaque-in-impl.rs:45:14: 45:20
        return;                          // scope 0 at ui/impl-trait/in-trait/opaque-in-impl.rs:45:14: 45:20
    }
}
