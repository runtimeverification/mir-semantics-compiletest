// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
fn foo(_1: &str, _2: &str) -> impl Foo<Item = (dyn Bar + 'static)> {
    debug x => _1;                       // in scope 0 at ui/impl-trait/dyn-trait-elided-two-inputs-assoc.rs:14:8: 14:9
    debug y => _2;                       // in scope 0 at ui/impl-trait/dyn-trait-elided-two-inputs-assoc.rs:14:17: 14:18
    let mut _0: impl Foo<Item = (dyn Bar + 'static)>; // return place in scope 0 at ui/impl-trait/dyn-trait-elided-two-inputs-assoc.rs:14:29: 14:53

    bb0: {
        return;                          // scope 0 at ui/impl-trait/dyn-trait-elided-two-inputs-assoc.rs:14:60: 14:60
    }
}

fn main() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/impl-trait/dyn-trait-elided-two-inputs-assoc.rs:16:11: 16:11

    bb0: {
        return;                          // scope 0 at ui/impl-trait/dyn-trait-elided-two-inputs-assoc.rs:16:14: 16:14
    }
}
