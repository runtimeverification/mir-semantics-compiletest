// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
fn <impl at ui/impl-trait/associated-impl-trait-type-generic-trait.rs:13:1: 13:23>::foo(_1: W) -> <i32 as Foo<W>>::Assoc {
    debug w => _1;                       // in scope 0 at ui/impl-trait/associated-impl-trait-type-generic-trait.rs:15:12: 15:13
    let mut _0: <i32 as Foo<W>>::Assoc;  // return place in scope 0 at ui/impl-trait/associated-impl-trait-type-generic-trait.rs:15:21: 15:32
    let mut _2: W;                       // in scope 0 at ui/impl-trait/associated-impl-trait-type-generic-trait.rs:16:15: 16:16

    bb0: {
        _2 = move _1;                    // scope 0 at ui/impl-trait/associated-impl-trait-type-generic-trait.rs:16:15: 16:16
        _0 = Dummy::<W>(move _2);        // scope 0 at ui/impl-trait/associated-impl-trait-type-generic-trait.rs:16:9: 16:17
        return;                          // scope 0 at ui/impl-trait/associated-impl-trait-type-generic-trait.rs:17:6: 17:6
    }
}

fn <impl at ui/impl-trait/associated-impl-trait-type-generic-trait.rs:23:1: 23:23>::foo(_1: W) -> <u32 as Foo<W>>::Assoc {
    let mut _0: <u32 as Foo<W>>::Assoc;  // return place in scope 0 at ui/impl-trait/associated-impl-trait-type-generic-trait.rs:25:21: 25:32

    bb0: {
        drop(_1) -> bb1;                 // scope 0 at ui/impl-trait/associated-impl-trait-type-generic-trait.rs:27:5: 27:6
    }

    bb1: {
        return;                          // scope 0 at ui/impl-trait/associated-impl-trait-type-generic-trait.rs:27:6: 27:6
    }
}

fn main() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/impl-trait/associated-impl-trait-type-generic-trait.rs:30:11: 30:11

    bb0: {
        return;                          // scope 0 at ui/impl-trait/associated-impl-trait-type-generic-trait.rs:30:13: 30:13
    }
}

fn Dummy(_1: U) -> Dummy<U> {
    let mut _0: Dummy<U>;                // return place in scope 0 at ui/impl-trait/associated-impl-trait-type-generic-trait.rs:5:1: 5:16

    bb0: {
        _0 = Dummy::<U>(move _1);        // scope 0 at ui/impl-trait/associated-impl-trait-type-generic-trait.rs:5:1: 5:16
        return;                          // scope 0 at ui/impl-trait/associated-impl-trait-type-generic-trait.rs:5:1: 5:16
    }
}

// MIR FOR CTFE
fn Dummy(_1: U) -> Dummy<U> {
    let mut _0: Dummy<U>;                // return place in scope 0 at ui/impl-trait/associated-impl-trait-type-generic-trait.rs:5:1: 5:16

    bb0: {
        _0 = Dummy::<U>(move _1);        // scope 0 at ui/impl-trait/associated-impl-trait-type-generic-trait.rs:5:1: 5:16
        return;                          // scope 0 at ui/impl-trait/associated-impl-trait-type-generic-trait.rs:5:1: 5:16
    }
}
