// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
fn <impl at ui/impl-trait/type-alias-generic-param.rs:13:1: 13:22>::meow(_1: I) -> <I as Meow>::MeowType {
    debug self => _1;                    // in scope 0 at ui/impl-trait/type-alias-generic-param.rs:18:13: 18:17
    let mut _0: <I as Meow>::MeowType;   // return place in scope 0 at ui/impl-trait/type-alias-generic-param.rs:18:22: 18:36

    bb0: {
        _0 = move _1;                    // scope 0 at ui/impl-trait/type-alias-generic-param.rs:19:9: 19:13
        return;                          // scope 0 at ui/impl-trait/type-alias-generic-param.rs:20:6: 20:6
    }
}

fn main() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/impl-trait/type-alias-generic-param.rs:23:11: 23:11

    bb0: {
        return;                          // scope 0 at ui/impl-trait/type-alias-generic-param.rs:23:13: 23:13
    }
}
