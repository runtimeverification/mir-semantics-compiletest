// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
fn upper_bounds1(_1: &u8) -> impl Trait<'_, 'static> {
    debug a => _1;                       // in scope 0 at ui/impl-trait/multiple-lifetimes/ordinary-bounds-pick-original-elided.rs:11:18: 11:19
    let mut _0: impl Trait<'_, 'static>; // return place in scope 0 at ui/impl-trait/multiple-lifetimes/ordinary-bounds-pick-original-elided.rs:11:29: 11:52
    let mut _2: &u8;                     // in scope 0 at ui/impl-trait/multiple-lifetimes/ordinary-bounds-pick-original-elided.rs:12:6: 12:7
    let mut _3: &u8;                     // in scope 0 at ui/impl-trait/multiple-lifetimes/ordinary-bounds-pick-original-elided.rs:12:9: 12:10

    bb0: {
        _2 = _1;                         // scope 0 at ui/impl-trait/multiple-lifetimes/ordinary-bounds-pick-original-elided.rs:12:6: 12:7
        _3 = _1;                         // scope 0 at ui/impl-trait/multiple-lifetimes/ordinary-bounds-pick-original-elided.rs:12:9: 12:10
        _0 = (move _2, move _3);         // scope 0 at ui/impl-trait/multiple-lifetimes/ordinary-bounds-pick-original-elided.rs:12:5: 12:11
        return;                          // scope 0 at ui/impl-trait/multiple-lifetimes/ordinary-bounds-pick-original-elided.rs:13:2: 13:2
    }
}

fn upper_bounds2(_1: &u8) -> impl Trait<'_, '_> {
    debug a => _1;                       // in scope 0 at ui/impl-trait/multiple-lifetimes/ordinary-bounds-pick-original-elided.rs:16:18: 16:19
    let mut _0: impl Trait<'_, '_>;      // return place in scope 0 at ui/impl-trait/multiple-lifetimes/ordinary-bounds-pick-original-elided.rs:16:29: 16:47
    let mut _2: &u8;                     // in scope 0 at ui/impl-trait/multiple-lifetimes/ordinary-bounds-pick-original-elided.rs:17:6: 17:7
    let mut _3: &u8;                     // in scope 0 at ui/impl-trait/multiple-lifetimes/ordinary-bounds-pick-original-elided.rs:17:9: 17:10

    bb0: {
        _2 = _1;                         // scope 0 at ui/impl-trait/multiple-lifetimes/ordinary-bounds-pick-original-elided.rs:17:6: 17:7
        _3 = _1;                         // scope 0 at ui/impl-trait/multiple-lifetimes/ordinary-bounds-pick-original-elided.rs:17:9: 17:10
        _0 = (move _2, move _3);         // scope 0 at ui/impl-trait/multiple-lifetimes/ordinary-bounds-pick-original-elided.rs:17:5: 17:11
        return;                          // scope 0 at ui/impl-trait/multiple-lifetimes/ordinary-bounds-pick-original-elided.rs:18:2: 18:2
    }
}

fn upper_bounds3(_1: &u8) -> impl Trait<'_, '_> {
    debug a => _1;                       // in scope 0 at ui/impl-trait/multiple-lifetimes/ordinary-bounds-pick-original-elided.rs:21:22: 21:23
    let mut _0: impl Trait<'_, '_>;      // return place in scope 0 at ui/impl-trait/multiple-lifetimes/ordinary-bounds-pick-original-elided.rs:21:33: 21:51
    let mut _2: &u8;                     // in scope 0 at ui/impl-trait/multiple-lifetimes/ordinary-bounds-pick-original-elided.rs:22:6: 22:7
    let mut _3: &u8;                     // in scope 0 at ui/impl-trait/multiple-lifetimes/ordinary-bounds-pick-original-elided.rs:22:9: 22:10

    bb0: {
        _2 = _1;                         // scope 0 at ui/impl-trait/multiple-lifetimes/ordinary-bounds-pick-original-elided.rs:22:6: 22:7
        _3 = _1;                         // scope 0 at ui/impl-trait/multiple-lifetimes/ordinary-bounds-pick-original-elided.rs:22:9: 22:10
        _0 = (move _2, move _3);         // scope 0 at ui/impl-trait/multiple-lifetimes/ordinary-bounds-pick-original-elided.rs:22:5: 22:11
        return;                          // scope 0 at ui/impl-trait/multiple-lifetimes/ordinary-bounds-pick-original-elided.rs:23:2: 23:2
    }
}

fn main() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/impl-trait/multiple-lifetimes/ordinary-bounds-pick-original-elided.rs:25:11: 25:11

    bb0: {
        return;                          // scope 0 at ui/impl-trait/multiple-lifetimes/ordinary-bounds-pick-original-elided.rs:25:13: 25:13
    }
}
