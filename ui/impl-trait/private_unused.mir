// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
fn boo() -> impl Bar<Empty> {
    let mut _0: impl Bar<Empty>;         // return place in scope 0 at ui/impl-trait/private_unused.rs:9:13: 9:28

    bb0: {
        return;                          // scope 0 at ui/impl-trait/private_unused.rs:9:31: 9:31
    }
}

fn main() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/impl-trait/private_unused.rs:11:11: 11:11
    let _1: impl Bar<Empty>;             // in scope 0 at ui/impl-trait/private_unused.rs:12:5: 12:10

    bb0: {
        _1 = boo() -> bb1;               // scope 0 at ui/impl-trait/private_unused.rs:12:5: 12:10
                                         // mir::Constant
                                         // + span: ui/impl-trait/private_unused.rs:12:5: 12:8
                                         // + literal: Const { ty: fn() -> impl Bar<Empty> {boo}, val: Value(<ZST>) }
    }

    bb1: {
        return;                          // scope 0 at ui/impl-trait/private_unused.rs:13:2: 13:2
    }
}
