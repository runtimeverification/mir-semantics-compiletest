// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
const <impl at ui/impl-trait/issue-68532.rs:5:1: 5:15>::N: usize = {
    let mut _0: usize;                   // return place in scope 0 at ui/impl-trait/issue-68532.rs:6:14: 6:19

    bb0: {
        _0 = const 68_usize;             // scope 0 at ui/impl-trait/issue-68532.rs:6:22: 6:24
        return;                          // scope 0 at ui/impl-trait/issue-68532.rs:6:5: 6:25
    }
}

fn <impl at ui/impl-trait/issue-68532.rs:5:1: 5:15>::foo(_1: &A<'_>) -> () {
    debug self => _1;                    // in scope 0 at ui/impl-trait/issue-68532.rs:8:16: 8:21
    let mut _0: ();                      // return place in scope 0 at ui/impl-trait/issue-68532.rs:8:23: 8:23
    let _2: [i32; 68];                   // in scope 0 at ui/impl-trait/issue-68532.rs:9:13: 9:15
    scope 1 {
        debug _b => _2;                  // in scope 1 at ui/impl-trait/issue-68532.rs:9:13: 9:15
    }

    bb0: {
        _2 = [const 0_i32; 68];          // scope 0 at ui/impl-trait/issue-68532.rs:9:18: 9:30
        return;                          // scope 0 at ui/impl-trait/issue-68532.rs:10:6: 10:6
    }
}

<impl at ui/impl-trait/issue-68532.rs:5:1: 5:15>::foo::{constant#0}: usize = {
    let mut _0: usize;                   // return place in scope 0 at ui/impl-trait/issue-68532.rs:9:22: 9:29

    bb0: {
        _0 = const _;                    // scope 0 at ui/impl-trait/issue-68532.rs:9:22: 9:29
        return;                          // scope 0 at ui/impl-trait/issue-68532.rs:9:22: 9:29
    }
}

fn main() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/impl-trait/issue-68532.rs:13:11: 13:11

    bb0: {
        return;                          // scope 0 at ui/impl-trait/issue-68532.rs:13:13: 13:13
    }
}

fn A(_1: &()) -> A<'_> {
    let mut _0: A<'_>;                   // return place in scope 0 at ui/impl-trait/issue-68532.rs:3:1: 3:17

    bb0: {
        _0 = A::<'_>(move _1);           // scope 0 at ui/impl-trait/issue-68532.rs:3:1: 3:17
        return;                          // scope 0 at ui/impl-trait/issue-68532.rs:3:1: 3:17
    }
}

// MIR FOR CTFE
fn A(_1: &()) -> A<'_> {
    let mut _0: A<'_>;                   // return place in scope 0 at ui/impl-trait/issue-68532.rs:3:1: 3:17

    bb0: {
        _0 = A::<'_>(move _1);           // scope 0 at ui/impl-trait/issue-68532.rs:3:1: 3:17
        return;                          // scope 0 at ui/impl-trait/issue-68532.rs:3:1: 3:17
    }
}
