// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
fn Alpha::item(_1: &Self) -> Box<Item> {
    debug self => _1;                    // in scope 0 at ui/impl-trait/dyn-trait-elided-two-inputs-ref-param.rs:7:13: 7:18
    let mut _0: std::boxed::Box<Item>;   // return place in scope 0 at ui/impl-trait/dyn-trait-elided-two-inputs-ref-param.rs:7:23: 7:32
    let mut _2: !;                       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/panic.rs:19:9: 19:50

    bb0: {
        _2 = begin_panic::<&str>(const "explicit panic"); // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/panic.rs:19:9: 19:50
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/panic.rs:19:9: 19:32
                                         // + literal: Const { ty: fn(&str) -> ! {begin_panic::<&str>}, val: Value(<ZST>) }
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/panic.rs:19:33: 19:49
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
    }
}

fn alpha(_1: &str, _2: &str) -> impl Alpha<(dyn Object + 'static)> {
    debug x => _1;                       // in scope 0 at ui/impl-trait/dyn-trait-elided-two-inputs-ref-param.rs:14:10: 14:11
    debug y => _2;                       // in scope 0 at ui/impl-trait/dyn-trait-elided-two-inputs-ref-param.rs:14:19: 14:20
    let mut _0: impl Alpha<(dyn Object + 'static)>; // return place in scope 0 at ui/impl-trait/dyn-trait-elided-two-inputs-ref-param.rs:14:31: 14:53

    bb0: {
        return;                          // scope 0 at ui/impl-trait/dyn-trait-elided-two-inputs-ref-param.rs:14:60: 14:60
    }
}

fn is_static(_1: T) -> () {
    let mut _0: ();                      // return place in scope 0 at ui/impl-trait/dyn-trait-elided-two-inputs-ref-param.rs:15:23: 15:23

    bb0: {
        drop(_1) -> bb1;                 // scope 0 at ui/impl-trait/dyn-trait-elided-two-inputs-ref-param.rs:15:42: 15:43
    }

    bb1: {
        return;                          // scope 0 at ui/impl-trait/dyn-trait-elided-two-inputs-ref-param.rs:15:43: 15:43
    }
}

fn bar(_1: &str) -> &() {
    debug x => _1;                       // in scope 0 at ui/impl-trait/dyn-trait-elided-two-inputs-ref-param.rs:17:8: 17:9
    let mut _0: &();                     // return place in scope 0 at ui/impl-trait/dyn-trait-elided-two-inputs-ref-param.rs:17:46: 17:49
    let mut _2: &();                     // in scope 0 at ui/impl-trait/dyn-trait-elided-two-inputs-ref-param.rs:17:46: 17:49

    bb0: {
        _2 = const _;                    // scope 0 at ui/impl-trait/dyn-trait-elided-two-inputs-ref-param.rs:17:46: 17:49
                                         // mir::Constant
                                         // + span: ui/impl-trait/dyn-trait-elided-two-inputs-ref-param.rs:17:46: 17:49
                                         // + literal: Const { ty: &(), val: Unevaluated(bar, [], Some(promoted[0])) }
        _0 = _2;                         // scope 0 at ui/impl-trait/dyn-trait-elided-two-inputs-ref-param.rs:17:46: 17:49
        return;                          // scope 0 at ui/impl-trait/dyn-trait-elided-two-inputs-ref-param.rs:17:51: 17:51
    }
}

promoted[0] in bar: &() = {
    let mut _0: &();                     // return place in scope 0 at ui/impl-trait/dyn-trait-elided-two-inputs-ref-param.rs:17:46: 17:49
    let mut _1: ();                      // in scope 0 at ui/impl-trait/dyn-trait-elided-two-inputs-ref-param.rs:17:47: 17:49

    bb0: {
        _1 = ();                         // scope 0 at ui/impl-trait/dyn-trait-elided-two-inputs-ref-param.rs:17:47: 17:49
        _0 = &_1;                        // scope 0 at ui/impl-trait/dyn-trait-elided-two-inputs-ref-param.rs:17:46: 17:49
        return;                          // scope 0 at ui/impl-trait/dyn-trait-elided-two-inputs-ref-param.rs:17:46: 17:49
    }
}

fn main() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/impl-trait/dyn-trait-elided-two-inputs-ref-param.rs:19:11: 19:11
    let _1: std::string::String;         // in scope 0 at ui/impl-trait/dyn-trait-elided-two-inputs-ref-param.rs:20:9: 20:10
    let _2: std::string::String;         // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:13: 118:16
    let mut _3: std::fmt::Arguments<'_>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
    let mut _4: &[&str];                 // in scope 0 at ui/impl-trait/dyn-trait-elided-two-inputs-ref-param.rs:20:21: 20:26
    let mut _5: &[&str; 1];              // in scope 0 at ui/impl-trait/dyn-trait-elided-two-inputs-ref-param.rs:20:21: 20:26
    let _6: &[&str; 1];                  // in scope 0 at ui/impl-trait/dyn-trait-elided-two-inputs-ref-param.rs:20:21: 20:26
    let mut _7: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
    let mut _8: &[core::fmt::ArgumentV1<'_>; 0]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
    let _9: &[core::fmt::ArgumentV1<'_>; 0]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
    let mut _11: &str;                   // in scope 0 at ui/impl-trait/dyn-trait-elided-two-inputs-ref-param.rs:21:17: 21:19
    let _12: &str;                       // in scope 0 at ui/impl-trait/dyn-trait-elided-two-inputs-ref-param.rs:21:17: 21:19
    let mut _13: &std::string::String;   // in scope 0 at ui/impl-trait/dyn-trait-elided-two-inputs-ref-param.rs:21:17: 21:19
    let _14: &std::string::String;       // in scope 0 at ui/impl-trait/dyn-trait-elided-two-inputs-ref-param.rs:21:17: 21:19
    let _15: ();                         // in scope 0 at ui/impl-trait/dyn-trait-elided-two-inputs-ref-param.rs:22:5: 22:24
    let mut _16: std::boxed::Box<dyn Object>; // in scope 0 at ui/impl-trait/dyn-trait-elided-two-inputs-ref-param.rs:22:15: 22:23
    let mut _17: &impl Alpha<(dyn Object + 'static)>; // in scope 0 at ui/impl-trait/dyn-trait-elided-two-inputs-ref-param.rs:22:15: 22:23
    let mut _18: &[core::fmt::ArgumentV1<'_>; 0]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
    let mut _19: &[&str; 1];             // in scope 0 at ui/impl-trait/dyn-trait-elided-two-inputs-ref-param.rs:20:21: 20:26
    scope 1 {
        debug s => _1;                   // in scope 1 at ui/impl-trait/dyn-trait-elided-two-inputs-ref-param.rs:20:9: 20:10
        let _10: &impl Alpha<(dyn Object + 'static)>; // in scope 1 at ui/impl-trait/dyn-trait-elided-two-inputs-ref-param.rs:21:9: 21:10
        scope 3 {
            debug r => _10;              // in scope 3 at ui/impl-trait/dyn-trait-elided-two-inputs-ref-param.rs:21:9: 21:10
        }
    }
    scope 2 {
        debug res => _2;                 // in scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:13: 118:16
    }

    bb0: {
        _19 = const _;                   // scope 0 at ui/impl-trait/dyn-trait-elided-two-inputs-ref-param.rs:20:21: 20:26
                                         // mir::Constant
                                         // + span: ui/impl-trait/dyn-trait-elided-two-inputs-ref-param.rs:20:21: 20:26
                                         // + literal: Const { ty: &[&str; 1], val: Unevaluated(main, [], Some(promoted[1])) }
        _6 = _19;                        // scope 0 at ui/impl-trait/dyn-trait-elided-two-inputs-ref-param.rs:20:21: 20:26
        _5 = _6;                         // scope 0 at ui/impl-trait/dyn-trait-elided-two-inputs-ref-param.rs:20:21: 20:26
        _4 = move _5 as &[&str] (Pointer(Unsize)); // scope 0 at ui/impl-trait/dyn-trait-elided-two-inputs-ref-param.rs:20:21: 20:26
        _18 = const _;                   // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
                                         // + literal: Const { ty: &[core::fmt::ArgumentV1<'_>; 0], val: Unevaluated(main, [], Some(promoted[0])) }
        _9 = _18;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
        _8 = _9;                         // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
        _7 = move _8 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
        _3 = Arguments::<'_>::new_v1(move _4, move _7) -> bb1; // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb1: {
        _2 = format(move _3) -> bb2;     // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:19: 118:80
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:19: 118:38
                                         // + literal: Const { ty: for<'a> fn(Arguments<'a>) -> String {format}, val: Value(<ZST>) }
    }

    bb2: {
        _1 = move _2;                    // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:119:9: 119:12
        _14 = &_1;                       // scope 1 at ui/impl-trait/dyn-trait-elided-two-inputs-ref-param.rs:21:17: 21:19
        _13 = _14;                       // scope 1 at ui/impl-trait/dyn-trait-elided-two-inputs-ref-param.rs:21:17: 21:19
        _12 = <String as Deref>::deref(move _13) -> [return: bb3, unwind: bb8]; // scope 1 at ui/impl-trait/dyn-trait-elided-two-inputs-ref-param.rs:21:17: 21:19
                                         // mir::Constant
                                         // + span: ui/impl-trait/dyn-trait-elided-two-inputs-ref-param.rs:21:17: 21:19
                                         // + literal: Const { ty: for<'a> fn(&'a String) -> &'a <String as Deref>::Target {<String as Deref>::deref}, val: Value(<ZST>) }
    }

    bb3: {
        _11 = _12;                       // scope 1 at ui/impl-trait/dyn-trait-elided-two-inputs-ref-param.rs:21:17: 21:19
        _10 = bar(move _11) -> [return: bb4, unwind: bb8]; // scope 1 at ui/impl-trait/dyn-trait-elided-two-inputs-ref-param.rs:21:13: 21:20
                                         // mir::Constant
                                         // + span: ui/impl-trait/dyn-trait-elided-two-inputs-ref-param.rs:21:13: 21:16
                                         // + literal: Const { ty: for<'a> fn(&'a str) -> &'a impl Alpha<(dyn Object + 'static)> {bar}, val: Value(<ZST>) }
    }

    bb4: {
        _17 = _10;                       // scope 3 at ui/impl-trait/dyn-trait-elided-two-inputs-ref-param.rs:22:15: 22:23
        _16 = <impl Alpha<(dyn Object + 'static)> as Alpha<dyn Object>>::item(move _17) -> [return: bb5, unwind: bb8]; // scope 3 at ui/impl-trait/dyn-trait-elided-two-inputs-ref-param.rs:22:15: 22:23
                                         // mir::Constant
                                         // + span: ui/impl-trait/dyn-trait-elided-two-inputs-ref-param.rs:22:17: 22:21
                                         // + literal: Const { ty: for<'a> fn(&'a impl Alpha<(dyn Object + 'static)>) -> Box<dyn Object> {<impl Alpha<(dyn Object + 'static)> as Alpha<dyn Object>>::item}, val: Value(<ZST>) }
    }

    bb5: {
        _15 = is_static::<Box<dyn Object>>(move _16) -> [return: bb6, unwind: bb8]; // scope 3 at ui/impl-trait/dyn-trait-elided-two-inputs-ref-param.rs:22:5: 22:24
                                         // mir::Constant
                                         // + span: ui/impl-trait/dyn-trait-elided-two-inputs-ref-param.rs:22:5: 22:14
                                         // + literal: Const { ty: fn(Box<dyn Object>) {is_static::<Box<dyn Object>>}, val: Value(<ZST>) }
    }

    bb6: {
        drop(_1) -> bb7;                 // scope 0 at ui/impl-trait/dyn-trait-elided-two-inputs-ref-param.rs:23:1: 23:2
    }

    bb7: {
        return;                          // scope 0 at ui/impl-trait/dyn-trait-elided-two-inputs-ref-param.rs:23:2: 23:2
    }

    bb8 (cleanup): {
        drop(_1) -> bb9;                 // scope 0 at ui/impl-trait/dyn-trait-elided-two-inputs-ref-param.rs:23:1: 23:2
    }

    bb9 (cleanup): {
        resume;                          // scope 0 at ui/impl-trait/dyn-trait-elided-two-inputs-ref-param.rs:19:1: 23:2
    }
}

promoted[0] in main: &[core::fmt::ArgumentV1<'_>; 0] = {
    let mut _0: &[core::fmt::ArgumentV1<'_>; 0]; // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
    let mut _1: [core::fmt::ArgumentV1<'_>; 0]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79

    bb0: {
        _1 = [];                         // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
    }
}

promoted[1] in main: &[&str; 1] = {
    let mut _0: &[&str; 1];              // return place in scope 0 at ui/impl-trait/dyn-trait-elided-two-inputs-ref-param.rs:20:21: 20:26
    let mut _1: [&str; 1];               // in scope 0 at ui/impl-trait/dyn-trait-elided-two-inputs-ref-param.rs:20:21: 20:26

    bb0: {
        _1 = [const "foo"];              // scope 0 at ui/impl-trait/dyn-trait-elided-two-inputs-ref-param.rs:20:21: 20:26
                                         // mir::Constant
                                         // + span: ui/impl-trait/dyn-trait-elided-two-inputs-ref-param.rs:20:21: 20:26
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at ui/impl-trait/dyn-trait-elided-two-inputs-ref-param.rs:20:21: 20:26
        return;                          // scope 0 at ui/impl-trait/dyn-trait-elided-two-inputs-ref-param.rs:20:21: 20:26
    }
}
