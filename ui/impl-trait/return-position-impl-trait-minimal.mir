// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
fn main() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/impl-trait/return-position-impl-trait-minimal.rs:3:11: 3:11

    bb0: {
        return;                          // scope 0 at ui/impl-trait/return-position-impl-trait-minimal.rs:3:13: 3:13
    }
}

fn foo() -> impl Debug {
    let mut _0: impl std::fmt::Debug;    // return place in scope 0 at ui/impl-trait/return-position-impl-trait-minimal.rs:5:13: 5:33

    bb0: {
        _0 = const "cake";               // scope 0 at ui/impl-trait/return-position-impl-trait-minimal.rs:5:36: 5:42
                                         // mir::Constant
                                         // + span: ui/impl-trait/return-position-impl-trait-minimal.rs:5:36: 5:42
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        return;                          // scope 0 at ui/impl-trait/return-position-impl-trait-minimal.rs:5:44: 5:44
    }
}
