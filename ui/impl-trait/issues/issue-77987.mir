// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
fn infer_scope() -> Scope {
    let mut _0: Scope;                   // return place in scope 0 at ui/impl-trait/issues/issue-77987.rs:11:21: 11:26

    bb0: {
        return;                          // scope 0 at ui/impl-trait/issues/issue-77987.rs:13:2: 13:2
    }
}

fn ice() -> impl Foo<Scope> {
    let mut _0: impl Foo<Scope>;         // return place in scope 0 at ui/impl-trait/issues/issue-77987.rs:16:13: 16:28

    bb0: {
        goto -> bb1;                     // scope 0 at ui/impl-trait/issues/issue-77987.rs:18:5: 18:12
    }

    bb1: {
        goto -> bb1;                     // scope 0 at ui/impl-trait/issues/issue-77987.rs:18:5: 18:12
    }
}

fn main() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/impl-trait/issues/issue-77987.rs:21:11: 21:11

    bb0: {
        return;                          // scope 0 at ui/impl-trait/issues/issue-77987.rs:21:13: 21:13
    }
}
