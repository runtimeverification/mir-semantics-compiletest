// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
fn main() -> () {
    let mut _0: ();
    let mut _1: &mut isize;
    let mut _2: isize;
    let _5: &mut isize;
    let mut _6: isize;
    let mut _9: &mut isize;
    let mut _10: isize;
    let _13: &mut isize;
    let mut _14: isize;
    let mut _16: &mut isize;
    let mut _17: isize;
    scope 1 {
        debug x => _1;
        let _3: &isize;
        scope 2 {
            debug x => _3;
            let _4: &isize;
            scope 3 {
                debug x => _4;
                let mut _20: &isize;
                scope 4 {
                    debug x => const _;
                    let _7: *const isize;
                    scope 5 {
                        debug x => _7;
                        let _8: *const isize;
                        let mut _19: &isize;
                        scope 6 {
                            debug x => _8;
                            scope 7 {
                                debug x => _9;
                                let _11: *const isize;
                                scope 8 {
                                    debug x => _11;
                                    let _12: *const isize;
                                    scope 9 {
                                        debug x => _12;
                                        let _15: *mut isize;
                                        scope 10 {
                                            debug x => _15;
                                            let _18: *const isize;
                                            scope 11 {
                                                debug x => _18;
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    }

    bb0: {
        _2 = const 42_isize;
        _1 = &mut _2;
        _3 = &(*_1);
        _6 = const 42_isize;
        _5 = &mut _6;
        _4 = &(*_5);
        _20 = const _;
        _7 = &raw const (*_20);
        _19 = const _;
        _8 = &raw const (*_19);
        _10 = const 42_isize;
        _9 = &mut _10;
        _11 = &raw const (*_9);
        _14 = const 42_isize;
        _13 = &mut _14;
        _12 = &raw const (*_13);
        _17 = const 42_isize;
        _16 = &mut _17;
        _15 = &raw mut (*_16);
        _18 = _15 as *const isize (Pointer(MutToConstPointer));
        return;
    }
}

promoted[0] in main: &isize = {
    let mut _0: &isize;
    let mut _1: isize;

    bb0: {
        _1 = const 42_isize;
        _0 = &_1;
        return;
    }
}

promoted[1] in main: &isize = {
    let mut _0: &isize;
    let mut _1: isize;

    bb0: {
        _1 = const 42_isize;
        _0 = &_1;
        return;
    }
}
