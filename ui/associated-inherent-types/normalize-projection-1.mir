// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
fn main() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/associated-inherent-types/normalize-projection-1.rs:20:11: 20:11
    let mut _1: std::string::String;     // in scope 0 at ui/associated-inherent-types/normalize-projection-1.rs:21:24: 21:37
    scope 1 {
    }

    bb0: {
        _1 = String::new() -> bb1;       // scope 0 at ui/associated-inherent-types/normalize-projection-1.rs:21:24: 21:37
                                         // mir::Constant
                                         // + span: ui/associated-inherent-types/normalize-projection-1.rs:21:24: 21:35
                                         // + literal: Const { ty: fn() -> String {String::new}, val: Value(<ZST>) }
    }

    bb1: {
        drop(_1) -> bb2;                 // scope 0 at ui/associated-inherent-types/normalize-projection-1.rs:21:37: 21:38
    }

    bb2: {
        return;                          // scope 0 at ui/associated-inherent-types/normalize-projection-1.rs:22:2: 22:2
    }
}
