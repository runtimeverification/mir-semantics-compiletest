// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
fn main() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/associated-inherent-types/struct-generics.rs:12:11: 12:11
    scope 1 {
    }

    bb0: {
        return;                          // scope 0 at ui/associated-inherent-types/struct-generics.rs:15:2: 15:2
    }
}

fn S(_1: T) -> S<T> {
    let mut _0: S<T>;                    // return place in scope 0 at ui/associated-inherent-types/struct-generics.rs:6:1: 6:12

    bb0: {
        _0 = S::<T>(move _1);            // scope 0 at ui/associated-inherent-types/struct-generics.rs:6:1: 6:12
        return;                          // scope 0 at ui/associated-inherent-types/struct-generics.rs:6:1: 6:12
    }
}

// MIR FOR CTFE
fn S(_1: T) -> S<T> {
    let mut _0: S<T>;                    // return place in scope 0 at ui/associated-inherent-types/struct-generics.rs:6:1: 6:12

    bb0: {
        _0 = S::<T>(move _1);            // scope 0 at ui/associated-inherent-types/struct-generics.rs:6:1: 6:12
        return;                          // scope 0 at ui/associated-inherent-types/struct-generics.rs:6:1: 6:12
    }
}
